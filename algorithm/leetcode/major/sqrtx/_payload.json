[{"data":1,"prerenderedAt":1207},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sqrtx":543,"/algorithm/leetcode/major/sqrtx-surround":1202},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":135,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":134,"description":547,"url":548,"body":549,"_type":1197,"_id":1198,"_source":1199,"_file":1200,"_extension":1201},"major",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":550,"children":551,"toc":1191},"root",[552,559,564,569,574,604,609,640,645,655,661,666,672,1185],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":553,"tag":554,"props":570,"children":571},{},[572],{"type":558,"value":573},"示例 1：",{"type":553,"tag":575,"props":576,"children":579},"pre",{"className":577,"code":578,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：x = 4\n输出：2\n",[580],{"type":553,"tag":581,"props":582,"children":583},"code",{"__ignoreMap":546},[584,595],{"type":553,"tag":585,"props":586,"children":589},"span",{"class":587,"line":588},"line",1,[590],{"type":553,"tag":585,"props":591,"children":592},{},[593],{"type":558,"value":594},"输入：x = 4\n",{"type":553,"tag":585,"props":596,"children":598},{"class":587,"line":597},2,[599],{"type":553,"tag":585,"props":600,"children":601},{},[602],{"type":558,"value":603},"输出：2\n",{"type":553,"tag":554,"props":605,"children":606},{},[607],{"type":558,"value":608},"示例 2：",{"type":553,"tag":575,"props":610,"children":612},{"className":577,"code":611,"language":558,"meta":546,"style":546},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[613],{"type":553,"tag":581,"props":614,"children":615},{"__ignoreMap":546},[616,624,631],{"type":553,"tag":585,"props":617,"children":618},{"class":587,"line":588},[619],{"type":553,"tag":585,"props":620,"children":621},{},[622],{"type":558,"value":623},"输入：x = 8\n",{"type":553,"tag":585,"props":625,"children":626},{"class":587,"line":597},[627],{"type":553,"tag":585,"props":628,"children":629},{},[630],{"type":558,"value":603},{"type":553,"tag":585,"props":632,"children":634},{"class":587,"line":633},3,[635],{"type":553,"tag":585,"props":636,"children":637},{},[638],{"type":558,"value":639},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":553,"tag":554,"props":641,"children":642},{},[643],{"type":558,"value":644},"提示：",{"type":553,"tag":646,"props":647,"children":648},"ul",{},[649],{"type":553,"tag":650,"props":651,"children":652},"li",{},[653],{"type":558,"value":654},"0 \u003C= x \u003C= 2^31 - 1",{"type":553,"tag":656,"props":657,"children":659},"h2",{"id":658},"解题思路",[660],{"type":558,"value":658},{"type":553,"tag":656,"props":662,"children":664},{"id":663},"实现",[665],{"type":558,"value":663},{"type":553,"tag":667,"props":668,"children":670},"h3",{"id":669},"二分查找",[671],{"type":558,"value":669},{"type":553,"tag":575,"props":673,"children":677},{"className":674,"code":675,"language":676,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[678],{"type":553,"tag":581,"props":679,"children":680},{"__ignoreMap":546},[681,690,732,761,770,816,845,871,902,937,1001,1044,1065,1094,1112,1141,1150,1159,1176],{"type":553,"tag":585,"props":682,"children":683},{"class":587,"line":588},[684],{"type":553,"tag":585,"props":685,"children":687},{"style":686},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[688],{"type":558,"value":689},"/**\n",{"type":553,"tag":585,"props":691,"children":692},{"class":587,"line":597},[693,698,704,710,715,721,726],{"type":553,"tag":585,"props":694,"children":695},{"style":686},[696],{"type":558,"value":697}," * ",{"type":553,"tag":585,"props":699,"children":701},{"style":700},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[702],{"type":558,"value":703},"@",{"type":553,"tag":585,"props":705,"children":707},{"style":706},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[708],{"type":558,"value":709},"param",{"type":553,"tag":585,"props":711,"children":712},{"style":700},[713],{"type":558,"value":714}," {",{"type":553,"tag":585,"props":716,"children":718},{"style":717},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[719],{"type":558,"value":720},"number",{"type":553,"tag":585,"props":722,"children":723},{"style":700},[724],{"type":558,"value":725},"}",{"type":553,"tag":585,"props":727,"children":729},{"style":728},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[730],{"type":558,"value":731}," x\n",{"type":553,"tag":585,"props":733,"children":734},{"class":587,"line":633},[735,739,743,748,752,756],{"type":553,"tag":585,"props":736,"children":737},{"style":686},[738],{"type":558,"value":697},{"type":553,"tag":585,"props":740,"children":741},{"style":700},[742],{"type":558,"value":703},{"type":553,"tag":585,"props":744,"children":745},{"style":706},[746],{"type":558,"value":747},"return",{"type":553,"tag":585,"props":749,"children":750},{"style":700},[751],{"type":558,"value":714},{"type":553,"tag":585,"props":753,"children":754},{"style":717},[755],{"type":558,"value":720},{"type":553,"tag":585,"props":757,"children":758},{"style":700},[759],{"type":558,"value":760},"}\n",{"type":553,"tag":585,"props":762,"children":764},{"class":587,"line":763},4,[765],{"type":553,"tag":585,"props":766,"children":767},{"style":686},[768],{"type":558,"value":769}," */\n",{"type":553,"tag":585,"props":771,"children":773},{"class":587,"line":772},5,[774,780,786,791,796,801,806,811],{"type":553,"tag":585,"props":775,"children":777},{"style":776},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[778],{"type":558,"value":779},"var",{"type":553,"tag":585,"props":781,"children":783},{"style":782},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[784],{"type":558,"value":785}," mySqrt",{"type":553,"tag":585,"props":787,"children":788},{"style":700},[789],{"type":558,"value":790}," =",{"type":553,"tag":585,"props":792,"children":793},{"style":776},[794],{"type":558,"value":795}," function",{"type":553,"tag":585,"props":797,"children":798},{"style":700},[799],{"type":558,"value":800}," (",{"type":553,"tag":585,"props":802,"children":803},{"style":728},[804],{"type":558,"value":805},"x",{"type":553,"tag":585,"props":807,"children":808},{"style":700},[809],{"type":558,"value":810},")",{"type":553,"tag":585,"props":812,"children":813},{"style":700},[814],{"type":558,"value":815}," {\n",{"type":553,"tag":585,"props":817,"children":819},{"class":587,"line":818},6,[820,825,830,834,840],{"type":553,"tag":585,"props":821,"children":822},{"style":776},[823],{"type":558,"value":824},"  let",{"type":553,"tag":585,"props":826,"children":827},{"style":728},[828],{"type":558,"value":829}," left",{"type":553,"tag":585,"props":831,"children":832},{"style":700},[833],{"type":558,"value":790},{"type":553,"tag":585,"props":835,"children":837},{"style":836},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[838],{"type":558,"value":839}," 0",{"type":553,"tag":585,"props":841,"children":842},{"style":700},[843],{"type":558,"value":844},";\n",{"type":553,"tag":585,"props":846,"children":848},{"class":587,"line":847},7,[849,853,858,862,867],{"type":553,"tag":585,"props":850,"children":851},{"style":776},[852],{"type":558,"value":824},{"type":553,"tag":585,"props":854,"children":855},{"style":728},[856],{"type":558,"value":857}," right",{"type":553,"tag":585,"props":859,"children":860},{"style":700},[861],{"type":558,"value":790},{"type":553,"tag":585,"props":863,"children":864},{"style":728},[865],{"type":558,"value":866}," x",{"type":553,"tag":585,"props":868,"children":869},{"style":700},[870],{"type":558,"value":844},{"type":553,"tag":585,"props":872,"children":874},{"class":587,"line":873},8,[875,879,884,888,893,898],{"type":553,"tag":585,"props":876,"children":877},{"style":776},[878],{"type":558,"value":824},{"type":553,"tag":585,"props":880,"children":881},{"style":728},[882],{"type":558,"value":883}," answer",{"type":553,"tag":585,"props":885,"children":886},{"style":700},[887],{"type":558,"value":790},{"type":553,"tag":585,"props":889,"children":890},{"style":776},[891],{"type":558,"value":892}," -",{"type":553,"tag":585,"props":894,"children":895},{"style":836},[896],{"type":558,"value":897},"1",{"type":553,"tag":585,"props":899,"children":900},{"style":700},[901],{"type":558,"value":844},{"type":553,"tag":585,"props":903,"children":905},{"class":587,"line":904},9,[906,911,915,920,925,929,933],{"type":553,"tag":585,"props":907,"children":908},{"style":706},[909],{"type":558,"value":910},"  while",{"type":553,"tag":585,"props":912,"children":913},{"style":700},[914],{"type":558,"value":800},{"type":553,"tag":585,"props":916,"children":917},{"style":728},[918],{"type":558,"value":919},"left",{"type":553,"tag":585,"props":921,"children":922},{"style":700},[923],{"type":558,"value":924}," \u003C=",{"type":553,"tag":585,"props":926,"children":927},{"style":728},[928],{"type":558,"value":857},{"type":553,"tag":585,"props":930,"children":931},{"style":700},[932],{"type":558,"value":810},{"type":553,"tag":585,"props":934,"children":935},{"style":700},[936],{"type":558,"value":815},{"type":553,"tag":585,"props":938,"children":940},{"class":587,"line":939},10,[941,946,951,955,959,964,969,974,978,982,986,991,996],{"type":553,"tag":585,"props":942,"children":943},{"style":776},[944],{"type":558,"value":945},"    let",{"type":553,"tag":585,"props":947,"children":948},{"style":728},[949],{"type":558,"value":950}," middle",{"type":553,"tag":585,"props":952,"children":953},{"style":700},[954],{"type":558,"value":790},{"type":553,"tag":585,"props":956,"children":957},{"style":728},[958],{"type":558,"value":829},{"type":553,"tag":585,"props":960,"children":961},{"style":776},[962],{"type":558,"value":963}," +",{"type":553,"tag":585,"props":965,"children":966},{"style":700},[967],{"type":558,"value":968}," ((",{"type":553,"tag":585,"props":970,"children":971},{"style":728},[972],{"type":558,"value":973},"right",{"type":553,"tag":585,"props":975,"children":976},{"style":776},[977],{"type":558,"value":892},{"type":553,"tag":585,"props":979,"children":980},{"style":728},[981],{"type":558,"value":829},{"type":553,"tag":585,"props":983,"children":984},{"style":700},[985],{"type":558,"value":810},{"type":553,"tag":585,"props":987,"children":988},{"style":776},[989],{"type":558,"value":990}," >>",{"type":553,"tag":585,"props":992,"children":993},{"style":836},[994],{"type":558,"value":995}," 1",{"type":553,"tag":585,"props":997,"children":998},{"style":700},[999],{"type":558,"value":1000},");\n",{"type":553,"tag":585,"props":1002,"children":1004},{"class":587,"line":1003},11,[1005,1010,1014,1019,1024,1028,1032,1036,1040],{"type":553,"tag":585,"props":1006,"children":1007},{"style":706},[1008],{"type":558,"value":1009},"    if",{"type":553,"tag":585,"props":1011,"children":1012},{"style":700},[1013],{"type":558,"value":800},{"type":553,"tag":585,"props":1015,"children":1016},{"style":728},[1017],{"type":558,"value":1018},"middle",{"type":553,"tag":585,"props":1020,"children":1021},{"style":776},[1022],{"type":558,"value":1023}," *",{"type":553,"tag":585,"props":1025,"children":1026},{"style":728},[1027],{"type":558,"value":950},{"type":553,"tag":585,"props":1029,"children":1030},{"style":700},[1031],{"type":558,"value":924},{"type":553,"tag":585,"props":1033,"children":1034},{"style":728},[1035],{"type":558,"value":866},{"type":553,"tag":585,"props":1037,"children":1038},{"style":700},[1039],{"type":558,"value":810},{"type":553,"tag":585,"props":1041,"children":1042},{"style":700},[1043],{"type":558,"value":815},{"type":553,"tag":585,"props":1045,"children":1047},{"class":587,"line":1046},12,[1048,1053,1057,1061],{"type":553,"tag":585,"props":1049,"children":1050},{"style":728},[1051],{"type":558,"value":1052},"      answer",{"type":553,"tag":585,"props":1054,"children":1055},{"style":700},[1056],{"type":558,"value":790},{"type":553,"tag":585,"props":1058,"children":1059},{"style":728},[1060],{"type":558,"value":950},{"type":553,"tag":585,"props":1062,"children":1063},{"style":700},[1064],{"type":558,"value":844},{"type":553,"tag":585,"props":1066,"children":1068},{"class":587,"line":1067},13,[1069,1074,1078,1082,1086,1090],{"type":553,"tag":585,"props":1070,"children":1071},{"style":728},[1072],{"type":558,"value":1073},"      left",{"type":553,"tag":585,"props":1075,"children":1076},{"style":700},[1077],{"type":558,"value":790},{"type":553,"tag":585,"props":1079,"children":1080},{"style":728},[1081],{"type":558,"value":950},{"type":553,"tag":585,"props":1083,"children":1084},{"style":776},[1085],{"type":558,"value":963},{"type":553,"tag":585,"props":1087,"children":1088},{"style":836},[1089],{"type":558,"value":995},{"type":553,"tag":585,"props":1091,"children":1092},{"style":700},[1093],{"type":558,"value":844},{"type":553,"tag":585,"props":1095,"children":1097},{"class":587,"line":1096},14,[1098,1103,1108],{"type":553,"tag":585,"props":1099,"children":1100},{"style":700},[1101],{"type":558,"value":1102},"    }",{"type":553,"tag":585,"props":1104,"children":1105},{"style":706},[1106],{"type":558,"value":1107}," else",{"type":553,"tag":585,"props":1109,"children":1110},{"style":700},[1111],{"type":558,"value":815},{"type":553,"tag":585,"props":1113,"children":1115},{"class":587,"line":1114},15,[1116,1121,1125,1129,1133,1137],{"type":553,"tag":585,"props":1117,"children":1118},{"style":728},[1119],{"type":558,"value":1120},"      right",{"type":553,"tag":585,"props":1122,"children":1123},{"style":700},[1124],{"type":558,"value":790},{"type":553,"tag":585,"props":1126,"children":1127},{"style":728},[1128],{"type":558,"value":950},{"type":553,"tag":585,"props":1130,"children":1131},{"style":776},[1132],{"type":558,"value":892},{"type":553,"tag":585,"props":1134,"children":1135},{"style":836},[1136],{"type":558,"value":995},{"type":553,"tag":585,"props":1138,"children":1139},{"style":700},[1140],{"type":558,"value":844},{"type":553,"tag":585,"props":1142,"children":1144},{"class":587,"line":1143},16,[1145],{"type":553,"tag":585,"props":1146,"children":1147},{"style":700},[1148],{"type":558,"value":1149},"    }\n",{"type":553,"tag":585,"props":1151,"children":1153},{"class":587,"line":1152},17,[1154],{"type":553,"tag":585,"props":1155,"children":1156},{"style":700},[1157],{"type":558,"value":1158},"  }\n",{"type":553,"tag":585,"props":1160,"children":1162},{"class":587,"line":1161},18,[1163,1168,1172],{"type":553,"tag":585,"props":1164,"children":1165},{"style":706},[1166],{"type":558,"value":1167},"  return",{"type":553,"tag":585,"props":1169,"children":1170},{"style":728},[1171],{"type":558,"value":883},{"type":553,"tag":585,"props":1173,"children":1174},{"style":700},[1175],{"type":558,"value":844},{"type":553,"tag":585,"props":1177,"children":1179},{"class":587,"line":1178},19,[1180],{"type":553,"tag":585,"props":1181,"children":1182},{"style":700},[1183],{"type":558,"value":1184},"};\n",{"type":553,"tag":1186,"props":1187,"children":1188},"style",{},[1189],{"type":558,"value":1190},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":772,"depth":772,"links":1192},[1193,1194],{"id":658,"depth":597,"text":658},{"id":663,"depth":597,"text":663,"children":1195},[1196],{"id":669,"depth":633,"text":669},"markdown","content:1.algorithm:3.leetcode:3.major:69.sqrtx.md","content","1.algorithm/3.leetcode/3.major/69.sqrtx.md","md",[1203,1205],{"_path":132,"title":131,"description":1204},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":138,"title":137,"description":1206},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1714099677804]