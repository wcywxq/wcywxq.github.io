[{"data":1,"prerenderedAt":1164},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sqrtx":500,"/algorithm/leetcode/major/sqrtx-surround":1159},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":135,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":134,"description":504,"url":505,"body":506,"_type":1154,"_id":1155,"_source":1156,"_file":1157,"_extension":1158},"major",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":507,"children":508,"toc":1148},"root",[509,516,521,526,531,561,566,597,602,612,618,623,629,1142],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":515,"value":525},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":510,"tag":511,"props":527,"children":528},{},[529],{"type":515,"value":530},"示例 1：",{"type":510,"tag":532,"props":533,"children":536},"pre",{"className":534,"code":535,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：x = 4\n输出：2\n",[537],{"type":510,"tag":538,"props":539,"children":540},"code",{"__ignoreMap":503},[541,552],{"type":510,"tag":542,"props":543,"children":546},"span",{"class":544,"line":545},"line",1,[547],{"type":510,"tag":542,"props":548,"children":549},{},[550],{"type":515,"value":551},"输入：x = 4\n",{"type":510,"tag":542,"props":553,"children":555},{"class":544,"line":554},2,[556],{"type":510,"tag":542,"props":557,"children":558},{},[559],{"type":515,"value":560},"输出：2\n",{"type":510,"tag":511,"props":562,"children":563},{},[564],{"type":515,"value":565},"示例 2：",{"type":510,"tag":532,"props":567,"children":569},{"className":534,"code":568,"language":515,"meta":503,"style":503},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[570],{"type":510,"tag":538,"props":571,"children":572},{"__ignoreMap":503},[573,581,588],{"type":510,"tag":542,"props":574,"children":575},{"class":544,"line":545},[576],{"type":510,"tag":542,"props":577,"children":578},{},[579],{"type":515,"value":580},"输入：x = 8\n",{"type":510,"tag":542,"props":582,"children":583},{"class":544,"line":554},[584],{"type":510,"tag":542,"props":585,"children":586},{},[587],{"type":515,"value":560},{"type":510,"tag":542,"props":589,"children":591},{"class":544,"line":590},3,[592],{"type":510,"tag":542,"props":593,"children":594},{},[595],{"type":515,"value":596},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":510,"tag":511,"props":598,"children":599},{},[600],{"type":515,"value":601},"提示：",{"type":510,"tag":603,"props":604,"children":605},"ul",{},[606],{"type":510,"tag":607,"props":608,"children":609},"li",{},[610],{"type":515,"value":611},"0 \u003C= x \u003C= 2^31 - 1",{"type":510,"tag":613,"props":614,"children":616},"h2",{"id":615},"解题思路",[617],{"type":515,"value":615},{"type":510,"tag":613,"props":619,"children":621},{"id":620},"实现",[622],{"type":515,"value":620},{"type":510,"tag":624,"props":625,"children":627},"h3",{"id":626},"二分查找",[628],{"type":515,"value":626},{"type":510,"tag":532,"props":630,"children":634},{"className":631,"code":632,"language":633,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[635],{"type":510,"tag":538,"props":636,"children":637},{"__ignoreMap":503},[638,647,689,718,727,773,802,828,859,894,958,1001,1022,1051,1069,1098,1107,1116,1133],{"type":510,"tag":542,"props":639,"children":640},{"class":544,"line":545},[641],{"type":510,"tag":542,"props":642,"children":644},{"style":643},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[645],{"type":515,"value":646},"/**\n",{"type":510,"tag":542,"props":648,"children":649},{"class":544,"line":554},[650,655,661,667,672,678,683],{"type":510,"tag":542,"props":651,"children":652},{"style":643},[653],{"type":515,"value":654}," * ",{"type":510,"tag":542,"props":656,"children":658},{"style":657},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[659],{"type":515,"value":660},"@",{"type":510,"tag":542,"props":662,"children":664},{"style":663},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[665],{"type":515,"value":666},"param",{"type":510,"tag":542,"props":668,"children":669},{"style":657},[670],{"type":515,"value":671}," {",{"type":510,"tag":542,"props":673,"children":675},{"style":674},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[676],{"type":515,"value":677},"number",{"type":510,"tag":542,"props":679,"children":680},{"style":657},[681],{"type":515,"value":682},"}",{"type":510,"tag":542,"props":684,"children":686},{"style":685},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[687],{"type":515,"value":688}," x\n",{"type":510,"tag":542,"props":690,"children":691},{"class":544,"line":590},[692,696,700,705,709,713],{"type":510,"tag":542,"props":693,"children":694},{"style":643},[695],{"type":515,"value":654},{"type":510,"tag":542,"props":697,"children":698},{"style":657},[699],{"type":515,"value":660},{"type":510,"tag":542,"props":701,"children":702},{"style":663},[703],{"type":515,"value":704},"return",{"type":510,"tag":542,"props":706,"children":707},{"style":657},[708],{"type":515,"value":671},{"type":510,"tag":542,"props":710,"children":711},{"style":674},[712],{"type":515,"value":677},{"type":510,"tag":542,"props":714,"children":715},{"style":657},[716],{"type":515,"value":717},"}\n",{"type":510,"tag":542,"props":719,"children":721},{"class":544,"line":720},4,[722],{"type":510,"tag":542,"props":723,"children":724},{"style":643},[725],{"type":515,"value":726}," */\n",{"type":510,"tag":542,"props":728,"children":730},{"class":544,"line":729},5,[731,737,743,748,753,758,763,768],{"type":510,"tag":542,"props":732,"children":734},{"style":733},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[735],{"type":515,"value":736},"var",{"type":510,"tag":542,"props":738,"children":740},{"style":739},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[741],{"type":515,"value":742}," mySqrt",{"type":510,"tag":542,"props":744,"children":745},{"style":657},[746],{"type":515,"value":747}," =",{"type":510,"tag":542,"props":749,"children":750},{"style":733},[751],{"type":515,"value":752}," function",{"type":510,"tag":542,"props":754,"children":755},{"style":657},[756],{"type":515,"value":757}," (",{"type":510,"tag":542,"props":759,"children":760},{"style":685},[761],{"type":515,"value":762},"x",{"type":510,"tag":542,"props":764,"children":765},{"style":657},[766],{"type":515,"value":767},")",{"type":510,"tag":542,"props":769,"children":770},{"style":657},[771],{"type":515,"value":772}," {\n",{"type":510,"tag":542,"props":774,"children":776},{"class":544,"line":775},6,[777,782,787,791,797],{"type":510,"tag":542,"props":778,"children":779},{"style":733},[780],{"type":515,"value":781},"  let",{"type":510,"tag":542,"props":783,"children":784},{"style":685},[785],{"type":515,"value":786}," left",{"type":510,"tag":542,"props":788,"children":789},{"style":657},[790],{"type":515,"value":747},{"type":510,"tag":542,"props":792,"children":794},{"style":793},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[795],{"type":515,"value":796}," 0",{"type":510,"tag":542,"props":798,"children":799},{"style":657},[800],{"type":515,"value":801},";\n",{"type":510,"tag":542,"props":803,"children":805},{"class":544,"line":804},7,[806,810,815,819,824],{"type":510,"tag":542,"props":807,"children":808},{"style":733},[809],{"type":515,"value":781},{"type":510,"tag":542,"props":811,"children":812},{"style":685},[813],{"type":515,"value":814}," right",{"type":510,"tag":542,"props":816,"children":817},{"style":657},[818],{"type":515,"value":747},{"type":510,"tag":542,"props":820,"children":821},{"style":685},[822],{"type":515,"value":823}," x",{"type":510,"tag":542,"props":825,"children":826},{"style":657},[827],{"type":515,"value":801},{"type":510,"tag":542,"props":829,"children":831},{"class":544,"line":830},8,[832,836,841,845,850,855],{"type":510,"tag":542,"props":833,"children":834},{"style":733},[835],{"type":515,"value":781},{"type":510,"tag":542,"props":837,"children":838},{"style":685},[839],{"type":515,"value":840}," answer",{"type":510,"tag":542,"props":842,"children":843},{"style":657},[844],{"type":515,"value":747},{"type":510,"tag":542,"props":846,"children":847},{"style":733},[848],{"type":515,"value":849}," -",{"type":510,"tag":542,"props":851,"children":852},{"style":793},[853],{"type":515,"value":854},"1",{"type":510,"tag":542,"props":856,"children":857},{"style":657},[858],{"type":515,"value":801},{"type":510,"tag":542,"props":860,"children":862},{"class":544,"line":861},9,[863,868,872,877,882,886,890],{"type":510,"tag":542,"props":864,"children":865},{"style":663},[866],{"type":515,"value":867},"  while",{"type":510,"tag":542,"props":869,"children":870},{"style":657},[871],{"type":515,"value":757},{"type":510,"tag":542,"props":873,"children":874},{"style":685},[875],{"type":515,"value":876},"left",{"type":510,"tag":542,"props":878,"children":879},{"style":657},[880],{"type":515,"value":881}," \u003C=",{"type":510,"tag":542,"props":883,"children":884},{"style":685},[885],{"type":515,"value":814},{"type":510,"tag":542,"props":887,"children":888},{"style":657},[889],{"type":515,"value":767},{"type":510,"tag":542,"props":891,"children":892},{"style":657},[893],{"type":515,"value":772},{"type":510,"tag":542,"props":895,"children":897},{"class":544,"line":896},10,[898,903,908,912,916,921,926,931,935,939,943,948,953],{"type":510,"tag":542,"props":899,"children":900},{"style":733},[901],{"type":515,"value":902},"    let",{"type":510,"tag":542,"props":904,"children":905},{"style":685},[906],{"type":515,"value":907}," middle",{"type":510,"tag":542,"props":909,"children":910},{"style":657},[911],{"type":515,"value":747},{"type":510,"tag":542,"props":913,"children":914},{"style":685},[915],{"type":515,"value":786},{"type":510,"tag":542,"props":917,"children":918},{"style":733},[919],{"type":515,"value":920}," +",{"type":510,"tag":542,"props":922,"children":923},{"style":657},[924],{"type":515,"value":925}," ((",{"type":510,"tag":542,"props":927,"children":928},{"style":685},[929],{"type":515,"value":930},"right",{"type":510,"tag":542,"props":932,"children":933},{"style":733},[934],{"type":515,"value":849},{"type":510,"tag":542,"props":936,"children":937},{"style":685},[938],{"type":515,"value":786},{"type":510,"tag":542,"props":940,"children":941},{"style":657},[942],{"type":515,"value":767},{"type":510,"tag":542,"props":944,"children":945},{"style":733},[946],{"type":515,"value":947}," >>",{"type":510,"tag":542,"props":949,"children":950},{"style":793},[951],{"type":515,"value":952}," 1",{"type":510,"tag":542,"props":954,"children":955},{"style":657},[956],{"type":515,"value":957},");\n",{"type":510,"tag":542,"props":959,"children":961},{"class":544,"line":960},11,[962,967,971,976,981,985,989,993,997],{"type":510,"tag":542,"props":963,"children":964},{"style":663},[965],{"type":515,"value":966},"    if",{"type":510,"tag":542,"props":968,"children":969},{"style":657},[970],{"type":515,"value":757},{"type":510,"tag":542,"props":972,"children":973},{"style":685},[974],{"type":515,"value":975},"middle",{"type":510,"tag":542,"props":977,"children":978},{"style":733},[979],{"type":515,"value":980}," *",{"type":510,"tag":542,"props":982,"children":983},{"style":685},[984],{"type":515,"value":907},{"type":510,"tag":542,"props":986,"children":987},{"style":657},[988],{"type":515,"value":881},{"type":510,"tag":542,"props":990,"children":991},{"style":685},[992],{"type":515,"value":823},{"type":510,"tag":542,"props":994,"children":995},{"style":657},[996],{"type":515,"value":767},{"type":510,"tag":542,"props":998,"children":999},{"style":657},[1000],{"type":515,"value":772},{"type":510,"tag":542,"props":1002,"children":1004},{"class":544,"line":1003},12,[1005,1010,1014,1018],{"type":510,"tag":542,"props":1006,"children":1007},{"style":685},[1008],{"type":515,"value":1009},"      answer",{"type":510,"tag":542,"props":1011,"children":1012},{"style":657},[1013],{"type":515,"value":747},{"type":510,"tag":542,"props":1015,"children":1016},{"style":685},[1017],{"type":515,"value":907},{"type":510,"tag":542,"props":1019,"children":1020},{"style":657},[1021],{"type":515,"value":801},{"type":510,"tag":542,"props":1023,"children":1025},{"class":544,"line":1024},13,[1026,1031,1035,1039,1043,1047],{"type":510,"tag":542,"props":1027,"children":1028},{"style":685},[1029],{"type":515,"value":1030},"      left",{"type":510,"tag":542,"props":1032,"children":1033},{"style":657},[1034],{"type":515,"value":747},{"type":510,"tag":542,"props":1036,"children":1037},{"style":685},[1038],{"type":515,"value":907},{"type":510,"tag":542,"props":1040,"children":1041},{"style":733},[1042],{"type":515,"value":920},{"type":510,"tag":542,"props":1044,"children":1045},{"style":793},[1046],{"type":515,"value":952},{"type":510,"tag":542,"props":1048,"children":1049},{"style":657},[1050],{"type":515,"value":801},{"type":510,"tag":542,"props":1052,"children":1054},{"class":544,"line":1053},14,[1055,1060,1065],{"type":510,"tag":542,"props":1056,"children":1057},{"style":657},[1058],{"type":515,"value":1059},"    }",{"type":510,"tag":542,"props":1061,"children":1062},{"style":663},[1063],{"type":515,"value":1064}," else",{"type":510,"tag":542,"props":1066,"children":1067},{"style":657},[1068],{"type":515,"value":772},{"type":510,"tag":542,"props":1070,"children":1072},{"class":544,"line":1071},15,[1073,1078,1082,1086,1090,1094],{"type":510,"tag":542,"props":1074,"children":1075},{"style":685},[1076],{"type":515,"value":1077},"      right",{"type":510,"tag":542,"props":1079,"children":1080},{"style":657},[1081],{"type":515,"value":747},{"type":510,"tag":542,"props":1083,"children":1084},{"style":685},[1085],{"type":515,"value":907},{"type":510,"tag":542,"props":1087,"children":1088},{"style":733},[1089],{"type":515,"value":849},{"type":510,"tag":542,"props":1091,"children":1092},{"style":793},[1093],{"type":515,"value":952},{"type":510,"tag":542,"props":1095,"children":1096},{"style":657},[1097],{"type":515,"value":801},{"type":510,"tag":542,"props":1099,"children":1101},{"class":544,"line":1100},16,[1102],{"type":510,"tag":542,"props":1103,"children":1104},{"style":657},[1105],{"type":515,"value":1106},"    }\n",{"type":510,"tag":542,"props":1108,"children":1110},{"class":544,"line":1109},17,[1111],{"type":510,"tag":542,"props":1112,"children":1113},{"style":657},[1114],{"type":515,"value":1115},"  }\n",{"type":510,"tag":542,"props":1117,"children":1119},{"class":544,"line":1118},18,[1120,1125,1129],{"type":510,"tag":542,"props":1121,"children":1122},{"style":663},[1123],{"type":515,"value":1124},"  return",{"type":510,"tag":542,"props":1126,"children":1127},{"style":685},[1128],{"type":515,"value":840},{"type":510,"tag":542,"props":1130,"children":1131},{"style":657},[1132],{"type":515,"value":801},{"type":510,"tag":542,"props":1134,"children":1136},{"class":544,"line":1135},19,[1137],{"type":510,"tag":542,"props":1138,"children":1139},{"style":657},[1140],{"type":515,"value":1141},"};\n",{"type":510,"tag":1143,"props":1144,"children":1145},"style",{},[1146],{"type":515,"value":1147},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":729,"depth":729,"links":1149},[1150,1151],{"id":615,"depth":554,"text":615},{"id":620,"depth":554,"text":620,"children":1152},[1153],{"id":626,"depth":590,"text":626},"markdown","content:1.algorithm:3.leetcode:3.major:69.sqrtx.md","content","1.algorithm/3.leetcode/3.major/69.sqrtx.md","md",[1160,1162],{"_path":132,"title":131,"description":1161},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":138,"title":137,"description":1163},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1714054336942]