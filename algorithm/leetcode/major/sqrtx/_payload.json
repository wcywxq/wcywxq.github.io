[{"data":1,"prerenderedAt":1142},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sqrtx":478,"/algorithm/leetcode/major/sqrtx-surround":1137},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":135,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":134,"description":482,"url":483,"body":484,"_type":1132,"_id":1133,"_source":1134,"_file":1135,"_extension":1136},"major",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":485,"children":486,"toc":1126},"root",[487,494,499,504,509,539,544,575,580,590,596,601,607,1120],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":488,"tag":489,"props":500,"children":501},{},[502],{"type":493,"value":503},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":488,"tag":489,"props":505,"children":506},{},[507],{"type":493,"value":508},"示例 1：",{"type":488,"tag":510,"props":511,"children":514},"pre",{"className":512,"code":513,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：x = 4\n输出：2\n",[515],{"type":488,"tag":516,"props":517,"children":518},"code",{"__ignoreMap":481},[519,530],{"type":488,"tag":520,"props":521,"children":524},"span",{"class":522,"line":523},"line",1,[525],{"type":488,"tag":520,"props":526,"children":527},{},[528],{"type":493,"value":529},"输入：x = 4\n",{"type":488,"tag":520,"props":531,"children":533},{"class":522,"line":532},2,[534],{"type":488,"tag":520,"props":535,"children":536},{},[537],{"type":493,"value":538},"输出：2\n",{"type":488,"tag":489,"props":540,"children":541},{},[542],{"type":493,"value":543},"示例 2：",{"type":488,"tag":510,"props":545,"children":547},{"className":512,"code":546,"language":493,"meta":481,"style":481},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[548],{"type":488,"tag":516,"props":549,"children":550},{"__ignoreMap":481},[551,559,566],{"type":488,"tag":520,"props":552,"children":553},{"class":522,"line":523},[554],{"type":488,"tag":520,"props":555,"children":556},{},[557],{"type":493,"value":558},"输入：x = 8\n",{"type":488,"tag":520,"props":560,"children":561},{"class":522,"line":532},[562],{"type":488,"tag":520,"props":563,"children":564},{},[565],{"type":493,"value":538},{"type":488,"tag":520,"props":567,"children":569},{"class":522,"line":568},3,[570],{"type":488,"tag":520,"props":571,"children":572},{},[573],{"type":493,"value":574},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":488,"tag":489,"props":576,"children":577},{},[578],{"type":493,"value":579},"提示：",{"type":488,"tag":581,"props":582,"children":583},"ul",{},[584],{"type":488,"tag":585,"props":586,"children":587},"li",{},[588],{"type":493,"value":589},"0 \u003C= x \u003C= 2^31 - 1",{"type":488,"tag":591,"props":592,"children":594},"h2",{"id":593},"解题思路",[595],{"type":493,"value":593},{"type":488,"tag":591,"props":597,"children":599},{"id":598},"实现",[600],{"type":493,"value":598},{"type":488,"tag":602,"props":603,"children":605},"h3",{"id":604},"二分查找",[606],{"type":493,"value":604},{"type":488,"tag":510,"props":608,"children":612},{"className":609,"code":610,"language":611,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[613],{"type":488,"tag":516,"props":614,"children":615},{"__ignoreMap":481},[616,625,667,696,705,751,780,806,837,872,936,979,1000,1029,1047,1076,1085,1094,1111],{"type":488,"tag":520,"props":617,"children":618},{"class":522,"line":523},[619],{"type":488,"tag":520,"props":620,"children":622},{"style":621},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[623],{"type":493,"value":624},"/**\n",{"type":488,"tag":520,"props":626,"children":627},{"class":522,"line":532},[628,633,639,645,650,656,661],{"type":488,"tag":520,"props":629,"children":630},{"style":621},[631],{"type":493,"value":632}," * ",{"type":488,"tag":520,"props":634,"children":636},{"style":635},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[637],{"type":493,"value":638},"@",{"type":488,"tag":520,"props":640,"children":642},{"style":641},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[643],{"type":493,"value":644},"param",{"type":488,"tag":520,"props":646,"children":647},{"style":635},[648],{"type":493,"value":649}," {",{"type":488,"tag":520,"props":651,"children":653},{"style":652},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[654],{"type":493,"value":655},"number",{"type":488,"tag":520,"props":657,"children":658},{"style":635},[659],{"type":493,"value":660},"}",{"type":488,"tag":520,"props":662,"children":664},{"style":663},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[665],{"type":493,"value":666}," x\n",{"type":488,"tag":520,"props":668,"children":669},{"class":522,"line":568},[670,674,678,683,687,691],{"type":488,"tag":520,"props":671,"children":672},{"style":621},[673],{"type":493,"value":632},{"type":488,"tag":520,"props":675,"children":676},{"style":635},[677],{"type":493,"value":638},{"type":488,"tag":520,"props":679,"children":680},{"style":641},[681],{"type":493,"value":682},"return",{"type":488,"tag":520,"props":684,"children":685},{"style":635},[686],{"type":493,"value":649},{"type":488,"tag":520,"props":688,"children":689},{"style":652},[690],{"type":493,"value":655},{"type":488,"tag":520,"props":692,"children":693},{"style":635},[694],{"type":493,"value":695},"}\n",{"type":488,"tag":520,"props":697,"children":699},{"class":522,"line":698},4,[700],{"type":488,"tag":520,"props":701,"children":702},{"style":621},[703],{"type":493,"value":704}," */\n",{"type":488,"tag":520,"props":706,"children":708},{"class":522,"line":707},5,[709,715,721,726,731,736,741,746],{"type":488,"tag":520,"props":710,"children":712},{"style":711},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[713],{"type":493,"value":714},"var",{"type":488,"tag":520,"props":716,"children":718},{"style":717},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[719],{"type":493,"value":720}," mySqrt",{"type":488,"tag":520,"props":722,"children":723},{"style":635},[724],{"type":493,"value":725}," =",{"type":488,"tag":520,"props":727,"children":728},{"style":711},[729],{"type":493,"value":730}," function",{"type":488,"tag":520,"props":732,"children":733},{"style":635},[734],{"type":493,"value":735}," (",{"type":488,"tag":520,"props":737,"children":738},{"style":663},[739],{"type":493,"value":740},"x",{"type":488,"tag":520,"props":742,"children":743},{"style":635},[744],{"type":493,"value":745},")",{"type":488,"tag":520,"props":747,"children":748},{"style":635},[749],{"type":493,"value":750}," {\n",{"type":488,"tag":520,"props":752,"children":754},{"class":522,"line":753},6,[755,760,765,769,775],{"type":488,"tag":520,"props":756,"children":757},{"style":711},[758],{"type":493,"value":759},"  let",{"type":488,"tag":520,"props":761,"children":762},{"style":663},[763],{"type":493,"value":764}," left",{"type":488,"tag":520,"props":766,"children":767},{"style":635},[768],{"type":493,"value":725},{"type":488,"tag":520,"props":770,"children":772},{"style":771},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[773],{"type":493,"value":774}," 0",{"type":488,"tag":520,"props":776,"children":777},{"style":635},[778],{"type":493,"value":779},";\n",{"type":488,"tag":520,"props":781,"children":783},{"class":522,"line":782},7,[784,788,793,797,802],{"type":488,"tag":520,"props":785,"children":786},{"style":711},[787],{"type":493,"value":759},{"type":488,"tag":520,"props":789,"children":790},{"style":663},[791],{"type":493,"value":792}," right",{"type":488,"tag":520,"props":794,"children":795},{"style":635},[796],{"type":493,"value":725},{"type":488,"tag":520,"props":798,"children":799},{"style":663},[800],{"type":493,"value":801}," x",{"type":488,"tag":520,"props":803,"children":804},{"style":635},[805],{"type":493,"value":779},{"type":488,"tag":520,"props":807,"children":809},{"class":522,"line":808},8,[810,814,819,823,828,833],{"type":488,"tag":520,"props":811,"children":812},{"style":711},[813],{"type":493,"value":759},{"type":488,"tag":520,"props":815,"children":816},{"style":663},[817],{"type":493,"value":818}," answer",{"type":488,"tag":520,"props":820,"children":821},{"style":635},[822],{"type":493,"value":725},{"type":488,"tag":520,"props":824,"children":825},{"style":711},[826],{"type":493,"value":827}," -",{"type":488,"tag":520,"props":829,"children":830},{"style":771},[831],{"type":493,"value":832},"1",{"type":488,"tag":520,"props":834,"children":835},{"style":635},[836],{"type":493,"value":779},{"type":488,"tag":520,"props":838,"children":840},{"class":522,"line":839},9,[841,846,850,855,860,864,868],{"type":488,"tag":520,"props":842,"children":843},{"style":641},[844],{"type":493,"value":845},"  while",{"type":488,"tag":520,"props":847,"children":848},{"style":635},[849],{"type":493,"value":735},{"type":488,"tag":520,"props":851,"children":852},{"style":663},[853],{"type":493,"value":854},"left",{"type":488,"tag":520,"props":856,"children":857},{"style":635},[858],{"type":493,"value":859}," \u003C=",{"type":488,"tag":520,"props":861,"children":862},{"style":663},[863],{"type":493,"value":792},{"type":488,"tag":520,"props":865,"children":866},{"style":635},[867],{"type":493,"value":745},{"type":488,"tag":520,"props":869,"children":870},{"style":635},[871],{"type":493,"value":750},{"type":488,"tag":520,"props":873,"children":875},{"class":522,"line":874},10,[876,881,886,890,894,899,904,909,913,917,921,926,931],{"type":488,"tag":520,"props":877,"children":878},{"style":711},[879],{"type":493,"value":880},"    let",{"type":488,"tag":520,"props":882,"children":883},{"style":663},[884],{"type":493,"value":885}," middle",{"type":488,"tag":520,"props":887,"children":888},{"style":635},[889],{"type":493,"value":725},{"type":488,"tag":520,"props":891,"children":892},{"style":663},[893],{"type":493,"value":764},{"type":488,"tag":520,"props":895,"children":896},{"style":711},[897],{"type":493,"value":898}," +",{"type":488,"tag":520,"props":900,"children":901},{"style":635},[902],{"type":493,"value":903}," ((",{"type":488,"tag":520,"props":905,"children":906},{"style":663},[907],{"type":493,"value":908},"right",{"type":488,"tag":520,"props":910,"children":911},{"style":711},[912],{"type":493,"value":827},{"type":488,"tag":520,"props":914,"children":915},{"style":663},[916],{"type":493,"value":764},{"type":488,"tag":520,"props":918,"children":919},{"style":635},[920],{"type":493,"value":745},{"type":488,"tag":520,"props":922,"children":923},{"style":711},[924],{"type":493,"value":925}," >>",{"type":488,"tag":520,"props":927,"children":928},{"style":771},[929],{"type":493,"value":930}," 1",{"type":488,"tag":520,"props":932,"children":933},{"style":635},[934],{"type":493,"value":935},");\n",{"type":488,"tag":520,"props":937,"children":939},{"class":522,"line":938},11,[940,945,949,954,959,963,967,971,975],{"type":488,"tag":520,"props":941,"children":942},{"style":641},[943],{"type":493,"value":944},"    if",{"type":488,"tag":520,"props":946,"children":947},{"style":635},[948],{"type":493,"value":735},{"type":488,"tag":520,"props":950,"children":951},{"style":663},[952],{"type":493,"value":953},"middle",{"type":488,"tag":520,"props":955,"children":956},{"style":711},[957],{"type":493,"value":958}," *",{"type":488,"tag":520,"props":960,"children":961},{"style":663},[962],{"type":493,"value":885},{"type":488,"tag":520,"props":964,"children":965},{"style":635},[966],{"type":493,"value":859},{"type":488,"tag":520,"props":968,"children":969},{"style":663},[970],{"type":493,"value":801},{"type":488,"tag":520,"props":972,"children":973},{"style":635},[974],{"type":493,"value":745},{"type":488,"tag":520,"props":976,"children":977},{"style":635},[978],{"type":493,"value":750},{"type":488,"tag":520,"props":980,"children":982},{"class":522,"line":981},12,[983,988,992,996],{"type":488,"tag":520,"props":984,"children":985},{"style":663},[986],{"type":493,"value":987},"      answer",{"type":488,"tag":520,"props":989,"children":990},{"style":635},[991],{"type":493,"value":725},{"type":488,"tag":520,"props":993,"children":994},{"style":663},[995],{"type":493,"value":885},{"type":488,"tag":520,"props":997,"children":998},{"style":635},[999],{"type":493,"value":779},{"type":488,"tag":520,"props":1001,"children":1003},{"class":522,"line":1002},13,[1004,1009,1013,1017,1021,1025],{"type":488,"tag":520,"props":1005,"children":1006},{"style":663},[1007],{"type":493,"value":1008},"      left",{"type":488,"tag":520,"props":1010,"children":1011},{"style":635},[1012],{"type":493,"value":725},{"type":488,"tag":520,"props":1014,"children":1015},{"style":663},[1016],{"type":493,"value":885},{"type":488,"tag":520,"props":1018,"children":1019},{"style":711},[1020],{"type":493,"value":898},{"type":488,"tag":520,"props":1022,"children":1023},{"style":771},[1024],{"type":493,"value":930},{"type":488,"tag":520,"props":1026,"children":1027},{"style":635},[1028],{"type":493,"value":779},{"type":488,"tag":520,"props":1030,"children":1032},{"class":522,"line":1031},14,[1033,1038,1043],{"type":488,"tag":520,"props":1034,"children":1035},{"style":635},[1036],{"type":493,"value":1037},"    }",{"type":488,"tag":520,"props":1039,"children":1040},{"style":641},[1041],{"type":493,"value":1042}," else",{"type":488,"tag":520,"props":1044,"children":1045},{"style":635},[1046],{"type":493,"value":750},{"type":488,"tag":520,"props":1048,"children":1050},{"class":522,"line":1049},15,[1051,1056,1060,1064,1068,1072],{"type":488,"tag":520,"props":1052,"children":1053},{"style":663},[1054],{"type":493,"value":1055},"      right",{"type":488,"tag":520,"props":1057,"children":1058},{"style":635},[1059],{"type":493,"value":725},{"type":488,"tag":520,"props":1061,"children":1062},{"style":663},[1063],{"type":493,"value":885},{"type":488,"tag":520,"props":1065,"children":1066},{"style":711},[1067],{"type":493,"value":827},{"type":488,"tag":520,"props":1069,"children":1070},{"style":771},[1071],{"type":493,"value":930},{"type":488,"tag":520,"props":1073,"children":1074},{"style":635},[1075],{"type":493,"value":779},{"type":488,"tag":520,"props":1077,"children":1079},{"class":522,"line":1078},16,[1080],{"type":488,"tag":520,"props":1081,"children":1082},{"style":635},[1083],{"type":493,"value":1084},"    }\n",{"type":488,"tag":520,"props":1086,"children":1088},{"class":522,"line":1087},17,[1089],{"type":488,"tag":520,"props":1090,"children":1091},{"style":635},[1092],{"type":493,"value":1093},"  }\n",{"type":488,"tag":520,"props":1095,"children":1097},{"class":522,"line":1096},18,[1098,1103,1107],{"type":488,"tag":520,"props":1099,"children":1100},{"style":641},[1101],{"type":493,"value":1102},"  return",{"type":488,"tag":520,"props":1104,"children":1105},{"style":663},[1106],{"type":493,"value":818},{"type":488,"tag":520,"props":1108,"children":1109},{"style":635},[1110],{"type":493,"value":779},{"type":488,"tag":520,"props":1112,"children":1114},{"class":522,"line":1113},19,[1115],{"type":488,"tag":520,"props":1116,"children":1117},{"style":635},[1118],{"type":493,"value":1119},"};\n",{"type":488,"tag":1121,"props":1122,"children":1123},"style",{},[1124],{"type":493,"value":1125},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":707,"depth":707,"links":1127},[1128,1129],{"id":593,"depth":532,"text":593},{"id":598,"depth":532,"text":598,"children":1130},[1131],{"id":604,"depth":568,"text":604},"markdown","content:1.algorithm:3.leetcode:3.major:69.sqrtx.md","content","1.algorithm/3.leetcode/3.major/69.sqrtx.md","md",[1138,1140],{"_path":132,"title":131,"description":1139},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":138,"title":137,"description":1141},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1714046224999]