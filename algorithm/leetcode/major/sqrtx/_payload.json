[{"data":1,"prerenderedAt":1170},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sqrtx":506,"/algorithm/leetcode/major/sqrtx-surround":1165},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":135,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":134,"description":510,"url":511,"body":512,"_type":1160,"_id":1161,"_source":1162,"_file":1163,"_extension":1164},"major",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":513,"children":514,"toc":1154},"root",[515,522,527,532,537,567,572,603,608,618,624,629,635,1148],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":521,"value":531},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":516,"tag":517,"props":533,"children":534},{},[535],{"type":521,"value":536},"示例 1：",{"type":516,"tag":538,"props":539,"children":542},"pre",{"className":540,"code":541,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：x = 4\n输出：2\n",[543],{"type":516,"tag":544,"props":545,"children":546},"code",{"__ignoreMap":509},[547,558],{"type":516,"tag":548,"props":549,"children":552},"span",{"class":550,"line":551},"line",1,[553],{"type":516,"tag":548,"props":554,"children":555},{},[556],{"type":521,"value":557},"输入：x = 4\n",{"type":516,"tag":548,"props":559,"children":561},{"class":550,"line":560},2,[562],{"type":516,"tag":548,"props":563,"children":564},{},[565],{"type":521,"value":566},"输出：2\n",{"type":516,"tag":517,"props":568,"children":569},{},[570],{"type":521,"value":571},"示例 2：",{"type":516,"tag":538,"props":573,"children":575},{"className":540,"code":574,"language":521,"meta":509,"style":509},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[576],{"type":516,"tag":544,"props":577,"children":578},{"__ignoreMap":509},[579,587,594],{"type":516,"tag":548,"props":580,"children":581},{"class":550,"line":551},[582],{"type":516,"tag":548,"props":583,"children":584},{},[585],{"type":521,"value":586},"输入：x = 8\n",{"type":516,"tag":548,"props":588,"children":589},{"class":550,"line":560},[590],{"type":516,"tag":548,"props":591,"children":592},{},[593],{"type":521,"value":566},{"type":516,"tag":548,"props":595,"children":597},{"class":550,"line":596},3,[598],{"type":516,"tag":548,"props":599,"children":600},{},[601],{"type":521,"value":602},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":516,"tag":517,"props":604,"children":605},{},[606],{"type":521,"value":607},"提示：",{"type":516,"tag":609,"props":610,"children":611},"ul",{},[612],{"type":516,"tag":613,"props":614,"children":615},"li",{},[616],{"type":521,"value":617},"0 \u003C= x \u003C= 2^31 - 1",{"type":516,"tag":619,"props":620,"children":622},"h2",{"id":621},"解题思路",[623],{"type":521,"value":621},{"type":516,"tag":619,"props":625,"children":627},{"id":626},"实现",[628],{"type":521,"value":626},{"type":516,"tag":630,"props":631,"children":633},"h3",{"id":632},"二分查找",[634],{"type":521,"value":632},{"type":516,"tag":538,"props":636,"children":640},{"className":637,"code":638,"language":639,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[641],{"type":516,"tag":544,"props":642,"children":643},{"__ignoreMap":509},[644,653,695,724,733,779,808,834,865,900,964,1007,1028,1057,1075,1104,1113,1122,1139],{"type":516,"tag":548,"props":645,"children":646},{"class":550,"line":551},[647],{"type":516,"tag":548,"props":648,"children":650},{"style":649},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[651],{"type":521,"value":652},"/**\n",{"type":516,"tag":548,"props":654,"children":655},{"class":550,"line":560},[656,661,667,673,678,684,689],{"type":516,"tag":548,"props":657,"children":658},{"style":649},[659],{"type":521,"value":660}," * ",{"type":516,"tag":548,"props":662,"children":664},{"style":663},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[665],{"type":521,"value":666},"@",{"type":516,"tag":548,"props":668,"children":670},{"style":669},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[671],{"type":521,"value":672},"param",{"type":516,"tag":548,"props":674,"children":675},{"style":663},[676],{"type":521,"value":677}," {",{"type":516,"tag":548,"props":679,"children":681},{"style":680},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[682],{"type":521,"value":683},"number",{"type":516,"tag":548,"props":685,"children":686},{"style":663},[687],{"type":521,"value":688},"}",{"type":516,"tag":548,"props":690,"children":692},{"style":691},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[693],{"type":521,"value":694}," x\n",{"type":516,"tag":548,"props":696,"children":697},{"class":550,"line":596},[698,702,706,711,715,719],{"type":516,"tag":548,"props":699,"children":700},{"style":649},[701],{"type":521,"value":660},{"type":516,"tag":548,"props":703,"children":704},{"style":663},[705],{"type":521,"value":666},{"type":516,"tag":548,"props":707,"children":708},{"style":669},[709],{"type":521,"value":710},"return",{"type":516,"tag":548,"props":712,"children":713},{"style":663},[714],{"type":521,"value":677},{"type":516,"tag":548,"props":716,"children":717},{"style":680},[718],{"type":521,"value":683},{"type":516,"tag":548,"props":720,"children":721},{"style":663},[722],{"type":521,"value":723},"}\n",{"type":516,"tag":548,"props":725,"children":727},{"class":550,"line":726},4,[728],{"type":516,"tag":548,"props":729,"children":730},{"style":649},[731],{"type":521,"value":732}," */\n",{"type":516,"tag":548,"props":734,"children":736},{"class":550,"line":735},5,[737,743,749,754,759,764,769,774],{"type":516,"tag":548,"props":738,"children":740},{"style":739},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[741],{"type":521,"value":742},"var",{"type":516,"tag":548,"props":744,"children":746},{"style":745},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[747],{"type":521,"value":748}," mySqrt",{"type":516,"tag":548,"props":750,"children":751},{"style":663},[752],{"type":521,"value":753}," =",{"type":516,"tag":548,"props":755,"children":756},{"style":739},[757],{"type":521,"value":758}," function",{"type":516,"tag":548,"props":760,"children":761},{"style":663},[762],{"type":521,"value":763}," (",{"type":516,"tag":548,"props":765,"children":766},{"style":691},[767],{"type":521,"value":768},"x",{"type":516,"tag":548,"props":770,"children":771},{"style":663},[772],{"type":521,"value":773},")",{"type":516,"tag":548,"props":775,"children":776},{"style":663},[777],{"type":521,"value":778}," {\n",{"type":516,"tag":548,"props":780,"children":782},{"class":550,"line":781},6,[783,788,793,797,803],{"type":516,"tag":548,"props":784,"children":785},{"style":739},[786],{"type":521,"value":787},"  let",{"type":516,"tag":548,"props":789,"children":790},{"style":691},[791],{"type":521,"value":792}," left",{"type":516,"tag":548,"props":794,"children":795},{"style":663},[796],{"type":521,"value":753},{"type":516,"tag":548,"props":798,"children":800},{"style":799},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[801],{"type":521,"value":802}," 0",{"type":516,"tag":548,"props":804,"children":805},{"style":663},[806],{"type":521,"value":807},";\n",{"type":516,"tag":548,"props":809,"children":811},{"class":550,"line":810},7,[812,816,821,825,830],{"type":516,"tag":548,"props":813,"children":814},{"style":739},[815],{"type":521,"value":787},{"type":516,"tag":548,"props":817,"children":818},{"style":691},[819],{"type":521,"value":820}," right",{"type":516,"tag":548,"props":822,"children":823},{"style":663},[824],{"type":521,"value":753},{"type":516,"tag":548,"props":826,"children":827},{"style":691},[828],{"type":521,"value":829}," x",{"type":516,"tag":548,"props":831,"children":832},{"style":663},[833],{"type":521,"value":807},{"type":516,"tag":548,"props":835,"children":837},{"class":550,"line":836},8,[838,842,847,851,856,861],{"type":516,"tag":548,"props":839,"children":840},{"style":739},[841],{"type":521,"value":787},{"type":516,"tag":548,"props":843,"children":844},{"style":691},[845],{"type":521,"value":846}," answer",{"type":516,"tag":548,"props":848,"children":849},{"style":663},[850],{"type":521,"value":753},{"type":516,"tag":548,"props":852,"children":853},{"style":739},[854],{"type":521,"value":855}," -",{"type":516,"tag":548,"props":857,"children":858},{"style":799},[859],{"type":521,"value":860},"1",{"type":516,"tag":548,"props":862,"children":863},{"style":663},[864],{"type":521,"value":807},{"type":516,"tag":548,"props":866,"children":868},{"class":550,"line":867},9,[869,874,878,883,888,892,896],{"type":516,"tag":548,"props":870,"children":871},{"style":669},[872],{"type":521,"value":873},"  while",{"type":516,"tag":548,"props":875,"children":876},{"style":663},[877],{"type":521,"value":763},{"type":516,"tag":548,"props":879,"children":880},{"style":691},[881],{"type":521,"value":882},"left",{"type":516,"tag":548,"props":884,"children":885},{"style":663},[886],{"type":521,"value":887}," \u003C=",{"type":516,"tag":548,"props":889,"children":890},{"style":691},[891],{"type":521,"value":820},{"type":516,"tag":548,"props":893,"children":894},{"style":663},[895],{"type":521,"value":773},{"type":516,"tag":548,"props":897,"children":898},{"style":663},[899],{"type":521,"value":778},{"type":516,"tag":548,"props":901,"children":903},{"class":550,"line":902},10,[904,909,914,918,922,927,932,937,941,945,949,954,959],{"type":516,"tag":548,"props":905,"children":906},{"style":739},[907],{"type":521,"value":908},"    let",{"type":516,"tag":548,"props":910,"children":911},{"style":691},[912],{"type":521,"value":913}," middle",{"type":516,"tag":548,"props":915,"children":916},{"style":663},[917],{"type":521,"value":753},{"type":516,"tag":548,"props":919,"children":920},{"style":691},[921],{"type":521,"value":792},{"type":516,"tag":548,"props":923,"children":924},{"style":739},[925],{"type":521,"value":926}," +",{"type":516,"tag":548,"props":928,"children":929},{"style":663},[930],{"type":521,"value":931}," ((",{"type":516,"tag":548,"props":933,"children":934},{"style":691},[935],{"type":521,"value":936},"right",{"type":516,"tag":548,"props":938,"children":939},{"style":739},[940],{"type":521,"value":855},{"type":516,"tag":548,"props":942,"children":943},{"style":691},[944],{"type":521,"value":792},{"type":516,"tag":548,"props":946,"children":947},{"style":663},[948],{"type":521,"value":773},{"type":516,"tag":548,"props":950,"children":951},{"style":739},[952],{"type":521,"value":953}," >>",{"type":516,"tag":548,"props":955,"children":956},{"style":799},[957],{"type":521,"value":958}," 1",{"type":516,"tag":548,"props":960,"children":961},{"style":663},[962],{"type":521,"value":963},");\n",{"type":516,"tag":548,"props":965,"children":967},{"class":550,"line":966},11,[968,973,977,982,987,991,995,999,1003],{"type":516,"tag":548,"props":969,"children":970},{"style":669},[971],{"type":521,"value":972},"    if",{"type":516,"tag":548,"props":974,"children":975},{"style":663},[976],{"type":521,"value":763},{"type":516,"tag":548,"props":978,"children":979},{"style":691},[980],{"type":521,"value":981},"middle",{"type":516,"tag":548,"props":983,"children":984},{"style":739},[985],{"type":521,"value":986}," *",{"type":516,"tag":548,"props":988,"children":989},{"style":691},[990],{"type":521,"value":913},{"type":516,"tag":548,"props":992,"children":993},{"style":663},[994],{"type":521,"value":887},{"type":516,"tag":548,"props":996,"children":997},{"style":691},[998],{"type":521,"value":829},{"type":516,"tag":548,"props":1000,"children":1001},{"style":663},[1002],{"type":521,"value":773},{"type":516,"tag":548,"props":1004,"children":1005},{"style":663},[1006],{"type":521,"value":778},{"type":516,"tag":548,"props":1008,"children":1010},{"class":550,"line":1009},12,[1011,1016,1020,1024],{"type":516,"tag":548,"props":1012,"children":1013},{"style":691},[1014],{"type":521,"value":1015},"      answer",{"type":516,"tag":548,"props":1017,"children":1018},{"style":663},[1019],{"type":521,"value":753},{"type":516,"tag":548,"props":1021,"children":1022},{"style":691},[1023],{"type":521,"value":913},{"type":516,"tag":548,"props":1025,"children":1026},{"style":663},[1027],{"type":521,"value":807},{"type":516,"tag":548,"props":1029,"children":1031},{"class":550,"line":1030},13,[1032,1037,1041,1045,1049,1053],{"type":516,"tag":548,"props":1033,"children":1034},{"style":691},[1035],{"type":521,"value":1036},"      left",{"type":516,"tag":548,"props":1038,"children":1039},{"style":663},[1040],{"type":521,"value":753},{"type":516,"tag":548,"props":1042,"children":1043},{"style":691},[1044],{"type":521,"value":913},{"type":516,"tag":548,"props":1046,"children":1047},{"style":739},[1048],{"type":521,"value":926},{"type":516,"tag":548,"props":1050,"children":1051},{"style":799},[1052],{"type":521,"value":958},{"type":516,"tag":548,"props":1054,"children":1055},{"style":663},[1056],{"type":521,"value":807},{"type":516,"tag":548,"props":1058,"children":1060},{"class":550,"line":1059},14,[1061,1066,1071],{"type":516,"tag":548,"props":1062,"children":1063},{"style":663},[1064],{"type":521,"value":1065},"    }",{"type":516,"tag":548,"props":1067,"children":1068},{"style":669},[1069],{"type":521,"value":1070}," else",{"type":516,"tag":548,"props":1072,"children":1073},{"style":663},[1074],{"type":521,"value":778},{"type":516,"tag":548,"props":1076,"children":1078},{"class":550,"line":1077},15,[1079,1084,1088,1092,1096,1100],{"type":516,"tag":548,"props":1080,"children":1081},{"style":691},[1082],{"type":521,"value":1083},"      right",{"type":516,"tag":548,"props":1085,"children":1086},{"style":663},[1087],{"type":521,"value":753},{"type":516,"tag":548,"props":1089,"children":1090},{"style":691},[1091],{"type":521,"value":913},{"type":516,"tag":548,"props":1093,"children":1094},{"style":739},[1095],{"type":521,"value":855},{"type":516,"tag":548,"props":1097,"children":1098},{"style":799},[1099],{"type":521,"value":958},{"type":516,"tag":548,"props":1101,"children":1102},{"style":663},[1103],{"type":521,"value":807},{"type":516,"tag":548,"props":1105,"children":1107},{"class":550,"line":1106},16,[1108],{"type":516,"tag":548,"props":1109,"children":1110},{"style":663},[1111],{"type":521,"value":1112},"    }\n",{"type":516,"tag":548,"props":1114,"children":1116},{"class":550,"line":1115},17,[1117],{"type":516,"tag":548,"props":1118,"children":1119},{"style":663},[1120],{"type":521,"value":1121},"  }\n",{"type":516,"tag":548,"props":1123,"children":1125},{"class":550,"line":1124},18,[1126,1131,1135],{"type":516,"tag":548,"props":1127,"children":1128},{"style":669},[1129],{"type":521,"value":1130},"  return",{"type":516,"tag":548,"props":1132,"children":1133},{"style":691},[1134],{"type":521,"value":846},{"type":516,"tag":548,"props":1136,"children":1137},{"style":663},[1138],{"type":521,"value":807},{"type":516,"tag":548,"props":1140,"children":1142},{"class":550,"line":1141},19,[1143],{"type":516,"tag":548,"props":1144,"children":1145},{"style":663},[1146],{"type":521,"value":1147},"};\n",{"type":516,"tag":1149,"props":1150,"children":1151},"style",{},[1152],{"type":521,"value":1153},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":735,"depth":735,"links":1155},[1156,1157],{"id":621,"depth":560,"text":621},{"id":626,"depth":560,"text":626,"children":1158},[1159],{"id":632,"depth":596,"text":632},"markdown","content:1.algorithm:3.leetcode:3.major:69.sqrtx.md","content","1.algorithm/3.leetcode/3.major/69.sqrtx.md","md",[1166,1168],{"_path":132,"title":131,"description":1167},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":138,"title":137,"description":1169},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1714058126339]