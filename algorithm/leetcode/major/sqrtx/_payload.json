[{"data":1,"prerenderedAt":1091},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sqrtx":452,"/algorithm/leetcode/major/sqrtx-surround":1086},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":126,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":125,"description":456,"url":457,"body":458,"_type":1081,"_id":1082,"_source":1083,"_file":1084,"_extension":1085},"major",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":459,"children":460,"toc":1075},"root",[461,468,473,478,483,513,518,549,554,564,570,575,581,1069],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":462,"tag":463,"props":474,"children":475},{},[476],{"type":467,"value":477},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":462,"tag":463,"props":479,"children":480},{},[481],{"type":467,"value":482},"示例 1：",{"type":462,"tag":484,"props":485,"children":488},"pre",{"className":486,"code":487,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：x = 4\n输出：2\n",[489],{"type":462,"tag":490,"props":491,"children":492},"code",{"__ignoreMap":455},[493,504],{"type":462,"tag":494,"props":495,"children":498},"span",{"class":496,"line":497},"line",1,[499],{"type":462,"tag":494,"props":500,"children":501},{},[502],{"type":467,"value":503},"输入：x = 4\n",{"type":462,"tag":494,"props":505,"children":507},{"class":496,"line":506},2,[508],{"type":462,"tag":494,"props":509,"children":510},{},[511],{"type":467,"value":512},"输出：2\n",{"type":462,"tag":463,"props":514,"children":515},{},[516],{"type":467,"value":517},"示例 2：",{"type":462,"tag":484,"props":519,"children":521},{"className":486,"code":520,"language":467,"meta":455,"style":455},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[522],{"type":462,"tag":490,"props":523,"children":524},{"__ignoreMap":455},[525,533,540],{"type":462,"tag":494,"props":526,"children":527},{"class":496,"line":497},[528],{"type":462,"tag":494,"props":529,"children":530},{},[531],{"type":467,"value":532},"输入：x = 8\n",{"type":462,"tag":494,"props":534,"children":535},{"class":496,"line":506},[536],{"type":462,"tag":494,"props":537,"children":538},{},[539],{"type":467,"value":512},{"type":462,"tag":494,"props":541,"children":543},{"class":496,"line":542},3,[544],{"type":462,"tag":494,"props":545,"children":546},{},[547],{"type":467,"value":548},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":462,"tag":463,"props":550,"children":551},{},[552],{"type":467,"value":553},"提示：",{"type":462,"tag":555,"props":556,"children":557},"ul",{},[558],{"type":462,"tag":559,"props":560,"children":561},"li",{},[562],{"type":467,"value":563},"0 \u003C= x \u003C= 2^31 - 1",{"type":462,"tag":565,"props":566,"children":568},"h2",{"id":567},"解题思路",[569],{"type":467,"value":567},{"type":462,"tag":565,"props":571,"children":573},{"id":572},"实现",[574],{"type":467,"value":572},{"type":462,"tag":576,"props":577,"children":579},"h3",{"id":578},"二分查找",[580],{"type":467,"value":578},{"type":462,"tag":484,"props":582,"children":586},{"className":583,"code":584,"language":585,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[587],{"type":462,"tag":490,"props":588,"children":589},{"__ignoreMap":455},[590,599,625,642,651,695,726,752,783,815,884,923,944,973,992,1021,1030,1039,1056],{"type":462,"tag":494,"props":591,"children":592},{"class":496,"line":497},[593],{"type":462,"tag":494,"props":594,"children":596},{"style":595},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[597],{"type":467,"value":598},"/**\n",{"type":462,"tag":494,"props":600,"children":601},{"class":496,"line":506},[602,607,613,619],{"type":462,"tag":494,"props":603,"children":604},{"style":595},[605],{"type":467,"value":606}," * ",{"type":462,"tag":494,"props":608,"children":610},{"style":609},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[611],{"type":467,"value":612},"@param",{"type":462,"tag":494,"props":614,"children":616},{"style":615},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[617],{"type":467,"value":618}," {number}",{"type":462,"tag":494,"props":620,"children":622},{"style":621},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[623],{"type":467,"value":624}," x\n",{"type":462,"tag":494,"props":626,"children":627},{"class":496,"line":542},[628,632,637],{"type":462,"tag":494,"props":629,"children":630},{"style":595},[631],{"type":467,"value":606},{"type":462,"tag":494,"props":633,"children":634},{"style":609},[635],{"type":467,"value":636},"@return",{"type":462,"tag":494,"props":638,"children":639},{"style":615},[640],{"type":467,"value":641}," {number}\n",{"type":462,"tag":494,"props":643,"children":645},{"class":496,"line":644},4,[646],{"type":462,"tag":494,"props":647,"children":648},{"style":595},[649],{"type":467,"value":650}," */\n",{"type":462,"tag":494,"props":652,"children":654},{"class":496,"line":653},5,[655,661,667,673,678,684,690],{"type":462,"tag":494,"props":656,"children":658},{"style":657},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[659],{"type":467,"value":660},"var",{"type":462,"tag":494,"props":662,"children":664},{"style":663},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[665],{"type":467,"value":666}," mySqrt",{"type":462,"tag":494,"props":668,"children":670},{"style":669},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[671],{"type":467,"value":672}," =",{"type":462,"tag":494,"props":674,"children":675},{"style":657},[676],{"type":467,"value":677}," function",{"type":462,"tag":494,"props":679,"children":681},{"style":680},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[682],{"type":467,"value":683}," (",{"type":462,"tag":494,"props":685,"children":687},{"style":686},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[688],{"type":467,"value":689},"x",{"type":462,"tag":494,"props":691,"children":692},{"style":680},[693],{"type":467,"value":694},") {\n",{"type":462,"tag":494,"props":696,"children":698},{"class":496,"line":697},6,[699,704,710,714,720],{"type":462,"tag":494,"props":700,"children":701},{"style":657},[702],{"type":467,"value":703},"  let",{"type":462,"tag":494,"props":705,"children":707},{"style":706},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[708],{"type":467,"value":709}," left",{"type":462,"tag":494,"props":711,"children":712},{"style":669},[713],{"type":467,"value":672},{"type":462,"tag":494,"props":715,"children":717},{"style":716},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[718],{"type":467,"value":719}," 0",{"type":462,"tag":494,"props":721,"children":723},{"style":722},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[724],{"type":467,"value":725},";\n",{"type":462,"tag":494,"props":727,"children":729},{"class":496,"line":728},7,[730,734,739,743,748],{"type":462,"tag":494,"props":731,"children":732},{"style":657},[733],{"type":467,"value":703},{"type":462,"tag":494,"props":735,"children":736},{"style":706},[737],{"type":467,"value":738}," right",{"type":462,"tag":494,"props":740,"children":741},{"style":669},[742],{"type":467,"value":672},{"type":462,"tag":494,"props":744,"children":745},{"style":706},[746],{"type":467,"value":747}," x",{"type":462,"tag":494,"props":749,"children":750},{"style":722},[751],{"type":467,"value":725},{"type":462,"tag":494,"props":753,"children":755},{"class":496,"line":754},8,[756,760,765,769,774,779],{"type":462,"tag":494,"props":757,"children":758},{"style":657},[759],{"type":467,"value":703},{"type":462,"tag":494,"props":761,"children":762},{"style":706},[763],{"type":467,"value":764}," answer",{"type":462,"tag":494,"props":766,"children":767},{"style":669},[768],{"type":467,"value":672},{"type":462,"tag":494,"props":770,"children":771},{"style":669},[772],{"type":467,"value":773}," -",{"type":462,"tag":494,"props":775,"children":776},{"style":716},[777],{"type":467,"value":778},"1",{"type":462,"tag":494,"props":780,"children":781},{"style":722},[782],{"type":467,"value":725},{"type":462,"tag":494,"props":784,"children":786},{"class":496,"line":785},9,[787,793,797,802,807,811],{"type":462,"tag":494,"props":788,"children":790},{"style":789},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[791],{"type":467,"value":792},"  while",{"type":462,"tag":494,"props":794,"children":795},{"style":680},[796],{"type":467,"value":683},{"type":462,"tag":494,"props":798,"children":799},{"style":706},[800],{"type":467,"value":801},"left",{"type":462,"tag":494,"props":803,"children":804},{"style":669},[805],{"type":467,"value":806}," \u003C=",{"type":462,"tag":494,"props":808,"children":809},{"style":706},[810],{"type":467,"value":738},{"type":462,"tag":494,"props":812,"children":813},{"style":680},[814],{"type":467,"value":694},{"type":462,"tag":494,"props":816,"children":818},{"class":496,"line":817},10,[819,824,829,833,837,842,847,852,856,860,865,870,875,880],{"type":462,"tag":494,"props":820,"children":821},{"style":657},[822],{"type":467,"value":823},"    let",{"type":462,"tag":494,"props":825,"children":826},{"style":706},[827],{"type":467,"value":828}," middle",{"type":462,"tag":494,"props":830,"children":831},{"style":669},[832],{"type":467,"value":672},{"type":462,"tag":494,"props":834,"children":835},{"style":706},[836],{"type":467,"value":709},{"type":462,"tag":494,"props":838,"children":839},{"style":669},[840],{"type":467,"value":841}," +",{"type":462,"tag":494,"props":843,"children":844},{"style":680},[845],{"type":467,"value":846}," ((",{"type":462,"tag":494,"props":848,"children":849},{"style":706},[850],{"type":467,"value":851},"right",{"type":462,"tag":494,"props":853,"children":854},{"style":669},[855],{"type":467,"value":773},{"type":462,"tag":494,"props":857,"children":858},{"style":706},[859],{"type":467,"value":709},{"type":462,"tag":494,"props":861,"children":862},{"style":680},[863],{"type":467,"value":864},") ",{"type":462,"tag":494,"props":866,"children":867},{"style":669},[868],{"type":467,"value":869},">>",{"type":462,"tag":494,"props":871,"children":872},{"style":716},[873],{"type":467,"value":874}," 1",{"type":462,"tag":494,"props":876,"children":877},{"style":680},[878],{"type":467,"value":879},")",{"type":462,"tag":494,"props":881,"children":882},{"style":722},[883],{"type":467,"value":725},{"type":462,"tag":494,"props":885,"children":887},{"class":496,"line":886},11,[888,893,897,902,907,911,915,919],{"type":462,"tag":494,"props":889,"children":890},{"style":789},[891],{"type":467,"value":892},"    if",{"type":462,"tag":494,"props":894,"children":895},{"style":680},[896],{"type":467,"value":683},{"type":462,"tag":494,"props":898,"children":899},{"style":706},[900],{"type":467,"value":901},"middle",{"type":462,"tag":494,"props":903,"children":904},{"style":669},[905],{"type":467,"value":906}," *",{"type":462,"tag":494,"props":908,"children":909},{"style":706},[910],{"type":467,"value":828},{"type":462,"tag":494,"props":912,"children":913},{"style":669},[914],{"type":467,"value":806},{"type":462,"tag":494,"props":916,"children":917},{"style":706},[918],{"type":467,"value":747},{"type":462,"tag":494,"props":920,"children":921},{"style":680},[922],{"type":467,"value":694},{"type":462,"tag":494,"props":924,"children":926},{"class":496,"line":925},12,[927,932,936,940],{"type":462,"tag":494,"props":928,"children":929},{"style":706},[930],{"type":467,"value":931},"      answer",{"type":462,"tag":494,"props":933,"children":934},{"style":669},[935],{"type":467,"value":672},{"type":462,"tag":494,"props":937,"children":938},{"style":706},[939],{"type":467,"value":828},{"type":462,"tag":494,"props":941,"children":942},{"style":722},[943],{"type":467,"value":725},{"type":462,"tag":494,"props":945,"children":947},{"class":496,"line":946},13,[948,953,957,961,965,969],{"type":462,"tag":494,"props":949,"children":950},{"style":706},[951],{"type":467,"value":952},"      left",{"type":462,"tag":494,"props":954,"children":955},{"style":669},[956],{"type":467,"value":672},{"type":462,"tag":494,"props":958,"children":959},{"style":706},[960],{"type":467,"value":828},{"type":462,"tag":494,"props":962,"children":963},{"style":669},[964],{"type":467,"value":841},{"type":462,"tag":494,"props":966,"children":967},{"style":716},[968],{"type":467,"value":874},{"type":462,"tag":494,"props":970,"children":971},{"style":722},[972],{"type":467,"value":725},{"type":462,"tag":494,"props":974,"children":976},{"class":496,"line":975},14,[977,982,987],{"type":462,"tag":494,"props":978,"children":979},{"style":680},[980],{"type":467,"value":981},"    } ",{"type":462,"tag":494,"props":983,"children":984},{"style":789},[985],{"type":467,"value":986},"else",{"type":462,"tag":494,"props":988,"children":989},{"style":680},[990],{"type":467,"value":991}," {\n",{"type":462,"tag":494,"props":993,"children":995},{"class":496,"line":994},15,[996,1001,1005,1009,1013,1017],{"type":462,"tag":494,"props":997,"children":998},{"style":706},[999],{"type":467,"value":1000},"      right",{"type":462,"tag":494,"props":1002,"children":1003},{"style":669},[1004],{"type":467,"value":672},{"type":462,"tag":494,"props":1006,"children":1007},{"style":706},[1008],{"type":467,"value":828},{"type":462,"tag":494,"props":1010,"children":1011},{"style":669},[1012],{"type":467,"value":773},{"type":462,"tag":494,"props":1014,"children":1015},{"style":716},[1016],{"type":467,"value":874},{"type":462,"tag":494,"props":1018,"children":1019},{"style":722},[1020],{"type":467,"value":725},{"type":462,"tag":494,"props":1022,"children":1024},{"class":496,"line":1023},16,[1025],{"type":462,"tag":494,"props":1026,"children":1027},{"style":680},[1028],{"type":467,"value":1029},"    }\n",{"type":462,"tag":494,"props":1031,"children":1033},{"class":496,"line":1032},17,[1034],{"type":462,"tag":494,"props":1035,"children":1036},{"style":680},[1037],{"type":467,"value":1038},"  }\n",{"type":462,"tag":494,"props":1040,"children":1042},{"class":496,"line":1041},18,[1043,1048,1052],{"type":462,"tag":494,"props":1044,"children":1045},{"style":789},[1046],{"type":467,"value":1047},"  return",{"type":462,"tag":494,"props":1049,"children":1050},{"style":706},[1051],{"type":467,"value":764},{"type":462,"tag":494,"props":1053,"children":1054},{"style":722},[1055],{"type":467,"value":725},{"type":462,"tag":494,"props":1057,"children":1059},{"class":496,"line":1058},19,[1060,1065],{"type":462,"tag":494,"props":1061,"children":1062},{"style":680},[1063],{"type":467,"value":1064},"}",{"type":462,"tag":494,"props":1066,"children":1067},{"style":722},[1068],{"type":467,"value":725},{"type":462,"tag":1070,"props":1071,"children":1072},"style",{},[1073],{"type":467,"value":1074},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":653,"depth":653,"links":1076},[1077,1078],{"id":567,"depth":506,"text":567},{"id":572,"depth":506,"text":572,"children":1079},[1080],{"id":578,"depth":542,"text":578},"markdown","content:1.algorithm:3.leetcode:3.major:69.sqrtx.md","content","1.algorithm/3.leetcode/3.major/69.sqrtx.md","md",[1087,1089],{"_path":123,"title":122,"description":1088},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":129,"title":128,"description":1090},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1713457420090]