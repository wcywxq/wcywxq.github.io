[{"data":1,"prerenderedAt":1215},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sqrtx":551,"/algorithm/leetcode/major/sqrtx-surround":1210},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":135,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":134,"description":555,"url":556,"body":557,"_type":1205,"_id":1206,"_source":1207,"_file":1208,"_extension":1209},"major",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":558,"children":559,"toc":1199},"root",[560,567,572,577,582,612,617,648,653,663,669,674,680,1193],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":566,"value":576},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":561,"tag":562,"props":578,"children":579},{},[580],{"type":566,"value":581},"示例 1：",{"type":561,"tag":583,"props":584,"children":587},"pre",{"className":585,"code":586,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：x = 4\n输出：2\n",[588],{"type":561,"tag":589,"props":590,"children":591},"code",{"__ignoreMap":554},[592,603],{"type":561,"tag":593,"props":594,"children":597},"span",{"class":595,"line":596},"line",1,[598],{"type":561,"tag":593,"props":599,"children":600},{},[601],{"type":566,"value":602},"输入：x = 4\n",{"type":561,"tag":593,"props":604,"children":606},{"class":595,"line":605},2,[607],{"type":561,"tag":593,"props":608,"children":609},{},[610],{"type":566,"value":611},"输出：2\n",{"type":561,"tag":562,"props":613,"children":614},{},[615],{"type":566,"value":616},"示例 2：",{"type":561,"tag":583,"props":618,"children":620},{"className":585,"code":619,"language":566,"meta":554,"style":554},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[621],{"type":561,"tag":589,"props":622,"children":623},{"__ignoreMap":554},[624,632,639],{"type":561,"tag":593,"props":625,"children":626},{"class":595,"line":596},[627],{"type":561,"tag":593,"props":628,"children":629},{},[630],{"type":566,"value":631},"输入：x = 8\n",{"type":561,"tag":593,"props":633,"children":634},{"class":595,"line":605},[635],{"type":561,"tag":593,"props":636,"children":637},{},[638],{"type":566,"value":611},{"type":561,"tag":593,"props":640,"children":642},{"class":595,"line":641},3,[643],{"type":561,"tag":593,"props":644,"children":645},{},[646],{"type":566,"value":647},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":561,"tag":562,"props":649,"children":650},{},[651],{"type":566,"value":652},"提示：",{"type":561,"tag":654,"props":655,"children":656},"ul",{},[657],{"type":561,"tag":658,"props":659,"children":660},"li",{},[661],{"type":566,"value":662},"0 \u003C= x \u003C= 2^31 - 1",{"type":561,"tag":664,"props":665,"children":667},"h2",{"id":666},"解题思路",[668],{"type":566,"value":666},{"type":561,"tag":664,"props":670,"children":672},{"id":671},"实现",[673],{"type":566,"value":671},{"type":561,"tag":675,"props":676,"children":678},"h3",{"id":677},"二分查找",[679],{"type":566,"value":677},{"type":561,"tag":583,"props":681,"children":685},{"className":682,"code":683,"language":684,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[686],{"type":561,"tag":589,"props":687,"children":688},{"__ignoreMap":554},[689,698,740,769,778,824,853,879,910,945,1009,1052,1073,1102,1120,1149,1158,1167,1184],{"type":561,"tag":593,"props":690,"children":691},{"class":595,"line":596},[692],{"type":561,"tag":593,"props":693,"children":695},{"style":694},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[696],{"type":566,"value":697},"/**\n",{"type":561,"tag":593,"props":699,"children":700},{"class":595,"line":605},[701,706,712,718,723,729,734],{"type":561,"tag":593,"props":702,"children":703},{"style":694},[704],{"type":566,"value":705}," * ",{"type":561,"tag":593,"props":707,"children":709},{"style":708},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[710],{"type":566,"value":711},"@",{"type":561,"tag":593,"props":713,"children":715},{"style":714},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[716],{"type":566,"value":717},"param",{"type":561,"tag":593,"props":719,"children":720},{"style":708},[721],{"type":566,"value":722}," {",{"type":561,"tag":593,"props":724,"children":726},{"style":725},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[727],{"type":566,"value":728},"number",{"type":561,"tag":593,"props":730,"children":731},{"style":708},[732],{"type":566,"value":733},"}",{"type":561,"tag":593,"props":735,"children":737},{"style":736},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[738],{"type":566,"value":739}," x\n",{"type":561,"tag":593,"props":741,"children":742},{"class":595,"line":641},[743,747,751,756,760,764],{"type":561,"tag":593,"props":744,"children":745},{"style":694},[746],{"type":566,"value":705},{"type":561,"tag":593,"props":748,"children":749},{"style":708},[750],{"type":566,"value":711},{"type":561,"tag":593,"props":752,"children":753},{"style":714},[754],{"type":566,"value":755},"return",{"type":561,"tag":593,"props":757,"children":758},{"style":708},[759],{"type":566,"value":722},{"type":561,"tag":593,"props":761,"children":762},{"style":725},[763],{"type":566,"value":728},{"type":561,"tag":593,"props":765,"children":766},{"style":708},[767],{"type":566,"value":768},"}\n",{"type":561,"tag":593,"props":770,"children":772},{"class":595,"line":771},4,[773],{"type":561,"tag":593,"props":774,"children":775},{"style":694},[776],{"type":566,"value":777}," */\n",{"type":561,"tag":593,"props":779,"children":781},{"class":595,"line":780},5,[782,788,794,799,804,809,814,819],{"type":561,"tag":593,"props":783,"children":785},{"style":784},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[786],{"type":566,"value":787},"var",{"type":561,"tag":593,"props":789,"children":791},{"style":790},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[792],{"type":566,"value":793}," mySqrt",{"type":561,"tag":593,"props":795,"children":796},{"style":708},[797],{"type":566,"value":798}," =",{"type":561,"tag":593,"props":800,"children":801},{"style":784},[802],{"type":566,"value":803}," function",{"type":561,"tag":593,"props":805,"children":806},{"style":708},[807],{"type":566,"value":808}," (",{"type":561,"tag":593,"props":810,"children":811},{"style":736},[812],{"type":566,"value":813},"x",{"type":561,"tag":593,"props":815,"children":816},{"style":708},[817],{"type":566,"value":818},")",{"type":561,"tag":593,"props":820,"children":821},{"style":708},[822],{"type":566,"value":823}," {\n",{"type":561,"tag":593,"props":825,"children":827},{"class":595,"line":826},6,[828,833,838,842,848],{"type":561,"tag":593,"props":829,"children":830},{"style":784},[831],{"type":566,"value":832},"  let",{"type":561,"tag":593,"props":834,"children":835},{"style":736},[836],{"type":566,"value":837}," left",{"type":561,"tag":593,"props":839,"children":840},{"style":708},[841],{"type":566,"value":798},{"type":561,"tag":593,"props":843,"children":845},{"style":844},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[846],{"type":566,"value":847}," 0",{"type":561,"tag":593,"props":849,"children":850},{"style":708},[851],{"type":566,"value":852},";\n",{"type":561,"tag":593,"props":854,"children":856},{"class":595,"line":855},7,[857,861,866,870,875],{"type":561,"tag":593,"props":858,"children":859},{"style":784},[860],{"type":566,"value":832},{"type":561,"tag":593,"props":862,"children":863},{"style":736},[864],{"type":566,"value":865}," right",{"type":561,"tag":593,"props":867,"children":868},{"style":708},[869],{"type":566,"value":798},{"type":561,"tag":593,"props":871,"children":872},{"style":736},[873],{"type":566,"value":874}," x",{"type":561,"tag":593,"props":876,"children":877},{"style":708},[878],{"type":566,"value":852},{"type":561,"tag":593,"props":880,"children":882},{"class":595,"line":881},8,[883,887,892,896,901,906],{"type":561,"tag":593,"props":884,"children":885},{"style":784},[886],{"type":566,"value":832},{"type":561,"tag":593,"props":888,"children":889},{"style":736},[890],{"type":566,"value":891}," answer",{"type":561,"tag":593,"props":893,"children":894},{"style":708},[895],{"type":566,"value":798},{"type":561,"tag":593,"props":897,"children":898},{"style":784},[899],{"type":566,"value":900}," -",{"type":561,"tag":593,"props":902,"children":903},{"style":844},[904],{"type":566,"value":905},"1",{"type":561,"tag":593,"props":907,"children":908},{"style":708},[909],{"type":566,"value":852},{"type":561,"tag":593,"props":911,"children":913},{"class":595,"line":912},9,[914,919,923,928,933,937,941],{"type":561,"tag":593,"props":915,"children":916},{"style":714},[917],{"type":566,"value":918},"  while",{"type":561,"tag":593,"props":920,"children":921},{"style":708},[922],{"type":566,"value":808},{"type":561,"tag":593,"props":924,"children":925},{"style":736},[926],{"type":566,"value":927},"left",{"type":561,"tag":593,"props":929,"children":930},{"style":708},[931],{"type":566,"value":932}," \u003C=",{"type":561,"tag":593,"props":934,"children":935},{"style":736},[936],{"type":566,"value":865},{"type":561,"tag":593,"props":938,"children":939},{"style":708},[940],{"type":566,"value":818},{"type":561,"tag":593,"props":942,"children":943},{"style":708},[944],{"type":566,"value":823},{"type":561,"tag":593,"props":946,"children":948},{"class":595,"line":947},10,[949,954,959,963,967,972,977,982,986,990,994,999,1004],{"type":561,"tag":593,"props":950,"children":951},{"style":784},[952],{"type":566,"value":953},"    let",{"type":561,"tag":593,"props":955,"children":956},{"style":736},[957],{"type":566,"value":958}," middle",{"type":561,"tag":593,"props":960,"children":961},{"style":708},[962],{"type":566,"value":798},{"type":561,"tag":593,"props":964,"children":965},{"style":736},[966],{"type":566,"value":837},{"type":561,"tag":593,"props":968,"children":969},{"style":784},[970],{"type":566,"value":971}," +",{"type":561,"tag":593,"props":973,"children":974},{"style":708},[975],{"type":566,"value":976}," ((",{"type":561,"tag":593,"props":978,"children":979},{"style":736},[980],{"type":566,"value":981},"right",{"type":561,"tag":593,"props":983,"children":984},{"style":784},[985],{"type":566,"value":900},{"type":561,"tag":593,"props":987,"children":988},{"style":736},[989],{"type":566,"value":837},{"type":561,"tag":593,"props":991,"children":992},{"style":708},[993],{"type":566,"value":818},{"type":561,"tag":593,"props":995,"children":996},{"style":784},[997],{"type":566,"value":998}," >>",{"type":561,"tag":593,"props":1000,"children":1001},{"style":844},[1002],{"type":566,"value":1003}," 1",{"type":561,"tag":593,"props":1005,"children":1006},{"style":708},[1007],{"type":566,"value":1008},");\n",{"type":561,"tag":593,"props":1010,"children":1012},{"class":595,"line":1011},11,[1013,1018,1022,1027,1032,1036,1040,1044,1048],{"type":561,"tag":593,"props":1014,"children":1015},{"style":714},[1016],{"type":566,"value":1017},"    if",{"type":561,"tag":593,"props":1019,"children":1020},{"style":708},[1021],{"type":566,"value":808},{"type":561,"tag":593,"props":1023,"children":1024},{"style":736},[1025],{"type":566,"value":1026},"middle",{"type":561,"tag":593,"props":1028,"children":1029},{"style":784},[1030],{"type":566,"value":1031}," *",{"type":561,"tag":593,"props":1033,"children":1034},{"style":736},[1035],{"type":566,"value":958},{"type":561,"tag":593,"props":1037,"children":1038},{"style":708},[1039],{"type":566,"value":932},{"type":561,"tag":593,"props":1041,"children":1042},{"style":736},[1043],{"type":566,"value":874},{"type":561,"tag":593,"props":1045,"children":1046},{"style":708},[1047],{"type":566,"value":818},{"type":561,"tag":593,"props":1049,"children":1050},{"style":708},[1051],{"type":566,"value":823},{"type":561,"tag":593,"props":1053,"children":1055},{"class":595,"line":1054},12,[1056,1061,1065,1069],{"type":561,"tag":593,"props":1057,"children":1058},{"style":736},[1059],{"type":566,"value":1060},"      answer",{"type":561,"tag":593,"props":1062,"children":1063},{"style":708},[1064],{"type":566,"value":798},{"type":561,"tag":593,"props":1066,"children":1067},{"style":736},[1068],{"type":566,"value":958},{"type":561,"tag":593,"props":1070,"children":1071},{"style":708},[1072],{"type":566,"value":852},{"type":561,"tag":593,"props":1074,"children":1076},{"class":595,"line":1075},13,[1077,1082,1086,1090,1094,1098],{"type":561,"tag":593,"props":1078,"children":1079},{"style":736},[1080],{"type":566,"value":1081},"      left",{"type":561,"tag":593,"props":1083,"children":1084},{"style":708},[1085],{"type":566,"value":798},{"type":561,"tag":593,"props":1087,"children":1088},{"style":736},[1089],{"type":566,"value":958},{"type":561,"tag":593,"props":1091,"children":1092},{"style":784},[1093],{"type":566,"value":971},{"type":561,"tag":593,"props":1095,"children":1096},{"style":844},[1097],{"type":566,"value":1003},{"type":561,"tag":593,"props":1099,"children":1100},{"style":708},[1101],{"type":566,"value":852},{"type":561,"tag":593,"props":1103,"children":1105},{"class":595,"line":1104},14,[1106,1111,1116],{"type":561,"tag":593,"props":1107,"children":1108},{"style":708},[1109],{"type":566,"value":1110},"    }",{"type":561,"tag":593,"props":1112,"children":1113},{"style":714},[1114],{"type":566,"value":1115}," else",{"type":561,"tag":593,"props":1117,"children":1118},{"style":708},[1119],{"type":566,"value":823},{"type":561,"tag":593,"props":1121,"children":1123},{"class":595,"line":1122},15,[1124,1129,1133,1137,1141,1145],{"type":561,"tag":593,"props":1125,"children":1126},{"style":736},[1127],{"type":566,"value":1128},"      right",{"type":561,"tag":593,"props":1130,"children":1131},{"style":708},[1132],{"type":566,"value":798},{"type":561,"tag":593,"props":1134,"children":1135},{"style":736},[1136],{"type":566,"value":958},{"type":561,"tag":593,"props":1138,"children":1139},{"style":784},[1140],{"type":566,"value":900},{"type":561,"tag":593,"props":1142,"children":1143},{"style":844},[1144],{"type":566,"value":1003},{"type":561,"tag":593,"props":1146,"children":1147},{"style":708},[1148],{"type":566,"value":852},{"type":561,"tag":593,"props":1150,"children":1152},{"class":595,"line":1151},16,[1153],{"type":561,"tag":593,"props":1154,"children":1155},{"style":708},[1156],{"type":566,"value":1157},"    }\n",{"type":561,"tag":593,"props":1159,"children":1161},{"class":595,"line":1160},17,[1162],{"type":561,"tag":593,"props":1163,"children":1164},{"style":708},[1165],{"type":566,"value":1166},"  }\n",{"type":561,"tag":593,"props":1168,"children":1170},{"class":595,"line":1169},18,[1171,1176,1180],{"type":561,"tag":593,"props":1172,"children":1173},{"style":714},[1174],{"type":566,"value":1175},"  return",{"type":561,"tag":593,"props":1177,"children":1178},{"style":736},[1179],{"type":566,"value":891},{"type":561,"tag":593,"props":1181,"children":1182},{"style":708},[1183],{"type":566,"value":852},{"type":561,"tag":593,"props":1185,"children":1187},{"class":595,"line":1186},19,[1188],{"type":561,"tag":593,"props":1189,"children":1190},{"style":708},[1191],{"type":566,"value":1192},"};\n",{"type":561,"tag":1194,"props":1195,"children":1196},"style",{},[1197],{"type":566,"value":1198},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":780,"depth":780,"links":1200},[1201,1202],{"id":666,"depth":605,"text":666},{"id":671,"depth":605,"text":671,"children":1203},[1204],{"id":677,"depth":641,"text":677},"markdown","content:1.algorithm:3.leetcode:3.major:69.sqrtx.md","content","1.algorithm/3.leetcode/3.major/69.sqrtx.md","md",[1211,1213],{"_path":132,"title":131,"description":1212},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":138,"title":137,"description":1214},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1715092075385]