[{"data":1,"prerenderedAt":1102},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sqrtx":463,"/algorithm/leetcode/major/sqrtx-surround":1097},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":132,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":131,"description":467,"url":468,"body":469,"_type":1092,"_id":1093,"_source":1094,"_file":1095,"_extension":1096},"major",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":470,"children":471,"toc":1086},"root",[472,479,484,489,494,524,529,560,565,575,581,586,592,1080],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":473,"tag":474,"props":485,"children":486},{},[487],{"type":478,"value":488},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":473,"tag":474,"props":490,"children":491},{},[492],{"type":478,"value":493},"示例 1：",{"type":473,"tag":495,"props":496,"children":499},"pre",{"className":497,"code":498,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：x = 4\n输出：2\n",[500],{"type":473,"tag":501,"props":502,"children":503},"code",{"__ignoreMap":466},[504,515],{"type":473,"tag":505,"props":506,"children":509},"span",{"class":507,"line":508},"line",1,[510],{"type":473,"tag":505,"props":511,"children":512},{},[513],{"type":478,"value":514},"输入：x = 4\n",{"type":473,"tag":505,"props":516,"children":518},{"class":507,"line":517},2,[519],{"type":473,"tag":505,"props":520,"children":521},{},[522],{"type":478,"value":523},"输出：2\n",{"type":473,"tag":474,"props":525,"children":526},{},[527],{"type":478,"value":528},"示例 2：",{"type":473,"tag":495,"props":530,"children":532},{"className":497,"code":531,"language":478,"meta":466,"style":466},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[533],{"type":473,"tag":501,"props":534,"children":535},{"__ignoreMap":466},[536,544,551],{"type":473,"tag":505,"props":537,"children":538},{"class":507,"line":508},[539],{"type":473,"tag":505,"props":540,"children":541},{},[542],{"type":478,"value":543},"输入：x = 8\n",{"type":473,"tag":505,"props":545,"children":546},{"class":507,"line":517},[547],{"type":473,"tag":505,"props":548,"children":549},{},[550],{"type":478,"value":523},{"type":473,"tag":505,"props":552,"children":554},{"class":507,"line":553},3,[555],{"type":473,"tag":505,"props":556,"children":557},{},[558],{"type":478,"value":559},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":473,"tag":474,"props":561,"children":562},{},[563],{"type":478,"value":564},"提示：",{"type":473,"tag":566,"props":567,"children":568},"ul",{},[569],{"type":473,"tag":570,"props":571,"children":572},"li",{},[573],{"type":478,"value":574},"0 \u003C= x \u003C= 2^31 - 1",{"type":473,"tag":576,"props":577,"children":579},"h2",{"id":578},"解题思路",[580],{"type":478,"value":578},{"type":473,"tag":576,"props":582,"children":584},{"id":583},"实现",[585],{"type":478,"value":583},{"type":473,"tag":587,"props":588,"children":590},"h3",{"id":589},"二分查找",[591],{"type":478,"value":589},{"type":473,"tag":495,"props":593,"children":597},{"className":594,"code":595,"language":596,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[598],{"type":473,"tag":501,"props":599,"children":600},{"__ignoreMap":466},[601,610,636,653,662,706,737,763,794,826,895,934,955,984,1003,1032,1041,1050,1067],{"type":473,"tag":505,"props":602,"children":603},{"class":507,"line":508},[604],{"type":473,"tag":505,"props":605,"children":607},{"style":606},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[608],{"type":478,"value":609},"/**\n",{"type":473,"tag":505,"props":611,"children":612},{"class":507,"line":517},[613,618,624,630],{"type":473,"tag":505,"props":614,"children":615},{"style":606},[616],{"type":478,"value":617}," * ",{"type":473,"tag":505,"props":619,"children":621},{"style":620},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[622],{"type":478,"value":623},"@param",{"type":473,"tag":505,"props":625,"children":627},{"style":626},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[628],{"type":478,"value":629}," {number}",{"type":473,"tag":505,"props":631,"children":633},{"style":632},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[634],{"type":478,"value":635}," x\n",{"type":473,"tag":505,"props":637,"children":638},{"class":507,"line":553},[639,643,648],{"type":473,"tag":505,"props":640,"children":641},{"style":606},[642],{"type":478,"value":617},{"type":473,"tag":505,"props":644,"children":645},{"style":620},[646],{"type":478,"value":647},"@return",{"type":473,"tag":505,"props":649,"children":650},{"style":626},[651],{"type":478,"value":652}," {number}\n",{"type":473,"tag":505,"props":654,"children":656},{"class":507,"line":655},4,[657],{"type":473,"tag":505,"props":658,"children":659},{"style":606},[660],{"type":478,"value":661}," */\n",{"type":473,"tag":505,"props":663,"children":665},{"class":507,"line":664},5,[666,672,678,684,689,695,701],{"type":473,"tag":505,"props":667,"children":669},{"style":668},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[670],{"type":478,"value":671},"var",{"type":473,"tag":505,"props":673,"children":675},{"style":674},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[676],{"type":478,"value":677}," mySqrt",{"type":473,"tag":505,"props":679,"children":681},{"style":680},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[682],{"type":478,"value":683}," =",{"type":473,"tag":505,"props":685,"children":686},{"style":668},[687],{"type":478,"value":688}," function",{"type":473,"tag":505,"props":690,"children":692},{"style":691},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[693],{"type":478,"value":694}," (",{"type":473,"tag":505,"props":696,"children":698},{"style":697},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[699],{"type":478,"value":700},"x",{"type":473,"tag":505,"props":702,"children":703},{"style":691},[704],{"type":478,"value":705},") {\n",{"type":473,"tag":505,"props":707,"children":709},{"class":507,"line":708},6,[710,715,721,725,731],{"type":473,"tag":505,"props":711,"children":712},{"style":668},[713],{"type":478,"value":714},"  let",{"type":473,"tag":505,"props":716,"children":718},{"style":717},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[719],{"type":478,"value":720}," left",{"type":473,"tag":505,"props":722,"children":723},{"style":680},[724],{"type":478,"value":683},{"type":473,"tag":505,"props":726,"children":728},{"style":727},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[729],{"type":478,"value":730}," 0",{"type":473,"tag":505,"props":732,"children":734},{"style":733},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[735],{"type":478,"value":736},";\n",{"type":473,"tag":505,"props":738,"children":740},{"class":507,"line":739},7,[741,745,750,754,759],{"type":473,"tag":505,"props":742,"children":743},{"style":668},[744],{"type":478,"value":714},{"type":473,"tag":505,"props":746,"children":747},{"style":717},[748],{"type":478,"value":749}," right",{"type":473,"tag":505,"props":751,"children":752},{"style":680},[753],{"type":478,"value":683},{"type":473,"tag":505,"props":755,"children":756},{"style":717},[757],{"type":478,"value":758}," x",{"type":473,"tag":505,"props":760,"children":761},{"style":733},[762],{"type":478,"value":736},{"type":473,"tag":505,"props":764,"children":766},{"class":507,"line":765},8,[767,771,776,780,785,790],{"type":473,"tag":505,"props":768,"children":769},{"style":668},[770],{"type":478,"value":714},{"type":473,"tag":505,"props":772,"children":773},{"style":717},[774],{"type":478,"value":775}," answer",{"type":473,"tag":505,"props":777,"children":778},{"style":680},[779],{"type":478,"value":683},{"type":473,"tag":505,"props":781,"children":782},{"style":680},[783],{"type":478,"value":784}," -",{"type":473,"tag":505,"props":786,"children":787},{"style":727},[788],{"type":478,"value":789},"1",{"type":473,"tag":505,"props":791,"children":792},{"style":733},[793],{"type":478,"value":736},{"type":473,"tag":505,"props":795,"children":797},{"class":507,"line":796},9,[798,804,808,813,818,822],{"type":473,"tag":505,"props":799,"children":801},{"style":800},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[802],{"type":478,"value":803},"  while",{"type":473,"tag":505,"props":805,"children":806},{"style":691},[807],{"type":478,"value":694},{"type":473,"tag":505,"props":809,"children":810},{"style":717},[811],{"type":478,"value":812},"left",{"type":473,"tag":505,"props":814,"children":815},{"style":680},[816],{"type":478,"value":817}," \u003C=",{"type":473,"tag":505,"props":819,"children":820},{"style":717},[821],{"type":478,"value":749},{"type":473,"tag":505,"props":823,"children":824},{"style":691},[825],{"type":478,"value":705},{"type":473,"tag":505,"props":827,"children":829},{"class":507,"line":828},10,[830,835,840,844,848,853,858,863,867,871,876,881,886,891],{"type":473,"tag":505,"props":831,"children":832},{"style":668},[833],{"type":478,"value":834},"    let",{"type":473,"tag":505,"props":836,"children":837},{"style":717},[838],{"type":478,"value":839}," middle",{"type":473,"tag":505,"props":841,"children":842},{"style":680},[843],{"type":478,"value":683},{"type":473,"tag":505,"props":845,"children":846},{"style":717},[847],{"type":478,"value":720},{"type":473,"tag":505,"props":849,"children":850},{"style":680},[851],{"type":478,"value":852}," +",{"type":473,"tag":505,"props":854,"children":855},{"style":691},[856],{"type":478,"value":857}," ((",{"type":473,"tag":505,"props":859,"children":860},{"style":717},[861],{"type":478,"value":862},"right",{"type":473,"tag":505,"props":864,"children":865},{"style":680},[866],{"type":478,"value":784},{"type":473,"tag":505,"props":868,"children":869},{"style":717},[870],{"type":478,"value":720},{"type":473,"tag":505,"props":872,"children":873},{"style":691},[874],{"type":478,"value":875},") ",{"type":473,"tag":505,"props":877,"children":878},{"style":680},[879],{"type":478,"value":880},">>",{"type":473,"tag":505,"props":882,"children":883},{"style":727},[884],{"type":478,"value":885}," 1",{"type":473,"tag":505,"props":887,"children":888},{"style":691},[889],{"type":478,"value":890},")",{"type":473,"tag":505,"props":892,"children":893},{"style":733},[894],{"type":478,"value":736},{"type":473,"tag":505,"props":896,"children":898},{"class":507,"line":897},11,[899,904,908,913,918,922,926,930],{"type":473,"tag":505,"props":900,"children":901},{"style":800},[902],{"type":478,"value":903},"    if",{"type":473,"tag":505,"props":905,"children":906},{"style":691},[907],{"type":478,"value":694},{"type":473,"tag":505,"props":909,"children":910},{"style":717},[911],{"type":478,"value":912},"middle",{"type":473,"tag":505,"props":914,"children":915},{"style":680},[916],{"type":478,"value":917}," *",{"type":473,"tag":505,"props":919,"children":920},{"style":717},[921],{"type":478,"value":839},{"type":473,"tag":505,"props":923,"children":924},{"style":680},[925],{"type":478,"value":817},{"type":473,"tag":505,"props":927,"children":928},{"style":717},[929],{"type":478,"value":758},{"type":473,"tag":505,"props":931,"children":932},{"style":691},[933],{"type":478,"value":705},{"type":473,"tag":505,"props":935,"children":937},{"class":507,"line":936},12,[938,943,947,951],{"type":473,"tag":505,"props":939,"children":940},{"style":717},[941],{"type":478,"value":942},"      answer",{"type":473,"tag":505,"props":944,"children":945},{"style":680},[946],{"type":478,"value":683},{"type":473,"tag":505,"props":948,"children":949},{"style":717},[950],{"type":478,"value":839},{"type":473,"tag":505,"props":952,"children":953},{"style":733},[954],{"type":478,"value":736},{"type":473,"tag":505,"props":956,"children":958},{"class":507,"line":957},13,[959,964,968,972,976,980],{"type":473,"tag":505,"props":960,"children":961},{"style":717},[962],{"type":478,"value":963},"      left",{"type":473,"tag":505,"props":965,"children":966},{"style":680},[967],{"type":478,"value":683},{"type":473,"tag":505,"props":969,"children":970},{"style":717},[971],{"type":478,"value":839},{"type":473,"tag":505,"props":973,"children":974},{"style":680},[975],{"type":478,"value":852},{"type":473,"tag":505,"props":977,"children":978},{"style":727},[979],{"type":478,"value":885},{"type":473,"tag":505,"props":981,"children":982},{"style":733},[983],{"type":478,"value":736},{"type":473,"tag":505,"props":985,"children":987},{"class":507,"line":986},14,[988,993,998],{"type":473,"tag":505,"props":989,"children":990},{"style":691},[991],{"type":478,"value":992},"    } ",{"type":473,"tag":505,"props":994,"children":995},{"style":800},[996],{"type":478,"value":997},"else",{"type":473,"tag":505,"props":999,"children":1000},{"style":691},[1001],{"type":478,"value":1002}," {\n",{"type":473,"tag":505,"props":1004,"children":1006},{"class":507,"line":1005},15,[1007,1012,1016,1020,1024,1028],{"type":473,"tag":505,"props":1008,"children":1009},{"style":717},[1010],{"type":478,"value":1011},"      right",{"type":473,"tag":505,"props":1013,"children":1014},{"style":680},[1015],{"type":478,"value":683},{"type":473,"tag":505,"props":1017,"children":1018},{"style":717},[1019],{"type":478,"value":839},{"type":473,"tag":505,"props":1021,"children":1022},{"style":680},[1023],{"type":478,"value":784},{"type":473,"tag":505,"props":1025,"children":1026},{"style":727},[1027],{"type":478,"value":885},{"type":473,"tag":505,"props":1029,"children":1030},{"style":733},[1031],{"type":478,"value":736},{"type":473,"tag":505,"props":1033,"children":1035},{"class":507,"line":1034},16,[1036],{"type":473,"tag":505,"props":1037,"children":1038},{"style":691},[1039],{"type":478,"value":1040},"    }\n",{"type":473,"tag":505,"props":1042,"children":1044},{"class":507,"line":1043},17,[1045],{"type":473,"tag":505,"props":1046,"children":1047},{"style":691},[1048],{"type":478,"value":1049},"  }\n",{"type":473,"tag":505,"props":1051,"children":1053},{"class":507,"line":1052},18,[1054,1059,1063],{"type":473,"tag":505,"props":1055,"children":1056},{"style":800},[1057],{"type":478,"value":1058},"  return",{"type":473,"tag":505,"props":1060,"children":1061},{"style":717},[1062],{"type":478,"value":775},{"type":473,"tag":505,"props":1064,"children":1065},{"style":733},[1066],{"type":478,"value":736},{"type":473,"tag":505,"props":1068,"children":1070},{"class":507,"line":1069},19,[1071,1076],{"type":473,"tag":505,"props":1072,"children":1073},{"style":691},[1074],{"type":478,"value":1075},"}",{"type":473,"tag":505,"props":1077,"children":1078},{"style":733},[1079],{"type":478,"value":736},{"type":473,"tag":1081,"props":1082,"children":1083},"style",{},[1084],{"type":478,"value":1085},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":664,"depth":664,"links":1087},[1088,1089],{"id":578,"depth":517,"text":578},{"id":583,"depth":517,"text":583,"children":1090},[1091],{"id":589,"depth":553,"text":589},"markdown","content:1.algorithm:3.leetcode:3.major:69.sqrtx.md","content","1.algorithm/3.leetcode/3.major/69.sqrtx.md","md",[1098,1100],{"_path":129,"title":128,"description":1099},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":135,"title":134,"description":1101},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1713695846852]