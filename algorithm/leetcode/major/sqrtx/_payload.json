[{"data":1,"prerenderedAt":1216},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sqrtx":552,"/algorithm/leetcode/major/sqrtx-surround":1211},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":135,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":134,"description":556,"url":557,"body":558,"_type":1206,"_id":1207,"_source":1208,"_file":1209,"_extension":1210},"major",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":559,"children":560,"toc":1200},"root",[561,568,573,578,583,613,618,649,654,664,670,675,681,1194],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":562,"tag":563,"props":579,"children":580},{},[581],{"type":567,"value":582},"示例 1：",{"type":562,"tag":584,"props":585,"children":588},"pre",{"className":586,"code":587,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：x = 4\n输出：2\n",[589],{"type":562,"tag":590,"props":591,"children":592},"code",{"__ignoreMap":555},[593,604],{"type":562,"tag":594,"props":595,"children":598},"span",{"class":596,"line":597},"line",1,[599],{"type":562,"tag":594,"props":600,"children":601},{},[602],{"type":567,"value":603},"输入：x = 4\n",{"type":562,"tag":594,"props":605,"children":607},{"class":596,"line":606},2,[608],{"type":562,"tag":594,"props":609,"children":610},{},[611],{"type":567,"value":612},"输出：2\n",{"type":562,"tag":563,"props":614,"children":615},{},[616],{"type":567,"value":617},"示例 2：",{"type":562,"tag":584,"props":619,"children":621},{"className":586,"code":620,"language":567,"meta":555,"style":555},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[622],{"type":562,"tag":590,"props":623,"children":624},{"__ignoreMap":555},[625,633,640],{"type":562,"tag":594,"props":626,"children":627},{"class":596,"line":597},[628],{"type":562,"tag":594,"props":629,"children":630},{},[631],{"type":567,"value":632},"输入：x = 8\n",{"type":562,"tag":594,"props":634,"children":635},{"class":596,"line":606},[636],{"type":562,"tag":594,"props":637,"children":638},{},[639],{"type":567,"value":612},{"type":562,"tag":594,"props":641,"children":643},{"class":596,"line":642},3,[644],{"type":562,"tag":594,"props":645,"children":646},{},[647],{"type":567,"value":648},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":562,"tag":563,"props":650,"children":651},{},[652],{"type":567,"value":653},"提示：",{"type":562,"tag":655,"props":656,"children":657},"ul",{},[658],{"type":562,"tag":659,"props":660,"children":661},"li",{},[662],{"type":567,"value":663},"0 \u003C= x \u003C= 2^31 - 1",{"type":562,"tag":665,"props":666,"children":668},"h2",{"id":667},"解题思路",[669],{"type":567,"value":667},{"type":562,"tag":665,"props":671,"children":673},{"id":672},"实现",[674],{"type":567,"value":672},{"type":562,"tag":676,"props":677,"children":679},"h3",{"id":678},"二分查找",[680],{"type":567,"value":678},{"type":562,"tag":584,"props":682,"children":686},{"className":683,"code":684,"language":685,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[687],{"type":562,"tag":590,"props":688,"children":689},{"__ignoreMap":555},[690,699,741,770,779,825,854,880,911,946,1010,1053,1074,1103,1121,1150,1159,1168,1185],{"type":562,"tag":594,"props":691,"children":692},{"class":596,"line":597},[693],{"type":562,"tag":594,"props":694,"children":696},{"style":695},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[697],{"type":567,"value":698},"/**\n",{"type":562,"tag":594,"props":700,"children":701},{"class":596,"line":606},[702,707,713,719,724,730,735],{"type":562,"tag":594,"props":703,"children":704},{"style":695},[705],{"type":567,"value":706}," * ",{"type":562,"tag":594,"props":708,"children":710},{"style":709},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[711],{"type":567,"value":712},"@",{"type":562,"tag":594,"props":714,"children":716},{"style":715},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[717],{"type":567,"value":718},"param",{"type":562,"tag":594,"props":720,"children":721},{"style":709},[722],{"type":567,"value":723}," {",{"type":562,"tag":594,"props":725,"children":727},{"style":726},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[728],{"type":567,"value":729},"number",{"type":562,"tag":594,"props":731,"children":732},{"style":709},[733],{"type":567,"value":734},"}",{"type":562,"tag":594,"props":736,"children":738},{"style":737},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[739],{"type":567,"value":740}," x\n",{"type":562,"tag":594,"props":742,"children":743},{"class":596,"line":642},[744,748,752,757,761,765],{"type":562,"tag":594,"props":745,"children":746},{"style":695},[747],{"type":567,"value":706},{"type":562,"tag":594,"props":749,"children":750},{"style":709},[751],{"type":567,"value":712},{"type":562,"tag":594,"props":753,"children":754},{"style":715},[755],{"type":567,"value":756},"return",{"type":562,"tag":594,"props":758,"children":759},{"style":709},[760],{"type":567,"value":723},{"type":562,"tag":594,"props":762,"children":763},{"style":726},[764],{"type":567,"value":729},{"type":562,"tag":594,"props":766,"children":767},{"style":709},[768],{"type":567,"value":769},"}\n",{"type":562,"tag":594,"props":771,"children":773},{"class":596,"line":772},4,[774],{"type":562,"tag":594,"props":775,"children":776},{"style":695},[777],{"type":567,"value":778}," */\n",{"type":562,"tag":594,"props":780,"children":782},{"class":596,"line":781},5,[783,789,795,800,805,810,815,820],{"type":562,"tag":594,"props":784,"children":786},{"style":785},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[787],{"type":567,"value":788},"var",{"type":562,"tag":594,"props":790,"children":792},{"style":791},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[793],{"type":567,"value":794}," mySqrt",{"type":562,"tag":594,"props":796,"children":797},{"style":709},[798],{"type":567,"value":799}," =",{"type":562,"tag":594,"props":801,"children":802},{"style":785},[803],{"type":567,"value":804}," function",{"type":562,"tag":594,"props":806,"children":807},{"style":709},[808],{"type":567,"value":809}," (",{"type":562,"tag":594,"props":811,"children":812},{"style":737},[813],{"type":567,"value":814},"x",{"type":562,"tag":594,"props":816,"children":817},{"style":709},[818],{"type":567,"value":819},")",{"type":562,"tag":594,"props":821,"children":822},{"style":709},[823],{"type":567,"value":824}," {\n",{"type":562,"tag":594,"props":826,"children":828},{"class":596,"line":827},6,[829,834,839,843,849],{"type":562,"tag":594,"props":830,"children":831},{"style":785},[832],{"type":567,"value":833},"  let",{"type":562,"tag":594,"props":835,"children":836},{"style":737},[837],{"type":567,"value":838}," left",{"type":562,"tag":594,"props":840,"children":841},{"style":709},[842],{"type":567,"value":799},{"type":562,"tag":594,"props":844,"children":846},{"style":845},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[847],{"type":567,"value":848}," 0",{"type":562,"tag":594,"props":850,"children":851},{"style":709},[852],{"type":567,"value":853},";\n",{"type":562,"tag":594,"props":855,"children":857},{"class":596,"line":856},7,[858,862,867,871,876],{"type":562,"tag":594,"props":859,"children":860},{"style":785},[861],{"type":567,"value":833},{"type":562,"tag":594,"props":863,"children":864},{"style":737},[865],{"type":567,"value":866}," right",{"type":562,"tag":594,"props":868,"children":869},{"style":709},[870],{"type":567,"value":799},{"type":562,"tag":594,"props":872,"children":873},{"style":737},[874],{"type":567,"value":875}," x",{"type":562,"tag":594,"props":877,"children":878},{"style":709},[879],{"type":567,"value":853},{"type":562,"tag":594,"props":881,"children":883},{"class":596,"line":882},8,[884,888,893,897,902,907],{"type":562,"tag":594,"props":885,"children":886},{"style":785},[887],{"type":567,"value":833},{"type":562,"tag":594,"props":889,"children":890},{"style":737},[891],{"type":567,"value":892}," answer",{"type":562,"tag":594,"props":894,"children":895},{"style":709},[896],{"type":567,"value":799},{"type":562,"tag":594,"props":898,"children":899},{"style":785},[900],{"type":567,"value":901}," -",{"type":562,"tag":594,"props":903,"children":904},{"style":845},[905],{"type":567,"value":906},"1",{"type":562,"tag":594,"props":908,"children":909},{"style":709},[910],{"type":567,"value":853},{"type":562,"tag":594,"props":912,"children":914},{"class":596,"line":913},9,[915,920,924,929,934,938,942],{"type":562,"tag":594,"props":916,"children":917},{"style":715},[918],{"type":567,"value":919},"  while",{"type":562,"tag":594,"props":921,"children":922},{"style":709},[923],{"type":567,"value":809},{"type":562,"tag":594,"props":925,"children":926},{"style":737},[927],{"type":567,"value":928},"left",{"type":562,"tag":594,"props":930,"children":931},{"style":709},[932],{"type":567,"value":933}," \u003C=",{"type":562,"tag":594,"props":935,"children":936},{"style":737},[937],{"type":567,"value":866},{"type":562,"tag":594,"props":939,"children":940},{"style":709},[941],{"type":567,"value":819},{"type":562,"tag":594,"props":943,"children":944},{"style":709},[945],{"type":567,"value":824},{"type":562,"tag":594,"props":947,"children":949},{"class":596,"line":948},10,[950,955,960,964,968,973,978,983,987,991,995,1000,1005],{"type":562,"tag":594,"props":951,"children":952},{"style":785},[953],{"type":567,"value":954},"    let",{"type":562,"tag":594,"props":956,"children":957},{"style":737},[958],{"type":567,"value":959}," middle",{"type":562,"tag":594,"props":961,"children":962},{"style":709},[963],{"type":567,"value":799},{"type":562,"tag":594,"props":965,"children":966},{"style":737},[967],{"type":567,"value":838},{"type":562,"tag":594,"props":969,"children":970},{"style":785},[971],{"type":567,"value":972}," +",{"type":562,"tag":594,"props":974,"children":975},{"style":709},[976],{"type":567,"value":977}," ((",{"type":562,"tag":594,"props":979,"children":980},{"style":737},[981],{"type":567,"value":982},"right",{"type":562,"tag":594,"props":984,"children":985},{"style":785},[986],{"type":567,"value":901},{"type":562,"tag":594,"props":988,"children":989},{"style":737},[990],{"type":567,"value":838},{"type":562,"tag":594,"props":992,"children":993},{"style":709},[994],{"type":567,"value":819},{"type":562,"tag":594,"props":996,"children":997},{"style":785},[998],{"type":567,"value":999}," >>",{"type":562,"tag":594,"props":1001,"children":1002},{"style":845},[1003],{"type":567,"value":1004}," 1",{"type":562,"tag":594,"props":1006,"children":1007},{"style":709},[1008],{"type":567,"value":1009},");\n",{"type":562,"tag":594,"props":1011,"children":1013},{"class":596,"line":1012},11,[1014,1019,1023,1028,1033,1037,1041,1045,1049],{"type":562,"tag":594,"props":1015,"children":1016},{"style":715},[1017],{"type":567,"value":1018},"    if",{"type":562,"tag":594,"props":1020,"children":1021},{"style":709},[1022],{"type":567,"value":809},{"type":562,"tag":594,"props":1024,"children":1025},{"style":737},[1026],{"type":567,"value":1027},"middle",{"type":562,"tag":594,"props":1029,"children":1030},{"style":785},[1031],{"type":567,"value":1032}," *",{"type":562,"tag":594,"props":1034,"children":1035},{"style":737},[1036],{"type":567,"value":959},{"type":562,"tag":594,"props":1038,"children":1039},{"style":709},[1040],{"type":567,"value":933},{"type":562,"tag":594,"props":1042,"children":1043},{"style":737},[1044],{"type":567,"value":875},{"type":562,"tag":594,"props":1046,"children":1047},{"style":709},[1048],{"type":567,"value":819},{"type":562,"tag":594,"props":1050,"children":1051},{"style":709},[1052],{"type":567,"value":824},{"type":562,"tag":594,"props":1054,"children":1056},{"class":596,"line":1055},12,[1057,1062,1066,1070],{"type":562,"tag":594,"props":1058,"children":1059},{"style":737},[1060],{"type":567,"value":1061},"      answer",{"type":562,"tag":594,"props":1063,"children":1064},{"style":709},[1065],{"type":567,"value":799},{"type":562,"tag":594,"props":1067,"children":1068},{"style":737},[1069],{"type":567,"value":959},{"type":562,"tag":594,"props":1071,"children":1072},{"style":709},[1073],{"type":567,"value":853},{"type":562,"tag":594,"props":1075,"children":1077},{"class":596,"line":1076},13,[1078,1083,1087,1091,1095,1099],{"type":562,"tag":594,"props":1079,"children":1080},{"style":737},[1081],{"type":567,"value":1082},"      left",{"type":562,"tag":594,"props":1084,"children":1085},{"style":709},[1086],{"type":567,"value":799},{"type":562,"tag":594,"props":1088,"children":1089},{"style":737},[1090],{"type":567,"value":959},{"type":562,"tag":594,"props":1092,"children":1093},{"style":785},[1094],{"type":567,"value":972},{"type":562,"tag":594,"props":1096,"children":1097},{"style":845},[1098],{"type":567,"value":1004},{"type":562,"tag":594,"props":1100,"children":1101},{"style":709},[1102],{"type":567,"value":853},{"type":562,"tag":594,"props":1104,"children":1106},{"class":596,"line":1105},14,[1107,1112,1117],{"type":562,"tag":594,"props":1108,"children":1109},{"style":709},[1110],{"type":567,"value":1111},"    }",{"type":562,"tag":594,"props":1113,"children":1114},{"style":715},[1115],{"type":567,"value":1116}," else",{"type":562,"tag":594,"props":1118,"children":1119},{"style":709},[1120],{"type":567,"value":824},{"type":562,"tag":594,"props":1122,"children":1124},{"class":596,"line":1123},15,[1125,1130,1134,1138,1142,1146],{"type":562,"tag":594,"props":1126,"children":1127},{"style":737},[1128],{"type":567,"value":1129},"      right",{"type":562,"tag":594,"props":1131,"children":1132},{"style":709},[1133],{"type":567,"value":799},{"type":562,"tag":594,"props":1135,"children":1136},{"style":737},[1137],{"type":567,"value":959},{"type":562,"tag":594,"props":1139,"children":1140},{"style":785},[1141],{"type":567,"value":901},{"type":562,"tag":594,"props":1143,"children":1144},{"style":845},[1145],{"type":567,"value":1004},{"type":562,"tag":594,"props":1147,"children":1148},{"style":709},[1149],{"type":567,"value":853},{"type":562,"tag":594,"props":1151,"children":1153},{"class":596,"line":1152},16,[1154],{"type":562,"tag":594,"props":1155,"children":1156},{"style":709},[1157],{"type":567,"value":1158},"    }\n",{"type":562,"tag":594,"props":1160,"children":1162},{"class":596,"line":1161},17,[1163],{"type":562,"tag":594,"props":1164,"children":1165},{"style":709},[1166],{"type":567,"value":1167},"  }\n",{"type":562,"tag":594,"props":1169,"children":1171},{"class":596,"line":1170},18,[1172,1177,1181],{"type":562,"tag":594,"props":1173,"children":1174},{"style":715},[1175],{"type":567,"value":1176},"  return",{"type":562,"tag":594,"props":1178,"children":1179},{"style":737},[1180],{"type":567,"value":892},{"type":562,"tag":594,"props":1182,"children":1183},{"style":709},[1184],{"type":567,"value":853},{"type":562,"tag":594,"props":1186,"children":1188},{"class":596,"line":1187},19,[1189],{"type":562,"tag":594,"props":1190,"children":1191},{"style":709},[1192],{"type":567,"value":1193},"};\n",{"type":562,"tag":1195,"props":1196,"children":1197},"style",{},[1198],{"type":567,"value":1199},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":781,"depth":781,"links":1201},[1202,1203],{"id":667,"depth":606,"text":667},{"id":672,"depth":606,"text":672,"children":1204},[1205],{"id":678,"depth":642,"text":678},"markdown","content:1.algorithm:3.leetcode:3.major:69.sqrtx.md","content","1.algorithm/3.leetcode/3.major/69.sqrtx.md","md",[1212,1214],{"_path":132,"title":131,"description":1213},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":138,"title":137,"description":1215},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1716810725146]