[{"data":1,"prerenderedAt":1188},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sqrtx":524,"/algorithm/leetcode/major/sqrtx-surround":1183},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":135,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":134,"description":528,"url":529,"body":530,"_type":1178,"_id":1179,"_source":1180,"_file":1181,"_extension":1182},"major",false,"","给你一个非负整数 x ，计算并返回 x 的 算术平方根 。","https://leetcode.cn/problems/sqrtx",{"type":531,"children":532,"toc":1172},"root",[533,540,545,550,555,585,590,621,626,636,642,647,653,1166],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":539,"value":549},"注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。",{"type":534,"tag":535,"props":551,"children":552},{},[553],{"type":539,"value":554},"示例 1：",{"type":534,"tag":556,"props":557,"children":560},"pre",{"className":558,"code":559,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：x = 4\n输出：2\n",[561],{"type":534,"tag":562,"props":563,"children":564},"code",{"__ignoreMap":527},[565,576],{"type":534,"tag":566,"props":567,"children":570},"span",{"class":568,"line":569},"line",1,[571],{"type":534,"tag":566,"props":572,"children":573},{},[574],{"type":539,"value":575},"输入：x = 4\n",{"type":534,"tag":566,"props":577,"children":579},{"class":568,"line":578},2,[580],{"type":534,"tag":566,"props":581,"children":582},{},[583],{"type":539,"value":584},"输出：2\n",{"type":534,"tag":535,"props":586,"children":587},{},[588],{"type":539,"value":589},"示例 2：",{"type":534,"tag":556,"props":591,"children":593},{"className":558,"code":592,"language":539,"meta":527,"style":527},"输入：x = 8\n输出：2\n解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",[594],{"type":534,"tag":562,"props":595,"children":596},{"__ignoreMap":527},[597,605,612],{"type":534,"tag":566,"props":598,"children":599},{"class":568,"line":569},[600],{"type":534,"tag":566,"props":601,"children":602},{},[603],{"type":539,"value":604},"输入：x = 8\n",{"type":534,"tag":566,"props":606,"children":607},{"class":568,"line":578},[608],{"type":534,"tag":566,"props":609,"children":610},{},[611],{"type":539,"value":584},{"type":534,"tag":566,"props":613,"children":615},{"class":568,"line":614},3,[616],{"type":534,"tag":566,"props":617,"children":618},{},[619],{"type":539,"value":620},"解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n",{"type":534,"tag":535,"props":622,"children":623},{},[624],{"type":539,"value":625},"提示：",{"type":534,"tag":627,"props":628,"children":629},"ul",{},[630],{"type":534,"tag":631,"props":632,"children":633},"li",{},[634],{"type":539,"value":635},"0 \u003C= x \u003C= 2^31 - 1",{"type":534,"tag":637,"props":638,"children":640},"h2",{"id":639},"解题思路",[641],{"type":539,"value":639},{"type":534,"tag":637,"props":643,"children":645},{"id":644},"实现",[646],{"type":539,"value":644},{"type":534,"tag":648,"props":649,"children":651},"h3",{"id":650},"二分查找",[652],{"type":539,"value":650},{"type":534,"tag":556,"props":654,"children":658},{"className":655,"code":656,"language":657,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  let answer = -1;\n  while (left \u003C= right) {\n    let middle = left + ((right - left) >> 1);\n    if (middle * middle \u003C= x) {\n      answer = middle;\n      left = middle + 1;\n    } else {\n      right = middle - 1;\n    }\n  }\n  return answer;\n};\n","js",[659],{"type":534,"tag":562,"props":660,"children":661},{"__ignoreMap":527},[662,671,713,742,751,797,826,852,883,918,982,1025,1046,1075,1093,1122,1131,1140,1157],{"type":534,"tag":566,"props":663,"children":664},{"class":568,"line":569},[665],{"type":534,"tag":566,"props":666,"children":668},{"style":667},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[669],{"type":539,"value":670},"/**\n",{"type":534,"tag":566,"props":672,"children":673},{"class":568,"line":578},[674,679,685,691,696,702,707],{"type":534,"tag":566,"props":675,"children":676},{"style":667},[677],{"type":539,"value":678}," * ",{"type":534,"tag":566,"props":680,"children":682},{"style":681},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[683],{"type":539,"value":684},"@",{"type":534,"tag":566,"props":686,"children":688},{"style":687},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[689],{"type":539,"value":690},"param",{"type":534,"tag":566,"props":692,"children":693},{"style":681},[694],{"type":539,"value":695}," {",{"type":534,"tag":566,"props":697,"children":699},{"style":698},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[700],{"type":539,"value":701},"number",{"type":534,"tag":566,"props":703,"children":704},{"style":681},[705],{"type":539,"value":706},"}",{"type":534,"tag":566,"props":708,"children":710},{"style":709},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[711],{"type":539,"value":712}," x\n",{"type":534,"tag":566,"props":714,"children":715},{"class":568,"line":614},[716,720,724,729,733,737],{"type":534,"tag":566,"props":717,"children":718},{"style":667},[719],{"type":539,"value":678},{"type":534,"tag":566,"props":721,"children":722},{"style":681},[723],{"type":539,"value":684},{"type":534,"tag":566,"props":725,"children":726},{"style":687},[727],{"type":539,"value":728},"return",{"type":534,"tag":566,"props":730,"children":731},{"style":681},[732],{"type":539,"value":695},{"type":534,"tag":566,"props":734,"children":735},{"style":698},[736],{"type":539,"value":701},{"type":534,"tag":566,"props":738,"children":739},{"style":681},[740],{"type":539,"value":741},"}\n",{"type":534,"tag":566,"props":743,"children":745},{"class":568,"line":744},4,[746],{"type":534,"tag":566,"props":747,"children":748},{"style":667},[749],{"type":539,"value":750}," */\n",{"type":534,"tag":566,"props":752,"children":754},{"class":568,"line":753},5,[755,761,767,772,777,782,787,792],{"type":534,"tag":566,"props":756,"children":758},{"style":757},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[759],{"type":539,"value":760},"var",{"type":534,"tag":566,"props":762,"children":764},{"style":763},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[765],{"type":539,"value":766}," mySqrt",{"type":534,"tag":566,"props":768,"children":769},{"style":681},[770],{"type":539,"value":771}," =",{"type":534,"tag":566,"props":773,"children":774},{"style":757},[775],{"type":539,"value":776}," function",{"type":534,"tag":566,"props":778,"children":779},{"style":681},[780],{"type":539,"value":781}," (",{"type":534,"tag":566,"props":783,"children":784},{"style":709},[785],{"type":539,"value":786},"x",{"type":534,"tag":566,"props":788,"children":789},{"style":681},[790],{"type":539,"value":791},")",{"type":534,"tag":566,"props":793,"children":794},{"style":681},[795],{"type":539,"value":796}," {\n",{"type":534,"tag":566,"props":798,"children":800},{"class":568,"line":799},6,[801,806,811,815,821],{"type":534,"tag":566,"props":802,"children":803},{"style":757},[804],{"type":539,"value":805},"  let",{"type":534,"tag":566,"props":807,"children":808},{"style":709},[809],{"type":539,"value":810}," left",{"type":534,"tag":566,"props":812,"children":813},{"style":681},[814],{"type":539,"value":771},{"type":534,"tag":566,"props":816,"children":818},{"style":817},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[819],{"type":539,"value":820}," 0",{"type":534,"tag":566,"props":822,"children":823},{"style":681},[824],{"type":539,"value":825},";\n",{"type":534,"tag":566,"props":827,"children":829},{"class":568,"line":828},7,[830,834,839,843,848],{"type":534,"tag":566,"props":831,"children":832},{"style":757},[833],{"type":539,"value":805},{"type":534,"tag":566,"props":835,"children":836},{"style":709},[837],{"type":539,"value":838}," right",{"type":534,"tag":566,"props":840,"children":841},{"style":681},[842],{"type":539,"value":771},{"type":534,"tag":566,"props":844,"children":845},{"style":709},[846],{"type":539,"value":847}," x",{"type":534,"tag":566,"props":849,"children":850},{"style":681},[851],{"type":539,"value":825},{"type":534,"tag":566,"props":853,"children":855},{"class":568,"line":854},8,[856,860,865,869,874,879],{"type":534,"tag":566,"props":857,"children":858},{"style":757},[859],{"type":539,"value":805},{"type":534,"tag":566,"props":861,"children":862},{"style":709},[863],{"type":539,"value":864}," answer",{"type":534,"tag":566,"props":866,"children":867},{"style":681},[868],{"type":539,"value":771},{"type":534,"tag":566,"props":870,"children":871},{"style":757},[872],{"type":539,"value":873}," -",{"type":534,"tag":566,"props":875,"children":876},{"style":817},[877],{"type":539,"value":878},"1",{"type":534,"tag":566,"props":880,"children":881},{"style":681},[882],{"type":539,"value":825},{"type":534,"tag":566,"props":884,"children":886},{"class":568,"line":885},9,[887,892,896,901,906,910,914],{"type":534,"tag":566,"props":888,"children":889},{"style":687},[890],{"type":539,"value":891},"  while",{"type":534,"tag":566,"props":893,"children":894},{"style":681},[895],{"type":539,"value":781},{"type":534,"tag":566,"props":897,"children":898},{"style":709},[899],{"type":539,"value":900},"left",{"type":534,"tag":566,"props":902,"children":903},{"style":681},[904],{"type":539,"value":905}," \u003C=",{"type":534,"tag":566,"props":907,"children":908},{"style":709},[909],{"type":539,"value":838},{"type":534,"tag":566,"props":911,"children":912},{"style":681},[913],{"type":539,"value":791},{"type":534,"tag":566,"props":915,"children":916},{"style":681},[917],{"type":539,"value":796},{"type":534,"tag":566,"props":919,"children":921},{"class":568,"line":920},10,[922,927,932,936,940,945,950,955,959,963,967,972,977],{"type":534,"tag":566,"props":923,"children":924},{"style":757},[925],{"type":539,"value":926},"    let",{"type":534,"tag":566,"props":928,"children":929},{"style":709},[930],{"type":539,"value":931}," middle",{"type":534,"tag":566,"props":933,"children":934},{"style":681},[935],{"type":539,"value":771},{"type":534,"tag":566,"props":937,"children":938},{"style":709},[939],{"type":539,"value":810},{"type":534,"tag":566,"props":941,"children":942},{"style":757},[943],{"type":539,"value":944}," +",{"type":534,"tag":566,"props":946,"children":947},{"style":681},[948],{"type":539,"value":949}," ((",{"type":534,"tag":566,"props":951,"children":952},{"style":709},[953],{"type":539,"value":954},"right",{"type":534,"tag":566,"props":956,"children":957},{"style":757},[958],{"type":539,"value":873},{"type":534,"tag":566,"props":960,"children":961},{"style":709},[962],{"type":539,"value":810},{"type":534,"tag":566,"props":964,"children":965},{"style":681},[966],{"type":539,"value":791},{"type":534,"tag":566,"props":968,"children":969},{"style":757},[970],{"type":539,"value":971}," >>",{"type":534,"tag":566,"props":973,"children":974},{"style":817},[975],{"type":539,"value":976}," 1",{"type":534,"tag":566,"props":978,"children":979},{"style":681},[980],{"type":539,"value":981},");\n",{"type":534,"tag":566,"props":983,"children":985},{"class":568,"line":984},11,[986,991,995,1000,1005,1009,1013,1017,1021],{"type":534,"tag":566,"props":987,"children":988},{"style":687},[989],{"type":539,"value":990},"    if",{"type":534,"tag":566,"props":992,"children":993},{"style":681},[994],{"type":539,"value":781},{"type":534,"tag":566,"props":996,"children":997},{"style":709},[998],{"type":539,"value":999},"middle",{"type":534,"tag":566,"props":1001,"children":1002},{"style":757},[1003],{"type":539,"value":1004}," *",{"type":534,"tag":566,"props":1006,"children":1007},{"style":709},[1008],{"type":539,"value":931},{"type":534,"tag":566,"props":1010,"children":1011},{"style":681},[1012],{"type":539,"value":905},{"type":534,"tag":566,"props":1014,"children":1015},{"style":709},[1016],{"type":539,"value":847},{"type":534,"tag":566,"props":1018,"children":1019},{"style":681},[1020],{"type":539,"value":791},{"type":534,"tag":566,"props":1022,"children":1023},{"style":681},[1024],{"type":539,"value":796},{"type":534,"tag":566,"props":1026,"children":1028},{"class":568,"line":1027},12,[1029,1034,1038,1042],{"type":534,"tag":566,"props":1030,"children":1031},{"style":709},[1032],{"type":539,"value":1033},"      answer",{"type":534,"tag":566,"props":1035,"children":1036},{"style":681},[1037],{"type":539,"value":771},{"type":534,"tag":566,"props":1039,"children":1040},{"style":709},[1041],{"type":539,"value":931},{"type":534,"tag":566,"props":1043,"children":1044},{"style":681},[1045],{"type":539,"value":825},{"type":534,"tag":566,"props":1047,"children":1049},{"class":568,"line":1048},13,[1050,1055,1059,1063,1067,1071],{"type":534,"tag":566,"props":1051,"children":1052},{"style":709},[1053],{"type":539,"value":1054},"      left",{"type":534,"tag":566,"props":1056,"children":1057},{"style":681},[1058],{"type":539,"value":771},{"type":534,"tag":566,"props":1060,"children":1061},{"style":709},[1062],{"type":539,"value":931},{"type":534,"tag":566,"props":1064,"children":1065},{"style":757},[1066],{"type":539,"value":944},{"type":534,"tag":566,"props":1068,"children":1069},{"style":817},[1070],{"type":539,"value":976},{"type":534,"tag":566,"props":1072,"children":1073},{"style":681},[1074],{"type":539,"value":825},{"type":534,"tag":566,"props":1076,"children":1078},{"class":568,"line":1077},14,[1079,1084,1089],{"type":534,"tag":566,"props":1080,"children":1081},{"style":681},[1082],{"type":539,"value":1083},"    }",{"type":534,"tag":566,"props":1085,"children":1086},{"style":687},[1087],{"type":539,"value":1088}," else",{"type":534,"tag":566,"props":1090,"children":1091},{"style":681},[1092],{"type":539,"value":796},{"type":534,"tag":566,"props":1094,"children":1096},{"class":568,"line":1095},15,[1097,1102,1106,1110,1114,1118],{"type":534,"tag":566,"props":1098,"children":1099},{"style":709},[1100],{"type":539,"value":1101},"      right",{"type":534,"tag":566,"props":1103,"children":1104},{"style":681},[1105],{"type":539,"value":771},{"type":534,"tag":566,"props":1107,"children":1108},{"style":709},[1109],{"type":539,"value":931},{"type":534,"tag":566,"props":1111,"children":1112},{"style":757},[1113],{"type":539,"value":873},{"type":534,"tag":566,"props":1115,"children":1116},{"style":817},[1117],{"type":539,"value":976},{"type":534,"tag":566,"props":1119,"children":1120},{"style":681},[1121],{"type":539,"value":825},{"type":534,"tag":566,"props":1123,"children":1125},{"class":568,"line":1124},16,[1126],{"type":534,"tag":566,"props":1127,"children":1128},{"style":681},[1129],{"type":539,"value":1130},"    }\n",{"type":534,"tag":566,"props":1132,"children":1134},{"class":568,"line":1133},17,[1135],{"type":534,"tag":566,"props":1136,"children":1137},{"style":681},[1138],{"type":539,"value":1139},"  }\n",{"type":534,"tag":566,"props":1141,"children":1143},{"class":568,"line":1142},18,[1144,1149,1153],{"type":534,"tag":566,"props":1145,"children":1146},{"style":687},[1147],{"type":539,"value":1148},"  return",{"type":534,"tag":566,"props":1150,"children":1151},{"style":709},[1152],{"type":539,"value":864},{"type":534,"tag":566,"props":1154,"children":1155},{"style":681},[1156],{"type":539,"value":825},{"type":534,"tag":566,"props":1158,"children":1160},{"class":568,"line":1159},19,[1161],{"type":534,"tag":566,"props":1162,"children":1163},{"style":681},[1164],{"type":539,"value":1165},"};\n",{"type":534,"tag":1167,"props":1168,"children":1169},"style",{},[1170],{"type":539,"value":1171},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":753,"depth":753,"links":1173},[1174,1175],{"id":639,"depth":578,"text":639},{"id":644,"depth":578,"text":644,"children":1176},[1177],{"id":650,"depth":614,"text":650},"markdown","content:1.algorithm:3.leetcode:3.major:69.sqrtx.md","content","1.algorithm/3.leetcode/3.major/69.sqrtx.md","md",[1184,1186],{"_path":132,"title":131,"description":1185},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",{"_path":138,"title":137,"description":1187},"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。",1714096143005]