[{"data":1,"prerenderedAt":1497},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-words-in-a-string":457,"/algorithm/leetcode/major/reverse-words-in-a-string-surround":1492},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":171,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":170,"description":461,"url":462,"body":463,"_type":1487,"_id":1488,"_source":1489,"_file":1490,"_extension":1491},"major",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":464,"children":465,"toc":1480},"root",[466,473,478,483,488,493,523,528,560,565,596,601,621,626,632,637,643,876,881,1474],{"type":467,"tag":468,"props":469,"children":470},"element","p",{},[471],{"type":472,"value":461},"text",{"type":467,"tag":468,"props":474,"children":475},{},[476],{"type":472,"value":477},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":467,"tag":468,"props":479,"children":480},{},[481],{"type":472,"value":482},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":467,"tag":468,"props":484,"children":485},{},[486],{"type":472,"value":487},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":467,"tag":468,"props":489,"children":490},{},[491],{"type":472,"value":492},"示例 1：",{"type":467,"tag":494,"props":495,"children":498},"pre",{"className":496,"code":497,"language":472,"meta":460,"style":460},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[499],{"type":467,"tag":500,"props":501,"children":502},"code",{"__ignoreMap":460},[503,514],{"type":467,"tag":504,"props":505,"children":508},"span",{"class":506,"line":507},"line",1,[509],{"type":467,"tag":504,"props":510,"children":511},{},[512],{"type":472,"value":513},"输入：s = \"the sky is blue\"\n",{"type":467,"tag":504,"props":515,"children":517},{"class":506,"line":516},2,[518],{"type":467,"tag":504,"props":519,"children":520},{},[521],{"type":472,"value":522},"输出：\"blue is sky the\"\n",{"type":467,"tag":468,"props":524,"children":525},{},[526],{"type":472,"value":527},"示例 2：",{"type":467,"tag":494,"props":529,"children":531},{"className":496,"code":530,"language":472,"meta":460,"style":460},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[532],{"type":467,"tag":500,"props":533,"children":534},{"__ignoreMap":460},[535,543,551],{"type":467,"tag":504,"props":536,"children":537},{"class":506,"line":507},[538],{"type":467,"tag":504,"props":539,"children":540},{},[541],{"type":472,"value":542},"输入：s = \" hello world \"\n",{"type":467,"tag":504,"props":544,"children":545},{"class":506,"line":516},[546],{"type":467,"tag":504,"props":547,"children":548},{},[549],{"type":472,"value":550},"输出：\"world hello\"\n",{"type":467,"tag":504,"props":552,"children":554},{"class":506,"line":553},3,[555],{"type":467,"tag":504,"props":556,"children":557},{},[558],{"type":472,"value":559},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":467,"tag":468,"props":561,"children":562},{},[563],{"type":472,"value":564},"示例 3：",{"type":467,"tag":494,"props":566,"children":568},{"className":496,"code":567,"language":472,"meta":460,"style":460},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[569],{"type":467,"tag":500,"props":570,"children":571},{"__ignoreMap":460},[572,580,588],{"type":467,"tag":504,"props":573,"children":574},{"class":506,"line":507},[575],{"type":467,"tag":504,"props":576,"children":577},{},[578],{"type":472,"value":579},"输入：s = \"a good example\"\n",{"type":467,"tag":504,"props":581,"children":582},{"class":506,"line":516},[583],{"type":467,"tag":504,"props":584,"children":585},{},[586],{"type":472,"value":587},"输出：\"example good a\"\n",{"type":467,"tag":504,"props":589,"children":590},{"class":506,"line":553},[591],{"type":467,"tag":504,"props":592,"children":593},{},[594],{"type":472,"value":595},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":467,"tag":468,"props":597,"children":598},{},[599],{"type":472,"value":600},"提示：",{"type":467,"tag":602,"props":603,"children":604},"ul",{},[605,611,616],{"type":467,"tag":606,"props":607,"children":608},"li",{},[609],{"type":472,"value":610},"1 \u003C= s.length \u003C= 10^4",{"type":467,"tag":606,"props":612,"children":613},{},[614],{"type":472,"value":615},"s 包含英文大小写字母、数字和空格 ' '",{"type":467,"tag":606,"props":617,"children":618},{},[619],{"type":472,"value":620},"s 中 至少存在一个 单词",{"type":467,"tag":468,"props":622,"children":623},{},[624],{"type":472,"value":625},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":467,"tag":627,"props":628,"children":630},"h2",{"id":629},"解题思路",[631],{"type":472,"value":629},{"type":467,"tag":627,"props":633,"children":635},{"id":634},"实现",[636],{"type":472,"value":634},{"type":467,"tag":638,"props":639,"children":641},"h3",{"id":640},"语言特性",[642],{"type":472,"value":640},{"type":467,"tag":494,"props":644,"children":648},{"className":645,"code":646,"language":647,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[649],{"type":467,"tag":500,"props":650,"children":651},{"__ignoreMap":460},[652,661,687,704,713,757,863],{"type":467,"tag":504,"props":653,"children":654},{"class":506,"line":507},[655],{"type":467,"tag":504,"props":656,"children":658},{"style":657},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[659],{"type":472,"value":660},"/**\n",{"type":467,"tag":504,"props":662,"children":663},{"class":506,"line":516},[664,669,675,681],{"type":467,"tag":504,"props":665,"children":666},{"style":657},[667],{"type":472,"value":668}," * ",{"type":467,"tag":504,"props":670,"children":672},{"style":671},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[673],{"type":472,"value":674},"@param",{"type":467,"tag":504,"props":676,"children":678},{"style":677},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[679],{"type":472,"value":680}," {string}",{"type":467,"tag":504,"props":682,"children":684},{"style":683},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[685],{"type":472,"value":686}," s\n",{"type":467,"tag":504,"props":688,"children":689},{"class":506,"line":553},[690,694,699],{"type":467,"tag":504,"props":691,"children":692},{"style":657},[693],{"type":472,"value":668},{"type":467,"tag":504,"props":695,"children":696},{"style":671},[697],{"type":472,"value":698},"@return",{"type":467,"tag":504,"props":700,"children":701},{"style":677},[702],{"type":472,"value":703}," {string}\n",{"type":467,"tag":504,"props":705,"children":707},{"class":506,"line":706},4,[708],{"type":467,"tag":504,"props":709,"children":710},{"style":657},[711],{"type":472,"value":712}," */\n",{"type":467,"tag":504,"props":714,"children":716},{"class":506,"line":715},5,[717,723,729,735,740,746,752],{"type":467,"tag":504,"props":718,"children":720},{"style":719},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[721],{"type":472,"value":722},"var",{"type":467,"tag":504,"props":724,"children":726},{"style":725},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[727],{"type":472,"value":728}," reverseWords",{"type":467,"tag":504,"props":730,"children":732},{"style":731},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[733],{"type":472,"value":734}," =",{"type":467,"tag":504,"props":736,"children":737},{"style":719},[738],{"type":472,"value":739}," function",{"type":467,"tag":504,"props":741,"children":743},{"style":742},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[744],{"type":472,"value":745}," (",{"type":467,"tag":504,"props":747,"children":749},{"style":748},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[750],{"type":472,"value":751},"s",{"type":467,"tag":504,"props":753,"children":754},{"style":742},[755],{"type":472,"value":756},") {\n",{"type":467,"tag":504,"props":758,"children":760},{"class":506,"line":759},6,[761,767,773,779,784,789,795,800,804,809,813,818,822,826,831,836,840,845,849,853,857],{"type":467,"tag":504,"props":762,"children":764},{"style":763},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[765],{"type":472,"value":766},"  return",{"type":467,"tag":504,"props":768,"children":770},{"style":769},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[771],{"type":472,"value":772}," s",{"type":467,"tag":504,"props":774,"children":776},{"style":775},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[777],{"type":472,"value":778},".",{"type":467,"tag":504,"props":780,"children":781},{"style":725},[782],{"type":472,"value":783},"split",{"type":467,"tag":504,"props":785,"children":786},{"style":742},[787],{"type":472,"value":788},"(",{"type":467,"tag":504,"props":790,"children":792},{"style":791},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[793],{"type":472,"value":794},"\" \"",{"type":467,"tag":504,"props":796,"children":797},{"style":742},[798],{"type":472,"value":799},")",{"type":467,"tag":504,"props":801,"children":802},{"style":775},[803],{"type":472,"value":778},{"type":467,"tag":504,"props":805,"children":806},{"style":725},[807],{"type":472,"value":808},"filter",{"type":467,"tag":504,"props":810,"children":811},{"style":742},[812],{"type":472,"value":788},{"type":467,"tag":504,"props":814,"children":815},{"style":769},[816],{"type":472,"value":817},"Boolean",{"type":467,"tag":504,"props":819,"children":820},{"style":742},[821],{"type":472,"value":799},{"type":467,"tag":504,"props":823,"children":824},{"style":775},[825],{"type":472,"value":778},{"type":467,"tag":504,"props":827,"children":828},{"style":725},[829],{"type":472,"value":830},"reverse",{"type":467,"tag":504,"props":832,"children":833},{"style":742},[834],{"type":472,"value":835},"()",{"type":467,"tag":504,"props":837,"children":838},{"style":775},[839],{"type":472,"value":778},{"type":467,"tag":504,"props":841,"children":842},{"style":725},[843],{"type":472,"value":844},"join",{"type":467,"tag":504,"props":846,"children":847},{"style":742},[848],{"type":472,"value":788},{"type":467,"tag":504,"props":850,"children":851},{"style":791},[852],{"type":472,"value":794},{"type":467,"tag":504,"props":854,"children":855},{"style":742},[856],{"type":472,"value":799},{"type":467,"tag":504,"props":858,"children":860},{"style":859},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[861],{"type":472,"value":862},";\n",{"type":467,"tag":504,"props":864,"children":866},{"class":506,"line":865},7,[867,872],{"type":467,"tag":504,"props":868,"children":869},{"style":742},[870],{"type":472,"value":871},"}",{"type":467,"tag":504,"props":873,"children":874},{"style":859},[875],{"type":472,"value":862},{"type":467,"tag":638,"props":877,"children":879},{"id":878},"双指针",[880],{"type":472,"value":878},{"type":467,"tag":494,"props":882,"children":884},{"className":645,"code":883,"language":647,"meta":460,"style":460},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[885],{"type":467,"tag":500,"props":886,"children":887},{"__ignoreMap":460},[888,895,914,929,936,967,975,983,992,1001,1010,1037,1082,1107,1139,1221,1304,1378,1404,1413,1462],{"type":467,"tag":504,"props":889,"children":890},{"class":506,"line":507},[891],{"type":467,"tag":504,"props":892,"children":893},{"style":657},[894],{"type":472,"value":660},{"type":467,"tag":504,"props":896,"children":897},{"class":506,"line":516},[898,902,906,910],{"type":467,"tag":504,"props":899,"children":900},{"style":657},[901],{"type":472,"value":668},{"type":467,"tag":504,"props":903,"children":904},{"style":671},[905],{"type":472,"value":674},{"type":467,"tag":504,"props":907,"children":908},{"style":677},[909],{"type":472,"value":680},{"type":467,"tag":504,"props":911,"children":912},{"style":683},[913],{"type":472,"value":686},{"type":467,"tag":504,"props":915,"children":916},{"class":506,"line":553},[917,921,925],{"type":467,"tag":504,"props":918,"children":919},{"style":657},[920],{"type":472,"value":668},{"type":467,"tag":504,"props":922,"children":923},{"style":671},[924],{"type":472,"value":698},{"type":467,"tag":504,"props":926,"children":927},{"style":677},[928],{"type":472,"value":703},{"type":467,"tag":504,"props":930,"children":931},{"class":506,"line":706},[932],{"type":467,"tag":504,"props":933,"children":934},{"style":657},[935],{"type":472,"value":712},{"type":467,"tag":504,"props":937,"children":938},{"class":506,"line":715},[939,943,947,951,955,959,963],{"type":467,"tag":504,"props":940,"children":941},{"style":719},[942],{"type":472,"value":722},{"type":467,"tag":504,"props":944,"children":945},{"style":725},[946],{"type":472,"value":728},{"type":467,"tag":504,"props":948,"children":949},{"style":731},[950],{"type":472,"value":734},{"type":467,"tag":504,"props":952,"children":953},{"style":719},[954],{"type":472,"value":739},{"type":467,"tag":504,"props":956,"children":957},{"style":742},[958],{"type":472,"value":745},{"type":467,"tag":504,"props":960,"children":961},{"style":748},[962],{"type":472,"value":751},{"type":467,"tag":504,"props":964,"children":965},{"style":742},[966],{"type":472,"value":756},{"type":467,"tag":504,"props":968,"children":969},{"class":506,"line":759},[970],{"type":467,"tag":504,"props":971,"children":972},{"style":657},[973],{"type":472,"value":974},"  // 倒序遍历字符串\n",{"type":467,"tag":504,"props":976,"children":977},{"class":506,"line":865},[978],{"type":467,"tag":504,"props":979,"children":980},{"style":657},[981],{"type":472,"value":982},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":467,"tag":504,"props":984,"children":986},{"class":506,"line":985},8,[987],{"type":467,"tag":504,"props":988,"children":989},{"style":657},[990],{"type":472,"value":991},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":467,"tag":504,"props":993,"children":995},{"class":506,"line":994},9,[996],{"type":467,"tag":504,"props":997,"children":998},{"style":657},[999],{"type":472,"value":1000},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":467,"tag":504,"props":1002,"children":1004},{"class":506,"line":1003},10,[1005],{"type":467,"tag":504,"props":1006,"children":1007},{"style":657},[1008],{"type":472,"value":1009},"  // 4. 执行 j = i\n",{"type":467,"tag":504,"props":1011,"children":1013},{"class":506,"line":1012},11,[1014,1019,1024,1028,1033],{"type":467,"tag":504,"props":1015,"children":1016},{"style":719},[1017],{"type":472,"value":1018},"  let",{"type":467,"tag":504,"props":1020,"children":1021},{"style":769},[1022],{"type":472,"value":1023}," res",{"type":467,"tag":504,"props":1025,"children":1026},{"style":731},[1027],{"type":472,"value":734},{"type":467,"tag":504,"props":1029,"children":1030},{"style":742},[1031],{"type":472,"value":1032}," []",{"type":467,"tag":504,"props":1034,"children":1035},{"style":859},[1036],{"type":472,"value":862},{"type":467,"tag":504,"props":1038,"children":1040},{"class":506,"line":1039},12,[1041,1045,1050,1054,1058,1062,1067,1072,1078],{"type":467,"tag":504,"props":1042,"children":1043},{"style":719},[1044],{"type":472,"value":1018},{"type":467,"tag":504,"props":1046,"children":1047},{"style":769},[1048],{"type":472,"value":1049}," i",{"type":467,"tag":504,"props":1051,"children":1052},{"style":731},[1053],{"type":472,"value":734},{"type":467,"tag":504,"props":1055,"children":1056},{"style":769},[1057],{"type":472,"value":772},{"type":467,"tag":504,"props":1059,"children":1060},{"style":775},[1061],{"type":472,"value":778},{"type":467,"tag":504,"props":1063,"children":1064},{"style":742},[1065],{"type":472,"value":1066},"length ",{"type":467,"tag":504,"props":1068,"children":1069},{"style":731},[1070],{"type":472,"value":1071},"-",{"type":467,"tag":504,"props":1073,"children":1075},{"style":1074},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1076],{"type":472,"value":1077}," 1",{"type":467,"tag":504,"props":1079,"children":1080},{"style":859},[1081],{"type":472,"value":862},{"type":467,"tag":504,"props":1083,"children":1085},{"class":506,"line":1084},13,[1086,1090,1095,1099,1103],{"type":467,"tag":504,"props":1087,"children":1088},{"style":719},[1089],{"type":472,"value":1018},{"type":467,"tag":504,"props":1091,"children":1092},{"style":769},[1093],{"type":472,"value":1094}," j",{"type":467,"tag":504,"props":1096,"children":1097},{"style":731},[1098],{"type":472,"value":734},{"type":467,"tag":504,"props":1100,"children":1101},{"style":769},[1102],{"type":472,"value":1049},{"type":467,"tag":504,"props":1104,"children":1105},{"style":859},[1106],{"type":472,"value":862},{"type":467,"tag":504,"props":1108,"children":1110},{"class":506,"line":1109},14,[1111,1116,1120,1125,1130,1135],{"type":467,"tag":504,"props":1112,"children":1113},{"style":763},[1114],{"type":472,"value":1115},"  while",{"type":467,"tag":504,"props":1117,"children":1118},{"style":742},[1119],{"type":472,"value":745},{"type":467,"tag":504,"props":1121,"children":1122},{"style":769},[1123],{"type":472,"value":1124},"i",{"type":467,"tag":504,"props":1126,"children":1127},{"style":731},[1128],{"type":472,"value":1129}," >=",{"type":467,"tag":504,"props":1131,"children":1132},{"style":1074},[1133],{"type":472,"value":1134}," 0",{"type":467,"tag":504,"props":1136,"children":1137},{"style":742},[1138],{"type":472,"value":756},{"type":467,"tag":504,"props":1140,"children":1142},{"class":506,"line":1141},15,[1143,1148,1152,1156,1160,1164,1169,1173,1178,1182,1187,1192,1197,1202,1206,1211,1216],{"type":467,"tag":504,"props":1144,"children":1145},{"style":763},[1146],{"type":472,"value":1147},"    while",{"type":467,"tag":504,"props":1149,"children":1150},{"style":742},[1151],{"type":472,"value":745},{"type":467,"tag":504,"props":1153,"children":1154},{"style":769},[1155],{"type":472,"value":1124},{"type":467,"tag":504,"props":1157,"children":1158},{"style":731},[1159],{"type":472,"value":1129},{"type":467,"tag":504,"props":1161,"children":1162},{"style":1074},[1163],{"type":472,"value":1134},{"type":467,"tag":504,"props":1165,"children":1166},{"style":731},[1167],{"type":472,"value":1168}," &&",{"type":467,"tag":504,"props":1170,"children":1171},{"style":769},[1172],{"type":472,"value":772},{"type":467,"tag":504,"props":1174,"children":1175},{"style":742},[1176],{"type":472,"value":1177},"[",{"type":467,"tag":504,"props":1179,"children":1180},{"style":769},[1181],{"type":472,"value":1124},{"type":467,"tag":504,"props":1183,"children":1184},{"style":742},[1185],{"type":472,"value":1186},"] ",{"type":467,"tag":504,"props":1188,"children":1189},{"style":731},[1190],{"type":472,"value":1191},"!==",{"type":467,"tag":504,"props":1193,"children":1194},{"style":791},[1195],{"type":472,"value":1196}," \" \"",{"type":467,"tag":504,"props":1198,"children":1199},{"style":742},[1200],{"type":472,"value":1201},") ",{"type":467,"tag":504,"props":1203,"children":1204},{"style":769},[1205],{"type":472,"value":1124},{"type":467,"tag":504,"props":1207,"children":1208},{"style":731},[1209],{"type":472,"value":1210},"--",{"type":467,"tag":504,"props":1212,"children":1213},{"style":859},[1214],{"type":472,"value":1215},";",{"type":467,"tag":504,"props":1217,"children":1218},{"style":657},[1219],{"type":472,"value":1220}," // 搜索首个空格\n",{"type":467,"tag":504,"props":1222,"children":1224},{"class":506,"line":1223},16,[1225,1230,1234,1239,1243,1247,1251,1256,1260,1264,1269,1273,1278,1282,1286,1290,1295,1299],{"type":467,"tag":504,"props":1226,"children":1227},{"style":769},[1228],{"type":472,"value":1229},"    res",{"type":467,"tag":504,"props":1231,"children":1232},{"style":775},[1233],{"type":472,"value":778},{"type":467,"tag":504,"props":1235,"children":1236},{"style":725},[1237],{"type":472,"value":1238},"push",{"type":467,"tag":504,"props":1240,"children":1241},{"style":742},[1242],{"type":472,"value":788},{"type":467,"tag":504,"props":1244,"children":1245},{"style":769},[1246],{"type":472,"value":751},{"type":467,"tag":504,"props":1248,"children":1249},{"style":775},[1250],{"type":472,"value":778},{"type":467,"tag":504,"props":1252,"children":1253},{"style":725},[1254],{"type":472,"value":1255},"substring",{"type":467,"tag":504,"props":1257,"children":1258},{"style":742},[1259],{"type":472,"value":788},{"type":467,"tag":504,"props":1261,"children":1262},{"style":769},[1263],{"type":472,"value":1124},{"type":467,"tag":504,"props":1265,"children":1266},{"style":731},[1267],{"type":472,"value":1268}," +",{"type":467,"tag":504,"props":1270,"children":1271},{"style":1074},[1272],{"type":472,"value":1077},{"type":467,"tag":504,"props":1274,"children":1275},{"style":859},[1276],{"type":472,"value":1277},",",{"type":467,"tag":504,"props":1279,"children":1280},{"style":769},[1281],{"type":472,"value":1094},{"type":467,"tag":504,"props":1283,"children":1284},{"style":731},[1285],{"type":472,"value":1268},{"type":467,"tag":504,"props":1287,"children":1288},{"style":1074},[1289],{"type":472,"value":1077},{"type":467,"tag":504,"props":1291,"children":1292},{"style":742},[1293],{"type":472,"value":1294},"))",{"type":467,"tag":504,"props":1296,"children":1297},{"style":859},[1298],{"type":472,"value":1215},{"type":467,"tag":504,"props":1300,"children":1301},{"style":657},[1302],{"type":472,"value":1303}," // 添加单词\n",{"type":467,"tag":504,"props":1305,"children":1307},{"class":506,"line":1306},17,[1308,1312,1316,1320,1324,1328,1332,1336,1340,1344,1348,1353,1357,1361,1365,1369,1373],{"type":467,"tag":504,"props":1309,"children":1310},{"style":763},[1311],{"type":472,"value":1147},{"type":467,"tag":504,"props":1313,"children":1314},{"style":742},[1315],{"type":472,"value":745},{"type":467,"tag":504,"props":1317,"children":1318},{"style":769},[1319],{"type":472,"value":1124},{"type":467,"tag":504,"props":1321,"children":1322},{"style":731},[1323],{"type":472,"value":1129},{"type":467,"tag":504,"props":1325,"children":1326},{"style":1074},[1327],{"type":472,"value":1134},{"type":467,"tag":504,"props":1329,"children":1330},{"style":731},[1331],{"type":472,"value":1168},{"type":467,"tag":504,"props":1333,"children":1334},{"style":769},[1335],{"type":472,"value":772},{"type":467,"tag":504,"props":1337,"children":1338},{"style":742},[1339],{"type":472,"value":1177},{"type":467,"tag":504,"props":1341,"children":1342},{"style":769},[1343],{"type":472,"value":1124},{"type":467,"tag":504,"props":1345,"children":1346},{"style":742},[1347],{"type":472,"value":1186},{"type":467,"tag":504,"props":1349,"children":1350},{"style":731},[1351],{"type":472,"value":1352},"===",{"type":467,"tag":504,"props":1354,"children":1355},{"style":791},[1356],{"type":472,"value":1196},{"type":467,"tag":504,"props":1358,"children":1359},{"style":742},[1360],{"type":472,"value":1201},{"type":467,"tag":504,"props":1362,"children":1363},{"style":769},[1364],{"type":472,"value":1124},{"type":467,"tag":504,"props":1366,"children":1367},{"style":731},[1368],{"type":472,"value":1210},{"type":467,"tag":504,"props":1370,"children":1371},{"style":859},[1372],{"type":472,"value":1215},{"type":467,"tag":504,"props":1374,"children":1375},{"style":657},[1376],{"type":472,"value":1377}," // 跳过单词间空格\n",{"type":467,"tag":504,"props":1379,"children":1381},{"class":506,"line":1380},18,[1382,1387,1391,1395,1399],{"type":467,"tag":504,"props":1383,"children":1384},{"style":769},[1385],{"type":472,"value":1386},"    j",{"type":467,"tag":504,"props":1388,"children":1389},{"style":731},[1390],{"type":472,"value":734},{"type":467,"tag":504,"props":1392,"children":1393},{"style":769},[1394],{"type":472,"value":1049},{"type":467,"tag":504,"props":1396,"children":1397},{"style":859},[1398],{"type":472,"value":1215},{"type":467,"tag":504,"props":1400,"children":1401},{"style":657},[1402],{"type":472,"value":1403}," // 指针移动，指向下个单词的尾字符\n",{"type":467,"tag":504,"props":1405,"children":1407},{"class":506,"line":1406},19,[1408],{"type":467,"tag":504,"props":1409,"children":1410},{"style":742},[1411],{"type":472,"value":1412},"  }\n",{"type":467,"tag":504,"props":1414,"children":1416},{"class":506,"line":1415},20,[1417,1421,1425,1429,1433,1437,1441,1445,1449,1454,1458],{"type":467,"tag":504,"props":1418,"children":1419},{"style":763},[1420],{"type":472,"value":766},{"type":467,"tag":504,"props":1422,"children":1423},{"style":769},[1424],{"type":472,"value":1023},{"type":467,"tag":504,"props":1426,"children":1427},{"style":775},[1428],{"type":472,"value":778},{"type":467,"tag":504,"props":1430,"children":1431},{"style":725},[1432],{"type":472,"value":844},{"type":467,"tag":504,"props":1434,"children":1435},{"style":742},[1436],{"type":472,"value":788},{"type":467,"tag":504,"props":1438,"children":1439},{"style":791},[1440],{"type":472,"value":794},{"type":467,"tag":504,"props":1442,"children":1443},{"style":742},[1444],{"type":472,"value":799},{"type":467,"tag":504,"props":1446,"children":1447},{"style":775},[1448],{"type":472,"value":778},{"type":467,"tag":504,"props":1450,"children":1451},{"style":725},[1452],{"type":472,"value":1453},"trim",{"type":467,"tag":504,"props":1455,"children":1456},{"style":742},[1457],{"type":472,"value":835},{"type":467,"tag":504,"props":1459,"children":1460},{"style":859},[1461],{"type":472,"value":862},{"type":467,"tag":504,"props":1463,"children":1465},{"class":506,"line":1464},21,[1466,1470],{"type":467,"tag":504,"props":1467,"children":1468},{"style":742},[1469],{"type":472,"value":871},{"type":467,"tag":504,"props":1471,"children":1472},{"style":859},[1473],{"type":472,"value":862},{"type":467,"tag":1475,"props":1476,"children":1477},"style",{},[1478],{"type":472,"value":1479},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":715,"depth":715,"links":1481},[1482,1483],{"id":629,"depth":516,"text":629},{"id":634,"depth":516,"text":634,"children":1484},[1485,1486],{"id":640,"depth":553,"text":640},{"id":878,"depth":553,"text":878},"markdown","content:1.algorithm:3.leetcode:3.major:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/3.major/151.reverse-words-in-a-string.md","md",[1493,1495],{"_path":168,"title":167,"description":1494},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":174,"title":173,"description":1496},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1713597607337]