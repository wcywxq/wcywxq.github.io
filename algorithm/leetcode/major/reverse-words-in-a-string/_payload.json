[{"data":1,"prerenderedAt":1586},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-words-in-a-string":506,"/algorithm/leetcode/major/reverse-words-in-a-string-surround":1581},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":180,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":179,"description":510,"url":511,"body":512,"_type":1576,"_id":1577,"_source":1578,"_file":1579,"_extension":1580},"major",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":513,"children":514,"toc":1569},"root",[515,522,527,532,537,542,572,577,609,614,645,650,670,675,681,686,692,940,945,1563],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":521,"value":531},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":516,"tag":517,"props":533,"children":534},{},[535],{"type":521,"value":536},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":516,"tag":517,"props":538,"children":539},{},[540],{"type":521,"value":541},"示例 1：",{"type":516,"tag":543,"props":544,"children":547},"pre",{"className":545,"code":546,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[548],{"type":516,"tag":549,"props":550,"children":551},"code",{"__ignoreMap":509},[552,563],{"type":516,"tag":553,"props":554,"children":557},"span",{"class":555,"line":556},"line",1,[558],{"type":516,"tag":553,"props":559,"children":560},{},[561],{"type":521,"value":562},"输入：s = \"the sky is blue\"\n",{"type":516,"tag":553,"props":564,"children":566},{"class":555,"line":565},2,[567],{"type":516,"tag":553,"props":568,"children":569},{},[570],{"type":521,"value":571},"输出：\"blue is sky the\"\n",{"type":516,"tag":517,"props":573,"children":574},{},[575],{"type":521,"value":576},"示例 2：",{"type":516,"tag":543,"props":578,"children":580},{"className":545,"code":579,"language":521,"meta":509,"style":509},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[581],{"type":516,"tag":549,"props":582,"children":583},{"__ignoreMap":509},[584,592,600],{"type":516,"tag":553,"props":585,"children":586},{"class":555,"line":556},[587],{"type":516,"tag":553,"props":588,"children":589},{},[590],{"type":521,"value":591},"输入：s = \" hello world \"\n",{"type":516,"tag":553,"props":593,"children":594},{"class":555,"line":565},[595],{"type":516,"tag":553,"props":596,"children":597},{},[598],{"type":521,"value":599},"输出：\"world hello\"\n",{"type":516,"tag":553,"props":601,"children":603},{"class":555,"line":602},3,[604],{"type":516,"tag":553,"props":605,"children":606},{},[607],{"type":521,"value":608},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":516,"tag":517,"props":610,"children":611},{},[612],{"type":521,"value":613},"示例 3：",{"type":516,"tag":543,"props":615,"children":617},{"className":545,"code":616,"language":521,"meta":509,"style":509},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[618],{"type":516,"tag":549,"props":619,"children":620},{"__ignoreMap":509},[621,629,637],{"type":516,"tag":553,"props":622,"children":623},{"class":555,"line":556},[624],{"type":516,"tag":553,"props":625,"children":626},{},[627],{"type":521,"value":628},"输入：s = \"a good example\"\n",{"type":516,"tag":553,"props":630,"children":631},{"class":555,"line":565},[632],{"type":516,"tag":553,"props":633,"children":634},{},[635],{"type":521,"value":636},"输出：\"example good a\"\n",{"type":516,"tag":553,"props":638,"children":639},{"class":555,"line":602},[640],{"type":516,"tag":553,"props":641,"children":642},{},[643],{"type":521,"value":644},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":516,"tag":517,"props":646,"children":647},{},[648],{"type":521,"value":649},"提示：",{"type":516,"tag":651,"props":652,"children":653},"ul",{},[654,660,665],{"type":516,"tag":655,"props":656,"children":657},"li",{},[658],{"type":521,"value":659},"1 \u003C= s.length \u003C= 10^4",{"type":516,"tag":655,"props":661,"children":662},{},[663],{"type":521,"value":664},"s 包含英文大小写字母、数字和空格 ' '",{"type":516,"tag":655,"props":666,"children":667},{},[668],{"type":521,"value":669},"s 中 至少存在一个 单词",{"type":516,"tag":517,"props":671,"children":672},{},[673],{"type":521,"value":674},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":516,"tag":676,"props":677,"children":679},"h2",{"id":678},"解题思路",[680],{"type":521,"value":678},{"type":516,"tag":676,"props":682,"children":684},{"id":683},"实现",[685],{"type":521,"value":683},{"type":516,"tag":687,"props":688,"children":690},"h3",{"id":689},"语言特性",[691],{"type":521,"value":689},{"type":516,"tag":543,"props":693,"children":697},{"className":694,"code":695,"language":696,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[698],{"type":516,"tag":549,"props":699,"children":700},{"__ignoreMap":509},[701,710,752,781,790,836,931],{"type":516,"tag":553,"props":702,"children":703},{"class":555,"line":556},[704],{"type":516,"tag":553,"props":705,"children":707},{"style":706},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[708],{"type":521,"value":709},"/**\n",{"type":516,"tag":553,"props":711,"children":712},{"class":555,"line":565},[713,718,724,730,735,741,746],{"type":516,"tag":553,"props":714,"children":715},{"style":706},[716],{"type":521,"value":717}," * ",{"type":516,"tag":553,"props":719,"children":721},{"style":720},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[722],{"type":521,"value":723},"@",{"type":516,"tag":553,"props":725,"children":727},{"style":726},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[728],{"type":521,"value":729},"param",{"type":516,"tag":553,"props":731,"children":732},{"style":720},[733],{"type":521,"value":734}," {",{"type":516,"tag":553,"props":736,"children":738},{"style":737},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[739],{"type":521,"value":740},"string",{"type":516,"tag":553,"props":742,"children":743},{"style":720},[744],{"type":521,"value":745},"}",{"type":516,"tag":553,"props":747,"children":749},{"style":748},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[750],{"type":521,"value":751}," s\n",{"type":516,"tag":553,"props":753,"children":754},{"class":555,"line":602},[755,759,763,768,772,776],{"type":516,"tag":553,"props":756,"children":757},{"style":706},[758],{"type":521,"value":717},{"type":516,"tag":553,"props":760,"children":761},{"style":720},[762],{"type":521,"value":723},{"type":516,"tag":553,"props":764,"children":765},{"style":726},[766],{"type":521,"value":767},"return",{"type":516,"tag":553,"props":769,"children":770},{"style":720},[771],{"type":521,"value":734},{"type":516,"tag":553,"props":773,"children":774},{"style":737},[775],{"type":521,"value":740},{"type":516,"tag":553,"props":777,"children":778},{"style":720},[779],{"type":521,"value":780},"}\n",{"type":516,"tag":553,"props":782,"children":784},{"class":555,"line":783},4,[785],{"type":516,"tag":553,"props":786,"children":787},{"style":706},[788],{"type":521,"value":789}," */\n",{"type":516,"tag":553,"props":791,"children":793},{"class":555,"line":792},5,[794,800,806,811,816,821,826,831],{"type":516,"tag":553,"props":795,"children":797},{"style":796},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[798],{"type":521,"value":799},"var",{"type":516,"tag":553,"props":801,"children":803},{"style":802},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[804],{"type":521,"value":805}," reverseWords",{"type":516,"tag":553,"props":807,"children":808},{"style":720},[809],{"type":521,"value":810}," =",{"type":516,"tag":553,"props":812,"children":813},{"style":796},[814],{"type":521,"value":815}," function",{"type":516,"tag":553,"props":817,"children":818},{"style":720},[819],{"type":521,"value":820}," (",{"type":516,"tag":553,"props":822,"children":823},{"style":748},[824],{"type":521,"value":825},"s",{"type":516,"tag":553,"props":827,"children":828},{"style":720},[829],{"type":521,"value":830},")",{"type":516,"tag":553,"props":832,"children":833},{"style":720},[834],{"type":521,"value":835}," {\n",{"type":516,"tag":553,"props":837,"children":839},{"class":555,"line":838},6,[840,845,850,855,860,865,871,876,881,886,890,895,899,904,909,914,918,922,926],{"type":516,"tag":553,"props":841,"children":842},{"style":726},[843],{"type":521,"value":844},"  return",{"type":516,"tag":553,"props":846,"children":847},{"style":748},[848],{"type":521,"value":849}," s",{"type":516,"tag":553,"props":851,"children":852},{"style":720},[853],{"type":521,"value":854},".",{"type":516,"tag":553,"props":856,"children":857},{"style":802},[858],{"type":521,"value":859},"split",{"type":516,"tag":553,"props":861,"children":862},{"style":720},[863],{"type":521,"value":864},"(",{"type":516,"tag":553,"props":866,"children":868},{"style":867},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[869],{"type":521,"value":870},"\"",{"type":516,"tag":553,"props":872,"children":873},{"style":867},[874],{"type":521,"value":875}," \"",{"type":516,"tag":553,"props":877,"children":878},{"style":720},[879],{"type":521,"value":880},").",{"type":516,"tag":553,"props":882,"children":883},{"style":802},[884],{"type":521,"value":885},"filter",{"type":516,"tag":553,"props":887,"children":888},{"style":720},[889],{"type":521,"value":864},{"type":516,"tag":553,"props":891,"children":892},{"style":748},[893],{"type":521,"value":894},"Boolean",{"type":516,"tag":553,"props":896,"children":897},{"style":720},[898],{"type":521,"value":880},{"type":516,"tag":553,"props":900,"children":901},{"style":802},[902],{"type":521,"value":903},"reverse",{"type":516,"tag":553,"props":905,"children":906},{"style":720},[907],{"type":521,"value":908},"().",{"type":516,"tag":553,"props":910,"children":911},{"style":802},[912],{"type":521,"value":913},"join",{"type":516,"tag":553,"props":915,"children":916},{"style":720},[917],{"type":521,"value":864},{"type":516,"tag":553,"props":919,"children":920},{"style":867},[921],{"type":521,"value":870},{"type":516,"tag":553,"props":923,"children":924},{"style":867},[925],{"type":521,"value":875},{"type":516,"tag":553,"props":927,"children":928},{"style":720},[929],{"type":521,"value":930},");\n",{"type":516,"tag":553,"props":932,"children":934},{"class":555,"line":933},7,[935],{"type":516,"tag":553,"props":936,"children":937},{"style":720},[938],{"type":521,"value":939},"};\n",{"type":516,"tag":687,"props":941,"children":943},{"id":942},"双指针",[944],{"type":521,"value":942},{"type":516,"tag":543,"props":946,"children":948},{"className":694,"code":947,"language":696,"meta":509,"style":509},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[949],{"type":516,"tag":549,"props":950,"children":951},{"__ignoreMap":509},[952,959,990,1017,1024,1059,1067,1075,1084,1093,1102,1125,1172,1197,1233,1317,1396,1474,1500,1509,1555],{"type":516,"tag":553,"props":953,"children":954},{"class":555,"line":556},[955],{"type":516,"tag":553,"props":956,"children":957},{"style":706},[958],{"type":521,"value":709},{"type":516,"tag":553,"props":960,"children":961},{"class":555,"line":565},[962,966,970,974,978,982,986],{"type":516,"tag":553,"props":963,"children":964},{"style":706},[965],{"type":521,"value":717},{"type":516,"tag":553,"props":967,"children":968},{"style":720},[969],{"type":521,"value":723},{"type":516,"tag":553,"props":971,"children":972},{"style":726},[973],{"type":521,"value":729},{"type":516,"tag":553,"props":975,"children":976},{"style":720},[977],{"type":521,"value":734},{"type":516,"tag":553,"props":979,"children":980},{"style":737},[981],{"type":521,"value":740},{"type":516,"tag":553,"props":983,"children":984},{"style":720},[985],{"type":521,"value":745},{"type":516,"tag":553,"props":987,"children":988},{"style":748},[989],{"type":521,"value":751},{"type":516,"tag":553,"props":991,"children":992},{"class":555,"line":602},[993,997,1001,1005,1009,1013],{"type":516,"tag":553,"props":994,"children":995},{"style":706},[996],{"type":521,"value":717},{"type":516,"tag":553,"props":998,"children":999},{"style":720},[1000],{"type":521,"value":723},{"type":516,"tag":553,"props":1002,"children":1003},{"style":726},[1004],{"type":521,"value":767},{"type":516,"tag":553,"props":1006,"children":1007},{"style":720},[1008],{"type":521,"value":734},{"type":516,"tag":553,"props":1010,"children":1011},{"style":737},[1012],{"type":521,"value":740},{"type":516,"tag":553,"props":1014,"children":1015},{"style":720},[1016],{"type":521,"value":780},{"type":516,"tag":553,"props":1018,"children":1019},{"class":555,"line":783},[1020],{"type":516,"tag":553,"props":1021,"children":1022},{"style":706},[1023],{"type":521,"value":789},{"type":516,"tag":553,"props":1025,"children":1026},{"class":555,"line":792},[1027,1031,1035,1039,1043,1047,1051,1055],{"type":516,"tag":553,"props":1028,"children":1029},{"style":796},[1030],{"type":521,"value":799},{"type":516,"tag":553,"props":1032,"children":1033},{"style":802},[1034],{"type":521,"value":805},{"type":516,"tag":553,"props":1036,"children":1037},{"style":720},[1038],{"type":521,"value":810},{"type":516,"tag":553,"props":1040,"children":1041},{"style":796},[1042],{"type":521,"value":815},{"type":516,"tag":553,"props":1044,"children":1045},{"style":720},[1046],{"type":521,"value":820},{"type":516,"tag":553,"props":1048,"children":1049},{"style":748},[1050],{"type":521,"value":825},{"type":516,"tag":553,"props":1052,"children":1053},{"style":720},[1054],{"type":521,"value":830},{"type":516,"tag":553,"props":1056,"children":1057},{"style":720},[1058],{"type":521,"value":835},{"type":516,"tag":553,"props":1060,"children":1061},{"class":555,"line":838},[1062],{"type":516,"tag":553,"props":1063,"children":1064},{"style":706},[1065],{"type":521,"value":1066},"  // 倒序遍历字符串\n",{"type":516,"tag":553,"props":1068,"children":1069},{"class":555,"line":933},[1070],{"type":516,"tag":553,"props":1071,"children":1072},{"style":706},[1073],{"type":521,"value":1074},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":516,"tag":553,"props":1076,"children":1078},{"class":555,"line":1077},8,[1079],{"type":516,"tag":553,"props":1080,"children":1081},{"style":706},[1082],{"type":521,"value":1083},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":516,"tag":553,"props":1085,"children":1087},{"class":555,"line":1086},9,[1088],{"type":516,"tag":553,"props":1089,"children":1090},{"style":706},[1091],{"type":521,"value":1092},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":516,"tag":553,"props":1094,"children":1096},{"class":555,"line":1095},10,[1097],{"type":516,"tag":553,"props":1098,"children":1099},{"style":706},[1100],{"type":521,"value":1101},"  // 4. 执行 j = i\n",{"type":516,"tag":553,"props":1103,"children":1105},{"class":555,"line":1104},11,[1106,1111,1116,1120],{"type":516,"tag":553,"props":1107,"children":1108},{"style":796},[1109],{"type":521,"value":1110},"  let",{"type":516,"tag":553,"props":1112,"children":1113},{"style":748},[1114],{"type":521,"value":1115}," res",{"type":516,"tag":553,"props":1117,"children":1118},{"style":720},[1119],{"type":521,"value":810},{"type":516,"tag":553,"props":1121,"children":1122},{"style":720},[1123],{"type":521,"value":1124}," [];\n",{"type":516,"tag":553,"props":1126,"children":1128},{"class":555,"line":1127},12,[1129,1133,1138,1142,1146,1150,1156,1161,1167],{"type":516,"tag":553,"props":1130,"children":1131},{"style":796},[1132],{"type":521,"value":1110},{"type":516,"tag":553,"props":1134,"children":1135},{"style":748},[1136],{"type":521,"value":1137}," i",{"type":516,"tag":553,"props":1139,"children":1140},{"style":720},[1141],{"type":521,"value":810},{"type":516,"tag":553,"props":1143,"children":1144},{"style":748},[1145],{"type":521,"value":849},{"type":516,"tag":553,"props":1147,"children":1148},{"style":720},[1149],{"type":521,"value":854},{"type":516,"tag":553,"props":1151,"children":1153},{"style":1152},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1154],{"type":521,"value":1155},"length",{"type":516,"tag":553,"props":1157,"children":1158},{"style":796},[1159],{"type":521,"value":1160}," -",{"type":516,"tag":553,"props":1162,"children":1164},{"style":1163},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1165],{"type":521,"value":1166}," 1",{"type":516,"tag":553,"props":1168,"children":1169},{"style":720},[1170],{"type":521,"value":1171},";\n",{"type":516,"tag":553,"props":1173,"children":1175},{"class":555,"line":1174},13,[1176,1180,1185,1189,1193],{"type":516,"tag":553,"props":1177,"children":1178},{"style":796},[1179],{"type":521,"value":1110},{"type":516,"tag":553,"props":1181,"children":1182},{"style":748},[1183],{"type":521,"value":1184}," j",{"type":516,"tag":553,"props":1186,"children":1187},{"style":720},[1188],{"type":521,"value":810},{"type":516,"tag":553,"props":1190,"children":1191},{"style":748},[1192],{"type":521,"value":1137},{"type":516,"tag":553,"props":1194,"children":1195},{"style":720},[1196],{"type":521,"value":1171},{"type":516,"tag":553,"props":1198,"children":1200},{"class":555,"line":1199},14,[1201,1206,1210,1215,1220,1225,1229],{"type":516,"tag":553,"props":1202,"children":1203},{"style":726},[1204],{"type":521,"value":1205},"  while",{"type":516,"tag":553,"props":1207,"children":1208},{"style":720},[1209],{"type":521,"value":820},{"type":516,"tag":553,"props":1211,"children":1212},{"style":748},[1213],{"type":521,"value":1214},"i",{"type":516,"tag":553,"props":1216,"children":1217},{"style":720},[1218],{"type":521,"value":1219}," >=",{"type":516,"tag":553,"props":1221,"children":1222},{"style":1163},[1223],{"type":521,"value":1224}," 0",{"type":516,"tag":553,"props":1226,"children":1227},{"style":720},[1228],{"type":521,"value":830},{"type":516,"tag":553,"props":1230,"children":1231},{"style":720},[1232],{"type":521,"value":835},{"type":516,"tag":553,"props":1234,"children":1236},{"class":555,"line":1235},15,[1237,1242,1246,1250,1254,1258,1263,1267,1272,1276,1281,1286,1290,1294,1298,1302,1307,1312],{"type":516,"tag":553,"props":1238,"children":1239},{"style":726},[1240],{"type":521,"value":1241},"    while",{"type":516,"tag":553,"props":1243,"children":1244},{"style":720},[1245],{"type":521,"value":820},{"type":516,"tag":553,"props":1247,"children":1248},{"style":748},[1249],{"type":521,"value":1214},{"type":516,"tag":553,"props":1251,"children":1252},{"style":720},[1253],{"type":521,"value":1219},{"type":516,"tag":553,"props":1255,"children":1256},{"style":1163},[1257],{"type":521,"value":1224},{"type":516,"tag":553,"props":1259,"children":1260},{"style":796},[1261],{"type":521,"value":1262}," &&",{"type":516,"tag":553,"props":1264,"children":1265},{"style":748},[1266],{"type":521,"value":849},{"type":516,"tag":553,"props":1268,"children":1269},{"style":720},[1270],{"type":521,"value":1271},"[",{"type":516,"tag":553,"props":1273,"children":1274},{"style":748},[1275],{"type":521,"value":1214},{"type":516,"tag":553,"props":1277,"children":1278},{"style":720},[1279],{"type":521,"value":1280},"]",{"type":516,"tag":553,"props":1282,"children":1283},{"style":796},[1284],{"type":521,"value":1285}," !==",{"type":516,"tag":553,"props":1287,"children":1288},{"style":867},[1289],{"type":521,"value":875},{"type":516,"tag":553,"props":1291,"children":1292},{"style":867},[1293],{"type":521,"value":875},{"type":516,"tag":553,"props":1295,"children":1296},{"style":720},[1297],{"type":521,"value":830},{"type":516,"tag":553,"props":1299,"children":1300},{"style":748},[1301],{"type":521,"value":1137},{"type":516,"tag":553,"props":1303,"children":1304},{"style":796},[1305],{"type":521,"value":1306},"--",{"type":516,"tag":553,"props":1308,"children":1309},{"style":720},[1310],{"type":521,"value":1311},";",{"type":516,"tag":553,"props":1313,"children":1314},{"style":706},[1315],{"type":521,"value":1316}," // 搜索首个空格\n",{"type":516,"tag":553,"props":1318,"children":1320},{"class":555,"line":1319},16,[1321,1326,1330,1335,1339,1343,1347,1352,1356,1360,1365,1369,1374,1378,1382,1386,1391],{"type":516,"tag":553,"props":1322,"children":1323},{"style":748},[1324],{"type":521,"value":1325},"    res",{"type":516,"tag":553,"props":1327,"children":1328},{"style":720},[1329],{"type":521,"value":854},{"type":516,"tag":553,"props":1331,"children":1332},{"style":802},[1333],{"type":521,"value":1334},"push",{"type":516,"tag":553,"props":1336,"children":1337},{"style":720},[1338],{"type":521,"value":864},{"type":516,"tag":553,"props":1340,"children":1341},{"style":748},[1342],{"type":521,"value":825},{"type":516,"tag":553,"props":1344,"children":1345},{"style":720},[1346],{"type":521,"value":854},{"type":516,"tag":553,"props":1348,"children":1349},{"style":802},[1350],{"type":521,"value":1351},"substring",{"type":516,"tag":553,"props":1353,"children":1354},{"style":720},[1355],{"type":521,"value":864},{"type":516,"tag":553,"props":1357,"children":1358},{"style":748},[1359],{"type":521,"value":1214},{"type":516,"tag":553,"props":1361,"children":1362},{"style":796},[1363],{"type":521,"value":1364}," +",{"type":516,"tag":553,"props":1366,"children":1367},{"style":1163},[1368],{"type":521,"value":1166},{"type":516,"tag":553,"props":1370,"children":1371},{"style":720},[1372],{"type":521,"value":1373},",",{"type":516,"tag":553,"props":1375,"children":1376},{"style":748},[1377],{"type":521,"value":1184},{"type":516,"tag":553,"props":1379,"children":1380},{"style":796},[1381],{"type":521,"value":1364},{"type":516,"tag":553,"props":1383,"children":1384},{"style":1163},[1385],{"type":521,"value":1166},{"type":516,"tag":553,"props":1387,"children":1388},{"style":720},[1389],{"type":521,"value":1390},"));",{"type":516,"tag":553,"props":1392,"children":1393},{"style":706},[1394],{"type":521,"value":1395}," // 添加单词\n",{"type":516,"tag":553,"props":1397,"children":1399},{"class":555,"line":1398},17,[1400,1404,1408,1412,1416,1420,1424,1428,1432,1436,1440,1445,1449,1453,1457,1461,1465,1469],{"type":516,"tag":553,"props":1401,"children":1402},{"style":726},[1403],{"type":521,"value":1241},{"type":516,"tag":553,"props":1405,"children":1406},{"style":720},[1407],{"type":521,"value":820},{"type":516,"tag":553,"props":1409,"children":1410},{"style":748},[1411],{"type":521,"value":1214},{"type":516,"tag":553,"props":1413,"children":1414},{"style":720},[1415],{"type":521,"value":1219},{"type":516,"tag":553,"props":1417,"children":1418},{"style":1163},[1419],{"type":521,"value":1224},{"type":516,"tag":553,"props":1421,"children":1422},{"style":796},[1423],{"type":521,"value":1262},{"type":516,"tag":553,"props":1425,"children":1426},{"style":748},[1427],{"type":521,"value":849},{"type":516,"tag":553,"props":1429,"children":1430},{"style":720},[1431],{"type":521,"value":1271},{"type":516,"tag":553,"props":1433,"children":1434},{"style":748},[1435],{"type":521,"value":1214},{"type":516,"tag":553,"props":1437,"children":1438},{"style":720},[1439],{"type":521,"value":1280},{"type":516,"tag":553,"props":1441,"children":1442},{"style":796},[1443],{"type":521,"value":1444}," ===",{"type":516,"tag":553,"props":1446,"children":1447},{"style":867},[1448],{"type":521,"value":875},{"type":516,"tag":553,"props":1450,"children":1451},{"style":867},[1452],{"type":521,"value":875},{"type":516,"tag":553,"props":1454,"children":1455},{"style":720},[1456],{"type":521,"value":830},{"type":516,"tag":553,"props":1458,"children":1459},{"style":748},[1460],{"type":521,"value":1137},{"type":516,"tag":553,"props":1462,"children":1463},{"style":796},[1464],{"type":521,"value":1306},{"type":516,"tag":553,"props":1466,"children":1467},{"style":720},[1468],{"type":521,"value":1311},{"type":516,"tag":553,"props":1470,"children":1471},{"style":706},[1472],{"type":521,"value":1473}," // 跳过单词间空格\n",{"type":516,"tag":553,"props":1475,"children":1477},{"class":555,"line":1476},18,[1478,1483,1487,1491,1495],{"type":516,"tag":553,"props":1479,"children":1480},{"style":748},[1481],{"type":521,"value":1482},"    j",{"type":516,"tag":553,"props":1484,"children":1485},{"style":720},[1486],{"type":521,"value":810},{"type":516,"tag":553,"props":1488,"children":1489},{"style":748},[1490],{"type":521,"value":1137},{"type":516,"tag":553,"props":1492,"children":1493},{"style":720},[1494],{"type":521,"value":1311},{"type":516,"tag":553,"props":1496,"children":1497},{"style":706},[1498],{"type":521,"value":1499}," // 指针移动，指向下个单词的尾字符\n",{"type":516,"tag":553,"props":1501,"children":1503},{"class":555,"line":1502},19,[1504],{"type":516,"tag":553,"props":1505,"children":1506},{"style":720},[1507],{"type":521,"value":1508},"  }\n",{"type":516,"tag":553,"props":1510,"children":1512},{"class":555,"line":1511},20,[1513,1517,1521,1525,1529,1533,1537,1541,1545,1550],{"type":516,"tag":553,"props":1514,"children":1515},{"style":726},[1516],{"type":521,"value":844},{"type":516,"tag":553,"props":1518,"children":1519},{"style":748},[1520],{"type":521,"value":1115},{"type":516,"tag":553,"props":1522,"children":1523},{"style":720},[1524],{"type":521,"value":854},{"type":516,"tag":553,"props":1526,"children":1527},{"style":802},[1528],{"type":521,"value":913},{"type":516,"tag":553,"props":1530,"children":1531},{"style":720},[1532],{"type":521,"value":864},{"type":516,"tag":553,"props":1534,"children":1535},{"style":867},[1536],{"type":521,"value":870},{"type":516,"tag":553,"props":1538,"children":1539},{"style":867},[1540],{"type":521,"value":875},{"type":516,"tag":553,"props":1542,"children":1543},{"style":720},[1544],{"type":521,"value":880},{"type":516,"tag":553,"props":1546,"children":1547},{"style":802},[1548],{"type":521,"value":1549},"trim",{"type":516,"tag":553,"props":1551,"children":1552},{"style":720},[1553],{"type":521,"value":1554},"();\n",{"type":516,"tag":553,"props":1556,"children":1558},{"class":555,"line":1557},21,[1559],{"type":516,"tag":553,"props":1560,"children":1561},{"style":720},[1562],{"type":521,"value":939},{"type":516,"tag":1564,"props":1565,"children":1566},"style",{},[1567],{"type":521,"value":1568},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":792,"depth":792,"links":1570},[1571,1572],{"id":678,"depth":565,"text":678},{"id":683,"depth":565,"text":683,"children":1573},[1574,1575],{"id":689,"depth":602,"text":689},{"id":942,"depth":602,"text":942},"markdown","content:1.algorithm:3.leetcode:3.major:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/3.major/151.reverse-words-in-a-string.md","md",[1582,1584],{"_path":177,"title":176,"description":1583},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":183,"title":182,"description":1585},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1714058127517]