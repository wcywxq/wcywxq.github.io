[{"data":1,"prerenderedAt":1629},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-words-in-a-string":549,"/algorithm/leetcode/major/reverse-words-in-a-string-surround":1624},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":180,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":179,"description":553,"url":554,"body":555,"_type":1619,"_id":1620,"_source":1621,"_file":1622,"_extension":1623},"major",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":556,"children":557,"toc":1612},"root",[558,565,570,575,580,585,615,620,652,657,688,693,713,718,724,729,735,983,988,1606],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":559,"tag":560,"props":576,"children":577},{},[578],{"type":564,"value":579},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":559,"tag":560,"props":581,"children":582},{},[583],{"type":564,"value":584},"示例 1：",{"type":559,"tag":586,"props":587,"children":590},"pre",{"className":588,"code":589,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[591],{"type":559,"tag":592,"props":593,"children":594},"code",{"__ignoreMap":552},[595,606],{"type":559,"tag":596,"props":597,"children":600},"span",{"class":598,"line":599},"line",1,[601],{"type":559,"tag":596,"props":602,"children":603},{},[604],{"type":564,"value":605},"输入：s = \"the sky is blue\"\n",{"type":559,"tag":596,"props":607,"children":609},{"class":598,"line":608},2,[610],{"type":559,"tag":596,"props":611,"children":612},{},[613],{"type":564,"value":614},"输出：\"blue is sky the\"\n",{"type":559,"tag":560,"props":616,"children":617},{},[618],{"type":564,"value":619},"示例 2：",{"type":559,"tag":586,"props":621,"children":623},{"className":588,"code":622,"language":564,"meta":552,"style":552},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[624],{"type":559,"tag":592,"props":625,"children":626},{"__ignoreMap":552},[627,635,643],{"type":559,"tag":596,"props":628,"children":629},{"class":598,"line":599},[630],{"type":559,"tag":596,"props":631,"children":632},{},[633],{"type":564,"value":634},"输入：s = \" hello world \"\n",{"type":559,"tag":596,"props":636,"children":637},{"class":598,"line":608},[638],{"type":559,"tag":596,"props":639,"children":640},{},[641],{"type":564,"value":642},"输出：\"world hello\"\n",{"type":559,"tag":596,"props":644,"children":646},{"class":598,"line":645},3,[647],{"type":559,"tag":596,"props":648,"children":649},{},[650],{"type":564,"value":651},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":559,"tag":560,"props":653,"children":654},{},[655],{"type":564,"value":656},"示例 3：",{"type":559,"tag":586,"props":658,"children":660},{"className":588,"code":659,"language":564,"meta":552,"style":552},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[661],{"type":559,"tag":592,"props":662,"children":663},{"__ignoreMap":552},[664,672,680],{"type":559,"tag":596,"props":665,"children":666},{"class":598,"line":599},[667],{"type":559,"tag":596,"props":668,"children":669},{},[670],{"type":564,"value":671},"输入：s = \"a good example\"\n",{"type":559,"tag":596,"props":673,"children":674},{"class":598,"line":608},[675],{"type":559,"tag":596,"props":676,"children":677},{},[678],{"type":564,"value":679},"输出：\"example good a\"\n",{"type":559,"tag":596,"props":681,"children":682},{"class":598,"line":645},[683],{"type":559,"tag":596,"props":684,"children":685},{},[686],{"type":564,"value":687},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":559,"tag":560,"props":689,"children":690},{},[691],{"type":564,"value":692},"提示：",{"type":559,"tag":694,"props":695,"children":696},"ul",{},[697,703,708],{"type":559,"tag":698,"props":699,"children":700},"li",{},[701],{"type":564,"value":702},"1 \u003C= s.length \u003C= 10^4",{"type":559,"tag":698,"props":704,"children":705},{},[706],{"type":564,"value":707},"s 包含英文大小写字母、数字和空格 ' '",{"type":559,"tag":698,"props":709,"children":710},{},[711],{"type":564,"value":712},"s 中 至少存在一个 单词",{"type":559,"tag":560,"props":714,"children":715},{},[716],{"type":564,"value":717},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":559,"tag":719,"props":720,"children":722},"h2",{"id":721},"解题思路",[723],{"type":564,"value":721},{"type":559,"tag":719,"props":725,"children":727},{"id":726},"实现",[728],{"type":564,"value":726},{"type":559,"tag":730,"props":731,"children":733},"h3",{"id":732},"语言特性",[734],{"type":564,"value":732},{"type":559,"tag":586,"props":736,"children":740},{"className":737,"code":738,"language":739,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[741],{"type":559,"tag":592,"props":742,"children":743},{"__ignoreMap":552},[744,753,795,824,833,879,974],{"type":559,"tag":596,"props":745,"children":746},{"class":598,"line":599},[747],{"type":559,"tag":596,"props":748,"children":750},{"style":749},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[751],{"type":564,"value":752},"/**\n",{"type":559,"tag":596,"props":754,"children":755},{"class":598,"line":608},[756,761,767,773,778,784,789],{"type":559,"tag":596,"props":757,"children":758},{"style":749},[759],{"type":564,"value":760}," * ",{"type":559,"tag":596,"props":762,"children":764},{"style":763},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[765],{"type":564,"value":766},"@",{"type":559,"tag":596,"props":768,"children":770},{"style":769},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[771],{"type":564,"value":772},"param",{"type":559,"tag":596,"props":774,"children":775},{"style":763},[776],{"type":564,"value":777}," {",{"type":559,"tag":596,"props":779,"children":781},{"style":780},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[782],{"type":564,"value":783},"string",{"type":559,"tag":596,"props":785,"children":786},{"style":763},[787],{"type":564,"value":788},"}",{"type":559,"tag":596,"props":790,"children":792},{"style":791},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[793],{"type":564,"value":794}," s\n",{"type":559,"tag":596,"props":796,"children":797},{"class":598,"line":645},[798,802,806,811,815,819],{"type":559,"tag":596,"props":799,"children":800},{"style":749},[801],{"type":564,"value":760},{"type":559,"tag":596,"props":803,"children":804},{"style":763},[805],{"type":564,"value":766},{"type":559,"tag":596,"props":807,"children":808},{"style":769},[809],{"type":564,"value":810},"return",{"type":559,"tag":596,"props":812,"children":813},{"style":763},[814],{"type":564,"value":777},{"type":559,"tag":596,"props":816,"children":817},{"style":780},[818],{"type":564,"value":783},{"type":559,"tag":596,"props":820,"children":821},{"style":763},[822],{"type":564,"value":823},"}\n",{"type":559,"tag":596,"props":825,"children":827},{"class":598,"line":826},4,[828],{"type":559,"tag":596,"props":829,"children":830},{"style":749},[831],{"type":564,"value":832}," */\n",{"type":559,"tag":596,"props":834,"children":836},{"class":598,"line":835},5,[837,843,849,854,859,864,869,874],{"type":559,"tag":596,"props":838,"children":840},{"style":839},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[841],{"type":564,"value":842},"var",{"type":559,"tag":596,"props":844,"children":846},{"style":845},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[847],{"type":564,"value":848}," reverseWords",{"type":559,"tag":596,"props":850,"children":851},{"style":763},[852],{"type":564,"value":853}," =",{"type":559,"tag":596,"props":855,"children":856},{"style":839},[857],{"type":564,"value":858}," function",{"type":559,"tag":596,"props":860,"children":861},{"style":763},[862],{"type":564,"value":863}," (",{"type":559,"tag":596,"props":865,"children":866},{"style":791},[867],{"type":564,"value":868},"s",{"type":559,"tag":596,"props":870,"children":871},{"style":763},[872],{"type":564,"value":873},")",{"type":559,"tag":596,"props":875,"children":876},{"style":763},[877],{"type":564,"value":878}," {\n",{"type":559,"tag":596,"props":880,"children":882},{"class":598,"line":881},6,[883,888,893,898,903,908,914,919,924,929,933,938,942,947,952,957,961,965,969],{"type":559,"tag":596,"props":884,"children":885},{"style":769},[886],{"type":564,"value":887},"  return",{"type":559,"tag":596,"props":889,"children":890},{"style":791},[891],{"type":564,"value":892}," s",{"type":559,"tag":596,"props":894,"children":895},{"style":763},[896],{"type":564,"value":897},".",{"type":559,"tag":596,"props":899,"children":900},{"style":845},[901],{"type":564,"value":902},"split",{"type":559,"tag":596,"props":904,"children":905},{"style":763},[906],{"type":564,"value":907},"(",{"type":559,"tag":596,"props":909,"children":911},{"style":910},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[912],{"type":564,"value":913},"\"",{"type":559,"tag":596,"props":915,"children":916},{"style":910},[917],{"type":564,"value":918}," \"",{"type":559,"tag":596,"props":920,"children":921},{"style":763},[922],{"type":564,"value":923},").",{"type":559,"tag":596,"props":925,"children":926},{"style":845},[927],{"type":564,"value":928},"filter",{"type":559,"tag":596,"props":930,"children":931},{"style":763},[932],{"type":564,"value":907},{"type":559,"tag":596,"props":934,"children":935},{"style":791},[936],{"type":564,"value":937},"Boolean",{"type":559,"tag":596,"props":939,"children":940},{"style":763},[941],{"type":564,"value":923},{"type":559,"tag":596,"props":943,"children":944},{"style":845},[945],{"type":564,"value":946},"reverse",{"type":559,"tag":596,"props":948,"children":949},{"style":763},[950],{"type":564,"value":951},"().",{"type":559,"tag":596,"props":953,"children":954},{"style":845},[955],{"type":564,"value":956},"join",{"type":559,"tag":596,"props":958,"children":959},{"style":763},[960],{"type":564,"value":907},{"type":559,"tag":596,"props":962,"children":963},{"style":910},[964],{"type":564,"value":913},{"type":559,"tag":596,"props":966,"children":967},{"style":910},[968],{"type":564,"value":918},{"type":559,"tag":596,"props":970,"children":971},{"style":763},[972],{"type":564,"value":973},");\n",{"type":559,"tag":596,"props":975,"children":977},{"class":598,"line":976},7,[978],{"type":559,"tag":596,"props":979,"children":980},{"style":763},[981],{"type":564,"value":982},"};\n",{"type":559,"tag":730,"props":984,"children":986},{"id":985},"双指针",[987],{"type":564,"value":985},{"type":559,"tag":586,"props":989,"children":991},{"className":737,"code":990,"language":739,"meta":552,"style":552},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[992],{"type":559,"tag":592,"props":993,"children":994},{"__ignoreMap":552},[995,1002,1033,1060,1067,1102,1110,1118,1127,1136,1145,1168,1215,1240,1276,1360,1439,1517,1543,1552,1598],{"type":559,"tag":596,"props":996,"children":997},{"class":598,"line":599},[998],{"type":559,"tag":596,"props":999,"children":1000},{"style":749},[1001],{"type":564,"value":752},{"type":559,"tag":596,"props":1003,"children":1004},{"class":598,"line":608},[1005,1009,1013,1017,1021,1025,1029],{"type":559,"tag":596,"props":1006,"children":1007},{"style":749},[1008],{"type":564,"value":760},{"type":559,"tag":596,"props":1010,"children":1011},{"style":763},[1012],{"type":564,"value":766},{"type":559,"tag":596,"props":1014,"children":1015},{"style":769},[1016],{"type":564,"value":772},{"type":559,"tag":596,"props":1018,"children":1019},{"style":763},[1020],{"type":564,"value":777},{"type":559,"tag":596,"props":1022,"children":1023},{"style":780},[1024],{"type":564,"value":783},{"type":559,"tag":596,"props":1026,"children":1027},{"style":763},[1028],{"type":564,"value":788},{"type":559,"tag":596,"props":1030,"children":1031},{"style":791},[1032],{"type":564,"value":794},{"type":559,"tag":596,"props":1034,"children":1035},{"class":598,"line":645},[1036,1040,1044,1048,1052,1056],{"type":559,"tag":596,"props":1037,"children":1038},{"style":749},[1039],{"type":564,"value":760},{"type":559,"tag":596,"props":1041,"children":1042},{"style":763},[1043],{"type":564,"value":766},{"type":559,"tag":596,"props":1045,"children":1046},{"style":769},[1047],{"type":564,"value":810},{"type":559,"tag":596,"props":1049,"children":1050},{"style":763},[1051],{"type":564,"value":777},{"type":559,"tag":596,"props":1053,"children":1054},{"style":780},[1055],{"type":564,"value":783},{"type":559,"tag":596,"props":1057,"children":1058},{"style":763},[1059],{"type":564,"value":823},{"type":559,"tag":596,"props":1061,"children":1062},{"class":598,"line":826},[1063],{"type":559,"tag":596,"props":1064,"children":1065},{"style":749},[1066],{"type":564,"value":832},{"type":559,"tag":596,"props":1068,"children":1069},{"class":598,"line":835},[1070,1074,1078,1082,1086,1090,1094,1098],{"type":559,"tag":596,"props":1071,"children":1072},{"style":839},[1073],{"type":564,"value":842},{"type":559,"tag":596,"props":1075,"children":1076},{"style":845},[1077],{"type":564,"value":848},{"type":559,"tag":596,"props":1079,"children":1080},{"style":763},[1081],{"type":564,"value":853},{"type":559,"tag":596,"props":1083,"children":1084},{"style":839},[1085],{"type":564,"value":858},{"type":559,"tag":596,"props":1087,"children":1088},{"style":763},[1089],{"type":564,"value":863},{"type":559,"tag":596,"props":1091,"children":1092},{"style":791},[1093],{"type":564,"value":868},{"type":559,"tag":596,"props":1095,"children":1096},{"style":763},[1097],{"type":564,"value":873},{"type":559,"tag":596,"props":1099,"children":1100},{"style":763},[1101],{"type":564,"value":878},{"type":559,"tag":596,"props":1103,"children":1104},{"class":598,"line":881},[1105],{"type":559,"tag":596,"props":1106,"children":1107},{"style":749},[1108],{"type":564,"value":1109},"  // 倒序遍历字符串\n",{"type":559,"tag":596,"props":1111,"children":1112},{"class":598,"line":976},[1113],{"type":559,"tag":596,"props":1114,"children":1115},{"style":749},[1116],{"type":564,"value":1117},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":559,"tag":596,"props":1119,"children":1121},{"class":598,"line":1120},8,[1122],{"type":559,"tag":596,"props":1123,"children":1124},{"style":749},[1125],{"type":564,"value":1126},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":559,"tag":596,"props":1128,"children":1130},{"class":598,"line":1129},9,[1131],{"type":559,"tag":596,"props":1132,"children":1133},{"style":749},[1134],{"type":564,"value":1135},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":559,"tag":596,"props":1137,"children":1139},{"class":598,"line":1138},10,[1140],{"type":559,"tag":596,"props":1141,"children":1142},{"style":749},[1143],{"type":564,"value":1144},"  // 4. 执行 j = i\n",{"type":559,"tag":596,"props":1146,"children":1148},{"class":598,"line":1147},11,[1149,1154,1159,1163],{"type":559,"tag":596,"props":1150,"children":1151},{"style":839},[1152],{"type":564,"value":1153},"  let",{"type":559,"tag":596,"props":1155,"children":1156},{"style":791},[1157],{"type":564,"value":1158}," res",{"type":559,"tag":596,"props":1160,"children":1161},{"style":763},[1162],{"type":564,"value":853},{"type":559,"tag":596,"props":1164,"children":1165},{"style":763},[1166],{"type":564,"value":1167}," [];\n",{"type":559,"tag":596,"props":1169,"children":1171},{"class":598,"line":1170},12,[1172,1176,1181,1185,1189,1193,1199,1204,1210],{"type":559,"tag":596,"props":1173,"children":1174},{"style":839},[1175],{"type":564,"value":1153},{"type":559,"tag":596,"props":1177,"children":1178},{"style":791},[1179],{"type":564,"value":1180}," i",{"type":559,"tag":596,"props":1182,"children":1183},{"style":763},[1184],{"type":564,"value":853},{"type":559,"tag":596,"props":1186,"children":1187},{"style":791},[1188],{"type":564,"value":892},{"type":559,"tag":596,"props":1190,"children":1191},{"style":763},[1192],{"type":564,"value":897},{"type":559,"tag":596,"props":1194,"children":1196},{"style":1195},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1197],{"type":564,"value":1198},"length",{"type":559,"tag":596,"props":1200,"children":1201},{"style":839},[1202],{"type":564,"value":1203}," -",{"type":559,"tag":596,"props":1205,"children":1207},{"style":1206},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1208],{"type":564,"value":1209}," 1",{"type":559,"tag":596,"props":1211,"children":1212},{"style":763},[1213],{"type":564,"value":1214},";\n",{"type":559,"tag":596,"props":1216,"children":1218},{"class":598,"line":1217},13,[1219,1223,1228,1232,1236],{"type":559,"tag":596,"props":1220,"children":1221},{"style":839},[1222],{"type":564,"value":1153},{"type":559,"tag":596,"props":1224,"children":1225},{"style":791},[1226],{"type":564,"value":1227}," j",{"type":559,"tag":596,"props":1229,"children":1230},{"style":763},[1231],{"type":564,"value":853},{"type":559,"tag":596,"props":1233,"children":1234},{"style":791},[1235],{"type":564,"value":1180},{"type":559,"tag":596,"props":1237,"children":1238},{"style":763},[1239],{"type":564,"value":1214},{"type":559,"tag":596,"props":1241,"children":1243},{"class":598,"line":1242},14,[1244,1249,1253,1258,1263,1268,1272],{"type":559,"tag":596,"props":1245,"children":1246},{"style":769},[1247],{"type":564,"value":1248},"  while",{"type":559,"tag":596,"props":1250,"children":1251},{"style":763},[1252],{"type":564,"value":863},{"type":559,"tag":596,"props":1254,"children":1255},{"style":791},[1256],{"type":564,"value":1257},"i",{"type":559,"tag":596,"props":1259,"children":1260},{"style":763},[1261],{"type":564,"value":1262}," >=",{"type":559,"tag":596,"props":1264,"children":1265},{"style":1206},[1266],{"type":564,"value":1267}," 0",{"type":559,"tag":596,"props":1269,"children":1270},{"style":763},[1271],{"type":564,"value":873},{"type":559,"tag":596,"props":1273,"children":1274},{"style":763},[1275],{"type":564,"value":878},{"type":559,"tag":596,"props":1277,"children":1279},{"class":598,"line":1278},15,[1280,1285,1289,1293,1297,1301,1306,1310,1315,1319,1324,1329,1333,1337,1341,1345,1350,1355],{"type":559,"tag":596,"props":1281,"children":1282},{"style":769},[1283],{"type":564,"value":1284},"    while",{"type":559,"tag":596,"props":1286,"children":1287},{"style":763},[1288],{"type":564,"value":863},{"type":559,"tag":596,"props":1290,"children":1291},{"style":791},[1292],{"type":564,"value":1257},{"type":559,"tag":596,"props":1294,"children":1295},{"style":763},[1296],{"type":564,"value":1262},{"type":559,"tag":596,"props":1298,"children":1299},{"style":1206},[1300],{"type":564,"value":1267},{"type":559,"tag":596,"props":1302,"children":1303},{"style":839},[1304],{"type":564,"value":1305}," &&",{"type":559,"tag":596,"props":1307,"children":1308},{"style":791},[1309],{"type":564,"value":892},{"type":559,"tag":596,"props":1311,"children":1312},{"style":763},[1313],{"type":564,"value":1314},"[",{"type":559,"tag":596,"props":1316,"children":1317},{"style":791},[1318],{"type":564,"value":1257},{"type":559,"tag":596,"props":1320,"children":1321},{"style":763},[1322],{"type":564,"value":1323},"]",{"type":559,"tag":596,"props":1325,"children":1326},{"style":839},[1327],{"type":564,"value":1328}," !==",{"type":559,"tag":596,"props":1330,"children":1331},{"style":910},[1332],{"type":564,"value":918},{"type":559,"tag":596,"props":1334,"children":1335},{"style":910},[1336],{"type":564,"value":918},{"type":559,"tag":596,"props":1338,"children":1339},{"style":763},[1340],{"type":564,"value":873},{"type":559,"tag":596,"props":1342,"children":1343},{"style":791},[1344],{"type":564,"value":1180},{"type":559,"tag":596,"props":1346,"children":1347},{"style":839},[1348],{"type":564,"value":1349},"--",{"type":559,"tag":596,"props":1351,"children":1352},{"style":763},[1353],{"type":564,"value":1354},";",{"type":559,"tag":596,"props":1356,"children":1357},{"style":749},[1358],{"type":564,"value":1359}," // 搜索首个空格\n",{"type":559,"tag":596,"props":1361,"children":1363},{"class":598,"line":1362},16,[1364,1369,1373,1378,1382,1386,1390,1395,1399,1403,1408,1412,1417,1421,1425,1429,1434],{"type":559,"tag":596,"props":1365,"children":1366},{"style":791},[1367],{"type":564,"value":1368},"    res",{"type":559,"tag":596,"props":1370,"children":1371},{"style":763},[1372],{"type":564,"value":897},{"type":559,"tag":596,"props":1374,"children":1375},{"style":845},[1376],{"type":564,"value":1377},"push",{"type":559,"tag":596,"props":1379,"children":1380},{"style":763},[1381],{"type":564,"value":907},{"type":559,"tag":596,"props":1383,"children":1384},{"style":791},[1385],{"type":564,"value":868},{"type":559,"tag":596,"props":1387,"children":1388},{"style":763},[1389],{"type":564,"value":897},{"type":559,"tag":596,"props":1391,"children":1392},{"style":845},[1393],{"type":564,"value":1394},"substring",{"type":559,"tag":596,"props":1396,"children":1397},{"style":763},[1398],{"type":564,"value":907},{"type":559,"tag":596,"props":1400,"children":1401},{"style":791},[1402],{"type":564,"value":1257},{"type":559,"tag":596,"props":1404,"children":1405},{"style":839},[1406],{"type":564,"value":1407}," +",{"type":559,"tag":596,"props":1409,"children":1410},{"style":1206},[1411],{"type":564,"value":1209},{"type":559,"tag":596,"props":1413,"children":1414},{"style":763},[1415],{"type":564,"value":1416},",",{"type":559,"tag":596,"props":1418,"children":1419},{"style":791},[1420],{"type":564,"value":1227},{"type":559,"tag":596,"props":1422,"children":1423},{"style":839},[1424],{"type":564,"value":1407},{"type":559,"tag":596,"props":1426,"children":1427},{"style":1206},[1428],{"type":564,"value":1209},{"type":559,"tag":596,"props":1430,"children":1431},{"style":763},[1432],{"type":564,"value":1433},"));",{"type":559,"tag":596,"props":1435,"children":1436},{"style":749},[1437],{"type":564,"value":1438}," // 添加单词\n",{"type":559,"tag":596,"props":1440,"children":1442},{"class":598,"line":1441},17,[1443,1447,1451,1455,1459,1463,1467,1471,1475,1479,1483,1488,1492,1496,1500,1504,1508,1512],{"type":559,"tag":596,"props":1444,"children":1445},{"style":769},[1446],{"type":564,"value":1284},{"type":559,"tag":596,"props":1448,"children":1449},{"style":763},[1450],{"type":564,"value":863},{"type":559,"tag":596,"props":1452,"children":1453},{"style":791},[1454],{"type":564,"value":1257},{"type":559,"tag":596,"props":1456,"children":1457},{"style":763},[1458],{"type":564,"value":1262},{"type":559,"tag":596,"props":1460,"children":1461},{"style":1206},[1462],{"type":564,"value":1267},{"type":559,"tag":596,"props":1464,"children":1465},{"style":839},[1466],{"type":564,"value":1305},{"type":559,"tag":596,"props":1468,"children":1469},{"style":791},[1470],{"type":564,"value":892},{"type":559,"tag":596,"props":1472,"children":1473},{"style":763},[1474],{"type":564,"value":1314},{"type":559,"tag":596,"props":1476,"children":1477},{"style":791},[1478],{"type":564,"value":1257},{"type":559,"tag":596,"props":1480,"children":1481},{"style":763},[1482],{"type":564,"value":1323},{"type":559,"tag":596,"props":1484,"children":1485},{"style":839},[1486],{"type":564,"value":1487}," ===",{"type":559,"tag":596,"props":1489,"children":1490},{"style":910},[1491],{"type":564,"value":918},{"type":559,"tag":596,"props":1493,"children":1494},{"style":910},[1495],{"type":564,"value":918},{"type":559,"tag":596,"props":1497,"children":1498},{"style":763},[1499],{"type":564,"value":873},{"type":559,"tag":596,"props":1501,"children":1502},{"style":791},[1503],{"type":564,"value":1180},{"type":559,"tag":596,"props":1505,"children":1506},{"style":839},[1507],{"type":564,"value":1349},{"type":559,"tag":596,"props":1509,"children":1510},{"style":763},[1511],{"type":564,"value":1354},{"type":559,"tag":596,"props":1513,"children":1514},{"style":749},[1515],{"type":564,"value":1516}," // 跳过单词间空格\n",{"type":559,"tag":596,"props":1518,"children":1520},{"class":598,"line":1519},18,[1521,1526,1530,1534,1538],{"type":559,"tag":596,"props":1522,"children":1523},{"style":791},[1524],{"type":564,"value":1525},"    j",{"type":559,"tag":596,"props":1527,"children":1528},{"style":763},[1529],{"type":564,"value":853},{"type":559,"tag":596,"props":1531,"children":1532},{"style":791},[1533],{"type":564,"value":1180},{"type":559,"tag":596,"props":1535,"children":1536},{"style":763},[1537],{"type":564,"value":1354},{"type":559,"tag":596,"props":1539,"children":1540},{"style":749},[1541],{"type":564,"value":1542}," // 指针移动，指向下个单词的尾字符\n",{"type":559,"tag":596,"props":1544,"children":1546},{"class":598,"line":1545},19,[1547],{"type":559,"tag":596,"props":1548,"children":1549},{"style":763},[1550],{"type":564,"value":1551},"  }\n",{"type":559,"tag":596,"props":1553,"children":1555},{"class":598,"line":1554},20,[1556,1560,1564,1568,1572,1576,1580,1584,1588,1593],{"type":559,"tag":596,"props":1557,"children":1558},{"style":769},[1559],{"type":564,"value":887},{"type":559,"tag":596,"props":1561,"children":1562},{"style":791},[1563],{"type":564,"value":1158},{"type":559,"tag":596,"props":1565,"children":1566},{"style":763},[1567],{"type":564,"value":897},{"type":559,"tag":596,"props":1569,"children":1570},{"style":845},[1571],{"type":564,"value":956},{"type":559,"tag":596,"props":1573,"children":1574},{"style":763},[1575],{"type":564,"value":907},{"type":559,"tag":596,"props":1577,"children":1578},{"style":910},[1579],{"type":564,"value":913},{"type":559,"tag":596,"props":1581,"children":1582},{"style":910},[1583],{"type":564,"value":918},{"type":559,"tag":596,"props":1585,"children":1586},{"style":763},[1587],{"type":564,"value":923},{"type":559,"tag":596,"props":1589,"children":1590},{"style":845},[1591],{"type":564,"value":1592},"trim",{"type":559,"tag":596,"props":1594,"children":1595},{"style":763},[1596],{"type":564,"value":1597},"();\n",{"type":559,"tag":596,"props":1599,"children":1601},{"class":598,"line":1600},21,[1602],{"type":559,"tag":596,"props":1603,"children":1604},{"style":763},[1605],{"type":564,"value":982},{"type":559,"tag":1607,"props":1608,"children":1609},"style",{},[1610],{"type":564,"value":1611},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":835,"depth":835,"links":1613},[1614,1615],{"id":721,"depth":608,"text":721},{"id":726,"depth":608,"text":726,"children":1616},[1617,1618],{"id":732,"depth":645,"text":732},{"id":985,"depth":645,"text":985},"markdown","content:1.algorithm:3.leetcode:3.major:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/3.major/151.reverse-words-in-a-string.md","md",[1625,1627],{"_path":177,"title":176,"description":1626},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":183,"title":182,"description":1628},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1715007653305]