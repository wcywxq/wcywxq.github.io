[{"data":1,"prerenderedAt":1589},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-words-in-a-string":509,"/algorithm/leetcode/major/reverse-words-in-a-string-surround":1584},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":180,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":179,"description":513,"url":514,"body":515,"_type":1579,"_id":1580,"_source":1581,"_file":1582,"_extension":1583},"major",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":516,"children":517,"toc":1572},"root",[518,525,530,535,540,545,575,580,612,617,648,653,673,678,684,689,695,943,948,1566],{"type":519,"tag":520,"props":521,"children":522},"element","p",{},[523],{"type":524,"value":513},"text",{"type":519,"tag":520,"props":526,"children":527},{},[528],{"type":524,"value":529},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":519,"tag":520,"props":531,"children":532},{},[533],{"type":524,"value":534},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":519,"tag":520,"props":536,"children":537},{},[538],{"type":524,"value":539},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":519,"tag":520,"props":541,"children":542},{},[543],{"type":524,"value":544},"示例 1：",{"type":519,"tag":546,"props":547,"children":550},"pre",{"className":548,"code":549,"language":524,"meta":512,"style":512},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[551],{"type":519,"tag":552,"props":553,"children":554},"code",{"__ignoreMap":512},[555,566],{"type":519,"tag":556,"props":557,"children":560},"span",{"class":558,"line":559},"line",1,[561],{"type":519,"tag":556,"props":562,"children":563},{},[564],{"type":524,"value":565},"输入：s = \"the sky is blue\"\n",{"type":519,"tag":556,"props":567,"children":569},{"class":558,"line":568},2,[570],{"type":519,"tag":556,"props":571,"children":572},{},[573],{"type":524,"value":574},"输出：\"blue is sky the\"\n",{"type":519,"tag":520,"props":576,"children":577},{},[578],{"type":524,"value":579},"示例 2：",{"type":519,"tag":546,"props":581,"children":583},{"className":548,"code":582,"language":524,"meta":512,"style":512},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[584],{"type":519,"tag":552,"props":585,"children":586},{"__ignoreMap":512},[587,595,603],{"type":519,"tag":556,"props":588,"children":589},{"class":558,"line":559},[590],{"type":519,"tag":556,"props":591,"children":592},{},[593],{"type":524,"value":594},"输入：s = \" hello world \"\n",{"type":519,"tag":556,"props":596,"children":597},{"class":558,"line":568},[598],{"type":519,"tag":556,"props":599,"children":600},{},[601],{"type":524,"value":602},"输出：\"world hello\"\n",{"type":519,"tag":556,"props":604,"children":606},{"class":558,"line":605},3,[607],{"type":519,"tag":556,"props":608,"children":609},{},[610],{"type":524,"value":611},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":519,"tag":520,"props":613,"children":614},{},[615],{"type":524,"value":616},"示例 3：",{"type":519,"tag":546,"props":618,"children":620},{"className":548,"code":619,"language":524,"meta":512,"style":512},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[621],{"type":519,"tag":552,"props":622,"children":623},{"__ignoreMap":512},[624,632,640],{"type":519,"tag":556,"props":625,"children":626},{"class":558,"line":559},[627],{"type":519,"tag":556,"props":628,"children":629},{},[630],{"type":524,"value":631},"输入：s = \"a good example\"\n",{"type":519,"tag":556,"props":633,"children":634},{"class":558,"line":568},[635],{"type":519,"tag":556,"props":636,"children":637},{},[638],{"type":524,"value":639},"输出：\"example good a\"\n",{"type":519,"tag":556,"props":641,"children":642},{"class":558,"line":605},[643],{"type":519,"tag":556,"props":644,"children":645},{},[646],{"type":524,"value":647},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":519,"tag":520,"props":649,"children":650},{},[651],{"type":524,"value":652},"提示：",{"type":519,"tag":654,"props":655,"children":656},"ul",{},[657,663,668],{"type":519,"tag":658,"props":659,"children":660},"li",{},[661],{"type":524,"value":662},"1 \u003C= s.length \u003C= 10^4",{"type":519,"tag":658,"props":664,"children":665},{},[666],{"type":524,"value":667},"s 包含英文大小写字母、数字和空格 ' '",{"type":519,"tag":658,"props":669,"children":670},{},[671],{"type":524,"value":672},"s 中 至少存在一个 单词",{"type":519,"tag":520,"props":674,"children":675},{},[676],{"type":524,"value":677},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":519,"tag":679,"props":680,"children":682},"h2",{"id":681},"解题思路",[683],{"type":524,"value":681},{"type":519,"tag":679,"props":685,"children":687},{"id":686},"实现",[688],{"type":524,"value":686},{"type":519,"tag":690,"props":691,"children":693},"h3",{"id":692},"语言特性",[694],{"type":524,"value":692},{"type":519,"tag":546,"props":696,"children":700},{"className":697,"code":698,"language":699,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[701],{"type":519,"tag":552,"props":702,"children":703},{"__ignoreMap":512},[704,713,755,784,793,839,934],{"type":519,"tag":556,"props":705,"children":706},{"class":558,"line":559},[707],{"type":519,"tag":556,"props":708,"children":710},{"style":709},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[711],{"type":524,"value":712},"/**\n",{"type":519,"tag":556,"props":714,"children":715},{"class":558,"line":568},[716,721,727,733,738,744,749],{"type":519,"tag":556,"props":717,"children":718},{"style":709},[719],{"type":524,"value":720}," * ",{"type":519,"tag":556,"props":722,"children":724},{"style":723},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[725],{"type":524,"value":726},"@",{"type":519,"tag":556,"props":728,"children":730},{"style":729},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[731],{"type":524,"value":732},"param",{"type":519,"tag":556,"props":734,"children":735},{"style":723},[736],{"type":524,"value":737}," {",{"type":519,"tag":556,"props":739,"children":741},{"style":740},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[742],{"type":524,"value":743},"string",{"type":519,"tag":556,"props":745,"children":746},{"style":723},[747],{"type":524,"value":748},"}",{"type":519,"tag":556,"props":750,"children":752},{"style":751},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[753],{"type":524,"value":754}," s\n",{"type":519,"tag":556,"props":756,"children":757},{"class":558,"line":605},[758,762,766,771,775,779],{"type":519,"tag":556,"props":759,"children":760},{"style":709},[761],{"type":524,"value":720},{"type":519,"tag":556,"props":763,"children":764},{"style":723},[765],{"type":524,"value":726},{"type":519,"tag":556,"props":767,"children":768},{"style":729},[769],{"type":524,"value":770},"return",{"type":519,"tag":556,"props":772,"children":773},{"style":723},[774],{"type":524,"value":737},{"type":519,"tag":556,"props":776,"children":777},{"style":740},[778],{"type":524,"value":743},{"type":519,"tag":556,"props":780,"children":781},{"style":723},[782],{"type":524,"value":783},"}\n",{"type":519,"tag":556,"props":785,"children":787},{"class":558,"line":786},4,[788],{"type":519,"tag":556,"props":789,"children":790},{"style":709},[791],{"type":524,"value":792}," */\n",{"type":519,"tag":556,"props":794,"children":796},{"class":558,"line":795},5,[797,803,809,814,819,824,829,834],{"type":519,"tag":556,"props":798,"children":800},{"style":799},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[801],{"type":524,"value":802},"var",{"type":519,"tag":556,"props":804,"children":806},{"style":805},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[807],{"type":524,"value":808}," reverseWords",{"type":519,"tag":556,"props":810,"children":811},{"style":723},[812],{"type":524,"value":813}," =",{"type":519,"tag":556,"props":815,"children":816},{"style":799},[817],{"type":524,"value":818}," function",{"type":519,"tag":556,"props":820,"children":821},{"style":723},[822],{"type":524,"value":823}," (",{"type":519,"tag":556,"props":825,"children":826},{"style":751},[827],{"type":524,"value":828},"s",{"type":519,"tag":556,"props":830,"children":831},{"style":723},[832],{"type":524,"value":833},")",{"type":519,"tag":556,"props":835,"children":836},{"style":723},[837],{"type":524,"value":838}," {\n",{"type":519,"tag":556,"props":840,"children":842},{"class":558,"line":841},6,[843,848,853,858,863,868,874,879,884,889,893,898,902,907,912,917,921,925,929],{"type":519,"tag":556,"props":844,"children":845},{"style":729},[846],{"type":524,"value":847},"  return",{"type":519,"tag":556,"props":849,"children":850},{"style":751},[851],{"type":524,"value":852}," s",{"type":519,"tag":556,"props":854,"children":855},{"style":723},[856],{"type":524,"value":857},".",{"type":519,"tag":556,"props":859,"children":860},{"style":805},[861],{"type":524,"value":862},"split",{"type":519,"tag":556,"props":864,"children":865},{"style":723},[866],{"type":524,"value":867},"(",{"type":519,"tag":556,"props":869,"children":871},{"style":870},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[872],{"type":524,"value":873},"\"",{"type":519,"tag":556,"props":875,"children":876},{"style":870},[877],{"type":524,"value":878}," \"",{"type":519,"tag":556,"props":880,"children":881},{"style":723},[882],{"type":524,"value":883},").",{"type":519,"tag":556,"props":885,"children":886},{"style":805},[887],{"type":524,"value":888},"filter",{"type":519,"tag":556,"props":890,"children":891},{"style":723},[892],{"type":524,"value":867},{"type":519,"tag":556,"props":894,"children":895},{"style":751},[896],{"type":524,"value":897},"Boolean",{"type":519,"tag":556,"props":899,"children":900},{"style":723},[901],{"type":524,"value":883},{"type":519,"tag":556,"props":903,"children":904},{"style":805},[905],{"type":524,"value":906},"reverse",{"type":519,"tag":556,"props":908,"children":909},{"style":723},[910],{"type":524,"value":911},"().",{"type":519,"tag":556,"props":913,"children":914},{"style":805},[915],{"type":524,"value":916},"join",{"type":519,"tag":556,"props":918,"children":919},{"style":723},[920],{"type":524,"value":867},{"type":519,"tag":556,"props":922,"children":923},{"style":870},[924],{"type":524,"value":873},{"type":519,"tag":556,"props":926,"children":927},{"style":870},[928],{"type":524,"value":878},{"type":519,"tag":556,"props":930,"children":931},{"style":723},[932],{"type":524,"value":933},");\n",{"type":519,"tag":556,"props":935,"children":937},{"class":558,"line":936},7,[938],{"type":519,"tag":556,"props":939,"children":940},{"style":723},[941],{"type":524,"value":942},"};\n",{"type":519,"tag":690,"props":944,"children":946},{"id":945},"双指针",[947],{"type":524,"value":945},{"type":519,"tag":546,"props":949,"children":951},{"className":697,"code":950,"language":699,"meta":512,"style":512},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[952],{"type":519,"tag":552,"props":953,"children":954},{"__ignoreMap":512},[955,962,993,1020,1027,1062,1070,1078,1087,1096,1105,1128,1175,1200,1236,1320,1399,1477,1503,1512,1558],{"type":519,"tag":556,"props":956,"children":957},{"class":558,"line":559},[958],{"type":519,"tag":556,"props":959,"children":960},{"style":709},[961],{"type":524,"value":712},{"type":519,"tag":556,"props":963,"children":964},{"class":558,"line":568},[965,969,973,977,981,985,989],{"type":519,"tag":556,"props":966,"children":967},{"style":709},[968],{"type":524,"value":720},{"type":519,"tag":556,"props":970,"children":971},{"style":723},[972],{"type":524,"value":726},{"type":519,"tag":556,"props":974,"children":975},{"style":729},[976],{"type":524,"value":732},{"type":519,"tag":556,"props":978,"children":979},{"style":723},[980],{"type":524,"value":737},{"type":519,"tag":556,"props":982,"children":983},{"style":740},[984],{"type":524,"value":743},{"type":519,"tag":556,"props":986,"children":987},{"style":723},[988],{"type":524,"value":748},{"type":519,"tag":556,"props":990,"children":991},{"style":751},[992],{"type":524,"value":754},{"type":519,"tag":556,"props":994,"children":995},{"class":558,"line":605},[996,1000,1004,1008,1012,1016],{"type":519,"tag":556,"props":997,"children":998},{"style":709},[999],{"type":524,"value":720},{"type":519,"tag":556,"props":1001,"children":1002},{"style":723},[1003],{"type":524,"value":726},{"type":519,"tag":556,"props":1005,"children":1006},{"style":729},[1007],{"type":524,"value":770},{"type":519,"tag":556,"props":1009,"children":1010},{"style":723},[1011],{"type":524,"value":737},{"type":519,"tag":556,"props":1013,"children":1014},{"style":740},[1015],{"type":524,"value":743},{"type":519,"tag":556,"props":1017,"children":1018},{"style":723},[1019],{"type":524,"value":783},{"type":519,"tag":556,"props":1021,"children":1022},{"class":558,"line":786},[1023],{"type":519,"tag":556,"props":1024,"children":1025},{"style":709},[1026],{"type":524,"value":792},{"type":519,"tag":556,"props":1028,"children":1029},{"class":558,"line":795},[1030,1034,1038,1042,1046,1050,1054,1058],{"type":519,"tag":556,"props":1031,"children":1032},{"style":799},[1033],{"type":524,"value":802},{"type":519,"tag":556,"props":1035,"children":1036},{"style":805},[1037],{"type":524,"value":808},{"type":519,"tag":556,"props":1039,"children":1040},{"style":723},[1041],{"type":524,"value":813},{"type":519,"tag":556,"props":1043,"children":1044},{"style":799},[1045],{"type":524,"value":818},{"type":519,"tag":556,"props":1047,"children":1048},{"style":723},[1049],{"type":524,"value":823},{"type":519,"tag":556,"props":1051,"children":1052},{"style":751},[1053],{"type":524,"value":828},{"type":519,"tag":556,"props":1055,"children":1056},{"style":723},[1057],{"type":524,"value":833},{"type":519,"tag":556,"props":1059,"children":1060},{"style":723},[1061],{"type":524,"value":838},{"type":519,"tag":556,"props":1063,"children":1064},{"class":558,"line":841},[1065],{"type":519,"tag":556,"props":1066,"children":1067},{"style":709},[1068],{"type":524,"value":1069},"  // 倒序遍历字符串\n",{"type":519,"tag":556,"props":1071,"children":1072},{"class":558,"line":936},[1073],{"type":519,"tag":556,"props":1074,"children":1075},{"style":709},[1076],{"type":524,"value":1077},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":519,"tag":556,"props":1079,"children":1081},{"class":558,"line":1080},8,[1082],{"type":519,"tag":556,"props":1083,"children":1084},{"style":709},[1085],{"type":524,"value":1086},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":519,"tag":556,"props":1088,"children":1090},{"class":558,"line":1089},9,[1091],{"type":519,"tag":556,"props":1092,"children":1093},{"style":709},[1094],{"type":524,"value":1095},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":519,"tag":556,"props":1097,"children":1099},{"class":558,"line":1098},10,[1100],{"type":519,"tag":556,"props":1101,"children":1102},{"style":709},[1103],{"type":524,"value":1104},"  // 4. 执行 j = i\n",{"type":519,"tag":556,"props":1106,"children":1108},{"class":558,"line":1107},11,[1109,1114,1119,1123],{"type":519,"tag":556,"props":1110,"children":1111},{"style":799},[1112],{"type":524,"value":1113},"  let",{"type":519,"tag":556,"props":1115,"children":1116},{"style":751},[1117],{"type":524,"value":1118}," res",{"type":519,"tag":556,"props":1120,"children":1121},{"style":723},[1122],{"type":524,"value":813},{"type":519,"tag":556,"props":1124,"children":1125},{"style":723},[1126],{"type":524,"value":1127}," [];\n",{"type":519,"tag":556,"props":1129,"children":1131},{"class":558,"line":1130},12,[1132,1136,1141,1145,1149,1153,1159,1164,1170],{"type":519,"tag":556,"props":1133,"children":1134},{"style":799},[1135],{"type":524,"value":1113},{"type":519,"tag":556,"props":1137,"children":1138},{"style":751},[1139],{"type":524,"value":1140}," i",{"type":519,"tag":556,"props":1142,"children":1143},{"style":723},[1144],{"type":524,"value":813},{"type":519,"tag":556,"props":1146,"children":1147},{"style":751},[1148],{"type":524,"value":852},{"type":519,"tag":556,"props":1150,"children":1151},{"style":723},[1152],{"type":524,"value":857},{"type":519,"tag":556,"props":1154,"children":1156},{"style":1155},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1157],{"type":524,"value":1158},"length",{"type":519,"tag":556,"props":1160,"children":1161},{"style":799},[1162],{"type":524,"value":1163}," -",{"type":519,"tag":556,"props":1165,"children":1167},{"style":1166},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1168],{"type":524,"value":1169}," 1",{"type":519,"tag":556,"props":1171,"children":1172},{"style":723},[1173],{"type":524,"value":1174},";\n",{"type":519,"tag":556,"props":1176,"children":1178},{"class":558,"line":1177},13,[1179,1183,1188,1192,1196],{"type":519,"tag":556,"props":1180,"children":1181},{"style":799},[1182],{"type":524,"value":1113},{"type":519,"tag":556,"props":1184,"children":1185},{"style":751},[1186],{"type":524,"value":1187}," j",{"type":519,"tag":556,"props":1189,"children":1190},{"style":723},[1191],{"type":524,"value":813},{"type":519,"tag":556,"props":1193,"children":1194},{"style":751},[1195],{"type":524,"value":1140},{"type":519,"tag":556,"props":1197,"children":1198},{"style":723},[1199],{"type":524,"value":1174},{"type":519,"tag":556,"props":1201,"children":1203},{"class":558,"line":1202},14,[1204,1209,1213,1218,1223,1228,1232],{"type":519,"tag":556,"props":1205,"children":1206},{"style":729},[1207],{"type":524,"value":1208},"  while",{"type":519,"tag":556,"props":1210,"children":1211},{"style":723},[1212],{"type":524,"value":823},{"type":519,"tag":556,"props":1214,"children":1215},{"style":751},[1216],{"type":524,"value":1217},"i",{"type":519,"tag":556,"props":1219,"children":1220},{"style":723},[1221],{"type":524,"value":1222}," >=",{"type":519,"tag":556,"props":1224,"children":1225},{"style":1166},[1226],{"type":524,"value":1227}," 0",{"type":519,"tag":556,"props":1229,"children":1230},{"style":723},[1231],{"type":524,"value":833},{"type":519,"tag":556,"props":1233,"children":1234},{"style":723},[1235],{"type":524,"value":838},{"type":519,"tag":556,"props":1237,"children":1239},{"class":558,"line":1238},15,[1240,1245,1249,1253,1257,1261,1266,1270,1275,1279,1284,1289,1293,1297,1301,1305,1310,1315],{"type":519,"tag":556,"props":1241,"children":1242},{"style":729},[1243],{"type":524,"value":1244},"    while",{"type":519,"tag":556,"props":1246,"children":1247},{"style":723},[1248],{"type":524,"value":823},{"type":519,"tag":556,"props":1250,"children":1251},{"style":751},[1252],{"type":524,"value":1217},{"type":519,"tag":556,"props":1254,"children":1255},{"style":723},[1256],{"type":524,"value":1222},{"type":519,"tag":556,"props":1258,"children":1259},{"style":1166},[1260],{"type":524,"value":1227},{"type":519,"tag":556,"props":1262,"children":1263},{"style":799},[1264],{"type":524,"value":1265}," &&",{"type":519,"tag":556,"props":1267,"children":1268},{"style":751},[1269],{"type":524,"value":852},{"type":519,"tag":556,"props":1271,"children":1272},{"style":723},[1273],{"type":524,"value":1274},"[",{"type":519,"tag":556,"props":1276,"children":1277},{"style":751},[1278],{"type":524,"value":1217},{"type":519,"tag":556,"props":1280,"children":1281},{"style":723},[1282],{"type":524,"value":1283},"]",{"type":519,"tag":556,"props":1285,"children":1286},{"style":799},[1287],{"type":524,"value":1288}," !==",{"type":519,"tag":556,"props":1290,"children":1291},{"style":870},[1292],{"type":524,"value":878},{"type":519,"tag":556,"props":1294,"children":1295},{"style":870},[1296],{"type":524,"value":878},{"type":519,"tag":556,"props":1298,"children":1299},{"style":723},[1300],{"type":524,"value":833},{"type":519,"tag":556,"props":1302,"children":1303},{"style":751},[1304],{"type":524,"value":1140},{"type":519,"tag":556,"props":1306,"children":1307},{"style":799},[1308],{"type":524,"value":1309},"--",{"type":519,"tag":556,"props":1311,"children":1312},{"style":723},[1313],{"type":524,"value":1314},";",{"type":519,"tag":556,"props":1316,"children":1317},{"style":709},[1318],{"type":524,"value":1319}," // 搜索首个空格\n",{"type":519,"tag":556,"props":1321,"children":1323},{"class":558,"line":1322},16,[1324,1329,1333,1338,1342,1346,1350,1355,1359,1363,1368,1372,1377,1381,1385,1389,1394],{"type":519,"tag":556,"props":1325,"children":1326},{"style":751},[1327],{"type":524,"value":1328},"    res",{"type":519,"tag":556,"props":1330,"children":1331},{"style":723},[1332],{"type":524,"value":857},{"type":519,"tag":556,"props":1334,"children":1335},{"style":805},[1336],{"type":524,"value":1337},"push",{"type":519,"tag":556,"props":1339,"children":1340},{"style":723},[1341],{"type":524,"value":867},{"type":519,"tag":556,"props":1343,"children":1344},{"style":751},[1345],{"type":524,"value":828},{"type":519,"tag":556,"props":1347,"children":1348},{"style":723},[1349],{"type":524,"value":857},{"type":519,"tag":556,"props":1351,"children":1352},{"style":805},[1353],{"type":524,"value":1354},"substring",{"type":519,"tag":556,"props":1356,"children":1357},{"style":723},[1358],{"type":524,"value":867},{"type":519,"tag":556,"props":1360,"children":1361},{"style":751},[1362],{"type":524,"value":1217},{"type":519,"tag":556,"props":1364,"children":1365},{"style":799},[1366],{"type":524,"value":1367}," +",{"type":519,"tag":556,"props":1369,"children":1370},{"style":1166},[1371],{"type":524,"value":1169},{"type":519,"tag":556,"props":1373,"children":1374},{"style":723},[1375],{"type":524,"value":1376},",",{"type":519,"tag":556,"props":1378,"children":1379},{"style":751},[1380],{"type":524,"value":1187},{"type":519,"tag":556,"props":1382,"children":1383},{"style":799},[1384],{"type":524,"value":1367},{"type":519,"tag":556,"props":1386,"children":1387},{"style":1166},[1388],{"type":524,"value":1169},{"type":519,"tag":556,"props":1390,"children":1391},{"style":723},[1392],{"type":524,"value":1393},"));",{"type":519,"tag":556,"props":1395,"children":1396},{"style":709},[1397],{"type":524,"value":1398}," // 添加单词\n",{"type":519,"tag":556,"props":1400,"children":1402},{"class":558,"line":1401},17,[1403,1407,1411,1415,1419,1423,1427,1431,1435,1439,1443,1448,1452,1456,1460,1464,1468,1472],{"type":519,"tag":556,"props":1404,"children":1405},{"style":729},[1406],{"type":524,"value":1244},{"type":519,"tag":556,"props":1408,"children":1409},{"style":723},[1410],{"type":524,"value":823},{"type":519,"tag":556,"props":1412,"children":1413},{"style":751},[1414],{"type":524,"value":1217},{"type":519,"tag":556,"props":1416,"children":1417},{"style":723},[1418],{"type":524,"value":1222},{"type":519,"tag":556,"props":1420,"children":1421},{"style":1166},[1422],{"type":524,"value":1227},{"type":519,"tag":556,"props":1424,"children":1425},{"style":799},[1426],{"type":524,"value":1265},{"type":519,"tag":556,"props":1428,"children":1429},{"style":751},[1430],{"type":524,"value":852},{"type":519,"tag":556,"props":1432,"children":1433},{"style":723},[1434],{"type":524,"value":1274},{"type":519,"tag":556,"props":1436,"children":1437},{"style":751},[1438],{"type":524,"value":1217},{"type":519,"tag":556,"props":1440,"children":1441},{"style":723},[1442],{"type":524,"value":1283},{"type":519,"tag":556,"props":1444,"children":1445},{"style":799},[1446],{"type":524,"value":1447}," ===",{"type":519,"tag":556,"props":1449,"children":1450},{"style":870},[1451],{"type":524,"value":878},{"type":519,"tag":556,"props":1453,"children":1454},{"style":870},[1455],{"type":524,"value":878},{"type":519,"tag":556,"props":1457,"children":1458},{"style":723},[1459],{"type":524,"value":833},{"type":519,"tag":556,"props":1461,"children":1462},{"style":751},[1463],{"type":524,"value":1140},{"type":519,"tag":556,"props":1465,"children":1466},{"style":799},[1467],{"type":524,"value":1309},{"type":519,"tag":556,"props":1469,"children":1470},{"style":723},[1471],{"type":524,"value":1314},{"type":519,"tag":556,"props":1473,"children":1474},{"style":709},[1475],{"type":524,"value":1476}," // 跳过单词间空格\n",{"type":519,"tag":556,"props":1478,"children":1480},{"class":558,"line":1479},18,[1481,1486,1490,1494,1498],{"type":519,"tag":556,"props":1482,"children":1483},{"style":751},[1484],{"type":524,"value":1485},"    j",{"type":519,"tag":556,"props":1487,"children":1488},{"style":723},[1489],{"type":524,"value":813},{"type":519,"tag":556,"props":1491,"children":1492},{"style":751},[1493],{"type":524,"value":1140},{"type":519,"tag":556,"props":1495,"children":1496},{"style":723},[1497],{"type":524,"value":1314},{"type":519,"tag":556,"props":1499,"children":1500},{"style":709},[1501],{"type":524,"value":1502}," // 指针移动，指向下个单词的尾字符\n",{"type":519,"tag":556,"props":1504,"children":1506},{"class":558,"line":1505},19,[1507],{"type":519,"tag":556,"props":1508,"children":1509},{"style":723},[1510],{"type":524,"value":1511},"  }\n",{"type":519,"tag":556,"props":1513,"children":1515},{"class":558,"line":1514},20,[1516,1520,1524,1528,1532,1536,1540,1544,1548,1553],{"type":519,"tag":556,"props":1517,"children":1518},{"style":729},[1519],{"type":524,"value":847},{"type":519,"tag":556,"props":1521,"children":1522},{"style":751},[1523],{"type":524,"value":1118},{"type":519,"tag":556,"props":1525,"children":1526},{"style":723},[1527],{"type":524,"value":857},{"type":519,"tag":556,"props":1529,"children":1530},{"style":805},[1531],{"type":524,"value":916},{"type":519,"tag":556,"props":1533,"children":1534},{"style":723},[1535],{"type":524,"value":867},{"type":519,"tag":556,"props":1537,"children":1538},{"style":870},[1539],{"type":524,"value":873},{"type":519,"tag":556,"props":1541,"children":1542},{"style":870},[1543],{"type":524,"value":878},{"type":519,"tag":556,"props":1545,"children":1546},{"style":723},[1547],{"type":524,"value":883},{"type":519,"tag":556,"props":1549,"children":1550},{"style":805},[1551],{"type":524,"value":1552},"trim",{"type":519,"tag":556,"props":1554,"children":1555},{"style":723},[1556],{"type":524,"value":1557},"();\n",{"type":519,"tag":556,"props":1559,"children":1561},{"class":558,"line":1560},21,[1562],{"type":519,"tag":556,"props":1563,"children":1564},{"style":723},[1565],{"type":524,"value":942},{"type":519,"tag":1567,"props":1568,"children":1569},"style",{},[1570],{"type":524,"value":1571},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":795,"depth":795,"links":1573},[1574,1575],{"id":681,"depth":568,"text":681},{"id":686,"depth":568,"text":686,"children":1576},[1577,1578],{"id":692,"depth":605,"text":692},{"id":945,"depth":605,"text":945},"markdown","content:1.algorithm:3.leetcode:3.major:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/3.major/151.reverse-words-in-a-string.md","md",[1585,1587],{"_path":177,"title":176,"description":1586},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":183,"title":182,"description":1588},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1714059005319]