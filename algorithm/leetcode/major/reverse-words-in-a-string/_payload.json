[{"data":1,"prerenderedAt":1492},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-words-in-a-string":452,"/algorithm/leetcode/major/reverse-words-in-a-string-surround":1487},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":171,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":170,"description":456,"url":457,"body":458,"_type":1482,"_id":1483,"_source":1484,"_file":1485,"_extension":1486},"major",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":459,"children":460,"toc":1475},"root",[461,468,473,478,483,488,518,523,555,560,591,596,616,621,627,632,638,871,876,1469],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":462,"tag":463,"props":474,"children":475},{},[476],{"type":467,"value":477},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":462,"tag":463,"props":479,"children":480},{},[481],{"type":467,"value":482},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":462,"tag":463,"props":484,"children":485},{},[486],{"type":467,"value":487},"示例 1：",{"type":462,"tag":489,"props":490,"children":493},"pre",{"className":491,"code":492,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[494],{"type":462,"tag":495,"props":496,"children":497},"code",{"__ignoreMap":455},[498,509],{"type":462,"tag":499,"props":500,"children":503},"span",{"class":501,"line":502},"line",1,[504],{"type":462,"tag":499,"props":505,"children":506},{},[507],{"type":467,"value":508},"输入：s = \"the sky is blue\"\n",{"type":462,"tag":499,"props":510,"children":512},{"class":501,"line":511},2,[513],{"type":462,"tag":499,"props":514,"children":515},{},[516],{"type":467,"value":517},"输出：\"blue is sky the\"\n",{"type":462,"tag":463,"props":519,"children":520},{},[521],{"type":467,"value":522},"示例 2：",{"type":462,"tag":489,"props":524,"children":526},{"className":491,"code":525,"language":467,"meta":455,"style":455},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[527],{"type":462,"tag":495,"props":528,"children":529},{"__ignoreMap":455},[530,538,546],{"type":462,"tag":499,"props":531,"children":532},{"class":501,"line":502},[533],{"type":462,"tag":499,"props":534,"children":535},{},[536],{"type":467,"value":537},"输入：s = \" hello world \"\n",{"type":462,"tag":499,"props":539,"children":540},{"class":501,"line":511},[541],{"type":462,"tag":499,"props":542,"children":543},{},[544],{"type":467,"value":545},"输出：\"world hello\"\n",{"type":462,"tag":499,"props":547,"children":549},{"class":501,"line":548},3,[550],{"type":462,"tag":499,"props":551,"children":552},{},[553],{"type":467,"value":554},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":462,"tag":463,"props":556,"children":557},{},[558],{"type":467,"value":559},"示例 3：",{"type":462,"tag":489,"props":561,"children":563},{"className":491,"code":562,"language":467,"meta":455,"style":455},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[564],{"type":462,"tag":495,"props":565,"children":566},{"__ignoreMap":455},[567,575,583],{"type":462,"tag":499,"props":568,"children":569},{"class":501,"line":502},[570],{"type":462,"tag":499,"props":571,"children":572},{},[573],{"type":467,"value":574},"输入：s = \"a good example\"\n",{"type":462,"tag":499,"props":576,"children":577},{"class":501,"line":511},[578],{"type":462,"tag":499,"props":579,"children":580},{},[581],{"type":467,"value":582},"输出：\"example good a\"\n",{"type":462,"tag":499,"props":584,"children":585},{"class":501,"line":548},[586],{"type":462,"tag":499,"props":587,"children":588},{},[589],{"type":467,"value":590},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":462,"tag":463,"props":592,"children":593},{},[594],{"type":467,"value":595},"提示：",{"type":462,"tag":597,"props":598,"children":599},"ul",{},[600,606,611],{"type":462,"tag":601,"props":602,"children":603},"li",{},[604],{"type":467,"value":605},"1 \u003C= s.length \u003C= 10^4",{"type":462,"tag":601,"props":607,"children":608},{},[609],{"type":467,"value":610},"s 包含英文大小写字母、数字和空格 ' '",{"type":462,"tag":601,"props":612,"children":613},{},[614],{"type":467,"value":615},"s 中 至少存在一个 单词",{"type":462,"tag":463,"props":617,"children":618},{},[619],{"type":467,"value":620},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":462,"tag":622,"props":623,"children":625},"h2",{"id":624},"解题思路",[626],{"type":467,"value":624},{"type":462,"tag":622,"props":628,"children":630},{"id":629},"实现",[631],{"type":467,"value":629},{"type":462,"tag":633,"props":634,"children":636},"h3",{"id":635},"语言特性",[637],{"type":467,"value":635},{"type":462,"tag":489,"props":639,"children":643},{"className":640,"code":641,"language":642,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[644],{"type":462,"tag":495,"props":645,"children":646},{"__ignoreMap":455},[647,656,682,699,708,752,858],{"type":462,"tag":499,"props":648,"children":649},{"class":501,"line":502},[650],{"type":462,"tag":499,"props":651,"children":653},{"style":652},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[654],{"type":467,"value":655},"/**\n",{"type":462,"tag":499,"props":657,"children":658},{"class":501,"line":511},[659,664,670,676],{"type":462,"tag":499,"props":660,"children":661},{"style":652},[662],{"type":467,"value":663}," * ",{"type":462,"tag":499,"props":665,"children":667},{"style":666},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[668],{"type":467,"value":669},"@param",{"type":462,"tag":499,"props":671,"children":673},{"style":672},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[674],{"type":467,"value":675}," {string}",{"type":462,"tag":499,"props":677,"children":679},{"style":678},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[680],{"type":467,"value":681}," s\n",{"type":462,"tag":499,"props":683,"children":684},{"class":501,"line":548},[685,689,694],{"type":462,"tag":499,"props":686,"children":687},{"style":652},[688],{"type":467,"value":663},{"type":462,"tag":499,"props":690,"children":691},{"style":666},[692],{"type":467,"value":693},"@return",{"type":462,"tag":499,"props":695,"children":696},{"style":672},[697],{"type":467,"value":698}," {string}\n",{"type":462,"tag":499,"props":700,"children":702},{"class":501,"line":701},4,[703],{"type":462,"tag":499,"props":704,"children":705},{"style":652},[706],{"type":467,"value":707}," */\n",{"type":462,"tag":499,"props":709,"children":711},{"class":501,"line":710},5,[712,718,724,730,735,741,747],{"type":462,"tag":499,"props":713,"children":715},{"style":714},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[716],{"type":467,"value":717},"var",{"type":462,"tag":499,"props":719,"children":721},{"style":720},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[722],{"type":467,"value":723}," reverseWords",{"type":462,"tag":499,"props":725,"children":727},{"style":726},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[728],{"type":467,"value":729}," =",{"type":462,"tag":499,"props":731,"children":732},{"style":714},[733],{"type":467,"value":734}," function",{"type":462,"tag":499,"props":736,"children":738},{"style":737},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[739],{"type":467,"value":740}," (",{"type":462,"tag":499,"props":742,"children":744},{"style":743},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[745],{"type":467,"value":746},"s",{"type":462,"tag":499,"props":748,"children":749},{"style":737},[750],{"type":467,"value":751},") {\n",{"type":462,"tag":499,"props":753,"children":755},{"class":501,"line":754},6,[756,762,768,774,779,784,790,795,799,804,808,813,817,821,826,831,835,840,844,848,852],{"type":462,"tag":499,"props":757,"children":759},{"style":758},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[760],{"type":467,"value":761},"  return",{"type":462,"tag":499,"props":763,"children":765},{"style":764},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[766],{"type":467,"value":767}," s",{"type":462,"tag":499,"props":769,"children":771},{"style":770},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[772],{"type":467,"value":773},".",{"type":462,"tag":499,"props":775,"children":776},{"style":720},[777],{"type":467,"value":778},"split",{"type":462,"tag":499,"props":780,"children":781},{"style":737},[782],{"type":467,"value":783},"(",{"type":462,"tag":499,"props":785,"children":787},{"style":786},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[788],{"type":467,"value":789},"\" \"",{"type":462,"tag":499,"props":791,"children":792},{"style":737},[793],{"type":467,"value":794},")",{"type":462,"tag":499,"props":796,"children":797},{"style":770},[798],{"type":467,"value":773},{"type":462,"tag":499,"props":800,"children":801},{"style":720},[802],{"type":467,"value":803},"filter",{"type":462,"tag":499,"props":805,"children":806},{"style":737},[807],{"type":467,"value":783},{"type":462,"tag":499,"props":809,"children":810},{"style":764},[811],{"type":467,"value":812},"Boolean",{"type":462,"tag":499,"props":814,"children":815},{"style":737},[816],{"type":467,"value":794},{"type":462,"tag":499,"props":818,"children":819},{"style":770},[820],{"type":467,"value":773},{"type":462,"tag":499,"props":822,"children":823},{"style":720},[824],{"type":467,"value":825},"reverse",{"type":462,"tag":499,"props":827,"children":828},{"style":737},[829],{"type":467,"value":830},"()",{"type":462,"tag":499,"props":832,"children":833},{"style":770},[834],{"type":467,"value":773},{"type":462,"tag":499,"props":836,"children":837},{"style":720},[838],{"type":467,"value":839},"join",{"type":462,"tag":499,"props":841,"children":842},{"style":737},[843],{"type":467,"value":783},{"type":462,"tag":499,"props":845,"children":846},{"style":786},[847],{"type":467,"value":789},{"type":462,"tag":499,"props":849,"children":850},{"style":737},[851],{"type":467,"value":794},{"type":462,"tag":499,"props":853,"children":855},{"style":854},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[856],{"type":467,"value":857},";\n",{"type":462,"tag":499,"props":859,"children":861},{"class":501,"line":860},7,[862,867],{"type":462,"tag":499,"props":863,"children":864},{"style":737},[865],{"type":467,"value":866},"}",{"type":462,"tag":499,"props":868,"children":869},{"style":854},[870],{"type":467,"value":857},{"type":462,"tag":633,"props":872,"children":874},{"id":873},"双指针",[875],{"type":467,"value":873},{"type":462,"tag":489,"props":877,"children":879},{"className":640,"code":878,"language":642,"meta":455,"style":455},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[880],{"type":462,"tag":495,"props":881,"children":882},{"__ignoreMap":455},[883,890,909,924,931,962,970,978,987,996,1005,1032,1077,1102,1134,1216,1299,1373,1399,1408,1457],{"type":462,"tag":499,"props":884,"children":885},{"class":501,"line":502},[886],{"type":462,"tag":499,"props":887,"children":888},{"style":652},[889],{"type":467,"value":655},{"type":462,"tag":499,"props":891,"children":892},{"class":501,"line":511},[893,897,901,905],{"type":462,"tag":499,"props":894,"children":895},{"style":652},[896],{"type":467,"value":663},{"type":462,"tag":499,"props":898,"children":899},{"style":666},[900],{"type":467,"value":669},{"type":462,"tag":499,"props":902,"children":903},{"style":672},[904],{"type":467,"value":675},{"type":462,"tag":499,"props":906,"children":907},{"style":678},[908],{"type":467,"value":681},{"type":462,"tag":499,"props":910,"children":911},{"class":501,"line":548},[912,916,920],{"type":462,"tag":499,"props":913,"children":914},{"style":652},[915],{"type":467,"value":663},{"type":462,"tag":499,"props":917,"children":918},{"style":666},[919],{"type":467,"value":693},{"type":462,"tag":499,"props":921,"children":922},{"style":672},[923],{"type":467,"value":698},{"type":462,"tag":499,"props":925,"children":926},{"class":501,"line":701},[927],{"type":462,"tag":499,"props":928,"children":929},{"style":652},[930],{"type":467,"value":707},{"type":462,"tag":499,"props":932,"children":933},{"class":501,"line":710},[934,938,942,946,950,954,958],{"type":462,"tag":499,"props":935,"children":936},{"style":714},[937],{"type":467,"value":717},{"type":462,"tag":499,"props":939,"children":940},{"style":720},[941],{"type":467,"value":723},{"type":462,"tag":499,"props":943,"children":944},{"style":726},[945],{"type":467,"value":729},{"type":462,"tag":499,"props":947,"children":948},{"style":714},[949],{"type":467,"value":734},{"type":462,"tag":499,"props":951,"children":952},{"style":737},[953],{"type":467,"value":740},{"type":462,"tag":499,"props":955,"children":956},{"style":743},[957],{"type":467,"value":746},{"type":462,"tag":499,"props":959,"children":960},{"style":737},[961],{"type":467,"value":751},{"type":462,"tag":499,"props":963,"children":964},{"class":501,"line":754},[965],{"type":462,"tag":499,"props":966,"children":967},{"style":652},[968],{"type":467,"value":969},"  // 倒序遍历字符串\n",{"type":462,"tag":499,"props":971,"children":972},{"class":501,"line":860},[973],{"type":462,"tag":499,"props":974,"children":975},{"style":652},[976],{"type":467,"value":977},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":462,"tag":499,"props":979,"children":981},{"class":501,"line":980},8,[982],{"type":462,"tag":499,"props":983,"children":984},{"style":652},[985],{"type":467,"value":986},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":462,"tag":499,"props":988,"children":990},{"class":501,"line":989},9,[991],{"type":462,"tag":499,"props":992,"children":993},{"style":652},[994],{"type":467,"value":995},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":462,"tag":499,"props":997,"children":999},{"class":501,"line":998},10,[1000],{"type":462,"tag":499,"props":1001,"children":1002},{"style":652},[1003],{"type":467,"value":1004},"  // 4. 执行 j = i\n",{"type":462,"tag":499,"props":1006,"children":1008},{"class":501,"line":1007},11,[1009,1014,1019,1023,1028],{"type":462,"tag":499,"props":1010,"children":1011},{"style":714},[1012],{"type":467,"value":1013},"  let",{"type":462,"tag":499,"props":1015,"children":1016},{"style":764},[1017],{"type":467,"value":1018}," res",{"type":462,"tag":499,"props":1020,"children":1021},{"style":726},[1022],{"type":467,"value":729},{"type":462,"tag":499,"props":1024,"children":1025},{"style":737},[1026],{"type":467,"value":1027}," []",{"type":462,"tag":499,"props":1029,"children":1030},{"style":854},[1031],{"type":467,"value":857},{"type":462,"tag":499,"props":1033,"children":1035},{"class":501,"line":1034},12,[1036,1040,1045,1049,1053,1057,1062,1067,1073],{"type":462,"tag":499,"props":1037,"children":1038},{"style":714},[1039],{"type":467,"value":1013},{"type":462,"tag":499,"props":1041,"children":1042},{"style":764},[1043],{"type":467,"value":1044}," i",{"type":462,"tag":499,"props":1046,"children":1047},{"style":726},[1048],{"type":467,"value":729},{"type":462,"tag":499,"props":1050,"children":1051},{"style":764},[1052],{"type":467,"value":767},{"type":462,"tag":499,"props":1054,"children":1055},{"style":770},[1056],{"type":467,"value":773},{"type":462,"tag":499,"props":1058,"children":1059},{"style":737},[1060],{"type":467,"value":1061},"length ",{"type":462,"tag":499,"props":1063,"children":1064},{"style":726},[1065],{"type":467,"value":1066},"-",{"type":462,"tag":499,"props":1068,"children":1070},{"style":1069},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1071],{"type":467,"value":1072}," 1",{"type":462,"tag":499,"props":1074,"children":1075},{"style":854},[1076],{"type":467,"value":857},{"type":462,"tag":499,"props":1078,"children":1080},{"class":501,"line":1079},13,[1081,1085,1090,1094,1098],{"type":462,"tag":499,"props":1082,"children":1083},{"style":714},[1084],{"type":467,"value":1013},{"type":462,"tag":499,"props":1086,"children":1087},{"style":764},[1088],{"type":467,"value":1089}," j",{"type":462,"tag":499,"props":1091,"children":1092},{"style":726},[1093],{"type":467,"value":729},{"type":462,"tag":499,"props":1095,"children":1096},{"style":764},[1097],{"type":467,"value":1044},{"type":462,"tag":499,"props":1099,"children":1100},{"style":854},[1101],{"type":467,"value":857},{"type":462,"tag":499,"props":1103,"children":1105},{"class":501,"line":1104},14,[1106,1111,1115,1120,1125,1130],{"type":462,"tag":499,"props":1107,"children":1108},{"style":758},[1109],{"type":467,"value":1110},"  while",{"type":462,"tag":499,"props":1112,"children":1113},{"style":737},[1114],{"type":467,"value":740},{"type":462,"tag":499,"props":1116,"children":1117},{"style":764},[1118],{"type":467,"value":1119},"i",{"type":462,"tag":499,"props":1121,"children":1122},{"style":726},[1123],{"type":467,"value":1124}," >=",{"type":462,"tag":499,"props":1126,"children":1127},{"style":1069},[1128],{"type":467,"value":1129}," 0",{"type":462,"tag":499,"props":1131,"children":1132},{"style":737},[1133],{"type":467,"value":751},{"type":462,"tag":499,"props":1135,"children":1137},{"class":501,"line":1136},15,[1138,1143,1147,1151,1155,1159,1164,1168,1173,1177,1182,1187,1192,1197,1201,1206,1211],{"type":462,"tag":499,"props":1139,"children":1140},{"style":758},[1141],{"type":467,"value":1142},"    while",{"type":462,"tag":499,"props":1144,"children":1145},{"style":737},[1146],{"type":467,"value":740},{"type":462,"tag":499,"props":1148,"children":1149},{"style":764},[1150],{"type":467,"value":1119},{"type":462,"tag":499,"props":1152,"children":1153},{"style":726},[1154],{"type":467,"value":1124},{"type":462,"tag":499,"props":1156,"children":1157},{"style":1069},[1158],{"type":467,"value":1129},{"type":462,"tag":499,"props":1160,"children":1161},{"style":726},[1162],{"type":467,"value":1163}," &&",{"type":462,"tag":499,"props":1165,"children":1166},{"style":764},[1167],{"type":467,"value":767},{"type":462,"tag":499,"props":1169,"children":1170},{"style":737},[1171],{"type":467,"value":1172},"[",{"type":462,"tag":499,"props":1174,"children":1175},{"style":764},[1176],{"type":467,"value":1119},{"type":462,"tag":499,"props":1178,"children":1179},{"style":737},[1180],{"type":467,"value":1181},"] ",{"type":462,"tag":499,"props":1183,"children":1184},{"style":726},[1185],{"type":467,"value":1186},"!==",{"type":462,"tag":499,"props":1188,"children":1189},{"style":786},[1190],{"type":467,"value":1191}," \" \"",{"type":462,"tag":499,"props":1193,"children":1194},{"style":737},[1195],{"type":467,"value":1196},") ",{"type":462,"tag":499,"props":1198,"children":1199},{"style":764},[1200],{"type":467,"value":1119},{"type":462,"tag":499,"props":1202,"children":1203},{"style":726},[1204],{"type":467,"value":1205},"--",{"type":462,"tag":499,"props":1207,"children":1208},{"style":854},[1209],{"type":467,"value":1210},";",{"type":462,"tag":499,"props":1212,"children":1213},{"style":652},[1214],{"type":467,"value":1215}," // 搜索首个空格\n",{"type":462,"tag":499,"props":1217,"children":1219},{"class":501,"line":1218},16,[1220,1225,1229,1234,1238,1242,1246,1251,1255,1259,1264,1268,1273,1277,1281,1285,1290,1294],{"type":462,"tag":499,"props":1221,"children":1222},{"style":764},[1223],{"type":467,"value":1224},"    res",{"type":462,"tag":499,"props":1226,"children":1227},{"style":770},[1228],{"type":467,"value":773},{"type":462,"tag":499,"props":1230,"children":1231},{"style":720},[1232],{"type":467,"value":1233},"push",{"type":462,"tag":499,"props":1235,"children":1236},{"style":737},[1237],{"type":467,"value":783},{"type":462,"tag":499,"props":1239,"children":1240},{"style":764},[1241],{"type":467,"value":746},{"type":462,"tag":499,"props":1243,"children":1244},{"style":770},[1245],{"type":467,"value":773},{"type":462,"tag":499,"props":1247,"children":1248},{"style":720},[1249],{"type":467,"value":1250},"substring",{"type":462,"tag":499,"props":1252,"children":1253},{"style":737},[1254],{"type":467,"value":783},{"type":462,"tag":499,"props":1256,"children":1257},{"style":764},[1258],{"type":467,"value":1119},{"type":462,"tag":499,"props":1260,"children":1261},{"style":726},[1262],{"type":467,"value":1263}," +",{"type":462,"tag":499,"props":1265,"children":1266},{"style":1069},[1267],{"type":467,"value":1072},{"type":462,"tag":499,"props":1269,"children":1270},{"style":854},[1271],{"type":467,"value":1272},",",{"type":462,"tag":499,"props":1274,"children":1275},{"style":764},[1276],{"type":467,"value":1089},{"type":462,"tag":499,"props":1278,"children":1279},{"style":726},[1280],{"type":467,"value":1263},{"type":462,"tag":499,"props":1282,"children":1283},{"style":1069},[1284],{"type":467,"value":1072},{"type":462,"tag":499,"props":1286,"children":1287},{"style":737},[1288],{"type":467,"value":1289},"))",{"type":462,"tag":499,"props":1291,"children":1292},{"style":854},[1293],{"type":467,"value":1210},{"type":462,"tag":499,"props":1295,"children":1296},{"style":652},[1297],{"type":467,"value":1298}," // 添加单词\n",{"type":462,"tag":499,"props":1300,"children":1302},{"class":501,"line":1301},17,[1303,1307,1311,1315,1319,1323,1327,1331,1335,1339,1343,1348,1352,1356,1360,1364,1368],{"type":462,"tag":499,"props":1304,"children":1305},{"style":758},[1306],{"type":467,"value":1142},{"type":462,"tag":499,"props":1308,"children":1309},{"style":737},[1310],{"type":467,"value":740},{"type":462,"tag":499,"props":1312,"children":1313},{"style":764},[1314],{"type":467,"value":1119},{"type":462,"tag":499,"props":1316,"children":1317},{"style":726},[1318],{"type":467,"value":1124},{"type":462,"tag":499,"props":1320,"children":1321},{"style":1069},[1322],{"type":467,"value":1129},{"type":462,"tag":499,"props":1324,"children":1325},{"style":726},[1326],{"type":467,"value":1163},{"type":462,"tag":499,"props":1328,"children":1329},{"style":764},[1330],{"type":467,"value":767},{"type":462,"tag":499,"props":1332,"children":1333},{"style":737},[1334],{"type":467,"value":1172},{"type":462,"tag":499,"props":1336,"children":1337},{"style":764},[1338],{"type":467,"value":1119},{"type":462,"tag":499,"props":1340,"children":1341},{"style":737},[1342],{"type":467,"value":1181},{"type":462,"tag":499,"props":1344,"children":1345},{"style":726},[1346],{"type":467,"value":1347},"===",{"type":462,"tag":499,"props":1349,"children":1350},{"style":786},[1351],{"type":467,"value":1191},{"type":462,"tag":499,"props":1353,"children":1354},{"style":737},[1355],{"type":467,"value":1196},{"type":462,"tag":499,"props":1357,"children":1358},{"style":764},[1359],{"type":467,"value":1119},{"type":462,"tag":499,"props":1361,"children":1362},{"style":726},[1363],{"type":467,"value":1205},{"type":462,"tag":499,"props":1365,"children":1366},{"style":854},[1367],{"type":467,"value":1210},{"type":462,"tag":499,"props":1369,"children":1370},{"style":652},[1371],{"type":467,"value":1372}," // 跳过单词间空格\n",{"type":462,"tag":499,"props":1374,"children":1376},{"class":501,"line":1375},18,[1377,1382,1386,1390,1394],{"type":462,"tag":499,"props":1378,"children":1379},{"style":764},[1380],{"type":467,"value":1381},"    j",{"type":462,"tag":499,"props":1383,"children":1384},{"style":726},[1385],{"type":467,"value":729},{"type":462,"tag":499,"props":1387,"children":1388},{"style":764},[1389],{"type":467,"value":1044},{"type":462,"tag":499,"props":1391,"children":1392},{"style":854},[1393],{"type":467,"value":1210},{"type":462,"tag":499,"props":1395,"children":1396},{"style":652},[1397],{"type":467,"value":1398}," // 指针移动，指向下个单词的尾字符\n",{"type":462,"tag":499,"props":1400,"children":1402},{"class":501,"line":1401},19,[1403],{"type":462,"tag":499,"props":1404,"children":1405},{"style":737},[1406],{"type":467,"value":1407},"  }\n",{"type":462,"tag":499,"props":1409,"children":1411},{"class":501,"line":1410},20,[1412,1416,1420,1424,1428,1432,1436,1440,1444,1449,1453],{"type":462,"tag":499,"props":1413,"children":1414},{"style":758},[1415],{"type":467,"value":761},{"type":462,"tag":499,"props":1417,"children":1418},{"style":764},[1419],{"type":467,"value":1018},{"type":462,"tag":499,"props":1421,"children":1422},{"style":770},[1423],{"type":467,"value":773},{"type":462,"tag":499,"props":1425,"children":1426},{"style":720},[1427],{"type":467,"value":839},{"type":462,"tag":499,"props":1429,"children":1430},{"style":737},[1431],{"type":467,"value":783},{"type":462,"tag":499,"props":1433,"children":1434},{"style":786},[1435],{"type":467,"value":789},{"type":462,"tag":499,"props":1437,"children":1438},{"style":737},[1439],{"type":467,"value":794},{"type":462,"tag":499,"props":1441,"children":1442},{"style":770},[1443],{"type":467,"value":773},{"type":462,"tag":499,"props":1445,"children":1446},{"style":720},[1447],{"type":467,"value":1448},"trim",{"type":462,"tag":499,"props":1450,"children":1451},{"style":737},[1452],{"type":467,"value":830},{"type":462,"tag":499,"props":1454,"children":1455},{"style":854},[1456],{"type":467,"value":857},{"type":462,"tag":499,"props":1458,"children":1460},{"class":501,"line":1459},21,[1461,1465],{"type":462,"tag":499,"props":1462,"children":1463},{"style":737},[1464],{"type":467,"value":866},{"type":462,"tag":499,"props":1466,"children":1467},{"style":854},[1468],{"type":467,"value":857},{"type":462,"tag":1470,"props":1471,"children":1472},"style",{},[1473],{"type":467,"value":1474},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":710,"depth":710,"links":1476},[1477,1478],{"id":624,"depth":511,"text":624},{"id":629,"depth":511,"text":629,"children":1479},[1480,1481],{"id":635,"depth":548,"text":635},{"id":873,"depth":548,"text":873},"markdown","content:1.algorithm:3.leetcode:3.major:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/3.major/151.reverse-words-in-a-string.md","md",[1488,1490],{"_path":168,"title":167,"description":1489},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":174,"title":173,"description":1491},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1713457421882]