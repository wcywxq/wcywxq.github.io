[{"data":1,"prerenderedAt":1626},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-words-in-a-string":546,"/algorithm/leetcode/major/reverse-words-in-a-string-surround":1621},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":180,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":179,"description":550,"url":551,"body":552,"_type":1616,"_id":1617,"_source":1618,"_file":1619,"_extension":1620},"major",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":553,"children":554,"toc":1609},"root",[555,562,567,572,577,582,612,617,649,654,685,690,710,715,721,726,732,980,985,1603],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":556,"tag":557,"props":568,"children":569},{},[570],{"type":561,"value":571},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":556,"tag":557,"props":573,"children":574},{},[575],{"type":561,"value":576},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":556,"tag":557,"props":578,"children":579},{},[580],{"type":561,"value":581},"示例 1：",{"type":556,"tag":583,"props":584,"children":587},"pre",{"className":585,"code":586,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[588],{"type":556,"tag":589,"props":590,"children":591},"code",{"__ignoreMap":549},[592,603],{"type":556,"tag":593,"props":594,"children":597},"span",{"class":595,"line":596},"line",1,[598],{"type":556,"tag":593,"props":599,"children":600},{},[601],{"type":561,"value":602},"输入：s = \"the sky is blue\"\n",{"type":556,"tag":593,"props":604,"children":606},{"class":595,"line":605},2,[607],{"type":556,"tag":593,"props":608,"children":609},{},[610],{"type":561,"value":611},"输出：\"blue is sky the\"\n",{"type":556,"tag":557,"props":613,"children":614},{},[615],{"type":561,"value":616},"示例 2：",{"type":556,"tag":583,"props":618,"children":620},{"className":585,"code":619,"language":561,"meta":549,"style":549},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[621],{"type":556,"tag":589,"props":622,"children":623},{"__ignoreMap":549},[624,632,640],{"type":556,"tag":593,"props":625,"children":626},{"class":595,"line":596},[627],{"type":556,"tag":593,"props":628,"children":629},{},[630],{"type":561,"value":631},"输入：s = \" hello world \"\n",{"type":556,"tag":593,"props":633,"children":634},{"class":595,"line":605},[635],{"type":556,"tag":593,"props":636,"children":637},{},[638],{"type":561,"value":639},"输出：\"world hello\"\n",{"type":556,"tag":593,"props":641,"children":643},{"class":595,"line":642},3,[644],{"type":556,"tag":593,"props":645,"children":646},{},[647],{"type":561,"value":648},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":556,"tag":557,"props":650,"children":651},{},[652],{"type":561,"value":653},"示例 3：",{"type":556,"tag":583,"props":655,"children":657},{"className":585,"code":656,"language":561,"meta":549,"style":549},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[658],{"type":556,"tag":589,"props":659,"children":660},{"__ignoreMap":549},[661,669,677],{"type":556,"tag":593,"props":662,"children":663},{"class":595,"line":596},[664],{"type":556,"tag":593,"props":665,"children":666},{},[667],{"type":561,"value":668},"输入：s = \"a good example\"\n",{"type":556,"tag":593,"props":670,"children":671},{"class":595,"line":605},[672],{"type":556,"tag":593,"props":673,"children":674},{},[675],{"type":561,"value":676},"输出：\"example good a\"\n",{"type":556,"tag":593,"props":678,"children":679},{"class":595,"line":642},[680],{"type":556,"tag":593,"props":681,"children":682},{},[683],{"type":561,"value":684},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":556,"tag":557,"props":686,"children":687},{},[688],{"type":561,"value":689},"提示：",{"type":556,"tag":691,"props":692,"children":693},"ul",{},[694,700,705],{"type":556,"tag":695,"props":696,"children":697},"li",{},[698],{"type":561,"value":699},"1 \u003C= s.length \u003C= 10^4",{"type":556,"tag":695,"props":701,"children":702},{},[703],{"type":561,"value":704},"s 包含英文大小写字母、数字和空格 ' '",{"type":556,"tag":695,"props":706,"children":707},{},[708],{"type":561,"value":709},"s 中 至少存在一个 单词",{"type":556,"tag":557,"props":711,"children":712},{},[713],{"type":561,"value":714},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":556,"tag":716,"props":717,"children":719},"h2",{"id":718},"解题思路",[720],{"type":561,"value":718},{"type":556,"tag":716,"props":722,"children":724},{"id":723},"实现",[725],{"type":561,"value":723},{"type":556,"tag":727,"props":728,"children":730},"h3",{"id":729},"语言特性",[731],{"type":561,"value":729},{"type":556,"tag":583,"props":733,"children":737},{"className":734,"code":735,"language":736,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[738],{"type":556,"tag":589,"props":739,"children":740},{"__ignoreMap":549},[741,750,792,821,830,876,971],{"type":556,"tag":593,"props":742,"children":743},{"class":595,"line":596},[744],{"type":556,"tag":593,"props":745,"children":747},{"style":746},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[748],{"type":561,"value":749},"/**\n",{"type":556,"tag":593,"props":751,"children":752},{"class":595,"line":605},[753,758,764,770,775,781,786],{"type":556,"tag":593,"props":754,"children":755},{"style":746},[756],{"type":561,"value":757}," * ",{"type":556,"tag":593,"props":759,"children":761},{"style":760},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[762],{"type":561,"value":763},"@",{"type":556,"tag":593,"props":765,"children":767},{"style":766},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[768],{"type":561,"value":769},"param",{"type":556,"tag":593,"props":771,"children":772},{"style":760},[773],{"type":561,"value":774}," {",{"type":556,"tag":593,"props":776,"children":778},{"style":777},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[779],{"type":561,"value":780},"string",{"type":556,"tag":593,"props":782,"children":783},{"style":760},[784],{"type":561,"value":785},"}",{"type":556,"tag":593,"props":787,"children":789},{"style":788},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[790],{"type":561,"value":791}," s\n",{"type":556,"tag":593,"props":793,"children":794},{"class":595,"line":642},[795,799,803,808,812,816],{"type":556,"tag":593,"props":796,"children":797},{"style":746},[798],{"type":561,"value":757},{"type":556,"tag":593,"props":800,"children":801},{"style":760},[802],{"type":561,"value":763},{"type":556,"tag":593,"props":804,"children":805},{"style":766},[806],{"type":561,"value":807},"return",{"type":556,"tag":593,"props":809,"children":810},{"style":760},[811],{"type":561,"value":774},{"type":556,"tag":593,"props":813,"children":814},{"style":777},[815],{"type":561,"value":780},{"type":556,"tag":593,"props":817,"children":818},{"style":760},[819],{"type":561,"value":820},"}\n",{"type":556,"tag":593,"props":822,"children":824},{"class":595,"line":823},4,[825],{"type":556,"tag":593,"props":826,"children":827},{"style":746},[828],{"type":561,"value":829}," */\n",{"type":556,"tag":593,"props":831,"children":833},{"class":595,"line":832},5,[834,840,846,851,856,861,866,871],{"type":556,"tag":593,"props":835,"children":837},{"style":836},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[838],{"type":561,"value":839},"var",{"type":556,"tag":593,"props":841,"children":843},{"style":842},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[844],{"type":561,"value":845}," reverseWords",{"type":556,"tag":593,"props":847,"children":848},{"style":760},[849],{"type":561,"value":850}," =",{"type":556,"tag":593,"props":852,"children":853},{"style":836},[854],{"type":561,"value":855}," function",{"type":556,"tag":593,"props":857,"children":858},{"style":760},[859],{"type":561,"value":860}," (",{"type":556,"tag":593,"props":862,"children":863},{"style":788},[864],{"type":561,"value":865},"s",{"type":556,"tag":593,"props":867,"children":868},{"style":760},[869],{"type":561,"value":870},")",{"type":556,"tag":593,"props":872,"children":873},{"style":760},[874],{"type":561,"value":875}," {\n",{"type":556,"tag":593,"props":877,"children":879},{"class":595,"line":878},6,[880,885,890,895,900,905,911,916,921,926,930,935,939,944,949,954,958,962,966],{"type":556,"tag":593,"props":881,"children":882},{"style":766},[883],{"type":561,"value":884},"  return",{"type":556,"tag":593,"props":886,"children":887},{"style":788},[888],{"type":561,"value":889}," s",{"type":556,"tag":593,"props":891,"children":892},{"style":760},[893],{"type":561,"value":894},".",{"type":556,"tag":593,"props":896,"children":897},{"style":842},[898],{"type":561,"value":899},"split",{"type":556,"tag":593,"props":901,"children":902},{"style":760},[903],{"type":561,"value":904},"(",{"type":556,"tag":593,"props":906,"children":908},{"style":907},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[909],{"type":561,"value":910},"\"",{"type":556,"tag":593,"props":912,"children":913},{"style":907},[914],{"type":561,"value":915}," \"",{"type":556,"tag":593,"props":917,"children":918},{"style":760},[919],{"type":561,"value":920},").",{"type":556,"tag":593,"props":922,"children":923},{"style":842},[924],{"type":561,"value":925},"filter",{"type":556,"tag":593,"props":927,"children":928},{"style":760},[929],{"type":561,"value":904},{"type":556,"tag":593,"props":931,"children":932},{"style":788},[933],{"type":561,"value":934},"Boolean",{"type":556,"tag":593,"props":936,"children":937},{"style":760},[938],{"type":561,"value":920},{"type":556,"tag":593,"props":940,"children":941},{"style":842},[942],{"type":561,"value":943},"reverse",{"type":556,"tag":593,"props":945,"children":946},{"style":760},[947],{"type":561,"value":948},"().",{"type":556,"tag":593,"props":950,"children":951},{"style":842},[952],{"type":561,"value":953},"join",{"type":556,"tag":593,"props":955,"children":956},{"style":760},[957],{"type":561,"value":904},{"type":556,"tag":593,"props":959,"children":960},{"style":907},[961],{"type":561,"value":910},{"type":556,"tag":593,"props":963,"children":964},{"style":907},[965],{"type":561,"value":915},{"type":556,"tag":593,"props":967,"children":968},{"style":760},[969],{"type":561,"value":970},");\n",{"type":556,"tag":593,"props":972,"children":974},{"class":595,"line":973},7,[975],{"type":556,"tag":593,"props":976,"children":977},{"style":760},[978],{"type":561,"value":979},"};\n",{"type":556,"tag":727,"props":981,"children":983},{"id":982},"双指针",[984],{"type":561,"value":982},{"type":556,"tag":583,"props":986,"children":988},{"className":734,"code":987,"language":736,"meta":549,"style":549},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[989],{"type":556,"tag":589,"props":990,"children":991},{"__ignoreMap":549},[992,999,1030,1057,1064,1099,1107,1115,1124,1133,1142,1165,1212,1237,1273,1357,1436,1514,1540,1549,1595],{"type":556,"tag":593,"props":993,"children":994},{"class":595,"line":596},[995],{"type":556,"tag":593,"props":996,"children":997},{"style":746},[998],{"type":561,"value":749},{"type":556,"tag":593,"props":1000,"children":1001},{"class":595,"line":605},[1002,1006,1010,1014,1018,1022,1026],{"type":556,"tag":593,"props":1003,"children":1004},{"style":746},[1005],{"type":561,"value":757},{"type":556,"tag":593,"props":1007,"children":1008},{"style":760},[1009],{"type":561,"value":763},{"type":556,"tag":593,"props":1011,"children":1012},{"style":766},[1013],{"type":561,"value":769},{"type":556,"tag":593,"props":1015,"children":1016},{"style":760},[1017],{"type":561,"value":774},{"type":556,"tag":593,"props":1019,"children":1020},{"style":777},[1021],{"type":561,"value":780},{"type":556,"tag":593,"props":1023,"children":1024},{"style":760},[1025],{"type":561,"value":785},{"type":556,"tag":593,"props":1027,"children":1028},{"style":788},[1029],{"type":561,"value":791},{"type":556,"tag":593,"props":1031,"children":1032},{"class":595,"line":642},[1033,1037,1041,1045,1049,1053],{"type":556,"tag":593,"props":1034,"children":1035},{"style":746},[1036],{"type":561,"value":757},{"type":556,"tag":593,"props":1038,"children":1039},{"style":760},[1040],{"type":561,"value":763},{"type":556,"tag":593,"props":1042,"children":1043},{"style":766},[1044],{"type":561,"value":807},{"type":556,"tag":593,"props":1046,"children":1047},{"style":760},[1048],{"type":561,"value":774},{"type":556,"tag":593,"props":1050,"children":1051},{"style":777},[1052],{"type":561,"value":780},{"type":556,"tag":593,"props":1054,"children":1055},{"style":760},[1056],{"type":561,"value":820},{"type":556,"tag":593,"props":1058,"children":1059},{"class":595,"line":823},[1060],{"type":556,"tag":593,"props":1061,"children":1062},{"style":746},[1063],{"type":561,"value":829},{"type":556,"tag":593,"props":1065,"children":1066},{"class":595,"line":832},[1067,1071,1075,1079,1083,1087,1091,1095],{"type":556,"tag":593,"props":1068,"children":1069},{"style":836},[1070],{"type":561,"value":839},{"type":556,"tag":593,"props":1072,"children":1073},{"style":842},[1074],{"type":561,"value":845},{"type":556,"tag":593,"props":1076,"children":1077},{"style":760},[1078],{"type":561,"value":850},{"type":556,"tag":593,"props":1080,"children":1081},{"style":836},[1082],{"type":561,"value":855},{"type":556,"tag":593,"props":1084,"children":1085},{"style":760},[1086],{"type":561,"value":860},{"type":556,"tag":593,"props":1088,"children":1089},{"style":788},[1090],{"type":561,"value":865},{"type":556,"tag":593,"props":1092,"children":1093},{"style":760},[1094],{"type":561,"value":870},{"type":556,"tag":593,"props":1096,"children":1097},{"style":760},[1098],{"type":561,"value":875},{"type":556,"tag":593,"props":1100,"children":1101},{"class":595,"line":878},[1102],{"type":556,"tag":593,"props":1103,"children":1104},{"style":746},[1105],{"type":561,"value":1106},"  // 倒序遍历字符串\n",{"type":556,"tag":593,"props":1108,"children":1109},{"class":595,"line":973},[1110],{"type":556,"tag":593,"props":1111,"children":1112},{"style":746},[1113],{"type":561,"value":1114},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":556,"tag":593,"props":1116,"children":1118},{"class":595,"line":1117},8,[1119],{"type":556,"tag":593,"props":1120,"children":1121},{"style":746},[1122],{"type":561,"value":1123},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":556,"tag":593,"props":1125,"children":1127},{"class":595,"line":1126},9,[1128],{"type":556,"tag":593,"props":1129,"children":1130},{"style":746},[1131],{"type":561,"value":1132},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":556,"tag":593,"props":1134,"children":1136},{"class":595,"line":1135},10,[1137],{"type":556,"tag":593,"props":1138,"children":1139},{"style":746},[1140],{"type":561,"value":1141},"  // 4. 执行 j = i\n",{"type":556,"tag":593,"props":1143,"children":1145},{"class":595,"line":1144},11,[1146,1151,1156,1160],{"type":556,"tag":593,"props":1147,"children":1148},{"style":836},[1149],{"type":561,"value":1150},"  let",{"type":556,"tag":593,"props":1152,"children":1153},{"style":788},[1154],{"type":561,"value":1155}," res",{"type":556,"tag":593,"props":1157,"children":1158},{"style":760},[1159],{"type":561,"value":850},{"type":556,"tag":593,"props":1161,"children":1162},{"style":760},[1163],{"type":561,"value":1164}," [];\n",{"type":556,"tag":593,"props":1166,"children":1168},{"class":595,"line":1167},12,[1169,1173,1178,1182,1186,1190,1196,1201,1207],{"type":556,"tag":593,"props":1170,"children":1171},{"style":836},[1172],{"type":561,"value":1150},{"type":556,"tag":593,"props":1174,"children":1175},{"style":788},[1176],{"type":561,"value":1177}," i",{"type":556,"tag":593,"props":1179,"children":1180},{"style":760},[1181],{"type":561,"value":850},{"type":556,"tag":593,"props":1183,"children":1184},{"style":788},[1185],{"type":561,"value":889},{"type":556,"tag":593,"props":1187,"children":1188},{"style":760},[1189],{"type":561,"value":894},{"type":556,"tag":593,"props":1191,"children":1193},{"style":1192},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1194],{"type":561,"value":1195},"length",{"type":556,"tag":593,"props":1197,"children":1198},{"style":836},[1199],{"type":561,"value":1200}," -",{"type":556,"tag":593,"props":1202,"children":1204},{"style":1203},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1205],{"type":561,"value":1206}," 1",{"type":556,"tag":593,"props":1208,"children":1209},{"style":760},[1210],{"type":561,"value":1211},";\n",{"type":556,"tag":593,"props":1213,"children":1215},{"class":595,"line":1214},13,[1216,1220,1225,1229,1233],{"type":556,"tag":593,"props":1217,"children":1218},{"style":836},[1219],{"type":561,"value":1150},{"type":556,"tag":593,"props":1221,"children":1222},{"style":788},[1223],{"type":561,"value":1224}," j",{"type":556,"tag":593,"props":1226,"children":1227},{"style":760},[1228],{"type":561,"value":850},{"type":556,"tag":593,"props":1230,"children":1231},{"style":788},[1232],{"type":561,"value":1177},{"type":556,"tag":593,"props":1234,"children":1235},{"style":760},[1236],{"type":561,"value":1211},{"type":556,"tag":593,"props":1238,"children":1240},{"class":595,"line":1239},14,[1241,1246,1250,1255,1260,1265,1269],{"type":556,"tag":593,"props":1242,"children":1243},{"style":766},[1244],{"type":561,"value":1245},"  while",{"type":556,"tag":593,"props":1247,"children":1248},{"style":760},[1249],{"type":561,"value":860},{"type":556,"tag":593,"props":1251,"children":1252},{"style":788},[1253],{"type":561,"value":1254},"i",{"type":556,"tag":593,"props":1256,"children":1257},{"style":760},[1258],{"type":561,"value":1259}," >=",{"type":556,"tag":593,"props":1261,"children":1262},{"style":1203},[1263],{"type":561,"value":1264}," 0",{"type":556,"tag":593,"props":1266,"children":1267},{"style":760},[1268],{"type":561,"value":870},{"type":556,"tag":593,"props":1270,"children":1271},{"style":760},[1272],{"type":561,"value":875},{"type":556,"tag":593,"props":1274,"children":1276},{"class":595,"line":1275},15,[1277,1282,1286,1290,1294,1298,1303,1307,1312,1316,1321,1326,1330,1334,1338,1342,1347,1352],{"type":556,"tag":593,"props":1278,"children":1279},{"style":766},[1280],{"type":561,"value":1281},"    while",{"type":556,"tag":593,"props":1283,"children":1284},{"style":760},[1285],{"type":561,"value":860},{"type":556,"tag":593,"props":1287,"children":1288},{"style":788},[1289],{"type":561,"value":1254},{"type":556,"tag":593,"props":1291,"children":1292},{"style":760},[1293],{"type":561,"value":1259},{"type":556,"tag":593,"props":1295,"children":1296},{"style":1203},[1297],{"type":561,"value":1264},{"type":556,"tag":593,"props":1299,"children":1300},{"style":836},[1301],{"type":561,"value":1302}," &&",{"type":556,"tag":593,"props":1304,"children":1305},{"style":788},[1306],{"type":561,"value":889},{"type":556,"tag":593,"props":1308,"children":1309},{"style":760},[1310],{"type":561,"value":1311},"[",{"type":556,"tag":593,"props":1313,"children":1314},{"style":788},[1315],{"type":561,"value":1254},{"type":556,"tag":593,"props":1317,"children":1318},{"style":760},[1319],{"type":561,"value":1320},"]",{"type":556,"tag":593,"props":1322,"children":1323},{"style":836},[1324],{"type":561,"value":1325}," !==",{"type":556,"tag":593,"props":1327,"children":1328},{"style":907},[1329],{"type":561,"value":915},{"type":556,"tag":593,"props":1331,"children":1332},{"style":907},[1333],{"type":561,"value":915},{"type":556,"tag":593,"props":1335,"children":1336},{"style":760},[1337],{"type":561,"value":870},{"type":556,"tag":593,"props":1339,"children":1340},{"style":788},[1341],{"type":561,"value":1177},{"type":556,"tag":593,"props":1343,"children":1344},{"style":836},[1345],{"type":561,"value":1346},"--",{"type":556,"tag":593,"props":1348,"children":1349},{"style":760},[1350],{"type":561,"value":1351},";",{"type":556,"tag":593,"props":1353,"children":1354},{"style":746},[1355],{"type":561,"value":1356}," // 搜索首个空格\n",{"type":556,"tag":593,"props":1358,"children":1360},{"class":595,"line":1359},16,[1361,1366,1370,1375,1379,1383,1387,1392,1396,1400,1405,1409,1414,1418,1422,1426,1431],{"type":556,"tag":593,"props":1362,"children":1363},{"style":788},[1364],{"type":561,"value":1365},"    res",{"type":556,"tag":593,"props":1367,"children":1368},{"style":760},[1369],{"type":561,"value":894},{"type":556,"tag":593,"props":1371,"children":1372},{"style":842},[1373],{"type":561,"value":1374},"push",{"type":556,"tag":593,"props":1376,"children":1377},{"style":760},[1378],{"type":561,"value":904},{"type":556,"tag":593,"props":1380,"children":1381},{"style":788},[1382],{"type":561,"value":865},{"type":556,"tag":593,"props":1384,"children":1385},{"style":760},[1386],{"type":561,"value":894},{"type":556,"tag":593,"props":1388,"children":1389},{"style":842},[1390],{"type":561,"value":1391},"substring",{"type":556,"tag":593,"props":1393,"children":1394},{"style":760},[1395],{"type":561,"value":904},{"type":556,"tag":593,"props":1397,"children":1398},{"style":788},[1399],{"type":561,"value":1254},{"type":556,"tag":593,"props":1401,"children":1402},{"style":836},[1403],{"type":561,"value":1404}," +",{"type":556,"tag":593,"props":1406,"children":1407},{"style":1203},[1408],{"type":561,"value":1206},{"type":556,"tag":593,"props":1410,"children":1411},{"style":760},[1412],{"type":561,"value":1413},",",{"type":556,"tag":593,"props":1415,"children":1416},{"style":788},[1417],{"type":561,"value":1224},{"type":556,"tag":593,"props":1419,"children":1420},{"style":836},[1421],{"type":561,"value":1404},{"type":556,"tag":593,"props":1423,"children":1424},{"style":1203},[1425],{"type":561,"value":1206},{"type":556,"tag":593,"props":1427,"children":1428},{"style":760},[1429],{"type":561,"value":1430},"));",{"type":556,"tag":593,"props":1432,"children":1433},{"style":746},[1434],{"type":561,"value":1435}," // 添加单词\n",{"type":556,"tag":593,"props":1437,"children":1439},{"class":595,"line":1438},17,[1440,1444,1448,1452,1456,1460,1464,1468,1472,1476,1480,1485,1489,1493,1497,1501,1505,1509],{"type":556,"tag":593,"props":1441,"children":1442},{"style":766},[1443],{"type":561,"value":1281},{"type":556,"tag":593,"props":1445,"children":1446},{"style":760},[1447],{"type":561,"value":860},{"type":556,"tag":593,"props":1449,"children":1450},{"style":788},[1451],{"type":561,"value":1254},{"type":556,"tag":593,"props":1453,"children":1454},{"style":760},[1455],{"type":561,"value":1259},{"type":556,"tag":593,"props":1457,"children":1458},{"style":1203},[1459],{"type":561,"value":1264},{"type":556,"tag":593,"props":1461,"children":1462},{"style":836},[1463],{"type":561,"value":1302},{"type":556,"tag":593,"props":1465,"children":1466},{"style":788},[1467],{"type":561,"value":889},{"type":556,"tag":593,"props":1469,"children":1470},{"style":760},[1471],{"type":561,"value":1311},{"type":556,"tag":593,"props":1473,"children":1474},{"style":788},[1475],{"type":561,"value":1254},{"type":556,"tag":593,"props":1477,"children":1478},{"style":760},[1479],{"type":561,"value":1320},{"type":556,"tag":593,"props":1481,"children":1482},{"style":836},[1483],{"type":561,"value":1484}," ===",{"type":556,"tag":593,"props":1486,"children":1487},{"style":907},[1488],{"type":561,"value":915},{"type":556,"tag":593,"props":1490,"children":1491},{"style":907},[1492],{"type":561,"value":915},{"type":556,"tag":593,"props":1494,"children":1495},{"style":760},[1496],{"type":561,"value":870},{"type":556,"tag":593,"props":1498,"children":1499},{"style":788},[1500],{"type":561,"value":1177},{"type":556,"tag":593,"props":1502,"children":1503},{"style":836},[1504],{"type":561,"value":1346},{"type":556,"tag":593,"props":1506,"children":1507},{"style":760},[1508],{"type":561,"value":1351},{"type":556,"tag":593,"props":1510,"children":1511},{"style":746},[1512],{"type":561,"value":1513}," // 跳过单词间空格\n",{"type":556,"tag":593,"props":1515,"children":1517},{"class":595,"line":1516},18,[1518,1523,1527,1531,1535],{"type":556,"tag":593,"props":1519,"children":1520},{"style":788},[1521],{"type":561,"value":1522},"    j",{"type":556,"tag":593,"props":1524,"children":1525},{"style":760},[1526],{"type":561,"value":850},{"type":556,"tag":593,"props":1528,"children":1529},{"style":788},[1530],{"type":561,"value":1177},{"type":556,"tag":593,"props":1532,"children":1533},{"style":760},[1534],{"type":561,"value":1351},{"type":556,"tag":593,"props":1536,"children":1537},{"style":746},[1538],{"type":561,"value":1539}," // 指针移动，指向下个单词的尾字符\n",{"type":556,"tag":593,"props":1541,"children":1543},{"class":595,"line":1542},19,[1544],{"type":556,"tag":593,"props":1545,"children":1546},{"style":760},[1547],{"type":561,"value":1548},"  }\n",{"type":556,"tag":593,"props":1550,"children":1552},{"class":595,"line":1551},20,[1553,1557,1561,1565,1569,1573,1577,1581,1585,1590],{"type":556,"tag":593,"props":1554,"children":1555},{"style":766},[1556],{"type":561,"value":884},{"type":556,"tag":593,"props":1558,"children":1559},{"style":788},[1560],{"type":561,"value":1155},{"type":556,"tag":593,"props":1562,"children":1563},{"style":760},[1564],{"type":561,"value":894},{"type":556,"tag":593,"props":1566,"children":1567},{"style":842},[1568],{"type":561,"value":953},{"type":556,"tag":593,"props":1570,"children":1571},{"style":760},[1572],{"type":561,"value":904},{"type":556,"tag":593,"props":1574,"children":1575},{"style":907},[1576],{"type":561,"value":910},{"type":556,"tag":593,"props":1578,"children":1579},{"style":907},[1580],{"type":561,"value":915},{"type":556,"tag":593,"props":1582,"children":1583},{"style":760},[1584],{"type":561,"value":920},{"type":556,"tag":593,"props":1586,"children":1587},{"style":842},[1588],{"type":561,"value":1589},"trim",{"type":556,"tag":593,"props":1591,"children":1592},{"style":760},[1593],{"type":561,"value":1594},"();\n",{"type":556,"tag":593,"props":1596,"children":1598},{"class":595,"line":1597},21,[1599],{"type":556,"tag":593,"props":1600,"children":1601},{"style":760},[1602],{"type":561,"value":979},{"type":556,"tag":1604,"props":1605,"children":1606},"style",{},[1607],{"type":561,"value":1608},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":832,"depth":832,"links":1610},[1611,1612],{"id":718,"depth":605,"text":718},{"id":723,"depth":605,"text":723,"children":1613},[1614,1615],{"id":729,"depth":642,"text":729},{"id":982,"depth":642,"text":982},"markdown","content:1.algorithm:3.leetcode:3.major:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/3.major/151.reverse-words-in-a-string.md","md",[1622,1624],{"_path":177,"title":176,"description":1623},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":183,"title":182,"description":1625},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1714279834641]