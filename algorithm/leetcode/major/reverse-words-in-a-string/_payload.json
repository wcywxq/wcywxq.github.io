[{"data":1,"prerenderedAt":1620},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-words-in-a-string":540,"/algorithm/leetcode/major/reverse-words-in-a-string-surround":1615},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":180,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":179,"description":544,"url":545,"body":546,"_type":1610,"_id":1611,"_source":1612,"_file":1613,"_extension":1614},"major",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":547,"children":548,"toc":1603},"root",[549,556,561,566,571,576,606,611,643,648,679,684,704,709,715,720,726,974,979,1597],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":550,"tag":551,"props":567,"children":568},{},[569],{"type":555,"value":570},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":550,"tag":551,"props":572,"children":573},{},[574],{"type":555,"value":575},"示例 1：",{"type":550,"tag":577,"props":578,"children":581},"pre",{"className":579,"code":580,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[582],{"type":550,"tag":583,"props":584,"children":585},"code",{"__ignoreMap":543},[586,597],{"type":550,"tag":587,"props":588,"children":591},"span",{"class":589,"line":590},"line",1,[592],{"type":550,"tag":587,"props":593,"children":594},{},[595],{"type":555,"value":596},"输入：s = \"the sky is blue\"\n",{"type":550,"tag":587,"props":598,"children":600},{"class":589,"line":599},2,[601],{"type":550,"tag":587,"props":602,"children":603},{},[604],{"type":555,"value":605},"输出：\"blue is sky the\"\n",{"type":550,"tag":551,"props":607,"children":608},{},[609],{"type":555,"value":610},"示例 2：",{"type":550,"tag":577,"props":612,"children":614},{"className":579,"code":613,"language":555,"meta":543,"style":543},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[615],{"type":550,"tag":583,"props":616,"children":617},{"__ignoreMap":543},[618,626,634],{"type":550,"tag":587,"props":619,"children":620},{"class":589,"line":590},[621],{"type":550,"tag":587,"props":622,"children":623},{},[624],{"type":555,"value":625},"输入：s = \" hello world \"\n",{"type":550,"tag":587,"props":627,"children":628},{"class":589,"line":599},[629],{"type":550,"tag":587,"props":630,"children":631},{},[632],{"type":555,"value":633},"输出：\"world hello\"\n",{"type":550,"tag":587,"props":635,"children":637},{"class":589,"line":636},3,[638],{"type":550,"tag":587,"props":639,"children":640},{},[641],{"type":555,"value":642},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":550,"tag":551,"props":644,"children":645},{},[646],{"type":555,"value":647},"示例 3：",{"type":550,"tag":577,"props":649,"children":651},{"className":579,"code":650,"language":555,"meta":543,"style":543},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[652],{"type":550,"tag":583,"props":653,"children":654},{"__ignoreMap":543},[655,663,671],{"type":550,"tag":587,"props":656,"children":657},{"class":589,"line":590},[658],{"type":550,"tag":587,"props":659,"children":660},{},[661],{"type":555,"value":662},"输入：s = \"a good example\"\n",{"type":550,"tag":587,"props":664,"children":665},{"class":589,"line":599},[666],{"type":550,"tag":587,"props":667,"children":668},{},[669],{"type":555,"value":670},"输出：\"example good a\"\n",{"type":550,"tag":587,"props":672,"children":673},{"class":589,"line":636},[674],{"type":550,"tag":587,"props":675,"children":676},{},[677],{"type":555,"value":678},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":550,"tag":551,"props":680,"children":681},{},[682],{"type":555,"value":683},"提示：",{"type":550,"tag":685,"props":686,"children":687},"ul",{},[688,694,699],{"type":550,"tag":689,"props":690,"children":691},"li",{},[692],{"type":555,"value":693},"1 \u003C= s.length \u003C= 10^4",{"type":550,"tag":689,"props":695,"children":696},{},[697],{"type":555,"value":698},"s 包含英文大小写字母、数字和空格 ' '",{"type":550,"tag":689,"props":700,"children":701},{},[702],{"type":555,"value":703},"s 中 至少存在一个 单词",{"type":550,"tag":551,"props":705,"children":706},{},[707],{"type":555,"value":708},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":550,"tag":710,"props":711,"children":713},"h2",{"id":712},"解题思路",[714],{"type":555,"value":712},{"type":550,"tag":710,"props":716,"children":718},{"id":717},"实现",[719],{"type":555,"value":717},{"type":550,"tag":721,"props":722,"children":724},"h3",{"id":723},"语言特性",[725],{"type":555,"value":723},{"type":550,"tag":577,"props":727,"children":731},{"className":728,"code":729,"language":730,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[732],{"type":550,"tag":583,"props":733,"children":734},{"__ignoreMap":543},[735,744,786,815,824,870,965],{"type":550,"tag":587,"props":736,"children":737},{"class":589,"line":590},[738],{"type":550,"tag":587,"props":739,"children":741},{"style":740},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[742],{"type":555,"value":743},"/**\n",{"type":550,"tag":587,"props":745,"children":746},{"class":589,"line":599},[747,752,758,764,769,775,780],{"type":550,"tag":587,"props":748,"children":749},{"style":740},[750],{"type":555,"value":751}," * ",{"type":550,"tag":587,"props":753,"children":755},{"style":754},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[756],{"type":555,"value":757},"@",{"type":550,"tag":587,"props":759,"children":761},{"style":760},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[762],{"type":555,"value":763},"param",{"type":550,"tag":587,"props":765,"children":766},{"style":754},[767],{"type":555,"value":768}," {",{"type":550,"tag":587,"props":770,"children":772},{"style":771},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[773],{"type":555,"value":774},"string",{"type":550,"tag":587,"props":776,"children":777},{"style":754},[778],{"type":555,"value":779},"}",{"type":550,"tag":587,"props":781,"children":783},{"style":782},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[784],{"type":555,"value":785}," s\n",{"type":550,"tag":587,"props":787,"children":788},{"class":589,"line":636},[789,793,797,802,806,810],{"type":550,"tag":587,"props":790,"children":791},{"style":740},[792],{"type":555,"value":751},{"type":550,"tag":587,"props":794,"children":795},{"style":754},[796],{"type":555,"value":757},{"type":550,"tag":587,"props":798,"children":799},{"style":760},[800],{"type":555,"value":801},"return",{"type":550,"tag":587,"props":803,"children":804},{"style":754},[805],{"type":555,"value":768},{"type":550,"tag":587,"props":807,"children":808},{"style":771},[809],{"type":555,"value":774},{"type":550,"tag":587,"props":811,"children":812},{"style":754},[813],{"type":555,"value":814},"}\n",{"type":550,"tag":587,"props":816,"children":818},{"class":589,"line":817},4,[819],{"type":550,"tag":587,"props":820,"children":821},{"style":740},[822],{"type":555,"value":823}," */\n",{"type":550,"tag":587,"props":825,"children":827},{"class":589,"line":826},5,[828,834,840,845,850,855,860,865],{"type":550,"tag":587,"props":829,"children":831},{"style":830},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[832],{"type":555,"value":833},"var",{"type":550,"tag":587,"props":835,"children":837},{"style":836},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[838],{"type":555,"value":839}," reverseWords",{"type":550,"tag":587,"props":841,"children":842},{"style":754},[843],{"type":555,"value":844}," =",{"type":550,"tag":587,"props":846,"children":847},{"style":830},[848],{"type":555,"value":849}," function",{"type":550,"tag":587,"props":851,"children":852},{"style":754},[853],{"type":555,"value":854}," (",{"type":550,"tag":587,"props":856,"children":857},{"style":782},[858],{"type":555,"value":859},"s",{"type":550,"tag":587,"props":861,"children":862},{"style":754},[863],{"type":555,"value":864},")",{"type":550,"tag":587,"props":866,"children":867},{"style":754},[868],{"type":555,"value":869}," {\n",{"type":550,"tag":587,"props":871,"children":873},{"class":589,"line":872},6,[874,879,884,889,894,899,905,910,915,920,924,929,933,938,943,948,952,956,960],{"type":550,"tag":587,"props":875,"children":876},{"style":760},[877],{"type":555,"value":878},"  return",{"type":550,"tag":587,"props":880,"children":881},{"style":782},[882],{"type":555,"value":883}," s",{"type":550,"tag":587,"props":885,"children":886},{"style":754},[887],{"type":555,"value":888},".",{"type":550,"tag":587,"props":890,"children":891},{"style":836},[892],{"type":555,"value":893},"split",{"type":550,"tag":587,"props":895,"children":896},{"style":754},[897],{"type":555,"value":898},"(",{"type":550,"tag":587,"props":900,"children":902},{"style":901},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[903],{"type":555,"value":904},"\"",{"type":550,"tag":587,"props":906,"children":907},{"style":901},[908],{"type":555,"value":909}," \"",{"type":550,"tag":587,"props":911,"children":912},{"style":754},[913],{"type":555,"value":914},").",{"type":550,"tag":587,"props":916,"children":917},{"style":836},[918],{"type":555,"value":919},"filter",{"type":550,"tag":587,"props":921,"children":922},{"style":754},[923],{"type":555,"value":898},{"type":550,"tag":587,"props":925,"children":926},{"style":782},[927],{"type":555,"value":928},"Boolean",{"type":550,"tag":587,"props":930,"children":931},{"style":754},[932],{"type":555,"value":914},{"type":550,"tag":587,"props":934,"children":935},{"style":836},[936],{"type":555,"value":937},"reverse",{"type":550,"tag":587,"props":939,"children":940},{"style":754},[941],{"type":555,"value":942},"().",{"type":550,"tag":587,"props":944,"children":945},{"style":836},[946],{"type":555,"value":947},"join",{"type":550,"tag":587,"props":949,"children":950},{"style":754},[951],{"type":555,"value":898},{"type":550,"tag":587,"props":953,"children":954},{"style":901},[955],{"type":555,"value":904},{"type":550,"tag":587,"props":957,"children":958},{"style":901},[959],{"type":555,"value":909},{"type":550,"tag":587,"props":961,"children":962},{"style":754},[963],{"type":555,"value":964},");\n",{"type":550,"tag":587,"props":966,"children":968},{"class":589,"line":967},7,[969],{"type":550,"tag":587,"props":970,"children":971},{"style":754},[972],{"type":555,"value":973},"};\n",{"type":550,"tag":721,"props":975,"children":977},{"id":976},"双指针",[978],{"type":555,"value":976},{"type":550,"tag":577,"props":980,"children":982},{"className":728,"code":981,"language":730,"meta":543,"style":543},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[983],{"type":550,"tag":583,"props":984,"children":985},{"__ignoreMap":543},[986,993,1024,1051,1058,1093,1101,1109,1118,1127,1136,1159,1206,1231,1267,1351,1430,1508,1534,1543,1589],{"type":550,"tag":587,"props":987,"children":988},{"class":589,"line":590},[989],{"type":550,"tag":587,"props":990,"children":991},{"style":740},[992],{"type":555,"value":743},{"type":550,"tag":587,"props":994,"children":995},{"class":589,"line":599},[996,1000,1004,1008,1012,1016,1020],{"type":550,"tag":587,"props":997,"children":998},{"style":740},[999],{"type":555,"value":751},{"type":550,"tag":587,"props":1001,"children":1002},{"style":754},[1003],{"type":555,"value":757},{"type":550,"tag":587,"props":1005,"children":1006},{"style":760},[1007],{"type":555,"value":763},{"type":550,"tag":587,"props":1009,"children":1010},{"style":754},[1011],{"type":555,"value":768},{"type":550,"tag":587,"props":1013,"children":1014},{"style":771},[1015],{"type":555,"value":774},{"type":550,"tag":587,"props":1017,"children":1018},{"style":754},[1019],{"type":555,"value":779},{"type":550,"tag":587,"props":1021,"children":1022},{"style":782},[1023],{"type":555,"value":785},{"type":550,"tag":587,"props":1025,"children":1026},{"class":589,"line":636},[1027,1031,1035,1039,1043,1047],{"type":550,"tag":587,"props":1028,"children":1029},{"style":740},[1030],{"type":555,"value":751},{"type":550,"tag":587,"props":1032,"children":1033},{"style":754},[1034],{"type":555,"value":757},{"type":550,"tag":587,"props":1036,"children":1037},{"style":760},[1038],{"type":555,"value":801},{"type":550,"tag":587,"props":1040,"children":1041},{"style":754},[1042],{"type":555,"value":768},{"type":550,"tag":587,"props":1044,"children":1045},{"style":771},[1046],{"type":555,"value":774},{"type":550,"tag":587,"props":1048,"children":1049},{"style":754},[1050],{"type":555,"value":814},{"type":550,"tag":587,"props":1052,"children":1053},{"class":589,"line":817},[1054],{"type":550,"tag":587,"props":1055,"children":1056},{"style":740},[1057],{"type":555,"value":823},{"type":550,"tag":587,"props":1059,"children":1060},{"class":589,"line":826},[1061,1065,1069,1073,1077,1081,1085,1089],{"type":550,"tag":587,"props":1062,"children":1063},{"style":830},[1064],{"type":555,"value":833},{"type":550,"tag":587,"props":1066,"children":1067},{"style":836},[1068],{"type":555,"value":839},{"type":550,"tag":587,"props":1070,"children":1071},{"style":754},[1072],{"type":555,"value":844},{"type":550,"tag":587,"props":1074,"children":1075},{"style":830},[1076],{"type":555,"value":849},{"type":550,"tag":587,"props":1078,"children":1079},{"style":754},[1080],{"type":555,"value":854},{"type":550,"tag":587,"props":1082,"children":1083},{"style":782},[1084],{"type":555,"value":859},{"type":550,"tag":587,"props":1086,"children":1087},{"style":754},[1088],{"type":555,"value":864},{"type":550,"tag":587,"props":1090,"children":1091},{"style":754},[1092],{"type":555,"value":869},{"type":550,"tag":587,"props":1094,"children":1095},{"class":589,"line":872},[1096],{"type":550,"tag":587,"props":1097,"children":1098},{"style":740},[1099],{"type":555,"value":1100},"  // 倒序遍历字符串\n",{"type":550,"tag":587,"props":1102,"children":1103},{"class":589,"line":967},[1104],{"type":550,"tag":587,"props":1105,"children":1106},{"style":740},[1107],{"type":555,"value":1108},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":550,"tag":587,"props":1110,"children":1112},{"class":589,"line":1111},8,[1113],{"type":550,"tag":587,"props":1114,"children":1115},{"style":740},[1116],{"type":555,"value":1117},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":550,"tag":587,"props":1119,"children":1121},{"class":589,"line":1120},9,[1122],{"type":550,"tag":587,"props":1123,"children":1124},{"style":740},[1125],{"type":555,"value":1126},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":550,"tag":587,"props":1128,"children":1130},{"class":589,"line":1129},10,[1131],{"type":550,"tag":587,"props":1132,"children":1133},{"style":740},[1134],{"type":555,"value":1135},"  // 4. 执行 j = i\n",{"type":550,"tag":587,"props":1137,"children":1139},{"class":589,"line":1138},11,[1140,1145,1150,1154],{"type":550,"tag":587,"props":1141,"children":1142},{"style":830},[1143],{"type":555,"value":1144},"  let",{"type":550,"tag":587,"props":1146,"children":1147},{"style":782},[1148],{"type":555,"value":1149}," res",{"type":550,"tag":587,"props":1151,"children":1152},{"style":754},[1153],{"type":555,"value":844},{"type":550,"tag":587,"props":1155,"children":1156},{"style":754},[1157],{"type":555,"value":1158}," [];\n",{"type":550,"tag":587,"props":1160,"children":1162},{"class":589,"line":1161},12,[1163,1167,1172,1176,1180,1184,1190,1195,1201],{"type":550,"tag":587,"props":1164,"children":1165},{"style":830},[1166],{"type":555,"value":1144},{"type":550,"tag":587,"props":1168,"children":1169},{"style":782},[1170],{"type":555,"value":1171}," i",{"type":550,"tag":587,"props":1173,"children":1174},{"style":754},[1175],{"type":555,"value":844},{"type":550,"tag":587,"props":1177,"children":1178},{"style":782},[1179],{"type":555,"value":883},{"type":550,"tag":587,"props":1181,"children":1182},{"style":754},[1183],{"type":555,"value":888},{"type":550,"tag":587,"props":1185,"children":1187},{"style":1186},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1188],{"type":555,"value":1189},"length",{"type":550,"tag":587,"props":1191,"children":1192},{"style":830},[1193],{"type":555,"value":1194}," -",{"type":550,"tag":587,"props":1196,"children":1198},{"style":1197},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1199],{"type":555,"value":1200}," 1",{"type":550,"tag":587,"props":1202,"children":1203},{"style":754},[1204],{"type":555,"value":1205},";\n",{"type":550,"tag":587,"props":1207,"children":1209},{"class":589,"line":1208},13,[1210,1214,1219,1223,1227],{"type":550,"tag":587,"props":1211,"children":1212},{"style":830},[1213],{"type":555,"value":1144},{"type":550,"tag":587,"props":1215,"children":1216},{"style":782},[1217],{"type":555,"value":1218}," j",{"type":550,"tag":587,"props":1220,"children":1221},{"style":754},[1222],{"type":555,"value":844},{"type":550,"tag":587,"props":1224,"children":1225},{"style":782},[1226],{"type":555,"value":1171},{"type":550,"tag":587,"props":1228,"children":1229},{"style":754},[1230],{"type":555,"value":1205},{"type":550,"tag":587,"props":1232,"children":1234},{"class":589,"line":1233},14,[1235,1240,1244,1249,1254,1259,1263],{"type":550,"tag":587,"props":1236,"children":1237},{"style":760},[1238],{"type":555,"value":1239},"  while",{"type":550,"tag":587,"props":1241,"children":1242},{"style":754},[1243],{"type":555,"value":854},{"type":550,"tag":587,"props":1245,"children":1246},{"style":782},[1247],{"type":555,"value":1248},"i",{"type":550,"tag":587,"props":1250,"children":1251},{"style":754},[1252],{"type":555,"value":1253}," >=",{"type":550,"tag":587,"props":1255,"children":1256},{"style":1197},[1257],{"type":555,"value":1258}," 0",{"type":550,"tag":587,"props":1260,"children":1261},{"style":754},[1262],{"type":555,"value":864},{"type":550,"tag":587,"props":1264,"children":1265},{"style":754},[1266],{"type":555,"value":869},{"type":550,"tag":587,"props":1268,"children":1270},{"class":589,"line":1269},15,[1271,1276,1280,1284,1288,1292,1297,1301,1306,1310,1315,1320,1324,1328,1332,1336,1341,1346],{"type":550,"tag":587,"props":1272,"children":1273},{"style":760},[1274],{"type":555,"value":1275},"    while",{"type":550,"tag":587,"props":1277,"children":1278},{"style":754},[1279],{"type":555,"value":854},{"type":550,"tag":587,"props":1281,"children":1282},{"style":782},[1283],{"type":555,"value":1248},{"type":550,"tag":587,"props":1285,"children":1286},{"style":754},[1287],{"type":555,"value":1253},{"type":550,"tag":587,"props":1289,"children":1290},{"style":1197},[1291],{"type":555,"value":1258},{"type":550,"tag":587,"props":1293,"children":1294},{"style":830},[1295],{"type":555,"value":1296}," &&",{"type":550,"tag":587,"props":1298,"children":1299},{"style":782},[1300],{"type":555,"value":883},{"type":550,"tag":587,"props":1302,"children":1303},{"style":754},[1304],{"type":555,"value":1305},"[",{"type":550,"tag":587,"props":1307,"children":1308},{"style":782},[1309],{"type":555,"value":1248},{"type":550,"tag":587,"props":1311,"children":1312},{"style":754},[1313],{"type":555,"value":1314},"]",{"type":550,"tag":587,"props":1316,"children":1317},{"style":830},[1318],{"type":555,"value":1319}," !==",{"type":550,"tag":587,"props":1321,"children":1322},{"style":901},[1323],{"type":555,"value":909},{"type":550,"tag":587,"props":1325,"children":1326},{"style":901},[1327],{"type":555,"value":909},{"type":550,"tag":587,"props":1329,"children":1330},{"style":754},[1331],{"type":555,"value":864},{"type":550,"tag":587,"props":1333,"children":1334},{"style":782},[1335],{"type":555,"value":1171},{"type":550,"tag":587,"props":1337,"children":1338},{"style":830},[1339],{"type":555,"value":1340},"--",{"type":550,"tag":587,"props":1342,"children":1343},{"style":754},[1344],{"type":555,"value":1345},";",{"type":550,"tag":587,"props":1347,"children":1348},{"style":740},[1349],{"type":555,"value":1350}," // 搜索首个空格\n",{"type":550,"tag":587,"props":1352,"children":1354},{"class":589,"line":1353},16,[1355,1360,1364,1369,1373,1377,1381,1386,1390,1394,1399,1403,1408,1412,1416,1420,1425],{"type":550,"tag":587,"props":1356,"children":1357},{"style":782},[1358],{"type":555,"value":1359},"    res",{"type":550,"tag":587,"props":1361,"children":1362},{"style":754},[1363],{"type":555,"value":888},{"type":550,"tag":587,"props":1365,"children":1366},{"style":836},[1367],{"type":555,"value":1368},"push",{"type":550,"tag":587,"props":1370,"children":1371},{"style":754},[1372],{"type":555,"value":898},{"type":550,"tag":587,"props":1374,"children":1375},{"style":782},[1376],{"type":555,"value":859},{"type":550,"tag":587,"props":1378,"children":1379},{"style":754},[1380],{"type":555,"value":888},{"type":550,"tag":587,"props":1382,"children":1383},{"style":836},[1384],{"type":555,"value":1385},"substring",{"type":550,"tag":587,"props":1387,"children":1388},{"style":754},[1389],{"type":555,"value":898},{"type":550,"tag":587,"props":1391,"children":1392},{"style":782},[1393],{"type":555,"value":1248},{"type":550,"tag":587,"props":1395,"children":1396},{"style":830},[1397],{"type":555,"value":1398}," +",{"type":550,"tag":587,"props":1400,"children":1401},{"style":1197},[1402],{"type":555,"value":1200},{"type":550,"tag":587,"props":1404,"children":1405},{"style":754},[1406],{"type":555,"value":1407},",",{"type":550,"tag":587,"props":1409,"children":1410},{"style":782},[1411],{"type":555,"value":1218},{"type":550,"tag":587,"props":1413,"children":1414},{"style":830},[1415],{"type":555,"value":1398},{"type":550,"tag":587,"props":1417,"children":1418},{"style":1197},[1419],{"type":555,"value":1200},{"type":550,"tag":587,"props":1421,"children":1422},{"style":754},[1423],{"type":555,"value":1424},"));",{"type":550,"tag":587,"props":1426,"children":1427},{"style":740},[1428],{"type":555,"value":1429}," // 添加单词\n",{"type":550,"tag":587,"props":1431,"children":1433},{"class":589,"line":1432},17,[1434,1438,1442,1446,1450,1454,1458,1462,1466,1470,1474,1479,1483,1487,1491,1495,1499,1503],{"type":550,"tag":587,"props":1435,"children":1436},{"style":760},[1437],{"type":555,"value":1275},{"type":550,"tag":587,"props":1439,"children":1440},{"style":754},[1441],{"type":555,"value":854},{"type":550,"tag":587,"props":1443,"children":1444},{"style":782},[1445],{"type":555,"value":1248},{"type":550,"tag":587,"props":1447,"children":1448},{"style":754},[1449],{"type":555,"value":1253},{"type":550,"tag":587,"props":1451,"children":1452},{"style":1197},[1453],{"type":555,"value":1258},{"type":550,"tag":587,"props":1455,"children":1456},{"style":830},[1457],{"type":555,"value":1296},{"type":550,"tag":587,"props":1459,"children":1460},{"style":782},[1461],{"type":555,"value":883},{"type":550,"tag":587,"props":1463,"children":1464},{"style":754},[1465],{"type":555,"value":1305},{"type":550,"tag":587,"props":1467,"children":1468},{"style":782},[1469],{"type":555,"value":1248},{"type":550,"tag":587,"props":1471,"children":1472},{"style":754},[1473],{"type":555,"value":1314},{"type":550,"tag":587,"props":1475,"children":1476},{"style":830},[1477],{"type":555,"value":1478}," ===",{"type":550,"tag":587,"props":1480,"children":1481},{"style":901},[1482],{"type":555,"value":909},{"type":550,"tag":587,"props":1484,"children":1485},{"style":901},[1486],{"type":555,"value":909},{"type":550,"tag":587,"props":1488,"children":1489},{"style":754},[1490],{"type":555,"value":864},{"type":550,"tag":587,"props":1492,"children":1493},{"style":782},[1494],{"type":555,"value":1171},{"type":550,"tag":587,"props":1496,"children":1497},{"style":830},[1498],{"type":555,"value":1340},{"type":550,"tag":587,"props":1500,"children":1501},{"style":754},[1502],{"type":555,"value":1345},{"type":550,"tag":587,"props":1504,"children":1505},{"style":740},[1506],{"type":555,"value":1507}," // 跳过单词间空格\n",{"type":550,"tag":587,"props":1509,"children":1511},{"class":589,"line":1510},18,[1512,1517,1521,1525,1529],{"type":550,"tag":587,"props":1513,"children":1514},{"style":782},[1515],{"type":555,"value":1516},"    j",{"type":550,"tag":587,"props":1518,"children":1519},{"style":754},[1520],{"type":555,"value":844},{"type":550,"tag":587,"props":1522,"children":1523},{"style":782},[1524],{"type":555,"value":1171},{"type":550,"tag":587,"props":1526,"children":1527},{"style":754},[1528],{"type":555,"value":1345},{"type":550,"tag":587,"props":1530,"children":1531},{"style":740},[1532],{"type":555,"value":1533}," // 指针移动，指向下个单词的尾字符\n",{"type":550,"tag":587,"props":1535,"children":1537},{"class":589,"line":1536},19,[1538],{"type":550,"tag":587,"props":1539,"children":1540},{"style":754},[1541],{"type":555,"value":1542},"  }\n",{"type":550,"tag":587,"props":1544,"children":1546},{"class":589,"line":1545},20,[1547,1551,1555,1559,1563,1567,1571,1575,1579,1584],{"type":550,"tag":587,"props":1548,"children":1549},{"style":760},[1550],{"type":555,"value":878},{"type":550,"tag":587,"props":1552,"children":1553},{"style":782},[1554],{"type":555,"value":1149},{"type":550,"tag":587,"props":1556,"children":1557},{"style":754},[1558],{"type":555,"value":888},{"type":550,"tag":587,"props":1560,"children":1561},{"style":836},[1562],{"type":555,"value":947},{"type":550,"tag":587,"props":1564,"children":1565},{"style":754},[1566],{"type":555,"value":898},{"type":550,"tag":587,"props":1568,"children":1569},{"style":901},[1570],{"type":555,"value":904},{"type":550,"tag":587,"props":1572,"children":1573},{"style":901},[1574],{"type":555,"value":909},{"type":550,"tag":587,"props":1576,"children":1577},{"style":754},[1578],{"type":555,"value":914},{"type":550,"tag":587,"props":1580,"children":1581},{"style":836},[1582],{"type":555,"value":1583},"trim",{"type":550,"tag":587,"props":1585,"children":1586},{"style":754},[1587],{"type":555,"value":1588},"();\n",{"type":550,"tag":587,"props":1590,"children":1592},{"class":589,"line":1591},21,[1593],{"type":550,"tag":587,"props":1594,"children":1595},{"style":754},[1596],{"type":555,"value":973},{"type":550,"tag":1598,"props":1599,"children":1600},"style",{},[1601],{"type":555,"value":1602},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":826,"depth":826,"links":1604},[1605,1606],{"id":712,"depth":599,"text":712},{"id":717,"depth":599,"text":717,"children":1607},[1608,1609],{"id":723,"depth":636,"text":723},{"id":976,"depth":636,"text":976},"markdown","content:1.algorithm:3.leetcode:3.major:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/3.major/151.reverse-words-in-a-string.md","md",[1616,1618],{"_path":177,"title":176,"description":1617},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":183,"title":182,"description":1619},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1714099215260]