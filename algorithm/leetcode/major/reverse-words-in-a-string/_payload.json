[{"data":1,"prerenderedAt":1558},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-words-in-a-string":478,"/algorithm/leetcode/major/reverse-words-in-a-string-surround":1553},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":180,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":179,"description":482,"url":483,"body":484,"_type":1548,"_id":1549,"_source":1550,"_file":1551,"_extension":1552},"major",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":485,"children":486,"toc":1541},"root",[487,494,499,504,509,514,544,549,581,586,617,622,642,647,653,658,664,912,917,1535],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":488,"tag":489,"props":500,"children":501},{},[502],{"type":493,"value":503},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":488,"tag":489,"props":505,"children":506},{},[507],{"type":493,"value":508},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":488,"tag":489,"props":510,"children":511},{},[512],{"type":493,"value":513},"示例 1：",{"type":488,"tag":515,"props":516,"children":519},"pre",{"className":517,"code":518,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[520],{"type":488,"tag":521,"props":522,"children":523},"code",{"__ignoreMap":481},[524,535],{"type":488,"tag":525,"props":526,"children":529},"span",{"class":527,"line":528},"line",1,[530],{"type":488,"tag":525,"props":531,"children":532},{},[533],{"type":493,"value":534},"输入：s = \"the sky is blue\"\n",{"type":488,"tag":525,"props":536,"children":538},{"class":527,"line":537},2,[539],{"type":488,"tag":525,"props":540,"children":541},{},[542],{"type":493,"value":543},"输出：\"blue is sky the\"\n",{"type":488,"tag":489,"props":545,"children":546},{},[547],{"type":493,"value":548},"示例 2：",{"type":488,"tag":515,"props":550,"children":552},{"className":517,"code":551,"language":493,"meta":481,"style":481},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[553],{"type":488,"tag":521,"props":554,"children":555},{"__ignoreMap":481},[556,564,572],{"type":488,"tag":525,"props":557,"children":558},{"class":527,"line":528},[559],{"type":488,"tag":525,"props":560,"children":561},{},[562],{"type":493,"value":563},"输入：s = \" hello world \"\n",{"type":488,"tag":525,"props":565,"children":566},{"class":527,"line":537},[567],{"type":488,"tag":525,"props":568,"children":569},{},[570],{"type":493,"value":571},"输出：\"world hello\"\n",{"type":488,"tag":525,"props":573,"children":575},{"class":527,"line":574},3,[576],{"type":488,"tag":525,"props":577,"children":578},{},[579],{"type":493,"value":580},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":488,"tag":489,"props":582,"children":583},{},[584],{"type":493,"value":585},"示例 3：",{"type":488,"tag":515,"props":587,"children":589},{"className":517,"code":588,"language":493,"meta":481,"style":481},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[590],{"type":488,"tag":521,"props":591,"children":592},{"__ignoreMap":481},[593,601,609],{"type":488,"tag":525,"props":594,"children":595},{"class":527,"line":528},[596],{"type":488,"tag":525,"props":597,"children":598},{},[599],{"type":493,"value":600},"输入：s = \"a good example\"\n",{"type":488,"tag":525,"props":602,"children":603},{"class":527,"line":537},[604],{"type":488,"tag":525,"props":605,"children":606},{},[607],{"type":493,"value":608},"输出：\"example good a\"\n",{"type":488,"tag":525,"props":610,"children":611},{"class":527,"line":574},[612],{"type":488,"tag":525,"props":613,"children":614},{},[615],{"type":493,"value":616},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":488,"tag":489,"props":618,"children":619},{},[620],{"type":493,"value":621},"提示：",{"type":488,"tag":623,"props":624,"children":625},"ul",{},[626,632,637],{"type":488,"tag":627,"props":628,"children":629},"li",{},[630],{"type":493,"value":631},"1 \u003C= s.length \u003C= 10^4",{"type":488,"tag":627,"props":633,"children":634},{},[635],{"type":493,"value":636},"s 包含英文大小写字母、数字和空格 ' '",{"type":488,"tag":627,"props":638,"children":639},{},[640],{"type":493,"value":641},"s 中 至少存在一个 单词",{"type":488,"tag":489,"props":643,"children":644},{},[645],{"type":493,"value":646},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":488,"tag":648,"props":649,"children":651},"h2",{"id":650},"解题思路",[652],{"type":493,"value":650},{"type":488,"tag":648,"props":654,"children":656},{"id":655},"实现",[657],{"type":493,"value":655},{"type":488,"tag":659,"props":660,"children":662},"h3",{"id":661},"语言特性",[663],{"type":493,"value":661},{"type":488,"tag":515,"props":665,"children":669},{"className":666,"code":667,"language":668,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[670],{"type":488,"tag":521,"props":671,"children":672},{"__ignoreMap":481},[673,682,724,753,762,808,903],{"type":488,"tag":525,"props":674,"children":675},{"class":527,"line":528},[676],{"type":488,"tag":525,"props":677,"children":679},{"style":678},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[680],{"type":493,"value":681},"/**\n",{"type":488,"tag":525,"props":683,"children":684},{"class":527,"line":537},[685,690,696,702,707,713,718],{"type":488,"tag":525,"props":686,"children":687},{"style":678},[688],{"type":493,"value":689}," * ",{"type":488,"tag":525,"props":691,"children":693},{"style":692},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[694],{"type":493,"value":695},"@",{"type":488,"tag":525,"props":697,"children":699},{"style":698},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[700],{"type":493,"value":701},"param",{"type":488,"tag":525,"props":703,"children":704},{"style":692},[705],{"type":493,"value":706}," {",{"type":488,"tag":525,"props":708,"children":710},{"style":709},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[711],{"type":493,"value":712},"string",{"type":488,"tag":525,"props":714,"children":715},{"style":692},[716],{"type":493,"value":717},"}",{"type":488,"tag":525,"props":719,"children":721},{"style":720},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[722],{"type":493,"value":723}," s\n",{"type":488,"tag":525,"props":725,"children":726},{"class":527,"line":574},[727,731,735,740,744,748],{"type":488,"tag":525,"props":728,"children":729},{"style":678},[730],{"type":493,"value":689},{"type":488,"tag":525,"props":732,"children":733},{"style":692},[734],{"type":493,"value":695},{"type":488,"tag":525,"props":736,"children":737},{"style":698},[738],{"type":493,"value":739},"return",{"type":488,"tag":525,"props":741,"children":742},{"style":692},[743],{"type":493,"value":706},{"type":488,"tag":525,"props":745,"children":746},{"style":709},[747],{"type":493,"value":712},{"type":488,"tag":525,"props":749,"children":750},{"style":692},[751],{"type":493,"value":752},"}\n",{"type":488,"tag":525,"props":754,"children":756},{"class":527,"line":755},4,[757],{"type":488,"tag":525,"props":758,"children":759},{"style":678},[760],{"type":493,"value":761}," */\n",{"type":488,"tag":525,"props":763,"children":765},{"class":527,"line":764},5,[766,772,778,783,788,793,798,803],{"type":488,"tag":525,"props":767,"children":769},{"style":768},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[770],{"type":493,"value":771},"var",{"type":488,"tag":525,"props":773,"children":775},{"style":774},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[776],{"type":493,"value":777}," reverseWords",{"type":488,"tag":525,"props":779,"children":780},{"style":692},[781],{"type":493,"value":782}," =",{"type":488,"tag":525,"props":784,"children":785},{"style":768},[786],{"type":493,"value":787}," function",{"type":488,"tag":525,"props":789,"children":790},{"style":692},[791],{"type":493,"value":792}," (",{"type":488,"tag":525,"props":794,"children":795},{"style":720},[796],{"type":493,"value":797},"s",{"type":488,"tag":525,"props":799,"children":800},{"style":692},[801],{"type":493,"value":802},")",{"type":488,"tag":525,"props":804,"children":805},{"style":692},[806],{"type":493,"value":807}," {\n",{"type":488,"tag":525,"props":809,"children":811},{"class":527,"line":810},6,[812,817,822,827,832,837,843,848,853,858,862,867,871,876,881,886,890,894,898],{"type":488,"tag":525,"props":813,"children":814},{"style":698},[815],{"type":493,"value":816},"  return",{"type":488,"tag":525,"props":818,"children":819},{"style":720},[820],{"type":493,"value":821}," s",{"type":488,"tag":525,"props":823,"children":824},{"style":692},[825],{"type":493,"value":826},".",{"type":488,"tag":525,"props":828,"children":829},{"style":774},[830],{"type":493,"value":831},"split",{"type":488,"tag":525,"props":833,"children":834},{"style":692},[835],{"type":493,"value":836},"(",{"type":488,"tag":525,"props":838,"children":840},{"style":839},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[841],{"type":493,"value":842},"\"",{"type":488,"tag":525,"props":844,"children":845},{"style":839},[846],{"type":493,"value":847}," \"",{"type":488,"tag":525,"props":849,"children":850},{"style":692},[851],{"type":493,"value":852},").",{"type":488,"tag":525,"props":854,"children":855},{"style":774},[856],{"type":493,"value":857},"filter",{"type":488,"tag":525,"props":859,"children":860},{"style":692},[861],{"type":493,"value":836},{"type":488,"tag":525,"props":863,"children":864},{"style":720},[865],{"type":493,"value":866},"Boolean",{"type":488,"tag":525,"props":868,"children":869},{"style":692},[870],{"type":493,"value":852},{"type":488,"tag":525,"props":872,"children":873},{"style":774},[874],{"type":493,"value":875},"reverse",{"type":488,"tag":525,"props":877,"children":878},{"style":692},[879],{"type":493,"value":880},"().",{"type":488,"tag":525,"props":882,"children":883},{"style":774},[884],{"type":493,"value":885},"join",{"type":488,"tag":525,"props":887,"children":888},{"style":692},[889],{"type":493,"value":836},{"type":488,"tag":525,"props":891,"children":892},{"style":839},[893],{"type":493,"value":842},{"type":488,"tag":525,"props":895,"children":896},{"style":839},[897],{"type":493,"value":847},{"type":488,"tag":525,"props":899,"children":900},{"style":692},[901],{"type":493,"value":902},");\n",{"type":488,"tag":525,"props":904,"children":906},{"class":527,"line":905},7,[907],{"type":488,"tag":525,"props":908,"children":909},{"style":692},[910],{"type":493,"value":911},"};\n",{"type":488,"tag":659,"props":913,"children":915},{"id":914},"双指针",[916],{"type":493,"value":914},{"type":488,"tag":515,"props":918,"children":920},{"className":666,"code":919,"language":668,"meta":481,"style":481},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[921],{"type":488,"tag":521,"props":922,"children":923},{"__ignoreMap":481},[924,931,962,989,996,1031,1039,1047,1056,1065,1074,1097,1144,1169,1205,1289,1368,1446,1472,1481,1527],{"type":488,"tag":525,"props":925,"children":926},{"class":527,"line":528},[927],{"type":488,"tag":525,"props":928,"children":929},{"style":678},[930],{"type":493,"value":681},{"type":488,"tag":525,"props":932,"children":933},{"class":527,"line":537},[934,938,942,946,950,954,958],{"type":488,"tag":525,"props":935,"children":936},{"style":678},[937],{"type":493,"value":689},{"type":488,"tag":525,"props":939,"children":940},{"style":692},[941],{"type":493,"value":695},{"type":488,"tag":525,"props":943,"children":944},{"style":698},[945],{"type":493,"value":701},{"type":488,"tag":525,"props":947,"children":948},{"style":692},[949],{"type":493,"value":706},{"type":488,"tag":525,"props":951,"children":952},{"style":709},[953],{"type":493,"value":712},{"type":488,"tag":525,"props":955,"children":956},{"style":692},[957],{"type":493,"value":717},{"type":488,"tag":525,"props":959,"children":960},{"style":720},[961],{"type":493,"value":723},{"type":488,"tag":525,"props":963,"children":964},{"class":527,"line":574},[965,969,973,977,981,985],{"type":488,"tag":525,"props":966,"children":967},{"style":678},[968],{"type":493,"value":689},{"type":488,"tag":525,"props":970,"children":971},{"style":692},[972],{"type":493,"value":695},{"type":488,"tag":525,"props":974,"children":975},{"style":698},[976],{"type":493,"value":739},{"type":488,"tag":525,"props":978,"children":979},{"style":692},[980],{"type":493,"value":706},{"type":488,"tag":525,"props":982,"children":983},{"style":709},[984],{"type":493,"value":712},{"type":488,"tag":525,"props":986,"children":987},{"style":692},[988],{"type":493,"value":752},{"type":488,"tag":525,"props":990,"children":991},{"class":527,"line":755},[992],{"type":488,"tag":525,"props":993,"children":994},{"style":678},[995],{"type":493,"value":761},{"type":488,"tag":525,"props":997,"children":998},{"class":527,"line":764},[999,1003,1007,1011,1015,1019,1023,1027],{"type":488,"tag":525,"props":1000,"children":1001},{"style":768},[1002],{"type":493,"value":771},{"type":488,"tag":525,"props":1004,"children":1005},{"style":774},[1006],{"type":493,"value":777},{"type":488,"tag":525,"props":1008,"children":1009},{"style":692},[1010],{"type":493,"value":782},{"type":488,"tag":525,"props":1012,"children":1013},{"style":768},[1014],{"type":493,"value":787},{"type":488,"tag":525,"props":1016,"children":1017},{"style":692},[1018],{"type":493,"value":792},{"type":488,"tag":525,"props":1020,"children":1021},{"style":720},[1022],{"type":493,"value":797},{"type":488,"tag":525,"props":1024,"children":1025},{"style":692},[1026],{"type":493,"value":802},{"type":488,"tag":525,"props":1028,"children":1029},{"style":692},[1030],{"type":493,"value":807},{"type":488,"tag":525,"props":1032,"children":1033},{"class":527,"line":810},[1034],{"type":488,"tag":525,"props":1035,"children":1036},{"style":678},[1037],{"type":493,"value":1038},"  // 倒序遍历字符串\n",{"type":488,"tag":525,"props":1040,"children":1041},{"class":527,"line":905},[1042],{"type":488,"tag":525,"props":1043,"children":1044},{"style":678},[1045],{"type":493,"value":1046},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":488,"tag":525,"props":1048,"children":1050},{"class":527,"line":1049},8,[1051],{"type":488,"tag":525,"props":1052,"children":1053},{"style":678},[1054],{"type":493,"value":1055},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":488,"tag":525,"props":1057,"children":1059},{"class":527,"line":1058},9,[1060],{"type":488,"tag":525,"props":1061,"children":1062},{"style":678},[1063],{"type":493,"value":1064},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":488,"tag":525,"props":1066,"children":1068},{"class":527,"line":1067},10,[1069],{"type":488,"tag":525,"props":1070,"children":1071},{"style":678},[1072],{"type":493,"value":1073},"  // 4. 执行 j = i\n",{"type":488,"tag":525,"props":1075,"children":1077},{"class":527,"line":1076},11,[1078,1083,1088,1092],{"type":488,"tag":525,"props":1079,"children":1080},{"style":768},[1081],{"type":493,"value":1082},"  let",{"type":488,"tag":525,"props":1084,"children":1085},{"style":720},[1086],{"type":493,"value":1087}," res",{"type":488,"tag":525,"props":1089,"children":1090},{"style":692},[1091],{"type":493,"value":782},{"type":488,"tag":525,"props":1093,"children":1094},{"style":692},[1095],{"type":493,"value":1096}," [];\n",{"type":488,"tag":525,"props":1098,"children":1100},{"class":527,"line":1099},12,[1101,1105,1110,1114,1118,1122,1128,1133,1139],{"type":488,"tag":525,"props":1102,"children":1103},{"style":768},[1104],{"type":493,"value":1082},{"type":488,"tag":525,"props":1106,"children":1107},{"style":720},[1108],{"type":493,"value":1109}," i",{"type":488,"tag":525,"props":1111,"children":1112},{"style":692},[1113],{"type":493,"value":782},{"type":488,"tag":525,"props":1115,"children":1116},{"style":720},[1117],{"type":493,"value":821},{"type":488,"tag":525,"props":1119,"children":1120},{"style":692},[1121],{"type":493,"value":826},{"type":488,"tag":525,"props":1123,"children":1125},{"style":1124},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1126],{"type":493,"value":1127},"length",{"type":488,"tag":525,"props":1129,"children":1130},{"style":768},[1131],{"type":493,"value":1132}," -",{"type":488,"tag":525,"props":1134,"children":1136},{"style":1135},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1137],{"type":493,"value":1138}," 1",{"type":488,"tag":525,"props":1140,"children":1141},{"style":692},[1142],{"type":493,"value":1143},";\n",{"type":488,"tag":525,"props":1145,"children":1147},{"class":527,"line":1146},13,[1148,1152,1157,1161,1165],{"type":488,"tag":525,"props":1149,"children":1150},{"style":768},[1151],{"type":493,"value":1082},{"type":488,"tag":525,"props":1153,"children":1154},{"style":720},[1155],{"type":493,"value":1156}," j",{"type":488,"tag":525,"props":1158,"children":1159},{"style":692},[1160],{"type":493,"value":782},{"type":488,"tag":525,"props":1162,"children":1163},{"style":720},[1164],{"type":493,"value":1109},{"type":488,"tag":525,"props":1166,"children":1167},{"style":692},[1168],{"type":493,"value":1143},{"type":488,"tag":525,"props":1170,"children":1172},{"class":527,"line":1171},14,[1173,1178,1182,1187,1192,1197,1201],{"type":488,"tag":525,"props":1174,"children":1175},{"style":698},[1176],{"type":493,"value":1177},"  while",{"type":488,"tag":525,"props":1179,"children":1180},{"style":692},[1181],{"type":493,"value":792},{"type":488,"tag":525,"props":1183,"children":1184},{"style":720},[1185],{"type":493,"value":1186},"i",{"type":488,"tag":525,"props":1188,"children":1189},{"style":692},[1190],{"type":493,"value":1191}," >=",{"type":488,"tag":525,"props":1193,"children":1194},{"style":1135},[1195],{"type":493,"value":1196}," 0",{"type":488,"tag":525,"props":1198,"children":1199},{"style":692},[1200],{"type":493,"value":802},{"type":488,"tag":525,"props":1202,"children":1203},{"style":692},[1204],{"type":493,"value":807},{"type":488,"tag":525,"props":1206,"children":1208},{"class":527,"line":1207},15,[1209,1214,1218,1222,1226,1230,1235,1239,1244,1248,1253,1258,1262,1266,1270,1274,1279,1284],{"type":488,"tag":525,"props":1210,"children":1211},{"style":698},[1212],{"type":493,"value":1213},"    while",{"type":488,"tag":525,"props":1215,"children":1216},{"style":692},[1217],{"type":493,"value":792},{"type":488,"tag":525,"props":1219,"children":1220},{"style":720},[1221],{"type":493,"value":1186},{"type":488,"tag":525,"props":1223,"children":1224},{"style":692},[1225],{"type":493,"value":1191},{"type":488,"tag":525,"props":1227,"children":1228},{"style":1135},[1229],{"type":493,"value":1196},{"type":488,"tag":525,"props":1231,"children":1232},{"style":768},[1233],{"type":493,"value":1234}," &&",{"type":488,"tag":525,"props":1236,"children":1237},{"style":720},[1238],{"type":493,"value":821},{"type":488,"tag":525,"props":1240,"children":1241},{"style":692},[1242],{"type":493,"value":1243},"[",{"type":488,"tag":525,"props":1245,"children":1246},{"style":720},[1247],{"type":493,"value":1186},{"type":488,"tag":525,"props":1249,"children":1250},{"style":692},[1251],{"type":493,"value":1252},"]",{"type":488,"tag":525,"props":1254,"children":1255},{"style":768},[1256],{"type":493,"value":1257}," !==",{"type":488,"tag":525,"props":1259,"children":1260},{"style":839},[1261],{"type":493,"value":847},{"type":488,"tag":525,"props":1263,"children":1264},{"style":839},[1265],{"type":493,"value":847},{"type":488,"tag":525,"props":1267,"children":1268},{"style":692},[1269],{"type":493,"value":802},{"type":488,"tag":525,"props":1271,"children":1272},{"style":720},[1273],{"type":493,"value":1109},{"type":488,"tag":525,"props":1275,"children":1276},{"style":768},[1277],{"type":493,"value":1278},"--",{"type":488,"tag":525,"props":1280,"children":1281},{"style":692},[1282],{"type":493,"value":1283},";",{"type":488,"tag":525,"props":1285,"children":1286},{"style":678},[1287],{"type":493,"value":1288}," // 搜索首个空格\n",{"type":488,"tag":525,"props":1290,"children":1292},{"class":527,"line":1291},16,[1293,1298,1302,1307,1311,1315,1319,1324,1328,1332,1337,1341,1346,1350,1354,1358,1363],{"type":488,"tag":525,"props":1294,"children":1295},{"style":720},[1296],{"type":493,"value":1297},"    res",{"type":488,"tag":525,"props":1299,"children":1300},{"style":692},[1301],{"type":493,"value":826},{"type":488,"tag":525,"props":1303,"children":1304},{"style":774},[1305],{"type":493,"value":1306},"push",{"type":488,"tag":525,"props":1308,"children":1309},{"style":692},[1310],{"type":493,"value":836},{"type":488,"tag":525,"props":1312,"children":1313},{"style":720},[1314],{"type":493,"value":797},{"type":488,"tag":525,"props":1316,"children":1317},{"style":692},[1318],{"type":493,"value":826},{"type":488,"tag":525,"props":1320,"children":1321},{"style":774},[1322],{"type":493,"value":1323},"substring",{"type":488,"tag":525,"props":1325,"children":1326},{"style":692},[1327],{"type":493,"value":836},{"type":488,"tag":525,"props":1329,"children":1330},{"style":720},[1331],{"type":493,"value":1186},{"type":488,"tag":525,"props":1333,"children":1334},{"style":768},[1335],{"type":493,"value":1336}," +",{"type":488,"tag":525,"props":1338,"children":1339},{"style":1135},[1340],{"type":493,"value":1138},{"type":488,"tag":525,"props":1342,"children":1343},{"style":692},[1344],{"type":493,"value":1345},",",{"type":488,"tag":525,"props":1347,"children":1348},{"style":720},[1349],{"type":493,"value":1156},{"type":488,"tag":525,"props":1351,"children":1352},{"style":768},[1353],{"type":493,"value":1336},{"type":488,"tag":525,"props":1355,"children":1356},{"style":1135},[1357],{"type":493,"value":1138},{"type":488,"tag":525,"props":1359,"children":1360},{"style":692},[1361],{"type":493,"value":1362},"));",{"type":488,"tag":525,"props":1364,"children":1365},{"style":678},[1366],{"type":493,"value":1367}," // 添加单词\n",{"type":488,"tag":525,"props":1369,"children":1371},{"class":527,"line":1370},17,[1372,1376,1380,1384,1388,1392,1396,1400,1404,1408,1412,1417,1421,1425,1429,1433,1437,1441],{"type":488,"tag":525,"props":1373,"children":1374},{"style":698},[1375],{"type":493,"value":1213},{"type":488,"tag":525,"props":1377,"children":1378},{"style":692},[1379],{"type":493,"value":792},{"type":488,"tag":525,"props":1381,"children":1382},{"style":720},[1383],{"type":493,"value":1186},{"type":488,"tag":525,"props":1385,"children":1386},{"style":692},[1387],{"type":493,"value":1191},{"type":488,"tag":525,"props":1389,"children":1390},{"style":1135},[1391],{"type":493,"value":1196},{"type":488,"tag":525,"props":1393,"children":1394},{"style":768},[1395],{"type":493,"value":1234},{"type":488,"tag":525,"props":1397,"children":1398},{"style":720},[1399],{"type":493,"value":821},{"type":488,"tag":525,"props":1401,"children":1402},{"style":692},[1403],{"type":493,"value":1243},{"type":488,"tag":525,"props":1405,"children":1406},{"style":720},[1407],{"type":493,"value":1186},{"type":488,"tag":525,"props":1409,"children":1410},{"style":692},[1411],{"type":493,"value":1252},{"type":488,"tag":525,"props":1413,"children":1414},{"style":768},[1415],{"type":493,"value":1416}," ===",{"type":488,"tag":525,"props":1418,"children":1419},{"style":839},[1420],{"type":493,"value":847},{"type":488,"tag":525,"props":1422,"children":1423},{"style":839},[1424],{"type":493,"value":847},{"type":488,"tag":525,"props":1426,"children":1427},{"style":692},[1428],{"type":493,"value":802},{"type":488,"tag":525,"props":1430,"children":1431},{"style":720},[1432],{"type":493,"value":1109},{"type":488,"tag":525,"props":1434,"children":1435},{"style":768},[1436],{"type":493,"value":1278},{"type":488,"tag":525,"props":1438,"children":1439},{"style":692},[1440],{"type":493,"value":1283},{"type":488,"tag":525,"props":1442,"children":1443},{"style":678},[1444],{"type":493,"value":1445}," // 跳过单词间空格\n",{"type":488,"tag":525,"props":1447,"children":1449},{"class":527,"line":1448},18,[1450,1455,1459,1463,1467],{"type":488,"tag":525,"props":1451,"children":1452},{"style":720},[1453],{"type":493,"value":1454},"    j",{"type":488,"tag":525,"props":1456,"children":1457},{"style":692},[1458],{"type":493,"value":782},{"type":488,"tag":525,"props":1460,"children":1461},{"style":720},[1462],{"type":493,"value":1109},{"type":488,"tag":525,"props":1464,"children":1465},{"style":692},[1466],{"type":493,"value":1283},{"type":488,"tag":525,"props":1468,"children":1469},{"style":678},[1470],{"type":493,"value":1471}," // 指针移动，指向下个单词的尾字符\n",{"type":488,"tag":525,"props":1473,"children":1475},{"class":527,"line":1474},19,[1476],{"type":488,"tag":525,"props":1477,"children":1478},{"style":692},[1479],{"type":493,"value":1480},"  }\n",{"type":488,"tag":525,"props":1482,"children":1484},{"class":527,"line":1483},20,[1485,1489,1493,1497,1501,1505,1509,1513,1517,1522],{"type":488,"tag":525,"props":1486,"children":1487},{"style":698},[1488],{"type":493,"value":816},{"type":488,"tag":525,"props":1490,"children":1491},{"style":720},[1492],{"type":493,"value":1087},{"type":488,"tag":525,"props":1494,"children":1495},{"style":692},[1496],{"type":493,"value":826},{"type":488,"tag":525,"props":1498,"children":1499},{"style":774},[1500],{"type":493,"value":885},{"type":488,"tag":525,"props":1502,"children":1503},{"style":692},[1504],{"type":493,"value":836},{"type":488,"tag":525,"props":1506,"children":1507},{"style":839},[1508],{"type":493,"value":842},{"type":488,"tag":525,"props":1510,"children":1511},{"style":839},[1512],{"type":493,"value":847},{"type":488,"tag":525,"props":1514,"children":1515},{"style":692},[1516],{"type":493,"value":852},{"type":488,"tag":525,"props":1518,"children":1519},{"style":774},[1520],{"type":493,"value":1521},"trim",{"type":488,"tag":525,"props":1523,"children":1524},{"style":692},[1525],{"type":493,"value":1526},"();\n",{"type":488,"tag":525,"props":1528,"children":1530},{"class":527,"line":1529},21,[1531],{"type":488,"tag":525,"props":1532,"children":1533},{"style":692},[1534],{"type":493,"value":911},{"type":488,"tag":1536,"props":1537,"children":1538},"style",{},[1539],{"type":493,"value":1540},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":764,"depth":764,"links":1542},[1543,1544],{"id":650,"depth":537,"text":650},{"id":655,"depth":537,"text":655,"children":1545},[1546,1547],{"id":661,"depth":574,"text":661},{"id":914,"depth":574,"text":914},"markdown","content:1.algorithm:3.leetcode:3.major:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/3.major/151.reverse-words-in-a-string.md","md",[1554,1556],{"_path":177,"title":176,"description":1555},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":183,"title":182,"description":1557},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1714046226154]