[{"data":1,"prerenderedAt":1583},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-words-in-a-string":503,"/algorithm/leetcode/major/reverse-words-in-a-string-surround":1578},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":180,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":179,"description":507,"url":508,"body":509,"_type":1573,"_id":1574,"_source":1575,"_file":1576,"_extension":1577},"major",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":510,"children":511,"toc":1566},"root",[512,519,524,529,534,539,569,574,606,611,642,647,667,672,678,683,689,937,942,1560],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522],{"type":518,"value":523},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":513,"tag":514,"props":525,"children":526},{},[527],{"type":518,"value":528},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":513,"tag":514,"props":530,"children":531},{},[532],{"type":518,"value":533},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":513,"tag":514,"props":535,"children":536},{},[537],{"type":518,"value":538},"示例 1：",{"type":513,"tag":540,"props":541,"children":544},"pre",{"className":542,"code":543,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[545],{"type":513,"tag":546,"props":547,"children":548},"code",{"__ignoreMap":506},[549,560],{"type":513,"tag":550,"props":551,"children":554},"span",{"class":552,"line":553},"line",1,[555],{"type":513,"tag":550,"props":556,"children":557},{},[558],{"type":518,"value":559},"输入：s = \"the sky is blue\"\n",{"type":513,"tag":550,"props":561,"children":563},{"class":552,"line":562},2,[564],{"type":513,"tag":550,"props":565,"children":566},{},[567],{"type":518,"value":568},"输出：\"blue is sky the\"\n",{"type":513,"tag":514,"props":570,"children":571},{},[572],{"type":518,"value":573},"示例 2：",{"type":513,"tag":540,"props":575,"children":577},{"className":542,"code":576,"language":518,"meta":506,"style":506},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[578],{"type":513,"tag":546,"props":579,"children":580},{"__ignoreMap":506},[581,589,597],{"type":513,"tag":550,"props":582,"children":583},{"class":552,"line":553},[584],{"type":513,"tag":550,"props":585,"children":586},{},[587],{"type":518,"value":588},"输入：s = \" hello world \"\n",{"type":513,"tag":550,"props":590,"children":591},{"class":552,"line":562},[592],{"type":513,"tag":550,"props":593,"children":594},{},[595],{"type":518,"value":596},"输出：\"world hello\"\n",{"type":513,"tag":550,"props":598,"children":600},{"class":552,"line":599},3,[601],{"type":513,"tag":550,"props":602,"children":603},{},[604],{"type":518,"value":605},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":513,"tag":514,"props":607,"children":608},{},[609],{"type":518,"value":610},"示例 3：",{"type":513,"tag":540,"props":612,"children":614},{"className":542,"code":613,"language":518,"meta":506,"style":506},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[615],{"type":513,"tag":546,"props":616,"children":617},{"__ignoreMap":506},[618,626,634],{"type":513,"tag":550,"props":619,"children":620},{"class":552,"line":553},[621],{"type":513,"tag":550,"props":622,"children":623},{},[624],{"type":518,"value":625},"输入：s = \"a good example\"\n",{"type":513,"tag":550,"props":627,"children":628},{"class":552,"line":562},[629],{"type":513,"tag":550,"props":630,"children":631},{},[632],{"type":518,"value":633},"输出：\"example good a\"\n",{"type":513,"tag":550,"props":635,"children":636},{"class":552,"line":599},[637],{"type":513,"tag":550,"props":638,"children":639},{},[640],{"type":518,"value":641},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":513,"tag":514,"props":643,"children":644},{},[645],{"type":518,"value":646},"提示：",{"type":513,"tag":648,"props":649,"children":650},"ul",{},[651,657,662],{"type":513,"tag":652,"props":653,"children":654},"li",{},[655],{"type":518,"value":656},"1 \u003C= s.length \u003C= 10^4",{"type":513,"tag":652,"props":658,"children":659},{},[660],{"type":518,"value":661},"s 包含英文大小写字母、数字和空格 ' '",{"type":513,"tag":652,"props":663,"children":664},{},[665],{"type":518,"value":666},"s 中 至少存在一个 单词",{"type":513,"tag":514,"props":668,"children":669},{},[670],{"type":518,"value":671},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":513,"tag":673,"props":674,"children":676},"h2",{"id":675},"解题思路",[677],{"type":518,"value":675},{"type":513,"tag":673,"props":679,"children":681},{"id":680},"实现",[682],{"type":518,"value":680},{"type":513,"tag":684,"props":685,"children":687},"h3",{"id":686},"语言特性",[688],{"type":518,"value":686},{"type":513,"tag":540,"props":690,"children":694},{"className":691,"code":692,"language":693,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[695],{"type":513,"tag":546,"props":696,"children":697},{"__ignoreMap":506},[698,707,749,778,787,833,928],{"type":513,"tag":550,"props":699,"children":700},{"class":552,"line":553},[701],{"type":513,"tag":550,"props":702,"children":704},{"style":703},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[705],{"type":518,"value":706},"/**\n",{"type":513,"tag":550,"props":708,"children":709},{"class":552,"line":562},[710,715,721,727,732,738,743],{"type":513,"tag":550,"props":711,"children":712},{"style":703},[713],{"type":518,"value":714}," * ",{"type":513,"tag":550,"props":716,"children":718},{"style":717},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[719],{"type":518,"value":720},"@",{"type":513,"tag":550,"props":722,"children":724},{"style":723},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[725],{"type":518,"value":726},"param",{"type":513,"tag":550,"props":728,"children":729},{"style":717},[730],{"type":518,"value":731}," {",{"type":513,"tag":550,"props":733,"children":735},{"style":734},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[736],{"type":518,"value":737},"string",{"type":513,"tag":550,"props":739,"children":740},{"style":717},[741],{"type":518,"value":742},"}",{"type":513,"tag":550,"props":744,"children":746},{"style":745},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[747],{"type":518,"value":748}," s\n",{"type":513,"tag":550,"props":750,"children":751},{"class":552,"line":599},[752,756,760,765,769,773],{"type":513,"tag":550,"props":753,"children":754},{"style":703},[755],{"type":518,"value":714},{"type":513,"tag":550,"props":757,"children":758},{"style":717},[759],{"type":518,"value":720},{"type":513,"tag":550,"props":761,"children":762},{"style":723},[763],{"type":518,"value":764},"return",{"type":513,"tag":550,"props":766,"children":767},{"style":717},[768],{"type":518,"value":731},{"type":513,"tag":550,"props":770,"children":771},{"style":734},[772],{"type":518,"value":737},{"type":513,"tag":550,"props":774,"children":775},{"style":717},[776],{"type":518,"value":777},"}\n",{"type":513,"tag":550,"props":779,"children":781},{"class":552,"line":780},4,[782],{"type":513,"tag":550,"props":783,"children":784},{"style":703},[785],{"type":518,"value":786}," */\n",{"type":513,"tag":550,"props":788,"children":790},{"class":552,"line":789},5,[791,797,803,808,813,818,823,828],{"type":513,"tag":550,"props":792,"children":794},{"style":793},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[795],{"type":518,"value":796},"var",{"type":513,"tag":550,"props":798,"children":800},{"style":799},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[801],{"type":518,"value":802}," reverseWords",{"type":513,"tag":550,"props":804,"children":805},{"style":717},[806],{"type":518,"value":807}," =",{"type":513,"tag":550,"props":809,"children":810},{"style":793},[811],{"type":518,"value":812}," function",{"type":513,"tag":550,"props":814,"children":815},{"style":717},[816],{"type":518,"value":817}," (",{"type":513,"tag":550,"props":819,"children":820},{"style":745},[821],{"type":518,"value":822},"s",{"type":513,"tag":550,"props":824,"children":825},{"style":717},[826],{"type":518,"value":827},")",{"type":513,"tag":550,"props":829,"children":830},{"style":717},[831],{"type":518,"value":832}," {\n",{"type":513,"tag":550,"props":834,"children":836},{"class":552,"line":835},6,[837,842,847,852,857,862,868,873,878,883,887,892,896,901,906,911,915,919,923],{"type":513,"tag":550,"props":838,"children":839},{"style":723},[840],{"type":518,"value":841},"  return",{"type":513,"tag":550,"props":843,"children":844},{"style":745},[845],{"type":518,"value":846}," s",{"type":513,"tag":550,"props":848,"children":849},{"style":717},[850],{"type":518,"value":851},".",{"type":513,"tag":550,"props":853,"children":854},{"style":799},[855],{"type":518,"value":856},"split",{"type":513,"tag":550,"props":858,"children":859},{"style":717},[860],{"type":518,"value":861},"(",{"type":513,"tag":550,"props":863,"children":865},{"style":864},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[866],{"type":518,"value":867},"\"",{"type":513,"tag":550,"props":869,"children":870},{"style":864},[871],{"type":518,"value":872}," \"",{"type":513,"tag":550,"props":874,"children":875},{"style":717},[876],{"type":518,"value":877},").",{"type":513,"tag":550,"props":879,"children":880},{"style":799},[881],{"type":518,"value":882},"filter",{"type":513,"tag":550,"props":884,"children":885},{"style":717},[886],{"type":518,"value":861},{"type":513,"tag":550,"props":888,"children":889},{"style":745},[890],{"type":518,"value":891},"Boolean",{"type":513,"tag":550,"props":893,"children":894},{"style":717},[895],{"type":518,"value":877},{"type":513,"tag":550,"props":897,"children":898},{"style":799},[899],{"type":518,"value":900},"reverse",{"type":513,"tag":550,"props":902,"children":903},{"style":717},[904],{"type":518,"value":905},"().",{"type":513,"tag":550,"props":907,"children":908},{"style":799},[909],{"type":518,"value":910},"join",{"type":513,"tag":550,"props":912,"children":913},{"style":717},[914],{"type":518,"value":861},{"type":513,"tag":550,"props":916,"children":917},{"style":864},[918],{"type":518,"value":867},{"type":513,"tag":550,"props":920,"children":921},{"style":864},[922],{"type":518,"value":872},{"type":513,"tag":550,"props":924,"children":925},{"style":717},[926],{"type":518,"value":927},");\n",{"type":513,"tag":550,"props":929,"children":931},{"class":552,"line":930},7,[932],{"type":513,"tag":550,"props":933,"children":934},{"style":717},[935],{"type":518,"value":936},"};\n",{"type":513,"tag":684,"props":938,"children":940},{"id":939},"双指针",[941],{"type":518,"value":939},{"type":513,"tag":540,"props":943,"children":945},{"className":691,"code":944,"language":693,"meta":506,"style":506},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[946],{"type":513,"tag":546,"props":947,"children":948},{"__ignoreMap":506},[949,956,987,1014,1021,1056,1064,1072,1081,1090,1099,1122,1169,1194,1230,1314,1393,1471,1497,1506,1552],{"type":513,"tag":550,"props":950,"children":951},{"class":552,"line":553},[952],{"type":513,"tag":550,"props":953,"children":954},{"style":703},[955],{"type":518,"value":706},{"type":513,"tag":550,"props":957,"children":958},{"class":552,"line":562},[959,963,967,971,975,979,983],{"type":513,"tag":550,"props":960,"children":961},{"style":703},[962],{"type":518,"value":714},{"type":513,"tag":550,"props":964,"children":965},{"style":717},[966],{"type":518,"value":720},{"type":513,"tag":550,"props":968,"children":969},{"style":723},[970],{"type":518,"value":726},{"type":513,"tag":550,"props":972,"children":973},{"style":717},[974],{"type":518,"value":731},{"type":513,"tag":550,"props":976,"children":977},{"style":734},[978],{"type":518,"value":737},{"type":513,"tag":550,"props":980,"children":981},{"style":717},[982],{"type":518,"value":742},{"type":513,"tag":550,"props":984,"children":985},{"style":745},[986],{"type":518,"value":748},{"type":513,"tag":550,"props":988,"children":989},{"class":552,"line":599},[990,994,998,1002,1006,1010],{"type":513,"tag":550,"props":991,"children":992},{"style":703},[993],{"type":518,"value":714},{"type":513,"tag":550,"props":995,"children":996},{"style":717},[997],{"type":518,"value":720},{"type":513,"tag":550,"props":999,"children":1000},{"style":723},[1001],{"type":518,"value":764},{"type":513,"tag":550,"props":1003,"children":1004},{"style":717},[1005],{"type":518,"value":731},{"type":513,"tag":550,"props":1007,"children":1008},{"style":734},[1009],{"type":518,"value":737},{"type":513,"tag":550,"props":1011,"children":1012},{"style":717},[1013],{"type":518,"value":777},{"type":513,"tag":550,"props":1015,"children":1016},{"class":552,"line":780},[1017],{"type":513,"tag":550,"props":1018,"children":1019},{"style":703},[1020],{"type":518,"value":786},{"type":513,"tag":550,"props":1022,"children":1023},{"class":552,"line":789},[1024,1028,1032,1036,1040,1044,1048,1052],{"type":513,"tag":550,"props":1025,"children":1026},{"style":793},[1027],{"type":518,"value":796},{"type":513,"tag":550,"props":1029,"children":1030},{"style":799},[1031],{"type":518,"value":802},{"type":513,"tag":550,"props":1033,"children":1034},{"style":717},[1035],{"type":518,"value":807},{"type":513,"tag":550,"props":1037,"children":1038},{"style":793},[1039],{"type":518,"value":812},{"type":513,"tag":550,"props":1041,"children":1042},{"style":717},[1043],{"type":518,"value":817},{"type":513,"tag":550,"props":1045,"children":1046},{"style":745},[1047],{"type":518,"value":822},{"type":513,"tag":550,"props":1049,"children":1050},{"style":717},[1051],{"type":518,"value":827},{"type":513,"tag":550,"props":1053,"children":1054},{"style":717},[1055],{"type":518,"value":832},{"type":513,"tag":550,"props":1057,"children":1058},{"class":552,"line":835},[1059],{"type":513,"tag":550,"props":1060,"children":1061},{"style":703},[1062],{"type":518,"value":1063},"  // 倒序遍历字符串\n",{"type":513,"tag":550,"props":1065,"children":1066},{"class":552,"line":930},[1067],{"type":513,"tag":550,"props":1068,"children":1069},{"style":703},[1070],{"type":518,"value":1071},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":513,"tag":550,"props":1073,"children":1075},{"class":552,"line":1074},8,[1076],{"type":513,"tag":550,"props":1077,"children":1078},{"style":703},[1079],{"type":518,"value":1080},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":513,"tag":550,"props":1082,"children":1084},{"class":552,"line":1083},9,[1085],{"type":513,"tag":550,"props":1086,"children":1087},{"style":703},[1088],{"type":518,"value":1089},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":513,"tag":550,"props":1091,"children":1093},{"class":552,"line":1092},10,[1094],{"type":513,"tag":550,"props":1095,"children":1096},{"style":703},[1097],{"type":518,"value":1098},"  // 4. 执行 j = i\n",{"type":513,"tag":550,"props":1100,"children":1102},{"class":552,"line":1101},11,[1103,1108,1113,1117],{"type":513,"tag":550,"props":1104,"children":1105},{"style":793},[1106],{"type":518,"value":1107},"  let",{"type":513,"tag":550,"props":1109,"children":1110},{"style":745},[1111],{"type":518,"value":1112}," res",{"type":513,"tag":550,"props":1114,"children":1115},{"style":717},[1116],{"type":518,"value":807},{"type":513,"tag":550,"props":1118,"children":1119},{"style":717},[1120],{"type":518,"value":1121}," [];\n",{"type":513,"tag":550,"props":1123,"children":1125},{"class":552,"line":1124},12,[1126,1130,1135,1139,1143,1147,1153,1158,1164],{"type":513,"tag":550,"props":1127,"children":1128},{"style":793},[1129],{"type":518,"value":1107},{"type":513,"tag":550,"props":1131,"children":1132},{"style":745},[1133],{"type":518,"value":1134}," i",{"type":513,"tag":550,"props":1136,"children":1137},{"style":717},[1138],{"type":518,"value":807},{"type":513,"tag":550,"props":1140,"children":1141},{"style":745},[1142],{"type":518,"value":846},{"type":513,"tag":550,"props":1144,"children":1145},{"style":717},[1146],{"type":518,"value":851},{"type":513,"tag":550,"props":1148,"children":1150},{"style":1149},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1151],{"type":518,"value":1152},"length",{"type":513,"tag":550,"props":1154,"children":1155},{"style":793},[1156],{"type":518,"value":1157}," -",{"type":513,"tag":550,"props":1159,"children":1161},{"style":1160},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1162],{"type":518,"value":1163}," 1",{"type":513,"tag":550,"props":1165,"children":1166},{"style":717},[1167],{"type":518,"value":1168},";\n",{"type":513,"tag":550,"props":1170,"children":1172},{"class":552,"line":1171},13,[1173,1177,1182,1186,1190],{"type":513,"tag":550,"props":1174,"children":1175},{"style":793},[1176],{"type":518,"value":1107},{"type":513,"tag":550,"props":1178,"children":1179},{"style":745},[1180],{"type":518,"value":1181}," j",{"type":513,"tag":550,"props":1183,"children":1184},{"style":717},[1185],{"type":518,"value":807},{"type":513,"tag":550,"props":1187,"children":1188},{"style":745},[1189],{"type":518,"value":1134},{"type":513,"tag":550,"props":1191,"children":1192},{"style":717},[1193],{"type":518,"value":1168},{"type":513,"tag":550,"props":1195,"children":1197},{"class":552,"line":1196},14,[1198,1203,1207,1212,1217,1222,1226],{"type":513,"tag":550,"props":1199,"children":1200},{"style":723},[1201],{"type":518,"value":1202},"  while",{"type":513,"tag":550,"props":1204,"children":1205},{"style":717},[1206],{"type":518,"value":817},{"type":513,"tag":550,"props":1208,"children":1209},{"style":745},[1210],{"type":518,"value":1211},"i",{"type":513,"tag":550,"props":1213,"children":1214},{"style":717},[1215],{"type":518,"value":1216}," >=",{"type":513,"tag":550,"props":1218,"children":1219},{"style":1160},[1220],{"type":518,"value":1221}," 0",{"type":513,"tag":550,"props":1223,"children":1224},{"style":717},[1225],{"type":518,"value":827},{"type":513,"tag":550,"props":1227,"children":1228},{"style":717},[1229],{"type":518,"value":832},{"type":513,"tag":550,"props":1231,"children":1233},{"class":552,"line":1232},15,[1234,1239,1243,1247,1251,1255,1260,1264,1269,1273,1278,1283,1287,1291,1295,1299,1304,1309],{"type":513,"tag":550,"props":1235,"children":1236},{"style":723},[1237],{"type":518,"value":1238},"    while",{"type":513,"tag":550,"props":1240,"children":1241},{"style":717},[1242],{"type":518,"value":817},{"type":513,"tag":550,"props":1244,"children":1245},{"style":745},[1246],{"type":518,"value":1211},{"type":513,"tag":550,"props":1248,"children":1249},{"style":717},[1250],{"type":518,"value":1216},{"type":513,"tag":550,"props":1252,"children":1253},{"style":1160},[1254],{"type":518,"value":1221},{"type":513,"tag":550,"props":1256,"children":1257},{"style":793},[1258],{"type":518,"value":1259}," &&",{"type":513,"tag":550,"props":1261,"children":1262},{"style":745},[1263],{"type":518,"value":846},{"type":513,"tag":550,"props":1265,"children":1266},{"style":717},[1267],{"type":518,"value":1268},"[",{"type":513,"tag":550,"props":1270,"children":1271},{"style":745},[1272],{"type":518,"value":1211},{"type":513,"tag":550,"props":1274,"children":1275},{"style":717},[1276],{"type":518,"value":1277},"]",{"type":513,"tag":550,"props":1279,"children":1280},{"style":793},[1281],{"type":518,"value":1282}," !==",{"type":513,"tag":550,"props":1284,"children":1285},{"style":864},[1286],{"type":518,"value":872},{"type":513,"tag":550,"props":1288,"children":1289},{"style":864},[1290],{"type":518,"value":872},{"type":513,"tag":550,"props":1292,"children":1293},{"style":717},[1294],{"type":518,"value":827},{"type":513,"tag":550,"props":1296,"children":1297},{"style":745},[1298],{"type":518,"value":1134},{"type":513,"tag":550,"props":1300,"children":1301},{"style":793},[1302],{"type":518,"value":1303},"--",{"type":513,"tag":550,"props":1305,"children":1306},{"style":717},[1307],{"type":518,"value":1308},";",{"type":513,"tag":550,"props":1310,"children":1311},{"style":703},[1312],{"type":518,"value":1313}," // 搜索首个空格\n",{"type":513,"tag":550,"props":1315,"children":1317},{"class":552,"line":1316},16,[1318,1323,1327,1332,1336,1340,1344,1349,1353,1357,1362,1366,1371,1375,1379,1383,1388],{"type":513,"tag":550,"props":1319,"children":1320},{"style":745},[1321],{"type":518,"value":1322},"    res",{"type":513,"tag":550,"props":1324,"children":1325},{"style":717},[1326],{"type":518,"value":851},{"type":513,"tag":550,"props":1328,"children":1329},{"style":799},[1330],{"type":518,"value":1331},"push",{"type":513,"tag":550,"props":1333,"children":1334},{"style":717},[1335],{"type":518,"value":861},{"type":513,"tag":550,"props":1337,"children":1338},{"style":745},[1339],{"type":518,"value":822},{"type":513,"tag":550,"props":1341,"children":1342},{"style":717},[1343],{"type":518,"value":851},{"type":513,"tag":550,"props":1345,"children":1346},{"style":799},[1347],{"type":518,"value":1348},"substring",{"type":513,"tag":550,"props":1350,"children":1351},{"style":717},[1352],{"type":518,"value":861},{"type":513,"tag":550,"props":1354,"children":1355},{"style":745},[1356],{"type":518,"value":1211},{"type":513,"tag":550,"props":1358,"children":1359},{"style":793},[1360],{"type":518,"value":1361}," +",{"type":513,"tag":550,"props":1363,"children":1364},{"style":1160},[1365],{"type":518,"value":1163},{"type":513,"tag":550,"props":1367,"children":1368},{"style":717},[1369],{"type":518,"value":1370},",",{"type":513,"tag":550,"props":1372,"children":1373},{"style":745},[1374],{"type":518,"value":1181},{"type":513,"tag":550,"props":1376,"children":1377},{"style":793},[1378],{"type":518,"value":1361},{"type":513,"tag":550,"props":1380,"children":1381},{"style":1160},[1382],{"type":518,"value":1163},{"type":513,"tag":550,"props":1384,"children":1385},{"style":717},[1386],{"type":518,"value":1387},"));",{"type":513,"tag":550,"props":1389,"children":1390},{"style":703},[1391],{"type":518,"value":1392}," // 添加单词\n",{"type":513,"tag":550,"props":1394,"children":1396},{"class":552,"line":1395},17,[1397,1401,1405,1409,1413,1417,1421,1425,1429,1433,1437,1442,1446,1450,1454,1458,1462,1466],{"type":513,"tag":550,"props":1398,"children":1399},{"style":723},[1400],{"type":518,"value":1238},{"type":513,"tag":550,"props":1402,"children":1403},{"style":717},[1404],{"type":518,"value":817},{"type":513,"tag":550,"props":1406,"children":1407},{"style":745},[1408],{"type":518,"value":1211},{"type":513,"tag":550,"props":1410,"children":1411},{"style":717},[1412],{"type":518,"value":1216},{"type":513,"tag":550,"props":1414,"children":1415},{"style":1160},[1416],{"type":518,"value":1221},{"type":513,"tag":550,"props":1418,"children":1419},{"style":793},[1420],{"type":518,"value":1259},{"type":513,"tag":550,"props":1422,"children":1423},{"style":745},[1424],{"type":518,"value":846},{"type":513,"tag":550,"props":1426,"children":1427},{"style":717},[1428],{"type":518,"value":1268},{"type":513,"tag":550,"props":1430,"children":1431},{"style":745},[1432],{"type":518,"value":1211},{"type":513,"tag":550,"props":1434,"children":1435},{"style":717},[1436],{"type":518,"value":1277},{"type":513,"tag":550,"props":1438,"children":1439},{"style":793},[1440],{"type":518,"value":1441}," ===",{"type":513,"tag":550,"props":1443,"children":1444},{"style":864},[1445],{"type":518,"value":872},{"type":513,"tag":550,"props":1447,"children":1448},{"style":864},[1449],{"type":518,"value":872},{"type":513,"tag":550,"props":1451,"children":1452},{"style":717},[1453],{"type":518,"value":827},{"type":513,"tag":550,"props":1455,"children":1456},{"style":745},[1457],{"type":518,"value":1134},{"type":513,"tag":550,"props":1459,"children":1460},{"style":793},[1461],{"type":518,"value":1303},{"type":513,"tag":550,"props":1463,"children":1464},{"style":717},[1465],{"type":518,"value":1308},{"type":513,"tag":550,"props":1467,"children":1468},{"style":703},[1469],{"type":518,"value":1470}," // 跳过单词间空格\n",{"type":513,"tag":550,"props":1472,"children":1474},{"class":552,"line":1473},18,[1475,1480,1484,1488,1492],{"type":513,"tag":550,"props":1476,"children":1477},{"style":745},[1478],{"type":518,"value":1479},"    j",{"type":513,"tag":550,"props":1481,"children":1482},{"style":717},[1483],{"type":518,"value":807},{"type":513,"tag":550,"props":1485,"children":1486},{"style":745},[1487],{"type":518,"value":1134},{"type":513,"tag":550,"props":1489,"children":1490},{"style":717},[1491],{"type":518,"value":1308},{"type":513,"tag":550,"props":1493,"children":1494},{"style":703},[1495],{"type":518,"value":1496}," // 指针移动，指向下个单词的尾字符\n",{"type":513,"tag":550,"props":1498,"children":1500},{"class":552,"line":1499},19,[1501],{"type":513,"tag":550,"props":1502,"children":1503},{"style":717},[1504],{"type":518,"value":1505},"  }\n",{"type":513,"tag":550,"props":1507,"children":1509},{"class":552,"line":1508},20,[1510,1514,1518,1522,1526,1530,1534,1538,1542,1547],{"type":513,"tag":550,"props":1511,"children":1512},{"style":723},[1513],{"type":518,"value":841},{"type":513,"tag":550,"props":1515,"children":1516},{"style":745},[1517],{"type":518,"value":1112},{"type":513,"tag":550,"props":1519,"children":1520},{"style":717},[1521],{"type":518,"value":851},{"type":513,"tag":550,"props":1523,"children":1524},{"style":799},[1525],{"type":518,"value":910},{"type":513,"tag":550,"props":1527,"children":1528},{"style":717},[1529],{"type":518,"value":861},{"type":513,"tag":550,"props":1531,"children":1532},{"style":864},[1533],{"type":518,"value":867},{"type":513,"tag":550,"props":1535,"children":1536},{"style":864},[1537],{"type":518,"value":872},{"type":513,"tag":550,"props":1539,"children":1540},{"style":717},[1541],{"type":518,"value":877},{"type":513,"tag":550,"props":1543,"children":1544},{"style":799},[1545],{"type":518,"value":1546},"trim",{"type":513,"tag":550,"props":1548,"children":1549},{"style":717},[1550],{"type":518,"value":1551},"();\n",{"type":513,"tag":550,"props":1553,"children":1555},{"class":552,"line":1554},21,[1556],{"type":513,"tag":550,"props":1557,"children":1558},{"style":717},[1559],{"type":518,"value":936},{"type":513,"tag":1561,"props":1562,"children":1563},"style",{},[1564],{"type":518,"value":1565},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":789,"depth":789,"links":1567},[1568,1569],{"id":675,"depth":562,"text":675},{"id":680,"depth":562,"text":680,"children":1570},[1571,1572],{"id":686,"depth":599,"text":686},{"id":939,"depth":599,"text":939},"markdown","content:1.algorithm:3.leetcode:3.major:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/3.major/151.reverse-words-in-a-string.md","md",[1579,1581],{"_path":177,"title":176,"description":1580},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":183,"title":182,"description":1582},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1714056095088]