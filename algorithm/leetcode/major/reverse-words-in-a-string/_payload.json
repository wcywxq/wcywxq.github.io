[{"data":1,"prerenderedAt":1632},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-words-in-a-string":552,"/algorithm/leetcode/major/reverse-words-in-a-string-surround":1627},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":180,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":179,"description":556,"url":557,"body":558,"_type":1622,"_id":1623,"_source":1624,"_file":1625,"_extension":1626},"major",false,"","给你一个字符串 s ，请你反转字符串中 单词 的顺序。","https://leetcode.cn/problems/reverse-words-in-a-string",{"type":559,"children":560,"toc":1615},"root",[561,568,573,578,583,588,618,623,655,660,691,696,716,721,727,732,738,986,991,1609],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。",{"type":562,"tag":563,"props":579,"children":580},{},[581],{"type":567,"value":582},"注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。",{"type":562,"tag":563,"props":584,"children":585},{},[586],{"type":567,"value":587},"示例 1：",{"type":562,"tag":589,"props":590,"children":593},"pre",{"className":591,"code":592,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"the sky is blue\"\n输出：\"blue is sky the\"\n",[594],{"type":562,"tag":595,"props":596,"children":597},"code",{"__ignoreMap":555},[598,609],{"type":562,"tag":599,"props":600,"children":603},"span",{"class":601,"line":602},"line",1,[604],{"type":562,"tag":599,"props":605,"children":606},{},[607],{"type":567,"value":608},"输入：s = \"the sky is blue\"\n",{"type":562,"tag":599,"props":610,"children":612},{"class":601,"line":611},2,[613],{"type":562,"tag":599,"props":614,"children":615},{},[616],{"type":567,"value":617},"输出：\"blue is sky the\"\n",{"type":562,"tag":563,"props":619,"children":620},{},[621],{"type":567,"value":622},"示例 2：",{"type":562,"tag":589,"props":624,"children":626},{"className":591,"code":625,"language":567,"meta":555,"style":555},"输入：s = \" hello world \"\n输出：\"world hello\"\n解释：反转后的字符串中不能存在前导空格和尾随空格。\n",[627],{"type":562,"tag":595,"props":628,"children":629},{"__ignoreMap":555},[630,638,646],{"type":562,"tag":599,"props":631,"children":632},{"class":601,"line":602},[633],{"type":562,"tag":599,"props":634,"children":635},{},[636],{"type":567,"value":637},"输入：s = \" hello world \"\n",{"type":562,"tag":599,"props":639,"children":640},{"class":601,"line":611},[641],{"type":562,"tag":599,"props":642,"children":643},{},[644],{"type":567,"value":645},"输出：\"world hello\"\n",{"type":562,"tag":599,"props":647,"children":649},{"class":601,"line":648},3,[650],{"type":562,"tag":599,"props":651,"children":652},{},[653],{"type":567,"value":654},"解释：反转后的字符串中不能存在前导空格和尾随空格。\n",{"type":562,"tag":563,"props":656,"children":657},{},[658],{"type":567,"value":659},"示例 3：",{"type":562,"tag":589,"props":661,"children":663},{"className":591,"code":662,"language":567,"meta":555,"style":555},"输入：s = \"a good example\"\n输出：\"example good a\"\n解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",[664],{"type":562,"tag":595,"props":665,"children":666},{"__ignoreMap":555},[667,675,683],{"type":562,"tag":599,"props":668,"children":669},{"class":601,"line":602},[670],{"type":562,"tag":599,"props":671,"children":672},{},[673],{"type":567,"value":674},"输入：s = \"a good example\"\n",{"type":562,"tag":599,"props":676,"children":677},{"class":601,"line":611},[678],{"type":562,"tag":599,"props":679,"children":680},{},[681],{"type":567,"value":682},"输出：\"example good a\"\n",{"type":562,"tag":599,"props":684,"children":685},{"class":601,"line":648},[686],{"type":562,"tag":599,"props":687,"children":688},{},[689],{"type":567,"value":690},"解释：如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。\n",{"type":562,"tag":563,"props":692,"children":693},{},[694],{"type":567,"value":695},"提示：",{"type":562,"tag":697,"props":698,"children":699},"ul",{},[700,706,711],{"type":562,"tag":701,"props":702,"children":703},"li",{},[704],{"type":567,"value":705},"1 \u003C= s.length \u003C= 10^4",{"type":562,"tag":701,"props":707,"children":708},{},[709],{"type":567,"value":710},"s 包含英文大小写字母、数字和空格 ' '",{"type":562,"tag":701,"props":712,"children":713},{},[714],{"type":567,"value":715},"s 中 至少存在一个 单词",{"type":562,"tag":563,"props":717,"children":718},{},[719],{"type":567,"value":720},"进阶：如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。",{"type":562,"tag":722,"props":723,"children":725},"h2",{"id":724},"解题思路",[726],{"type":567,"value":724},{"type":562,"tag":722,"props":728,"children":730},{"id":729},"实现",[731],{"type":567,"value":729},{"type":562,"tag":733,"props":734,"children":736},"h3",{"id":735},"语言特性",[737],{"type":567,"value":735},{"type":562,"tag":589,"props":739,"children":743},{"className":740,"code":741,"language":742,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s.split(\" \").filter(Boolean).reverse().join(\" \");\n};\n","js",[744],{"type":562,"tag":595,"props":745,"children":746},{"__ignoreMap":555},[747,756,798,827,836,882,977],{"type":562,"tag":599,"props":748,"children":749},{"class":601,"line":602},[750],{"type":562,"tag":599,"props":751,"children":753},{"style":752},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[754],{"type":567,"value":755},"/**\n",{"type":562,"tag":599,"props":757,"children":758},{"class":601,"line":611},[759,764,770,776,781,787,792],{"type":562,"tag":599,"props":760,"children":761},{"style":752},[762],{"type":567,"value":763}," * ",{"type":562,"tag":599,"props":765,"children":767},{"style":766},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[768],{"type":567,"value":769},"@",{"type":562,"tag":599,"props":771,"children":773},{"style":772},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[774],{"type":567,"value":775},"param",{"type":562,"tag":599,"props":777,"children":778},{"style":766},[779],{"type":567,"value":780}," {",{"type":562,"tag":599,"props":782,"children":784},{"style":783},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[785],{"type":567,"value":786},"string",{"type":562,"tag":599,"props":788,"children":789},{"style":766},[790],{"type":567,"value":791},"}",{"type":562,"tag":599,"props":793,"children":795},{"style":794},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[796],{"type":567,"value":797}," s\n",{"type":562,"tag":599,"props":799,"children":800},{"class":601,"line":648},[801,805,809,814,818,822],{"type":562,"tag":599,"props":802,"children":803},{"style":752},[804],{"type":567,"value":763},{"type":562,"tag":599,"props":806,"children":807},{"style":766},[808],{"type":567,"value":769},{"type":562,"tag":599,"props":810,"children":811},{"style":772},[812],{"type":567,"value":813},"return",{"type":562,"tag":599,"props":815,"children":816},{"style":766},[817],{"type":567,"value":780},{"type":562,"tag":599,"props":819,"children":820},{"style":783},[821],{"type":567,"value":786},{"type":562,"tag":599,"props":823,"children":824},{"style":766},[825],{"type":567,"value":826},"}\n",{"type":562,"tag":599,"props":828,"children":830},{"class":601,"line":829},4,[831],{"type":562,"tag":599,"props":832,"children":833},{"style":752},[834],{"type":567,"value":835}," */\n",{"type":562,"tag":599,"props":837,"children":839},{"class":601,"line":838},5,[840,846,852,857,862,867,872,877],{"type":562,"tag":599,"props":841,"children":843},{"style":842},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[844],{"type":567,"value":845},"var",{"type":562,"tag":599,"props":847,"children":849},{"style":848},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[850],{"type":567,"value":851}," reverseWords",{"type":562,"tag":599,"props":853,"children":854},{"style":766},[855],{"type":567,"value":856}," =",{"type":562,"tag":599,"props":858,"children":859},{"style":842},[860],{"type":567,"value":861}," function",{"type":562,"tag":599,"props":863,"children":864},{"style":766},[865],{"type":567,"value":866}," (",{"type":562,"tag":599,"props":868,"children":869},{"style":794},[870],{"type":567,"value":871},"s",{"type":562,"tag":599,"props":873,"children":874},{"style":766},[875],{"type":567,"value":876},")",{"type":562,"tag":599,"props":878,"children":879},{"style":766},[880],{"type":567,"value":881}," {\n",{"type":562,"tag":599,"props":883,"children":885},{"class":601,"line":884},6,[886,891,896,901,906,911,917,922,927,932,936,941,945,950,955,960,964,968,972],{"type":562,"tag":599,"props":887,"children":888},{"style":772},[889],{"type":567,"value":890},"  return",{"type":562,"tag":599,"props":892,"children":893},{"style":794},[894],{"type":567,"value":895}," s",{"type":562,"tag":599,"props":897,"children":898},{"style":766},[899],{"type":567,"value":900},".",{"type":562,"tag":599,"props":902,"children":903},{"style":848},[904],{"type":567,"value":905},"split",{"type":562,"tag":599,"props":907,"children":908},{"style":766},[909],{"type":567,"value":910},"(",{"type":562,"tag":599,"props":912,"children":914},{"style":913},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[915],{"type":567,"value":916},"\"",{"type":562,"tag":599,"props":918,"children":919},{"style":913},[920],{"type":567,"value":921}," \"",{"type":562,"tag":599,"props":923,"children":924},{"style":766},[925],{"type":567,"value":926},").",{"type":562,"tag":599,"props":928,"children":929},{"style":848},[930],{"type":567,"value":931},"filter",{"type":562,"tag":599,"props":933,"children":934},{"style":766},[935],{"type":567,"value":910},{"type":562,"tag":599,"props":937,"children":938},{"style":794},[939],{"type":567,"value":940},"Boolean",{"type":562,"tag":599,"props":942,"children":943},{"style":766},[944],{"type":567,"value":926},{"type":562,"tag":599,"props":946,"children":947},{"style":848},[948],{"type":567,"value":949},"reverse",{"type":562,"tag":599,"props":951,"children":952},{"style":766},[953],{"type":567,"value":954},"().",{"type":562,"tag":599,"props":956,"children":957},{"style":848},[958],{"type":567,"value":959},"join",{"type":562,"tag":599,"props":961,"children":962},{"style":766},[963],{"type":567,"value":910},{"type":562,"tag":599,"props":965,"children":966},{"style":913},[967],{"type":567,"value":916},{"type":562,"tag":599,"props":969,"children":970},{"style":913},[971],{"type":567,"value":921},{"type":562,"tag":599,"props":973,"children":974},{"style":766},[975],{"type":567,"value":976},");\n",{"type":562,"tag":599,"props":978,"children":980},{"class":601,"line":979},7,[981],{"type":562,"tag":599,"props":982,"children":983},{"style":766},[984],{"type":567,"value":985},"};\n",{"type":562,"tag":733,"props":987,"children":989},{"id":988},"双指针",[990],{"type":567,"value":988},{"type":562,"tag":589,"props":992,"children":994},{"className":740,"code":993,"language":742,"meta":555,"style":555},"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  // 倒序遍历字符串\n  // 1. 索引 i 从右向左搜索首个空格\n  // 2. 添加单词 s[i + 1, j + 1] 到 res\n  // 3. 索引 i 绕过两个单词间所有空格\n  // 4. 执行 j = i\n  let res = [];\n  let i = s.length - 1;\n  let j = i;\n  while (i >= 0) {\n    while (i >= 0 && s[i] !== \" \") i--; // 搜索首个空格\n    res.push(s.substring(i + 1, j + 1)); // 添加单词\n    while (i >= 0 && s[i] === \" \") i--; // 跳过单词间空格\n    j = i; // 指针移动，指向下个单词的尾字符\n  }\n  return res.join(\" \").trim();\n};\n",[995],{"type":562,"tag":595,"props":996,"children":997},{"__ignoreMap":555},[998,1005,1036,1063,1070,1105,1113,1121,1130,1139,1148,1171,1218,1243,1279,1363,1442,1520,1546,1555,1601],{"type":562,"tag":599,"props":999,"children":1000},{"class":601,"line":602},[1001],{"type":562,"tag":599,"props":1002,"children":1003},{"style":752},[1004],{"type":567,"value":755},{"type":562,"tag":599,"props":1006,"children":1007},{"class":601,"line":611},[1008,1012,1016,1020,1024,1028,1032],{"type":562,"tag":599,"props":1009,"children":1010},{"style":752},[1011],{"type":567,"value":763},{"type":562,"tag":599,"props":1013,"children":1014},{"style":766},[1015],{"type":567,"value":769},{"type":562,"tag":599,"props":1017,"children":1018},{"style":772},[1019],{"type":567,"value":775},{"type":562,"tag":599,"props":1021,"children":1022},{"style":766},[1023],{"type":567,"value":780},{"type":562,"tag":599,"props":1025,"children":1026},{"style":783},[1027],{"type":567,"value":786},{"type":562,"tag":599,"props":1029,"children":1030},{"style":766},[1031],{"type":567,"value":791},{"type":562,"tag":599,"props":1033,"children":1034},{"style":794},[1035],{"type":567,"value":797},{"type":562,"tag":599,"props":1037,"children":1038},{"class":601,"line":648},[1039,1043,1047,1051,1055,1059],{"type":562,"tag":599,"props":1040,"children":1041},{"style":752},[1042],{"type":567,"value":763},{"type":562,"tag":599,"props":1044,"children":1045},{"style":766},[1046],{"type":567,"value":769},{"type":562,"tag":599,"props":1048,"children":1049},{"style":772},[1050],{"type":567,"value":813},{"type":562,"tag":599,"props":1052,"children":1053},{"style":766},[1054],{"type":567,"value":780},{"type":562,"tag":599,"props":1056,"children":1057},{"style":783},[1058],{"type":567,"value":786},{"type":562,"tag":599,"props":1060,"children":1061},{"style":766},[1062],{"type":567,"value":826},{"type":562,"tag":599,"props":1064,"children":1065},{"class":601,"line":829},[1066],{"type":562,"tag":599,"props":1067,"children":1068},{"style":752},[1069],{"type":567,"value":835},{"type":562,"tag":599,"props":1071,"children":1072},{"class":601,"line":838},[1073,1077,1081,1085,1089,1093,1097,1101],{"type":562,"tag":599,"props":1074,"children":1075},{"style":842},[1076],{"type":567,"value":845},{"type":562,"tag":599,"props":1078,"children":1079},{"style":848},[1080],{"type":567,"value":851},{"type":562,"tag":599,"props":1082,"children":1083},{"style":766},[1084],{"type":567,"value":856},{"type":562,"tag":599,"props":1086,"children":1087},{"style":842},[1088],{"type":567,"value":861},{"type":562,"tag":599,"props":1090,"children":1091},{"style":766},[1092],{"type":567,"value":866},{"type":562,"tag":599,"props":1094,"children":1095},{"style":794},[1096],{"type":567,"value":871},{"type":562,"tag":599,"props":1098,"children":1099},{"style":766},[1100],{"type":567,"value":876},{"type":562,"tag":599,"props":1102,"children":1103},{"style":766},[1104],{"type":567,"value":881},{"type":562,"tag":599,"props":1106,"children":1107},{"class":601,"line":884},[1108],{"type":562,"tag":599,"props":1109,"children":1110},{"style":752},[1111],{"type":567,"value":1112},"  // 倒序遍历字符串\n",{"type":562,"tag":599,"props":1114,"children":1115},{"class":601,"line":979},[1116],{"type":562,"tag":599,"props":1117,"children":1118},{"style":752},[1119],{"type":567,"value":1120},"  // 1. 索引 i 从右向左搜索首个空格\n",{"type":562,"tag":599,"props":1122,"children":1124},{"class":601,"line":1123},8,[1125],{"type":562,"tag":599,"props":1126,"children":1127},{"style":752},[1128],{"type":567,"value":1129},"  // 2. 添加单词 s[i + 1, j + 1] 到 res\n",{"type":562,"tag":599,"props":1131,"children":1133},{"class":601,"line":1132},9,[1134],{"type":562,"tag":599,"props":1135,"children":1136},{"style":752},[1137],{"type":567,"value":1138},"  // 3. 索引 i 绕过两个单词间所有空格\n",{"type":562,"tag":599,"props":1140,"children":1142},{"class":601,"line":1141},10,[1143],{"type":562,"tag":599,"props":1144,"children":1145},{"style":752},[1146],{"type":567,"value":1147},"  // 4. 执行 j = i\n",{"type":562,"tag":599,"props":1149,"children":1151},{"class":601,"line":1150},11,[1152,1157,1162,1166],{"type":562,"tag":599,"props":1153,"children":1154},{"style":842},[1155],{"type":567,"value":1156},"  let",{"type":562,"tag":599,"props":1158,"children":1159},{"style":794},[1160],{"type":567,"value":1161}," res",{"type":562,"tag":599,"props":1163,"children":1164},{"style":766},[1165],{"type":567,"value":856},{"type":562,"tag":599,"props":1167,"children":1168},{"style":766},[1169],{"type":567,"value":1170}," [];\n",{"type":562,"tag":599,"props":1172,"children":1174},{"class":601,"line":1173},12,[1175,1179,1184,1188,1192,1196,1202,1207,1213],{"type":562,"tag":599,"props":1176,"children":1177},{"style":842},[1178],{"type":567,"value":1156},{"type":562,"tag":599,"props":1180,"children":1181},{"style":794},[1182],{"type":567,"value":1183}," i",{"type":562,"tag":599,"props":1185,"children":1186},{"style":766},[1187],{"type":567,"value":856},{"type":562,"tag":599,"props":1189,"children":1190},{"style":794},[1191],{"type":567,"value":895},{"type":562,"tag":599,"props":1193,"children":1194},{"style":766},[1195],{"type":567,"value":900},{"type":562,"tag":599,"props":1197,"children":1199},{"style":1198},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1200],{"type":567,"value":1201},"length",{"type":562,"tag":599,"props":1203,"children":1204},{"style":842},[1205],{"type":567,"value":1206}," -",{"type":562,"tag":599,"props":1208,"children":1210},{"style":1209},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1211],{"type":567,"value":1212}," 1",{"type":562,"tag":599,"props":1214,"children":1215},{"style":766},[1216],{"type":567,"value":1217},";\n",{"type":562,"tag":599,"props":1219,"children":1221},{"class":601,"line":1220},13,[1222,1226,1231,1235,1239],{"type":562,"tag":599,"props":1223,"children":1224},{"style":842},[1225],{"type":567,"value":1156},{"type":562,"tag":599,"props":1227,"children":1228},{"style":794},[1229],{"type":567,"value":1230}," j",{"type":562,"tag":599,"props":1232,"children":1233},{"style":766},[1234],{"type":567,"value":856},{"type":562,"tag":599,"props":1236,"children":1237},{"style":794},[1238],{"type":567,"value":1183},{"type":562,"tag":599,"props":1240,"children":1241},{"style":766},[1242],{"type":567,"value":1217},{"type":562,"tag":599,"props":1244,"children":1246},{"class":601,"line":1245},14,[1247,1252,1256,1261,1266,1271,1275],{"type":562,"tag":599,"props":1248,"children":1249},{"style":772},[1250],{"type":567,"value":1251},"  while",{"type":562,"tag":599,"props":1253,"children":1254},{"style":766},[1255],{"type":567,"value":866},{"type":562,"tag":599,"props":1257,"children":1258},{"style":794},[1259],{"type":567,"value":1260},"i",{"type":562,"tag":599,"props":1262,"children":1263},{"style":766},[1264],{"type":567,"value":1265}," >=",{"type":562,"tag":599,"props":1267,"children":1268},{"style":1209},[1269],{"type":567,"value":1270}," 0",{"type":562,"tag":599,"props":1272,"children":1273},{"style":766},[1274],{"type":567,"value":876},{"type":562,"tag":599,"props":1276,"children":1277},{"style":766},[1278],{"type":567,"value":881},{"type":562,"tag":599,"props":1280,"children":1282},{"class":601,"line":1281},15,[1283,1288,1292,1296,1300,1304,1309,1313,1318,1322,1327,1332,1336,1340,1344,1348,1353,1358],{"type":562,"tag":599,"props":1284,"children":1285},{"style":772},[1286],{"type":567,"value":1287},"    while",{"type":562,"tag":599,"props":1289,"children":1290},{"style":766},[1291],{"type":567,"value":866},{"type":562,"tag":599,"props":1293,"children":1294},{"style":794},[1295],{"type":567,"value":1260},{"type":562,"tag":599,"props":1297,"children":1298},{"style":766},[1299],{"type":567,"value":1265},{"type":562,"tag":599,"props":1301,"children":1302},{"style":1209},[1303],{"type":567,"value":1270},{"type":562,"tag":599,"props":1305,"children":1306},{"style":842},[1307],{"type":567,"value":1308}," &&",{"type":562,"tag":599,"props":1310,"children":1311},{"style":794},[1312],{"type":567,"value":895},{"type":562,"tag":599,"props":1314,"children":1315},{"style":766},[1316],{"type":567,"value":1317},"[",{"type":562,"tag":599,"props":1319,"children":1320},{"style":794},[1321],{"type":567,"value":1260},{"type":562,"tag":599,"props":1323,"children":1324},{"style":766},[1325],{"type":567,"value":1326},"]",{"type":562,"tag":599,"props":1328,"children":1329},{"style":842},[1330],{"type":567,"value":1331}," !==",{"type":562,"tag":599,"props":1333,"children":1334},{"style":913},[1335],{"type":567,"value":921},{"type":562,"tag":599,"props":1337,"children":1338},{"style":913},[1339],{"type":567,"value":921},{"type":562,"tag":599,"props":1341,"children":1342},{"style":766},[1343],{"type":567,"value":876},{"type":562,"tag":599,"props":1345,"children":1346},{"style":794},[1347],{"type":567,"value":1183},{"type":562,"tag":599,"props":1349,"children":1350},{"style":842},[1351],{"type":567,"value":1352},"--",{"type":562,"tag":599,"props":1354,"children":1355},{"style":766},[1356],{"type":567,"value":1357},";",{"type":562,"tag":599,"props":1359,"children":1360},{"style":752},[1361],{"type":567,"value":1362}," // 搜索首个空格\n",{"type":562,"tag":599,"props":1364,"children":1366},{"class":601,"line":1365},16,[1367,1372,1376,1381,1385,1389,1393,1398,1402,1406,1411,1415,1420,1424,1428,1432,1437],{"type":562,"tag":599,"props":1368,"children":1369},{"style":794},[1370],{"type":567,"value":1371},"    res",{"type":562,"tag":599,"props":1373,"children":1374},{"style":766},[1375],{"type":567,"value":900},{"type":562,"tag":599,"props":1377,"children":1378},{"style":848},[1379],{"type":567,"value":1380},"push",{"type":562,"tag":599,"props":1382,"children":1383},{"style":766},[1384],{"type":567,"value":910},{"type":562,"tag":599,"props":1386,"children":1387},{"style":794},[1388],{"type":567,"value":871},{"type":562,"tag":599,"props":1390,"children":1391},{"style":766},[1392],{"type":567,"value":900},{"type":562,"tag":599,"props":1394,"children":1395},{"style":848},[1396],{"type":567,"value":1397},"substring",{"type":562,"tag":599,"props":1399,"children":1400},{"style":766},[1401],{"type":567,"value":910},{"type":562,"tag":599,"props":1403,"children":1404},{"style":794},[1405],{"type":567,"value":1260},{"type":562,"tag":599,"props":1407,"children":1408},{"style":842},[1409],{"type":567,"value":1410}," +",{"type":562,"tag":599,"props":1412,"children":1413},{"style":1209},[1414],{"type":567,"value":1212},{"type":562,"tag":599,"props":1416,"children":1417},{"style":766},[1418],{"type":567,"value":1419},",",{"type":562,"tag":599,"props":1421,"children":1422},{"style":794},[1423],{"type":567,"value":1230},{"type":562,"tag":599,"props":1425,"children":1426},{"style":842},[1427],{"type":567,"value":1410},{"type":562,"tag":599,"props":1429,"children":1430},{"style":1209},[1431],{"type":567,"value":1212},{"type":562,"tag":599,"props":1433,"children":1434},{"style":766},[1435],{"type":567,"value":1436},"));",{"type":562,"tag":599,"props":1438,"children":1439},{"style":752},[1440],{"type":567,"value":1441}," // 添加单词\n",{"type":562,"tag":599,"props":1443,"children":1445},{"class":601,"line":1444},17,[1446,1450,1454,1458,1462,1466,1470,1474,1478,1482,1486,1491,1495,1499,1503,1507,1511,1515],{"type":562,"tag":599,"props":1447,"children":1448},{"style":772},[1449],{"type":567,"value":1287},{"type":562,"tag":599,"props":1451,"children":1452},{"style":766},[1453],{"type":567,"value":866},{"type":562,"tag":599,"props":1455,"children":1456},{"style":794},[1457],{"type":567,"value":1260},{"type":562,"tag":599,"props":1459,"children":1460},{"style":766},[1461],{"type":567,"value":1265},{"type":562,"tag":599,"props":1463,"children":1464},{"style":1209},[1465],{"type":567,"value":1270},{"type":562,"tag":599,"props":1467,"children":1468},{"style":842},[1469],{"type":567,"value":1308},{"type":562,"tag":599,"props":1471,"children":1472},{"style":794},[1473],{"type":567,"value":895},{"type":562,"tag":599,"props":1475,"children":1476},{"style":766},[1477],{"type":567,"value":1317},{"type":562,"tag":599,"props":1479,"children":1480},{"style":794},[1481],{"type":567,"value":1260},{"type":562,"tag":599,"props":1483,"children":1484},{"style":766},[1485],{"type":567,"value":1326},{"type":562,"tag":599,"props":1487,"children":1488},{"style":842},[1489],{"type":567,"value":1490}," ===",{"type":562,"tag":599,"props":1492,"children":1493},{"style":913},[1494],{"type":567,"value":921},{"type":562,"tag":599,"props":1496,"children":1497},{"style":913},[1498],{"type":567,"value":921},{"type":562,"tag":599,"props":1500,"children":1501},{"style":766},[1502],{"type":567,"value":876},{"type":562,"tag":599,"props":1504,"children":1505},{"style":794},[1506],{"type":567,"value":1183},{"type":562,"tag":599,"props":1508,"children":1509},{"style":842},[1510],{"type":567,"value":1352},{"type":562,"tag":599,"props":1512,"children":1513},{"style":766},[1514],{"type":567,"value":1357},{"type":562,"tag":599,"props":1516,"children":1517},{"style":752},[1518],{"type":567,"value":1519}," // 跳过单词间空格\n",{"type":562,"tag":599,"props":1521,"children":1523},{"class":601,"line":1522},18,[1524,1529,1533,1537,1541],{"type":562,"tag":599,"props":1525,"children":1526},{"style":794},[1527],{"type":567,"value":1528},"    j",{"type":562,"tag":599,"props":1530,"children":1531},{"style":766},[1532],{"type":567,"value":856},{"type":562,"tag":599,"props":1534,"children":1535},{"style":794},[1536],{"type":567,"value":1183},{"type":562,"tag":599,"props":1538,"children":1539},{"style":766},[1540],{"type":567,"value":1357},{"type":562,"tag":599,"props":1542,"children":1543},{"style":752},[1544],{"type":567,"value":1545}," // 指针移动，指向下个单词的尾字符\n",{"type":562,"tag":599,"props":1547,"children":1549},{"class":601,"line":1548},19,[1550],{"type":562,"tag":599,"props":1551,"children":1552},{"style":766},[1553],{"type":567,"value":1554},"  }\n",{"type":562,"tag":599,"props":1556,"children":1558},{"class":601,"line":1557},20,[1559,1563,1567,1571,1575,1579,1583,1587,1591,1596],{"type":562,"tag":599,"props":1560,"children":1561},{"style":772},[1562],{"type":567,"value":890},{"type":562,"tag":599,"props":1564,"children":1565},{"style":794},[1566],{"type":567,"value":1161},{"type":562,"tag":599,"props":1568,"children":1569},{"style":766},[1570],{"type":567,"value":900},{"type":562,"tag":599,"props":1572,"children":1573},{"style":848},[1574],{"type":567,"value":959},{"type":562,"tag":599,"props":1576,"children":1577},{"style":766},[1578],{"type":567,"value":910},{"type":562,"tag":599,"props":1580,"children":1581},{"style":913},[1582],{"type":567,"value":916},{"type":562,"tag":599,"props":1584,"children":1585},{"style":913},[1586],{"type":567,"value":921},{"type":562,"tag":599,"props":1588,"children":1589},{"style":766},[1590],{"type":567,"value":926},{"type":562,"tag":599,"props":1592,"children":1593},{"style":848},[1594],{"type":567,"value":1595},"trim",{"type":562,"tag":599,"props":1597,"children":1598},{"style":766},[1599],{"type":567,"value":1600},"();\n",{"type":562,"tag":599,"props":1602,"children":1604},{"class":601,"line":1603},21,[1605],{"type":562,"tag":599,"props":1606,"children":1607},{"style":766},[1608],{"type":567,"value":985},{"type":562,"tag":1610,"props":1611,"children":1612},"style",{},[1613],{"type":567,"value":1614},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":838,"depth":838,"links":1616},[1617,1618],{"id":724,"depth":611,"text":724},{"id":729,"depth":611,"text":729,"children":1619},[1620,1621],{"id":735,"depth":648,"text":735},{"id":988,"depth":648,"text":988},"markdown","content:1.algorithm:3.leetcode:3.major:151.reverse-words-in-a-string.md","content","1.algorithm/3.leetcode/3.major/151.reverse-words-in-a-string.md","md",[1628,1630],{"_path":177,"title":176,"description":1629},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",{"_path":183,"title":182,"description":1631},"已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：",1716810726376]