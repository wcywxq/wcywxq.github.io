[{"data":1,"prerenderedAt":1336},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":543,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1331},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":183,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":182,"description":547,"url":548,"body":549,"_type":1326,"_id":1327,"_source":1328,"_file":1329,"_extension":1330},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":550,"children":551,"toc":1322},"root",[552,559,574,579,584,589,628,633,664,669,700,705,733,739,757,762,1316],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":560,"props":561,"children":562},"ul",{},[563,569],{"type":553,"tag":564,"props":565,"children":566},"li",{},[567],{"type":558,"value":568},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":553,"tag":564,"props":570,"children":571},{},[572],{"type":558,"value":573},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":553,"tag":554,"props":575,"children":576},{},[577],{"type":558,"value":578},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":553,"tag":554,"props":580,"children":581},{},[582],{"type":558,"value":583},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":553,"tag":554,"props":585,"children":586},{},[587],{"type":558,"value":588},"示例 1：",{"type":553,"tag":590,"props":591,"children":594},"pre",{"className":592,"code":593,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[595],{"type":553,"tag":596,"props":597,"children":598},"code",{"__ignoreMap":546},[599,610,619],{"type":553,"tag":600,"props":601,"children":604},"span",{"class":602,"line":603},"line",1,[605],{"type":553,"tag":600,"props":606,"children":607},{},[608],{"type":558,"value":609},"输入：nums = [3,4,5,1,2]\n",{"type":553,"tag":600,"props":611,"children":613},{"class":602,"line":612},2,[614],{"type":553,"tag":600,"props":615,"children":616},{},[617],{"type":558,"value":618},"输出：1\n",{"type":553,"tag":600,"props":620,"children":622},{"class":602,"line":621},3,[623],{"type":553,"tag":600,"props":624,"children":625},{},[626],{"type":558,"value":627},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":553,"tag":554,"props":629,"children":630},{},[631],{"type":558,"value":632},"示例 2：",{"type":553,"tag":590,"props":634,"children":636},{"className":592,"code":635,"language":558,"meta":546,"style":546},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[637],{"type":553,"tag":596,"props":638,"children":639},{"__ignoreMap":546},[640,648,656],{"type":553,"tag":600,"props":641,"children":642},{"class":602,"line":603},[643],{"type":553,"tag":600,"props":644,"children":645},{},[646],{"type":558,"value":647},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":553,"tag":600,"props":649,"children":650},{"class":602,"line":612},[651],{"type":553,"tag":600,"props":652,"children":653},{},[654],{"type":558,"value":655},"输出：0\n",{"type":553,"tag":600,"props":657,"children":658},{"class":602,"line":621},[659],{"type":553,"tag":600,"props":660,"children":661},{},[662],{"type":558,"value":663},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":553,"tag":554,"props":665,"children":666},{},[667],{"type":558,"value":668},"示例 3：",{"type":553,"tag":590,"props":670,"children":672},{"className":592,"code":671,"language":558,"meta":546,"style":546},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[673],{"type":553,"tag":596,"props":674,"children":675},{"__ignoreMap":546},[676,684,692],{"type":553,"tag":600,"props":677,"children":678},{"class":602,"line":603},[679],{"type":553,"tag":600,"props":680,"children":681},{},[682],{"type":558,"value":683},"输入：nums = [11,13,15,17]\n",{"type":553,"tag":600,"props":685,"children":686},{"class":602,"line":612},[687],{"type":553,"tag":600,"props":688,"children":689},{},[690],{"type":558,"value":691},"输出：11\n",{"type":553,"tag":600,"props":693,"children":694},{"class":602,"line":621},[695],{"type":553,"tag":600,"props":696,"children":697},{},[698],{"type":558,"value":699},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":553,"tag":554,"props":701,"children":702},{},[703],{"type":558,"value":704},"提示：",{"type":553,"tag":560,"props":706,"children":707},{},[708,713,718,723,728],{"type":553,"tag":564,"props":709,"children":710},{},[711],{"type":558,"value":712},"n == nums.length",{"type":553,"tag":564,"props":714,"children":715},{},[716],{"type":558,"value":717},"1 \u003C= n \u003C= 5000",{"type":553,"tag":564,"props":719,"children":720},{},[721],{"type":558,"value":722},"-5000 \u003C= nums[i] \u003C= 5000",{"type":553,"tag":564,"props":724,"children":725},{},[726],{"type":558,"value":727},"nums 中的所有整数 互不相同",{"type":553,"tag":564,"props":729,"children":730},{},[731],{"type":558,"value":732},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":553,"tag":734,"props":735,"children":737},"h2",{"id":736},"解题思路",[738],{"type":558,"value":736},{"type":553,"tag":560,"props":740,"children":741},{},[742,747,752],{"type":553,"tag":564,"props":743,"children":744},{},[745],{"type":558,"value":746},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":553,"tag":564,"props":748,"children":749},{},[750],{"type":558,"value":751},"n - 1 一定是蓝色",{"type":553,"tag":564,"props":753,"children":754},{},[755],{"type":558,"value":756},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":553,"tag":734,"props":758,"children":760},{"id":759},"实现",[761],{"type":558,"value":759},{"type":553,"tag":590,"props":763,"children":767},{"className":764,"code":765,"language":766,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[768],{"type":553,"tag":596,"props":769,"children":770},{"__ignoreMap":546},[771,780,822,852,861,907,916,925,964,996,1030,1074,1125,1191,1218,1236,1262,1271,1280,1307],{"type":553,"tag":600,"props":772,"children":773},{"class":602,"line":603},[774],{"type":553,"tag":600,"props":775,"children":777},{"style":776},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[778],{"type":558,"value":779},"/**\n",{"type":553,"tag":600,"props":781,"children":782},{"class":602,"line":612},[783,788,794,800,805,811,816],{"type":553,"tag":600,"props":784,"children":785},{"style":776},[786],{"type":558,"value":787}," * ",{"type":553,"tag":600,"props":789,"children":791},{"style":790},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[792],{"type":558,"value":793},"@",{"type":553,"tag":600,"props":795,"children":797},{"style":796},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[798],{"type":558,"value":799},"param",{"type":553,"tag":600,"props":801,"children":802},{"style":790},[803],{"type":558,"value":804}," {",{"type":553,"tag":600,"props":806,"children":808},{"style":807},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[809],{"type":558,"value":810},"number[]",{"type":553,"tag":600,"props":812,"children":813},{"style":790},[814],{"type":558,"value":815},"}",{"type":553,"tag":600,"props":817,"children":819},{"style":818},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[820],{"type":558,"value":821}," nums\n",{"type":553,"tag":600,"props":823,"children":824},{"class":602,"line":621},[825,829,833,838,842,847],{"type":553,"tag":600,"props":826,"children":827},{"style":776},[828],{"type":558,"value":787},{"type":553,"tag":600,"props":830,"children":831},{"style":790},[832],{"type":558,"value":793},{"type":553,"tag":600,"props":834,"children":835},{"style":796},[836],{"type":558,"value":837},"return",{"type":553,"tag":600,"props":839,"children":840},{"style":790},[841],{"type":558,"value":804},{"type":553,"tag":600,"props":843,"children":844},{"style":807},[845],{"type":558,"value":846},"number",{"type":553,"tag":600,"props":848,"children":849},{"style":790},[850],{"type":558,"value":851},"}\n",{"type":553,"tag":600,"props":853,"children":855},{"class":602,"line":854},4,[856],{"type":553,"tag":600,"props":857,"children":858},{"style":776},[859],{"type":558,"value":860}," */\n",{"type":553,"tag":600,"props":862,"children":864},{"class":602,"line":863},5,[865,871,877,882,887,892,897,902],{"type":553,"tag":600,"props":866,"children":868},{"style":867},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[869],{"type":558,"value":870},"var",{"type":553,"tag":600,"props":872,"children":874},{"style":873},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[875],{"type":558,"value":876}," findMin",{"type":553,"tag":600,"props":878,"children":879},{"style":790},[880],{"type":558,"value":881}," =",{"type":553,"tag":600,"props":883,"children":884},{"style":867},[885],{"type":558,"value":886}," function",{"type":553,"tag":600,"props":888,"children":889},{"style":790},[890],{"type":558,"value":891}," (",{"type":553,"tag":600,"props":893,"children":894},{"style":818},[895],{"type":558,"value":896},"nums",{"type":553,"tag":600,"props":898,"children":899},{"style":790},[900],{"type":558,"value":901},")",{"type":553,"tag":600,"props":903,"children":904},{"style":790},[905],{"type":558,"value":906}," {\n",{"type":553,"tag":600,"props":908,"children":910},{"class":602,"line":909},6,[911],{"type":553,"tag":600,"props":912,"children":913},{"style":776},[914],{"type":558,"value":915},"  // [0, n - 2]\n",{"type":553,"tag":600,"props":917,"children":919},{"class":602,"line":918},7,[920],{"type":553,"tag":600,"props":921,"children":922},{"style":776},[923],{"type":558,"value":924},"  // (-1, n - 1) 开区间写法\n",{"type":553,"tag":600,"props":926,"children":928},{"class":602,"line":927},8,[929,934,939,943,948,953,959],{"type":553,"tag":600,"props":930,"children":931},{"style":867},[932],{"type":558,"value":933},"  let",{"type":553,"tag":600,"props":935,"children":936},{"style":818},[937],{"type":558,"value":938}," len",{"type":553,"tag":600,"props":940,"children":941},{"style":790},[942],{"type":558,"value":881},{"type":553,"tag":600,"props":944,"children":945},{"style":818},[946],{"type":558,"value":947}," nums",{"type":553,"tag":600,"props":949,"children":950},{"style":790},[951],{"type":558,"value":952},".",{"type":553,"tag":600,"props":954,"children":956},{"style":955},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[957],{"type":558,"value":958},"length",{"type":553,"tag":600,"props":960,"children":961},{"style":790},[962],{"type":558,"value":963},";\n",{"type":553,"tag":600,"props":965,"children":967},{"class":602,"line":966},9,[968,972,977,981,986,992],{"type":553,"tag":600,"props":969,"children":970},{"style":867},[971],{"type":558,"value":933},{"type":553,"tag":600,"props":973,"children":974},{"style":818},[975],{"type":558,"value":976}," l",{"type":553,"tag":600,"props":978,"children":979},{"style":790},[980],{"type":558,"value":881},{"type":553,"tag":600,"props":982,"children":983},{"style":867},[984],{"type":558,"value":985}," -",{"type":553,"tag":600,"props":987,"children":989},{"style":988},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[990],{"type":558,"value":991},"1",{"type":553,"tag":600,"props":993,"children":994},{"style":790},[995],{"type":558,"value":963},{"type":553,"tag":600,"props":997,"children":999},{"class":602,"line":998},10,[1000,1004,1009,1013,1017,1021,1026],{"type":553,"tag":600,"props":1001,"children":1002},{"style":867},[1003],{"type":558,"value":933},{"type":553,"tag":600,"props":1005,"children":1006},{"style":818},[1007],{"type":558,"value":1008}," r",{"type":553,"tag":600,"props":1010,"children":1011},{"style":790},[1012],{"type":558,"value":881},{"type":553,"tag":600,"props":1014,"children":1015},{"style":818},[1016],{"type":558,"value":938},{"type":553,"tag":600,"props":1018,"children":1019},{"style":867},[1020],{"type":558,"value":985},{"type":553,"tag":600,"props":1022,"children":1023},{"style":988},[1024],{"type":558,"value":1025}," 1",{"type":553,"tag":600,"props":1027,"children":1028},{"style":790},[1029],{"type":558,"value":963},{"type":553,"tag":600,"props":1031,"children":1033},{"class":602,"line":1032},11,[1034,1039,1043,1048,1053,1057,1062,1066,1070],{"type":553,"tag":600,"props":1035,"children":1036},{"style":796},[1037],{"type":558,"value":1038},"  while",{"type":553,"tag":600,"props":1040,"children":1041},{"style":790},[1042],{"type":558,"value":891},{"type":553,"tag":600,"props":1044,"children":1045},{"style":818},[1046],{"type":558,"value":1047},"l",{"type":553,"tag":600,"props":1049,"children":1050},{"style":867},[1051],{"type":558,"value":1052}," +",{"type":553,"tag":600,"props":1054,"children":1055},{"style":988},[1056],{"type":558,"value":1025},{"type":553,"tag":600,"props":1058,"children":1059},{"style":790},[1060],{"type":558,"value":1061}," \u003C",{"type":553,"tag":600,"props":1063,"children":1064},{"style":818},[1065],{"type":558,"value":1008},{"type":553,"tag":600,"props":1067,"children":1068},{"style":790},[1069],{"type":558,"value":901},{"type":553,"tag":600,"props":1071,"children":1072},{"style":790},[1073],{"type":558,"value":906},{"type":553,"tag":600,"props":1075,"children":1077},{"class":602,"line":1076},12,[1078,1083,1088,1092,1096,1100,1104,1108,1112,1117,1121],{"type":553,"tag":600,"props":1079,"children":1080},{"style":867},[1081],{"type":558,"value":1082},"    let",{"type":553,"tag":600,"props":1084,"children":1085},{"style":818},[1086],{"type":558,"value":1087}," mid",{"type":553,"tag":600,"props":1089,"children":1090},{"style":790},[1091],{"type":558,"value":881},{"type":553,"tag":600,"props":1093,"children":1094},{"style":790},[1095],{"type":558,"value":891},{"type":553,"tag":600,"props":1097,"children":1098},{"style":818},[1099],{"type":558,"value":1047},{"type":553,"tag":600,"props":1101,"children":1102},{"style":867},[1103],{"type":558,"value":1052},{"type":553,"tag":600,"props":1105,"children":1106},{"style":818},[1107],{"type":558,"value":1008},{"type":553,"tag":600,"props":1109,"children":1110},{"style":790},[1111],{"type":558,"value":901},{"type":553,"tag":600,"props":1113,"children":1114},{"style":867},[1115],{"type":558,"value":1116}," >>",{"type":553,"tag":600,"props":1118,"children":1119},{"style":988},[1120],{"type":558,"value":1025},{"type":553,"tag":600,"props":1122,"children":1123},{"style":790},[1124],{"type":558,"value":963},{"type":553,"tag":600,"props":1126,"children":1128},{"class":602,"line":1127},13,[1129,1134,1138,1142,1147,1152,1157,1161,1165,1169,1174,1178,1182,1187],{"type":553,"tag":600,"props":1130,"children":1131},{"style":796},[1132],{"type":558,"value":1133},"    if",{"type":553,"tag":600,"props":1135,"children":1136},{"style":790},[1137],{"type":558,"value":891},{"type":553,"tag":600,"props":1139,"children":1140},{"style":818},[1141],{"type":558,"value":896},{"type":553,"tag":600,"props":1143,"children":1144},{"style":790},[1145],{"type":558,"value":1146},"[",{"type":553,"tag":600,"props":1148,"children":1149},{"style":818},[1150],{"type":558,"value":1151},"mid",{"type":553,"tag":600,"props":1153,"children":1154},{"style":790},[1155],{"type":558,"value":1156},"]",{"type":553,"tag":600,"props":1158,"children":1159},{"style":790},[1160],{"type":558,"value":1061},{"type":553,"tag":600,"props":1162,"children":1163},{"style":818},[1164],{"type":558,"value":947},{"type":553,"tag":600,"props":1166,"children":1167},{"style":790},[1168],{"type":558,"value":1146},{"type":553,"tag":600,"props":1170,"children":1171},{"style":818},[1172],{"type":558,"value":1173},"len",{"type":553,"tag":600,"props":1175,"children":1176},{"style":867},[1177],{"type":558,"value":985},{"type":553,"tag":600,"props":1179,"children":1180},{"style":988},[1181],{"type":558,"value":1025},{"type":553,"tag":600,"props":1183,"children":1184},{"style":790},[1185],{"type":558,"value":1186},"])",{"type":553,"tag":600,"props":1188,"children":1189},{"style":790},[1190],{"type":558,"value":906},{"type":553,"tag":600,"props":1192,"children":1194},{"class":602,"line":1193},14,[1195,1200,1204,1208,1213],{"type":553,"tag":600,"props":1196,"children":1197},{"style":818},[1198],{"type":558,"value":1199},"      r",{"type":553,"tag":600,"props":1201,"children":1202},{"style":790},[1203],{"type":558,"value":881},{"type":553,"tag":600,"props":1205,"children":1206},{"style":818},[1207],{"type":558,"value":1087},{"type":553,"tag":600,"props":1209,"children":1210},{"style":790},[1211],{"type":558,"value":1212},";",{"type":553,"tag":600,"props":1214,"children":1215},{"style":776},[1216],{"type":558,"value":1217}," // 染蓝色\n",{"type":553,"tag":600,"props":1219,"children":1221},{"class":602,"line":1220},15,[1222,1227,1232],{"type":553,"tag":600,"props":1223,"children":1224},{"style":790},[1225],{"type":558,"value":1226},"    }",{"type":553,"tag":600,"props":1228,"children":1229},{"style":796},[1230],{"type":558,"value":1231}," else",{"type":553,"tag":600,"props":1233,"children":1234},{"style":790},[1235],{"type":558,"value":906},{"type":553,"tag":600,"props":1237,"children":1239},{"class":602,"line":1238},16,[1240,1245,1249,1253,1257],{"type":553,"tag":600,"props":1241,"children":1242},{"style":818},[1243],{"type":558,"value":1244},"      l",{"type":553,"tag":600,"props":1246,"children":1247},{"style":790},[1248],{"type":558,"value":881},{"type":553,"tag":600,"props":1250,"children":1251},{"style":818},[1252],{"type":558,"value":1087},{"type":553,"tag":600,"props":1254,"children":1255},{"style":790},[1256],{"type":558,"value":1212},{"type":553,"tag":600,"props":1258,"children":1259},{"style":776},[1260],{"type":558,"value":1261}," // 染红色\n",{"type":553,"tag":600,"props":1263,"children":1265},{"class":602,"line":1264},17,[1266],{"type":553,"tag":600,"props":1267,"children":1268},{"style":790},[1269],{"type":558,"value":1270},"    }\n",{"type":553,"tag":600,"props":1272,"children":1274},{"class":602,"line":1273},18,[1275],{"type":553,"tag":600,"props":1276,"children":1277},{"style":790},[1278],{"type":558,"value":1279},"  }\n",{"type":553,"tag":600,"props":1281,"children":1283},{"class":602,"line":1282},19,[1284,1289,1293,1297,1302],{"type":553,"tag":600,"props":1285,"children":1286},{"style":796},[1287],{"type":558,"value":1288},"  return",{"type":553,"tag":600,"props":1290,"children":1291},{"style":818},[1292],{"type":558,"value":947},{"type":553,"tag":600,"props":1294,"children":1295},{"style":790},[1296],{"type":558,"value":1146},{"type":553,"tag":600,"props":1298,"children":1299},{"style":818},[1300],{"type":558,"value":1301},"r",{"type":553,"tag":600,"props":1303,"children":1304},{"style":790},[1305],{"type":558,"value":1306},"];\n",{"type":553,"tag":600,"props":1308,"children":1310},{"class":602,"line":1309},20,[1311],{"type":553,"tag":600,"props":1312,"children":1313},{"style":790},[1314],{"type":558,"value":1315},"};\n",{"type":553,"tag":1317,"props":1318,"children":1319},"style",{},[1320],{"type":558,"value":1321},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":863,"depth":863,"links":1323},[1324,1325],{"id":736,"depth":612,"text":736},{"id":759,"depth":612,"text":759},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1332,1334],{"_path":180,"title":179,"description":1333},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":186,"title":185,"description":1335},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1714099679051]