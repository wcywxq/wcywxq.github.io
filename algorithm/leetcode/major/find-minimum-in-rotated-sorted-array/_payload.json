[{"data":1,"prerenderedAt":1344},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":551,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1339},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":183,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":182,"description":555,"url":556,"body":557,"_type":1334,"_id":1335,"_source":1336,"_file":1337,"_extension":1338},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":558,"children":559,"toc":1330},"root",[560,567,582,587,592,597,636,641,672,677,708,713,741,747,765,770,1324],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":568,"props":569,"children":570},"ul",{},[571,577],{"type":561,"tag":572,"props":573,"children":574},"li",{},[575],{"type":566,"value":576},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":561,"tag":572,"props":578,"children":579},{},[580],{"type":566,"value":581},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":561,"tag":562,"props":583,"children":584},{},[585],{"type":566,"value":586},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":561,"tag":562,"props":588,"children":589},{},[590],{"type":566,"value":591},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":561,"tag":562,"props":593,"children":594},{},[595],{"type":566,"value":596},"示例 1：",{"type":561,"tag":598,"props":599,"children":602},"pre",{"className":600,"code":601,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[603],{"type":561,"tag":604,"props":605,"children":606},"code",{"__ignoreMap":554},[607,618,627],{"type":561,"tag":608,"props":609,"children":612},"span",{"class":610,"line":611},"line",1,[613],{"type":561,"tag":608,"props":614,"children":615},{},[616],{"type":566,"value":617},"输入：nums = [3,4,5,1,2]\n",{"type":561,"tag":608,"props":619,"children":621},{"class":610,"line":620},2,[622],{"type":561,"tag":608,"props":623,"children":624},{},[625],{"type":566,"value":626},"输出：1\n",{"type":561,"tag":608,"props":628,"children":630},{"class":610,"line":629},3,[631],{"type":561,"tag":608,"props":632,"children":633},{},[634],{"type":566,"value":635},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":561,"tag":562,"props":637,"children":638},{},[639],{"type":566,"value":640},"示例 2：",{"type":561,"tag":598,"props":642,"children":644},{"className":600,"code":643,"language":566,"meta":554,"style":554},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[645],{"type":561,"tag":604,"props":646,"children":647},{"__ignoreMap":554},[648,656,664],{"type":561,"tag":608,"props":649,"children":650},{"class":610,"line":611},[651],{"type":561,"tag":608,"props":652,"children":653},{},[654],{"type":566,"value":655},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":561,"tag":608,"props":657,"children":658},{"class":610,"line":620},[659],{"type":561,"tag":608,"props":660,"children":661},{},[662],{"type":566,"value":663},"输出：0\n",{"type":561,"tag":608,"props":665,"children":666},{"class":610,"line":629},[667],{"type":561,"tag":608,"props":668,"children":669},{},[670],{"type":566,"value":671},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":561,"tag":562,"props":673,"children":674},{},[675],{"type":566,"value":676},"示例 3：",{"type":561,"tag":598,"props":678,"children":680},{"className":600,"code":679,"language":566,"meta":554,"style":554},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[681],{"type":561,"tag":604,"props":682,"children":683},{"__ignoreMap":554},[684,692,700],{"type":561,"tag":608,"props":685,"children":686},{"class":610,"line":611},[687],{"type":561,"tag":608,"props":688,"children":689},{},[690],{"type":566,"value":691},"输入：nums = [11,13,15,17]\n",{"type":561,"tag":608,"props":693,"children":694},{"class":610,"line":620},[695],{"type":561,"tag":608,"props":696,"children":697},{},[698],{"type":566,"value":699},"输出：11\n",{"type":561,"tag":608,"props":701,"children":702},{"class":610,"line":629},[703],{"type":561,"tag":608,"props":704,"children":705},{},[706],{"type":566,"value":707},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":561,"tag":562,"props":709,"children":710},{},[711],{"type":566,"value":712},"提示：",{"type":561,"tag":568,"props":714,"children":715},{},[716,721,726,731,736],{"type":561,"tag":572,"props":717,"children":718},{},[719],{"type":566,"value":720},"n == nums.length",{"type":561,"tag":572,"props":722,"children":723},{},[724],{"type":566,"value":725},"1 \u003C= n \u003C= 5000",{"type":561,"tag":572,"props":727,"children":728},{},[729],{"type":566,"value":730},"-5000 \u003C= nums[i] \u003C= 5000",{"type":561,"tag":572,"props":732,"children":733},{},[734],{"type":566,"value":735},"nums 中的所有整数 互不相同",{"type":561,"tag":572,"props":737,"children":738},{},[739],{"type":566,"value":740},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":561,"tag":742,"props":743,"children":745},"h2",{"id":744},"解题思路",[746],{"type":566,"value":744},{"type":561,"tag":568,"props":748,"children":749},{},[750,755,760],{"type":561,"tag":572,"props":751,"children":752},{},[753],{"type":566,"value":754},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":561,"tag":572,"props":756,"children":757},{},[758],{"type":566,"value":759},"n - 1 一定是蓝色",{"type":561,"tag":572,"props":761,"children":762},{},[763],{"type":566,"value":764},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":561,"tag":742,"props":766,"children":768},{"id":767},"实现",[769],{"type":566,"value":767},{"type":561,"tag":598,"props":771,"children":775},{"className":772,"code":773,"language":774,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[776],{"type":561,"tag":604,"props":777,"children":778},{"__ignoreMap":554},[779,788,830,860,869,915,924,933,972,1004,1038,1082,1133,1199,1226,1244,1270,1279,1288,1315],{"type":561,"tag":608,"props":780,"children":781},{"class":610,"line":611},[782],{"type":561,"tag":608,"props":783,"children":785},{"style":784},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[786],{"type":566,"value":787},"/**\n",{"type":561,"tag":608,"props":789,"children":790},{"class":610,"line":620},[791,796,802,808,813,819,824],{"type":561,"tag":608,"props":792,"children":793},{"style":784},[794],{"type":566,"value":795}," * ",{"type":561,"tag":608,"props":797,"children":799},{"style":798},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[800],{"type":566,"value":801},"@",{"type":561,"tag":608,"props":803,"children":805},{"style":804},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[806],{"type":566,"value":807},"param",{"type":561,"tag":608,"props":809,"children":810},{"style":798},[811],{"type":566,"value":812}," {",{"type":561,"tag":608,"props":814,"children":816},{"style":815},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[817],{"type":566,"value":818},"number[]",{"type":561,"tag":608,"props":820,"children":821},{"style":798},[822],{"type":566,"value":823},"}",{"type":561,"tag":608,"props":825,"children":827},{"style":826},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[828],{"type":566,"value":829}," nums\n",{"type":561,"tag":608,"props":831,"children":832},{"class":610,"line":629},[833,837,841,846,850,855],{"type":561,"tag":608,"props":834,"children":835},{"style":784},[836],{"type":566,"value":795},{"type":561,"tag":608,"props":838,"children":839},{"style":798},[840],{"type":566,"value":801},{"type":561,"tag":608,"props":842,"children":843},{"style":804},[844],{"type":566,"value":845},"return",{"type":561,"tag":608,"props":847,"children":848},{"style":798},[849],{"type":566,"value":812},{"type":561,"tag":608,"props":851,"children":852},{"style":815},[853],{"type":566,"value":854},"number",{"type":561,"tag":608,"props":856,"children":857},{"style":798},[858],{"type":566,"value":859},"}\n",{"type":561,"tag":608,"props":861,"children":863},{"class":610,"line":862},4,[864],{"type":561,"tag":608,"props":865,"children":866},{"style":784},[867],{"type":566,"value":868}," */\n",{"type":561,"tag":608,"props":870,"children":872},{"class":610,"line":871},5,[873,879,885,890,895,900,905,910],{"type":561,"tag":608,"props":874,"children":876},{"style":875},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[877],{"type":566,"value":878},"var",{"type":561,"tag":608,"props":880,"children":882},{"style":881},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[883],{"type":566,"value":884}," findMin",{"type":561,"tag":608,"props":886,"children":887},{"style":798},[888],{"type":566,"value":889}," =",{"type":561,"tag":608,"props":891,"children":892},{"style":875},[893],{"type":566,"value":894}," function",{"type":561,"tag":608,"props":896,"children":897},{"style":798},[898],{"type":566,"value":899}," (",{"type":561,"tag":608,"props":901,"children":902},{"style":826},[903],{"type":566,"value":904},"nums",{"type":561,"tag":608,"props":906,"children":907},{"style":798},[908],{"type":566,"value":909},")",{"type":561,"tag":608,"props":911,"children":912},{"style":798},[913],{"type":566,"value":914}," {\n",{"type":561,"tag":608,"props":916,"children":918},{"class":610,"line":917},6,[919],{"type":561,"tag":608,"props":920,"children":921},{"style":784},[922],{"type":566,"value":923},"  // [0, n - 2]\n",{"type":561,"tag":608,"props":925,"children":927},{"class":610,"line":926},7,[928],{"type":561,"tag":608,"props":929,"children":930},{"style":784},[931],{"type":566,"value":932},"  // (-1, n - 1) 开区间写法\n",{"type":561,"tag":608,"props":934,"children":936},{"class":610,"line":935},8,[937,942,947,951,956,961,967],{"type":561,"tag":608,"props":938,"children":939},{"style":875},[940],{"type":566,"value":941},"  let",{"type":561,"tag":608,"props":943,"children":944},{"style":826},[945],{"type":566,"value":946}," len",{"type":561,"tag":608,"props":948,"children":949},{"style":798},[950],{"type":566,"value":889},{"type":561,"tag":608,"props":952,"children":953},{"style":826},[954],{"type":566,"value":955}," nums",{"type":561,"tag":608,"props":957,"children":958},{"style":798},[959],{"type":566,"value":960},".",{"type":561,"tag":608,"props":962,"children":964},{"style":963},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[965],{"type":566,"value":966},"length",{"type":561,"tag":608,"props":968,"children":969},{"style":798},[970],{"type":566,"value":971},";\n",{"type":561,"tag":608,"props":973,"children":975},{"class":610,"line":974},9,[976,980,985,989,994,1000],{"type":561,"tag":608,"props":977,"children":978},{"style":875},[979],{"type":566,"value":941},{"type":561,"tag":608,"props":981,"children":982},{"style":826},[983],{"type":566,"value":984}," l",{"type":561,"tag":608,"props":986,"children":987},{"style":798},[988],{"type":566,"value":889},{"type":561,"tag":608,"props":990,"children":991},{"style":875},[992],{"type":566,"value":993}," -",{"type":561,"tag":608,"props":995,"children":997},{"style":996},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[998],{"type":566,"value":999},"1",{"type":561,"tag":608,"props":1001,"children":1002},{"style":798},[1003],{"type":566,"value":971},{"type":561,"tag":608,"props":1005,"children":1007},{"class":610,"line":1006},10,[1008,1012,1017,1021,1025,1029,1034],{"type":561,"tag":608,"props":1009,"children":1010},{"style":875},[1011],{"type":566,"value":941},{"type":561,"tag":608,"props":1013,"children":1014},{"style":826},[1015],{"type":566,"value":1016}," r",{"type":561,"tag":608,"props":1018,"children":1019},{"style":798},[1020],{"type":566,"value":889},{"type":561,"tag":608,"props":1022,"children":1023},{"style":826},[1024],{"type":566,"value":946},{"type":561,"tag":608,"props":1026,"children":1027},{"style":875},[1028],{"type":566,"value":993},{"type":561,"tag":608,"props":1030,"children":1031},{"style":996},[1032],{"type":566,"value":1033}," 1",{"type":561,"tag":608,"props":1035,"children":1036},{"style":798},[1037],{"type":566,"value":971},{"type":561,"tag":608,"props":1039,"children":1041},{"class":610,"line":1040},11,[1042,1047,1051,1056,1061,1065,1070,1074,1078],{"type":561,"tag":608,"props":1043,"children":1044},{"style":804},[1045],{"type":566,"value":1046},"  while",{"type":561,"tag":608,"props":1048,"children":1049},{"style":798},[1050],{"type":566,"value":899},{"type":561,"tag":608,"props":1052,"children":1053},{"style":826},[1054],{"type":566,"value":1055},"l",{"type":561,"tag":608,"props":1057,"children":1058},{"style":875},[1059],{"type":566,"value":1060}," +",{"type":561,"tag":608,"props":1062,"children":1063},{"style":996},[1064],{"type":566,"value":1033},{"type":561,"tag":608,"props":1066,"children":1067},{"style":798},[1068],{"type":566,"value":1069}," \u003C",{"type":561,"tag":608,"props":1071,"children":1072},{"style":826},[1073],{"type":566,"value":1016},{"type":561,"tag":608,"props":1075,"children":1076},{"style":798},[1077],{"type":566,"value":909},{"type":561,"tag":608,"props":1079,"children":1080},{"style":798},[1081],{"type":566,"value":914},{"type":561,"tag":608,"props":1083,"children":1085},{"class":610,"line":1084},12,[1086,1091,1096,1100,1104,1108,1112,1116,1120,1125,1129],{"type":561,"tag":608,"props":1087,"children":1088},{"style":875},[1089],{"type":566,"value":1090},"    let",{"type":561,"tag":608,"props":1092,"children":1093},{"style":826},[1094],{"type":566,"value":1095}," mid",{"type":561,"tag":608,"props":1097,"children":1098},{"style":798},[1099],{"type":566,"value":889},{"type":561,"tag":608,"props":1101,"children":1102},{"style":798},[1103],{"type":566,"value":899},{"type":561,"tag":608,"props":1105,"children":1106},{"style":826},[1107],{"type":566,"value":1055},{"type":561,"tag":608,"props":1109,"children":1110},{"style":875},[1111],{"type":566,"value":1060},{"type":561,"tag":608,"props":1113,"children":1114},{"style":826},[1115],{"type":566,"value":1016},{"type":561,"tag":608,"props":1117,"children":1118},{"style":798},[1119],{"type":566,"value":909},{"type":561,"tag":608,"props":1121,"children":1122},{"style":875},[1123],{"type":566,"value":1124}," >>",{"type":561,"tag":608,"props":1126,"children":1127},{"style":996},[1128],{"type":566,"value":1033},{"type":561,"tag":608,"props":1130,"children":1131},{"style":798},[1132],{"type":566,"value":971},{"type":561,"tag":608,"props":1134,"children":1136},{"class":610,"line":1135},13,[1137,1142,1146,1150,1155,1160,1165,1169,1173,1177,1182,1186,1190,1195],{"type":561,"tag":608,"props":1138,"children":1139},{"style":804},[1140],{"type":566,"value":1141},"    if",{"type":561,"tag":608,"props":1143,"children":1144},{"style":798},[1145],{"type":566,"value":899},{"type":561,"tag":608,"props":1147,"children":1148},{"style":826},[1149],{"type":566,"value":904},{"type":561,"tag":608,"props":1151,"children":1152},{"style":798},[1153],{"type":566,"value":1154},"[",{"type":561,"tag":608,"props":1156,"children":1157},{"style":826},[1158],{"type":566,"value":1159},"mid",{"type":561,"tag":608,"props":1161,"children":1162},{"style":798},[1163],{"type":566,"value":1164},"]",{"type":561,"tag":608,"props":1166,"children":1167},{"style":798},[1168],{"type":566,"value":1069},{"type":561,"tag":608,"props":1170,"children":1171},{"style":826},[1172],{"type":566,"value":955},{"type":561,"tag":608,"props":1174,"children":1175},{"style":798},[1176],{"type":566,"value":1154},{"type":561,"tag":608,"props":1178,"children":1179},{"style":826},[1180],{"type":566,"value":1181},"len",{"type":561,"tag":608,"props":1183,"children":1184},{"style":875},[1185],{"type":566,"value":993},{"type":561,"tag":608,"props":1187,"children":1188},{"style":996},[1189],{"type":566,"value":1033},{"type":561,"tag":608,"props":1191,"children":1192},{"style":798},[1193],{"type":566,"value":1194},"])",{"type":561,"tag":608,"props":1196,"children":1197},{"style":798},[1198],{"type":566,"value":914},{"type":561,"tag":608,"props":1200,"children":1202},{"class":610,"line":1201},14,[1203,1208,1212,1216,1221],{"type":561,"tag":608,"props":1204,"children":1205},{"style":826},[1206],{"type":566,"value":1207},"      r",{"type":561,"tag":608,"props":1209,"children":1210},{"style":798},[1211],{"type":566,"value":889},{"type":561,"tag":608,"props":1213,"children":1214},{"style":826},[1215],{"type":566,"value":1095},{"type":561,"tag":608,"props":1217,"children":1218},{"style":798},[1219],{"type":566,"value":1220},";",{"type":561,"tag":608,"props":1222,"children":1223},{"style":784},[1224],{"type":566,"value":1225}," // 染蓝色\n",{"type":561,"tag":608,"props":1227,"children":1229},{"class":610,"line":1228},15,[1230,1235,1240],{"type":561,"tag":608,"props":1231,"children":1232},{"style":798},[1233],{"type":566,"value":1234},"    }",{"type":561,"tag":608,"props":1236,"children":1237},{"style":804},[1238],{"type":566,"value":1239}," else",{"type":561,"tag":608,"props":1241,"children":1242},{"style":798},[1243],{"type":566,"value":914},{"type":561,"tag":608,"props":1245,"children":1247},{"class":610,"line":1246},16,[1248,1253,1257,1261,1265],{"type":561,"tag":608,"props":1249,"children":1250},{"style":826},[1251],{"type":566,"value":1252},"      l",{"type":561,"tag":608,"props":1254,"children":1255},{"style":798},[1256],{"type":566,"value":889},{"type":561,"tag":608,"props":1258,"children":1259},{"style":826},[1260],{"type":566,"value":1095},{"type":561,"tag":608,"props":1262,"children":1263},{"style":798},[1264],{"type":566,"value":1220},{"type":561,"tag":608,"props":1266,"children":1267},{"style":784},[1268],{"type":566,"value":1269}," // 染红色\n",{"type":561,"tag":608,"props":1271,"children":1273},{"class":610,"line":1272},17,[1274],{"type":561,"tag":608,"props":1275,"children":1276},{"style":798},[1277],{"type":566,"value":1278},"    }\n",{"type":561,"tag":608,"props":1280,"children":1282},{"class":610,"line":1281},18,[1283],{"type":561,"tag":608,"props":1284,"children":1285},{"style":798},[1286],{"type":566,"value":1287},"  }\n",{"type":561,"tag":608,"props":1289,"children":1291},{"class":610,"line":1290},19,[1292,1297,1301,1305,1310],{"type":561,"tag":608,"props":1293,"children":1294},{"style":804},[1295],{"type":566,"value":1296},"  return",{"type":561,"tag":608,"props":1298,"children":1299},{"style":826},[1300],{"type":566,"value":955},{"type":561,"tag":608,"props":1302,"children":1303},{"style":798},[1304],{"type":566,"value":1154},{"type":561,"tag":608,"props":1306,"children":1307},{"style":826},[1308],{"type":566,"value":1309},"r",{"type":561,"tag":608,"props":1311,"children":1312},{"style":798},[1313],{"type":566,"value":1314},"];\n",{"type":561,"tag":608,"props":1316,"children":1318},{"class":610,"line":1317},20,[1319],{"type":561,"tag":608,"props":1320,"children":1321},{"style":798},[1322],{"type":566,"value":1323},"};\n",{"type":561,"tag":1325,"props":1326,"children":1327},"style",{},[1328],{"type":566,"value":1329},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":871,"depth":871,"links":1331},[1332,1333],{"id":744,"depth":620,"text":744},{"id":767,"depth":620,"text":767},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1340,1342],{"_path":180,"title":179,"description":1341},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":186,"title":185,"description":1343},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1715092076710]