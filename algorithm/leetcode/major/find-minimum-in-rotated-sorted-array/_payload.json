[{"data":1,"prerenderedAt":1234},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":466,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1229},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":183,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":182,"description":470,"url":471,"body":472,"_type":1224,"_id":1225,"_source":1226,"_file":1227,"_extension":1228},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":473,"children":474,"toc":1220},"root",[475,482,497,502,507,512,551,556,587,592,623,628,656,662,680,685,1214],{"type":476,"tag":477,"props":478,"children":479},"element","p",{},[480],{"type":481,"value":470},"text",{"type":476,"tag":483,"props":484,"children":485},"ul",{},[486,492],{"type":476,"tag":487,"props":488,"children":489},"li",{},[490],{"type":481,"value":491},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":476,"tag":487,"props":493,"children":494},{},[495],{"type":481,"value":496},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":476,"tag":477,"props":498,"children":499},{},[500],{"type":481,"value":501},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":476,"tag":477,"props":503,"children":504},{},[505],{"type":481,"value":506},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":476,"tag":477,"props":508,"children":509},{},[510],{"type":481,"value":511},"示例 1：",{"type":476,"tag":513,"props":514,"children":517},"pre",{"className":515,"code":516,"language":481,"meta":469,"style":469},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[518],{"type":476,"tag":519,"props":520,"children":521},"code",{"__ignoreMap":469},[522,533,542],{"type":476,"tag":523,"props":524,"children":527},"span",{"class":525,"line":526},"line",1,[528],{"type":476,"tag":523,"props":529,"children":530},{},[531],{"type":481,"value":532},"输入：nums = [3,4,5,1,2]\n",{"type":476,"tag":523,"props":534,"children":536},{"class":525,"line":535},2,[537],{"type":476,"tag":523,"props":538,"children":539},{},[540],{"type":481,"value":541},"输出：1\n",{"type":476,"tag":523,"props":543,"children":545},{"class":525,"line":544},3,[546],{"type":476,"tag":523,"props":547,"children":548},{},[549],{"type":481,"value":550},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":476,"tag":477,"props":552,"children":553},{},[554],{"type":481,"value":555},"示例 2：",{"type":476,"tag":513,"props":557,"children":559},{"className":515,"code":558,"language":481,"meta":469,"style":469},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[560],{"type":476,"tag":519,"props":561,"children":562},{"__ignoreMap":469},[563,571,579],{"type":476,"tag":523,"props":564,"children":565},{"class":525,"line":526},[566],{"type":476,"tag":523,"props":567,"children":568},{},[569],{"type":481,"value":570},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":476,"tag":523,"props":572,"children":573},{"class":525,"line":535},[574],{"type":476,"tag":523,"props":575,"children":576},{},[577],{"type":481,"value":578},"输出：0\n",{"type":476,"tag":523,"props":580,"children":581},{"class":525,"line":544},[582],{"type":476,"tag":523,"props":583,"children":584},{},[585],{"type":481,"value":586},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":476,"tag":477,"props":588,"children":589},{},[590],{"type":481,"value":591},"示例 3：",{"type":476,"tag":513,"props":593,"children":595},{"className":515,"code":594,"language":481,"meta":469,"style":469},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[596],{"type":476,"tag":519,"props":597,"children":598},{"__ignoreMap":469},[599,607,615],{"type":476,"tag":523,"props":600,"children":601},{"class":525,"line":526},[602],{"type":476,"tag":523,"props":603,"children":604},{},[605],{"type":481,"value":606},"输入：nums = [11,13,15,17]\n",{"type":476,"tag":523,"props":608,"children":609},{"class":525,"line":535},[610],{"type":476,"tag":523,"props":611,"children":612},{},[613],{"type":481,"value":614},"输出：11\n",{"type":476,"tag":523,"props":616,"children":617},{"class":525,"line":544},[618],{"type":476,"tag":523,"props":619,"children":620},{},[621],{"type":481,"value":622},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":476,"tag":477,"props":624,"children":625},{},[626],{"type":481,"value":627},"提示：",{"type":476,"tag":483,"props":629,"children":630},{},[631,636,641,646,651],{"type":476,"tag":487,"props":632,"children":633},{},[634],{"type":481,"value":635},"n == nums.length",{"type":476,"tag":487,"props":637,"children":638},{},[639],{"type":481,"value":640},"1 \u003C= n \u003C= 5000",{"type":476,"tag":487,"props":642,"children":643},{},[644],{"type":481,"value":645},"-5000 \u003C= nums[i] \u003C= 5000",{"type":476,"tag":487,"props":647,"children":648},{},[649],{"type":481,"value":650},"nums 中的所有整数 互不相同",{"type":476,"tag":487,"props":652,"children":653},{},[654],{"type":481,"value":655},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":476,"tag":657,"props":658,"children":660},"h2",{"id":659},"解题思路",[661],{"type":481,"value":659},{"type":476,"tag":483,"props":663,"children":664},{},[665,670,675],{"type":476,"tag":487,"props":666,"children":667},{},[668],{"type":481,"value":669},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":476,"tag":487,"props":671,"children":672},{},[673],{"type":481,"value":674},"n - 1 一定是蓝色",{"type":476,"tag":487,"props":676,"children":677},{},[678],{"type":481,"value":679},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":476,"tag":657,"props":681,"children":683},{"id":682},"实现",[684],{"type":481,"value":682},{"type":476,"tag":513,"props":686,"children":690},{"className":687,"code":688,"language":689,"meta":469,"style":469},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[691],{"type":476,"tag":519,"props":692,"children":693},{"__ignoreMap":469},[694,703,729,746,755,799,808,817,858,890,924,965,1017,1080,1107,1126,1152,1161,1170,1201],{"type":476,"tag":523,"props":695,"children":696},{"class":525,"line":526},[697],{"type":476,"tag":523,"props":698,"children":700},{"style":699},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[701],{"type":481,"value":702},"/**\n",{"type":476,"tag":523,"props":704,"children":705},{"class":525,"line":535},[706,711,717,723],{"type":476,"tag":523,"props":707,"children":708},{"style":699},[709],{"type":481,"value":710}," * ",{"type":476,"tag":523,"props":712,"children":714},{"style":713},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[715],{"type":481,"value":716},"@param",{"type":476,"tag":523,"props":718,"children":720},{"style":719},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[721],{"type":481,"value":722}," {number[]}",{"type":476,"tag":523,"props":724,"children":726},{"style":725},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[727],{"type":481,"value":728}," nums\n",{"type":476,"tag":523,"props":730,"children":731},{"class":525,"line":544},[732,736,741],{"type":476,"tag":523,"props":733,"children":734},{"style":699},[735],{"type":481,"value":710},{"type":476,"tag":523,"props":737,"children":738},{"style":713},[739],{"type":481,"value":740},"@return",{"type":476,"tag":523,"props":742,"children":743},{"style":719},[744],{"type":481,"value":745}," {number}\n",{"type":476,"tag":523,"props":747,"children":749},{"class":525,"line":748},4,[750],{"type":476,"tag":523,"props":751,"children":752},{"style":699},[753],{"type":481,"value":754}," */\n",{"type":476,"tag":523,"props":756,"children":758},{"class":525,"line":757},5,[759,765,771,777,782,788,794],{"type":476,"tag":523,"props":760,"children":762},{"style":761},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[763],{"type":481,"value":764},"var",{"type":476,"tag":523,"props":766,"children":768},{"style":767},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[769],{"type":481,"value":770}," findMin",{"type":476,"tag":523,"props":772,"children":774},{"style":773},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[775],{"type":481,"value":776}," =",{"type":476,"tag":523,"props":778,"children":779},{"style":761},[780],{"type":481,"value":781}," function",{"type":476,"tag":523,"props":783,"children":785},{"style":784},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[786],{"type":481,"value":787}," (",{"type":476,"tag":523,"props":789,"children":791},{"style":790},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[792],{"type":481,"value":793},"nums",{"type":476,"tag":523,"props":795,"children":796},{"style":784},[797],{"type":481,"value":798},") {\n",{"type":476,"tag":523,"props":800,"children":802},{"class":525,"line":801},6,[803],{"type":476,"tag":523,"props":804,"children":805},{"style":699},[806],{"type":481,"value":807},"  // [0, n - 2]\n",{"type":476,"tag":523,"props":809,"children":811},{"class":525,"line":810},7,[812],{"type":476,"tag":523,"props":813,"children":814},{"style":699},[815],{"type":481,"value":816},"  // (-1, n - 1) 开区间写法\n",{"type":476,"tag":523,"props":818,"children":820},{"class":525,"line":819},8,[821,826,832,836,841,847,852],{"type":476,"tag":523,"props":822,"children":823},{"style":761},[824],{"type":481,"value":825},"  let",{"type":476,"tag":523,"props":827,"children":829},{"style":828},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[830],{"type":481,"value":831}," len",{"type":476,"tag":523,"props":833,"children":834},{"style":773},[835],{"type":481,"value":776},{"type":476,"tag":523,"props":837,"children":838},{"style":828},[839],{"type":481,"value":840}," nums",{"type":476,"tag":523,"props":842,"children":844},{"style":843},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[845],{"type":481,"value":846},".",{"type":476,"tag":523,"props":848,"children":849},{"style":784},[850],{"type":481,"value":851},"length",{"type":476,"tag":523,"props":853,"children":855},{"style":854},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[856],{"type":481,"value":857},";\n",{"type":476,"tag":523,"props":859,"children":861},{"class":525,"line":860},9,[862,866,871,875,880,886],{"type":476,"tag":523,"props":863,"children":864},{"style":761},[865],{"type":481,"value":825},{"type":476,"tag":523,"props":867,"children":868},{"style":828},[869],{"type":481,"value":870}," l",{"type":476,"tag":523,"props":872,"children":873},{"style":773},[874],{"type":481,"value":776},{"type":476,"tag":523,"props":876,"children":877},{"style":773},[878],{"type":481,"value":879}," -",{"type":476,"tag":523,"props":881,"children":883},{"style":882},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[884],{"type":481,"value":885},"1",{"type":476,"tag":523,"props":887,"children":888},{"style":854},[889],{"type":481,"value":857},{"type":476,"tag":523,"props":891,"children":893},{"class":525,"line":892},10,[894,898,903,907,911,915,920],{"type":476,"tag":523,"props":895,"children":896},{"style":761},[897],{"type":481,"value":825},{"type":476,"tag":523,"props":899,"children":900},{"style":828},[901],{"type":481,"value":902}," r",{"type":476,"tag":523,"props":904,"children":905},{"style":773},[906],{"type":481,"value":776},{"type":476,"tag":523,"props":908,"children":909},{"style":828},[910],{"type":481,"value":831},{"type":476,"tag":523,"props":912,"children":913},{"style":773},[914],{"type":481,"value":879},{"type":476,"tag":523,"props":916,"children":917},{"style":882},[918],{"type":481,"value":919}," 1",{"type":476,"tag":523,"props":921,"children":922},{"style":854},[923],{"type":481,"value":857},{"type":476,"tag":523,"props":925,"children":927},{"class":525,"line":926},11,[928,934,938,943,948,952,957,961],{"type":476,"tag":523,"props":929,"children":931},{"style":930},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[932],{"type":481,"value":933},"  while",{"type":476,"tag":523,"props":935,"children":936},{"style":784},[937],{"type":481,"value":787},{"type":476,"tag":523,"props":939,"children":940},{"style":828},[941],{"type":481,"value":942},"l",{"type":476,"tag":523,"props":944,"children":945},{"style":773},[946],{"type":481,"value":947}," +",{"type":476,"tag":523,"props":949,"children":950},{"style":882},[951],{"type":481,"value":919},{"type":476,"tag":523,"props":953,"children":954},{"style":773},[955],{"type":481,"value":956}," \u003C",{"type":476,"tag":523,"props":958,"children":959},{"style":828},[960],{"type":481,"value":902},{"type":476,"tag":523,"props":962,"children":963},{"style":784},[964],{"type":481,"value":798},{"type":476,"tag":523,"props":966,"children":968},{"class":525,"line":967},12,[969,974,979,983,987,991,995,999,1004,1009,1013],{"type":476,"tag":523,"props":970,"children":971},{"style":761},[972],{"type":481,"value":973},"    let",{"type":476,"tag":523,"props":975,"children":976},{"style":828},[977],{"type":481,"value":978}," mid",{"type":476,"tag":523,"props":980,"children":981},{"style":773},[982],{"type":481,"value":776},{"type":476,"tag":523,"props":984,"children":985},{"style":784},[986],{"type":481,"value":787},{"type":476,"tag":523,"props":988,"children":989},{"style":828},[990],{"type":481,"value":942},{"type":476,"tag":523,"props":992,"children":993},{"style":773},[994],{"type":481,"value":947},{"type":476,"tag":523,"props":996,"children":997},{"style":828},[998],{"type":481,"value":902},{"type":476,"tag":523,"props":1000,"children":1001},{"style":784},[1002],{"type":481,"value":1003},") ",{"type":476,"tag":523,"props":1005,"children":1006},{"style":773},[1007],{"type":481,"value":1008},">>",{"type":476,"tag":523,"props":1010,"children":1011},{"style":882},[1012],{"type":481,"value":919},{"type":476,"tag":523,"props":1014,"children":1015},{"style":854},[1016],{"type":481,"value":857},{"type":476,"tag":523,"props":1018,"children":1020},{"class":525,"line":1019},13,[1021,1026,1030,1034,1039,1044,1049,1054,1058,1062,1067,1071,1075],{"type":476,"tag":523,"props":1022,"children":1023},{"style":930},[1024],{"type":481,"value":1025},"    if",{"type":476,"tag":523,"props":1027,"children":1028},{"style":784},[1029],{"type":481,"value":787},{"type":476,"tag":523,"props":1031,"children":1032},{"style":828},[1033],{"type":481,"value":793},{"type":476,"tag":523,"props":1035,"children":1036},{"style":784},[1037],{"type":481,"value":1038},"[",{"type":476,"tag":523,"props":1040,"children":1041},{"style":828},[1042],{"type":481,"value":1043},"mid",{"type":476,"tag":523,"props":1045,"children":1046},{"style":784},[1047],{"type":481,"value":1048},"] ",{"type":476,"tag":523,"props":1050,"children":1051},{"style":773},[1052],{"type":481,"value":1053},"\u003C",{"type":476,"tag":523,"props":1055,"children":1056},{"style":828},[1057],{"type":481,"value":840},{"type":476,"tag":523,"props":1059,"children":1060},{"style":784},[1061],{"type":481,"value":1038},{"type":476,"tag":523,"props":1063,"children":1064},{"style":828},[1065],{"type":481,"value":1066},"len",{"type":476,"tag":523,"props":1068,"children":1069},{"style":773},[1070],{"type":481,"value":879},{"type":476,"tag":523,"props":1072,"children":1073},{"style":882},[1074],{"type":481,"value":919},{"type":476,"tag":523,"props":1076,"children":1077},{"style":784},[1078],{"type":481,"value":1079},"]) {\n",{"type":476,"tag":523,"props":1081,"children":1083},{"class":525,"line":1082},14,[1084,1089,1093,1097,1102],{"type":476,"tag":523,"props":1085,"children":1086},{"style":828},[1087],{"type":481,"value":1088},"      r",{"type":476,"tag":523,"props":1090,"children":1091},{"style":773},[1092],{"type":481,"value":776},{"type":476,"tag":523,"props":1094,"children":1095},{"style":828},[1096],{"type":481,"value":978},{"type":476,"tag":523,"props":1098,"children":1099},{"style":854},[1100],{"type":481,"value":1101},";",{"type":476,"tag":523,"props":1103,"children":1104},{"style":699},[1105],{"type":481,"value":1106}," // 染蓝色\n",{"type":476,"tag":523,"props":1108,"children":1110},{"class":525,"line":1109},15,[1111,1116,1121],{"type":476,"tag":523,"props":1112,"children":1113},{"style":784},[1114],{"type":481,"value":1115},"    } ",{"type":476,"tag":523,"props":1117,"children":1118},{"style":930},[1119],{"type":481,"value":1120},"else",{"type":476,"tag":523,"props":1122,"children":1123},{"style":784},[1124],{"type":481,"value":1125}," {\n",{"type":476,"tag":523,"props":1127,"children":1129},{"class":525,"line":1128},16,[1130,1135,1139,1143,1147],{"type":476,"tag":523,"props":1131,"children":1132},{"style":828},[1133],{"type":481,"value":1134},"      l",{"type":476,"tag":523,"props":1136,"children":1137},{"style":773},[1138],{"type":481,"value":776},{"type":476,"tag":523,"props":1140,"children":1141},{"style":828},[1142],{"type":481,"value":978},{"type":476,"tag":523,"props":1144,"children":1145},{"style":854},[1146],{"type":481,"value":1101},{"type":476,"tag":523,"props":1148,"children":1149},{"style":699},[1150],{"type":481,"value":1151}," // 染红色\n",{"type":476,"tag":523,"props":1153,"children":1155},{"class":525,"line":1154},17,[1156],{"type":476,"tag":523,"props":1157,"children":1158},{"style":784},[1159],{"type":481,"value":1160},"    }\n",{"type":476,"tag":523,"props":1162,"children":1164},{"class":525,"line":1163},18,[1165],{"type":476,"tag":523,"props":1166,"children":1167},{"style":784},[1168],{"type":481,"value":1169},"  }\n",{"type":476,"tag":523,"props":1171,"children":1173},{"class":525,"line":1172},19,[1174,1179,1183,1187,1192,1197],{"type":476,"tag":523,"props":1175,"children":1176},{"style":930},[1177],{"type":481,"value":1178},"  return",{"type":476,"tag":523,"props":1180,"children":1181},{"style":828},[1182],{"type":481,"value":840},{"type":476,"tag":523,"props":1184,"children":1185},{"style":784},[1186],{"type":481,"value":1038},{"type":476,"tag":523,"props":1188,"children":1189},{"style":828},[1190],{"type":481,"value":1191},"r",{"type":476,"tag":523,"props":1193,"children":1194},{"style":784},[1195],{"type":481,"value":1196},"]",{"type":476,"tag":523,"props":1198,"children":1199},{"style":854},[1200],{"type":481,"value":857},{"type":476,"tag":523,"props":1202,"children":1204},{"class":525,"line":1203},20,[1205,1210],{"type":476,"tag":523,"props":1206,"children":1207},{"style":784},[1208],{"type":481,"value":1209},"}",{"type":476,"tag":523,"props":1211,"children":1212},{"style":854},[1213],{"type":481,"value":857},{"type":476,"tag":1215,"props":1216,"children":1217},"style",{},[1218],{"type":481,"value":1219},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":757,"depth":757,"links":1221},[1222,1223],{"id":659,"depth":535,"text":659},{"id":682,"depth":535,"text":682},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1230,1232],{"_path":180,"title":179,"description":1231},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":186,"title":185,"description":1233},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1713712684722]