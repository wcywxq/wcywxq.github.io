[{"data":1,"prerenderedAt":1296},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":503,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1291},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":183,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":182,"description":507,"url":508,"body":509,"_type":1286,"_id":1287,"_source":1288,"_file":1289,"_extension":1290},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":510,"children":511,"toc":1282},"root",[512,519,534,539,544,549,588,593,624,629,660,665,693,699,717,722,1276],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":520,"props":521,"children":522},"ul",{},[523,529],{"type":513,"tag":524,"props":525,"children":526},"li",{},[527],{"type":518,"value":528},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":513,"tag":524,"props":530,"children":531},{},[532],{"type":518,"value":533},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":513,"tag":514,"props":535,"children":536},{},[537],{"type":518,"value":538},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":513,"tag":514,"props":540,"children":541},{},[542],{"type":518,"value":543},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":513,"tag":514,"props":545,"children":546},{},[547],{"type":518,"value":548},"示例 1：",{"type":513,"tag":550,"props":551,"children":554},"pre",{"className":552,"code":553,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[555],{"type":513,"tag":556,"props":557,"children":558},"code",{"__ignoreMap":506},[559,570,579],{"type":513,"tag":560,"props":561,"children":564},"span",{"class":562,"line":563},"line",1,[565],{"type":513,"tag":560,"props":566,"children":567},{},[568],{"type":518,"value":569},"输入：nums = [3,4,5,1,2]\n",{"type":513,"tag":560,"props":571,"children":573},{"class":562,"line":572},2,[574],{"type":513,"tag":560,"props":575,"children":576},{},[577],{"type":518,"value":578},"输出：1\n",{"type":513,"tag":560,"props":580,"children":582},{"class":562,"line":581},3,[583],{"type":513,"tag":560,"props":584,"children":585},{},[586],{"type":518,"value":587},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":513,"tag":514,"props":589,"children":590},{},[591],{"type":518,"value":592},"示例 2：",{"type":513,"tag":550,"props":594,"children":596},{"className":552,"code":595,"language":518,"meta":506,"style":506},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[597],{"type":513,"tag":556,"props":598,"children":599},{"__ignoreMap":506},[600,608,616],{"type":513,"tag":560,"props":601,"children":602},{"class":562,"line":563},[603],{"type":513,"tag":560,"props":604,"children":605},{},[606],{"type":518,"value":607},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":513,"tag":560,"props":609,"children":610},{"class":562,"line":572},[611],{"type":513,"tag":560,"props":612,"children":613},{},[614],{"type":518,"value":615},"输出：0\n",{"type":513,"tag":560,"props":617,"children":618},{"class":562,"line":581},[619],{"type":513,"tag":560,"props":620,"children":621},{},[622],{"type":518,"value":623},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":513,"tag":514,"props":625,"children":626},{},[627],{"type":518,"value":628},"示例 3：",{"type":513,"tag":550,"props":630,"children":632},{"className":552,"code":631,"language":518,"meta":506,"style":506},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[633],{"type":513,"tag":556,"props":634,"children":635},{"__ignoreMap":506},[636,644,652],{"type":513,"tag":560,"props":637,"children":638},{"class":562,"line":563},[639],{"type":513,"tag":560,"props":640,"children":641},{},[642],{"type":518,"value":643},"输入：nums = [11,13,15,17]\n",{"type":513,"tag":560,"props":645,"children":646},{"class":562,"line":572},[647],{"type":513,"tag":560,"props":648,"children":649},{},[650],{"type":518,"value":651},"输出：11\n",{"type":513,"tag":560,"props":653,"children":654},{"class":562,"line":581},[655],{"type":513,"tag":560,"props":656,"children":657},{},[658],{"type":518,"value":659},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":513,"tag":514,"props":661,"children":662},{},[663],{"type":518,"value":664},"提示：",{"type":513,"tag":520,"props":666,"children":667},{},[668,673,678,683,688],{"type":513,"tag":524,"props":669,"children":670},{},[671],{"type":518,"value":672},"n == nums.length",{"type":513,"tag":524,"props":674,"children":675},{},[676],{"type":518,"value":677},"1 \u003C= n \u003C= 5000",{"type":513,"tag":524,"props":679,"children":680},{},[681],{"type":518,"value":682},"-5000 \u003C= nums[i] \u003C= 5000",{"type":513,"tag":524,"props":684,"children":685},{},[686],{"type":518,"value":687},"nums 中的所有整数 互不相同",{"type":513,"tag":524,"props":689,"children":690},{},[691],{"type":518,"value":692},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":513,"tag":694,"props":695,"children":697},"h2",{"id":696},"解题思路",[698],{"type":518,"value":696},{"type":513,"tag":520,"props":700,"children":701},{},[702,707,712],{"type":513,"tag":524,"props":703,"children":704},{},[705],{"type":518,"value":706},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":513,"tag":524,"props":708,"children":709},{},[710],{"type":518,"value":711},"n - 1 一定是蓝色",{"type":513,"tag":524,"props":713,"children":714},{},[715],{"type":518,"value":716},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":513,"tag":694,"props":718,"children":720},{"id":719},"实现",[721],{"type":518,"value":719},{"type":513,"tag":550,"props":723,"children":727},{"className":724,"code":725,"language":726,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[728],{"type":513,"tag":556,"props":729,"children":730},{"__ignoreMap":506},[731,740,782,812,821,867,876,885,924,956,990,1034,1085,1151,1178,1196,1222,1231,1240,1267],{"type":513,"tag":560,"props":732,"children":733},{"class":562,"line":563},[734],{"type":513,"tag":560,"props":735,"children":737},{"style":736},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[738],{"type":518,"value":739},"/**\n",{"type":513,"tag":560,"props":741,"children":742},{"class":562,"line":572},[743,748,754,760,765,771,776],{"type":513,"tag":560,"props":744,"children":745},{"style":736},[746],{"type":518,"value":747}," * ",{"type":513,"tag":560,"props":749,"children":751},{"style":750},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[752],{"type":518,"value":753},"@",{"type":513,"tag":560,"props":755,"children":757},{"style":756},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[758],{"type":518,"value":759},"param",{"type":513,"tag":560,"props":761,"children":762},{"style":750},[763],{"type":518,"value":764}," {",{"type":513,"tag":560,"props":766,"children":768},{"style":767},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[769],{"type":518,"value":770},"number[]",{"type":513,"tag":560,"props":772,"children":773},{"style":750},[774],{"type":518,"value":775},"}",{"type":513,"tag":560,"props":777,"children":779},{"style":778},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[780],{"type":518,"value":781}," nums\n",{"type":513,"tag":560,"props":783,"children":784},{"class":562,"line":581},[785,789,793,798,802,807],{"type":513,"tag":560,"props":786,"children":787},{"style":736},[788],{"type":518,"value":747},{"type":513,"tag":560,"props":790,"children":791},{"style":750},[792],{"type":518,"value":753},{"type":513,"tag":560,"props":794,"children":795},{"style":756},[796],{"type":518,"value":797},"return",{"type":513,"tag":560,"props":799,"children":800},{"style":750},[801],{"type":518,"value":764},{"type":513,"tag":560,"props":803,"children":804},{"style":767},[805],{"type":518,"value":806},"number",{"type":513,"tag":560,"props":808,"children":809},{"style":750},[810],{"type":518,"value":811},"}\n",{"type":513,"tag":560,"props":813,"children":815},{"class":562,"line":814},4,[816],{"type":513,"tag":560,"props":817,"children":818},{"style":736},[819],{"type":518,"value":820}," */\n",{"type":513,"tag":560,"props":822,"children":824},{"class":562,"line":823},5,[825,831,837,842,847,852,857,862],{"type":513,"tag":560,"props":826,"children":828},{"style":827},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[829],{"type":518,"value":830},"var",{"type":513,"tag":560,"props":832,"children":834},{"style":833},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[835],{"type":518,"value":836}," findMin",{"type":513,"tag":560,"props":838,"children":839},{"style":750},[840],{"type":518,"value":841}," =",{"type":513,"tag":560,"props":843,"children":844},{"style":827},[845],{"type":518,"value":846}," function",{"type":513,"tag":560,"props":848,"children":849},{"style":750},[850],{"type":518,"value":851}," (",{"type":513,"tag":560,"props":853,"children":854},{"style":778},[855],{"type":518,"value":856},"nums",{"type":513,"tag":560,"props":858,"children":859},{"style":750},[860],{"type":518,"value":861},")",{"type":513,"tag":560,"props":863,"children":864},{"style":750},[865],{"type":518,"value":866}," {\n",{"type":513,"tag":560,"props":868,"children":870},{"class":562,"line":869},6,[871],{"type":513,"tag":560,"props":872,"children":873},{"style":736},[874],{"type":518,"value":875},"  // [0, n - 2]\n",{"type":513,"tag":560,"props":877,"children":879},{"class":562,"line":878},7,[880],{"type":513,"tag":560,"props":881,"children":882},{"style":736},[883],{"type":518,"value":884},"  // (-1, n - 1) 开区间写法\n",{"type":513,"tag":560,"props":886,"children":888},{"class":562,"line":887},8,[889,894,899,903,908,913,919],{"type":513,"tag":560,"props":890,"children":891},{"style":827},[892],{"type":518,"value":893},"  let",{"type":513,"tag":560,"props":895,"children":896},{"style":778},[897],{"type":518,"value":898}," len",{"type":513,"tag":560,"props":900,"children":901},{"style":750},[902],{"type":518,"value":841},{"type":513,"tag":560,"props":904,"children":905},{"style":778},[906],{"type":518,"value":907}," nums",{"type":513,"tag":560,"props":909,"children":910},{"style":750},[911],{"type":518,"value":912},".",{"type":513,"tag":560,"props":914,"children":916},{"style":915},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[917],{"type":518,"value":918},"length",{"type":513,"tag":560,"props":920,"children":921},{"style":750},[922],{"type":518,"value":923},";\n",{"type":513,"tag":560,"props":925,"children":927},{"class":562,"line":926},9,[928,932,937,941,946,952],{"type":513,"tag":560,"props":929,"children":930},{"style":827},[931],{"type":518,"value":893},{"type":513,"tag":560,"props":933,"children":934},{"style":778},[935],{"type":518,"value":936}," l",{"type":513,"tag":560,"props":938,"children":939},{"style":750},[940],{"type":518,"value":841},{"type":513,"tag":560,"props":942,"children":943},{"style":827},[944],{"type":518,"value":945}," -",{"type":513,"tag":560,"props":947,"children":949},{"style":948},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[950],{"type":518,"value":951},"1",{"type":513,"tag":560,"props":953,"children":954},{"style":750},[955],{"type":518,"value":923},{"type":513,"tag":560,"props":957,"children":959},{"class":562,"line":958},10,[960,964,969,973,977,981,986],{"type":513,"tag":560,"props":961,"children":962},{"style":827},[963],{"type":518,"value":893},{"type":513,"tag":560,"props":965,"children":966},{"style":778},[967],{"type":518,"value":968}," r",{"type":513,"tag":560,"props":970,"children":971},{"style":750},[972],{"type":518,"value":841},{"type":513,"tag":560,"props":974,"children":975},{"style":778},[976],{"type":518,"value":898},{"type":513,"tag":560,"props":978,"children":979},{"style":827},[980],{"type":518,"value":945},{"type":513,"tag":560,"props":982,"children":983},{"style":948},[984],{"type":518,"value":985}," 1",{"type":513,"tag":560,"props":987,"children":988},{"style":750},[989],{"type":518,"value":923},{"type":513,"tag":560,"props":991,"children":993},{"class":562,"line":992},11,[994,999,1003,1008,1013,1017,1022,1026,1030],{"type":513,"tag":560,"props":995,"children":996},{"style":756},[997],{"type":518,"value":998},"  while",{"type":513,"tag":560,"props":1000,"children":1001},{"style":750},[1002],{"type":518,"value":851},{"type":513,"tag":560,"props":1004,"children":1005},{"style":778},[1006],{"type":518,"value":1007},"l",{"type":513,"tag":560,"props":1009,"children":1010},{"style":827},[1011],{"type":518,"value":1012}," +",{"type":513,"tag":560,"props":1014,"children":1015},{"style":948},[1016],{"type":518,"value":985},{"type":513,"tag":560,"props":1018,"children":1019},{"style":750},[1020],{"type":518,"value":1021}," \u003C",{"type":513,"tag":560,"props":1023,"children":1024},{"style":778},[1025],{"type":518,"value":968},{"type":513,"tag":560,"props":1027,"children":1028},{"style":750},[1029],{"type":518,"value":861},{"type":513,"tag":560,"props":1031,"children":1032},{"style":750},[1033],{"type":518,"value":866},{"type":513,"tag":560,"props":1035,"children":1037},{"class":562,"line":1036},12,[1038,1043,1048,1052,1056,1060,1064,1068,1072,1077,1081],{"type":513,"tag":560,"props":1039,"children":1040},{"style":827},[1041],{"type":518,"value":1042},"    let",{"type":513,"tag":560,"props":1044,"children":1045},{"style":778},[1046],{"type":518,"value":1047}," mid",{"type":513,"tag":560,"props":1049,"children":1050},{"style":750},[1051],{"type":518,"value":841},{"type":513,"tag":560,"props":1053,"children":1054},{"style":750},[1055],{"type":518,"value":851},{"type":513,"tag":560,"props":1057,"children":1058},{"style":778},[1059],{"type":518,"value":1007},{"type":513,"tag":560,"props":1061,"children":1062},{"style":827},[1063],{"type":518,"value":1012},{"type":513,"tag":560,"props":1065,"children":1066},{"style":778},[1067],{"type":518,"value":968},{"type":513,"tag":560,"props":1069,"children":1070},{"style":750},[1071],{"type":518,"value":861},{"type":513,"tag":560,"props":1073,"children":1074},{"style":827},[1075],{"type":518,"value":1076}," >>",{"type":513,"tag":560,"props":1078,"children":1079},{"style":948},[1080],{"type":518,"value":985},{"type":513,"tag":560,"props":1082,"children":1083},{"style":750},[1084],{"type":518,"value":923},{"type":513,"tag":560,"props":1086,"children":1088},{"class":562,"line":1087},13,[1089,1094,1098,1102,1107,1112,1117,1121,1125,1129,1134,1138,1142,1147],{"type":513,"tag":560,"props":1090,"children":1091},{"style":756},[1092],{"type":518,"value":1093},"    if",{"type":513,"tag":560,"props":1095,"children":1096},{"style":750},[1097],{"type":518,"value":851},{"type":513,"tag":560,"props":1099,"children":1100},{"style":778},[1101],{"type":518,"value":856},{"type":513,"tag":560,"props":1103,"children":1104},{"style":750},[1105],{"type":518,"value":1106},"[",{"type":513,"tag":560,"props":1108,"children":1109},{"style":778},[1110],{"type":518,"value":1111},"mid",{"type":513,"tag":560,"props":1113,"children":1114},{"style":750},[1115],{"type":518,"value":1116},"]",{"type":513,"tag":560,"props":1118,"children":1119},{"style":750},[1120],{"type":518,"value":1021},{"type":513,"tag":560,"props":1122,"children":1123},{"style":778},[1124],{"type":518,"value":907},{"type":513,"tag":560,"props":1126,"children":1127},{"style":750},[1128],{"type":518,"value":1106},{"type":513,"tag":560,"props":1130,"children":1131},{"style":778},[1132],{"type":518,"value":1133},"len",{"type":513,"tag":560,"props":1135,"children":1136},{"style":827},[1137],{"type":518,"value":945},{"type":513,"tag":560,"props":1139,"children":1140},{"style":948},[1141],{"type":518,"value":985},{"type":513,"tag":560,"props":1143,"children":1144},{"style":750},[1145],{"type":518,"value":1146},"])",{"type":513,"tag":560,"props":1148,"children":1149},{"style":750},[1150],{"type":518,"value":866},{"type":513,"tag":560,"props":1152,"children":1154},{"class":562,"line":1153},14,[1155,1160,1164,1168,1173],{"type":513,"tag":560,"props":1156,"children":1157},{"style":778},[1158],{"type":518,"value":1159},"      r",{"type":513,"tag":560,"props":1161,"children":1162},{"style":750},[1163],{"type":518,"value":841},{"type":513,"tag":560,"props":1165,"children":1166},{"style":778},[1167],{"type":518,"value":1047},{"type":513,"tag":560,"props":1169,"children":1170},{"style":750},[1171],{"type":518,"value":1172},";",{"type":513,"tag":560,"props":1174,"children":1175},{"style":736},[1176],{"type":518,"value":1177}," // 染蓝色\n",{"type":513,"tag":560,"props":1179,"children":1181},{"class":562,"line":1180},15,[1182,1187,1192],{"type":513,"tag":560,"props":1183,"children":1184},{"style":750},[1185],{"type":518,"value":1186},"    }",{"type":513,"tag":560,"props":1188,"children":1189},{"style":756},[1190],{"type":518,"value":1191}," else",{"type":513,"tag":560,"props":1193,"children":1194},{"style":750},[1195],{"type":518,"value":866},{"type":513,"tag":560,"props":1197,"children":1199},{"class":562,"line":1198},16,[1200,1205,1209,1213,1217],{"type":513,"tag":560,"props":1201,"children":1202},{"style":778},[1203],{"type":518,"value":1204},"      l",{"type":513,"tag":560,"props":1206,"children":1207},{"style":750},[1208],{"type":518,"value":841},{"type":513,"tag":560,"props":1210,"children":1211},{"style":778},[1212],{"type":518,"value":1047},{"type":513,"tag":560,"props":1214,"children":1215},{"style":750},[1216],{"type":518,"value":1172},{"type":513,"tag":560,"props":1218,"children":1219},{"style":736},[1220],{"type":518,"value":1221}," // 染红色\n",{"type":513,"tag":560,"props":1223,"children":1225},{"class":562,"line":1224},17,[1226],{"type":513,"tag":560,"props":1227,"children":1228},{"style":750},[1229],{"type":518,"value":1230},"    }\n",{"type":513,"tag":560,"props":1232,"children":1234},{"class":562,"line":1233},18,[1235],{"type":513,"tag":560,"props":1236,"children":1237},{"style":750},[1238],{"type":518,"value":1239},"  }\n",{"type":513,"tag":560,"props":1241,"children":1243},{"class":562,"line":1242},19,[1244,1249,1253,1257,1262],{"type":513,"tag":560,"props":1245,"children":1246},{"style":756},[1247],{"type":518,"value":1248},"  return",{"type":513,"tag":560,"props":1250,"children":1251},{"style":778},[1252],{"type":518,"value":907},{"type":513,"tag":560,"props":1254,"children":1255},{"style":750},[1256],{"type":518,"value":1106},{"type":513,"tag":560,"props":1258,"children":1259},{"style":778},[1260],{"type":518,"value":1261},"r",{"type":513,"tag":560,"props":1263,"children":1264},{"style":750},[1265],{"type":518,"value":1266},"];\n",{"type":513,"tag":560,"props":1268,"children":1270},{"class":562,"line":1269},20,[1271],{"type":513,"tag":560,"props":1272,"children":1273},{"style":750},[1274],{"type":518,"value":1275},"};\n",{"type":513,"tag":1277,"props":1278,"children":1279},"style",{},[1280],{"type":518,"value":1281},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":823,"depth":823,"links":1283},[1284,1285],{"id":696,"depth":572,"text":696},{"id":719,"depth":572,"text":719},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1292,1294],{"_path":180,"title":179,"description":1293},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":186,"title":185,"description":1295},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1714056095094]