[{"data":1,"prerenderedAt":1352},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":559,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1347},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":183,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":182,"description":563,"url":564,"body":565,"_type":1342,"_id":1343,"_source":1344,"_file":1345,"_extension":1346},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":566,"children":567,"toc":1338},"root",[568,575,590,595,600,605,644,649,680,685,716,721,749,755,773,778,1332],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":576,"props":577,"children":578},"ul",{},[579,585],{"type":569,"tag":580,"props":581,"children":582},"li",{},[583],{"type":574,"value":584},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":569,"tag":580,"props":586,"children":587},{},[588],{"type":574,"value":589},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":569,"tag":570,"props":591,"children":592},{},[593],{"type":574,"value":594},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":569,"tag":570,"props":596,"children":597},{},[598],{"type":574,"value":599},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":569,"tag":570,"props":601,"children":602},{},[603],{"type":574,"value":604},"示例 1：",{"type":569,"tag":606,"props":607,"children":610},"pre",{"className":608,"code":609,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[611],{"type":569,"tag":612,"props":613,"children":614},"code",{"__ignoreMap":562},[615,626,635],{"type":569,"tag":616,"props":617,"children":620},"span",{"class":618,"line":619},"line",1,[621],{"type":569,"tag":616,"props":622,"children":623},{},[624],{"type":574,"value":625},"输入：nums = [3,4,5,1,2]\n",{"type":569,"tag":616,"props":627,"children":629},{"class":618,"line":628},2,[630],{"type":569,"tag":616,"props":631,"children":632},{},[633],{"type":574,"value":634},"输出：1\n",{"type":569,"tag":616,"props":636,"children":638},{"class":618,"line":637},3,[639],{"type":569,"tag":616,"props":640,"children":641},{},[642],{"type":574,"value":643},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":569,"tag":570,"props":645,"children":646},{},[647],{"type":574,"value":648},"示例 2：",{"type":569,"tag":606,"props":650,"children":652},{"className":608,"code":651,"language":574,"meta":562,"style":562},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[653],{"type":569,"tag":612,"props":654,"children":655},{"__ignoreMap":562},[656,664,672],{"type":569,"tag":616,"props":657,"children":658},{"class":618,"line":619},[659],{"type":569,"tag":616,"props":660,"children":661},{},[662],{"type":574,"value":663},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":569,"tag":616,"props":665,"children":666},{"class":618,"line":628},[667],{"type":569,"tag":616,"props":668,"children":669},{},[670],{"type":574,"value":671},"输出：0\n",{"type":569,"tag":616,"props":673,"children":674},{"class":618,"line":637},[675],{"type":569,"tag":616,"props":676,"children":677},{},[678],{"type":574,"value":679},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":569,"tag":570,"props":681,"children":682},{},[683],{"type":574,"value":684},"示例 3：",{"type":569,"tag":606,"props":686,"children":688},{"className":608,"code":687,"language":574,"meta":562,"style":562},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[689],{"type":569,"tag":612,"props":690,"children":691},{"__ignoreMap":562},[692,700,708],{"type":569,"tag":616,"props":693,"children":694},{"class":618,"line":619},[695],{"type":569,"tag":616,"props":696,"children":697},{},[698],{"type":574,"value":699},"输入：nums = [11,13,15,17]\n",{"type":569,"tag":616,"props":701,"children":702},{"class":618,"line":628},[703],{"type":569,"tag":616,"props":704,"children":705},{},[706],{"type":574,"value":707},"输出：11\n",{"type":569,"tag":616,"props":709,"children":710},{"class":618,"line":637},[711],{"type":569,"tag":616,"props":712,"children":713},{},[714],{"type":574,"value":715},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":569,"tag":570,"props":717,"children":718},{},[719],{"type":574,"value":720},"提示：",{"type":569,"tag":576,"props":722,"children":723},{},[724,729,734,739,744],{"type":569,"tag":580,"props":725,"children":726},{},[727],{"type":574,"value":728},"n == nums.length",{"type":569,"tag":580,"props":730,"children":731},{},[732],{"type":574,"value":733},"1 \u003C= n \u003C= 5000",{"type":569,"tag":580,"props":735,"children":736},{},[737],{"type":574,"value":738},"-5000 \u003C= nums[i] \u003C= 5000",{"type":569,"tag":580,"props":740,"children":741},{},[742],{"type":574,"value":743},"nums 中的所有整数 互不相同",{"type":569,"tag":580,"props":745,"children":746},{},[747],{"type":574,"value":748},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":569,"tag":750,"props":751,"children":753},"h2",{"id":752},"解题思路",[754],{"type":574,"value":752},{"type":569,"tag":576,"props":756,"children":757},{},[758,763,768],{"type":569,"tag":580,"props":759,"children":760},{},[761],{"type":574,"value":762},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":569,"tag":580,"props":764,"children":765},{},[766],{"type":574,"value":767},"n - 1 一定是蓝色",{"type":569,"tag":580,"props":769,"children":770},{},[771],{"type":574,"value":772},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":569,"tag":750,"props":774,"children":776},{"id":775},"实现",[777],{"type":574,"value":775},{"type":569,"tag":606,"props":779,"children":783},{"className":780,"code":781,"language":782,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[784],{"type":569,"tag":612,"props":785,"children":786},{"__ignoreMap":562},[787,796,838,868,877,923,932,941,980,1012,1046,1090,1141,1207,1234,1252,1278,1287,1296,1323],{"type":569,"tag":616,"props":788,"children":789},{"class":618,"line":619},[790],{"type":569,"tag":616,"props":791,"children":793},{"style":792},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[794],{"type":574,"value":795},"/**\n",{"type":569,"tag":616,"props":797,"children":798},{"class":618,"line":628},[799,804,810,816,821,827,832],{"type":569,"tag":616,"props":800,"children":801},{"style":792},[802],{"type":574,"value":803}," * ",{"type":569,"tag":616,"props":805,"children":807},{"style":806},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[808],{"type":574,"value":809},"@",{"type":569,"tag":616,"props":811,"children":813},{"style":812},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[814],{"type":574,"value":815},"param",{"type":569,"tag":616,"props":817,"children":818},{"style":806},[819],{"type":574,"value":820}," {",{"type":569,"tag":616,"props":822,"children":824},{"style":823},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[825],{"type":574,"value":826},"number[]",{"type":569,"tag":616,"props":828,"children":829},{"style":806},[830],{"type":574,"value":831},"}",{"type":569,"tag":616,"props":833,"children":835},{"style":834},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[836],{"type":574,"value":837}," nums\n",{"type":569,"tag":616,"props":839,"children":840},{"class":618,"line":637},[841,845,849,854,858,863],{"type":569,"tag":616,"props":842,"children":843},{"style":792},[844],{"type":574,"value":803},{"type":569,"tag":616,"props":846,"children":847},{"style":806},[848],{"type":574,"value":809},{"type":569,"tag":616,"props":850,"children":851},{"style":812},[852],{"type":574,"value":853},"return",{"type":569,"tag":616,"props":855,"children":856},{"style":806},[857],{"type":574,"value":820},{"type":569,"tag":616,"props":859,"children":860},{"style":823},[861],{"type":574,"value":862},"number",{"type":569,"tag":616,"props":864,"children":865},{"style":806},[866],{"type":574,"value":867},"}\n",{"type":569,"tag":616,"props":869,"children":871},{"class":618,"line":870},4,[872],{"type":569,"tag":616,"props":873,"children":874},{"style":792},[875],{"type":574,"value":876}," */\n",{"type":569,"tag":616,"props":878,"children":880},{"class":618,"line":879},5,[881,887,893,898,903,908,913,918],{"type":569,"tag":616,"props":882,"children":884},{"style":883},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[885],{"type":574,"value":886},"var",{"type":569,"tag":616,"props":888,"children":890},{"style":889},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[891],{"type":574,"value":892}," findMin",{"type":569,"tag":616,"props":894,"children":895},{"style":806},[896],{"type":574,"value":897}," =",{"type":569,"tag":616,"props":899,"children":900},{"style":883},[901],{"type":574,"value":902}," function",{"type":569,"tag":616,"props":904,"children":905},{"style":806},[906],{"type":574,"value":907}," (",{"type":569,"tag":616,"props":909,"children":910},{"style":834},[911],{"type":574,"value":912},"nums",{"type":569,"tag":616,"props":914,"children":915},{"style":806},[916],{"type":574,"value":917},")",{"type":569,"tag":616,"props":919,"children":920},{"style":806},[921],{"type":574,"value":922}," {\n",{"type":569,"tag":616,"props":924,"children":926},{"class":618,"line":925},6,[927],{"type":569,"tag":616,"props":928,"children":929},{"style":792},[930],{"type":574,"value":931},"  // [0, n - 2]\n",{"type":569,"tag":616,"props":933,"children":935},{"class":618,"line":934},7,[936],{"type":569,"tag":616,"props":937,"children":938},{"style":792},[939],{"type":574,"value":940},"  // (-1, n - 1) 开区间写法\n",{"type":569,"tag":616,"props":942,"children":944},{"class":618,"line":943},8,[945,950,955,959,964,969,975],{"type":569,"tag":616,"props":946,"children":947},{"style":883},[948],{"type":574,"value":949},"  let",{"type":569,"tag":616,"props":951,"children":952},{"style":834},[953],{"type":574,"value":954}," len",{"type":569,"tag":616,"props":956,"children":957},{"style":806},[958],{"type":574,"value":897},{"type":569,"tag":616,"props":960,"children":961},{"style":834},[962],{"type":574,"value":963}," nums",{"type":569,"tag":616,"props":965,"children":966},{"style":806},[967],{"type":574,"value":968},".",{"type":569,"tag":616,"props":970,"children":972},{"style":971},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[973],{"type":574,"value":974},"length",{"type":569,"tag":616,"props":976,"children":977},{"style":806},[978],{"type":574,"value":979},";\n",{"type":569,"tag":616,"props":981,"children":983},{"class":618,"line":982},9,[984,988,993,997,1002,1008],{"type":569,"tag":616,"props":985,"children":986},{"style":883},[987],{"type":574,"value":949},{"type":569,"tag":616,"props":989,"children":990},{"style":834},[991],{"type":574,"value":992}," l",{"type":569,"tag":616,"props":994,"children":995},{"style":806},[996],{"type":574,"value":897},{"type":569,"tag":616,"props":998,"children":999},{"style":883},[1000],{"type":574,"value":1001}," -",{"type":569,"tag":616,"props":1003,"children":1005},{"style":1004},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1006],{"type":574,"value":1007},"1",{"type":569,"tag":616,"props":1009,"children":1010},{"style":806},[1011],{"type":574,"value":979},{"type":569,"tag":616,"props":1013,"children":1015},{"class":618,"line":1014},10,[1016,1020,1025,1029,1033,1037,1042],{"type":569,"tag":616,"props":1017,"children":1018},{"style":883},[1019],{"type":574,"value":949},{"type":569,"tag":616,"props":1021,"children":1022},{"style":834},[1023],{"type":574,"value":1024}," r",{"type":569,"tag":616,"props":1026,"children":1027},{"style":806},[1028],{"type":574,"value":897},{"type":569,"tag":616,"props":1030,"children":1031},{"style":834},[1032],{"type":574,"value":954},{"type":569,"tag":616,"props":1034,"children":1035},{"style":883},[1036],{"type":574,"value":1001},{"type":569,"tag":616,"props":1038,"children":1039},{"style":1004},[1040],{"type":574,"value":1041}," 1",{"type":569,"tag":616,"props":1043,"children":1044},{"style":806},[1045],{"type":574,"value":979},{"type":569,"tag":616,"props":1047,"children":1049},{"class":618,"line":1048},11,[1050,1055,1059,1064,1069,1073,1078,1082,1086],{"type":569,"tag":616,"props":1051,"children":1052},{"style":812},[1053],{"type":574,"value":1054},"  while",{"type":569,"tag":616,"props":1056,"children":1057},{"style":806},[1058],{"type":574,"value":907},{"type":569,"tag":616,"props":1060,"children":1061},{"style":834},[1062],{"type":574,"value":1063},"l",{"type":569,"tag":616,"props":1065,"children":1066},{"style":883},[1067],{"type":574,"value":1068}," +",{"type":569,"tag":616,"props":1070,"children":1071},{"style":1004},[1072],{"type":574,"value":1041},{"type":569,"tag":616,"props":1074,"children":1075},{"style":806},[1076],{"type":574,"value":1077}," \u003C",{"type":569,"tag":616,"props":1079,"children":1080},{"style":834},[1081],{"type":574,"value":1024},{"type":569,"tag":616,"props":1083,"children":1084},{"style":806},[1085],{"type":574,"value":917},{"type":569,"tag":616,"props":1087,"children":1088},{"style":806},[1089],{"type":574,"value":922},{"type":569,"tag":616,"props":1091,"children":1093},{"class":618,"line":1092},12,[1094,1099,1104,1108,1112,1116,1120,1124,1128,1133,1137],{"type":569,"tag":616,"props":1095,"children":1096},{"style":883},[1097],{"type":574,"value":1098},"    let",{"type":569,"tag":616,"props":1100,"children":1101},{"style":834},[1102],{"type":574,"value":1103}," mid",{"type":569,"tag":616,"props":1105,"children":1106},{"style":806},[1107],{"type":574,"value":897},{"type":569,"tag":616,"props":1109,"children":1110},{"style":806},[1111],{"type":574,"value":907},{"type":569,"tag":616,"props":1113,"children":1114},{"style":834},[1115],{"type":574,"value":1063},{"type":569,"tag":616,"props":1117,"children":1118},{"style":883},[1119],{"type":574,"value":1068},{"type":569,"tag":616,"props":1121,"children":1122},{"style":834},[1123],{"type":574,"value":1024},{"type":569,"tag":616,"props":1125,"children":1126},{"style":806},[1127],{"type":574,"value":917},{"type":569,"tag":616,"props":1129,"children":1130},{"style":883},[1131],{"type":574,"value":1132}," >>",{"type":569,"tag":616,"props":1134,"children":1135},{"style":1004},[1136],{"type":574,"value":1041},{"type":569,"tag":616,"props":1138,"children":1139},{"style":806},[1140],{"type":574,"value":979},{"type":569,"tag":616,"props":1142,"children":1144},{"class":618,"line":1143},13,[1145,1150,1154,1158,1163,1168,1173,1177,1181,1185,1190,1194,1198,1203],{"type":569,"tag":616,"props":1146,"children":1147},{"style":812},[1148],{"type":574,"value":1149},"    if",{"type":569,"tag":616,"props":1151,"children":1152},{"style":806},[1153],{"type":574,"value":907},{"type":569,"tag":616,"props":1155,"children":1156},{"style":834},[1157],{"type":574,"value":912},{"type":569,"tag":616,"props":1159,"children":1160},{"style":806},[1161],{"type":574,"value":1162},"[",{"type":569,"tag":616,"props":1164,"children":1165},{"style":834},[1166],{"type":574,"value":1167},"mid",{"type":569,"tag":616,"props":1169,"children":1170},{"style":806},[1171],{"type":574,"value":1172},"]",{"type":569,"tag":616,"props":1174,"children":1175},{"style":806},[1176],{"type":574,"value":1077},{"type":569,"tag":616,"props":1178,"children":1179},{"style":834},[1180],{"type":574,"value":963},{"type":569,"tag":616,"props":1182,"children":1183},{"style":806},[1184],{"type":574,"value":1162},{"type":569,"tag":616,"props":1186,"children":1187},{"style":834},[1188],{"type":574,"value":1189},"len",{"type":569,"tag":616,"props":1191,"children":1192},{"style":883},[1193],{"type":574,"value":1001},{"type":569,"tag":616,"props":1195,"children":1196},{"style":1004},[1197],{"type":574,"value":1041},{"type":569,"tag":616,"props":1199,"children":1200},{"style":806},[1201],{"type":574,"value":1202},"])",{"type":569,"tag":616,"props":1204,"children":1205},{"style":806},[1206],{"type":574,"value":922},{"type":569,"tag":616,"props":1208,"children":1210},{"class":618,"line":1209},14,[1211,1216,1220,1224,1229],{"type":569,"tag":616,"props":1212,"children":1213},{"style":834},[1214],{"type":574,"value":1215},"      r",{"type":569,"tag":616,"props":1217,"children":1218},{"style":806},[1219],{"type":574,"value":897},{"type":569,"tag":616,"props":1221,"children":1222},{"style":834},[1223],{"type":574,"value":1103},{"type":569,"tag":616,"props":1225,"children":1226},{"style":806},[1227],{"type":574,"value":1228},";",{"type":569,"tag":616,"props":1230,"children":1231},{"style":792},[1232],{"type":574,"value":1233}," // 染蓝色\n",{"type":569,"tag":616,"props":1235,"children":1237},{"class":618,"line":1236},15,[1238,1243,1248],{"type":569,"tag":616,"props":1239,"children":1240},{"style":806},[1241],{"type":574,"value":1242},"    }",{"type":569,"tag":616,"props":1244,"children":1245},{"style":812},[1246],{"type":574,"value":1247}," else",{"type":569,"tag":616,"props":1249,"children":1250},{"style":806},[1251],{"type":574,"value":922},{"type":569,"tag":616,"props":1253,"children":1255},{"class":618,"line":1254},16,[1256,1261,1265,1269,1273],{"type":569,"tag":616,"props":1257,"children":1258},{"style":834},[1259],{"type":574,"value":1260},"      l",{"type":569,"tag":616,"props":1262,"children":1263},{"style":806},[1264],{"type":574,"value":897},{"type":569,"tag":616,"props":1266,"children":1267},{"style":834},[1268],{"type":574,"value":1103},{"type":569,"tag":616,"props":1270,"children":1271},{"style":806},[1272],{"type":574,"value":1228},{"type":569,"tag":616,"props":1274,"children":1275},{"style":792},[1276],{"type":574,"value":1277}," // 染红色\n",{"type":569,"tag":616,"props":1279,"children":1281},{"class":618,"line":1280},17,[1282],{"type":569,"tag":616,"props":1283,"children":1284},{"style":806},[1285],{"type":574,"value":1286},"    }\n",{"type":569,"tag":616,"props":1288,"children":1290},{"class":618,"line":1289},18,[1291],{"type":569,"tag":616,"props":1292,"children":1293},{"style":806},[1294],{"type":574,"value":1295},"  }\n",{"type":569,"tag":616,"props":1297,"children":1299},{"class":618,"line":1298},19,[1300,1305,1309,1313,1318],{"type":569,"tag":616,"props":1301,"children":1302},{"style":812},[1303],{"type":574,"value":1304},"  return",{"type":569,"tag":616,"props":1306,"children":1307},{"style":834},[1308],{"type":574,"value":963},{"type":569,"tag":616,"props":1310,"children":1311},{"style":806},[1312],{"type":574,"value":1162},{"type":569,"tag":616,"props":1314,"children":1315},{"style":834},[1316],{"type":574,"value":1317},"r",{"type":569,"tag":616,"props":1319,"children":1320},{"style":806},[1321],{"type":574,"value":1322},"];\n",{"type":569,"tag":616,"props":1324,"children":1326},{"class":618,"line":1325},20,[1327],{"type":569,"tag":616,"props":1328,"children":1329},{"style":806},[1330],{"type":574,"value":1331},"};\n",{"type":569,"tag":1333,"props":1334,"children":1335},"style",{},[1336],{"type":574,"value":1337},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":879,"depth":879,"links":1339},[1340,1341],{"id":752,"depth":628,"text":752},{"id":775,"depth":628,"text":775},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1348,1350],{"_path":180,"title":179,"description":1349},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":186,"title":185,"description":1351},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1717735570894]