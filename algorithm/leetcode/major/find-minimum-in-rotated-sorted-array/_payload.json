[{"data":1,"prerenderedAt":1299},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":506,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1294},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":183,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":182,"description":510,"url":511,"body":512,"_type":1289,"_id":1290,"_source":1291,"_file":1292,"_extension":1293},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":513,"children":514,"toc":1285},"root",[515,522,537,542,547,552,591,596,627,632,663,668,696,702,720,725,1279],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":523,"props":524,"children":525},"ul",{},[526,532],{"type":516,"tag":527,"props":528,"children":529},"li",{},[530],{"type":521,"value":531},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":516,"tag":527,"props":533,"children":534},{},[535],{"type":521,"value":536},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":516,"tag":517,"props":538,"children":539},{},[540],{"type":521,"value":541},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":516,"tag":517,"props":543,"children":544},{},[545],{"type":521,"value":546},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":516,"tag":517,"props":548,"children":549},{},[550],{"type":521,"value":551},"示例 1：",{"type":516,"tag":553,"props":554,"children":557},"pre",{"className":555,"code":556,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[558],{"type":516,"tag":559,"props":560,"children":561},"code",{"__ignoreMap":509},[562,573,582],{"type":516,"tag":563,"props":564,"children":567},"span",{"class":565,"line":566},"line",1,[568],{"type":516,"tag":563,"props":569,"children":570},{},[571],{"type":521,"value":572},"输入：nums = [3,4,5,1,2]\n",{"type":516,"tag":563,"props":574,"children":576},{"class":565,"line":575},2,[577],{"type":516,"tag":563,"props":578,"children":579},{},[580],{"type":521,"value":581},"输出：1\n",{"type":516,"tag":563,"props":583,"children":585},{"class":565,"line":584},3,[586],{"type":516,"tag":563,"props":587,"children":588},{},[589],{"type":521,"value":590},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":516,"tag":517,"props":592,"children":593},{},[594],{"type":521,"value":595},"示例 2：",{"type":516,"tag":553,"props":597,"children":599},{"className":555,"code":598,"language":521,"meta":509,"style":509},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[600],{"type":516,"tag":559,"props":601,"children":602},{"__ignoreMap":509},[603,611,619],{"type":516,"tag":563,"props":604,"children":605},{"class":565,"line":566},[606],{"type":516,"tag":563,"props":607,"children":608},{},[609],{"type":521,"value":610},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":516,"tag":563,"props":612,"children":613},{"class":565,"line":575},[614],{"type":516,"tag":563,"props":615,"children":616},{},[617],{"type":521,"value":618},"输出：0\n",{"type":516,"tag":563,"props":620,"children":621},{"class":565,"line":584},[622],{"type":516,"tag":563,"props":623,"children":624},{},[625],{"type":521,"value":626},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":516,"tag":517,"props":628,"children":629},{},[630],{"type":521,"value":631},"示例 3：",{"type":516,"tag":553,"props":633,"children":635},{"className":555,"code":634,"language":521,"meta":509,"style":509},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[636],{"type":516,"tag":559,"props":637,"children":638},{"__ignoreMap":509},[639,647,655],{"type":516,"tag":563,"props":640,"children":641},{"class":565,"line":566},[642],{"type":516,"tag":563,"props":643,"children":644},{},[645],{"type":521,"value":646},"输入：nums = [11,13,15,17]\n",{"type":516,"tag":563,"props":648,"children":649},{"class":565,"line":575},[650],{"type":516,"tag":563,"props":651,"children":652},{},[653],{"type":521,"value":654},"输出：11\n",{"type":516,"tag":563,"props":656,"children":657},{"class":565,"line":584},[658],{"type":516,"tag":563,"props":659,"children":660},{},[661],{"type":521,"value":662},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":516,"tag":517,"props":664,"children":665},{},[666],{"type":521,"value":667},"提示：",{"type":516,"tag":523,"props":669,"children":670},{},[671,676,681,686,691],{"type":516,"tag":527,"props":672,"children":673},{},[674],{"type":521,"value":675},"n == nums.length",{"type":516,"tag":527,"props":677,"children":678},{},[679],{"type":521,"value":680},"1 \u003C= n \u003C= 5000",{"type":516,"tag":527,"props":682,"children":683},{},[684],{"type":521,"value":685},"-5000 \u003C= nums[i] \u003C= 5000",{"type":516,"tag":527,"props":687,"children":688},{},[689],{"type":521,"value":690},"nums 中的所有整数 互不相同",{"type":516,"tag":527,"props":692,"children":693},{},[694],{"type":521,"value":695},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":516,"tag":697,"props":698,"children":700},"h2",{"id":699},"解题思路",[701],{"type":521,"value":699},{"type":516,"tag":523,"props":703,"children":704},{},[705,710,715],{"type":516,"tag":527,"props":706,"children":707},{},[708],{"type":521,"value":709},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":516,"tag":527,"props":711,"children":712},{},[713],{"type":521,"value":714},"n - 1 一定是蓝色",{"type":516,"tag":527,"props":716,"children":717},{},[718],{"type":521,"value":719},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":516,"tag":697,"props":721,"children":723},{"id":722},"实现",[724],{"type":521,"value":722},{"type":516,"tag":553,"props":726,"children":730},{"className":727,"code":728,"language":729,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[731],{"type":516,"tag":559,"props":732,"children":733},{"__ignoreMap":509},[734,743,785,815,824,870,879,888,927,959,993,1037,1088,1154,1181,1199,1225,1234,1243,1270],{"type":516,"tag":563,"props":735,"children":736},{"class":565,"line":566},[737],{"type":516,"tag":563,"props":738,"children":740},{"style":739},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[741],{"type":521,"value":742},"/**\n",{"type":516,"tag":563,"props":744,"children":745},{"class":565,"line":575},[746,751,757,763,768,774,779],{"type":516,"tag":563,"props":747,"children":748},{"style":739},[749],{"type":521,"value":750}," * ",{"type":516,"tag":563,"props":752,"children":754},{"style":753},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[755],{"type":521,"value":756},"@",{"type":516,"tag":563,"props":758,"children":760},{"style":759},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[761],{"type":521,"value":762},"param",{"type":516,"tag":563,"props":764,"children":765},{"style":753},[766],{"type":521,"value":767}," {",{"type":516,"tag":563,"props":769,"children":771},{"style":770},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[772],{"type":521,"value":773},"number[]",{"type":516,"tag":563,"props":775,"children":776},{"style":753},[777],{"type":521,"value":778},"}",{"type":516,"tag":563,"props":780,"children":782},{"style":781},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[783],{"type":521,"value":784}," nums\n",{"type":516,"tag":563,"props":786,"children":787},{"class":565,"line":584},[788,792,796,801,805,810],{"type":516,"tag":563,"props":789,"children":790},{"style":739},[791],{"type":521,"value":750},{"type":516,"tag":563,"props":793,"children":794},{"style":753},[795],{"type":521,"value":756},{"type":516,"tag":563,"props":797,"children":798},{"style":759},[799],{"type":521,"value":800},"return",{"type":516,"tag":563,"props":802,"children":803},{"style":753},[804],{"type":521,"value":767},{"type":516,"tag":563,"props":806,"children":807},{"style":770},[808],{"type":521,"value":809},"number",{"type":516,"tag":563,"props":811,"children":812},{"style":753},[813],{"type":521,"value":814},"}\n",{"type":516,"tag":563,"props":816,"children":818},{"class":565,"line":817},4,[819],{"type":516,"tag":563,"props":820,"children":821},{"style":739},[822],{"type":521,"value":823}," */\n",{"type":516,"tag":563,"props":825,"children":827},{"class":565,"line":826},5,[828,834,840,845,850,855,860,865],{"type":516,"tag":563,"props":829,"children":831},{"style":830},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[832],{"type":521,"value":833},"var",{"type":516,"tag":563,"props":835,"children":837},{"style":836},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[838],{"type":521,"value":839}," findMin",{"type":516,"tag":563,"props":841,"children":842},{"style":753},[843],{"type":521,"value":844}," =",{"type":516,"tag":563,"props":846,"children":847},{"style":830},[848],{"type":521,"value":849}," function",{"type":516,"tag":563,"props":851,"children":852},{"style":753},[853],{"type":521,"value":854}," (",{"type":516,"tag":563,"props":856,"children":857},{"style":781},[858],{"type":521,"value":859},"nums",{"type":516,"tag":563,"props":861,"children":862},{"style":753},[863],{"type":521,"value":864},")",{"type":516,"tag":563,"props":866,"children":867},{"style":753},[868],{"type":521,"value":869}," {\n",{"type":516,"tag":563,"props":871,"children":873},{"class":565,"line":872},6,[874],{"type":516,"tag":563,"props":875,"children":876},{"style":739},[877],{"type":521,"value":878},"  // [0, n - 2]\n",{"type":516,"tag":563,"props":880,"children":882},{"class":565,"line":881},7,[883],{"type":516,"tag":563,"props":884,"children":885},{"style":739},[886],{"type":521,"value":887},"  // (-1, n - 1) 开区间写法\n",{"type":516,"tag":563,"props":889,"children":891},{"class":565,"line":890},8,[892,897,902,906,911,916,922],{"type":516,"tag":563,"props":893,"children":894},{"style":830},[895],{"type":521,"value":896},"  let",{"type":516,"tag":563,"props":898,"children":899},{"style":781},[900],{"type":521,"value":901}," len",{"type":516,"tag":563,"props":903,"children":904},{"style":753},[905],{"type":521,"value":844},{"type":516,"tag":563,"props":907,"children":908},{"style":781},[909],{"type":521,"value":910}," nums",{"type":516,"tag":563,"props":912,"children":913},{"style":753},[914],{"type":521,"value":915},".",{"type":516,"tag":563,"props":917,"children":919},{"style":918},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[920],{"type":521,"value":921},"length",{"type":516,"tag":563,"props":923,"children":924},{"style":753},[925],{"type":521,"value":926},";\n",{"type":516,"tag":563,"props":928,"children":930},{"class":565,"line":929},9,[931,935,940,944,949,955],{"type":516,"tag":563,"props":932,"children":933},{"style":830},[934],{"type":521,"value":896},{"type":516,"tag":563,"props":936,"children":937},{"style":781},[938],{"type":521,"value":939}," l",{"type":516,"tag":563,"props":941,"children":942},{"style":753},[943],{"type":521,"value":844},{"type":516,"tag":563,"props":945,"children":946},{"style":830},[947],{"type":521,"value":948}," -",{"type":516,"tag":563,"props":950,"children":952},{"style":951},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[953],{"type":521,"value":954},"1",{"type":516,"tag":563,"props":956,"children":957},{"style":753},[958],{"type":521,"value":926},{"type":516,"tag":563,"props":960,"children":962},{"class":565,"line":961},10,[963,967,972,976,980,984,989],{"type":516,"tag":563,"props":964,"children":965},{"style":830},[966],{"type":521,"value":896},{"type":516,"tag":563,"props":968,"children":969},{"style":781},[970],{"type":521,"value":971}," r",{"type":516,"tag":563,"props":973,"children":974},{"style":753},[975],{"type":521,"value":844},{"type":516,"tag":563,"props":977,"children":978},{"style":781},[979],{"type":521,"value":901},{"type":516,"tag":563,"props":981,"children":982},{"style":830},[983],{"type":521,"value":948},{"type":516,"tag":563,"props":985,"children":986},{"style":951},[987],{"type":521,"value":988}," 1",{"type":516,"tag":563,"props":990,"children":991},{"style":753},[992],{"type":521,"value":926},{"type":516,"tag":563,"props":994,"children":996},{"class":565,"line":995},11,[997,1002,1006,1011,1016,1020,1025,1029,1033],{"type":516,"tag":563,"props":998,"children":999},{"style":759},[1000],{"type":521,"value":1001},"  while",{"type":516,"tag":563,"props":1003,"children":1004},{"style":753},[1005],{"type":521,"value":854},{"type":516,"tag":563,"props":1007,"children":1008},{"style":781},[1009],{"type":521,"value":1010},"l",{"type":516,"tag":563,"props":1012,"children":1013},{"style":830},[1014],{"type":521,"value":1015}," +",{"type":516,"tag":563,"props":1017,"children":1018},{"style":951},[1019],{"type":521,"value":988},{"type":516,"tag":563,"props":1021,"children":1022},{"style":753},[1023],{"type":521,"value":1024}," \u003C",{"type":516,"tag":563,"props":1026,"children":1027},{"style":781},[1028],{"type":521,"value":971},{"type":516,"tag":563,"props":1030,"children":1031},{"style":753},[1032],{"type":521,"value":864},{"type":516,"tag":563,"props":1034,"children":1035},{"style":753},[1036],{"type":521,"value":869},{"type":516,"tag":563,"props":1038,"children":1040},{"class":565,"line":1039},12,[1041,1046,1051,1055,1059,1063,1067,1071,1075,1080,1084],{"type":516,"tag":563,"props":1042,"children":1043},{"style":830},[1044],{"type":521,"value":1045},"    let",{"type":516,"tag":563,"props":1047,"children":1048},{"style":781},[1049],{"type":521,"value":1050}," mid",{"type":516,"tag":563,"props":1052,"children":1053},{"style":753},[1054],{"type":521,"value":844},{"type":516,"tag":563,"props":1056,"children":1057},{"style":753},[1058],{"type":521,"value":854},{"type":516,"tag":563,"props":1060,"children":1061},{"style":781},[1062],{"type":521,"value":1010},{"type":516,"tag":563,"props":1064,"children":1065},{"style":830},[1066],{"type":521,"value":1015},{"type":516,"tag":563,"props":1068,"children":1069},{"style":781},[1070],{"type":521,"value":971},{"type":516,"tag":563,"props":1072,"children":1073},{"style":753},[1074],{"type":521,"value":864},{"type":516,"tag":563,"props":1076,"children":1077},{"style":830},[1078],{"type":521,"value":1079}," >>",{"type":516,"tag":563,"props":1081,"children":1082},{"style":951},[1083],{"type":521,"value":988},{"type":516,"tag":563,"props":1085,"children":1086},{"style":753},[1087],{"type":521,"value":926},{"type":516,"tag":563,"props":1089,"children":1091},{"class":565,"line":1090},13,[1092,1097,1101,1105,1110,1115,1120,1124,1128,1132,1137,1141,1145,1150],{"type":516,"tag":563,"props":1093,"children":1094},{"style":759},[1095],{"type":521,"value":1096},"    if",{"type":516,"tag":563,"props":1098,"children":1099},{"style":753},[1100],{"type":521,"value":854},{"type":516,"tag":563,"props":1102,"children":1103},{"style":781},[1104],{"type":521,"value":859},{"type":516,"tag":563,"props":1106,"children":1107},{"style":753},[1108],{"type":521,"value":1109},"[",{"type":516,"tag":563,"props":1111,"children":1112},{"style":781},[1113],{"type":521,"value":1114},"mid",{"type":516,"tag":563,"props":1116,"children":1117},{"style":753},[1118],{"type":521,"value":1119},"]",{"type":516,"tag":563,"props":1121,"children":1122},{"style":753},[1123],{"type":521,"value":1024},{"type":516,"tag":563,"props":1125,"children":1126},{"style":781},[1127],{"type":521,"value":910},{"type":516,"tag":563,"props":1129,"children":1130},{"style":753},[1131],{"type":521,"value":1109},{"type":516,"tag":563,"props":1133,"children":1134},{"style":781},[1135],{"type":521,"value":1136},"len",{"type":516,"tag":563,"props":1138,"children":1139},{"style":830},[1140],{"type":521,"value":948},{"type":516,"tag":563,"props":1142,"children":1143},{"style":951},[1144],{"type":521,"value":988},{"type":516,"tag":563,"props":1146,"children":1147},{"style":753},[1148],{"type":521,"value":1149},"])",{"type":516,"tag":563,"props":1151,"children":1152},{"style":753},[1153],{"type":521,"value":869},{"type":516,"tag":563,"props":1155,"children":1157},{"class":565,"line":1156},14,[1158,1163,1167,1171,1176],{"type":516,"tag":563,"props":1159,"children":1160},{"style":781},[1161],{"type":521,"value":1162},"      r",{"type":516,"tag":563,"props":1164,"children":1165},{"style":753},[1166],{"type":521,"value":844},{"type":516,"tag":563,"props":1168,"children":1169},{"style":781},[1170],{"type":521,"value":1050},{"type":516,"tag":563,"props":1172,"children":1173},{"style":753},[1174],{"type":521,"value":1175},";",{"type":516,"tag":563,"props":1177,"children":1178},{"style":739},[1179],{"type":521,"value":1180}," // 染蓝色\n",{"type":516,"tag":563,"props":1182,"children":1184},{"class":565,"line":1183},15,[1185,1190,1195],{"type":516,"tag":563,"props":1186,"children":1187},{"style":753},[1188],{"type":521,"value":1189},"    }",{"type":516,"tag":563,"props":1191,"children":1192},{"style":759},[1193],{"type":521,"value":1194}," else",{"type":516,"tag":563,"props":1196,"children":1197},{"style":753},[1198],{"type":521,"value":869},{"type":516,"tag":563,"props":1200,"children":1202},{"class":565,"line":1201},16,[1203,1208,1212,1216,1220],{"type":516,"tag":563,"props":1204,"children":1205},{"style":781},[1206],{"type":521,"value":1207},"      l",{"type":516,"tag":563,"props":1209,"children":1210},{"style":753},[1211],{"type":521,"value":844},{"type":516,"tag":563,"props":1213,"children":1214},{"style":781},[1215],{"type":521,"value":1050},{"type":516,"tag":563,"props":1217,"children":1218},{"style":753},[1219],{"type":521,"value":1175},{"type":516,"tag":563,"props":1221,"children":1222},{"style":739},[1223],{"type":521,"value":1224}," // 染红色\n",{"type":516,"tag":563,"props":1226,"children":1228},{"class":565,"line":1227},17,[1229],{"type":516,"tag":563,"props":1230,"children":1231},{"style":753},[1232],{"type":521,"value":1233},"    }\n",{"type":516,"tag":563,"props":1235,"children":1237},{"class":565,"line":1236},18,[1238],{"type":516,"tag":563,"props":1239,"children":1240},{"style":753},[1241],{"type":521,"value":1242},"  }\n",{"type":516,"tag":563,"props":1244,"children":1246},{"class":565,"line":1245},19,[1247,1252,1256,1260,1265],{"type":516,"tag":563,"props":1248,"children":1249},{"style":759},[1250],{"type":521,"value":1251},"  return",{"type":516,"tag":563,"props":1253,"children":1254},{"style":781},[1255],{"type":521,"value":910},{"type":516,"tag":563,"props":1257,"children":1258},{"style":753},[1259],{"type":521,"value":1109},{"type":516,"tag":563,"props":1261,"children":1262},{"style":781},[1263],{"type":521,"value":1264},"r",{"type":516,"tag":563,"props":1266,"children":1267},{"style":753},[1268],{"type":521,"value":1269},"];\n",{"type":516,"tag":563,"props":1271,"children":1273},{"class":565,"line":1272},20,[1274],{"type":516,"tag":563,"props":1275,"children":1276},{"style":753},[1277],{"type":521,"value":1278},"};\n",{"type":516,"tag":1280,"props":1281,"children":1282},"style",{},[1283],{"type":521,"value":1284},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":826,"depth":826,"links":1286},[1287,1288],{"id":699,"depth":575,"text":699},{"id":722,"depth":575,"text":722},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1295,1297],{"_path":180,"title":179,"description":1296},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":186,"title":185,"description":1298},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1714058127539]