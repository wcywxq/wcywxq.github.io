[{"data":1,"prerenderedAt":1293},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":500,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1288},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":183,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":182,"description":504,"url":505,"body":506,"_type":1283,"_id":1284,"_source":1285,"_file":1286,"_extension":1287},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":507,"children":508,"toc":1279},"root",[509,516,531,536,541,546,585,590,621,626,657,662,690,696,714,719,1273],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":517,"props":518,"children":519},"ul",{},[520,526],{"type":510,"tag":521,"props":522,"children":523},"li",{},[524],{"type":515,"value":525},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":510,"tag":521,"props":527,"children":528},{},[529],{"type":515,"value":530},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":510,"tag":511,"props":532,"children":533},{},[534],{"type":515,"value":535},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":510,"tag":511,"props":537,"children":538},{},[539],{"type":515,"value":540},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":510,"tag":511,"props":542,"children":543},{},[544],{"type":515,"value":545},"示例 1：",{"type":510,"tag":547,"props":548,"children":551},"pre",{"className":549,"code":550,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[552],{"type":510,"tag":553,"props":554,"children":555},"code",{"__ignoreMap":503},[556,567,576],{"type":510,"tag":557,"props":558,"children":561},"span",{"class":559,"line":560},"line",1,[562],{"type":510,"tag":557,"props":563,"children":564},{},[565],{"type":515,"value":566},"输入：nums = [3,4,5,1,2]\n",{"type":510,"tag":557,"props":568,"children":570},{"class":559,"line":569},2,[571],{"type":510,"tag":557,"props":572,"children":573},{},[574],{"type":515,"value":575},"输出：1\n",{"type":510,"tag":557,"props":577,"children":579},{"class":559,"line":578},3,[580],{"type":510,"tag":557,"props":581,"children":582},{},[583],{"type":515,"value":584},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":510,"tag":511,"props":586,"children":587},{},[588],{"type":515,"value":589},"示例 2：",{"type":510,"tag":547,"props":591,"children":593},{"className":549,"code":592,"language":515,"meta":503,"style":503},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[594],{"type":510,"tag":553,"props":595,"children":596},{"__ignoreMap":503},[597,605,613],{"type":510,"tag":557,"props":598,"children":599},{"class":559,"line":560},[600],{"type":510,"tag":557,"props":601,"children":602},{},[603],{"type":515,"value":604},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":510,"tag":557,"props":606,"children":607},{"class":559,"line":569},[608],{"type":510,"tag":557,"props":609,"children":610},{},[611],{"type":515,"value":612},"输出：0\n",{"type":510,"tag":557,"props":614,"children":615},{"class":559,"line":578},[616],{"type":510,"tag":557,"props":617,"children":618},{},[619],{"type":515,"value":620},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":510,"tag":511,"props":622,"children":623},{},[624],{"type":515,"value":625},"示例 3：",{"type":510,"tag":547,"props":627,"children":629},{"className":549,"code":628,"language":515,"meta":503,"style":503},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[630],{"type":510,"tag":553,"props":631,"children":632},{"__ignoreMap":503},[633,641,649],{"type":510,"tag":557,"props":634,"children":635},{"class":559,"line":560},[636],{"type":510,"tag":557,"props":637,"children":638},{},[639],{"type":515,"value":640},"输入：nums = [11,13,15,17]\n",{"type":510,"tag":557,"props":642,"children":643},{"class":559,"line":569},[644],{"type":510,"tag":557,"props":645,"children":646},{},[647],{"type":515,"value":648},"输出：11\n",{"type":510,"tag":557,"props":650,"children":651},{"class":559,"line":578},[652],{"type":510,"tag":557,"props":653,"children":654},{},[655],{"type":515,"value":656},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":510,"tag":511,"props":658,"children":659},{},[660],{"type":515,"value":661},"提示：",{"type":510,"tag":517,"props":663,"children":664},{},[665,670,675,680,685],{"type":510,"tag":521,"props":666,"children":667},{},[668],{"type":515,"value":669},"n == nums.length",{"type":510,"tag":521,"props":671,"children":672},{},[673],{"type":515,"value":674},"1 \u003C= n \u003C= 5000",{"type":510,"tag":521,"props":676,"children":677},{},[678],{"type":515,"value":679},"-5000 \u003C= nums[i] \u003C= 5000",{"type":510,"tag":521,"props":681,"children":682},{},[683],{"type":515,"value":684},"nums 中的所有整数 互不相同",{"type":510,"tag":521,"props":686,"children":687},{},[688],{"type":515,"value":689},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":510,"tag":691,"props":692,"children":694},"h2",{"id":693},"解题思路",[695],{"type":515,"value":693},{"type":510,"tag":517,"props":697,"children":698},{},[699,704,709],{"type":510,"tag":521,"props":700,"children":701},{},[702],{"type":515,"value":703},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":510,"tag":521,"props":705,"children":706},{},[707],{"type":515,"value":708},"n - 1 一定是蓝色",{"type":510,"tag":521,"props":710,"children":711},{},[712],{"type":515,"value":713},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":510,"tag":691,"props":715,"children":717},{"id":716},"实现",[718],{"type":515,"value":716},{"type":510,"tag":547,"props":720,"children":724},{"className":721,"code":722,"language":723,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[725],{"type":510,"tag":553,"props":726,"children":727},{"__ignoreMap":503},[728,737,779,809,818,864,873,882,921,953,987,1031,1082,1148,1175,1193,1219,1228,1237,1264],{"type":510,"tag":557,"props":729,"children":730},{"class":559,"line":560},[731],{"type":510,"tag":557,"props":732,"children":734},{"style":733},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[735],{"type":515,"value":736},"/**\n",{"type":510,"tag":557,"props":738,"children":739},{"class":559,"line":569},[740,745,751,757,762,768,773],{"type":510,"tag":557,"props":741,"children":742},{"style":733},[743],{"type":515,"value":744}," * ",{"type":510,"tag":557,"props":746,"children":748},{"style":747},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[749],{"type":515,"value":750},"@",{"type":510,"tag":557,"props":752,"children":754},{"style":753},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[755],{"type":515,"value":756},"param",{"type":510,"tag":557,"props":758,"children":759},{"style":747},[760],{"type":515,"value":761}," {",{"type":510,"tag":557,"props":763,"children":765},{"style":764},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[766],{"type":515,"value":767},"number[]",{"type":510,"tag":557,"props":769,"children":770},{"style":747},[771],{"type":515,"value":772},"}",{"type":510,"tag":557,"props":774,"children":776},{"style":775},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[777],{"type":515,"value":778}," nums\n",{"type":510,"tag":557,"props":780,"children":781},{"class":559,"line":578},[782,786,790,795,799,804],{"type":510,"tag":557,"props":783,"children":784},{"style":733},[785],{"type":515,"value":744},{"type":510,"tag":557,"props":787,"children":788},{"style":747},[789],{"type":515,"value":750},{"type":510,"tag":557,"props":791,"children":792},{"style":753},[793],{"type":515,"value":794},"return",{"type":510,"tag":557,"props":796,"children":797},{"style":747},[798],{"type":515,"value":761},{"type":510,"tag":557,"props":800,"children":801},{"style":764},[802],{"type":515,"value":803},"number",{"type":510,"tag":557,"props":805,"children":806},{"style":747},[807],{"type":515,"value":808},"}\n",{"type":510,"tag":557,"props":810,"children":812},{"class":559,"line":811},4,[813],{"type":510,"tag":557,"props":814,"children":815},{"style":733},[816],{"type":515,"value":817}," */\n",{"type":510,"tag":557,"props":819,"children":821},{"class":559,"line":820},5,[822,828,834,839,844,849,854,859],{"type":510,"tag":557,"props":823,"children":825},{"style":824},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[826],{"type":515,"value":827},"var",{"type":510,"tag":557,"props":829,"children":831},{"style":830},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[832],{"type":515,"value":833}," findMin",{"type":510,"tag":557,"props":835,"children":836},{"style":747},[837],{"type":515,"value":838}," =",{"type":510,"tag":557,"props":840,"children":841},{"style":824},[842],{"type":515,"value":843}," function",{"type":510,"tag":557,"props":845,"children":846},{"style":747},[847],{"type":515,"value":848}," (",{"type":510,"tag":557,"props":850,"children":851},{"style":775},[852],{"type":515,"value":853},"nums",{"type":510,"tag":557,"props":855,"children":856},{"style":747},[857],{"type":515,"value":858},")",{"type":510,"tag":557,"props":860,"children":861},{"style":747},[862],{"type":515,"value":863}," {\n",{"type":510,"tag":557,"props":865,"children":867},{"class":559,"line":866},6,[868],{"type":510,"tag":557,"props":869,"children":870},{"style":733},[871],{"type":515,"value":872},"  // [0, n - 2]\n",{"type":510,"tag":557,"props":874,"children":876},{"class":559,"line":875},7,[877],{"type":510,"tag":557,"props":878,"children":879},{"style":733},[880],{"type":515,"value":881},"  // (-1, n - 1) 开区间写法\n",{"type":510,"tag":557,"props":883,"children":885},{"class":559,"line":884},8,[886,891,896,900,905,910,916],{"type":510,"tag":557,"props":887,"children":888},{"style":824},[889],{"type":515,"value":890},"  let",{"type":510,"tag":557,"props":892,"children":893},{"style":775},[894],{"type":515,"value":895}," len",{"type":510,"tag":557,"props":897,"children":898},{"style":747},[899],{"type":515,"value":838},{"type":510,"tag":557,"props":901,"children":902},{"style":775},[903],{"type":515,"value":904}," nums",{"type":510,"tag":557,"props":906,"children":907},{"style":747},[908],{"type":515,"value":909},".",{"type":510,"tag":557,"props":911,"children":913},{"style":912},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[914],{"type":515,"value":915},"length",{"type":510,"tag":557,"props":917,"children":918},{"style":747},[919],{"type":515,"value":920},";\n",{"type":510,"tag":557,"props":922,"children":924},{"class":559,"line":923},9,[925,929,934,938,943,949],{"type":510,"tag":557,"props":926,"children":927},{"style":824},[928],{"type":515,"value":890},{"type":510,"tag":557,"props":930,"children":931},{"style":775},[932],{"type":515,"value":933}," l",{"type":510,"tag":557,"props":935,"children":936},{"style":747},[937],{"type":515,"value":838},{"type":510,"tag":557,"props":939,"children":940},{"style":824},[941],{"type":515,"value":942}," -",{"type":510,"tag":557,"props":944,"children":946},{"style":945},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[947],{"type":515,"value":948},"1",{"type":510,"tag":557,"props":950,"children":951},{"style":747},[952],{"type":515,"value":920},{"type":510,"tag":557,"props":954,"children":956},{"class":559,"line":955},10,[957,961,966,970,974,978,983],{"type":510,"tag":557,"props":958,"children":959},{"style":824},[960],{"type":515,"value":890},{"type":510,"tag":557,"props":962,"children":963},{"style":775},[964],{"type":515,"value":965}," r",{"type":510,"tag":557,"props":967,"children":968},{"style":747},[969],{"type":515,"value":838},{"type":510,"tag":557,"props":971,"children":972},{"style":775},[973],{"type":515,"value":895},{"type":510,"tag":557,"props":975,"children":976},{"style":824},[977],{"type":515,"value":942},{"type":510,"tag":557,"props":979,"children":980},{"style":945},[981],{"type":515,"value":982}," 1",{"type":510,"tag":557,"props":984,"children":985},{"style":747},[986],{"type":515,"value":920},{"type":510,"tag":557,"props":988,"children":990},{"class":559,"line":989},11,[991,996,1000,1005,1010,1014,1019,1023,1027],{"type":510,"tag":557,"props":992,"children":993},{"style":753},[994],{"type":515,"value":995},"  while",{"type":510,"tag":557,"props":997,"children":998},{"style":747},[999],{"type":515,"value":848},{"type":510,"tag":557,"props":1001,"children":1002},{"style":775},[1003],{"type":515,"value":1004},"l",{"type":510,"tag":557,"props":1006,"children":1007},{"style":824},[1008],{"type":515,"value":1009}," +",{"type":510,"tag":557,"props":1011,"children":1012},{"style":945},[1013],{"type":515,"value":982},{"type":510,"tag":557,"props":1015,"children":1016},{"style":747},[1017],{"type":515,"value":1018}," \u003C",{"type":510,"tag":557,"props":1020,"children":1021},{"style":775},[1022],{"type":515,"value":965},{"type":510,"tag":557,"props":1024,"children":1025},{"style":747},[1026],{"type":515,"value":858},{"type":510,"tag":557,"props":1028,"children":1029},{"style":747},[1030],{"type":515,"value":863},{"type":510,"tag":557,"props":1032,"children":1034},{"class":559,"line":1033},12,[1035,1040,1045,1049,1053,1057,1061,1065,1069,1074,1078],{"type":510,"tag":557,"props":1036,"children":1037},{"style":824},[1038],{"type":515,"value":1039},"    let",{"type":510,"tag":557,"props":1041,"children":1042},{"style":775},[1043],{"type":515,"value":1044}," mid",{"type":510,"tag":557,"props":1046,"children":1047},{"style":747},[1048],{"type":515,"value":838},{"type":510,"tag":557,"props":1050,"children":1051},{"style":747},[1052],{"type":515,"value":848},{"type":510,"tag":557,"props":1054,"children":1055},{"style":775},[1056],{"type":515,"value":1004},{"type":510,"tag":557,"props":1058,"children":1059},{"style":824},[1060],{"type":515,"value":1009},{"type":510,"tag":557,"props":1062,"children":1063},{"style":775},[1064],{"type":515,"value":965},{"type":510,"tag":557,"props":1066,"children":1067},{"style":747},[1068],{"type":515,"value":858},{"type":510,"tag":557,"props":1070,"children":1071},{"style":824},[1072],{"type":515,"value":1073}," >>",{"type":510,"tag":557,"props":1075,"children":1076},{"style":945},[1077],{"type":515,"value":982},{"type":510,"tag":557,"props":1079,"children":1080},{"style":747},[1081],{"type":515,"value":920},{"type":510,"tag":557,"props":1083,"children":1085},{"class":559,"line":1084},13,[1086,1091,1095,1099,1104,1109,1114,1118,1122,1126,1131,1135,1139,1144],{"type":510,"tag":557,"props":1087,"children":1088},{"style":753},[1089],{"type":515,"value":1090},"    if",{"type":510,"tag":557,"props":1092,"children":1093},{"style":747},[1094],{"type":515,"value":848},{"type":510,"tag":557,"props":1096,"children":1097},{"style":775},[1098],{"type":515,"value":853},{"type":510,"tag":557,"props":1100,"children":1101},{"style":747},[1102],{"type":515,"value":1103},"[",{"type":510,"tag":557,"props":1105,"children":1106},{"style":775},[1107],{"type":515,"value":1108},"mid",{"type":510,"tag":557,"props":1110,"children":1111},{"style":747},[1112],{"type":515,"value":1113},"]",{"type":510,"tag":557,"props":1115,"children":1116},{"style":747},[1117],{"type":515,"value":1018},{"type":510,"tag":557,"props":1119,"children":1120},{"style":775},[1121],{"type":515,"value":904},{"type":510,"tag":557,"props":1123,"children":1124},{"style":747},[1125],{"type":515,"value":1103},{"type":510,"tag":557,"props":1127,"children":1128},{"style":775},[1129],{"type":515,"value":1130},"len",{"type":510,"tag":557,"props":1132,"children":1133},{"style":824},[1134],{"type":515,"value":942},{"type":510,"tag":557,"props":1136,"children":1137},{"style":945},[1138],{"type":515,"value":982},{"type":510,"tag":557,"props":1140,"children":1141},{"style":747},[1142],{"type":515,"value":1143},"])",{"type":510,"tag":557,"props":1145,"children":1146},{"style":747},[1147],{"type":515,"value":863},{"type":510,"tag":557,"props":1149,"children":1151},{"class":559,"line":1150},14,[1152,1157,1161,1165,1170],{"type":510,"tag":557,"props":1153,"children":1154},{"style":775},[1155],{"type":515,"value":1156},"      r",{"type":510,"tag":557,"props":1158,"children":1159},{"style":747},[1160],{"type":515,"value":838},{"type":510,"tag":557,"props":1162,"children":1163},{"style":775},[1164],{"type":515,"value":1044},{"type":510,"tag":557,"props":1166,"children":1167},{"style":747},[1168],{"type":515,"value":1169},";",{"type":510,"tag":557,"props":1171,"children":1172},{"style":733},[1173],{"type":515,"value":1174}," // 染蓝色\n",{"type":510,"tag":557,"props":1176,"children":1178},{"class":559,"line":1177},15,[1179,1184,1189],{"type":510,"tag":557,"props":1180,"children":1181},{"style":747},[1182],{"type":515,"value":1183},"    }",{"type":510,"tag":557,"props":1185,"children":1186},{"style":753},[1187],{"type":515,"value":1188}," else",{"type":510,"tag":557,"props":1190,"children":1191},{"style":747},[1192],{"type":515,"value":863},{"type":510,"tag":557,"props":1194,"children":1196},{"class":559,"line":1195},16,[1197,1202,1206,1210,1214],{"type":510,"tag":557,"props":1198,"children":1199},{"style":775},[1200],{"type":515,"value":1201},"      l",{"type":510,"tag":557,"props":1203,"children":1204},{"style":747},[1205],{"type":515,"value":838},{"type":510,"tag":557,"props":1207,"children":1208},{"style":775},[1209],{"type":515,"value":1044},{"type":510,"tag":557,"props":1211,"children":1212},{"style":747},[1213],{"type":515,"value":1169},{"type":510,"tag":557,"props":1215,"children":1216},{"style":733},[1217],{"type":515,"value":1218}," // 染红色\n",{"type":510,"tag":557,"props":1220,"children":1222},{"class":559,"line":1221},17,[1223],{"type":510,"tag":557,"props":1224,"children":1225},{"style":747},[1226],{"type":515,"value":1227},"    }\n",{"type":510,"tag":557,"props":1229,"children":1231},{"class":559,"line":1230},18,[1232],{"type":510,"tag":557,"props":1233,"children":1234},{"style":747},[1235],{"type":515,"value":1236},"  }\n",{"type":510,"tag":557,"props":1238,"children":1240},{"class":559,"line":1239},19,[1241,1246,1250,1254,1259],{"type":510,"tag":557,"props":1242,"children":1243},{"style":753},[1244],{"type":515,"value":1245},"  return",{"type":510,"tag":557,"props":1247,"children":1248},{"style":775},[1249],{"type":515,"value":904},{"type":510,"tag":557,"props":1251,"children":1252},{"style":747},[1253],{"type":515,"value":1103},{"type":510,"tag":557,"props":1255,"children":1256},{"style":775},[1257],{"type":515,"value":1258},"r",{"type":510,"tag":557,"props":1260,"children":1261},{"style":747},[1262],{"type":515,"value":1263},"];\n",{"type":510,"tag":557,"props":1265,"children":1267},{"class":559,"line":1266},20,[1268],{"type":510,"tag":557,"props":1269,"children":1270},{"style":747},[1271],{"type":515,"value":1272},"};\n",{"type":510,"tag":1274,"props":1275,"children":1276},"style",{},[1277],{"type":515,"value":1278},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":820,"depth":820,"links":1280},[1281,1282],{"id":693,"depth":569,"text":693},{"id":716,"depth":569,"text":716},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1289,1291],{"_path":180,"title":179,"description":1290},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":186,"title":185,"description":1292},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1714054338194]