[{"data":1,"prerenderedAt":1220},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":452,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1215},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":174,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":173,"description":456,"url":457,"body":458,"_type":1210,"_id":1211,"_source":1212,"_file":1213,"_extension":1214},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":459,"children":460,"toc":1206},"root",[461,468,483,488,493,498,537,542,573,578,609,614,642,648,666,671,1200],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":469,"props":470,"children":471},"ul",{},[472,478],{"type":462,"tag":473,"props":474,"children":475},"li",{},[476],{"type":467,"value":477},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":462,"tag":473,"props":479,"children":480},{},[481],{"type":467,"value":482},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":462,"tag":463,"props":484,"children":485},{},[486],{"type":467,"value":487},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":462,"tag":463,"props":489,"children":490},{},[491],{"type":467,"value":492},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":462,"tag":463,"props":494,"children":495},{},[496],{"type":467,"value":497},"示例 1：",{"type":462,"tag":499,"props":500,"children":503},"pre",{"className":501,"code":502,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[504],{"type":462,"tag":505,"props":506,"children":507},"code",{"__ignoreMap":455},[508,519,528],{"type":462,"tag":509,"props":510,"children":513},"span",{"class":511,"line":512},"line",1,[514],{"type":462,"tag":509,"props":515,"children":516},{},[517],{"type":467,"value":518},"输入：nums = [3,4,5,1,2]\n",{"type":462,"tag":509,"props":520,"children":522},{"class":511,"line":521},2,[523],{"type":462,"tag":509,"props":524,"children":525},{},[526],{"type":467,"value":527},"输出：1\n",{"type":462,"tag":509,"props":529,"children":531},{"class":511,"line":530},3,[532],{"type":462,"tag":509,"props":533,"children":534},{},[535],{"type":467,"value":536},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":462,"tag":463,"props":538,"children":539},{},[540],{"type":467,"value":541},"示例 2：",{"type":462,"tag":499,"props":543,"children":545},{"className":501,"code":544,"language":467,"meta":455,"style":455},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[546],{"type":462,"tag":505,"props":547,"children":548},{"__ignoreMap":455},[549,557,565],{"type":462,"tag":509,"props":550,"children":551},{"class":511,"line":512},[552],{"type":462,"tag":509,"props":553,"children":554},{},[555],{"type":467,"value":556},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":462,"tag":509,"props":558,"children":559},{"class":511,"line":521},[560],{"type":462,"tag":509,"props":561,"children":562},{},[563],{"type":467,"value":564},"输出：0\n",{"type":462,"tag":509,"props":566,"children":567},{"class":511,"line":530},[568],{"type":462,"tag":509,"props":569,"children":570},{},[571],{"type":467,"value":572},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":462,"tag":463,"props":574,"children":575},{},[576],{"type":467,"value":577},"示例 3：",{"type":462,"tag":499,"props":579,"children":581},{"className":501,"code":580,"language":467,"meta":455,"style":455},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[582],{"type":462,"tag":505,"props":583,"children":584},{"__ignoreMap":455},[585,593,601],{"type":462,"tag":509,"props":586,"children":587},{"class":511,"line":512},[588],{"type":462,"tag":509,"props":589,"children":590},{},[591],{"type":467,"value":592},"输入：nums = [11,13,15,17]\n",{"type":462,"tag":509,"props":594,"children":595},{"class":511,"line":521},[596],{"type":462,"tag":509,"props":597,"children":598},{},[599],{"type":467,"value":600},"输出：11\n",{"type":462,"tag":509,"props":602,"children":603},{"class":511,"line":530},[604],{"type":462,"tag":509,"props":605,"children":606},{},[607],{"type":467,"value":608},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":462,"tag":463,"props":610,"children":611},{},[612],{"type":467,"value":613},"提示：",{"type":462,"tag":469,"props":615,"children":616},{},[617,622,627,632,637],{"type":462,"tag":473,"props":618,"children":619},{},[620],{"type":467,"value":621},"n == nums.length",{"type":462,"tag":473,"props":623,"children":624},{},[625],{"type":467,"value":626},"1 \u003C= n \u003C= 5000",{"type":462,"tag":473,"props":628,"children":629},{},[630],{"type":467,"value":631},"-5000 \u003C= nums[i] \u003C= 5000",{"type":462,"tag":473,"props":633,"children":634},{},[635],{"type":467,"value":636},"nums 中的所有整数 互不相同",{"type":462,"tag":473,"props":638,"children":639},{},[640],{"type":467,"value":641},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":462,"tag":643,"props":644,"children":646},"h2",{"id":645},"解题思路",[647],{"type":467,"value":645},{"type":462,"tag":469,"props":649,"children":650},{},[651,656,661],{"type":462,"tag":473,"props":652,"children":653},{},[654],{"type":467,"value":655},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":462,"tag":473,"props":657,"children":658},{},[659],{"type":467,"value":660},"n - 1 一定是蓝色",{"type":462,"tag":473,"props":662,"children":663},{},[664],{"type":467,"value":665},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":462,"tag":643,"props":667,"children":669},{"id":668},"实现",[670],{"type":467,"value":668},{"type":462,"tag":499,"props":672,"children":676},{"className":673,"code":674,"language":675,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[677],{"type":462,"tag":505,"props":678,"children":679},{"__ignoreMap":455},[680,689,715,732,741,785,794,803,844,876,910,951,1003,1066,1093,1112,1138,1147,1156,1187],{"type":462,"tag":509,"props":681,"children":682},{"class":511,"line":512},[683],{"type":462,"tag":509,"props":684,"children":686},{"style":685},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[687],{"type":467,"value":688},"/**\n",{"type":462,"tag":509,"props":690,"children":691},{"class":511,"line":521},[692,697,703,709],{"type":462,"tag":509,"props":693,"children":694},{"style":685},[695],{"type":467,"value":696}," * ",{"type":462,"tag":509,"props":698,"children":700},{"style":699},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[701],{"type":467,"value":702},"@param",{"type":462,"tag":509,"props":704,"children":706},{"style":705},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[707],{"type":467,"value":708}," {number[]}",{"type":462,"tag":509,"props":710,"children":712},{"style":711},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[713],{"type":467,"value":714}," nums\n",{"type":462,"tag":509,"props":716,"children":717},{"class":511,"line":530},[718,722,727],{"type":462,"tag":509,"props":719,"children":720},{"style":685},[721],{"type":467,"value":696},{"type":462,"tag":509,"props":723,"children":724},{"style":699},[725],{"type":467,"value":726},"@return",{"type":462,"tag":509,"props":728,"children":729},{"style":705},[730],{"type":467,"value":731}," {number}\n",{"type":462,"tag":509,"props":733,"children":735},{"class":511,"line":734},4,[736],{"type":462,"tag":509,"props":737,"children":738},{"style":685},[739],{"type":467,"value":740}," */\n",{"type":462,"tag":509,"props":742,"children":744},{"class":511,"line":743},5,[745,751,757,763,768,774,780],{"type":462,"tag":509,"props":746,"children":748},{"style":747},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[749],{"type":467,"value":750},"var",{"type":462,"tag":509,"props":752,"children":754},{"style":753},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[755],{"type":467,"value":756}," findMin",{"type":462,"tag":509,"props":758,"children":760},{"style":759},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[761],{"type":467,"value":762}," =",{"type":462,"tag":509,"props":764,"children":765},{"style":747},[766],{"type":467,"value":767}," function",{"type":462,"tag":509,"props":769,"children":771},{"style":770},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[772],{"type":467,"value":773}," (",{"type":462,"tag":509,"props":775,"children":777},{"style":776},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[778],{"type":467,"value":779},"nums",{"type":462,"tag":509,"props":781,"children":782},{"style":770},[783],{"type":467,"value":784},") {\n",{"type":462,"tag":509,"props":786,"children":788},{"class":511,"line":787},6,[789],{"type":462,"tag":509,"props":790,"children":791},{"style":685},[792],{"type":467,"value":793},"  // [0, n - 2]\n",{"type":462,"tag":509,"props":795,"children":797},{"class":511,"line":796},7,[798],{"type":462,"tag":509,"props":799,"children":800},{"style":685},[801],{"type":467,"value":802},"  // (-1, n - 1) 开区间写法\n",{"type":462,"tag":509,"props":804,"children":806},{"class":511,"line":805},8,[807,812,818,822,827,833,838],{"type":462,"tag":509,"props":808,"children":809},{"style":747},[810],{"type":467,"value":811},"  let",{"type":462,"tag":509,"props":813,"children":815},{"style":814},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[816],{"type":467,"value":817}," len",{"type":462,"tag":509,"props":819,"children":820},{"style":759},[821],{"type":467,"value":762},{"type":462,"tag":509,"props":823,"children":824},{"style":814},[825],{"type":467,"value":826}," nums",{"type":462,"tag":509,"props":828,"children":830},{"style":829},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[831],{"type":467,"value":832},".",{"type":462,"tag":509,"props":834,"children":835},{"style":770},[836],{"type":467,"value":837},"length",{"type":462,"tag":509,"props":839,"children":841},{"style":840},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[842],{"type":467,"value":843},";\n",{"type":462,"tag":509,"props":845,"children":847},{"class":511,"line":846},9,[848,852,857,861,866,872],{"type":462,"tag":509,"props":849,"children":850},{"style":747},[851],{"type":467,"value":811},{"type":462,"tag":509,"props":853,"children":854},{"style":814},[855],{"type":467,"value":856}," l",{"type":462,"tag":509,"props":858,"children":859},{"style":759},[860],{"type":467,"value":762},{"type":462,"tag":509,"props":862,"children":863},{"style":759},[864],{"type":467,"value":865}," -",{"type":462,"tag":509,"props":867,"children":869},{"style":868},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[870],{"type":467,"value":871},"1",{"type":462,"tag":509,"props":873,"children":874},{"style":840},[875],{"type":467,"value":843},{"type":462,"tag":509,"props":877,"children":879},{"class":511,"line":878},10,[880,884,889,893,897,901,906],{"type":462,"tag":509,"props":881,"children":882},{"style":747},[883],{"type":467,"value":811},{"type":462,"tag":509,"props":885,"children":886},{"style":814},[887],{"type":467,"value":888}," r",{"type":462,"tag":509,"props":890,"children":891},{"style":759},[892],{"type":467,"value":762},{"type":462,"tag":509,"props":894,"children":895},{"style":814},[896],{"type":467,"value":817},{"type":462,"tag":509,"props":898,"children":899},{"style":759},[900],{"type":467,"value":865},{"type":462,"tag":509,"props":902,"children":903},{"style":868},[904],{"type":467,"value":905}," 1",{"type":462,"tag":509,"props":907,"children":908},{"style":840},[909],{"type":467,"value":843},{"type":462,"tag":509,"props":911,"children":913},{"class":511,"line":912},11,[914,920,924,929,934,938,943,947],{"type":462,"tag":509,"props":915,"children":917},{"style":916},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[918],{"type":467,"value":919},"  while",{"type":462,"tag":509,"props":921,"children":922},{"style":770},[923],{"type":467,"value":773},{"type":462,"tag":509,"props":925,"children":926},{"style":814},[927],{"type":467,"value":928},"l",{"type":462,"tag":509,"props":930,"children":931},{"style":759},[932],{"type":467,"value":933}," +",{"type":462,"tag":509,"props":935,"children":936},{"style":868},[937],{"type":467,"value":905},{"type":462,"tag":509,"props":939,"children":940},{"style":759},[941],{"type":467,"value":942}," \u003C",{"type":462,"tag":509,"props":944,"children":945},{"style":814},[946],{"type":467,"value":888},{"type":462,"tag":509,"props":948,"children":949},{"style":770},[950],{"type":467,"value":784},{"type":462,"tag":509,"props":952,"children":954},{"class":511,"line":953},12,[955,960,965,969,973,977,981,985,990,995,999],{"type":462,"tag":509,"props":956,"children":957},{"style":747},[958],{"type":467,"value":959},"    let",{"type":462,"tag":509,"props":961,"children":962},{"style":814},[963],{"type":467,"value":964}," mid",{"type":462,"tag":509,"props":966,"children":967},{"style":759},[968],{"type":467,"value":762},{"type":462,"tag":509,"props":970,"children":971},{"style":770},[972],{"type":467,"value":773},{"type":462,"tag":509,"props":974,"children":975},{"style":814},[976],{"type":467,"value":928},{"type":462,"tag":509,"props":978,"children":979},{"style":759},[980],{"type":467,"value":933},{"type":462,"tag":509,"props":982,"children":983},{"style":814},[984],{"type":467,"value":888},{"type":462,"tag":509,"props":986,"children":987},{"style":770},[988],{"type":467,"value":989},") ",{"type":462,"tag":509,"props":991,"children":992},{"style":759},[993],{"type":467,"value":994},">>",{"type":462,"tag":509,"props":996,"children":997},{"style":868},[998],{"type":467,"value":905},{"type":462,"tag":509,"props":1000,"children":1001},{"style":840},[1002],{"type":467,"value":843},{"type":462,"tag":509,"props":1004,"children":1006},{"class":511,"line":1005},13,[1007,1012,1016,1020,1025,1030,1035,1040,1044,1048,1053,1057,1061],{"type":462,"tag":509,"props":1008,"children":1009},{"style":916},[1010],{"type":467,"value":1011},"    if",{"type":462,"tag":509,"props":1013,"children":1014},{"style":770},[1015],{"type":467,"value":773},{"type":462,"tag":509,"props":1017,"children":1018},{"style":814},[1019],{"type":467,"value":779},{"type":462,"tag":509,"props":1021,"children":1022},{"style":770},[1023],{"type":467,"value":1024},"[",{"type":462,"tag":509,"props":1026,"children":1027},{"style":814},[1028],{"type":467,"value":1029},"mid",{"type":462,"tag":509,"props":1031,"children":1032},{"style":770},[1033],{"type":467,"value":1034},"] ",{"type":462,"tag":509,"props":1036,"children":1037},{"style":759},[1038],{"type":467,"value":1039},"\u003C",{"type":462,"tag":509,"props":1041,"children":1042},{"style":814},[1043],{"type":467,"value":826},{"type":462,"tag":509,"props":1045,"children":1046},{"style":770},[1047],{"type":467,"value":1024},{"type":462,"tag":509,"props":1049,"children":1050},{"style":814},[1051],{"type":467,"value":1052},"len",{"type":462,"tag":509,"props":1054,"children":1055},{"style":759},[1056],{"type":467,"value":865},{"type":462,"tag":509,"props":1058,"children":1059},{"style":868},[1060],{"type":467,"value":905},{"type":462,"tag":509,"props":1062,"children":1063},{"style":770},[1064],{"type":467,"value":1065},"]) {\n",{"type":462,"tag":509,"props":1067,"children":1069},{"class":511,"line":1068},14,[1070,1075,1079,1083,1088],{"type":462,"tag":509,"props":1071,"children":1072},{"style":814},[1073],{"type":467,"value":1074},"      r",{"type":462,"tag":509,"props":1076,"children":1077},{"style":759},[1078],{"type":467,"value":762},{"type":462,"tag":509,"props":1080,"children":1081},{"style":814},[1082],{"type":467,"value":964},{"type":462,"tag":509,"props":1084,"children":1085},{"style":840},[1086],{"type":467,"value":1087},";",{"type":462,"tag":509,"props":1089,"children":1090},{"style":685},[1091],{"type":467,"value":1092}," // 染蓝色\n",{"type":462,"tag":509,"props":1094,"children":1096},{"class":511,"line":1095},15,[1097,1102,1107],{"type":462,"tag":509,"props":1098,"children":1099},{"style":770},[1100],{"type":467,"value":1101},"    } ",{"type":462,"tag":509,"props":1103,"children":1104},{"style":916},[1105],{"type":467,"value":1106},"else",{"type":462,"tag":509,"props":1108,"children":1109},{"style":770},[1110],{"type":467,"value":1111}," {\n",{"type":462,"tag":509,"props":1113,"children":1115},{"class":511,"line":1114},16,[1116,1121,1125,1129,1133],{"type":462,"tag":509,"props":1117,"children":1118},{"style":814},[1119],{"type":467,"value":1120},"      l",{"type":462,"tag":509,"props":1122,"children":1123},{"style":759},[1124],{"type":467,"value":762},{"type":462,"tag":509,"props":1126,"children":1127},{"style":814},[1128],{"type":467,"value":964},{"type":462,"tag":509,"props":1130,"children":1131},{"style":840},[1132],{"type":467,"value":1087},{"type":462,"tag":509,"props":1134,"children":1135},{"style":685},[1136],{"type":467,"value":1137}," // 染红色\n",{"type":462,"tag":509,"props":1139,"children":1141},{"class":511,"line":1140},17,[1142],{"type":462,"tag":509,"props":1143,"children":1144},{"style":770},[1145],{"type":467,"value":1146},"    }\n",{"type":462,"tag":509,"props":1148,"children":1150},{"class":511,"line":1149},18,[1151],{"type":462,"tag":509,"props":1152,"children":1153},{"style":770},[1154],{"type":467,"value":1155},"  }\n",{"type":462,"tag":509,"props":1157,"children":1159},{"class":511,"line":1158},19,[1160,1165,1169,1173,1178,1183],{"type":462,"tag":509,"props":1161,"children":1162},{"style":916},[1163],{"type":467,"value":1164},"  return",{"type":462,"tag":509,"props":1166,"children":1167},{"style":814},[1168],{"type":467,"value":826},{"type":462,"tag":509,"props":1170,"children":1171},{"style":770},[1172],{"type":467,"value":1024},{"type":462,"tag":509,"props":1174,"children":1175},{"style":814},[1176],{"type":467,"value":1177},"r",{"type":462,"tag":509,"props":1179,"children":1180},{"style":770},[1181],{"type":467,"value":1182},"]",{"type":462,"tag":509,"props":1184,"children":1185},{"style":840},[1186],{"type":467,"value":843},{"type":462,"tag":509,"props":1188,"children":1190},{"class":511,"line":1189},20,[1191,1196],{"type":462,"tag":509,"props":1192,"children":1193},{"style":770},[1194],{"type":467,"value":1195},"}",{"type":462,"tag":509,"props":1197,"children":1198},{"style":840},[1199],{"type":467,"value":843},{"type":462,"tag":1201,"props":1202,"children":1203},"style",{},[1204],{"type":467,"value":1205},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":743,"depth":743,"links":1207},[1208,1209],{"id":645,"depth":521,"text":645},{"id":668,"depth":521,"text":668},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1216,1218],{"_path":171,"title":170,"description":1217},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":177,"title":176,"description":1219},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1713457421899]