[{"data":1,"prerenderedAt":1317},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":524,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1312},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":183,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":182,"description":528,"url":529,"body":530,"_type":1307,"_id":1308,"_source":1309,"_file":1310,"_extension":1311},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":531,"children":532,"toc":1303},"root",[533,540,555,560,565,570,609,614,645,650,681,686,714,720,738,743,1297],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":541,"props":542,"children":543},"ul",{},[544,550],{"type":534,"tag":545,"props":546,"children":547},"li",{},[548],{"type":539,"value":549},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":534,"tag":545,"props":551,"children":552},{},[553],{"type":539,"value":554},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":534,"tag":535,"props":556,"children":557},{},[558],{"type":539,"value":559},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":534,"tag":535,"props":561,"children":562},{},[563],{"type":539,"value":564},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":534,"tag":535,"props":566,"children":567},{},[568],{"type":539,"value":569},"示例 1：",{"type":534,"tag":571,"props":572,"children":575},"pre",{"className":573,"code":574,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[576],{"type":534,"tag":577,"props":578,"children":579},"code",{"__ignoreMap":527},[580,591,600],{"type":534,"tag":581,"props":582,"children":585},"span",{"class":583,"line":584},"line",1,[586],{"type":534,"tag":581,"props":587,"children":588},{},[589],{"type":539,"value":590},"输入：nums = [3,4,5,1,2]\n",{"type":534,"tag":581,"props":592,"children":594},{"class":583,"line":593},2,[595],{"type":534,"tag":581,"props":596,"children":597},{},[598],{"type":539,"value":599},"输出：1\n",{"type":534,"tag":581,"props":601,"children":603},{"class":583,"line":602},3,[604],{"type":534,"tag":581,"props":605,"children":606},{},[607],{"type":539,"value":608},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":534,"tag":535,"props":610,"children":611},{},[612],{"type":539,"value":613},"示例 2：",{"type":534,"tag":571,"props":615,"children":617},{"className":573,"code":616,"language":539,"meta":527,"style":527},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[618],{"type":534,"tag":577,"props":619,"children":620},{"__ignoreMap":527},[621,629,637],{"type":534,"tag":581,"props":622,"children":623},{"class":583,"line":584},[624],{"type":534,"tag":581,"props":625,"children":626},{},[627],{"type":539,"value":628},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":534,"tag":581,"props":630,"children":631},{"class":583,"line":593},[632],{"type":534,"tag":581,"props":633,"children":634},{},[635],{"type":539,"value":636},"输出：0\n",{"type":534,"tag":581,"props":638,"children":639},{"class":583,"line":602},[640],{"type":534,"tag":581,"props":641,"children":642},{},[643],{"type":539,"value":644},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":534,"tag":535,"props":646,"children":647},{},[648],{"type":539,"value":649},"示例 3：",{"type":534,"tag":571,"props":651,"children":653},{"className":573,"code":652,"language":539,"meta":527,"style":527},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[654],{"type":534,"tag":577,"props":655,"children":656},{"__ignoreMap":527},[657,665,673],{"type":534,"tag":581,"props":658,"children":659},{"class":583,"line":584},[660],{"type":534,"tag":581,"props":661,"children":662},{},[663],{"type":539,"value":664},"输入：nums = [11,13,15,17]\n",{"type":534,"tag":581,"props":666,"children":667},{"class":583,"line":593},[668],{"type":534,"tag":581,"props":669,"children":670},{},[671],{"type":539,"value":672},"输出：11\n",{"type":534,"tag":581,"props":674,"children":675},{"class":583,"line":602},[676],{"type":534,"tag":581,"props":677,"children":678},{},[679],{"type":539,"value":680},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":534,"tag":535,"props":682,"children":683},{},[684],{"type":539,"value":685},"提示：",{"type":534,"tag":541,"props":687,"children":688},{},[689,694,699,704,709],{"type":534,"tag":545,"props":690,"children":691},{},[692],{"type":539,"value":693},"n == nums.length",{"type":534,"tag":545,"props":695,"children":696},{},[697],{"type":539,"value":698},"1 \u003C= n \u003C= 5000",{"type":534,"tag":545,"props":700,"children":701},{},[702],{"type":539,"value":703},"-5000 \u003C= nums[i] \u003C= 5000",{"type":534,"tag":545,"props":705,"children":706},{},[707],{"type":539,"value":708},"nums 中的所有整数 互不相同",{"type":534,"tag":545,"props":710,"children":711},{},[712],{"type":539,"value":713},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":534,"tag":715,"props":716,"children":718},"h2",{"id":717},"解题思路",[719],{"type":539,"value":717},{"type":534,"tag":541,"props":721,"children":722},{},[723,728,733],{"type":534,"tag":545,"props":724,"children":725},{},[726],{"type":539,"value":727},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":534,"tag":545,"props":729,"children":730},{},[731],{"type":539,"value":732},"n - 1 一定是蓝色",{"type":534,"tag":545,"props":734,"children":735},{},[736],{"type":539,"value":737},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":534,"tag":715,"props":739,"children":741},{"id":740},"实现",[742],{"type":539,"value":740},{"type":534,"tag":571,"props":744,"children":748},{"className":745,"code":746,"language":747,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[749],{"type":534,"tag":577,"props":750,"children":751},{"__ignoreMap":527},[752,761,803,833,842,888,897,906,945,977,1011,1055,1106,1172,1199,1217,1243,1252,1261,1288],{"type":534,"tag":581,"props":753,"children":754},{"class":583,"line":584},[755],{"type":534,"tag":581,"props":756,"children":758},{"style":757},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[759],{"type":539,"value":760},"/**\n",{"type":534,"tag":581,"props":762,"children":763},{"class":583,"line":593},[764,769,775,781,786,792,797],{"type":534,"tag":581,"props":765,"children":766},{"style":757},[767],{"type":539,"value":768}," * ",{"type":534,"tag":581,"props":770,"children":772},{"style":771},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[773],{"type":539,"value":774},"@",{"type":534,"tag":581,"props":776,"children":778},{"style":777},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[779],{"type":539,"value":780},"param",{"type":534,"tag":581,"props":782,"children":783},{"style":771},[784],{"type":539,"value":785}," {",{"type":534,"tag":581,"props":787,"children":789},{"style":788},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[790],{"type":539,"value":791},"number[]",{"type":534,"tag":581,"props":793,"children":794},{"style":771},[795],{"type":539,"value":796},"}",{"type":534,"tag":581,"props":798,"children":800},{"style":799},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[801],{"type":539,"value":802}," nums\n",{"type":534,"tag":581,"props":804,"children":805},{"class":583,"line":602},[806,810,814,819,823,828],{"type":534,"tag":581,"props":807,"children":808},{"style":757},[809],{"type":539,"value":768},{"type":534,"tag":581,"props":811,"children":812},{"style":771},[813],{"type":539,"value":774},{"type":534,"tag":581,"props":815,"children":816},{"style":777},[817],{"type":539,"value":818},"return",{"type":534,"tag":581,"props":820,"children":821},{"style":771},[822],{"type":539,"value":785},{"type":534,"tag":581,"props":824,"children":825},{"style":788},[826],{"type":539,"value":827},"number",{"type":534,"tag":581,"props":829,"children":830},{"style":771},[831],{"type":539,"value":832},"}\n",{"type":534,"tag":581,"props":834,"children":836},{"class":583,"line":835},4,[837],{"type":534,"tag":581,"props":838,"children":839},{"style":757},[840],{"type":539,"value":841}," */\n",{"type":534,"tag":581,"props":843,"children":845},{"class":583,"line":844},5,[846,852,858,863,868,873,878,883],{"type":534,"tag":581,"props":847,"children":849},{"style":848},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[850],{"type":539,"value":851},"var",{"type":534,"tag":581,"props":853,"children":855},{"style":854},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[856],{"type":539,"value":857}," findMin",{"type":534,"tag":581,"props":859,"children":860},{"style":771},[861],{"type":539,"value":862}," =",{"type":534,"tag":581,"props":864,"children":865},{"style":848},[866],{"type":539,"value":867}," function",{"type":534,"tag":581,"props":869,"children":870},{"style":771},[871],{"type":539,"value":872}," (",{"type":534,"tag":581,"props":874,"children":875},{"style":799},[876],{"type":539,"value":877},"nums",{"type":534,"tag":581,"props":879,"children":880},{"style":771},[881],{"type":539,"value":882},")",{"type":534,"tag":581,"props":884,"children":885},{"style":771},[886],{"type":539,"value":887}," {\n",{"type":534,"tag":581,"props":889,"children":891},{"class":583,"line":890},6,[892],{"type":534,"tag":581,"props":893,"children":894},{"style":757},[895],{"type":539,"value":896},"  // [0, n - 2]\n",{"type":534,"tag":581,"props":898,"children":900},{"class":583,"line":899},7,[901],{"type":534,"tag":581,"props":902,"children":903},{"style":757},[904],{"type":539,"value":905},"  // (-1, n - 1) 开区间写法\n",{"type":534,"tag":581,"props":907,"children":909},{"class":583,"line":908},8,[910,915,920,924,929,934,940],{"type":534,"tag":581,"props":911,"children":912},{"style":848},[913],{"type":539,"value":914},"  let",{"type":534,"tag":581,"props":916,"children":917},{"style":799},[918],{"type":539,"value":919}," len",{"type":534,"tag":581,"props":921,"children":922},{"style":771},[923],{"type":539,"value":862},{"type":534,"tag":581,"props":925,"children":926},{"style":799},[927],{"type":539,"value":928}," nums",{"type":534,"tag":581,"props":930,"children":931},{"style":771},[932],{"type":539,"value":933},".",{"type":534,"tag":581,"props":935,"children":937},{"style":936},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[938],{"type":539,"value":939},"length",{"type":534,"tag":581,"props":941,"children":942},{"style":771},[943],{"type":539,"value":944},";\n",{"type":534,"tag":581,"props":946,"children":948},{"class":583,"line":947},9,[949,953,958,962,967,973],{"type":534,"tag":581,"props":950,"children":951},{"style":848},[952],{"type":539,"value":914},{"type":534,"tag":581,"props":954,"children":955},{"style":799},[956],{"type":539,"value":957}," l",{"type":534,"tag":581,"props":959,"children":960},{"style":771},[961],{"type":539,"value":862},{"type":534,"tag":581,"props":963,"children":964},{"style":848},[965],{"type":539,"value":966}," -",{"type":534,"tag":581,"props":968,"children":970},{"style":969},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[971],{"type":539,"value":972},"1",{"type":534,"tag":581,"props":974,"children":975},{"style":771},[976],{"type":539,"value":944},{"type":534,"tag":581,"props":978,"children":980},{"class":583,"line":979},10,[981,985,990,994,998,1002,1007],{"type":534,"tag":581,"props":982,"children":983},{"style":848},[984],{"type":539,"value":914},{"type":534,"tag":581,"props":986,"children":987},{"style":799},[988],{"type":539,"value":989}," r",{"type":534,"tag":581,"props":991,"children":992},{"style":771},[993],{"type":539,"value":862},{"type":534,"tag":581,"props":995,"children":996},{"style":799},[997],{"type":539,"value":919},{"type":534,"tag":581,"props":999,"children":1000},{"style":848},[1001],{"type":539,"value":966},{"type":534,"tag":581,"props":1003,"children":1004},{"style":969},[1005],{"type":539,"value":1006}," 1",{"type":534,"tag":581,"props":1008,"children":1009},{"style":771},[1010],{"type":539,"value":944},{"type":534,"tag":581,"props":1012,"children":1014},{"class":583,"line":1013},11,[1015,1020,1024,1029,1034,1038,1043,1047,1051],{"type":534,"tag":581,"props":1016,"children":1017},{"style":777},[1018],{"type":539,"value":1019},"  while",{"type":534,"tag":581,"props":1021,"children":1022},{"style":771},[1023],{"type":539,"value":872},{"type":534,"tag":581,"props":1025,"children":1026},{"style":799},[1027],{"type":539,"value":1028},"l",{"type":534,"tag":581,"props":1030,"children":1031},{"style":848},[1032],{"type":539,"value":1033}," +",{"type":534,"tag":581,"props":1035,"children":1036},{"style":969},[1037],{"type":539,"value":1006},{"type":534,"tag":581,"props":1039,"children":1040},{"style":771},[1041],{"type":539,"value":1042}," \u003C",{"type":534,"tag":581,"props":1044,"children":1045},{"style":799},[1046],{"type":539,"value":989},{"type":534,"tag":581,"props":1048,"children":1049},{"style":771},[1050],{"type":539,"value":882},{"type":534,"tag":581,"props":1052,"children":1053},{"style":771},[1054],{"type":539,"value":887},{"type":534,"tag":581,"props":1056,"children":1058},{"class":583,"line":1057},12,[1059,1064,1069,1073,1077,1081,1085,1089,1093,1098,1102],{"type":534,"tag":581,"props":1060,"children":1061},{"style":848},[1062],{"type":539,"value":1063},"    let",{"type":534,"tag":581,"props":1065,"children":1066},{"style":799},[1067],{"type":539,"value":1068}," mid",{"type":534,"tag":581,"props":1070,"children":1071},{"style":771},[1072],{"type":539,"value":862},{"type":534,"tag":581,"props":1074,"children":1075},{"style":771},[1076],{"type":539,"value":872},{"type":534,"tag":581,"props":1078,"children":1079},{"style":799},[1080],{"type":539,"value":1028},{"type":534,"tag":581,"props":1082,"children":1083},{"style":848},[1084],{"type":539,"value":1033},{"type":534,"tag":581,"props":1086,"children":1087},{"style":799},[1088],{"type":539,"value":989},{"type":534,"tag":581,"props":1090,"children":1091},{"style":771},[1092],{"type":539,"value":882},{"type":534,"tag":581,"props":1094,"children":1095},{"style":848},[1096],{"type":539,"value":1097}," >>",{"type":534,"tag":581,"props":1099,"children":1100},{"style":969},[1101],{"type":539,"value":1006},{"type":534,"tag":581,"props":1103,"children":1104},{"style":771},[1105],{"type":539,"value":944},{"type":534,"tag":581,"props":1107,"children":1109},{"class":583,"line":1108},13,[1110,1115,1119,1123,1128,1133,1138,1142,1146,1150,1155,1159,1163,1168],{"type":534,"tag":581,"props":1111,"children":1112},{"style":777},[1113],{"type":539,"value":1114},"    if",{"type":534,"tag":581,"props":1116,"children":1117},{"style":771},[1118],{"type":539,"value":872},{"type":534,"tag":581,"props":1120,"children":1121},{"style":799},[1122],{"type":539,"value":877},{"type":534,"tag":581,"props":1124,"children":1125},{"style":771},[1126],{"type":539,"value":1127},"[",{"type":534,"tag":581,"props":1129,"children":1130},{"style":799},[1131],{"type":539,"value":1132},"mid",{"type":534,"tag":581,"props":1134,"children":1135},{"style":771},[1136],{"type":539,"value":1137},"]",{"type":534,"tag":581,"props":1139,"children":1140},{"style":771},[1141],{"type":539,"value":1042},{"type":534,"tag":581,"props":1143,"children":1144},{"style":799},[1145],{"type":539,"value":928},{"type":534,"tag":581,"props":1147,"children":1148},{"style":771},[1149],{"type":539,"value":1127},{"type":534,"tag":581,"props":1151,"children":1152},{"style":799},[1153],{"type":539,"value":1154},"len",{"type":534,"tag":581,"props":1156,"children":1157},{"style":848},[1158],{"type":539,"value":966},{"type":534,"tag":581,"props":1160,"children":1161},{"style":969},[1162],{"type":539,"value":1006},{"type":534,"tag":581,"props":1164,"children":1165},{"style":771},[1166],{"type":539,"value":1167},"])",{"type":534,"tag":581,"props":1169,"children":1170},{"style":771},[1171],{"type":539,"value":887},{"type":534,"tag":581,"props":1173,"children":1175},{"class":583,"line":1174},14,[1176,1181,1185,1189,1194],{"type":534,"tag":581,"props":1177,"children":1178},{"style":799},[1179],{"type":539,"value":1180},"      r",{"type":534,"tag":581,"props":1182,"children":1183},{"style":771},[1184],{"type":539,"value":862},{"type":534,"tag":581,"props":1186,"children":1187},{"style":799},[1188],{"type":539,"value":1068},{"type":534,"tag":581,"props":1190,"children":1191},{"style":771},[1192],{"type":539,"value":1193},";",{"type":534,"tag":581,"props":1195,"children":1196},{"style":757},[1197],{"type":539,"value":1198}," // 染蓝色\n",{"type":534,"tag":581,"props":1200,"children":1202},{"class":583,"line":1201},15,[1203,1208,1213],{"type":534,"tag":581,"props":1204,"children":1205},{"style":771},[1206],{"type":539,"value":1207},"    }",{"type":534,"tag":581,"props":1209,"children":1210},{"style":777},[1211],{"type":539,"value":1212}," else",{"type":534,"tag":581,"props":1214,"children":1215},{"style":771},[1216],{"type":539,"value":887},{"type":534,"tag":581,"props":1218,"children":1220},{"class":583,"line":1219},16,[1221,1226,1230,1234,1238],{"type":534,"tag":581,"props":1222,"children":1223},{"style":799},[1224],{"type":539,"value":1225},"      l",{"type":534,"tag":581,"props":1227,"children":1228},{"style":771},[1229],{"type":539,"value":862},{"type":534,"tag":581,"props":1231,"children":1232},{"style":799},[1233],{"type":539,"value":1068},{"type":534,"tag":581,"props":1235,"children":1236},{"style":771},[1237],{"type":539,"value":1193},{"type":534,"tag":581,"props":1239,"children":1240},{"style":757},[1241],{"type":539,"value":1242}," // 染红色\n",{"type":534,"tag":581,"props":1244,"children":1246},{"class":583,"line":1245},17,[1247],{"type":534,"tag":581,"props":1248,"children":1249},{"style":771},[1250],{"type":539,"value":1251},"    }\n",{"type":534,"tag":581,"props":1253,"children":1255},{"class":583,"line":1254},18,[1256],{"type":534,"tag":581,"props":1257,"children":1258},{"style":771},[1259],{"type":539,"value":1260},"  }\n",{"type":534,"tag":581,"props":1262,"children":1264},{"class":583,"line":1263},19,[1265,1270,1274,1278,1283],{"type":534,"tag":581,"props":1266,"children":1267},{"style":777},[1268],{"type":539,"value":1269},"  return",{"type":534,"tag":581,"props":1271,"children":1272},{"style":799},[1273],{"type":539,"value":928},{"type":534,"tag":581,"props":1275,"children":1276},{"style":771},[1277],{"type":539,"value":1127},{"type":534,"tag":581,"props":1279,"children":1280},{"style":799},[1281],{"type":539,"value":1282},"r",{"type":534,"tag":581,"props":1284,"children":1285},{"style":771},[1286],{"type":539,"value":1287},"];\n",{"type":534,"tag":581,"props":1289,"children":1291},{"class":583,"line":1290},20,[1292],{"type":534,"tag":581,"props":1293,"children":1294},{"style":771},[1295],{"type":539,"value":1296},"};\n",{"type":534,"tag":1298,"props":1299,"children":1300},"style",{},[1301],{"type":539,"value":1302},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":844,"depth":844,"links":1304},[1305,1306],{"id":717,"depth":593,"text":717},{"id":740,"depth":593,"text":740},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1313,1315],{"_path":180,"title":179,"description":1314},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":186,"title":185,"description":1316},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1714096144192]