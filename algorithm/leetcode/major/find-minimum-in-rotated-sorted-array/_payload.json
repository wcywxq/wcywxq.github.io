[{"data":1,"prerenderedAt":1271},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":478,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1266},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":183,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":182,"description":482,"url":483,"body":484,"_type":1261,"_id":1262,"_source":1263,"_file":1264,"_extension":1265},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":485,"children":486,"toc":1257},"root",[487,494,509,514,519,524,563,568,599,604,635,640,668,674,692,697,1251],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":495,"props":496,"children":497},"ul",{},[498,504],{"type":488,"tag":499,"props":500,"children":501},"li",{},[502],{"type":493,"value":503},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":488,"tag":499,"props":505,"children":506},{},[507],{"type":493,"value":508},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":488,"tag":489,"props":510,"children":511},{},[512],{"type":493,"value":513},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":488,"tag":489,"props":515,"children":516},{},[517],{"type":493,"value":518},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":488,"tag":489,"props":520,"children":521},{},[522],{"type":493,"value":523},"示例 1：",{"type":488,"tag":525,"props":526,"children":529},"pre",{"className":527,"code":528,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[530],{"type":488,"tag":531,"props":532,"children":533},"code",{"__ignoreMap":481},[534,545,554],{"type":488,"tag":535,"props":536,"children":539},"span",{"class":537,"line":538},"line",1,[540],{"type":488,"tag":535,"props":541,"children":542},{},[543],{"type":493,"value":544},"输入：nums = [3,4,5,1,2]\n",{"type":488,"tag":535,"props":546,"children":548},{"class":537,"line":547},2,[549],{"type":488,"tag":535,"props":550,"children":551},{},[552],{"type":493,"value":553},"输出：1\n",{"type":488,"tag":535,"props":555,"children":557},{"class":537,"line":556},3,[558],{"type":488,"tag":535,"props":559,"children":560},{},[561],{"type":493,"value":562},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":488,"tag":489,"props":564,"children":565},{},[566],{"type":493,"value":567},"示例 2：",{"type":488,"tag":525,"props":569,"children":571},{"className":527,"code":570,"language":493,"meta":481,"style":481},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[572],{"type":488,"tag":531,"props":573,"children":574},{"__ignoreMap":481},[575,583,591],{"type":488,"tag":535,"props":576,"children":577},{"class":537,"line":538},[578],{"type":488,"tag":535,"props":579,"children":580},{},[581],{"type":493,"value":582},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":488,"tag":535,"props":584,"children":585},{"class":537,"line":547},[586],{"type":488,"tag":535,"props":587,"children":588},{},[589],{"type":493,"value":590},"输出：0\n",{"type":488,"tag":535,"props":592,"children":593},{"class":537,"line":556},[594],{"type":488,"tag":535,"props":595,"children":596},{},[597],{"type":493,"value":598},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":488,"tag":489,"props":600,"children":601},{},[602],{"type":493,"value":603},"示例 3：",{"type":488,"tag":525,"props":605,"children":607},{"className":527,"code":606,"language":493,"meta":481,"style":481},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[608],{"type":488,"tag":531,"props":609,"children":610},{"__ignoreMap":481},[611,619,627],{"type":488,"tag":535,"props":612,"children":613},{"class":537,"line":538},[614],{"type":488,"tag":535,"props":615,"children":616},{},[617],{"type":493,"value":618},"输入：nums = [11,13,15,17]\n",{"type":488,"tag":535,"props":620,"children":621},{"class":537,"line":547},[622],{"type":488,"tag":535,"props":623,"children":624},{},[625],{"type":493,"value":626},"输出：11\n",{"type":488,"tag":535,"props":628,"children":629},{"class":537,"line":556},[630],{"type":488,"tag":535,"props":631,"children":632},{},[633],{"type":493,"value":634},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":488,"tag":489,"props":636,"children":637},{},[638],{"type":493,"value":639},"提示：",{"type":488,"tag":495,"props":641,"children":642},{},[643,648,653,658,663],{"type":488,"tag":499,"props":644,"children":645},{},[646],{"type":493,"value":647},"n == nums.length",{"type":488,"tag":499,"props":649,"children":650},{},[651],{"type":493,"value":652},"1 \u003C= n \u003C= 5000",{"type":488,"tag":499,"props":654,"children":655},{},[656],{"type":493,"value":657},"-5000 \u003C= nums[i] \u003C= 5000",{"type":488,"tag":499,"props":659,"children":660},{},[661],{"type":493,"value":662},"nums 中的所有整数 互不相同",{"type":488,"tag":499,"props":664,"children":665},{},[666],{"type":493,"value":667},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":488,"tag":669,"props":670,"children":672},"h2",{"id":671},"解题思路",[673],{"type":493,"value":671},{"type":488,"tag":495,"props":675,"children":676},{},[677,682,687],{"type":488,"tag":499,"props":678,"children":679},{},[680],{"type":493,"value":681},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":488,"tag":499,"props":683,"children":684},{},[685],{"type":493,"value":686},"n - 1 一定是蓝色",{"type":488,"tag":499,"props":688,"children":689},{},[690],{"type":493,"value":691},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":488,"tag":669,"props":693,"children":695},{"id":694},"实现",[696],{"type":493,"value":694},{"type":488,"tag":525,"props":698,"children":702},{"className":699,"code":700,"language":701,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[703],{"type":488,"tag":531,"props":704,"children":705},{"__ignoreMap":481},[706,715,757,787,796,842,851,860,899,931,965,1009,1060,1126,1153,1171,1197,1206,1215,1242],{"type":488,"tag":535,"props":707,"children":708},{"class":537,"line":538},[709],{"type":488,"tag":535,"props":710,"children":712},{"style":711},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[713],{"type":493,"value":714},"/**\n",{"type":488,"tag":535,"props":716,"children":717},{"class":537,"line":547},[718,723,729,735,740,746,751],{"type":488,"tag":535,"props":719,"children":720},{"style":711},[721],{"type":493,"value":722}," * ",{"type":488,"tag":535,"props":724,"children":726},{"style":725},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[727],{"type":493,"value":728},"@",{"type":488,"tag":535,"props":730,"children":732},{"style":731},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[733],{"type":493,"value":734},"param",{"type":488,"tag":535,"props":736,"children":737},{"style":725},[738],{"type":493,"value":739}," {",{"type":488,"tag":535,"props":741,"children":743},{"style":742},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[744],{"type":493,"value":745},"number[]",{"type":488,"tag":535,"props":747,"children":748},{"style":725},[749],{"type":493,"value":750},"}",{"type":488,"tag":535,"props":752,"children":754},{"style":753},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[755],{"type":493,"value":756}," nums\n",{"type":488,"tag":535,"props":758,"children":759},{"class":537,"line":556},[760,764,768,773,777,782],{"type":488,"tag":535,"props":761,"children":762},{"style":711},[763],{"type":493,"value":722},{"type":488,"tag":535,"props":765,"children":766},{"style":725},[767],{"type":493,"value":728},{"type":488,"tag":535,"props":769,"children":770},{"style":731},[771],{"type":493,"value":772},"return",{"type":488,"tag":535,"props":774,"children":775},{"style":725},[776],{"type":493,"value":739},{"type":488,"tag":535,"props":778,"children":779},{"style":742},[780],{"type":493,"value":781},"number",{"type":488,"tag":535,"props":783,"children":784},{"style":725},[785],{"type":493,"value":786},"}\n",{"type":488,"tag":535,"props":788,"children":790},{"class":537,"line":789},4,[791],{"type":488,"tag":535,"props":792,"children":793},{"style":711},[794],{"type":493,"value":795}," */\n",{"type":488,"tag":535,"props":797,"children":799},{"class":537,"line":798},5,[800,806,812,817,822,827,832,837],{"type":488,"tag":535,"props":801,"children":803},{"style":802},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[804],{"type":493,"value":805},"var",{"type":488,"tag":535,"props":807,"children":809},{"style":808},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[810],{"type":493,"value":811}," findMin",{"type":488,"tag":535,"props":813,"children":814},{"style":725},[815],{"type":493,"value":816}," =",{"type":488,"tag":535,"props":818,"children":819},{"style":802},[820],{"type":493,"value":821}," function",{"type":488,"tag":535,"props":823,"children":824},{"style":725},[825],{"type":493,"value":826}," (",{"type":488,"tag":535,"props":828,"children":829},{"style":753},[830],{"type":493,"value":831},"nums",{"type":488,"tag":535,"props":833,"children":834},{"style":725},[835],{"type":493,"value":836},")",{"type":488,"tag":535,"props":838,"children":839},{"style":725},[840],{"type":493,"value":841}," {\n",{"type":488,"tag":535,"props":843,"children":845},{"class":537,"line":844},6,[846],{"type":488,"tag":535,"props":847,"children":848},{"style":711},[849],{"type":493,"value":850},"  // [0, n - 2]\n",{"type":488,"tag":535,"props":852,"children":854},{"class":537,"line":853},7,[855],{"type":488,"tag":535,"props":856,"children":857},{"style":711},[858],{"type":493,"value":859},"  // (-1, n - 1) 开区间写法\n",{"type":488,"tag":535,"props":861,"children":863},{"class":537,"line":862},8,[864,869,874,878,883,888,894],{"type":488,"tag":535,"props":865,"children":866},{"style":802},[867],{"type":493,"value":868},"  let",{"type":488,"tag":535,"props":870,"children":871},{"style":753},[872],{"type":493,"value":873}," len",{"type":488,"tag":535,"props":875,"children":876},{"style":725},[877],{"type":493,"value":816},{"type":488,"tag":535,"props":879,"children":880},{"style":753},[881],{"type":493,"value":882}," nums",{"type":488,"tag":535,"props":884,"children":885},{"style":725},[886],{"type":493,"value":887},".",{"type":488,"tag":535,"props":889,"children":891},{"style":890},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[892],{"type":493,"value":893},"length",{"type":488,"tag":535,"props":895,"children":896},{"style":725},[897],{"type":493,"value":898},";\n",{"type":488,"tag":535,"props":900,"children":902},{"class":537,"line":901},9,[903,907,912,916,921,927],{"type":488,"tag":535,"props":904,"children":905},{"style":802},[906],{"type":493,"value":868},{"type":488,"tag":535,"props":908,"children":909},{"style":753},[910],{"type":493,"value":911}," l",{"type":488,"tag":535,"props":913,"children":914},{"style":725},[915],{"type":493,"value":816},{"type":488,"tag":535,"props":917,"children":918},{"style":802},[919],{"type":493,"value":920}," -",{"type":488,"tag":535,"props":922,"children":924},{"style":923},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[925],{"type":493,"value":926},"1",{"type":488,"tag":535,"props":928,"children":929},{"style":725},[930],{"type":493,"value":898},{"type":488,"tag":535,"props":932,"children":934},{"class":537,"line":933},10,[935,939,944,948,952,956,961],{"type":488,"tag":535,"props":936,"children":937},{"style":802},[938],{"type":493,"value":868},{"type":488,"tag":535,"props":940,"children":941},{"style":753},[942],{"type":493,"value":943}," r",{"type":488,"tag":535,"props":945,"children":946},{"style":725},[947],{"type":493,"value":816},{"type":488,"tag":535,"props":949,"children":950},{"style":753},[951],{"type":493,"value":873},{"type":488,"tag":535,"props":953,"children":954},{"style":802},[955],{"type":493,"value":920},{"type":488,"tag":535,"props":957,"children":958},{"style":923},[959],{"type":493,"value":960}," 1",{"type":488,"tag":535,"props":962,"children":963},{"style":725},[964],{"type":493,"value":898},{"type":488,"tag":535,"props":966,"children":968},{"class":537,"line":967},11,[969,974,978,983,988,992,997,1001,1005],{"type":488,"tag":535,"props":970,"children":971},{"style":731},[972],{"type":493,"value":973},"  while",{"type":488,"tag":535,"props":975,"children":976},{"style":725},[977],{"type":493,"value":826},{"type":488,"tag":535,"props":979,"children":980},{"style":753},[981],{"type":493,"value":982},"l",{"type":488,"tag":535,"props":984,"children":985},{"style":802},[986],{"type":493,"value":987}," +",{"type":488,"tag":535,"props":989,"children":990},{"style":923},[991],{"type":493,"value":960},{"type":488,"tag":535,"props":993,"children":994},{"style":725},[995],{"type":493,"value":996}," \u003C",{"type":488,"tag":535,"props":998,"children":999},{"style":753},[1000],{"type":493,"value":943},{"type":488,"tag":535,"props":1002,"children":1003},{"style":725},[1004],{"type":493,"value":836},{"type":488,"tag":535,"props":1006,"children":1007},{"style":725},[1008],{"type":493,"value":841},{"type":488,"tag":535,"props":1010,"children":1012},{"class":537,"line":1011},12,[1013,1018,1023,1027,1031,1035,1039,1043,1047,1052,1056],{"type":488,"tag":535,"props":1014,"children":1015},{"style":802},[1016],{"type":493,"value":1017},"    let",{"type":488,"tag":535,"props":1019,"children":1020},{"style":753},[1021],{"type":493,"value":1022}," mid",{"type":488,"tag":535,"props":1024,"children":1025},{"style":725},[1026],{"type":493,"value":816},{"type":488,"tag":535,"props":1028,"children":1029},{"style":725},[1030],{"type":493,"value":826},{"type":488,"tag":535,"props":1032,"children":1033},{"style":753},[1034],{"type":493,"value":982},{"type":488,"tag":535,"props":1036,"children":1037},{"style":802},[1038],{"type":493,"value":987},{"type":488,"tag":535,"props":1040,"children":1041},{"style":753},[1042],{"type":493,"value":943},{"type":488,"tag":535,"props":1044,"children":1045},{"style":725},[1046],{"type":493,"value":836},{"type":488,"tag":535,"props":1048,"children":1049},{"style":802},[1050],{"type":493,"value":1051}," >>",{"type":488,"tag":535,"props":1053,"children":1054},{"style":923},[1055],{"type":493,"value":960},{"type":488,"tag":535,"props":1057,"children":1058},{"style":725},[1059],{"type":493,"value":898},{"type":488,"tag":535,"props":1061,"children":1063},{"class":537,"line":1062},13,[1064,1069,1073,1077,1082,1087,1092,1096,1100,1104,1109,1113,1117,1122],{"type":488,"tag":535,"props":1065,"children":1066},{"style":731},[1067],{"type":493,"value":1068},"    if",{"type":488,"tag":535,"props":1070,"children":1071},{"style":725},[1072],{"type":493,"value":826},{"type":488,"tag":535,"props":1074,"children":1075},{"style":753},[1076],{"type":493,"value":831},{"type":488,"tag":535,"props":1078,"children":1079},{"style":725},[1080],{"type":493,"value":1081},"[",{"type":488,"tag":535,"props":1083,"children":1084},{"style":753},[1085],{"type":493,"value":1086},"mid",{"type":488,"tag":535,"props":1088,"children":1089},{"style":725},[1090],{"type":493,"value":1091},"]",{"type":488,"tag":535,"props":1093,"children":1094},{"style":725},[1095],{"type":493,"value":996},{"type":488,"tag":535,"props":1097,"children":1098},{"style":753},[1099],{"type":493,"value":882},{"type":488,"tag":535,"props":1101,"children":1102},{"style":725},[1103],{"type":493,"value":1081},{"type":488,"tag":535,"props":1105,"children":1106},{"style":753},[1107],{"type":493,"value":1108},"len",{"type":488,"tag":535,"props":1110,"children":1111},{"style":802},[1112],{"type":493,"value":920},{"type":488,"tag":535,"props":1114,"children":1115},{"style":923},[1116],{"type":493,"value":960},{"type":488,"tag":535,"props":1118,"children":1119},{"style":725},[1120],{"type":493,"value":1121},"])",{"type":488,"tag":535,"props":1123,"children":1124},{"style":725},[1125],{"type":493,"value":841},{"type":488,"tag":535,"props":1127,"children":1129},{"class":537,"line":1128},14,[1130,1135,1139,1143,1148],{"type":488,"tag":535,"props":1131,"children":1132},{"style":753},[1133],{"type":493,"value":1134},"      r",{"type":488,"tag":535,"props":1136,"children":1137},{"style":725},[1138],{"type":493,"value":816},{"type":488,"tag":535,"props":1140,"children":1141},{"style":753},[1142],{"type":493,"value":1022},{"type":488,"tag":535,"props":1144,"children":1145},{"style":725},[1146],{"type":493,"value":1147},";",{"type":488,"tag":535,"props":1149,"children":1150},{"style":711},[1151],{"type":493,"value":1152}," // 染蓝色\n",{"type":488,"tag":535,"props":1154,"children":1156},{"class":537,"line":1155},15,[1157,1162,1167],{"type":488,"tag":535,"props":1158,"children":1159},{"style":725},[1160],{"type":493,"value":1161},"    }",{"type":488,"tag":535,"props":1163,"children":1164},{"style":731},[1165],{"type":493,"value":1166}," else",{"type":488,"tag":535,"props":1168,"children":1169},{"style":725},[1170],{"type":493,"value":841},{"type":488,"tag":535,"props":1172,"children":1174},{"class":537,"line":1173},16,[1175,1180,1184,1188,1192],{"type":488,"tag":535,"props":1176,"children":1177},{"style":753},[1178],{"type":493,"value":1179},"      l",{"type":488,"tag":535,"props":1181,"children":1182},{"style":725},[1183],{"type":493,"value":816},{"type":488,"tag":535,"props":1185,"children":1186},{"style":753},[1187],{"type":493,"value":1022},{"type":488,"tag":535,"props":1189,"children":1190},{"style":725},[1191],{"type":493,"value":1147},{"type":488,"tag":535,"props":1193,"children":1194},{"style":711},[1195],{"type":493,"value":1196}," // 染红色\n",{"type":488,"tag":535,"props":1198,"children":1200},{"class":537,"line":1199},17,[1201],{"type":488,"tag":535,"props":1202,"children":1203},{"style":725},[1204],{"type":493,"value":1205},"    }\n",{"type":488,"tag":535,"props":1207,"children":1209},{"class":537,"line":1208},18,[1210],{"type":488,"tag":535,"props":1211,"children":1212},{"style":725},[1213],{"type":493,"value":1214},"  }\n",{"type":488,"tag":535,"props":1216,"children":1218},{"class":537,"line":1217},19,[1219,1224,1228,1232,1237],{"type":488,"tag":535,"props":1220,"children":1221},{"style":731},[1222],{"type":493,"value":1223},"  return",{"type":488,"tag":535,"props":1225,"children":1226},{"style":753},[1227],{"type":493,"value":882},{"type":488,"tag":535,"props":1229,"children":1230},{"style":725},[1231],{"type":493,"value":1081},{"type":488,"tag":535,"props":1233,"children":1234},{"style":753},[1235],{"type":493,"value":1236},"r",{"type":488,"tag":535,"props":1238,"children":1239},{"style":725},[1240],{"type":493,"value":1241},"];\n",{"type":488,"tag":535,"props":1243,"children":1245},{"class":537,"line":1244},20,[1246],{"type":488,"tag":535,"props":1247,"children":1248},{"style":725},[1249],{"type":493,"value":1250},"};\n",{"type":488,"tag":1252,"props":1253,"children":1254},"style",{},[1255],{"type":493,"value":1256},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":798,"depth":798,"links":1258},[1259,1260],{"id":671,"depth":547,"text":671},{"id":694,"depth":547,"text":694},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1267,1269],{"_path":180,"title":179,"description":1268},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":186,"title":185,"description":1270},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1714046226170]