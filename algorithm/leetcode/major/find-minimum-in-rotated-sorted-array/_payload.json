[{"data":1,"prerenderedAt":1302},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":509,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1297},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":183,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":182,"description":513,"url":514,"body":515,"_type":1292,"_id":1293,"_source":1294,"_file":1295,"_extension":1296},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":516,"children":517,"toc":1288},"root",[518,525,540,545,550,555,594,599,630,635,666,671,699,705,723,728,1282],{"type":519,"tag":520,"props":521,"children":522},"element","p",{},[523],{"type":524,"value":513},"text",{"type":519,"tag":526,"props":527,"children":528},"ul",{},[529,535],{"type":519,"tag":530,"props":531,"children":532},"li",{},[533],{"type":524,"value":534},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":519,"tag":530,"props":536,"children":537},{},[538],{"type":524,"value":539},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":519,"tag":520,"props":541,"children":542},{},[543],{"type":524,"value":544},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":519,"tag":520,"props":546,"children":547},{},[548],{"type":524,"value":549},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":519,"tag":520,"props":551,"children":552},{},[553],{"type":524,"value":554},"示例 1：",{"type":519,"tag":556,"props":557,"children":560},"pre",{"className":558,"code":559,"language":524,"meta":512,"style":512},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[561],{"type":519,"tag":562,"props":563,"children":564},"code",{"__ignoreMap":512},[565,576,585],{"type":519,"tag":566,"props":567,"children":570},"span",{"class":568,"line":569},"line",1,[571],{"type":519,"tag":566,"props":572,"children":573},{},[574],{"type":524,"value":575},"输入：nums = [3,4,5,1,2]\n",{"type":519,"tag":566,"props":577,"children":579},{"class":568,"line":578},2,[580],{"type":519,"tag":566,"props":581,"children":582},{},[583],{"type":524,"value":584},"输出：1\n",{"type":519,"tag":566,"props":586,"children":588},{"class":568,"line":587},3,[589],{"type":519,"tag":566,"props":590,"children":591},{},[592],{"type":524,"value":593},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":519,"tag":520,"props":595,"children":596},{},[597],{"type":524,"value":598},"示例 2：",{"type":519,"tag":556,"props":600,"children":602},{"className":558,"code":601,"language":524,"meta":512,"style":512},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[603],{"type":519,"tag":562,"props":604,"children":605},{"__ignoreMap":512},[606,614,622],{"type":519,"tag":566,"props":607,"children":608},{"class":568,"line":569},[609],{"type":519,"tag":566,"props":610,"children":611},{},[612],{"type":524,"value":613},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":519,"tag":566,"props":615,"children":616},{"class":568,"line":578},[617],{"type":519,"tag":566,"props":618,"children":619},{},[620],{"type":524,"value":621},"输出：0\n",{"type":519,"tag":566,"props":623,"children":624},{"class":568,"line":587},[625],{"type":519,"tag":566,"props":626,"children":627},{},[628],{"type":524,"value":629},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":519,"tag":520,"props":631,"children":632},{},[633],{"type":524,"value":634},"示例 3：",{"type":519,"tag":556,"props":636,"children":638},{"className":558,"code":637,"language":524,"meta":512,"style":512},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[639],{"type":519,"tag":562,"props":640,"children":641},{"__ignoreMap":512},[642,650,658],{"type":519,"tag":566,"props":643,"children":644},{"class":568,"line":569},[645],{"type":519,"tag":566,"props":646,"children":647},{},[648],{"type":524,"value":649},"输入：nums = [11,13,15,17]\n",{"type":519,"tag":566,"props":651,"children":652},{"class":568,"line":578},[653],{"type":519,"tag":566,"props":654,"children":655},{},[656],{"type":524,"value":657},"输出：11\n",{"type":519,"tag":566,"props":659,"children":660},{"class":568,"line":587},[661],{"type":519,"tag":566,"props":662,"children":663},{},[664],{"type":524,"value":665},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":519,"tag":520,"props":667,"children":668},{},[669],{"type":524,"value":670},"提示：",{"type":519,"tag":526,"props":672,"children":673},{},[674,679,684,689,694],{"type":519,"tag":530,"props":675,"children":676},{},[677],{"type":524,"value":678},"n == nums.length",{"type":519,"tag":530,"props":680,"children":681},{},[682],{"type":524,"value":683},"1 \u003C= n \u003C= 5000",{"type":519,"tag":530,"props":685,"children":686},{},[687],{"type":524,"value":688},"-5000 \u003C= nums[i] \u003C= 5000",{"type":519,"tag":530,"props":690,"children":691},{},[692],{"type":524,"value":693},"nums 中的所有整数 互不相同",{"type":519,"tag":530,"props":695,"children":696},{},[697],{"type":524,"value":698},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":519,"tag":700,"props":701,"children":703},"h2",{"id":702},"解题思路",[704],{"type":524,"value":702},{"type":519,"tag":526,"props":706,"children":707},{},[708,713,718],{"type":519,"tag":530,"props":709,"children":710},{},[711],{"type":524,"value":712},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":519,"tag":530,"props":714,"children":715},{},[716],{"type":524,"value":717},"n - 1 一定是蓝色",{"type":519,"tag":530,"props":719,"children":720},{},[721],{"type":524,"value":722},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":519,"tag":700,"props":724,"children":726},{"id":725},"实现",[727],{"type":524,"value":725},{"type":519,"tag":556,"props":729,"children":733},{"className":730,"code":731,"language":732,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[734],{"type":519,"tag":562,"props":735,"children":736},{"__ignoreMap":512},[737,746,788,818,827,873,882,891,930,962,996,1040,1091,1157,1184,1202,1228,1237,1246,1273],{"type":519,"tag":566,"props":738,"children":739},{"class":568,"line":569},[740],{"type":519,"tag":566,"props":741,"children":743},{"style":742},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[744],{"type":524,"value":745},"/**\n",{"type":519,"tag":566,"props":747,"children":748},{"class":568,"line":578},[749,754,760,766,771,777,782],{"type":519,"tag":566,"props":750,"children":751},{"style":742},[752],{"type":524,"value":753}," * ",{"type":519,"tag":566,"props":755,"children":757},{"style":756},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[758],{"type":524,"value":759},"@",{"type":519,"tag":566,"props":761,"children":763},{"style":762},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[764],{"type":524,"value":765},"param",{"type":519,"tag":566,"props":767,"children":768},{"style":756},[769],{"type":524,"value":770}," {",{"type":519,"tag":566,"props":772,"children":774},{"style":773},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[775],{"type":524,"value":776},"number[]",{"type":519,"tag":566,"props":778,"children":779},{"style":756},[780],{"type":524,"value":781},"}",{"type":519,"tag":566,"props":783,"children":785},{"style":784},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[786],{"type":524,"value":787}," nums\n",{"type":519,"tag":566,"props":789,"children":790},{"class":568,"line":587},[791,795,799,804,808,813],{"type":519,"tag":566,"props":792,"children":793},{"style":742},[794],{"type":524,"value":753},{"type":519,"tag":566,"props":796,"children":797},{"style":756},[798],{"type":524,"value":759},{"type":519,"tag":566,"props":800,"children":801},{"style":762},[802],{"type":524,"value":803},"return",{"type":519,"tag":566,"props":805,"children":806},{"style":756},[807],{"type":524,"value":770},{"type":519,"tag":566,"props":809,"children":810},{"style":773},[811],{"type":524,"value":812},"number",{"type":519,"tag":566,"props":814,"children":815},{"style":756},[816],{"type":524,"value":817},"}\n",{"type":519,"tag":566,"props":819,"children":821},{"class":568,"line":820},4,[822],{"type":519,"tag":566,"props":823,"children":824},{"style":742},[825],{"type":524,"value":826}," */\n",{"type":519,"tag":566,"props":828,"children":830},{"class":568,"line":829},5,[831,837,843,848,853,858,863,868],{"type":519,"tag":566,"props":832,"children":834},{"style":833},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[835],{"type":524,"value":836},"var",{"type":519,"tag":566,"props":838,"children":840},{"style":839},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[841],{"type":524,"value":842}," findMin",{"type":519,"tag":566,"props":844,"children":845},{"style":756},[846],{"type":524,"value":847}," =",{"type":519,"tag":566,"props":849,"children":850},{"style":833},[851],{"type":524,"value":852}," function",{"type":519,"tag":566,"props":854,"children":855},{"style":756},[856],{"type":524,"value":857}," (",{"type":519,"tag":566,"props":859,"children":860},{"style":784},[861],{"type":524,"value":862},"nums",{"type":519,"tag":566,"props":864,"children":865},{"style":756},[866],{"type":524,"value":867},")",{"type":519,"tag":566,"props":869,"children":870},{"style":756},[871],{"type":524,"value":872}," {\n",{"type":519,"tag":566,"props":874,"children":876},{"class":568,"line":875},6,[877],{"type":519,"tag":566,"props":878,"children":879},{"style":742},[880],{"type":524,"value":881},"  // [0, n - 2]\n",{"type":519,"tag":566,"props":883,"children":885},{"class":568,"line":884},7,[886],{"type":519,"tag":566,"props":887,"children":888},{"style":742},[889],{"type":524,"value":890},"  // (-1, n - 1) 开区间写法\n",{"type":519,"tag":566,"props":892,"children":894},{"class":568,"line":893},8,[895,900,905,909,914,919,925],{"type":519,"tag":566,"props":896,"children":897},{"style":833},[898],{"type":524,"value":899},"  let",{"type":519,"tag":566,"props":901,"children":902},{"style":784},[903],{"type":524,"value":904}," len",{"type":519,"tag":566,"props":906,"children":907},{"style":756},[908],{"type":524,"value":847},{"type":519,"tag":566,"props":910,"children":911},{"style":784},[912],{"type":524,"value":913}," nums",{"type":519,"tag":566,"props":915,"children":916},{"style":756},[917],{"type":524,"value":918},".",{"type":519,"tag":566,"props":920,"children":922},{"style":921},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[923],{"type":524,"value":924},"length",{"type":519,"tag":566,"props":926,"children":927},{"style":756},[928],{"type":524,"value":929},";\n",{"type":519,"tag":566,"props":931,"children":933},{"class":568,"line":932},9,[934,938,943,947,952,958],{"type":519,"tag":566,"props":935,"children":936},{"style":833},[937],{"type":524,"value":899},{"type":519,"tag":566,"props":939,"children":940},{"style":784},[941],{"type":524,"value":942}," l",{"type":519,"tag":566,"props":944,"children":945},{"style":756},[946],{"type":524,"value":847},{"type":519,"tag":566,"props":948,"children":949},{"style":833},[950],{"type":524,"value":951}," -",{"type":519,"tag":566,"props":953,"children":955},{"style":954},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[956],{"type":524,"value":957},"1",{"type":519,"tag":566,"props":959,"children":960},{"style":756},[961],{"type":524,"value":929},{"type":519,"tag":566,"props":963,"children":965},{"class":568,"line":964},10,[966,970,975,979,983,987,992],{"type":519,"tag":566,"props":967,"children":968},{"style":833},[969],{"type":524,"value":899},{"type":519,"tag":566,"props":971,"children":972},{"style":784},[973],{"type":524,"value":974}," r",{"type":519,"tag":566,"props":976,"children":977},{"style":756},[978],{"type":524,"value":847},{"type":519,"tag":566,"props":980,"children":981},{"style":784},[982],{"type":524,"value":904},{"type":519,"tag":566,"props":984,"children":985},{"style":833},[986],{"type":524,"value":951},{"type":519,"tag":566,"props":988,"children":989},{"style":954},[990],{"type":524,"value":991}," 1",{"type":519,"tag":566,"props":993,"children":994},{"style":756},[995],{"type":524,"value":929},{"type":519,"tag":566,"props":997,"children":999},{"class":568,"line":998},11,[1000,1005,1009,1014,1019,1023,1028,1032,1036],{"type":519,"tag":566,"props":1001,"children":1002},{"style":762},[1003],{"type":524,"value":1004},"  while",{"type":519,"tag":566,"props":1006,"children":1007},{"style":756},[1008],{"type":524,"value":857},{"type":519,"tag":566,"props":1010,"children":1011},{"style":784},[1012],{"type":524,"value":1013},"l",{"type":519,"tag":566,"props":1015,"children":1016},{"style":833},[1017],{"type":524,"value":1018}," +",{"type":519,"tag":566,"props":1020,"children":1021},{"style":954},[1022],{"type":524,"value":991},{"type":519,"tag":566,"props":1024,"children":1025},{"style":756},[1026],{"type":524,"value":1027}," \u003C",{"type":519,"tag":566,"props":1029,"children":1030},{"style":784},[1031],{"type":524,"value":974},{"type":519,"tag":566,"props":1033,"children":1034},{"style":756},[1035],{"type":524,"value":867},{"type":519,"tag":566,"props":1037,"children":1038},{"style":756},[1039],{"type":524,"value":872},{"type":519,"tag":566,"props":1041,"children":1043},{"class":568,"line":1042},12,[1044,1049,1054,1058,1062,1066,1070,1074,1078,1083,1087],{"type":519,"tag":566,"props":1045,"children":1046},{"style":833},[1047],{"type":524,"value":1048},"    let",{"type":519,"tag":566,"props":1050,"children":1051},{"style":784},[1052],{"type":524,"value":1053}," mid",{"type":519,"tag":566,"props":1055,"children":1056},{"style":756},[1057],{"type":524,"value":847},{"type":519,"tag":566,"props":1059,"children":1060},{"style":756},[1061],{"type":524,"value":857},{"type":519,"tag":566,"props":1063,"children":1064},{"style":784},[1065],{"type":524,"value":1013},{"type":519,"tag":566,"props":1067,"children":1068},{"style":833},[1069],{"type":524,"value":1018},{"type":519,"tag":566,"props":1071,"children":1072},{"style":784},[1073],{"type":524,"value":974},{"type":519,"tag":566,"props":1075,"children":1076},{"style":756},[1077],{"type":524,"value":867},{"type":519,"tag":566,"props":1079,"children":1080},{"style":833},[1081],{"type":524,"value":1082}," >>",{"type":519,"tag":566,"props":1084,"children":1085},{"style":954},[1086],{"type":524,"value":991},{"type":519,"tag":566,"props":1088,"children":1089},{"style":756},[1090],{"type":524,"value":929},{"type":519,"tag":566,"props":1092,"children":1094},{"class":568,"line":1093},13,[1095,1100,1104,1108,1113,1118,1123,1127,1131,1135,1140,1144,1148,1153],{"type":519,"tag":566,"props":1096,"children":1097},{"style":762},[1098],{"type":524,"value":1099},"    if",{"type":519,"tag":566,"props":1101,"children":1102},{"style":756},[1103],{"type":524,"value":857},{"type":519,"tag":566,"props":1105,"children":1106},{"style":784},[1107],{"type":524,"value":862},{"type":519,"tag":566,"props":1109,"children":1110},{"style":756},[1111],{"type":524,"value":1112},"[",{"type":519,"tag":566,"props":1114,"children":1115},{"style":784},[1116],{"type":524,"value":1117},"mid",{"type":519,"tag":566,"props":1119,"children":1120},{"style":756},[1121],{"type":524,"value":1122},"]",{"type":519,"tag":566,"props":1124,"children":1125},{"style":756},[1126],{"type":524,"value":1027},{"type":519,"tag":566,"props":1128,"children":1129},{"style":784},[1130],{"type":524,"value":913},{"type":519,"tag":566,"props":1132,"children":1133},{"style":756},[1134],{"type":524,"value":1112},{"type":519,"tag":566,"props":1136,"children":1137},{"style":784},[1138],{"type":524,"value":1139},"len",{"type":519,"tag":566,"props":1141,"children":1142},{"style":833},[1143],{"type":524,"value":951},{"type":519,"tag":566,"props":1145,"children":1146},{"style":954},[1147],{"type":524,"value":991},{"type":519,"tag":566,"props":1149,"children":1150},{"style":756},[1151],{"type":524,"value":1152},"])",{"type":519,"tag":566,"props":1154,"children":1155},{"style":756},[1156],{"type":524,"value":872},{"type":519,"tag":566,"props":1158,"children":1160},{"class":568,"line":1159},14,[1161,1166,1170,1174,1179],{"type":519,"tag":566,"props":1162,"children":1163},{"style":784},[1164],{"type":524,"value":1165},"      r",{"type":519,"tag":566,"props":1167,"children":1168},{"style":756},[1169],{"type":524,"value":847},{"type":519,"tag":566,"props":1171,"children":1172},{"style":784},[1173],{"type":524,"value":1053},{"type":519,"tag":566,"props":1175,"children":1176},{"style":756},[1177],{"type":524,"value":1178},";",{"type":519,"tag":566,"props":1180,"children":1181},{"style":742},[1182],{"type":524,"value":1183}," // 染蓝色\n",{"type":519,"tag":566,"props":1185,"children":1187},{"class":568,"line":1186},15,[1188,1193,1198],{"type":519,"tag":566,"props":1189,"children":1190},{"style":756},[1191],{"type":524,"value":1192},"    }",{"type":519,"tag":566,"props":1194,"children":1195},{"style":762},[1196],{"type":524,"value":1197}," else",{"type":519,"tag":566,"props":1199,"children":1200},{"style":756},[1201],{"type":524,"value":872},{"type":519,"tag":566,"props":1203,"children":1205},{"class":568,"line":1204},16,[1206,1211,1215,1219,1223],{"type":519,"tag":566,"props":1207,"children":1208},{"style":784},[1209],{"type":524,"value":1210},"      l",{"type":519,"tag":566,"props":1212,"children":1213},{"style":756},[1214],{"type":524,"value":847},{"type":519,"tag":566,"props":1216,"children":1217},{"style":784},[1218],{"type":524,"value":1053},{"type":519,"tag":566,"props":1220,"children":1221},{"style":756},[1222],{"type":524,"value":1178},{"type":519,"tag":566,"props":1224,"children":1225},{"style":742},[1226],{"type":524,"value":1227}," // 染红色\n",{"type":519,"tag":566,"props":1229,"children":1231},{"class":568,"line":1230},17,[1232],{"type":519,"tag":566,"props":1233,"children":1234},{"style":756},[1235],{"type":524,"value":1236},"    }\n",{"type":519,"tag":566,"props":1238,"children":1240},{"class":568,"line":1239},18,[1241],{"type":519,"tag":566,"props":1242,"children":1243},{"style":756},[1244],{"type":524,"value":1245},"  }\n",{"type":519,"tag":566,"props":1247,"children":1249},{"class":568,"line":1248},19,[1250,1255,1259,1263,1268],{"type":519,"tag":566,"props":1251,"children":1252},{"style":762},[1253],{"type":524,"value":1254},"  return",{"type":519,"tag":566,"props":1256,"children":1257},{"style":784},[1258],{"type":524,"value":913},{"type":519,"tag":566,"props":1260,"children":1261},{"style":756},[1262],{"type":524,"value":1112},{"type":519,"tag":566,"props":1264,"children":1265},{"style":784},[1266],{"type":524,"value":1267},"r",{"type":519,"tag":566,"props":1269,"children":1270},{"style":756},[1271],{"type":524,"value":1272},"];\n",{"type":519,"tag":566,"props":1274,"children":1276},{"class":568,"line":1275},20,[1277],{"type":519,"tag":566,"props":1278,"children":1279},{"style":756},[1280],{"type":524,"value":1281},"};\n",{"type":519,"tag":1283,"props":1284,"children":1285},"style",{},[1286],{"type":524,"value":1287},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":829,"depth":829,"links":1289},[1290,1291],{"id":702,"depth":578,"text":702},{"id":725,"depth":578,"text":725},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1298,1300],{"_path":180,"title":179,"description":1299},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":186,"title":185,"description":1301},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1714059005353]