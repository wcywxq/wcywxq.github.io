[{"data":1,"prerenderedAt":1342},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":549,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1337},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":183,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":182,"description":553,"url":554,"body":555,"_type":1332,"_id":1333,"_source":1334,"_file":1335,"_extension":1336},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":556,"children":557,"toc":1328},"root",[558,565,580,585,590,595,634,639,670,675,706,711,739,745,763,768,1322],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":566,"props":567,"children":568},"ul",{},[569,575],{"type":559,"tag":570,"props":571,"children":572},"li",{},[573],{"type":564,"value":574},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":559,"tag":570,"props":576,"children":577},{},[578],{"type":564,"value":579},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":559,"tag":560,"props":581,"children":582},{},[583],{"type":564,"value":584},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":559,"tag":560,"props":586,"children":587},{},[588],{"type":564,"value":589},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":559,"tag":560,"props":591,"children":592},{},[593],{"type":564,"value":594},"示例 1：",{"type":559,"tag":596,"props":597,"children":600},"pre",{"className":598,"code":599,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[601],{"type":559,"tag":602,"props":603,"children":604},"code",{"__ignoreMap":552},[605,616,625],{"type":559,"tag":606,"props":607,"children":610},"span",{"class":608,"line":609},"line",1,[611],{"type":559,"tag":606,"props":612,"children":613},{},[614],{"type":564,"value":615},"输入：nums = [3,4,5,1,2]\n",{"type":559,"tag":606,"props":617,"children":619},{"class":608,"line":618},2,[620],{"type":559,"tag":606,"props":621,"children":622},{},[623],{"type":564,"value":624},"输出：1\n",{"type":559,"tag":606,"props":626,"children":628},{"class":608,"line":627},3,[629],{"type":559,"tag":606,"props":630,"children":631},{},[632],{"type":564,"value":633},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":559,"tag":560,"props":635,"children":636},{},[637],{"type":564,"value":638},"示例 2：",{"type":559,"tag":596,"props":640,"children":642},{"className":598,"code":641,"language":564,"meta":552,"style":552},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[643],{"type":559,"tag":602,"props":644,"children":645},{"__ignoreMap":552},[646,654,662],{"type":559,"tag":606,"props":647,"children":648},{"class":608,"line":609},[649],{"type":559,"tag":606,"props":650,"children":651},{},[652],{"type":564,"value":653},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":559,"tag":606,"props":655,"children":656},{"class":608,"line":618},[657],{"type":559,"tag":606,"props":658,"children":659},{},[660],{"type":564,"value":661},"输出：0\n",{"type":559,"tag":606,"props":663,"children":664},{"class":608,"line":627},[665],{"type":559,"tag":606,"props":666,"children":667},{},[668],{"type":564,"value":669},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":559,"tag":560,"props":671,"children":672},{},[673],{"type":564,"value":674},"示例 3：",{"type":559,"tag":596,"props":676,"children":678},{"className":598,"code":677,"language":564,"meta":552,"style":552},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[679],{"type":559,"tag":602,"props":680,"children":681},{"__ignoreMap":552},[682,690,698],{"type":559,"tag":606,"props":683,"children":684},{"class":608,"line":609},[685],{"type":559,"tag":606,"props":686,"children":687},{},[688],{"type":564,"value":689},"输入：nums = [11,13,15,17]\n",{"type":559,"tag":606,"props":691,"children":692},{"class":608,"line":618},[693],{"type":559,"tag":606,"props":694,"children":695},{},[696],{"type":564,"value":697},"输出：11\n",{"type":559,"tag":606,"props":699,"children":700},{"class":608,"line":627},[701],{"type":559,"tag":606,"props":702,"children":703},{},[704],{"type":564,"value":705},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":559,"tag":560,"props":707,"children":708},{},[709],{"type":564,"value":710},"提示：",{"type":559,"tag":566,"props":712,"children":713},{},[714,719,724,729,734],{"type":559,"tag":570,"props":715,"children":716},{},[717],{"type":564,"value":718},"n == nums.length",{"type":559,"tag":570,"props":720,"children":721},{},[722],{"type":564,"value":723},"1 \u003C= n \u003C= 5000",{"type":559,"tag":570,"props":725,"children":726},{},[727],{"type":564,"value":728},"-5000 \u003C= nums[i] \u003C= 5000",{"type":559,"tag":570,"props":730,"children":731},{},[732],{"type":564,"value":733},"nums 中的所有整数 互不相同",{"type":559,"tag":570,"props":735,"children":736},{},[737],{"type":564,"value":738},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":559,"tag":740,"props":741,"children":743},"h2",{"id":742},"解题思路",[744],{"type":564,"value":742},{"type":559,"tag":566,"props":746,"children":747},{},[748,753,758],{"type":559,"tag":570,"props":749,"children":750},{},[751],{"type":564,"value":752},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":559,"tag":570,"props":754,"children":755},{},[756],{"type":564,"value":757},"n - 1 一定是蓝色",{"type":559,"tag":570,"props":759,"children":760},{},[761],{"type":564,"value":762},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":559,"tag":740,"props":764,"children":766},{"id":765},"实现",[767],{"type":564,"value":765},{"type":559,"tag":596,"props":769,"children":773},{"className":770,"code":771,"language":772,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[774],{"type":559,"tag":602,"props":775,"children":776},{"__ignoreMap":552},[777,786,828,858,867,913,922,931,970,1002,1036,1080,1131,1197,1224,1242,1268,1277,1286,1313],{"type":559,"tag":606,"props":778,"children":779},{"class":608,"line":609},[780],{"type":559,"tag":606,"props":781,"children":783},{"style":782},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[784],{"type":564,"value":785},"/**\n",{"type":559,"tag":606,"props":787,"children":788},{"class":608,"line":618},[789,794,800,806,811,817,822],{"type":559,"tag":606,"props":790,"children":791},{"style":782},[792],{"type":564,"value":793}," * ",{"type":559,"tag":606,"props":795,"children":797},{"style":796},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[798],{"type":564,"value":799},"@",{"type":559,"tag":606,"props":801,"children":803},{"style":802},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[804],{"type":564,"value":805},"param",{"type":559,"tag":606,"props":807,"children":808},{"style":796},[809],{"type":564,"value":810}," {",{"type":559,"tag":606,"props":812,"children":814},{"style":813},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[815],{"type":564,"value":816},"number[]",{"type":559,"tag":606,"props":818,"children":819},{"style":796},[820],{"type":564,"value":821},"}",{"type":559,"tag":606,"props":823,"children":825},{"style":824},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[826],{"type":564,"value":827}," nums\n",{"type":559,"tag":606,"props":829,"children":830},{"class":608,"line":627},[831,835,839,844,848,853],{"type":559,"tag":606,"props":832,"children":833},{"style":782},[834],{"type":564,"value":793},{"type":559,"tag":606,"props":836,"children":837},{"style":796},[838],{"type":564,"value":799},{"type":559,"tag":606,"props":840,"children":841},{"style":802},[842],{"type":564,"value":843},"return",{"type":559,"tag":606,"props":845,"children":846},{"style":796},[847],{"type":564,"value":810},{"type":559,"tag":606,"props":849,"children":850},{"style":813},[851],{"type":564,"value":852},"number",{"type":559,"tag":606,"props":854,"children":855},{"style":796},[856],{"type":564,"value":857},"}\n",{"type":559,"tag":606,"props":859,"children":861},{"class":608,"line":860},4,[862],{"type":559,"tag":606,"props":863,"children":864},{"style":782},[865],{"type":564,"value":866}," */\n",{"type":559,"tag":606,"props":868,"children":870},{"class":608,"line":869},5,[871,877,883,888,893,898,903,908],{"type":559,"tag":606,"props":872,"children":874},{"style":873},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[875],{"type":564,"value":876},"var",{"type":559,"tag":606,"props":878,"children":880},{"style":879},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[881],{"type":564,"value":882}," findMin",{"type":559,"tag":606,"props":884,"children":885},{"style":796},[886],{"type":564,"value":887}," =",{"type":559,"tag":606,"props":889,"children":890},{"style":873},[891],{"type":564,"value":892}," function",{"type":559,"tag":606,"props":894,"children":895},{"style":796},[896],{"type":564,"value":897}," (",{"type":559,"tag":606,"props":899,"children":900},{"style":824},[901],{"type":564,"value":902},"nums",{"type":559,"tag":606,"props":904,"children":905},{"style":796},[906],{"type":564,"value":907},")",{"type":559,"tag":606,"props":909,"children":910},{"style":796},[911],{"type":564,"value":912}," {\n",{"type":559,"tag":606,"props":914,"children":916},{"class":608,"line":915},6,[917],{"type":559,"tag":606,"props":918,"children":919},{"style":782},[920],{"type":564,"value":921},"  // [0, n - 2]\n",{"type":559,"tag":606,"props":923,"children":925},{"class":608,"line":924},7,[926],{"type":559,"tag":606,"props":927,"children":928},{"style":782},[929],{"type":564,"value":930},"  // (-1, n - 1) 开区间写法\n",{"type":559,"tag":606,"props":932,"children":934},{"class":608,"line":933},8,[935,940,945,949,954,959,965],{"type":559,"tag":606,"props":936,"children":937},{"style":873},[938],{"type":564,"value":939},"  let",{"type":559,"tag":606,"props":941,"children":942},{"style":824},[943],{"type":564,"value":944}," len",{"type":559,"tag":606,"props":946,"children":947},{"style":796},[948],{"type":564,"value":887},{"type":559,"tag":606,"props":950,"children":951},{"style":824},[952],{"type":564,"value":953}," nums",{"type":559,"tag":606,"props":955,"children":956},{"style":796},[957],{"type":564,"value":958},".",{"type":559,"tag":606,"props":960,"children":962},{"style":961},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[963],{"type":564,"value":964},"length",{"type":559,"tag":606,"props":966,"children":967},{"style":796},[968],{"type":564,"value":969},";\n",{"type":559,"tag":606,"props":971,"children":973},{"class":608,"line":972},9,[974,978,983,987,992,998],{"type":559,"tag":606,"props":975,"children":976},{"style":873},[977],{"type":564,"value":939},{"type":559,"tag":606,"props":979,"children":980},{"style":824},[981],{"type":564,"value":982}," l",{"type":559,"tag":606,"props":984,"children":985},{"style":796},[986],{"type":564,"value":887},{"type":559,"tag":606,"props":988,"children":989},{"style":873},[990],{"type":564,"value":991}," -",{"type":559,"tag":606,"props":993,"children":995},{"style":994},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[996],{"type":564,"value":997},"1",{"type":559,"tag":606,"props":999,"children":1000},{"style":796},[1001],{"type":564,"value":969},{"type":559,"tag":606,"props":1003,"children":1005},{"class":608,"line":1004},10,[1006,1010,1015,1019,1023,1027,1032],{"type":559,"tag":606,"props":1007,"children":1008},{"style":873},[1009],{"type":564,"value":939},{"type":559,"tag":606,"props":1011,"children":1012},{"style":824},[1013],{"type":564,"value":1014}," r",{"type":559,"tag":606,"props":1016,"children":1017},{"style":796},[1018],{"type":564,"value":887},{"type":559,"tag":606,"props":1020,"children":1021},{"style":824},[1022],{"type":564,"value":944},{"type":559,"tag":606,"props":1024,"children":1025},{"style":873},[1026],{"type":564,"value":991},{"type":559,"tag":606,"props":1028,"children":1029},{"style":994},[1030],{"type":564,"value":1031}," 1",{"type":559,"tag":606,"props":1033,"children":1034},{"style":796},[1035],{"type":564,"value":969},{"type":559,"tag":606,"props":1037,"children":1039},{"class":608,"line":1038},11,[1040,1045,1049,1054,1059,1063,1068,1072,1076],{"type":559,"tag":606,"props":1041,"children":1042},{"style":802},[1043],{"type":564,"value":1044},"  while",{"type":559,"tag":606,"props":1046,"children":1047},{"style":796},[1048],{"type":564,"value":897},{"type":559,"tag":606,"props":1050,"children":1051},{"style":824},[1052],{"type":564,"value":1053},"l",{"type":559,"tag":606,"props":1055,"children":1056},{"style":873},[1057],{"type":564,"value":1058}," +",{"type":559,"tag":606,"props":1060,"children":1061},{"style":994},[1062],{"type":564,"value":1031},{"type":559,"tag":606,"props":1064,"children":1065},{"style":796},[1066],{"type":564,"value":1067}," \u003C",{"type":559,"tag":606,"props":1069,"children":1070},{"style":824},[1071],{"type":564,"value":1014},{"type":559,"tag":606,"props":1073,"children":1074},{"style":796},[1075],{"type":564,"value":907},{"type":559,"tag":606,"props":1077,"children":1078},{"style":796},[1079],{"type":564,"value":912},{"type":559,"tag":606,"props":1081,"children":1083},{"class":608,"line":1082},12,[1084,1089,1094,1098,1102,1106,1110,1114,1118,1123,1127],{"type":559,"tag":606,"props":1085,"children":1086},{"style":873},[1087],{"type":564,"value":1088},"    let",{"type":559,"tag":606,"props":1090,"children":1091},{"style":824},[1092],{"type":564,"value":1093}," mid",{"type":559,"tag":606,"props":1095,"children":1096},{"style":796},[1097],{"type":564,"value":887},{"type":559,"tag":606,"props":1099,"children":1100},{"style":796},[1101],{"type":564,"value":897},{"type":559,"tag":606,"props":1103,"children":1104},{"style":824},[1105],{"type":564,"value":1053},{"type":559,"tag":606,"props":1107,"children":1108},{"style":873},[1109],{"type":564,"value":1058},{"type":559,"tag":606,"props":1111,"children":1112},{"style":824},[1113],{"type":564,"value":1014},{"type":559,"tag":606,"props":1115,"children":1116},{"style":796},[1117],{"type":564,"value":907},{"type":559,"tag":606,"props":1119,"children":1120},{"style":873},[1121],{"type":564,"value":1122}," >>",{"type":559,"tag":606,"props":1124,"children":1125},{"style":994},[1126],{"type":564,"value":1031},{"type":559,"tag":606,"props":1128,"children":1129},{"style":796},[1130],{"type":564,"value":969},{"type":559,"tag":606,"props":1132,"children":1134},{"class":608,"line":1133},13,[1135,1140,1144,1148,1153,1158,1163,1167,1171,1175,1180,1184,1188,1193],{"type":559,"tag":606,"props":1136,"children":1137},{"style":802},[1138],{"type":564,"value":1139},"    if",{"type":559,"tag":606,"props":1141,"children":1142},{"style":796},[1143],{"type":564,"value":897},{"type":559,"tag":606,"props":1145,"children":1146},{"style":824},[1147],{"type":564,"value":902},{"type":559,"tag":606,"props":1149,"children":1150},{"style":796},[1151],{"type":564,"value":1152},"[",{"type":559,"tag":606,"props":1154,"children":1155},{"style":824},[1156],{"type":564,"value":1157},"mid",{"type":559,"tag":606,"props":1159,"children":1160},{"style":796},[1161],{"type":564,"value":1162},"]",{"type":559,"tag":606,"props":1164,"children":1165},{"style":796},[1166],{"type":564,"value":1067},{"type":559,"tag":606,"props":1168,"children":1169},{"style":824},[1170],{"type":564,"value":953},{"type":559,"tag":606,"props":1172,"children":1173},{"style":796},[1174],{"type":564,"value":1152},{"type":559,"tag":606,"props":1176,"children":1177},{"style":824},[1178],{"type":564,"value":1179},"len",{"type":559,"tag":606,"props":1181,"children":1182},{"style":873},[1183],{"type":564,"value":991},{"type":559,"tag":606,"props":1185,"children":1186},{"style":994},[1187],{"type":564,"value":1031},{"type":559,"tag":606,"props":1189,"children":1190},{"style":796},[1191],{"type":564,"value":1192},"])",{"type":559,"tag":606,"props":1194,"children":1195},{"style":796},[1196],{"type":564,"value":912},{"type":559,"tag":606,"props":1198,"children":1200},{"class":608,"line":1199},14,[1201,1206,1210,1214,1219],{"type":559,"tag":606,"props":1202,"children":1203},{"style":824},[1204],{"type":564,"value":1205},"      r",{"type":559,"tag":606,"props":1207,"children":1208},{"style":796},[1209],{"type":564,"value":887},{"type":559,"tag":606,"props":1211,"children":1212},{"style":824},[1213],{"type":564,"value":1093},{"type":559,"tag":606,"props":1215,"children":1216},{"style":796},[1217],{"type":564,"value":1218},";",{"type":559,"tag":606,"props":1220,"children":1221},{"style":782},[1222],{"type":564,"value":1223}," // 染蓝色\n",{"type":559,"tag":606,"props":1225,"children":1227},{"class":608,"line":1226},15,[1228,1233,1238],{"type":559,"tag":606,"props":1229,"children":1230},{"style":796},[1231],{"type":564,"value":1232},"    }",{"type":559,"tag":606,"props":1234,"children":1235},{"style":802},[1236],{"type":564,"value":1237}," else",{"type":559,"tag":606,"props":1239,"children":1240},{"style":796},[1241],{"type":564,"value":912},{"type":559,"tag":606,"props":1243,"children":1245},{"class":608,"line":1244},16,[1246,1251,1255,1259,1263],{"type":559,"tag":606,"props":1247,"children":1248},{"style":824},[1249],{"type":564,"value":1250},"      l",{"type":559,"tag":606,"props":1252,"children":1253},{"style":796},[1254],{"type":564,"value":887},{"type":559,"tag":606,"props":1256,"children":1257},{"style":824},[1258],{"type":564,"value":1093},{"type":559,"tag":606,"props":1260,"children":1261},{"style":796},[1262],{"type":564,"value":1218},{"type":559,"tag":606,"props":1264,"children":1265},{"style":782},[1266],{"type":564,"value":1267}," // 染红色\n",{"type":559,"tag":606,"props":1269,"children":1271},{"class":608,"line":1270},17,[1272],{"type":559,"tag":606,"props":1273,"children":1274},{"style":796},[1275],{"type":564,"value":1276},"    }\n",{"type":559,"tag":606,"props":1278,"children":1280},{"class":608,"line":1279},18,[1281],{"type":559,"tag":606,"props":1282,"children":1283},{"style":796},[1284],{"type":564,"value":1285},"  }\n",{"type":559,"tag":606,"props":1287,"children":1289},{"class":608,"line":1288},19,[1290,1295,1299,1303,1308],{"type":559,"tag":606,"props":1291,"children":1292},{"style":802},[1293],{"type":564,"value":1294},"  return",{"type":559,"tag":606,"props":1296,"children":1297},{"style":824},[1298],{"type":564,"value":953},{"type":559,"tag":606,"props":1300,"children":1301},{"style":796},[1302],{"type":564,"value":1152},{"type":559,"tag":606,"props":1304,"children":1305},{"style":824},[1306],{"type":564,"value":1307},"r",{"type":559,"tag":606,"props":1309,"children":1310},{"style":796},[1311],{"type":564,"value":1312},"];\n",{"type":559,"tag":606,"props":1314,"children":1316},{"class":608,"line":1315},20,[1317],{"type":559,"tag":606,"props":1318,"children":1319},{"style":796},[1320],{"type":564,"value":1321},"};\n",{"type":559,"tag":1323,"props":1324,"children":1325},"style",{},[1326],{"type":564,"value":1327},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":869,"depth":869,"links":1329},[1330,1331],{"id":742,"depth":618,"text":742},{"id":765,"depth":618,"text":765},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1338,1340],{"_path":180,"title":179,"description":1339},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":186,"title":185,"description":1341},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1715007496368]