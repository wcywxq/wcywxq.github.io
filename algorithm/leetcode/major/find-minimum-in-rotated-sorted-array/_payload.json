[{"data":1,"prerenderedAt":1231},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array":463,"/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array-surround":1226},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":180,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":179,"description":467,"url":468,"body":469,"_type":1221,"_id":1222,"_source":1223,"_file":1224,"_extension":1225},"major",false,"","已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到：","https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array",{"type":470,"children":471,"toc":1217},"root",[472,479,494,499,504,509,548,553,584,589,620,625,653,659,677,682,1211],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":480,"props":481,"children":482},"ul",{},[483,489],{"type":473,"tag":484,"props":485,"children":486},"li",{},[487],{"type":478,"value":488},"若旋转 4 次，则可以得到 [4,5,6,7,0,1,2]",{"type":473,"tag":484,"props":490,"children":491},{},[492],{"type":478,"value":493},"若旋转 7 次，则可以得到 [0,1,2,4,5,6,7]\n注意，数组 [a[0], a[1], a[2], ..., a[n-1]] 旋转一次 的结果为数组 [a[n-1], a[0], a[1], a[2], ..., a[n-2]] 。",{"type":473,"tag":474,"props":495,"children":496},{},[497],{"type":478,"value":498},"给你一个元素值 互不相同 的数组 nums ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 最小元素 。",{"type":473,"tag":474,"props":500,"children":501},{},[502],{"type":478,"value":503},"你必须设计一个时间复杂度为 O(log n) 的算法解决此问题。",{"type":473,"tag":474,"props":505,"children":506},{},[507],{"type":478,"value":508},"示例 1：",{"type":473,"tag":510,"props":511,"children":514},"pre",{"className":512,"code":513,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [3,4,5,1,2]\n输出：1\n解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",[515],{"type":473,"tag":516,"props":517,"children":518},"code",{"__ignoreMap":466},[519,530,539],{"type":473,"tag":520,"props":521,"children":524},"span",{"class":522,"line":523},"line",1,[525],{"type":473,"tag":520,"props":526,"children":527},{},[528],{"type":478,"value":529},"输入：nums = [3,4,5,1,2]\n",{"type":473,"tag":520,"props":531,"children":533},{"class":522,"line":532},2,[534],{"type":473,"tag":520,"props":535,"children":536},{},[537],{"type":478,"value":538},"输出：1\n",{"type":473,"tag":520,"props":540,"children":542},{"class":522,"line":541},3,[543],{"type":473,"tag":520,"props":544,"children":545},{},[546],{"type":478,"value":547},"解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。\n",{"type":473,"tag":474,"props":549,"children":550},{},[551],{"type":478,"value":552},"示例 2：",{"type":473,"tag":510,"props":554,"children":556},{"className":512,"code":555,"language":478,"meta":466,"style":466},"输入：nums = [4,5,6,7,0,1,2]\n输出：0\n解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",[557],{"type":473,"tag":516,"props":558,"children":559},{"__ignoreMap":466},[560,568,576],{"type":473,"tag":520,"props":561,"children":562},{"class":522,"line":523},[563],{"type":473,"tag":520,"props":564,"children":565},{},[566],{"type":478,"value":567},"输入：nums = [4,5,6,7,0,1,2]\n",{"type":473,"tag":520,"props":569,"children":570},{"class":522,"line":532},[571],{"type":473,"tag":520,"props":572,"children":573},{},[574],{"type":478,"value":575},"输出：0\n",{"type":473,"tag":520,"props":577,"children":578},{"class":522,"line":541},[579],{"type":473,"tag":520,"props":580,"children":581},{},[582],{"type":478,"value":583},"解释：原数组为 [0,1,2,4,5,6,7] ，旋转 3 次得到输入数组。\n",{"type":473,"tag":474,"props":585,"children":586},{},[587],{"type":478,"value":588},"示例 3：",{"type":473,"tag":510,"props":590,"children":592},{"className":512,"code":591,"language":478,"meta":466,"style":466},"输入：nums = [11,13,15,17]\n输出：11\n解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",[593],{"type":473,"tag":516,"props":594,"children":595},{"__ignoreMap":466},[596,604,612],{"type":473,"tag":520,"props":597,"children":598},{"class":522,"line":523},[599],{"type":473,"tag":520,"props":600,"children":601},{},[602],{"type":478,"value":603},"输入：nums = [11,13,15,17]\n",{"type":473,"tag":520,"props":605,"children":606},{"class":522,"line":532},[607],{"type":473,"tag":520,"props":608,"children":609},{},[610],{"type":478,"value":611},"输出：11\n",{"type":473,"tag":520,"props":613,"children":614},{"class":522,"line":541},[615],{"type":473,"tag":520,"props":616,"children":617},{},[618],{"type":478,"value":619},"解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。\n",{"type":473,"tag":474,"props":621,"children":622},{},[623],{"type":478,"value":624},"提示：",{"type":473,"tag":480,"props":626,"children":627},{},[628,633,638,643,648],{"type":473,"tag":484,"props":629,"children":630},{},[631],{"type":478,"value":632},"n == nums.length",{"type":473,"tag":484,"props":634,"children":635},{},[636],{"type":478,"value":637},"1 \u003C= n \u003C= 5000",{"type":473,"tag":484,"props":639,"children":640},{},[641],{"type":478,"value":642},"-5000 \u003C= nums[i] \u003C= 5000",{"type":473,"tag":484,"props":644,"children":645},{},[646],{"type":478,"value":647},"nums 中的所有整数 互不相同",{"type":473,"tag":484,"props":649,"children":650},{},[651],{"type":478,"value":652},"nums 原来是一个升序排序的数组，并进行了 1 至 n 次旋转",{"type":473,"tag":654,"props":655,"children":657},"h2",{"id":656},"解题思路",[658],{"type":478,"value":656},{"type":473,"tag":480,"props":660,"children":661},{},[662,667,672],{"type":473,"tag":484,"props":663,"children":664},{},[665],{"type":478,"value":666},"经过分析，红色即最小值左侧，蓝色即最小值及其右侧",{"type":473,"tag":484,"props":668,"children":669},{},[670],{"type":478,"value":671},"n - 1 一定是蓝色",{"type":473,"tag":484,"props":673,"children":674},{},[675],{"type":478,"value":676},"总结：小于最后一个数，就是蓝色，否则就是红色",{"type":473,"tag":654,"props":678,"children":680},{"id":679},"实现",[681],{"type":478,"value":679},{"type":473,"tag":510,"props":683,"children":687},{"className":684,"code":685,"language":686,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findMin = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let len = nums.length;\n  let l = -1;\n  let r = len - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] \u003C nums[len - 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return nums[r];\n};\n","js",[688],{"type":473,"tag":516,"props":689,"children":690},{"__ignoreMap":466},[691,700,726,743,752,796,805,814,855,887,921,962,1014,1077,1104,1123,1149,1158,1167,1198],{"type":473,"tag":520,"props":692,"children":693},{"class":522,"line":523},[694],{"type":473,"tag":520,"props":695,"children":697},{"style":696},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[698],{"type":478,"value":699},"/**\n",{"type":473,"tag":520,"props":701,"children":702},{"class":522,"line":532},[703,708,714,720],{"type":473,"tag":520,"props":704,"children":705},{"style":696},[706],{"type":478,"value":707}," * ",{"type":473,"tag":520,"props":709,"children":711},{"style":710},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[712],{"type":478,"value":713},"@param",{"type":473,"tag":520,"props":715,"children":717},{"style":716},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[718],{"type":478,"value":719}," {number[]}",{"type":473,"tag":520,"props":721,"children":723},{"style":722},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[724],{"type":478,"value":725}," nums\n",{"type":473,"tag":520,"props":727,"children":728},{"class":522,"line":541},[729,733,738],{"type":473,"tag":520,"props":730,"children":731},{"style":696},[732],{"type":478,"value":707},{"type":473,"tag":520,"props":734,"children":735},{"style":710},[736],{"type":478,"value":737},"@return",{"type":473,"tag":520,"props":739,"children":740},{"style":716},[741],{"type":478,"value":742}," {number}\n",{"type":473,"tag":520,"props":744,"children":746},{"class":522,"line":745},4,[747],{"type":473,"tag":520,"props":748,"children":749},{"style":696},[750],{"type":478,"value":751}," */\n",{"type":473,"tag":520,"props":753,"children":755},{"class":522,"line":754},5,[756,762,768,774,779,785,791],{"type":473,"tag":520,"props":757,"children":759},{"style":758},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[760],{"type":478,"value":761},"var",{"type":473,"tag":520,"props":763,"children":765},{"style":764},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[766],{"type":478,"value":767}," findMin",{"type":473,"tag":520,"props":769,"children":771},{"style":770},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[772],{"type":478,"value":773}," =",{"type":473,"tag":520,"props":775,"children":776},{"style":758},[777],{"type":478,"value":778}," function",{"type":473,"tag":520,"props":780,"children":782},{"style":781},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[783],{"type":478,"value":784}," (",{"type":473,"tag":520,"props":786,"children":788},{"style":787},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[789],{"type":478,"value":790},"nums",{"type":473,"tag":520,"props":792,"children":793},{"style":781},[794],{"type":478,"value":795},") {\n",{"type":473,"tag":520,"props":797,"children":799},{"class":522,"line":798},6,[800],{"type":473,"tag":520,"props":801,"children":802},{"style":696},[803],{"type":478,"value":804},"  // [0, n - 2]\n",{"type":473,"tag":520,"props":806,"children":808},{"class":522,"line":807},7,[809],{"type":473,"tag":520,"props":810,"children":811},{"style":696},[812],{"type":478,"value":813},"  // (-1, n - 1) 开区间写法\n",{"type":473,"tag":520,"props":815,"children":817},{"class":522,"line":816},8,[818,823,829,833,838,844,849],{"type":473,"tag":520,"props":819,"children":820},{"style":758},[821],{"type":478,"value":822},"  let",{"type":473,"tag":520,"props":824,"children":826},{"style":825},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[827],{"type":478,"value":828}," len",{"type":473,"tag":520,"props":830,"children":831},{"style":770},[832],{"type":478,"value":773},{"type":473,"tag":520,"props":834,"children":835},{"style":825},[836],{"type":478,"value":837}," nums",{"type":473,"tag":520,"props":839,"children":841},{"style":840},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[842],{"type":478,"value":843},".",{"type":473,"tag":520,"props":845,"children":846},{"style":781},[847],{"type":478,"value":848},"length",{"type":473,"tag":520,"props":850,"children":852},{"style":851},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[853],{"type":478,"value":854},";\n",{"type":473,"tag":520,"props":856,"children":858},{"class":522,"line":857},9,[859,863,868,872,877,883],{"type":473,"tag":520,"props":860,"children":861},{"style":758},[862],{"type":478,"value":822},{"type":473,"tag":520,"props":864,"children":865},{"style":825},[866],{"type":478,"value":867}," l",{"type":473,"tag":520,"props":869,"children":870},{"style":770},[871],{"type":478,"value":773},{"type":473,"tag":520,"props":873,"children":874},{"style":770},[875],{"type":478,"value":876}," -",{"type":473,"tag":520,"props":878,"children":880},{"style":879},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[881],{"type":478,"value":882},"1",{"type":473,"tag":520,"props":884,"children":885},{"style":851},[886],{"type":478,"value":854},{"type":473,"tag":520,"props":888,"children":890},{"class":522,"line":889},10,[891,895,900,904,908,912,917],{"type":473,"tag":520,"props":892,"children":893},{"style":758},[894],{"type":478,"value":822},{"type":473,"tag":520,"props":896,"children":897},{"style":825},[898],{"type":478,"value":899}," r",{"type":473,"tag":520,"props":901,"children":902},{"style":770},[903],{"type":478,"value":773},{"type":473,"tag":520,"props":905,"children":906},{"style":825},[907],{"type":478,"value":828},{"type":473,"tag":520,"props":909,"children":910},{"style":770},[911],{"type":478,"value":876},{"type":473,"tag":520,"props":913,"children":914},{"style":879},[915],{"type":478,"value":916}," 1",{"type":473,"tag":520,"props":918,"children":919},{"style":851},[920],{"type":478,"value":854},{"type":473,"tag":520,"props":922,"children":924},{"class":522,"line":923},11,[925,931,935,940,945,949,954,958],{"type":473,"tag":520,"props":926,"children":928},{"style":927},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[929],{"type":478,"value":930},"  while",{"type":473,"tag":520,"props":932,"children":933},{"style":781},[934],{"type":478,"value":784},{"type":473,"tag":520,"props":936,"children":937},{"style":825},[938],{"type":478,"value":939},"l",{"type":473,"tag":520,"props":941,"children":942},{"style":770},[943],{"type":478,"value":944}," +",{"type":473,"tag":520,"props":946,"children":947},{"style":879},[948],{"type":478,"value":916},{"type":473,"tag":520,"props":950,"children":951},{"style":770},[952],{"type":478,"value":953}," \u003C",{"type":473,"tag":520,"props":955,"children":956},{"style":825},[957],{"type":478,"value":899},{"type":473,"tag":520,"props":959,"children":960},{"style":781},[961],{"type":478,"value":795},{"type":473,"tag":520,"props":963,"children":965},{"class":522,"line":964},12,[966,971,976,980,984,988,992,996,1001,1006,1010],{"type":473,"tag":520,"props":967,"children":968},{"style":758},[969],{"type":478,"value":970},"    let",{"type":473,"tag":520,"props":972,"children":973},{"style":825},[974],{"type":478,"value":975}," mid",{"type":473,"tag":520,"props":977,"children":978},{"style":770},[979],{"type":478,"value":773},{"type":473,"tag":520,"props":981,"children":982},{"style":781},[983],{"type":478,"value":784},{"type":473,"tag":520,"props":985,"children":986},{"style":825},[987],{"type":478,"value":939},{"type":473,"tag":520,"props":989,"children":990},{"style":770},[991],{"type":478,"value":944},{"type":473,"tag":520,"props":993,"children":994},{"style":825},[995],{"type":478,"value":899},{"type":473,"tag":520,"props":997,"children":998},{"style":781},[999],{"type":478,"value":1000},") ",{"type":473,"tag":520,"props":1002,"children":1003},{"style":770},[1004],{"type":478,"value":1005},">>",{"type":473,"tag":520,"props":1007,"children":1008},{"style":879},[1009],{"type":478,"value":916},{"type":473,"tag":520,"props":1011,"children":1012},{"style":851},[1013],{"type":478,"value":854},{"type":473,"tag":520,"props":1015,"children":1017},{"class":522,"line":1016},13,[1018,1023,1027,1031,1036,1041,1046,1051,1055,1059,1064,1068,1072],{"type":473,"tag":520,"props":1019,"children":1020},{"style":927},[1021],{"type":478,"value":1022},"    if",{"type":473,"tag":520,"props":1024,"children":1025},{"style":781},[1026],{"type":478,"value":784},{"type":473,"tag":520,"props":1028,"children":1029},{"style":825},[1030],{"type":478,"value":790},{"type":473,"tag":520,"props":1032,"children":1033},{"style":781},[1034],{"type":478,"value":1035},"[",{"type":473,"tag":520,"props":1037,"children":1038},{"style":825},[1039],{"type":478,"value":1040},"mid",{"type":473,"tag":520,"props":1042,"children":1043},{"style":781},[1044],{"type":478,"value":1045},"] ",{"type":473,"tag":520,"props":1047,"children":1048},{"style":770},[1049],{"type":478,"value":1050},"\u003C",{"type":473,"tag":520,"props":1052,"children":1053},{"style":825},[1054],{"type":478,"value":837},{"type":473,"tag":520,"props":1056,"children":1057},{"style":781},[1058],{"type":478,"value":1035},{"type":473,"tag":520,"props":1060,"children":1061},{"style":825},[1062],{"type":478,"value":1063},"len",{"type":473,"tag":520,"props":1065,"children":1066},{"style":770},[1067],{"type":478,"value":876},{"type":473,"tag":520,"props":1069,"children":1070},{"style":879},[1071],{"type":478,"value":916},{"type":473,"tag":520,"props":1073,"children":1074},{"style":781},[1075],{"type":478,"value":1076},"]) {\n",{"type":473,"tag":520,"props":1078,"children":1080},{"class":522,"line":1079},14,[1081,1086,1090,1094,1099],{"type":473,"tag":520,"props":1082,"children":1083},{"style":825},[1084],{"type":478,"value":1085},"      r",{"type":473,"tag":520,"props":1087,"children":1088},{"style":770},[1089],{"type":478,"value":773},{"type":473,"tag":520,"props":1091,"children":1092},{"style":825},[1093],{"type":478,"value":975},{"type":473,"tag":520,"props":1095,"children":1096},{"style":851},[1097],{"type":478,"value":1098},";",{"type":473,"tag":520,"props":1100,"children":1101},{"style":696},[1102],{"type":478,"value":1103}," // 染蓝色\n",{"type":473,"tag":520,"props":1105,"children":1107},{"class":522,"line":1106},15,[1108,1113,1118],{"type":473,"tag":520,"props":1109,"children":1110},{"style":781},[1111],{"type":478,"value":1112},"    } ",{"type":473,"tag":520,"props":1114,"children":1115},{"style":927},[1116],{"type":478,"value":1117},"else",{"type":473,"tag":520,"props":1119,"children":1120},{"style":781},[1121],{"type":478,"value":1122}," {\n",{"type":473,"tag":520,"props":1124,"children":1126},{"class":522,"line":1125},16,[1127,1132,1136,1140,1144],{"type":473,"tag":520,"props":1128,"children":1129},{"style":825},[1130],{"type":478,"value":1131},"      l",{"type":473,"tag":520,"props":1133,"children":1134},{"style":770},[1135],{"type":478,"value":773},{"type":473,"tag":520,"props":1137,"children":1138},{"style":825},[1139],{"type":478,"value":975},{"type":473,"tag":520,"props":1141,"children":1142},{"style":851},[1143],{"type":478,"value":1098},{"type":473,"tag":520,"props":1145,"children":1146},{"style":696},[1147],{"type":478,"value":1148}," // 染红色\n",{"type":473,"tag":520,"props":1150,"children":1152},{"class":522,"line":1151},17,[1153],{"type":473,"tag":520,"props":1154,"children":1155},{"style":781},[1156],{"type":478,"value":1157},"    }\n",{"type":473,"tag":520,"props":1159,"children":1161},{"class":522,"line":1160},18,[1162],{"type":473,"tag":520,"props":1163,"children":1164},{"style":781},[1165],{"type":478,"value":1166},"  }\n",{"type":473,"tag":520,"props":1168,"children":1170},{"class":522,"line":1169},19,[1171,1176,1180,1184,1189,1194],{"type":473,"tag":520,"props":1172,"children":1173},{"style":927},[1174],{"type":478,"value":1175},"  return",{"type":473,"tag":520,"props":1177,"children":1178},{"style":825},[1179],{"type":478,"value":837},{"type":473,"tag":520,"props":1181,"children":1182},{"style":781},[1183],{"type":478,"value":1035},{"type":473,"tag":520,"props":1185,"children":1186},{"style":825},[1187],{"type":478,"value":1188},"r",{"type":473,"tag":520,"props":1190,"children":1191},{"style":781},[1192],{"type":478,"value":1193},"]",{"type":473,"tag":520,"props":1195,"children":1196},{"style":851},[1197],{"type":478,"value":854},{"type":473,"tag":520,"props":1199,"children":1201},{"class":522,"line":1200},20,[1202,1207],{"type":473,"tag":520,"props":1203,"children":1204},{"style":781},[1205],{"type":478,"value":1206},"}",{"type":473,"tag":520,"props":1208,"children":1209},{"style":851},[1210],{"type":478,"value":854},{"type":473,"tag":1212,"props":1213,"children":1214},"style",{},[1215],{"type":478,"value":1216},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":754,"depth":754,"links":1218},[1219,1220],{"id":656,"depth":532,"text":656},{"id":679,"depth":532,"text":679},"markdown","content:1.algorithm:3.leetcode:3.major:153.find-minimum-in-rotated-sorted-array.md","content","1.algorithm/3.leetcode/3.major/153.find-minimum-in-rotated-sorted-array.md","md",[1227,1229],{"_path":177,"title":176,"description":1228},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",{"_path":183,"title":182,"description":1230},"设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。",1713695847884]