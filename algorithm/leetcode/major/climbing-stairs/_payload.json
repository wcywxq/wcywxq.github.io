[{"data":1,"prerenderedAt":1158},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":524,"/algorithm/leetcode/major/climbing-stairs-surround":1153},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":138,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":137,"description":528,"url":529,"body":530,"_type":1148,"_id":1149,"_source":1150,"_file":1151,"_extension":1152},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":531,"children":532,"toc":1142},"root",[533,540,545,550,617,622,685,690,700,706,711,717,1136],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":539,"value":549},"示例 1：",{"type":534,"tag":551,"props":552,"children":555},"pre",{"className":553,"code":554,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[556],{"type":534,"tag":557,"props":558,"children":559},"code",{"__ignoreMap":527},[560,571,580,589,599,608],{"type":534,"tag":561,"props":562,"children":565},"span",{"class":563,"line":564},"line",1,[566],{"type":534,"tag":561,"props":567,"children":568},{},[569],{"type":539,"value":570},"输入：n = 2\n",{"type":534,"tag":561,"props":572,"children":574},{"class":563,"line":573},2,[575],{"type":534,"tag":561,"props":576,"children":577},{},[578],{"type":539,"value":579},"输出：2\n",{"type":534,"tag":561,"props":581,"children":583},{"class":563,"line":582},3,[584],{"type":534,"tag":561,"props":585,"children":586},{},[587],{"type":539,"value":588},"解释：有两种方法可以爬到楼顶。\n",{"type":534,"tag":561,"props":590,"children":592},{"class":563,"line":591},4,[593],{"type":534,"tag":561,"props":594,"children":596},{"emptyLinePlaceholder":595},true,[597],{"type":539,"value":598},"\n",{"type":534,"tag":561,"props":600,"children":602},{"class":563,"line":601},5,[603],{"type":534,"tag":561,"props":604,"children":605},{},[606],{"type":539,"value":607},"1. 1 阶 + 1 阶\n",{"type":534,"tag":561,"props":609,"children":611},{"class":563,"line":610},6,[612],{"type":534,"tag":561,"props":613,"children":614},{},[615],{"type":539,"value":616},"2. 2 阶\n",{"type":534,"tag":535,"props":618,"children":619},{},[620],{"type":539,"value":621},"示例 2：",{"type":534,"tag":551,"props":623,"children":625},{"className":553,"code":624,"language":539,"meta":527,"style":527},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[626],{"type":534,"tag":557,"props":627,"children":628},{"__ignoreMap":527},[629,637,645,653,660,668,676],{"type":534,"tag":561,"props":630,"children":631},{"class":563,"line":564},[632],{"type":534,"tag":561,"props":633,"children":634},{},[635],{"type":539,"value":636},"输入：n = 3\n",{"type":534,"tag":561,"props":638,"children":639},{"class":563,"line":573},[640],{"type":534,"tag":561,"props":641,"children":642},{},[643],{"type":539,"value":644},"输出：3\n",{"type":534,"tag":561,"props":646,"children":647},{"class":563,"line":582},[648],{"type":534,"tag":561,"props":649,"children":650},{},[651],{"type":539,"value":652},"解释：有三种方法可以爬到楼顶。\n",{"type":534,"tag":561,"props":654,"children":655},{"class":563,"line":591},[656],{"type":534,"tag":561,"props":657,"children":658},{"emptyLinePlaceholder":595},[659],{"type":539,"value":598},{"type":534,"tag":561,"props":661,"children":662},{"class":563,"line":601},[663],{"type":534,"tag":561,"props":664,"children":665},{},[666],{"type":539,"value":667},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":534,"tag":561,"props":669,"children":670},{"class":563,"line":610},[671],{"type":534,"tag":561,"props":672,"children":673},{},[674],{"type":539,"value":675},"2. 1 阶 + 2 阶\n",{"type":534,"tag":561,"props":677,"children":679},{"class":563,"line":678},7,[680],{"type":534,"tag":561,"props":681,"children":682},{},[683],{"type":539,"value":684},"3. 2 阶 + 1 阶\n",{"type":534,"tag":535,"props":686,"children":687},{},[688],{"type":539,"value":689},"提示：",{"type":534,"tag":691,"props":692,"children":693},"ul",{},[694],{"type":534,"tag":695,"props":696,"children":697},"li",{},[698],{"type":539,"value":699},"1 \u003C= n \u003C= 45",{"type":534,"tag":701,"props":702,"children":704},"h2",{"id":703},"解题思路",[705],{"type":539,"value":703},{"type":534,"tag":701,"props":707,"children":709},{"id":708},"实现",[710],{"type":539,"value":708},{"type":534,"tag":712,"props":713,"children":715},"h3",{"id":714},"动态规划",[716],{"type":539,"value":714},{"type":534,"tag":551,"props":718,"children":722},{"className":719,"code":720,"language":721,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[723],{"type":534,"tag":557,"props":724,"children":725},{"__ignoreMap":527},[726,735,777,806,814,859,881,940,1012,1093,1102,1127],{"type":534,"tag":561,"props":727,"children":728},{"class":563,"line":564},[729],{"type":534,"tag":561,"props":730,"children":732},{"style":731},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[733],{"type":539,"value":734},"/**\n",{"type":534,"tag":561,"props":736,"children":737},{"class":563,"line":573},[738,743,749,755,760,766,771],{"type":534,"tag":561,"props":739,"children":740},{"style":731},[741],{"type":539,"value":742}," * ",{"type":534,"tag":561,"props":744,"children":746},{"style":745},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[747],{"type":539,"value":748},"@",{"type":534,"tag":561,"props":750,"children":752},{"style":751},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[753],{"type":539,"value":754},"param",{"type":534,"tag":561,"props":756,"children":757},{"style":745},[758],{"type":539,"value":759}," {",{"type":534,"tag":561,"props":761,"children":763},{"style":762},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[764],{"type":539,"value":765},"number",{"type":534,"tag":561,"props":767,"children":768},{"style":745},[769],{"type":539,"value":770},"}",{"type":534,"tag":561,"props":772,"children":774},{"style":773},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[775],{"type":539,"value":776}," n\n",{"type":534,"tag":561,"props":778,"children":779},{"class":563,"line":582},[780,784,788,793,797,801],{"type":534,"tag":561,"props":781,"children":782},{"style":731},[783],{"type":539,"value":742},{"type":534,"tag":561,"props":785,"children":786},{"style":745},[787],{"type":539,"value":748},{"type":534,"tag":561,"props":789,"children":790},{"style":751},[791],{"type":539,"value":792},"return",{"type":534,"tag":561,"props":794,"children":795},{"style":745},[796],{"type":539,"value":759},{"type":534,"tag":561,"props":798,"children":799},{"style":762},[800],{"type":539,"value":765},{"type":534,"tag":561,"props":802,"children":803},{"style":745},[804],{"type":539,"value":805},"}\n",{"type":534,"tag":561,"props":807,"children":808},{"class":563,"line":591},[809],{"type":534,"tag":561,"props":810,"children":811},{"style":731},[812],{"type":539,"value":813}," */\n",{"type":534,"tag":561,"props":815,"children":816},{"class":563,"line":601},[817,823,829,834,839,844,849,854],{"type":534,"tag":561,"props":818,"children":820},{"style":819},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[821],{"type":539,"value":822},"var",{"type":534,"tag":561,"props":824,"children":826},{"style":825},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[827],{"type":539,"value":828}," climbStairs",{"type":534,"tag":561,"props":830,"children":831},{"style":745},[832],{"type":539,"value":833}," =",{"type":534,"tag":561,"props":835,"children":836},{"style":819},[837],{"type":539,"value":838}," function",{"type":534,"tag":561,"props":840,"children":841},{"style":745},[842],{"type":539,"value":843}," (",{"type":534,"tag":561,"props":845,"children":846},{"style":773},[847],{"type":539,"value":848},"n",{"type":534,"tag":561,"props":850,"children":851},{"style":745},[852],{"type":539,"value":853},")",{"type":534,"tag":561,"props":855,"children":856},{"style":745},[857],{"type":539,"value":858}," {\n",{"type":534,"tag":561,"props":860,"children":861},{"class":563,"line":610},[862,867,872,876],{"type":534,"tag":561,"props":863,"children":864},{"style":819},[865],{"type":539,"value":866},"  let",{"type":534,"tag":561,"props":868,"children":869},{"style":773},[870],{"type":539,"value":871}," dp",{"type":534,"tag":561,"props":873,"children":874},{"style":745},[875],{"type":539,"value":833},{"type":534,"tag":561,"props":877,"children":878},{"style":745},[879],{"type":539,"value":880}," [];\n",{"type":534,"tag":561,"props":882,"children":883},{"class":563,"line":678},[884,889,894,900,905,909,913,917,922,926,930,935],{"type":534,"tag":561,"props":885,"children":886},{"style":773},[887],{"type":539,"value":888},"  dp",{"type":534,"tag":561,"props":890,"children":891},{"style":745},[892],{"type":539,"value":893},"[",{"type":534,"tag":561,"props":895,"children":897},{"style":896},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[898],{"type":539,"value":899},"0",{"type":534,"tag":561,"props":901,"children":902},{"style":745},[903],{"type":539,"value":904},"]",{"type":534,"tag":561,"props":906,"children":907},{"style":745},[908],{"type":539,"value":833},{"type":534,"tag":561,"props":910,"children":911},{"style":773},[912],{"type":539,"value":871},{"type":534,"tag":561,"props":914,"children":915},{"style":745},[916],{"type":539,"value":893},{"type":534,"tag":561,"props":918,"children":919},{"style":896},[920],{"type":539,"value":921},"1",{"type":534,"tag":561,"props":923,"children":924},{"style":745},[925],{"type":539,"value":904},{"type":534,"tag":561,"props":927,"children":928},{"style":745},[929],{"type":539,"value":833},{"type":534,"tag":561,"props":931,"children":932},{"style":896},[933],{"type":539,"value":934}," 1",{"type":534,"tag":561,"props":936,"children":937},{"style":745},[938],{"type":539,"value":939},";\n",{"type":534,"tag":561,"props":941,"children":943},{"class":563,"line":942},8,[944,949,953,958,963,967,972,977,981,986,991,995,999,1004,1008],{"type":534,"tag":561,"props":945,"children":946},{"style":751},[947],{"type":539,"value":948},"  for",{"type":534,"tag":561,"props":950,"children":951},{"style":745},[952],{"type":539,"value":843},{"type":534,"tag":561,"props":954,"children":955},{"style":819},[956],{"type":539,"value":957},"let",{"type":534,"tag":561,"props":959,"children":960},{"style":773},[961],{"type":539,"value":962}," i",{"type":534,"tag":561,"props":964,"children":965},{"style":745},[966],{"type":539,"value":833},{"type":534,"tag":561,"props":968,"children":969},{"style":896},[970],{"type":539,"value":971}," 2",{"type":534,"tag":561,"props":973,"children":974},{"style":745},[975],{"type":539,"value":976},";",{"type":534,"tag":561,"props":978,"children":979},{"style":773},[980],{"type":539,"value":962},{"type":534,"tag":561,"props":982,"children":983},{"style":745},[984],{"type":539,"value":985}," \u003C=",{"type":534,"tag":561,"props":987,"children":988},{"style":773},[989],{"type":539,"value":990}," n",{"type":534,"tag":561,"props":992,"children":993},{"style":745},[994],{"type":539,"value":976},{"type":534,"tag":561,"props":996,"children":997},{"style":773},[998],{"type":539,"value":962},{"type":534,"tag":561,"props":1000,"children":1001},{"style":819},[1002],{"type":539,"value":1003},"++",{"type":534,"tag":561,"props":1005,"children":1006},{"style":745},[1007],{"type":539,"value":853},{"type":534,"tag":561,"props":1009,"children":1010},{"style":745},[1011],{"type":539,"value":858},{"type":534,"tag":561,"props":1013,"children":1015},{"class":563,"line":1014},9,[1016,1021,1025,1030,1034,1038,1042,1046,1050,1055,1059,1063,1068,1072,1076,1080,1084,1088],{"type":534,"tag":561,"props":1017,"children":1018},{"style":773},[1019],{"type":539,"value":1020},"    dp",{"type":534,"tag":561,"props":1022,"children":1023},{"style":745},[1024],{"type":539,"value":893},{"type":534,"tag":561,"props":1026,"children":1027},{"style":773},[1028],{"type":539,"value":1029},"i",{"type":534,"tag":561,"props":1031,"children":1032},{"style":745},[1033],{"type":539,"value":904},{"type":534,"tag":561,"props":1035,"children":1036},{"style":745},[1037],{"type":539,"value":833},{"type":534,"tag":561,"props":1039,"children":1040},{"style":773},[1041],{"type":539,"value":871},{"type":534,"tag":561,"props":1043,"children":1044},{"style":745},[1045],{"type":539,"value":893},{"type":534,"tag":561,"props":1047,"children":1048},{"style":773},[1049],{"type":539,"value":1029},{"type":534,"tag":561,"props":1051,"children":1052},{"style":819},[1053],{"type":539,"value":1054}," -",{"type":534,"tag":561,"props":1056,"children":1057},{"style":896},[1058],{"type":539,"value":934},{"type":534,"tag":561,"props":1060,"children":1061},{"style":745},[1062],{"type":539,"value":904},{"type":534,"tag":561,"props":1064,"children":1065},{"style":819},[1066],{"type":539,"value":1067}," +",{"type":534,"tag":561,"props":1069,"children":1070},{"style":773},[1071],{"type":539,"value":871},{"type":534,"tag":561,"props":1073,"children":1074},{"style":745},[1075],{"type":539,"value":893},{"type":534,"tag":561,"props":1077,"children":1078},{"style":773},[1079],{"type":539,"value":1029},{"type":534,"tag":561,"props":1081,"children":1082},{"style":819},[1083],{"type":539,"value":1054},{"type":534,"tag":561,"props":1085,"children":1086},{"style":896},[1087],{"type":539,"value":971},{"type":534,"tag":561,"props":1089,"children":1090},{"style":745},[1091],{"type":539,"value":1092},"];\n",{"type":534,"tag":561,"props":1094,"children":1096},{"class":563,"line":1095},10,[1097],{"type":534,"tag":561,"props":1098,"children":1099},{"style":745},[1100],{"type":539,"value":1101},"  }\n",{"type":534,"tag":561,"props":1103,"children":1105},{"class":563,"line":1104},11,[1106,1111,1115,1119,1123],{"type":534,"tag":561,"props":1107,"children":1108},{"style":751},[1109],{"type":539,"value":1110},"  return",{"type":534,"tag":561,"props":1112,"children":1113},{"style":773},[1114],{"type":539,"value":871},{"type":534,"tag":561,"props":1116,"children":1117},{"style":745},[1118],{"type":539,"value":893},{"type":534,"tag":561,"props":1120,"children":1121},{"style":773},[1122],{"type":539,"value":848},{"type":534,"tag":561,"props":1124,"children":1125},{"style":745},[1126],{"type":539,"value":1092},{"type":534,"tag":561,"props":1128,"children":1130},{"class":563,"line":1129},12,[1131],{"type":534,"tag":561,"props":1132,"children":1133},{"style":745},[1134],{"type":539,"value":1135},"};\n",{"type":534,"tag":1137,"props":1138,"children":1139},"style",{},[1140],{"type":539,"value":1141},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":601,"depth":601,"links":1143},[1144,1145],{"id":703,"depth":573,"text":703},{"id":708,"depth":573,"text":708,"children":1146},[1147],{"id":714,"depth":582,"text":714},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1154,1156],{"_path":135,"title":134,"description":1155},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":141,"title":140,"description":1157},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1714096143012]