[{"data":1,"prerenderedAt":1140},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":506,"/algorithm/leetcode/major/climbing-stairs-surround":1135},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":138,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":137,"description":510,"url":511,"body":512,"_type":1130,"_id":1131,"_source":1132,"_file":1133,"_extension":1134},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":513,"children":514,"toc":1124},"root",[515,522,527,532,599,604,667,672,682,688,693,699,1118],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":521,"value":531},"示例 1：",{"type":516,"tag":533,"props":534,"children":537},"pre",{"className":535,"code":536,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[538],{"type":516,"tag":539,"props":540,"children":541},"code",{"__ignoreMap":509},[542,553,562,571,581,590],{"type":516,"tag":543,"props":544,"children":547},"span",{"class":545,"line":546},"line",1,[548],{"type":516,"tag":543,"props":549,"children":550},{},[551],{"type":521,"value":552},"输入：n = 2\n",{"type":516,"tag":543,"props":554,"children":556},{"class":545,"line":555},2,[557],{"type":516,"tag":543,"props":558,"children":559},{},[560],{"type":521,"value":561},"输出：2\n",{"type":516,"tag":543,"props":563,"children":565},{"class":545,"line":564},3,[566],{"type":516,"tag":543,"props":567,"children":568},{},[569],{"type":521,"value":570},"解释：有两种方法可以爬到楼顶。\n",{"type":516,"tag":543,"props":572,"children":574},{"class":545,"line":573},4,[575],{"type":516,"tag":543,"props":576,"children":578},{"emptyLinePlaceholder":577},true,[579],{"type":521,"value":580},"\n",{"type":516,"tag":543,"props":582,"children":584},{"class":545,"line":583},5,[585],{"type":516,"tag":543,"props":586,"children":587},{},[588],{"type":521,"value":589},"1. 1 阶 + 1 阶\n",{"type":516,"tag":543,"props":591,"children":593},{"class":545,"line":592},6,[594],{"type":516,"tag":543,"props":595,"children":596},{},[597],{"type":521,"value":598},"2. 2 阶\n",{"type":516,"tag":517,"props":600,"children":601},{},[602],{"type":521,"value":603},"示例 2：",{"type":516,"tag":533,"props":605,"children":607},{"className":535,"code":606,"language":521,"meta":509,"style":509},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[608],{"type":516,"tag":539,"props":609,"children":610},{"__ignoreMap":509},[611,619,627,635,642,650,658],{"type":516,"tag":543,"props":612,"children":613},{"class":545,"line":546},[614],{"type":516,"tag":543,"props":615,"children":616},{},[617],{"type":521,"value":618},"输入：n = 3\n",{"type":516,"tag":543,"props":620,"children":621},{"class":545,"line":555},[622],{"type":516,"tag":543,"props":623,"children":624},{},[625],{"type":521,"value":626},"输出：3\n",{"type":516,"tag":543,"props":628,"children":629},{"class":545,"line":564},[630],{"type":516,"tag":543,"props":631,"children":632},{},[633],{"type":521,"value":634},"解释：有三种方法可以爬到楼顶。\n",{"type":516,"tag":543,"props":636,"children":637},{"class":545,"line":573},[638],{"type":516,"tag":543,"props":639,"children":640},{"emptyLinePlaceholder":577},[641],{"type":521,"value":580},{"type":516,"tag":543,"props":643,"children":644},{"class":545,"line":583},[645],{"type":516,"tag":543,"props":646,"children":647},{},[648],{"type":521,"value":649},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":516,"tag":543,"props":651,"children":652},{"class":545,"line":592},[653],{"type":516,"tag":543,"props":654,"children":655},{},[656],{"type":521,"value":657},"2. 1 阶 + 2 阶\n",{"type":516,"tag":543,"props":659,"children":661},{"class":545,"line":660},7,[662],{"type":516,"tag":543,"props":663,"children":664},{},[665],{"type":521,"value":666},"3. 2 阶 + 1 阶\n",{"type":516,"tag":517,"props":668,"children":669},{},[670],{"type":521,"value":671},"提示：",{"type":516,"tag":673,"props":674,"children":675},"ul",{},[676],{"type":516,"tag":677,"props":678,"children":679},"li",{},[680],{"type":521,"value":681},"1 \u003C= n \u003C= 45",{"type":516,"tag":683,"props":684,"children":686},"h2",{"id":685},"解题思路",[687],{"type":521,"value":685},{"type":516,"tag":683,"props":689,"children":691},{"id":690},"实现",[692],{"type":521,"value":690},{"type":516,"tag":694,"props":695,"children":697},"h3",{"id":696},"动态规划",[698],{"type":521,"value":696},{"type":516,"tag":533,"props":700,"children":704},{"className":701,"code":702,"language":703,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[705],{"type":516,"tag":539,"props":706,"children":707},{"__ignoreMap":509},[708,717,759,788,796,841,863,922,994,1075,1084,1109],{"type":516,"tag":543,"props":709,"children":710},{"class":545,"line":546},[711],{"type":516,"tag":543,"props":712,"children":714},{"style":713},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[715],{"type":521,"value":716},"/**\n",{"type":516,"tag":543,"props":718,"children":719},{"class":545,"line":555},[720,725,731,737,742,748,753],{"type":516,"tag":543,"props":721,"children":722},{"style":713},[723],{"type":521,"value":724}," * ",{"type":516,"tag":543,"props":726,"children":728},{"style":727},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[729],{"type":521,"value":730},"@",{"type":516,"tag":543,"props":732,"children":734},{"style":733},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[735],{"type":521,"value":736},"param",{"type":516,"tag":543,"props":738,"children":739},{"style":727},[740],{"type":521,"value":741}," {",{"type":516,"tag":543,"props":743,"children":745},{"style":744},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[746],{"type":521,"value":747},"number",{"type":516,"tag":543,"props":749,"children":750},{"style":727},[751],{"type":521,"value":752},"}",{"type":516,"tag":543,"props":754,"children":756},{"style":755},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[757],{"type":521,"value":758}," n\n",{"type":516,"tag":543,"props":760,"children":761},{"class":545,"line":564},[762,766,770,775,779,783],{"type":516,"tag":543,"props":763,"children":764},{"style":713},[765],{"type":521,"value":724},{"type":516,"tag":543,"props":767,"children":768},{"style":727},[769],{"type":521,"value":730},{"type":516,"tag":543,"props":771,"children":772},{"style":733},[773],{"type":521,"value":774},"return",{"type":516,"tag":543,"props":776,"children":777},{"style":727},[778],{"type":521,"value":741},{"type":516,"tag":543,"props":780,"children":781},{"style":744},[782],{"type":521,"value":747},{"type":516,"tag":543,"props":784,"children":785},{"style":727},[786],{"type":521,"value":787},"}\n",{"type":516,"tag":543,"props":789,"children":790},{"class":545,"line":573},[791],{"type":516,"tag":543,"props":792,"children":793},{"style":713},[794],{"type":521,"value":795}," */\n",{"type":516,"tag":543,"props":797,"children":798},{"class":545,"line":583},[799,805,811,816,821,826,831,836],{"type":516,"tag":543,"props":800,"children":802},{"style":801},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[803],{"type":521,"value":804},"var",{"type":516,"tag":543,"props":806,"children":808},{"style":807},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[809],{"type":521,"value":810}," climbStairs",{"type":516,"tag":543,"props":812,"children":813},{"style":727},[814],{"type":521,"value":815}," =",{"type":516,"tag":543,"props":817,"children":818},{"style":801},[819],{"type":521,"value":820}," function",{"type":516,"tag":543,"props":822,"children":823},{"style":727},[824],{"type":521,"value":825}," (",{"type":516,"tag":543,"props":827,"children":828},{"style":755},[829],{"type":521,"value":830},"n",{"type":516,"tag":543,"props":832,"children":833},{"style":727},[834],{"type":521,"value":835},")",{"type":516,"tag":543,"props":837,"children":838},{"style":727},[839],{"type":521,"value":840}," {\n",{"type":516,"tag":543,"props":842,"children":843},{"class":545,"line":592},[844,849,854,858],{"type":516,"tag":543,"props":845,"children":846},{"style":801},[847],{"type":521,"value":848},"  let",{"type":516,"tag":543,"props":850,"children":851},{"style":755},[852],{"type":521,"value":853}," dp",{"type":516,"tag":543,"props":855,"children":856},{"style":727},[857],{"type":521,"value":815},{"type":516,"tag":543,"props":859,"children":860},{"style":727},[861],{"type":521,"value":862}," [];\n",{"type":516,"tag":543,"props":864,"children":865},{"class":545,"line":660},[866,871,876,882,887,891,895,899,904,908,912,917],{"type":516,"tag":543,"props":867,"children":868},{"style":755},[869],{"type":521,"value":870},"  dp",{"type":516,"tag":543,"props":872,"children":873},{"style":727},[874],{"type":521,"value":875},"[",{"type":516,"tag":543,"props":877,"children":879},{"style":878},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[880],{"type":521,"value":881},"0",{"type":516,"tag":543,"props":883,"children":884},{"style":727},[885],{"type":521,"value":886},"]",{"type":516,"tag":543,"props":888,"children":889},{"style":727},[890],{"type":521,"value":815},{"type":516,"tag":543,"props":892,"children":893},{"style":755},[894],{"type":521,"value":853},{"type":516,"tag":543,"props":896,"children":897},{"style":727},[898],{"type":521,"value":875},{"type":516,"tag":543,"props":900,"children":901},{"style":878},[902],{"type":521,"value":903},"1",{"type":516,"tag":543,"props":905,"children":906},{"style":727},[907],{"type":521,"value":886},{"type":516,"tag":543,"props":909,"children":910},{"style":727},[911],{"type":521,"value":815},{"type":516,"tag":543,"props":913,"children":914},{"style":878},[915],{"type":521,"value":916}," 1",{"type":516,"tag":543,"props":918,"children":919},{"style":727},[920],{"type":521,"value":921},";\n",{"type":516,"tag":543,"props":923,"children":925},{"class":545,"line":924},8,[926,931,935,940,945,949,954,959,963,968,973,977,981,986,990],{"type":516,"tag":543,"props":927,"children":928},{"style":733},[929],{"type":521,"value":930},"  for",{"type":516,"tag":543,"props":932,"children":933},{"style":727},[934],{"type":521,"value":825},{"type":516,"tag":543,"props":936,"children":937},{"style":801},[938],{"type":521,"value":939},"let",{"type":516,"tag":543,"props":941,"children":942},{"style":755},[943],{"type":521,"value":944}," i",{"type":516,"tag":543,"props":946,"children":947},{"style":727},[948],{"type":521,"value":815},{"type":516,"tag":543,"props":950,"children":951},{"style":878},[952],{"type":521,"value":953}," 2",{"type":516,"tag":543,"props":955,"children":956},{"style":727},[957],{"type":521,"value":958},";",{"type":516,"tag":543,"props":960,"children":961},{"style":755},[962],{"type":521,"value":944},{"type":516,"tag":543,"props":964,"children":965},{"style":727},[966],{"type":521,"value":967}," \u003C=",{"type":516,"tag":543,"props":969,"children":970},{"style":755},[971],{"type":521,"value":972}," n",{"type":516,"tag":543,"props":974,"children":975},{"style":727},[976],{"type":521,"value":958},{"type":516,"tag":543,"props":978,"children":979},{"style":755},[980],{"type":521,"value":944},{"type":516,"tag":543,"props":982,"children":983},{"style":801},[984],{"type":521,"value":985},"++",{"type":516,"tag":543,"props":987,"children":988},{"style":727},[989],{"type":521,"value":835},{"type":516,"tag":543,"props":991,"children":992},{"style":727},[993],{"type":521,"value":840},{"type":516,"tag":543,"props":995,"children":997},{"class":545,"line":996},9,[998,1003,1007,1012,1016,1020,1024,1028,1032,1037,1041,1045,1050,1054,1058,1062,1066,1070],{"type":516,"tag":543,"props":999,"children":1000},{"style":755},[1001],{"type":521,"value":1002},"    dp",{"type":516,"tag":543,"props":1004,"children":1005},{"style":727},[1006],{"type":521,"value":875},{"type":516,"tag":543,"props":1008,"children":1009},{"style":755},[1010],{"type":521,"value":1011},"i",{"type":516,"tag":543,"props":1013,"children":1014},{"style":727},[1015],{"type":521,"value":886},{"type":516,"tag":543,"props":1017,"children":1018},{"style":727},[1019],{"type":521,"value":815},{"type":516,"tag":543,"props":1021,"children":1022},{"style":755},[1023],{"type":521,"value":853},{"type":516,"tag":543,"props":1025,"children":1026},{"style":727},[1027],{"type":521,"value":875},{"type":516,"tag":543,"props":1029,"children":1030},{"style":755},[1031],{"type":521,"value":1011},{"type":516,"tag":543,"props":1033,"children":1034},{"style":801},[1035],{"type":521,"value":1036}," -",{"type":516,"tag":543,"props":1038,"children":1039},{"style":878},[1040],{"type":521,"value":916},{"type":516,"tag":543,"props":1042,"children":1043},{"style":727},[1044],{"type":521,"value":886},{"type":516,"tag":543,"props":1046,"children":1047},{"style":801},[1048],{"type":521,"value":1049}," +",{"type":516,"tag":543,"props":1051,"children":1052},{"style":755},[1053],{"type":521,"value":853},{"type":516,"tag":543,"props":1055,"children":1056},{"style":727},[1057],{"type":521,"value":875},{"type":516,"tag":543,"props":1059,"children":1060},{"style":755},[1061],{"type":521,"value":1011},{"type":516,"tag":543,"props":1063,"children":1064},{"style":801},[1065],{"type":521,"value":1036},{"type":516,"tag":543,"props":1067,"children":1068},{"style":878},[1069],{"type":521,"value":953},{"type":516,"tag":543,"props":1071,"children":1072},{"style":727},[1073],{"type":521,"value":1074},"];\n",{"type":516,"tag":543,"props":1076,"children":1078},{"class":545,"line":1077},10,[1079],{"type":516,"tag":543,"props":1080,"children":1081},{"style":727},[1082],{"type":521,"value":1083},"  }\n",{"type":516,"tag":543,"props":1085,"children":1087},{"class":545,"line":1086},11,[1088,1093,1097,1101,1105],{"type":516,"tag":543,"props":1089,"children":1090},{"style":733},[1091],{"type":521,"value":1092},"  return",{"type":516,"tag":543,"props":1094,"children":1095},{"style":755},[1096],{"type":521,"value":853},{"type":516,"tag":543,"props":1098,"children":1099},{"style":727},[1100],{"type":521,"value":875},{"type":516,"tag":543,"props":1102,"children":1103},{"style":755},[1104],{"type":521,"value":830},{"type":516,"tag":543,"props":1106,"children":1107},{"style":727},[1108],{"type":521,"value":1074},{"type":516,"tag":543,"props":1110,"children":1112},{"class":545,"line":1111},12,[1113],{"type":516,"tag":543,"props":1114,"children":1115},{"style":727},[1116],{"type":521,"value":1117},"};\n",{"type":516,"tag":1119,"props":1120,"children":1121},"style",{},[1122],{"type":521,"value":1123},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":583,"depth":583,"links":1125},[1126,1127],{"id":685,"depth":555,"text":685},{"id":690,"depth":555,"text":690,"children":1128},[1129],{"id":696,"depth":564,"text":696},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1136,1138],{"_path":135,"title":134,"description":1137},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":141,"title":140,"description":1139},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1714058126359]