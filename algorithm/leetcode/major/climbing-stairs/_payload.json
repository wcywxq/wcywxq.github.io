[{"data":1,"prerenderedAt":1083},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":463,"/algorithm/leetcode/major/climbing-stairs-surround":1078},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":135,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":134,"description":467,"url":468,"body":469,"_type":1073,"_id":1074,"_source":1075,"_file":1076,"_extension":1077},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":470,"children":471,"toc":1067},"root",[472,479,484,489,556,561,624,629,639,645,650,656,1061],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":473,"tag":474,"props":485,"children":486},{},[487],{"type":478,"value":488},"示例 1：",{"type":473,"tag":490,"props":491,"children":494},"pre",{"className":492,"code":493,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[495],{"type":473,"tag":496,"props":497,"children":498},"code",{"__ignoreMap":466},[499,510,519,528,538,547],{"type":473,"tag":500,"props":501,"children":504},"span",{"class":502,"line":503},"line",1,[505],{"type":473,"tag":500,"props":506,"children":507},{},[508],{"type":478,"value":509},"输入：n = 2\n",{"type":473,"tag":500,"props":511,"children":513},{"class":502,"line":512},2,[514],{"type":473,"tag":500,"props":515,"children":516},{},[517],{"type":478,"value":518},"输出：2\n",{"type":473,"tag":500,"props":520,"children":522},{"class":502,"line":521},3,[523],{"type":473,"tag":500,"props":524,"children":525},{},[526],{"type":478,"value":527},"解释：有两种方法可以爬到楼顶。\n",{"type":473,"tag":500,"props":529,"children":531},{"class":502,"line":530},4,[532],{"type":473,"tag":500,"props":533,"children":535},{"emptyLinePlaceholder":534},true,[536],{"type":478,"value":537},"\n",{"type":473,"tag":500,"props":539,"children":541},{"class":502,"line":540},5,[542],{"type":473,"tag":500,"props":543,"children":544},{},[545],{"type":478,"value":546},"1. 1 阶 + 1 阶\n",{"type":473,"tag":500,"props":548,"children":550},{"class":502,"line":549},6,[551],{"type":473,"tag":500,"props":552,"children":553},{},[554],{"type":478,"value":555},"2. 2 阶\n",{"type":473,"tag":474,"props":557,"children":558},{},[559],{"type":478,"value":560},"示例 2：",{"type":473,"tag":490,"props":562,"children":564},{"className":492,"code":563,"language":478,"meta":466,"style":466},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[565],{"type":473,"tag":496,"props":566,"children":567},{"__ignoreMap":466},[568,576,584,592,599,607,615],{"type":473,"tag":500,"props":569,"children":570},{"class":502,"line":503},[571],{"type":473,"tag":500,"props":572,"children":573},{},[574],{"type":478,"value":575},"输入：n = 3\n",{"type":473,"tag":500,"props":577,"children":578},{"class":502,"line":512},[579],{"type":473,"tag":500,"props":580,"children":581},{},[582],{"type":478,"value":583},"输出：3\n",{"type":473,"tag":500,"props":585,"children":586},{"class":502,"line":521},[587],{"type":473,"tag":500,"props":588,"children":589},{},[590],{"type":478,"value":591},"解释：有三种方法可以爬到楼顶。\n",{"type":473,"tag":500,"props":593,"children":594},{"class":502,"line":530},[595],{"type":473,"tag":500,"props":596,"children":597},{"emptyLinePlaceholder":534},[598],{"type":478,"value":537},{"type":473,"tag":500,"props":600,"children":601},{"class":502,"line":540},[602],{"type":473,"tag":500,"props":603,"children":604},{},[605],{"type":478,"value":606},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":473,"tag":500,"props":608,"children":609},{"class":502,"line":549},[610],{"type":473,"tag":500,"props":611,"children":612},{},[613],{"type":478,"value":614},"2. 1 阶 + 2 阶\n",{"type":473,"tag":500,"props":616,"children":618},{"class":502,"line":617},7,[619],{"type":473,"tag":500,"props":620,"children":621},{},[622],{"type":478,"value":623},"3. 2 阶 + 1 阶\n",{"type":473,"tag":474,"props":625,"children":626},{},[627],{"type":478,"value":628},"提示：",{"type":473,"tag":630,"props":631,"children":632},"ul",{},[633],{"type":473,"tag":634,"props":635,"children":636},"li",{},[637],{"type":478,"value":638},"1 \u003C= n \u003C= 45",{"type":473,"tag":640,"props":641,"children":643},"h2",{"id":642},"解题思路",[644],{"type":478,"value":642},{"type":473,"tag":640,"props":646,"children":648},{"id":647},"实现",[649],{"type":478,"value":647},{"type":473,"tag":651,"props":652,"children":654},"h3",{"id":653},"动态规划",[655],{"type":478,"value":653},{"type":473,"tag":490,"props":657,"children":661},{"className":658,"code":659,"language":660,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[662],{"type":473,"tag":496,"props":663,"children":664},{"__ignoreMap":466},[665,674,700,717,725,768,797,856,925,1010,1019,1048],{"type":473,"tag":500,"props":666,"children":667},{"class":502,"line":503},[668],{"type":473,"tag":500,"props":669,"children":671},{"style":670},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[672],{"type":478,"value":673},"/**\n",{"type":473,"tag":500,"props":675,"children":676},{"class":502,"line":512},[677,682,688,694],{"type":473,"tag":500,"props":678,"children":679},{"style":670},[680],{"type":478,"value":681}," * ",{"type":473,"tag":500,"props":683,"children":685},{"style":684},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[686],{"type":478,"value":687},"@param",{"type":473,"tag":500,"props":689,"children":691},{"style":690},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[692],{"type":478,"value":693}," {number}",{"type":473,"tag":500,"props":695,"children":697},{"style":696},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[698],{"type":478,"value":699}," n\n",{"type":473,"tag":500,"props":701,"children":702},{"class":502,"line":521},[703,707,712],{"type":473,"tag":500,"props":704,"children":705},{"style":670},[706],{"type":478,"value":681},{"type":473,"tag":500,"props":708,"children":709},{"style":684},[710],{"type":478,"value":711},"@return",{"type":473,"tag":500,"props":713,"children":714},{"style":690},[715],{"type":478,"value":716}," {number}\n",{"type":473,"tag":500,"props":718,"children":719},{"class":502,"line":530},[720],{"type":473,"tag":500,"props":721,"children":722},{"style":670},[723],{"type":478,"value":724}," */\n",{"type":473,"tag":500,"props":726,"children":727},{"class":502,"line":540},[728,734,740,746,751,757,763],{"type":473,"tag":500,"props":729,"children":731},{"style":730},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[732],{"type":478,"value":733},"var",{"type":473,"tag":500,"props":735,"children":737},{"style":736},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[738],{"type":478,"value":739}," climbStairs",{"type":473,"tag":500,"props":741,"children":743},{"style":742},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[744],{"type":478,"value":745}," =",{"type":473,"tag":500,"props":747,"children":748},{"style":730},[749],{"type":478,"value":750}," function",{"type":473,"tag":500,"props":752,"children":754},{"style":753},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[755],{"type":478,"value":756}," (",{"type":473,"tag":500,"props":758,"children":760},{"style":759},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[761],{"type":478,"value":762},"n",{"type":473,"tag":500,"props":764,"children":765},{"style":753},[766],{"type":478,"value":767},") {\n",{"type":473,"tag":500,"props":769,"children":770},{"class":502,"line":549},[771,776,782,786,791],{"type":473,"tag":500,"props":772,"children":773},{"style":730},[774],{"type":478,"value":775},"  let",{"type":473,"tag":500,"props":777,"children":779},{"style":778},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[780],{"type":478,"value":781}," dp",{"type":473,"tag":500,"props":783,"children":784},{"style":742},[785],{"type":478,"value":745},{"type":473,"tag":500,"props":787,"children":788},{"style":753},[789],{"type":478,"value":790}," []",{"type":473,"tag":500,"props":792,"children":794},{"style":793},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[795],{"type":478,"value":796},";\n",{"type":473,"tag":500,"props":798,"children":799},{"class":502,"line":617},[800,805,810,816,821,826,830,834,839,843,847,852],{"type":473,"tag":500,"props":801,"children":802},{"style":778},[803],{"type":478,"value":804},"  dp",{"type":473,"tag":500,"props":806,"children":807},{"style":753},[808],{"type":478,"value":809},"[",{"type":473,"tag":500,"props":811,"children":813},{"style":812},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[814],{"type":478,"value":815},"0",{"type":473,"tag":500,"props":817,"children":818},{"style":753},[819],{"type":478,"value":820},"] ",{"type":473,"tag":500,"props":822,"children":823},{"style":742},[824],{"type":478,"value":825},"=",{"type":473,"tag":500,"props":827,"children":828},{"style":778},[829],{"type":478,"value":781},{"type":473,"tag":500,"props":831,"children":832},{"style":753},[833],{"type":478,"value":809},{"type":473,"tag":500,"props":835,"children":836},{"style":812},[837],{"type":478,"value":838},"1",{"type":473,"tag":500,"props":840,"children":841},{"style":753},[842],{"type":478,"value":820},{"type":473,"tag":500,"props":844,"children":845},{"style":742},[846],{"type":478,"value":825},{"type":473,"tag":500,"props":848,"children":849},{"style":812},[850],{"type":478,"value":851}," 1",{"type":473,"tag":500,"props":853,"children":854},{"style":793},[855],{"type":478,"value":796},{"type":473,"tag":500,"props":857,"children":859},{"class":502,"line":858},8,[860,866,870,875,880,884,889,894,898,903,908,912,916,921],{"type":473,"tag":500,"props":861,"children":863},{"style":862},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[864],{"type":478,"value":865},"  for",{"type":473,"tag":500,"props":867,"children":868},{"style":753},[869],{"type":478,"value":756},{"type":473,"tag":500,"props":871,"children":872},{"style":730},[873],{"type":478,"value":874},"let",{"type":473,"tag":500,"props":876,"children":877},{"style":778},[878],{"type":478,"value":879}," i",{"type":473,"tag":500,"props":881,"children":882},{"style":742},[883],{"type":478,"value":745},{"type":473,"tag":500,"props":885,"children":886},{"style":812},[887],{"type":478,"value":888}," 2",{"type":473,"tag":500,"props":890,"children":891},{"style":793},[892],{"type":478,"value":893},";",{"type":473,"tag":500,"props":895,"children":896},{"style":778},[897],{"type":478,"value":879},{"type":473,"tag":500,"props":899,"children":900},{"style":742},[901],{"type":478,"value":902}," \u003C=",{"type":473,"tag":500,"props":904,"children":905},{"style":778},[906],{"type":478,"value":907}," n",{"type":473,"tag":500,"props":909,"children":910},{"style":793},[911],{"type":478,"value":893},{"type":473,"tag":500,"props":913,"children":914},{"style":778},[915],{"type":478,"value":879},{"type":473,"tag":500,"props":917,"children":918},{"style":742},[919],{"type":478,"value":920},"++",{"type":473,"tag":500,"props":922,"children":923},{"style":753},[924],{"type":478,"value":767},{"type":473,"tag":500,"props":926,"children":928},{"class":502,"line":927},9,[929,934,938,943,947,951,955,959,963,968,972,976,981,985,989,993,997,1001,1006],{"type":473,"tag":500,"props":930,"children":931},{"style":778},[932],{"type":478,"value":933},"    dp",{"type":473,"tag":500,"props":935,"children":936},{"style":753},[937],{"type":478,"value":809},{"type":473,"tag":500,"props":939,"children":940},{"style":778},[941],{"type":478,"value":942},"i",{"type":473,"tag":500,"props":944,"children":945},{"style":753},[946],{"type":478,"value":820},{"type":473,"tag":500,"props":948,"children":949},{"style":742},[950],{"type":478,"value":825},{"type":473,"tag":500,"props":952,"children":953},{"style":778},[954],{"type":478,"value":781},{"type":473,"tag":500,"props":956,"children":957},{"style":753},[958],{"type":478,"value":809},{"type":473,"tag":500,"props":960,"children":961},{"style":778},[962],{"type":478,"value":942},{"type":473,"tag":500,"props":964,"children":965},{"style":742},[966],{"type":478,"value":967}," -",{"type":473,"tag":500,"props":969,"children":970},{"style":812},[971],{"type":478,"value":851},{"type":473,"tag":500,"props":973,"children":974},{"style":753},[975],{"type":478,"value":820},{"type":473,"tag":500,"props":977,"children":978},{"style":742},[979],{"type":478,"value":980},"+",{"type":473,"tag":500,"props":982,"children":983},{"style":778},[984],{"type":478,"value":781},{"type":473,"tag":500,"props":986,"children":987},{"style":753},[988],{"type":478,"value":809},{"type":473,"tag":500,"props":990,"children":991},{"style":778},[992],{"type":478,"value":942},{"type":473,"tag":500,"props":994,"children":995},{"style":742},[996],{"type":478,"value":967},{"type":473,"tag":500,"props":998,"children":999},{"style":812},[1000],{"type":478,"value":888},{"type":473,"tag":500,"props":1002,"children":1003},{"style":753},[1004],{"type":478,"value":1005},"]",{"type":473,"tag":500,"props":1007,"children":1008},{"style":793},[1009],{"type":478,"value":796},{"type":473,"tag":500,"props":1011,"children":1013},{"class":502,"line":1012},10,[1014],{"type":473,"tag":500,"props":1015,"children":1016},{"style":753},[1017],{"type":478,"value":1018},"  }\n",{"type":473,"tag":500,"props":1020,"children":1022},{"class":502,"line":1021},11,[1023,1028,1032,1036,1040,1044],{"type":473,"tag":500,"props":1024,"children":1025},{"style":862},[1026],{"type":478,"value":1027},"  return",{"type":473,"tag":500,"props":1029,"children":1030},{"style":778},[1031],{"type":478,"value":781},{"type":473,"tag":500,"props":1033,"children":1034},{"style":753},[1035],{"type":478,"value":809},{"type":473,"tag":500,"props":1037,"children":1038},{"style":778},[1039],{"type":478,"value":762},{"type":473,"tag":500,"props":1041,"children":1042},{"style":753},[1043],{"type":478,"value":1005},{"type":473,"tag":500,"props":1045,"children":1046},{"style":793},[1047],{"type":478,"value":796},{"type":473,"tag":500,"props":1049,"children":1051},{"class":502,"line":1050},12,[1052,1057],{"type":473,"tag":500,"props":1053,"children":1054},{"style":753},[1055],{"type":478,"value":1056},"}",{"type":473,"tag":500,"props":1058,"children":1059},{"style":793},[1060],{"type":478,"value":796},{"type":473,"tag":1062,"props":1063,"children":1064},"style",{},[1065],{"type":478,"value":1066},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":540,"depth":540,"links":1068},[1069,1070],{"id":642,"depth":512,"text":642},{"id":647,"depth":512,"text":647,"children":1071},[1072],{"id":653,"depth":521,"text":653},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1079,1081],{"_path":132,"title":131,"description":1080},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":138,"title":137,"description":1082},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1713695846866]