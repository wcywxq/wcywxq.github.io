[{"data":1,"prerenderedAt":1134},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":500,"/algorithm/leetcode/major/climbing-stairs-surround":1129},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":138,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":137,"description":504,"url":505,"body":506,"_type":1124,"_id":1125,"_source":1126,"_file":1127,"_extension":1128},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":507,"children":508,"toc":1118},"root",[509,516,521,526,593,598,661,666,676,682,687,693,1112],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":515,"value":525},"示例 1：",{"type":510,"tag":527,"props":528,"children":531},"pre",{"className":529,"code":530,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[532],{"type":510,"tag":533,"props":534,"children":535},"code",{"__ignoreMap":503},[536,547,556,565,575,584],{"type":510,"tag":537,"props":538,"children":541},"span",{"class":539,"line":540},"line",1,[542],{"type":510,"tag":537,"props":543,"children":544},{},[545],{"type":515,"value":546},"输入：n = 2\n",{"type":510,"tag":537,"props":548,"children":550},{"class":539,"line":549},2,[551],{"type":510,"tag":537,"props":552,"children":553},{},[554],{"type":515,"value":555},"输出：2\n",{"type":510,"tag":537,"props":557,"children":559},{"class":539,"line":558},3,[560],{"type":510,"tag":537,"props":561,"children":562},{},[563],{"type":515,"value":564},"解释：有两种方法可以爬到楼顶。\n",{"type":510,"tag":537,"props":566,"children":568},{"class":539,"line":567},4,[569],{"type":510,"tag":537,"props":570,"children":572},{"emptyLinePlaceholder":571},true,[573],{"type":515,"value":574},"\n",{"type":510,"tag":537,"props":576,"children":578},{"class":539,"line":577},5,[579],{"type":510,"tag":537,"props":580,"children":581},{},[582],{"type":515,"value":583},"1. 1 阶 + 1 阶\n",{"type":510,"tag":537,"props":585,"children":587},{"class":539,"line":586},6,[588],{"type":510,"tag":537,"props":589,"children":590},{},[591],{"type":515,"value":592},"2. 2 阶\n",{"type":510,"tag":511,"props":594,"children":595},{},[596],{"type":515,"value":597},"示例 2：",{"type":510,"tag":527,"props":599,"children":601},{"className":529,"code":600,"language":515,"meta":503,"style":503},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[602],{"type":510,"tag":533,"props":603,"children":604},{"__ignoreMap":503},[605,613,621,629,636,644,652],{"type":510,"tag":537,"props":606,"children":607},{"class":539,"line":540},[608],{"type":510,"tag":537,"props":609,"children":610},{},[611],{"type":515,"value":612},"输入：n = 3\n",{"type":510,"tag":537,"props":614,"children":615},{"class":539,"line":549},[616],{"type":510,"tag":537,"props":617,"children":618},{},[619],{"type":515,"value":620},"输出：3\n",{"type":510,"tag":537,"props":622,"children":623},{"class":539,"line":558},[624],{"type":510,"tag":537,"props":625,"children":626},{},[627],{"type":515,"value":628},"解释：有三种方法可以爬到楼顶。\n",{"type":510,"tag":537,"props":630,"children":631},{"class":539,"line":567},[632],{"type":510,"tag":537,"props":633,"children":634},{"emptyLinePlaceholder":571},[635],{"type":515,"value":574},{"type":510,"tag":537,"props":637,"children":638},{"class":539,"line":577},[639],{"type":510,"tag":537,"props":640,"children":641},{},[642],{"type":515,"value":643},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":510,"tag":537,"props":645,"children":646},{"class":539,"line":586},[647],{"type":510,"tag":537,"props":648,"children":649},{},[650],{"type":515,"value":651},"2. 1 阶 + 2 阶\n",{"type":510,"tag":537,"props":653,"children":655},{"class":539,"line":654},7,[656],{"type":510,"tag":537,"props":657,"children":658},{},[659],{"type":515,"value":660},"3. 2 阶 + 1 阶\n",{"type":510,"tag":511,"props":662,"children":663},{},[664],{"type":515,"value":665},"提示：",{"type":510,"tag":667,"props":668,"children":669},"ul",{},[670],{"type":510,"tag":671,"props":672,"children":673},"li",{},[674],{"type":515,"value":675},"1 \u003C= n \u003C= 45",{"type":510,"tag":677,"props":678,"children":680},"h2",{"id":679},"解题思路",[681],{"type":515,"value":679},{"type":510,"tag":677,"props":683,"children":685},{"id":684},"实现",[686],{"type":515,"value":684},{"type":510,"tag":688,"props":689,"children":691},"h3",{"id":690},"动态规划",[692],{"type":515,"value":690},{"type":510,"tag":527,"props":694,"children":698},{"className":695,"code":696,"language":697,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[699],{"type":510,"tag":533,"props":700,"children":701},{"__ignoreMap":503},[702,711,753,782,790,835,857,916,988,1069,1078,1103],{"type":510,"tag":537,"props":703,"children":704},{"class":539,"line":540},[705],{"type":510,"tag":537,"props":706,"children":708},{"style":707},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[709],{"type":515,"value":710},"/**\n",{"type":510,"tag":537,"props":712,"children":713},{"class":539,"line":549},[714,719,725,731,736,742,747],{"type":510,"tag":537,"props":715,"children":716},{"style":707},[717],{"type":515,"value":718}," * ",{"type":510,"tag":537,"props":720,"children":722},{"style":721},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[723],{"type":515,"value":724},"@",{"type":510,"tag":537,"props":726,"children":728},{"style":727},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[729],{"type":515,"value":730},"param",{"type":510,"tag":537,"props":732,"children":733},{"style":721},[734],{"type":515,"value":735}," {",{"type":510,"tag":537,"props":737,"children":739},{"style":738},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[740],{"type":515,"value":741},"number",{"type":510,"tag":537,"props":743,"children":744},{"style":721},[745],{"type":515,"value":746},"}",{"type":510,"tag":537,"props":748,"children":750},{"style":749},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[751],{"type":515,"value":752}," n\n",{"type":510,"tag":537,"props":754,"children":755},{"class":539,"line":558},[756,760,764,769,773,777],{"type":510,"tag":537,"props":757,"children":758},{"style":707},[759],{"type":515,"value":718},{"type":510,"tag":537,"props":761,"children":762},{"style":721},[763],{"type":515,"value":724},{"type":510,"tag":537,"props":765,"children":766},{"style":727},[767],{"type":515,"value":768},"return",{"type":510,"tag":537,"props":770,"children":771},{"style":721},[772],{"type":515,"value":735},{"type":510,"tag":537,"props":774,"children":775},{"style":738},[776],{"type":515,"value":741},{"type":510,"tag":537,"props":778,"children":779},{"style":721},[780],{"type":515,"value":781},"}\n",{"type":510,"tag":537,"props":783,"children":784},{"class":539,"line":567},[785],{"type":510,"tag":537,"props":786,"children":787},{"style":707},[788],{"type":515,"value":789}," */\n",{"type":510,"tag":537,"props":791,"children":792},{"class":539,"line":577},[793,799,805,810,815,820,825,830],{"type":510,"tag":537,"props":794,"children":796},{"style":795},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[797],{"type":515,"value":798},"var",{"type":510,"tag":537,"props":800,"children":802},{"style":801},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[803],{"type":515,"value":804}," climbStairs",{"type":510,"tag":537,"props":806,"children":807},{"style":721},[808],{"type":515,"value":809}," =",{"type":510,"tag":537,"props":811,"children":812},{"style":795},[813],{"type":515,"value":814}," function",{"type":510,"tag":537,"props":816,"children":817},{"style":721},[818],{"type":515,"value":819}," (",{"type":510,"tag":537,"props":821,"children":822},{"style":749},[823],{"type":515,"value":824},"n",{"type":510,"tag":537,"props":826,"children":827},{"style":721},[828],{"type":515,"value":829},")",{"type":510,"tag":537,"props":831,"children":832},{"style":721},[833],{"type":515,"value":834}," {\n",{"type":510,"tag":537,"props":836,"children":837},{"class":539,"line":586},[838,843,848,852],{"type":510,"tag":537,"props":839,"children":840},{"style":795},[841],{"type":515,"value":842},"  let",{"type":510,"tag":537,"props":844,"children":845},{"style":749},[846],{"type":515,"value":847}," dp",{"type":510,"tag":537,"props":849,"children":850},{"style":721},[851],{"type":515,"value":809},{"type":510,"tag":537,"props":853,"children":854},{"style":721},[855],{"type":515,"value":856}," [];\n",{"type":510,"tag":537,"props":858,"children":859},{"class":539,"line":654},[860,865,870,876,881,885,889,893,898,902,906,911],{"type":510,"tag":537,"props":861,"children":862},{"style":749},[863],{"type":515,"value":864},"  dp",{"type":510,"tag":537,"props":866,"children":867},{"style":721},[868],{"type":515,"value":869},"[",{"type":510,"tag":537,"props":871,"children":873},{"style":872},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[874],{"type":515,"value":875},"0",{"type":510,"tag":537,"props":877,"children":878},{"style":721},[879],{"type":515,"value":880},"]",{"type":510,"tag":537,"props":882,"children":883},{"style":721},[884],{"type":515,"value":809},{"type":510,"tag":537,"props":886,"children":887},{"style":749},[888],{"type":515,"value":847},{"type":510,"tag":537,"props":890,"children":891},{"style":721},[892],{"type":515,"value":869},{"type":510,"tag":537,"props":894,"children":895},{"style":872},[896],{"type":515,"value":897},"1",{"type":510,"tag":537,"props":899,"children":900},{"style":721},[901],{"type":515,"value":880},{"type":510,"tag":537,"props":903,"children":904},{"style":721},[905],{"type":515,"value":809},{"type":510,"tag":537,"props":907,"children":908},{"style":872},[909],{"type":515,"value":910}," 1",{"type":510,"tag":537,"props":912,"children":913},{"style":721},[914],{"type":515,"value":915},";\n",{"type":510,"tag":537,"props":917,"children":919},{"class":539,"line":918},8,[920,925,929,934,939,943,948,953,957,962,967,971,975,980,984],{"type":510,"tag":537,"props":921,"children":922},{"style":727},[923],{"type":515,"value":924},"  for",{"type":510,"tag":537,"props":926,"children":927},{"style":721},[928],{"type":515,"value":819},{"type":510,"tag":537,"props":930,"children":931},{"style":795},[932],{"type":515,"value":933},"let",{"type":510,"tag":537,"props":935,"children":936},{"style":749},[937],{"type":515,"value":938}," i",{"type":510,"tag":537,"props":940,"children":941},{"style":721},[942],{"type":515,"value":809},{"type":510,"tag":537,"props":944,"children":945},{"style":872},[946],{"type":515,"value":947}," 2",{"type":510,"tag":537,"props":949,"children":950},{"style":721},[951],{"type":515,"value":952},";",{"type":510,"tag":537,"props":954,"children":955},{"style":749},[956],{"type":515,"value":938},{"type":510,"tag":537,"props":958,"children":959},{"style":721},[960],{"type":515,"value":961}," \u003C=",{"type":510,"tag":537,"props":963,"children":964},{"style":749},[965],{"type":515,"value":966}," n",{"type":510,"tag":537,"props":968,"children":969},{"style":721},[970],{"type":515,"value":952},{"type":510,"tag":537,"props":972,"children":973},{"style":749},[974],{"type":515,"value":938},{"type":510,"tag":537,"props":976,"children":977},{"style":795},[978],{"type":515,"value":979},"++",{"type":510,"tag":537,"props":981,"children":982},{"style":721},[983],{"type":515,"value":829},{"type":510,"tag":537,"props":985,"children":986},{"style":721},[987],{"type":515,"value":834},{"type":510,"tag":537,"props":989,"children":991},{"class":539,"line":990},9,[992,997,1001,1006,1010,1014,1018,1022,1026,1031,1035,1039,1044,1048,1052,1056,1060,1064],{"type":510,"tag":537,"props":993,"children":994},{"style":749},[995],{"type":515,"value":996},"    dp",{"type":510,"tag":537,"props":998,"children":999},{"style":721},[1000],{"type":515,"value":869},{"type":510,"tag":537,"props":1002,"children":1003},{"style":749},[1004],{"type":515,"value":1005},"i",{"type":510,"tag":537,"props":1007,"children":1008},{"style":721},[1009],{"type":515,"value":880},{"type":510,"tag":537,"props":1011,"children":1012},{"style":721},[1013],{"type":515,"value":809},{"type":510,"tag":537,"props":1015,"children":1016},{"style":749},[1017],{"type":515,"value":847},{"type":510,"tag":537,"props":1019,"children":1020},{"style":721},[1021],{"type":515,"value":869},{"type":510,"tag":537,"props":1023,"children":1024},{"style":749},[1025],{"type":515,"value":1005},{"type":510,"tag":537,"props":1027,"children":1028},{"style":795},[1029],{"type":515,"value":1030}," -",{"type":510,"tag":537,"props":1032,"children":1033},{"style":872},[1034],{"type":515,"value":910},{"type":510,"tag":537,"props":1036,"children":1037},{"style":721},[1038],{"type":515,"value":880},{"type":510,"tag":537,"props":1040,"children":1041},{"style":795},[1042],{"type":515,"value":1043}," +",{"type":510,"tag":537,"props":1045,"children":1046},{"style":749},[1047],{"type":515,"value":847},{"type":510,"tag":537,"props":1049,"children":1050},{"style":721},[1051],{"type":515,"value":869},{"type":510,"tag":537,"props":1053,"children":1054},{"style":749},[1055],{"type":515,"value":1005},{"type":510,"tag":537,"props":1057,"children":1058},{"style":795},[1059],{"type":515,"value":1030},{"type":510,"tag":537,"props":1061,"children":1062},{"style":872},[1063],{"type":515,"value":947},{"type":510,"tag":537,"props":1065,"children":1066},{"style":721},[1067],{"type":515,"value":1068},"];\n",{"type":510,"tag":537,"props":1070,"children":1072},{"class":539,"line":1071},10,[1073],{"type":510,"tag":537,"props":1074,"children":1075},{"style":721},[1076],{"type":515,"value":1077},"  }\n",{"type":510,"tag":537,"props":1079,"children":1081},{"class":539,"line":1080},11,[1082,1087,1091,1095,1099],{"type":510,"tag":537,"props":1083,"children":1084},{"style":727},[1085],{"type":515,"value":1086},"  return",{"type":510,"tag":537,"props":1088,"children":1089},{"style":749},[1090],{"type":515,"value":847},{"type":510,"tag":537,"props":1092,"children":1093},{"style":721},[1094],{"type":515,"value":869},{"type":510,"tag":537,"props":1096,"children":1097},{"style":749},[1098],{"type":515,"value":824},{"type":510,"tag":537,"props":1100,"children":1101},{"style":721},[1102],{"type":515,"value":1068},{"type":510,"tag":537,"props":1104,"children":1106},{"class":539,"line":1105},12,[1107],{"type":510,"tag":537,"props":1108,"children":1109},{"style":721},[1110],{"type":515,"value":1111},"};\n",{"type":510,"tag":1113,"props":1114,"children":1115},"style",{},[1116],{"type":515,"value":1117},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":577,"depth":577,"links":1119},[1120,1121],{"id":679,"depth":549,"text":679},{"id":684,"depth":549,"text":684,"children":1122},[1123],{"id":690,"depth":558,"text":690},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1130,1132],{"_path":135,"title":134,"description":1131},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":141,"title":140,"description":1133},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1714054336948]