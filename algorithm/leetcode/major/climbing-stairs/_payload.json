[{"data":1,"prerenderedAt":1080},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":460,"/algorithm/leetcode/major/climbing-stairs-surround":1075},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":132,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":131,"description":464,"url":465,"body":466,"_type":1070,"_id":1071,"_source":1072,"_file":1073,"_extension":1074},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":467,"children":468,"toc":1064},"root",[469,476,481,486,553,558,621,626,636,642,647,653,1058],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"示例 1：",{"type":470,"tag":487,"props":488,"children":491},"pre",{"className":489,"code":490,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[492],{"type":470,"tag":493,"props":494,"children":495},"code",{"__ignoreMap":463},[496,507,516,525,535,544],{"type":470,"tag":497,"props":498,"children":501},"span",{"class":499,"line":500},"line",1,[502],{"type":470,"tag":497,"props":503,"children":504},{},[505],{"type":475,"value":506},"输入：n = 2\n",{"type":470,"tag":497,"props":508,"children":510},{"class":499,"line":509},2,[511],{"type":470,"tag":497,"props":512,"children":513},{},[514],{"type":475,"value":515},"输出：2\n",{"type":470,"tag":497,"props":517,"children":519},{"class":499,"line":518},3,[520],{"type":470,"tag":497,"props":521,"children":522},{},[523],{"type":475,"value":524},"解释：有两种方法可以爬到楼顶。\n",{"type":470,"tag":497,"props":526,"children":528},{"class":499,"line":527},4,[529],{"type":470,"tag":497,"props":530,"children":532},{"emptyLinePlaceholder":531},true,[533],{"type":475,"value":534},"\n",{"type":470,"tag":497,"props":536,"children":538},{"class":499,"line":537},5,[539],{"type":470,"tag":497,"props":540,"children":541},{},[542],{"type":475,"value":543},"1. 1 阶 + 1 阶\n",{"type":470,"tag":497,"props":545,"children":547},{"class":499,"line":546},6,[548],{"type":470,"tag":497,"props":549,"children":550},{},[551],{"type":475,"value":552},"2. 2 阶\n",{"type":470,"tag":471,"props":554,"children":555},{},[556],{"type":475,"value":557},"示例 2：",{"type":470,"tag":487,"props":559,"children":561},{"className":489,"code":560,"language":475,"meta":463,"style":463},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[562],{"type":470,"tag":493,"props":563,"children":564},{"__ignoreMap":463},[565,573,581,589,596,604,612],{"type":470,"tag":497,"props":566,"children":567},{"class":499,"line":500},[568],{"type":470,"tag":497,"props":569,"children":570},{},[571],{"type":475,"value":572},"输入：n = 3\n",{"type":470,"tag":497,"props":574,"children":575},{"class":499,"line":509},[576],{"type":470,"tag":497,"props":577,"children":578},{},[579],{"type":475,"value":580},"输出：3\n",{"type":470,"tag":497,"props":582,"children":583},{"class":499,"line":518},[584],{"type":470,"tag":497,"props":585,"children":586},{},[587],{"type":475,"value":588},"解释：有三种方法可以爬到楼顶。\n",{"type":470,"tag":497,"props":590,"children":591},{"class":499,"line":527},[592],{"type":470,"tag":497,"props":593,"children":594},{"emptyLinePlaceholder":531},[595],{"type":475,"value":534},{"type":470,"tag":497,"props":597,"children":598},{"class":499,"line":537},[599],{"type":470,"tag":497,"props":600,"children":601},{},[602],{"type":475,"value":603},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":470,"tag":497,"props":605,"children":606},{"class":499,"line":546},[607],{"type":470,"tag":497,"props":608,"children":609},{},[610],{"type":475,"value":611},"2. 1 阶 + 2 阶\n",{"type":470,"tag":497,"props":613,"children":615},{"class":499,"line":614},7,[616],{"type":470,"tag":497,"props":617,"children":618},{},[619],{"type":475,"value":620},"3. 2 阶 + 1 阶\n",{"type":470,"tag":471,"props":622,"children":623},{},[624],{"type":475,"value":625},"提示：",{"type":470,"tag":627,"props":628,"children":629},"ul",{},[630],{"type":470,"tag":631,"props":632,"children":633},"li",{},[634],{"type":475,"value":635},"1 \u003C= n \u003C= 45",{"type":470,"tag":637,"props":638,"children":640},"h2",{"id":639},"解题思路",[641],{"type":475,"value":639},{"type":470,"tag":637,"props":643,"children":645},{"id":644},"实现",[646],{"type":475,"value":644},{"type":470,"tag":648,"props":649,"children":651},"h3",{"id":650},"动态规划",[652],{"type":475,"value":650},{"type":470,"tag":487,"props":654,"children":658},{"className":655,"code":656,"language":657,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[659],{"type":470,"tag":493,"props":660,"children":661},{"__ignoreMap":463},[662,671,697,714,722,765,794,853,922,1007,1016,1045],{"type":470,"tag":497,"props":663,"children":664},{"class":499,"line":500},[665],{"type":470,"tag":497,"props":666,"children":668},{"style":667},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[669],{"type":475,"value":670},"/**\n",{"type":470,"tag":497,"props":672,"children":673},{"class":499,"line":509},[674,679,685,691],{"type":470,"tag":497,"props":675,"children":676},{"style":667},[677],{"type":475,"value":678}," * ",{"type":470,"tag":497,"props":680,"children":682},{"style":681},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[683],{"type":475,"value":684},"@param",{"type":470,"tag":497,"props":686,"children":688},{"style":687},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[689],{"type":475,"value":690}," {number}",{"type":470,"tag":497,"props":692,"children":694},{"style":693},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[695],{"type":475,"value":696}," n\n",{"type":470,"tag":497,"props":698,"children":699},{"class":499,"line":518},[700,704,709],{"type":470,"tag":497,"props":701,"children":702},{"style":667},[703],{"type":475,"value":678},{"type":470,"tag":497,"props":705,"children":706},{"style":681},[707],{"type":475,"value":708},"@return",{"type":470,"tag":497,"props":710,"children":711},{"style":687},[712],{"type":475,"value":713}," {number}\n",{"type":470,"tag":497,"props":715,"children":716},{"class":499,"line":527},[717],{"type":470,"tag":497,"props":718,"children":719},{"style":667},[720],{"type":475,"value":721}," */\n",{"type":470,"tag":497,"props":723,"children":724},{"class":499,"line":537},[725,731,737,743,748,754,760],{"type":470,"tag":497,"props":726,"children":728},{"style":727},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[729],{"type":475,"value":730},"var",{"type":470,"tag":497,"props":732,"children":734},{"style":733},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[735],{"type":475,"value":736}," climbStairs",{"type":470,"tag":497,"props":738,"children":740},{"style":739},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[741],{"type":475,"value":742}," =",{"type":470,"tag":497,"props":744,"children":745},{"style":727},[746],{"type":475,"value":747}," function",{"type":470,"tag":497,"props":749,"children":751},{"style":750},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[752],{"type":475,"value":753}," (",{"type":470,"tag":497,"props":755,"children":757},{"style":756},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[758],{"type":475,"value":759},"n",{"type":470,"tag":497,"props":761,"children":762},{"style":750},[763],{"type":475,"value":764},") {\n",{"type":470,"tag":497,"props":766,"children":767},{"class":499,"line":546},[768,773,779,783,788],{"type":470,"tag":497,"props":769,"children":770},{"style":727},[771],{"type":475,"value":772},"  let",{"type":470,"tag":497,"props":774,"children":776},{"style":775},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[777],{"type":475,"value":778}," dp",{"type":470,"tag":497,"props":780,"children":781},{"style":739},[782],{"type":475,"value":742},{"type":470,"tag":497,"props":784,"children":785},{"style":750},[786],{"type":475,"value":787}," []",{"type":470,"tag":497,"props":789,"children":791},{"style":790},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[792],{"type":475,"value":793},";\n",{"type":470,"tag":497,"props":795,"children":796},{"class":499,"line":614},[797,802,807,813,818,823,827,831,836,840,844,849],{"type":470,"tag":497,"props":798,"children":799},{"style":775},[800],{"type":475,"value":801},"  dp",{"type":470,"tag":497,"props":803,"children":804},{"style":750},[805],{"type":475,"value":806},"[",{"type":470,"tag":497,"props":808,"children":810},{"style":809},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[811],{"type":475,"value":812},"0",{"type":470,"tag":497,"props":814,"children":815},{"style":750},[816],{"type":475,"value":817},"] ",{"type":470,"tag":497,"props":819,"children":820},{"style":739},[821],{"type":475,"value":822},"=",{"type":470,"tag":497,"props":824,"children":825},{"style":775},[826],{"type":475,"value":778},{"type":470,"tag":497,"props":828,"children":829},{"style":750},[830],{"type":475,"value":806},{"type":470,"tag":497,"props":832,"children":833},{"style":809},[834],{"type":475,"value":835},"1",{"type":470,"tag":497,"props":837,"children":838},{"style":750},[839],{"type":475,"value":817},{"type":470,"tag":497,"props":841,"children":842},{"style":739},[843],{"type":475,"value":822},{"type":470,"tag":497,"props":845,"children":846},{"style":809},[847],{"type":475,"value":848}," 1",{"type":470,"tag":497,"props":850,"children":851},{"style":790},[852],{"type":475,"value":793},{"type":470,"tag":497,"props":854,"children":856},{"class":499,"line":855},8,[857,863,867,872,877,881,886,891,895,900,905,909,913,918],{"type":470,"tag":497,"props":858,"children":860},{"style":859},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[861],{"type":475,"value":862},"  for",{"type":470,"tag":497,"props":864,"children":865},{"style":750},[866],{"type":475,"value":753},{"type":470,"tag":497,"props":868,"children":869},{"style":727},[870],{"type":475,"value":871},"let",{"type":470,"tag":497,"props":873,"children":874},{"style":775},[875],{"type":475,"value":876}," i",{"type":470,"tag":497,"props":878,"children":879},{"style":739},[880],{"type":475,"value":742},{"type":470,"tag":497,"props":882,"children":883},{"style":809},[884],{"type":475,"value":885}," 2",{"type":470,"tag":497,"props":887,"children":888},{"style":790},[889],{"type":475,"value":890},";",{"type":470,"tag":497,"props":892,"children":893},{"style":775},[894],{"type":475,"value":876},{"type":470,"tag":497,"props":896,"children":897},{"style":739},[898],{"type":475,"value":899}," \u003C=",{"type":470,"tag":497,"props":901,"children":902},{"style":775},[903],{"type":475,"value":904}," n",{"type":470,"tag":497,"props":906,"children":907},{"style":790},[908],{"type":475,"value":890},{"type":470,"tag":497,"props":910,"children":911},{"style":775},[912],{"type":475,"value":876},{"type":470,"tag":497,"props":914,"children":915},{"style":739},[916],{"type":475,"value":917},"++",{"type":470,"tag":497,"props":919,"children":920},{"style":750},[921],{"type":475,"value":764},{"type":470,"tag":497,"props":923,"children":925},{"class":499,"line":924},9,[926,931,935,940,944,948,952,956,960,965,969,973,978,982,986,990,994,998,1003],{"type":470,"tag":497,"props":927,"children":928},{"style":775},[929],{"type":475,"value":930},"    dp",{"type":470,"tag":497,"props":932,"children":933},{"style":750},[934],{"type":475,"value":806},{"type":470,"tag":497,"props":936,"children":937},{"style":775},[938],{"type":475,"value":939},"i",{"type":470,"tag":497,"props":941,"children":942},{"style":750},[943],{"type":475,"value":817},{"type":470,"tag":497,"props":945,"children":946},{"style":739},[947],{"type":475,"value":822},{"type":470,"tag":497,"props":949,"children":950},{"style":775},[951],{"type":475,"value":778},{"type":470,"tag":497,"props":953,"children":954},{"style":750},[955],{"type":475,"value":806},{"type":470,"tag":497,"props":957,"children":958},{"style":775},[959],{"type":475,"value":939},{"type":470,"tag":497,"props":961,"children":962},{"style":739},[963],{"type":475,"value":964}," -",{"type":470,"tag":497,"props":966,"children":967},{"style":809},[968],{"type":475,"value":848},{"type":470,"tag":497,"props":970,"children":971},{"style":750},[972],{"type":475,"value":817},{"type":470,"tag":497,"props":974,"children":975},{"style":739},[976],{"type":475,"value":977},"+",{"type":470,"tag":497,"props":979,"children":980},{"style":775},[981],{"type":475,"value":778},{"type":470,"tag":497,"props":983,"children":984},{"style":750},[985],{"type":475,"value":806},{"type":470,"tag":497,"props":987,"children":988},{"style":775},[989],{"type":475,"value":939},{"type":470,"tag":497,"props":991,"children":992},{"style":739},[993],{"type":475,"value":964},{"type":470,"tag":497,"props":995,"children":996},{"style":809},[997],{"type":475,"value":885},{"type":470,"tag":497,"props":999,"children":1000},{"style":750},[1001],{"type":475,"value":1002},"]",{"type":470,"tag":497,"props":1004,"children":1005},{"style":790},[1006],{"type":475,"value":793},{"type":470,"tag":497,"props":1008,"children":1010},{"class":499,"line":1009},10,[1011],{"type":470,"tag":497,"props":1012,"children":1013},{"style":750},[1014],{"type":475,"value":1015},"  }\n",{"type":470,"tag":497,"props":1017,"children":1019},{"class":499,"line":1018},11,[1020,1025,1029,1033,1037,1041],{"type":470,"tag":497,"props":1021,"children":1022},{"style":859},[1023],{"type":475,"value":1024},"  return",{"type":470,"tag":497,"props":1026,"children":1027},{"style":775},[1028],{"type":475,"value":778},{"type":470,"tag":497,"props":1030,"children":1031},{"style":750},[1032],{"type":475,"value":806},{"type":470,"tag":497,"props":1034,"children":1035},{"style":775},[1036],{"type":475,"value":759},{"type":470,"tag":497,"props":1038,"children":1039},{"style":750},[1040],{"type":475,"value":1002},{"type":470,"tag":497,"props":1042,"children":1043},{"style":790},[1044],{"type":475,"value":793},{"type":470,"tag":497,"props":1046,"children":1048},{"class":499,"line":1047},12,[1049,1054],{"type":470,"tag":497,"props":1050,"children":1051},{"style":750},[1052],{"type":475,"value":1053},"}",{"type":470,"tag":497,"props":1055,"children":1056},{"style":790},[1057],{"type":475,"value":793},{"type":470,"tag":1059,"props":1060,"children":1061},"style",{},[1062],{"type":475,"value":1063},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":537,"depth":537,"links":1065},[1066,1067],{"id":639,"depth":509,"text":639},{"id":644,"depth":509,"text":644,"children":1068},[1069],{"id":650,"depth":518,"text":650},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1076,1078],{"_path":129,"title":128,"description":1077},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":135,"title":134,"description":1079},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1713626053426]