[{"data":1,"prerenderedAt":1112},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":478,"/algorithm/leetcode/major/climbing-stairs-surround":1107},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":138,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":137,"description":482,"url":483,"body":484,"_type":1102,"_id":1103,"_source":1104,"_file":1105,"_extension":1106},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":485,"children":486,"toc":1096},"root",[487,494,499,504,571,576,639,644,654,660,665,671,1090],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":488,"tag":489,"props":500,"children":501},{},[502],{"type":493,"value":503},"示例 1：",{"type":488,"tag":505,"props":506,"children":509},"pre",{"className":507,"code":508,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[510],{"type":488,"tag":511,"props":512,"children":513},"code",{"__ignoreMap":481},[514,525,534,543,553,562],{"type":488,"tag":515,"props":516,"children":519},"span",{"class":517,"line":518},"line",1,[520],{"type":488,"tag":515,"props":521,"children":522},{},[523],{"type":493,"value":524},"输入：n = 2\n",{"type":488,"tag":515,"props":526,"children":528},{"class":517,"line":527},2,[529],{"type":488,"tag":515,"props":530,"children":531},{},[532],{"type":493,"value":533},"输出：2\n",{"type":488,"tag":515,"props":535,"children":537},{"class":517,"line":536},3,[538],{"type":488,"tag":515,"props":539,"children":540},{},[541],{"type":493,"value":542},"解释：有两种方法可以爬到楼顶。\n",{"type":488,"tag":515,"props":544,"children":546},{"class":517,"line":545},4,[547],{"type":488,"tag":515,"props":548,"children":550},{"emptyLinePlaceholder":549},true,[551],{"type":493,"value":552},"\n",{"type":488,"tag":515,"props":554,"children":556},{"class":517,"line":555},5,[557],{"type":488,"tag":515,"props":558,"children":559},{},[560],{"type":493,"value":561},"1. 1 阶 + 1 阶\n",{"type":488,"tag":515,"props":563,"children":565},{"class":517,"line":564},6,[566],{"type":488,"tag":515,"props":567,"children":568},{},[569],{"type":493,"value":570},"2. 2 阶\n",{"type":488,"tag":489,"props":572,"children":573},{},[574],{"type":493,"value":575},"示例 2：",{"type":488,"tag":505,"props":577,"children":579},{"className":507,"code":578,"language":493,"meta":481,"style":481},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[580],{"type":488,"tag":511,"props":581,"children":582},{"__ignoreMap":481},[583,591,599,607,614,622,630],{"type":488,"tag":515,"props":584,"children":585},{"class":517,"line":518},[586],{"type":488,"tag":515,"props":587,"children":588},{},[589],{"type":493,"value":590},"输入：n = 3\n",{"type":488,"tag":515,"props":592,"children":593},{"class":517,"line":527},[594],{"type":488,"tag":515,"props":595,"children":596},{},[597],{"type":493,"value":598},"输出：3\n",{"type":488,"tag":515,"props":600,"children":601},{"class":517,"line":536},[602],{"type":488,"tag":515,"props":603,"children":604},{},[605],{"type":493,"value":606},"解释：有三种方法可以爬到楼顶。\n",{"type":488,"tag":515,"props":608,"children":609},{"class":517,"line":545},[610],{"type":488,"tag":515,"props":611,"children":612},{"emptyLinePlaceholder":549},[613],{"type":493,"value":552},{"type":488,"tag":515,"props":615,"children":616},{"class":517,"line":555},[617],{"type":488,"tag":515,"props":618,"children":619},{},[620],{"type":493,"value":621},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":488,"tag":515,"props":623,"children":624},{"class":517,"line":564},[625],{"type":488,"tag":515,"props":626,"children":627},{},[628],{"type":493,"value":629},"2. 1 阶 + 2 阶\n",{"type":488,"tag":515,"props":631,"children":633},{"class":517,"line":632},7,[634],{"type":488,"tag":515,"props":635,"children":636},{},[637],{"type":493,"value":638},"3. 2 阶 + 1 阶\n",{"type":488,"tag":489,"props":640,"children":641},{},[642],{"type":493,"value":643},"提示：",{"type":488,"tag":645,"props":646,"children":647},"ul",{},[648],{"type":488,"tag":649,"props":650,"children":651},"li",{},[652],{"type":493,"value":653},"1 \u003C= n \u003C= 45",{"type":488,"tag":655,"props":656,"children":658},"h2",{"id":657},"解题思路",[659],{"type":493,"value":657},{"type":488,"tag":655,"props":661,"children":663},{"id":662},"实现",[664],{"type":493,"value":662},{"type":488,"tag":666,"props":667,"children":669},"h3",{"id":668},"动态规划",[670],{"type":493,"value":668},{"type":488,"tag":505,"props":672,"children":676},{"className":673,"code":674,"language":675,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[677],{"type":488,"tag":511,"props":678,"children":679},{"__ignoreMap":481},[680,689,731,760,768,813,835,894,966,1047,1056,1081],{"type":488,"tag":515,"props":681,"children":682},{"class":517,"line":518},[683],{"type":488,"tag":515,"props":684,"children":686},{"style":685},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[687],{"type":493,"value":688},"/**\n",{"type":488,"tag":515,"props":690,"children":691},{"class":517,"line":527},[692,697,703,709,714,720,725],{"type":488,"tag":515,"props":693,"children":694},{"style":685},[695],{"type":493,"value":696}," * ",{"type":488,"tag":515,"props":698,"children":700},{"style":699},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[701],{"type":493,"value":702},"@",{"type":488,"tag":515,"props":704,"children":706},{"style":705},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[707],{"type":493,"value":708},"param",{"type":488,"tag":515,"props":710,"children":711},{"style":699},[712],{"type":493,"value":713}," {",{"type":488,"tag":515,"props":715,"children":717},{"style":716},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[718],{"type":493,"value":719},"number",{"type":488,"tag":515,"props":721,"children":722},{"style":699},[723],{"type":493,"value":724},"}",{"type":488,"tag":515,"props":726,"children":728},{"style":727},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[729],{"type":493,"value":730}," n\n",{"type":488,"tag":515,"props":732,"children":733},{"class":517,"line":536},[734,738,742,747,751,755],{"type":488,"tag":515,"props":735,"children":736},{"style":685},[737],{"type":493,"value":696},{"type":488,"tag":515,"props":739,"children":740},{"style":699},[741],{"type":493,"value":702},{"type":488,"tag":515,"props":743,"children":744},{"style":705},[745],{"type":493,"value":746},"return",{"type":488,"tag":515,"props":748,"children":749},{"style":699},[750],{"type":493,"value":713},{"type":488,"tag":515,"props":752,"children":753},{"style":716},[754],{"type":493,"value":719},{"type":488,"tag":515,"props":756,"children":757},{"style":699},[758],{"type":493,"value":759},"}\n",{"type":488,"tag":515,"props":761,"children":762},{"class":517,"line":545},[763],{"type":488,"tag":515,"props":764,"children":765},{"style":685},[766],{"type":493,"value":767}," */\n",{"type":488,"tag":515,"props":769,"children":770},{"class":517,"line":555},[771,777,783,788,793,798,803,808],{"type":488,"tag":515,"props":772,"children":774},{"style":773},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[775],{"type":493,"value":776},"var",{"type":488,"tag":515,"props":778,"children":780},{"style":779},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[781],{"type":493,"value":782}," climbStairs",{"type":488,"tag":515,"props":784,"children":785},{"style":699},[786],{"type":493,"value":787}," =",{"type":488,"tag":515,"props":789,"children":790},{"style":773},[791],{"type":493,"value":792}," function",{"type":488,"tag":515,"props":794,"children":795},{"style":699},[796],{"type":493,"value":797}," (",{"type":488,"tag":515,"props":799,"children":800},{"style":727},[801],{"type":493,"value":802},"n",{"type":488,"tag":515,"props":804,"children":805},{"style":699},[806],{"type":493,"value":807},")",{"type":488,"tag":515,"props":809,"children":810},{"style":699},[811],{"type":493,"value":812}," {\n",{"type":488,"tag":515,"props":814,"children":815},{"class":517,"line":564},[816,821,826,830],{"type":488,"tag":515,"props":817,"children":818},{"style":773},[819],{"type":493,"value":820},"  let",{"type":488,"tag":515,"props":822,"children":823},{"style":727},[824],{"type":493,"value":825}," dp",{"type":488,"tag":515,"props":827,"children":828},{"style":699},[829],{"type":493,"value":787},{"type":488,"tag":515,"props":831,"children":832},{"style":699},[833],{"type":493,"value":834}," [];\n",{"type":488,"tag":515,"props":836,"children":837},{"class":517,"line":632},[838,843,848,854,859,863,867,871,876,880,884,889],{"type":488,"tag":515,"props":839,"children":840},{"style":727},[841],{"type":493,"value":842},"  dp",{"type":488,"tag":515,"props":844,"children":845},{"style":699},[846],{"type":493,"value":847},"[",{"type":488,"tag":515,"props":849,"children":851},{"style":850},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[852],{"type":493,"value":853},"0",{"type":488,"tag":515,"props":855,"children":856},{"style":699},[857],{"type":493,"value":858},"]",{"type":488,"tag":515,"props":860,"children":861},{"style":699},[862],{"type":493,"value":787},{"type":488,"tag":515,"props":864,"children":865},{"style":727},[866],{"type":493,"value":825},{"type":488,"tag":515,"props":868,"children":869},{"style":699},[870],{"type":493,"value":847},{"type":488,"tag":515,"props":872,"children":873},{"style":850},[874],{"type":493,"value":875},"1",{"type":488,"tag":515,"props":877,"children":878},{"style":699},[879],{"type":493,"value":858},{"type":488,"tag":515,"props":881,"children":882},{"style":699},[883],{"type":493,"value":787},{"type":488,"tag":515,"props":885,"children":886},{"style":850},[887],{"type":493,"value":888}," 1",{"type":488,"tag":515,"props":890,"children":891},{"style":699},[892],{"type":493,"value":893},";\n",{"type":488,"tag":515,"props":895,"children":897},{"class":517,"line":896},8,[898,903,907,912,917,921,926,931,935,940,945,949,953,958,962],{"type":488,"tag":515,"props":899,"children":900},{"style":705},[901],{"type":493,"value":902},"  for",{"type":488,"tag":515,"props":904,"children":905},{"style":699},[906],{"type":493,"value":797},{"type":488,"tag":515,"props":908,"children":909},{"style":773},[910],{"type":493,"value":911},"let",{"type":488,"tag":515,"props":913,"children":914},{"style":727},[915],{"type":493,"value":916}," i",{"type":488,"tag":515,"props":918,"children":919},{"style":699},[920],{"type":493,"value":787},{"type":488,"tag":515,"props":922,"children":923},{"style":850},[924],{"type":493,"value":925}," 2",{"type":488,"tag":515,"props":927,"children":928},{"style":699},[929],{"type":493,"value":930},";",{"type":488,"tag":515,"props":932,"children":933},{"style":727},[934],{"type":493,"value":916},{"type":488,"tag":515,"props":936,"children":937},{"style":699},[938],{"type":493,"value":939}," \u003C=",{"type":488,"tag":515,"props":941,"children":942},{"style":727},[943],{"type":493,"value":944}," n",{"type":488,"tag":515,"props":946,"children":947},{"style":699},[948],{"type":493,"value":930},{"type":488,"tag":515,"props":950,"children":951},{"style":727},[952],{"type":493,"value":916},{"type":488,"tag":515,"props":954,"children":955},{"style":773},[956],{"type":493,"value":957},"++",{"type":488,"tag":515,"props":959,"children":960},{"style":699},[961],{"type":493,"value":807},{"type":488,"tag":515,"props":963,"children":964},{"style":699},[965],{"type":493,"value":812},{"type":488,"tag":515,"props":967,"children":969},{"class":517,"line":968},9,[970,975,979,984,988,992,996,1000,1004,1009,1013,1017,1022,1026,1030,1034,1038,1042],{"type":488,"tag":515,"props":971,"children":972},{"style":727},[973],{"type":493,"value":974},"    dp",{"type":488,"tag":515,"props":976,"children":977},{"style":699},[978],{"type":493,"value":847},{"type":488,"tag":515,"props":980,"children":981},{"style":727},[982],{"type":493,"value":983},"i",{"type":488,"tag":515,"props":985,"children":986},{"style":699},[987],{"type":493,"value":858},{"type":488,"tag":515,"props":989,"children":990},{"style":699},[991],{"type":493,"value":787},{"type":488,"tag":515,"props":993,"children":994},{"style":727},[995],{"type":493,"value":825},{"type":488,"tag":515,"props":997,"children":998},{"style":699},[999],{"type":493,"value":847},{"type":488,"tag":515,"props":1001,"children":1002},{"style":727},[1003],{"type":493,"value":983},{"type":488,"tag":515,"props":1005,"children":1006},{"style":773},[1007],{"type":493,"value":1008}," -",{"type":488,"tag":515,"props":1010,"children":1011},{"style":850},[1012],{"type":493,"value":888},{"type":488,"tag":515,"props":1014,"children":1015},{"style":699},[1016],{"type":493,"value":858},{"type":488,"tag":515,"props":1018,"children":1019},{"style":773},[1020],{"type":493,"value":1021}," +",{"type":488,"tag":515,"props":1023,"children":1024},{"style":727},[1025],{"type":493,"value":825},{"type":488,"tag":515,"props":1027,"children":1028},{"style":699},[1029],{"type":493,"value":847},{"type":488,"tag":515,"props":1031,"children":1032},{"style":727},[1033],{"type":493,"value":983},{"type":488,"tag":515,"props":1035,"children":1036},{"style":773},[1037],{"type":493,"value":1008},{"type":488,"tag":515,"props":1039,"children":1040},{"style":850},[1041],{"type":493,"value":925},{"type":488,"tag":515,"props":1043,"children":1044},{"style":699},[1045],{"type":493,"value":1046},"];\n",{"type":488,"tag":515,"props":1048,"children":1050},{"class":517,"line":1049},10,[1051],{"type":488,"tag":515,"props":1052,"children":1053},{"style":699},[1054],{"type":493,"value":1055},"  }\n",{"type":488,"tag":515,"props":1057,"children":1059},{"class":517,"line":1058},11,[1060,1065,1069,1073,1077],{"type":488,"tag":515,"props":1061,"children":1062},{"style":705},[1063],{"type":493,"value":1064},"  return",{"type":488,"tag":515,"props":1066,"children":1067},{"style":727},[1068],{"type":493,"value":825},{"type":488,"tag":515,"props":1070,"children":1071},{"style":699},[1072],{"type":493,"value":847},{"type":488,"tag":515,"props":1074,"children":1075},{"style":727},[1076],{"type":493,"value":802},{"type":488,"tag":515,"props":1078,"children":1079},{"style":699},[1080],{"type":493,"value":1046},{"type":488,"tag":515,"props":1082,"children":1084},{"class":517,"line":1083},12,[1085],{"type":488,"tag":515,"props":1086,"children":1087},{"style":699},[1088],{"type":493,"value":1089},"};\n",{"type":488,"tag":1091,"props":1092,"children":1093},"style",{},[1094],{"type":493,"value":1095},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":555,"depth":555,"links":1097},[1098,1099],{"id":657,"depth":527,"text":657},{"id":662,"depth":527,"text":662,"children":1100},[1101],{"id":668,"depth":536,"text":668},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1108,1110],{"_path":135,"title":134,"description":1109},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":141,"title":140,"description":1111},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1714046225014]