[{"data":1,"prerenderedAt":1137},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":503,"/algorithm/leetcode/major/climbing-stairs-surround":1132},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":138,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":137,"description":507,"url":508,"body":509,"_type":1127,"_id":1128,"_source":1129,"_file":1130,"_extension":1131},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":510,"children":511,"toc":1121},"root",[512,519,524,529,596,601,664,669,679,685,690,696,1115],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522],{"type":518,"value":523},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":513,"tag":514,"props":525,"children":526},{},[527],{"type":518,"value":528},"示例 1：",{"type":513,"tag":530,"props":531,"children":534},"pre",{"className":532,"code":533,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[535],{"type":513,"tag":536,"props":537,"children":538},"code",{"__ignoreMap":506},[539,550,559,568,578,587],{"type":513,"tag":540,"props":541,"children":544},"span",{"class":542,"line":543},"line",1,[545],{"type":513,"tag":540,"props":546,"children":547},{},[548],{"type":518,"value":549},"输入：n = 2\n",{"type":513,"tag":540,"props":551,"children":553},{"class":542,"line":552},2,[554],{"type":513,"tag":540,"props":555,"children":556},{},[557],{"type":518,"value":558},"输出：2\n",{"type":513,"tag":540,"props":560,"children":562},{"class":542,"line":561},3,[563],{"type":513,"tag":540,"props":564,"children":565},{},[566],{"type":518,"value":567},"解释：有两种方法可以爬到楼顶。\n",{"type":513,"tag":540,"props":569,"children":571},{"class":542,"line":570},4,[572],{"type":513,"tag":540,"props":573,"children":575},{"emptyLinePlaceholder":574},true,[576],{"type":518,"value":577},"\n",{"type":513,"tag":540,"props":579,"children":581},{"class":542,"line":580},5,[582],{"type":513,"tag":540,"props":583,"children":584},{},[585],{"type":518,"value":586},"1. 1 阶 + 1 阶\n",{"type":513,"tag":540,"props":588,"children":590},{"class":542,"line":589},6,[591],{"type":513,"tag":540,"props":592,"children":593},{},[594],{"type":518,"value":595},"2. 2 阶\n",{"type":513,"tag":514,"props":597,"children":598},{},[599],{"type":518,"value":600},"示例 2：",{"type":513,"tag":530,"props":602,"children":604},{"className":532,"code":603,"language":518,"meta":506,"style":506},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[605],{"type":513,"tag":536,"props":606,"children":607},{"__ignoreMap":506},[608,616,624,632,639,647,655],{"type":513,"tag":540,"props":609,"children":610},{"class":542,"line":543},[611],{"type":513,"tag":540,"props":612,"children":613},{},[614],{"type":518,"value":615},"输入：n = 3\n",{"type":513,"tag":540,"props":617,"children":618},{"class":542,"line":552},[619],{"type":513,"tag":540,"props":620,"children":621},{},[622],{"type":518,"value":623},"输出：3\n",{"type":513,"tag":540,"props":625,"children":626},{"class":542,"line":561},[627],{"type":513,"tag":540,"props":628,"children":629},{},[630],{"type":518,"value":631},"解释：有三种方法可以爬到楼顶。\n",{"type":513,"tag":540,"props":633,"children":634},{"class":542,"line":570},[635],{"type":513,"tag":540,"props":636,"children":637},{"emptyLinePlaceholder":574},[638],{"type":518,"value":577},{"type":513,"tag":540,"props":640,"children":641},{"class":542,"line":580},[642],{"type":513,"tag":540,"props":643,"children":644},{},[645],{"type":518,"value":646},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":513,"tag":540,"props":648,"children":649},{"class":542,"line":589},[650],{"type":513,"tag":540,"props":651,"children":652},{},[653],{"type":518,"value":654},"2. 1 阶 + 2 阶\n",{"type":513,"tag":540,"props":656,"children":658},{"class":542,"line":657},7,[659],{"type":513,"tag":540,"props":660,"children":661},{},[662],{"type":518,"value":663},"3. 2 阶 + 1 阶\n",{"type":513,"tag":514,"props":665,"children":666},{},[667],{"type":518,"value":668},"提示：",{"type":513,"tag":670,"props":671,"children":672},"ul",{},[673],{"type":513,"tag":674,"props":675,"children":676},"li",{},[677],{"type":518,"value":678},"1 \u003C= n \u003C= 45",{"type":513,"tag":680,"props":681,"children":683},"h2",{"id":682},"解题思路",[684],{"type":518,"value":682},{"type":513,"tag":680,"props":686,"children":688},{"id":687},"实现",[689],{"type":518,"value":687},{"type":513,"tag":691,"props":692,"children":694},"h3",{"id":693},"动态规划",[695],{"type":518,"value":693},{"type":513,"tag":530,"props":697,"children":701},{"className":698,"code":699,"language":700,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[702],{"type":513,"tag":536,"props":703,"children":704},{"__ignoreMap":506},[705,714,756,785,793,838,860,919,991,1072,1081,1106],{"type":513,"tag":540,"props":706,"children":707},{"class":542,"line":543},[708],{"type":513,"tag":540,"props":709,"children":711},{"style":710},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[712],{"type":518,"value":713},"/**\n",{"type":513,"tag":540,"props":715,"children":716},{"class":542,"line":552},[717,722,728,734,739,745,750],{"type":513,"tag":540,"props":718,"children":719},{"style":710},[720],{"type":518,"value":721}," * ",{"type":513,"tag":540,"props":723,"children":725},{"style":724},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[726],{"type":518,"value":727},"@",{"type":513,"tag":540,"props":729,"children":731},{"style":730},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[732],{"type":518,"value":733},"param",{"type":513,"tag":540,"props":735,"children":736},{"style":724},[737],{"type":518,"value":738}," {",{"type":513,"tag":540,"props":740,"children":742},{"style":741},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[743],{"type":518,"value":744},"number",{"type":513,"tag":540,"props":746,"children":747},{"style":724},[748],{"type":518,"value":749},"}",{"type":513,"tag":540,"props":751,"children":753},{"style":752},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[754],{"type":518,"value":755}," n\n",{"type":513,"tag":540,"props":757,"children":758},{"class":542,"line":561},[759,763,767,772,776,780],{"type":513,"tag":540,"props":760,"children":761},{"style":710},[762],{"type":518,"value":721},{"type":513,"tag":540,"props":764,"children":765},{"style":724},[766],{"type":518,"value":727},{"type":513,"tag":540,"props":768,"children":769},{"style":730},[770],{"type":518,"value":771},"return",{"type":513,"tag":540,"props":773,"children":774},{"style":724},[775],{"type":518,"value":738},{"type":513,"tag":540,"props":777,"children":778},{"style":741},[779],{"type":518,"value":744},{"type":513,"tag":540,"props":781,"children":782},{"style":724},[783],{"type":518,"value":784},"}\n",{"type":513,"tag":540,"props":786,"children":787},{"class":542,"line":570},[788],{"type":513,"tag":540,"props":789,"children":790},{"style":710},[791],{"type":518,"value":792}," */\n",{"type":513,"tag":540,"props":794,"children":795},{"class":542,"line":580},[796,802,808,813,818,823,828,833],{"type":513,"tag":540,"props":797,"children":799},{"style":798},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[800],{"type":518,"value":801},"var",{"type":513,"tag":540,"props":803,"children":805},{"style":804},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[806],{"type":518,"value":807}," climbStairs",{"type":513,"tag":540,"props":809,"children":810},{"style":724},[811],{"type":518,"value":812}," =",{"type":513,"tag":540,"props":814,"children":815},{"style":798},[816],{"type":518,"value":817}," function",{"type":513,"tag":540,"props":819,"children":820},{"style":724},[821],{"type":518,"value":822}," (",{"type":513,"tag":540,"props":824,"children":825},{"style":752},[826],{"type":518,"value":827},"n",{"type":513,"tag":540,"props":829,"children":830},{"style":724},[831],{"type":518,"value":832},")",{"type":513,"tag":540,"props":834,"children":835},{"style":724},[836],{"type":518,"value":837}," {\n",{"type":513,"tag":540,"props":839,"children":840},{"class":542,"line":589},[841,846,851,855],{"type":513,"tag":540,"props":842,"children":843},{"style":798},[844],{"type":518,"value":845},"  let",{"type":513,"tag":540,"props":847,"children":848},{"style":752},[849],{"type":518,"value":850}," dp",{"type":513,"tag":540,"props":852,"children":853},{"style":724},[854],{"type":518,"value":812},{"type":513,"tag":540,"props":856,"children":857},{"style":724},[858],{"type":518,"value":859}," [];\n",{"type":513,"tag":540,"props":861,"children":862},{"class":542,"line":657},[863,868,873,879,884,888,892,896,901,905,909,914],{"type":513,"tag":540,"props":864,"children":865},{"style":752},[866],{"type":518,"value":867},"  dp",{"type":513,"tag":540,"props":869,"children":870},{"style":724},[871],{"type":518,"value":872},"[",{"type":513,"tag":540,"props":874,"children":876},{"style":875},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[877],{"type":518,"value":878},"0",{"type":513,"tag":540,"props":880,"children":881},{"style":724},[882],{"type":518,"value":883},"]",{"type":513,"tag":540,"props":885,"children":886},{"style":724},[887],{"type":518,"value":812},{"type":513,"tag":540,"props":889,"children":890},{"style":752},[891],{"type":518,"value":850},{"type":513,"tag":540,"props":893,"children":894},{"style":724},[895],{"type":518,"value":872},{"type":513,"tag":540,"props":897,"children":898},{"style":875},[899],{"type":518,"value":900},"1",{"type":513,"tag":540,"props":902,"children":903},{"style":724},[904],{"type":518,"value":883},{"type":513,"tag":540,"props":906,"children":907},{"style":724},[908],{"type":518,"value":812},{"type":513,"tag":540,"props":910,"children":911},{"style":875},[912],{"type":518,"value":913}," 1",{"type":513,"tag":540,"props":915,"children":916},{"style":724},[917],{"type":518,"value":918},";\n",{"type":513,"tag":540,"props":920,"children":922},{"class":542,"line":921},8,[923,928,932,937,942,946,951,956,960,965,970,974,978,983,987],{"type":513,"tag":540,"props":924,"children":925},{"style":730},[926],{"type":518,"value":927},"  for",{"type":513,"tag":540,"props":929,"children":930},{"style":724},[931],{"type":518,"value":822},{"type":513,"tag":540,"props":933,"children":934},{"style":798},[935],{"type":518,"value":936},"let",{"type":513,"tag":540,"props":938,"children":939},{"style":752},[940],{"type":518,"value":941}," i",{"type":513,"tag":540,"props":943,"children":944},{"style":724},[945],{"type":518,"value":812},{"type":513,"tag":540,"props":947,"children":948},{"style":875},[949],{"type":518,"value":950}," 2",{"type":513,"tag":540,"props":952,"children":953},{"style":724},[954],{"type":518,"value":955},";",{"type":513,"tag":540,"props":957,"children":958},{"style":752},[959],{"type":518,"value":941},{"type":513,"tag":540,"props":961,"children":962},{"style":724},[963],{"type":518,"value":964}," \u003C=",{"type":513,"tag":540,"props":966,"children":967},{"style":752},[968],{"type":518,"value":969}," n",{"type":513,"tag":540,"props":971,"children":972},{"style":724},[973],{"type":518,"value":955},{"type":513,"tag":540,"props":975,"children":976},{"style":752},[977],{"type":518,"value":941},{"type":513,"tag":540,"props":979,"children":980},{"style":798},[981],{"type":518,"value":982},"++",{"type":513,"tag":540,"props":984,"children":985},{"style":724},[986],{"type":518,"value":832},{"type":513,"tag":540,"props":988,"children":989},{"style":724},[990],{"type":518,"value":837},{"type":513,"tag":540,"props":992,"children":994},{"class":542,"line":993},9,[995,1000,1004,1009,1013,1017,1021,1025,1029,1034,1038,1042,1047,1051,1055,1059,1063,1067],{"type":513,"tag":540,"props":996,"children":997},{"style":752},[998],{"type":518,"value":999},"    dp",{"type":513,"tag":540,"props":1001,"children":1002},{"style":724},[1003],{"type":518,"value":872},{"type":513,"tag":540,"props":1005,"children":1006},{"style":752},[1007],{"type":518,"value":1008},"i",{"type":513,"tag":540,"props":1010,"children":1011},{"style":724},[1012],{"type":518,"value":883},{"type":513,"tag":540,"props":1014,"children":1015},{"style":724},[1016],{"type":518,"value":812},{"type":513,"tag":540,"props":1018,"children":1019},{"style":752},[1020],{"type":518,"value":850},{"type":513,"tag":540,"props":1022,"children":1023},{"style":724},[1024],{"type":518,"value":872},{"type":513,"tag":540,"props":1026,"children":1027},{"style":752},[1028],{"type":518,"value":1008},{"type":513,"tag":540,"props":1030,"children":1031},{"style":798},[1032],{"type":518,"value":1033}," -",{"type":513,"tag":540,"props":1035,"children":1036},{"style":875},[1037],{"type":518,"value":913},{"type":513,"tag":540,"props":1039,"children":1040},{"style":724},[1041],{"type":518,"value":883},{"type":513,"tag":540,"props":1043,"children":1044},{"style":798},[1045],{"type":518,"value":1046}," +",{"type":513,"tag":540,"props":1048,"children":1049},{"style":752},[1050],{"type":518,"value":850},{"type":513,"tag":540,"props":1052,"children":1053},{"style":724},[1054],{"type":518,"value":872},{"type":513,"tag":540,"props":1056,"children":1057},{"style":752},[1058],{"type":518,"value":1008},{"type":513,"tag":540,"props":1060,"children":1061},{"style":798},[1062],{"type":518,"value":1033},{"type":513,"tag":540,"props":1064,"children":1065},{"style":875},[1066],{"type":518,"value":950},{"type":513,"tag":540,"props":1068,"children":1069},{"style":724},[1070],{"type":518,"value":1071},"];\n",{"type":513,"tag":540,"props":1073,"children":1075},{"class":542,"line":1074},10,[1076],{"type":513,"tag":540,"props":1077,"children":1078},{"style":724},[1079],{"type":518,"value":1080},"  }\n",{"type":513,"tag":540,"props":1082,"children":1084},{"class":542,"line":1083},11,[1085,1090,1094,1098,1102],{"type":513,"tag":540,"props":1086,"children":1087},{"style":730},[1088],{"type":518,"value":1089},"  return",{"type":513,"tag":540,"props":1091,"children":1092},{"style":752},[1093],{"type":518,"value":850},{"type":513,"tag":540,"props":1095,"children":1096},{"style":724},[1097],{"type":518,"value":872},{"type":513,"tag":540,"props":1099,"children":1100},{"style":752},[1101],{"type":518,"value":827},{"type":513,"tag":540,"props":1103,"children":1104},{"style":724},[1105],{"type":518,"value":1071},{"type":513,"tag":540,"props":1107,"children":1109},{"class":542,"line":1108},12,[1110],{"type":513,"tag":540,"props":1111,"children":1112},{"style":724},[1113],{"type":518,"value":1114},"};\n",{"type":513,"tag":1116,"props":1117,"children":1118},"style",{},[1119],{"type":518,"value":1120},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":580,"depth":580,"links":1122},[1123,1124],{"id":682,"depth":552,"text":682},{"id":687,"depth":552,"text":687,"children":1125},[1126],{"id":693,"depth":561,"text":693},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1133,1135],{"_path":135,"title":134,"description":1134},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":141,"title":140,"description":1136},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1714056093847]