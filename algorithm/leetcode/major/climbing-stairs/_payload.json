[{"data":1,"prerenderedAt":1174},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":540,"/algorithm/leetcode/major/climbing-stairs-surround":1169},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":138,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":137,"description":544,"url":545,"body":546,"_type":1164,"_id":1165,"_source":1166,"_file":1167,"_extension":1168},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":547,"children":548,"toc":1158},"root",[549,556,561,566,633,638,701,706,716,722,727,733,1152],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"示例 1：",{"type":550,"tag":567,"props":568,"children":571},"pre",{"className":569,"code":570,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[572],{"type":550,"tag":573,"props":574,"children":575},"code",{"__ignoreMap":543},[576,587,596,605,615,624],{"type":550,"tag":577,"props":578,"children":581},"span",{"class":579,"line":580},"line",1,[582],{"type":550,"tag":577,"props":583,"children":584},{},[585],{"type":555,"value":586},"输入：n = 2\n",{"type":550,"tag":577,"props":588,"children":590},{"class":579,"line":589},2,[591],{"type":550,"tag":577,"props":592,"children":593},{},[594],{"type":555,"value":595},"输出：2\n",{"type":550,"tag":577,"props":597,"children":599},{"class":579,"line":598},3,[600],{"type":550,"tag":577,"props":601,"children":602},{},[603],{"type":555,"value":604},"解释：有两种方法可以爬到楼顶。\n",{"type":550,"tag":577,"props":606,"children":608},{"class":579,"line":607},4,[609],{"type":550,"tag":577,"props":610,"children":612},{"emptyLinePlaceholder":611},true,[613],{"type":555,"value":614},"\n",{"type":550,"tag":577,"props":616,"children":618},{"class":579,"line":617},5,[619],{"type":550,"tag":577,"props":620,"children":621},{},[622],{"type":555,"value":623},"1. 1 阶 + 1 阶\n",{"type":550,"tag":577,"props":625,"children":627},{"class":579,"line":626},6,[628],{"type":550,"tag":577,"props":629,"children":630},{},[631],{"type":555,"value":632},"2. 2 阶\n",{"type":550,"tag":551,"props":634,"children":635},{},[636],{"type":555,"value":637},"示例 2：",{"type":550,"tag":567,"props":639,"children":641},{"className":569,"code":640,"language":555,"meta":543,"style":543},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[642],{"type":550,"tag":573,"props":643,"children":644},{"__ignoreMap":543},[645,653,661,669,676,684,692],{"type":550,"tag":577,"props":646,"children":647},{"class":579,"line":580},[648],{"type":550,"tag":577,"props":649,"children":650},{},[651],{"type":555,"value":652},"输入：n = 3\n",{"type":550,"tag":577,"props":654,"children":655},{"class":579,"line":589},[656],{"type":550,"tag":577,"props":657,"children":658},{},[659],{"type":555,"value":660},"输出：3\n",{"type":550,"tag":577,"props":662,"children":663},{"class":579,"line":598},[664],{"type":550,"tag":577,"props":665,"children":666},{},[667],{"type":555,"value":668},"解释：有三种方法可以爬到楼顶。\n",{"type":550,"tag":577,"props":670,"children":671},{"class":579,"line":607},[672],{"type":550,"tag":577,"props":673,"children":674},{"emptyLinePlaceholder":611},[675],{"type":555,"value":614},{"type":550,"tag":577,"props":677,"children":678},{"class":579,"line":617},[679],{"type":550,"tag":577,"props":680,"children":681},{},[682],{"type":555,"value":683},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":550,"tag":577,"props":685,"children":686},{"class":579,"line":626},[687],{"type":550,"tag":577,"props":688,"children":689},{},[690],{"type":555,"value":691},"2. 1 阶 + 2 阶\n",{"type":550,"tag":577,"props":693,"children":695},{"class":579,"line":694},7,[696],{"type":550,"tag":577,"props":697,"children":698},{},[699],{"type":555,"value":700},"3. 2 阶 + 1 阶\n",{"type":550,"tag":551,"props":702,"children":703},{},[704],{"type":555,"value":705},"提示：",{"type":550,"tag":707,"props":708,"children":709},"ul",{},[710],{"type":550,"tag":711,"props":712,"children":713},"li",{},[714],{"type":555,"value":715},"1 \u003C= n \u003C= 45",{"type":550,"tag":717,"props":718,"children":720},"h2",{"id":719},"解题思路",[721],{"type":555,"value":719},{"type":550,"tag":717,"props":723,"children":725},{"id":724},"实现",[726],{"type":555,"value":724},{"type":550,"tag":728,"props":729,"children":731},"h3",{"id":730},"动态规划",[732],{"type":555,"value":730},{"type":550,"tag":567,"props":734,"children":738},{"className":735,"code":736,"language":737,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[739],{"type":550,"tag":573,"props":740,"children":741},{"__ignoreMap":543},[742,751,793,822,830,875,897,956,1028,1109,1118,1143],{"type":550,"tag":577,"props":743,"children":744},{"class":579,"line":580},[745],{"type":550,"tag":577,"props":746,"children":748},{"style":747},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[749],{"type":555,"value":750},"/**\n",{"type":550,"tag":577,"props":752,"children":753},{"class":579,"line":589},[754,759,765,771,776,782,787],{"type":550,"tag":577,"props":755,"children":756},{"style":747},[757],{"type":555,"value":758}," * ",{"type":550,"tag":577,"props":760,"children":762},{"style":761},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[763],{"type":555,"value":764},"@",{"type":550,"tag":577,"props":766,"children":768},{"style":767},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[769],{"type":555,"value":770},"param",{"type":550,"tag":577,"props":772,"children":773},{"style":761},[774],{"type":555,"value":775}," {",{"type":550,"tag":577,"props":777,"children":779},{"style":778},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[780],{"type":555,"value":781},"number",{"type":550,"tag":577,"props":783,"children":784},{"style":761},[785],{"type":555,"value":786},"}",{"type":550,"tag":577,"props":788,"children":790},{"style":789},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[791],{"type":555,"value":792}," n\n",{"type":550,"tag":577,"props":794,"children":795},{"class":579,"line":598},[796,800,804,809,813,817],{"type":550,"tag":577,"props":797,"children":798},{"style":747},[799],{"type":555,"value":758},{"type":550,"tag":577,"props":801,"children":802},{"style":761},[803],{"type":555,"value":764},{"type":550,"tag":577,"props":805,"children":806},{"style":767},[807],{"type":555,"value":808},"return",{"type":550,"tag":577,"props":810,"children":811},{"style":761},[812],{"type":555,"value":775},{"type":550,"tag":577,"props":814,"children":815},{"style":778},[816],{"type":555,"value":781},{"type":550,"tag":577,"props":818,"children":819},{"style":761},[820],{"type":555,"value":821},"}\n",{"type":550,"tag":577,"props":823,"children":824},{"class":579,"line":607},[825],{"type":550,"tag":577,"props":826,"children":827},{"style":747},[828],{"type":555,"value":829}," */\n",{"type":550,"tag":577,"props":831,"children":832},{"class":579,"line":617},[833,839,845,850,855,860,865,870],{"type":550,"tag":577,"props":834,"children":836},{"style":835},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[837],{"type":555,"value":838},"var",{"type":550,"tag":577,"props":840,"children":842},{"style":841},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[843],{"type":555,"value":844}," climbStairs",{"type":550,"tag":577,"props":846,"children":847},{"style":761},[848],{"type":555,"value":849}," =",{"type":550,"tag":577,"props":851,"children":852},{"style":835},[853],{"type":555,"value":854}," function",{"type":550,"tag":577,"props":856,"children":857},{"style":761},[858],{"type":555,"value":859}," (",{"type":550,"tag":577,"props":861,"children":862},{"style":789},[863],{"type":555,"value":864},"n",{"type":550,"tag":577,"props":866,"children":867},{"style":761},[868],{"type":555,"value":869},")",{"type":550,"tag":577,"props":871,"children":872},{"style":761},[873],{"type":555,"value":874}," {\n",{"type":550,"tag":577,"props":876,"children":877},{"class":579,"line":626},[878,883,888,892],{"type":550,"tag":577,"props":879,"children":880},{"style":835},[881],{"type":555,"value":882},"  let",{"type":550,"tag":577,"props":884,"children":885},{"style":789},[886],{"type":555,"value":887}," dp",{"type":550,"tag":577,"props":889,"children":890},{"style":761},[891],{"type":555,"value":849},{"type":550,"tag":577,"props":893,"children":894},{"style":761},[895],{"type":555,"value":896}," [];\n",{"type":550,"tag":577,"props":898,"children":899},{"class":579,"line":694},[900,905,910,916,921,925,929,933,938,942,946,951],{"type":550,"tag":577,"props":901,"children":902},{"style":789},[903],{"type":555,"value":904},"  dp",{"type":550,"tag":577,"props":906,"children":907},{"style":761},[908],{"type":555,"value":909},"[",{"type":550,"tag":577,"props":911,"children":913},{"style":912},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[914],{"type":555,"value":915},"0",{"type":550,"tag":577,"props":917,"children":918},{"style":761},[919],{"type":555,"value":920},"]",{"type":550,"tag":577,"props":922,"children":923},{"style":761},[924],{"type":555,"value":849},{"type":550,"tag":577,"props":926,"children":927},{"style":789},[928],{"type":555,"value":887},{"type":550,"tag":577,"props":930,"children":931},{"style":761},[932],{"type":555,"value":909},{"type":550,"tag":577,"props":934,"children":935},{"style":912},[936],{"type":555,"value":937},"1",{"type":550,"tag":577,"props":939,"children":940},{"style":761},[941],{"type":555,"value":920},{"type":550,"tag":577,"props":943,"children":944},{"style":761},[945],{"type":555,"value":849},{"type":550,"tag":577,"props":947,"children":948},{"style":912},[949],{"type":555,"value":950}," 1",{"type":550,"tag":577,"props":952,"children":953},{"style":761},[954],{"type":555,"value":955},";\n",{"type":550,"tag":577,"props":957,"children":959},{"class":579,"line":958},8,[960,965,969,974,979,983,988,993,997,1002,1007,1011,1015,1020,1024],{"type":550,"tag":577,"props":961,"children":962},{"style":767},[963],{"type":555,"value":964},"  for",{"type":550,"tag":577,"props":966,"children":967},{"style":761},[968],{"type":555,"value":859},{"type":550,"tag":577,"props":970,"children":971},{"style":835},[972],{"type":555,"value":973},"let",{"type":550,"tag":577,"props":975,"children":976},{"style":789},[977],{"type":555,"value":978}," i",{"type":550,"tag":577,"props":980,"children":981},{"style":761},[982],{"type":555,"value":849},{"type":550,"tag":577,"props":984,"children":985},{"style":912},[986],{"type":555,"value":987}," 2",{"type":550,"tag":577,"props":989,"children":990},{"style":761},[991],{"type":555,"value":992},";",{"type":550,"tag":577,"props":994,"children":995},{"style":789},[996],{"type":555,"value":978},{"type":550,"tag":577,"props":998,"children":999},{"style":761},[1000],{"type":555,"value":1001}," \u003C=",{"type":550,"tag":577,"props":1003,"children":1004},{"style":789},[1005],{"type":555,"value":1006}," n",{"type":550,"tag":577,"props":1008,"children":1009},{"style":761},[1010],{"type":555,"value":992},{"type":550,"tag":577,"props":1012,"children":1013},{"style":789},[1014],{"type":555,"value":978},{"type":550,"tag":577,"props":1016,"children":1017},{"style":835},[1018],{"type":555,"value":1019},"++",{"type":550,"tag":577,"props":1021,"children":1022},{"style":761},[1023],{"type":555,"value":869},{"type":550,"tag":577,"props":1025,"children":1026},{"style":761},[1027],{"type":555,"value":874},{"type":550,"tag":577,"props":1029,"children":1031},{"class":579,"line":1030},9,[1032,1037,1041,1046,1050,1054,1058,1062,1066,1071,1075,1079,1084,1088,1092,1096,1100,1104],{"type":550,"tag":577,"props":1033,"children":1034},{"style":789},[1035],{"type":555,"value":1036},"    dp",{"type":550,"tag":577,"props":1038,"children":1039},{"style":761},[1040],{"type":555,"value":909},{"type":550,"tag":577,"props":1042,"children":1043},{"style":789},[1044],{"type":555,"value":1045},"i",{"type":550,"tag":577,"props":1047,"children":1048},{"style":761},[1049],{"type":555,"value":920},{"type":550,"tag":577,"props":1051,"children":1052},{"style":761},[1053],{"type":555,"value":849},{"type":550,"tag":577,"props":1055,"children":1056},{"style":789},[1057],{"type":555,"value":887},{"type":550,"tag":577,"props":1059,"children":1060},{"style":761},[1061],{"type":555,"value":909},{"type":550,"tag":577,"props":1063,"children":1064},{"style":789},[1065],{"type":555,"value":1045},{"type":550,"tag":577,"props":1067,"children":1068},{"style":835},[1069],{"type":555,"value":1070}," -",{"type":550,"tag":577,"props":1072,"children":1073},{"style":912},[1074],{"type":555,"value":950},{"type":550,"tag":577,"props":1076,"children":1077},{"style":761},[1078],{"type":555,"value":920},{"type":550,"tag":577,"props":1080,"children":1081},{"style":835},[1082],{"type":555,"value":1083}," +",{"type":550,"tag":577,"props":1085,"children":1086},{"style":789},[1087],{"type":555,"value":887},{"type":550,"tag":577,"props":1089,"children":1090},{"style":761},[1091],{"type":555,"value":909},{"type":550,"tag":577,"props":1093,"children":1094},{"style":789},[1095],{"type":555,"value":1045},{"type":550,"tag":577,"props":1097,"children":1098},{"style":835},[1099],{"type":555,"value":1070},{"type":550,"tag":577,"props":1101,"children":1102},{"style":912},[1103],{"type":555,"value":987},{"type":550,"tag":577,"props":1105,"children":1106},{"style":761},[1107],{"type":555,"value":1108},"];\n",{"type":550,"tag":577,"props":1110,"children":1112},{"class":579,"line":1111},10,[1113],{"type":550,"tag":577,"props":1114,"children":1115},{"style":761},[1116],{"type":555,"value":1117},"  }\n",{"type":550,"tag":577,"props":1119,"children":1121},{"class":579,"line":1120},11,[1122,1127,1131,1135,1139],{"type":550,"tag":577,"props":1123,"children":1124},{"style":767},[1125],{"type":555,"value":1126},"  return",{"type":550,"tag":577,"props":1128,"children":1129},{"style":789},[1130],{"type":555,"value":887},{"type":550,"tag":577,"props":1132,"children":1133},{"style":761},[1134],{"type":555,"value":909},{"type":550,"tag":577,"props":1136,"children":1137},{"style":789},[1138],{"type":555,"value":864},{"type":550,"tag":577,"props":1140,"children":1141},{"style":761},[1142],{"type":555,"value":1108},{"type":550,"tag":577,"props":1144,"children":1146},{"class":579,"line":1145},12,[1147],{"type":550,"tag":577,"props":1148,"children":1149},{"style":761},[1150],{"type":555,"value":1151},"};\n",{"type":550,"tag":1153,"props":1154,"children":1155},"style",{},[1156],{"type":555,"value":1157},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":617,"depth":617,"links":1159},[1160,1161],{"id":719,"depth":589,"text":719},{"id":724,"depth":589,"text":724,"children":1162},[1163],{"id":730,"depth":598,"text":730},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1170,1172],{"_path":135,"title":134,"description":1171},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":141,"title":140,"description":1173},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1714099214147]