[{"data":1,"prerenderedAt":1186},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":552,"/algorithm/leetcode/major/climbing-stairs-surround":1181},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":138,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":137,"description":556,"url":557,"body":558,"_type":1176,"_id":1177,"_source":1178,"_file":1179,"_extension":1180},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":559,"children":560,"toc":1170},"root",[561,568,573,578,645,650,713,718,728,734,739,745,1164],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"示例 1：",{"type":562,"tag":579,"props":580,"children":583},"pre",{"className":581,"code":582,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[584],{"type":562,"tag":585,"props":586,"children":587},"code",{"__ignoreMap":555},[588,599,608,617,627,636],{"type":562,"tag":589,"props":590,"children":593},"span",{"class":591,"line":592},"line",1,[594],{"type":562,"tag":589,"props":595,"children":596},{},[597],{"type":567,"value":598},"输入：n = 2\n",{"type":562,"tag":589,"props":600,"children":602},{"class":591,"line":601},2,[603],{"type":562,"tag":589,"props":604,"children":605},{},[606],{"type":567,"value":607},"输出：2\n",{"type":562,"tag":589,"props":609,"children":611},{"class":591,"line":610},3,[612],{"type":562,"tag":589,"props":613,"children":614},{},[615],{"type":567,"value":616},"解释：有两种方法可以爬到楼顶。\n",{"type":562,"tag":589,"props":618,"children":620},{"class":591,"line":619},4,[621],{"type":562,"tag":589,"props":622,"children":624},{"emptyLinePlaceholder":623},true,[625],{"type":567,"value":626},"\n",{"type":562,"tag":589,"props":628,"children":630},{"class":591,"line":629},5,[631],{"type":562,"tag":589,"props":632,"children":633},{},[634],{"type":567,"value":635},"1. 1 阶 + 1 阶\n",{"type":562,"tag":589,"props":637,"children":639},{"class":591,"line":638},6,[640],{"type":562,"tag":589,"props":641,"children":642},{},[643],{"type":567,"value":644},"2. 2 阶\n",{"type":562,"tag":563,"props":646,"children":647},{},[648],{"type":567,"value":649},"示例 2：",{"type":562,"tag":579,"props":651,"children":653},{"className":581,"code":652,"language":567,"meta":555,"style":555},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[654],{"type":562,"tag":585,"props":655,"children":656},{"__ignoreMap":555},[657,665,673,681,688,696,704],{"type":562,"tag":589,"props":658,"children":659},{"class":591,"line":592},[660],{"type":562,"tag":589,"props":661,"children":662},{},[663],{"type":567,"value":664},"输入：n = 3\n",{"type":562,"tag":589,"props":666,"children":667},{"class":591,"line":601},[668],{"type":562,"tag":589,"props":669,"children":670},{},[671],{"type":567,"value":672},"输出：3\n",{"type":562,"tag":589,"props":674,"children":675},{"class":591,"line":610},[676],{"type":562,"tag":589,"props":677,"children":678},{},[679],{"type":567,"value":680},"解释：有三种方法可以爬到楼顶。\n",{"type":562,"tag":589,"props":682,"children":683},{"class":591,"line":619},[684],{"type":562,"tag":589,"props":685,"children":686},{"emptyLinePlaceholder":623},[687],{"type":567,"value":626},{"type":562,"tag":589,"props":689,"children":690},{"class":591,"line":629},[691],{"type":562,"tag":589,"props":692,"children":693},{},[694],{"type":567,"value":695},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":562,"tag":589,"props":697,"children":698},{"class":591,"line":638},[699],{"type":562,"tag":589,"props":700,"children":701},{},[702],{"type":567,"value":703},"2. 1 阶 + 2 阶\n",{"type":562,"tag":589,"props":705,"children":707},{"class":591,"line":706},7,[708],{"type":562,"tag":589,"props":709,"children":710},{},[711],{"type":567,"value":712},"3. 2 阶 + 1 阶\n",{"type":562,"tag":563,"props":714,"children":715},{},[716],{"type":567,"value":717},"提示：",{"type":562,"tag":719,"props":720,"children":721},"ul",{},[722],{"type":562,"tag":723,"props":724,"children":725},"li",{},[726],{"type":567,"value":727},"1 \u003C= n \u003C= 45",{"type":562,"tag":729,"props":730,"children":732},"h2",{"id":731},"解题思路",[733],{"type":567,"value":731},{"type":562,"tag":729,"props":735,"children":737},{"id":736},"实现",[738],{"type":567,"value":736},{"type":562,"tag":740,"props":741,"children":743},"h3",{"id":742},"动态规划",[744],{"type":567,"value":742},{"type":562,"tag":579,"props":746,"children":750},{"className":747,"code":748,"language":749,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[751],{"type":562,"tag":585,"props":752,"children":753},{"__ignoreMap":555},[754,763,805,834,842,887,909,968,1040,1121,1130,1155],{"type":562,"tag":589,"props":755,"children":756},{"class":591,"line":592},[757],{"type":562,"tag":589,"props":758,"children":760},{"style":759},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[761],{"type":567,"value":762},"/**\n",{"type":562,"tag":589,"props":764,"children":765},{"class":591,"line":601},[766,771,777,783,788,794,799],{"type":562,"tag":589,"props":767,"children":768},{"style":759},[769],{"type":567,"value":770}," * ",{"type":562,"tag":589,"props":772,"children":774},{"style":773},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[775],{"type":567,"value":776},"@",{"type":562,"tag":589,"props":778,"children":780},{"style":779},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[781],{"type":567,"value":782},"param",{"type":562,"tag":589,"props":784,"children":785},{"style":773},[786],{"type":567,"value":787}," {",{"type":562,"tag":589,"props":789,"children":791},{"style":790},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[792],{"type":567,"value":793},"number",{"type":562,"tag":589,"props":795,"children":796},{"style":773},[797],{"type":567,"value":798},"}",{"type":562,"tag":589,"props":800,"children":802},{"style":801},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[803],{"type":567,"value":804}," n\n",{"type":562,"tag":589,"props":806,"children":807},{"class":591,"line":610},[808,812,816,821,825,829],{"type":562,"tag":589,"props":809,"children":810},{"style":759},[811],{"type":567,"value":770},{"type":562,"tag":589,"props":813,"children":814},{"style":773},[815],{"type":567,"value":776},{"type":562,"tag":589,"props":817,"children":818},{"style":779},[819],{"type":567,"value":820},"return",{"type":562,"tag":589,"props":822,"children":823},{"style":773},[824],{"type":567,"value":787},{"type":562,"tag":589,"props":826,"children":827},{"style":790},[828],{"type":567,"value":793},{"type":562,"tag":589,"props":830,"children":831},{"style":773},[832],{"type":567,"value":833},"}\n",{"type":562,"tag":589,"props":835,"children":836},{"class":591,"line":619},[837],{"type":562,"tag":589,"props":838,"children":839},{"style":759},[840],{"type":567,"value":841}," */\n",{"type":562,"tag":589,"props":843,"children":844},{"class":591,"line":629},[845,851,857,862,867,872,877,882],{"type":562,"tag":589,"props":846,"children":848},{"style":847},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[849],{"type":567,"value":850},"var",{"type":562,"tag":589,"props":852,"children":854},{"style":853},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[855],{"type":567,"value":856}," climbStairs",{"type":562,"tag":589,"props":858,"children":859},{"style":773},[860],{"type":567,"value":861}," =",{"type":562,"tag":589,"props":863,"children":864},{"style":847},[865],{"type":567,"value":866}," function",{"type":562,"tag":589,"props":868,"children":869},{"style":773},[870],{"type":567,"value":871}," (",{"type":562,"tag":589,"props":873,"children":874},{"style":801},[875],{"type":567,"value":876},"n",{"type":562,"tag":589,"props":878,"children":879},{"style":773},[880],{"type":567,"value":881},")",{"type":562,"tag":589,"props":883,"children":884},{"style":773},[885],{"type":567,"value":886}," {\n",{"type":562,"tag":589,"props":888,"children":889},{"class":591,"line":638},[890,895,900,904],{"type":562,"tag":589,"props":891,"children":892},{"style":847},[893],{"type":567,"value":894},"  let",{"type":562,"tag":589,"props":896,"children":897},{"style":801},[898],{"type":567,"value":899}," dp",{"type":562,"tag":589,"props":901,"children":902},{"style":773},[903],{"type":567,"value":861},{"type":562,"tag":589,"props":905,"children":906},{"style":773},[907],{"type":567,"value":908}," [];\n",{"type":562,"tag":589,"props":910,"children":911},{"class":591,"line":706},[912,917,922,928,933,937,941,945,950,954,958,963],{"type":562,"tag":589,"props":913,"children":914},{"style":801},[915],{"type":567,"value":916},"  dp",{"type":562,"tag":589,"props":918,"children":919},{"style":773},[920],{"type":567,"value":921},"[",{"type":562,"tag":589,"props":923,"children":925},{"style":924},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[926],{"type":567,"value":927},"0",{"type":562,"tag":589,"props":929,"children":930},{"style":773},[931],{"type":567,"value":932},"]",{"type":562,"tag":589,"props":934,"children":935},{"style":773},[936],{"type":567,"value":861},{"type":562,"tag":589,"props":938,"children":939},{"style":801},[940],{"type":567,"value":899},{"type":562,"tag":589,"props":942,"children":943},{"style":773},[944],{"type":567,"value":921},{"type":562,"tag":589,"props":946,"children":947},{"style":924},[948],{"type":567,"value":949},"1",{"type":562,"tag":589,"props":951,"children":952},{"style":773},[953],{"type":567,"value":932},{"type":562,"tag":589,"props":955,"children":956},{"style":773},[957],{"type":567,"value":861},{"type":562,"tag":589,"props":959,"children":960},{"style":924},[961],{"type":567,"value":962}," 1",{"type":562,"tag":589,"props":964,"children":965},{"style":773},[966],{"type":567,"value":967},";\n",{"type":562,"tag":589,"props":969,"children":971},{"class":591,"line":970},8,[972,977,981,986,991,995,1000,1005,1009,1014,1019,1023,1027,1032,1036],{"type":562,"tag":589,"props":973,"children":974},{"style":779},[975],{"type":567,"value":976},"  for",{"type":562,"tag":589,"props":978,"children":979},{"style":773},[980],{"type":567,"value":871},{"type":562,"tag":589,"props":982,"children":983},{"style":847},[984],{"type":567,"value":985},"let",{"type":562,"tag":589,"props":987,"children":988},{"style":801},[989],{"type":567,"value":990}," i",{"type":562,"tag":589,"props":992,"children":993},{"style":773},[994],{"type":567,"value":861},{"type":562,"tag":589,"props":996,"children":997},{"style":924},[998],{"type":567,"value":999}," 2",{"type":562,"tag":589,"props":1001,"children":1002},{"style":773},[1003],{"type":567,"value":1004},";",{"type":562,"tag":589,"props":1006,"children":1007},{"style":801},[1008],{"type":567,"value":990},{"type":562,"tag":589,"props":1010,"children":1011},{"style":773},[1012],{"type":567,"value":1013}," \u003C=",{"type":562,"tag":589,"props":1015,"children":1016},{"style":801},[1017],{"type":567,"value":1018}," n",{"type":562,"tag":589,"props":1020,"children":1021},{"style":773},[1022],{"type":567,"value":1004},{"type":562,"tag":589,"props":1024,"children":1025},{"style":801},[1026],{"type":567,"value":990},{"type":562,"tag":589,"props":1028,"children":1029},{"style":847},[1030],{"type":567,"value":1031},"++",{"type":562,"tag":589,"props":1033,"children":1034},{"style":773},[1035],{"type":567,"value":881},{"type":562,"tag":589,"props":1037,"children":1038},{"style":773},[1039],{"type":567,"value":886},{"type":562,"tag":589,"props":1041,"children":1043},{"class":591,"line":1042},9,[1044,1049,1053,1058,1062,1066,1070,1074,1078,1083,1087,1091,1096,1100,1104,1108,1112,1116],{"type":562,"tag":589,"props":1045,"children":1046},{"style":801},[1047],{"type":567,"value":1048},"    dp",{"type":562,"tag":589,"props":1050,"children":1051},{"style":773},[1052],{"type":567,"value":921},{"type":562,"tag":589,"props":1054,"children":1055},{"style":801},[1056],{"type":567,"value":1057},"i",{"type":562,"tag":589,"props":1059,"children":1060},{"style":773},[1061],{"type":567,"value":932},{"type":562,"tag":589,"props":1063,"children":1064},{"style":773},[1065],{"type":567,"value":861},{"type":562,"tag":589,"props":1067,"children":1068},{"style":801},[1069],{"type":567,"value":899},{"type":562,"tag":589,"props":1071,"children":1072},{"style":773},[1073],{"type":567,"value":921},{"type":562,"tag":589,"props":1075,"children":1076},{"style":801},[1077],{"type":567,"value":1057},{"type":562,"tag":589,"props":1079,"children":1080},{"style":847},[1081],{"type":567,"value":1082}," -",{"type":562,"tag":589,"props":1084,"children":1085},{"style":924},[1086],{"type":567,"value":962},{"type":562,"tag":589,"props":1088,"children":1089},{"style":773},[1090],{"type":567,"value":932},{"type":562,"tag":589,"props":1092,"children":1093},{"style":847},[1094],{"type":567,"value":1095}," +",{"type":562,"tag":589,"props":1097,"children":1098},{"style":801},[1099],{"type":567,"value":899},{"type":562,"tag":589,"props":1101,"children":1102},{"style":773},[1103],{"type":567,"value":921},{"type":562,"tag":589,"props":1105,"children":1106},{"style":801},[1107],{"type":567,"value":1057},{"type":562,"tag":589,"props":1109,"children":1110},{"style":847},[1111],{"type":567,"value":1082},{"type":562,"tag":589,"props":1113,"children":1114},{"style":924},[1115],{"type":567,"value":999},{"type":562,"tag":589,"props":1117,"children":1118},{"style":773},[1119],{"type":567,"value":1120},"];\n",{"type":562,"tag":589,"props":1122,"children":1124},{"class":591,"line":1123},10,[1125],{"type":562,"tag":589,"props":1126,"children":1127},{"style":773},[1128],{"type":567,"value":1129},"  }\n",{"type":562,"tag":589,"props":1131,"children":1133},{"class":591,"line":1132},11,[1134,1139,1143,1147,1151],{"type":562,"tag":589,"props":1135,"children":1136},{"style":779},[1137],{"type":567,"value":1138},"  return",{"type":562,"tag":589,"props":1140,"children":1141},{"style":801},[1142],{"type":567,"value":899},{"type":562,"tag":589,"props":1144,"children":1145},{"style":773},[1146],{"type":567,"value":921},{"type":562,"tag":589,"props":1148,"children":1149},{"style":801},[1150],{"type":567,"value":876},{"type":562,"tag":589,"props":1152,"children":1153},{"style":773},[1154],{"type":567,"value":1120},{"type":562,"tag":589,"props":1156,"children":1158},{"class":591,"line":1157},12,[1159],{"type":562,"tag":589,"props":1160,"children":1161},{"style":773},[1162],{"type":567,"value":1163},"};\n",{"type":562,"tag":1165,"props":1166,"children":1167},"style",{},[1168],{"type":567,"value":1169},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":629,"depth":629,"links":1171},[1172,1173],{"id":731,"depth":601,"text":731},{"id":736,"depth":601,"text":736,"children":1174},[1175],{"id":742,"depth":610,"text":742},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1182,1184],{"_path":135,"title":134,"description":1183},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":141,"title":140,"description":1185},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1715137598791]