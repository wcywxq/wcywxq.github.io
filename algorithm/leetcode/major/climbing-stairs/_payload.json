[{"data":1,"prerenderedAt":1077},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":457,"/algorithm/leetcode/major/climbing-stairs-surround":1072},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":129,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":128,"description":461,"url":462,"body":463,"_type":1067,"_id":1068,"_source":1069,"_file":1070,"_extension":1071},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":464,"children":465,"toc":1061},"root",[466,473,478,483,550,555,618,623,633,639,644,650,1055],{"type":467,"tag":468,"props":469,"children":470},"element","p",{},[471],{"type":472,"value":461},"text",{"type":467,"tag":468,"props":474,"children":475},{},[476],{"type":472,"value":477},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":467,"tag":468,"props":479,"children":480},{},[481],{"type":472,"value":482},"示例 1：",{"type":467,"tag":484,"props":485,"children":488},"pre",{"className":486,"code":487,"language":472,"meta":460,"style":460},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[489],{"type":467,"tag":490,"props":491,"children":492},"code",{"__ignoreMap":460},[493,504,513,522,532,541],{"type":467,"tag":494,"props":495,"children":498},"span",{"class":496,"line":497},"line",1,[499],{"type":467,"tag":494,"props":500,"children":501},{},[502],{"type":472,"value":503},"输入：n = 2\n",{"type":467,"tag":494,"props":505,"children":507},{"class":496,"line":506},2,[508],{"type":467,"tag":494,"props":509,"children":510},{},[511],{"type":472,"value":512},"输出：2\n",{"type":467,"tag":494,"props":514,"children":516},{"class":496,"line":515},3,[517],{"type":467,"tag":494,"props":518,"children":519},{},[520],{"type":472,"value":521},"解释：有两种方法可以爬到楼顶。\n",{"type":467,"tag":494,"props":523,"children":525},{"class":496,"line":524},4,[526],{"type":467,"tag":494,"props":527,"children":529},{"emptyLinePlaceholder":528},true,[530],{"type":472,"value":531},"\n",{"type":467,"tag":494,"props":533,"children":535},{"class":496,"line":534},5,[536],{"type":467,"tag":494,"props":537,"children":538},{},[539],{"type":472,"value":540},"1. 1 阶 + 1 阶\n",{"type":467,"tag":494,"props":542,"children":544},{"class":496,"line":543},6,[545],{"type":467,"tag":494,"props":546,"children":547},{},[548],{"type":472,"value":549},"2. 2 阶\n",{"type":467,"tag":468,"props":551,"children":552},{},[553],{"type":472,"value":554},"示例 2：",{"type":467,"tag":484,"props":556,"children":558},{"className":486,"code":557,"language":472,"meta":460,"style":460},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[559],{"type":467,"tag":490,"props":560,"children":561},{"__ignoreMap":460},[562,570,578,586,593,601,609],{"type":467,"tag":494,"props":563,"children":564},{"class":496,"line":497},[565],{"type":467,"tag":494,"props":566,"children":567},{},[568],{"type":472,"value":569},"输入：n = 3\n",{"type":467,"tag":494,"props":571,"children":572},{"class":496,"line":506},[573],{"type":467,"tag":494,"props":574,"children":575},{},[576],{"type":472,"value":577},"输出：3\n",{"type":467,"tag":494,"props":579,"children":580},{"class":496,"line":515},[581],{"type":467,"tag":494,"props":582,"children":583},{},[584],{"type":472,"value":585},"解释：有三种方法可以爬到楼顶。\n",{"type":467,"tag":494,"props":587,"children":588},{"class":496,"line":524},[589],{"type":467,"tag":494,"props":590,"children":591},{"emptyLinePlaceholder":528},[592],{"type":472,"value":531},{"type":467,"tag":494,"props":594,"children":595},{"class":496,"line":534},[596],{"type":467,"tag":494,"props":597,"children":598},{},[599],{"type":472,"value":600},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":467,"tag":494,"props":602,"children":603},{"class":496,"line":543},[604],{"type":467,"tag":494,"props":605,"children":606},{},[607],{"type":472,"value":608},"2. 1 阶 + 2 阶\n",{"type":467,"tag":494,"props":610,"children":612},{"class":496,"line":611},7,[613],{"type":467,"tag":494,"props":614,"children":615},{},[616],{"type":472,"value":617},"3. 2 阶 + 1 阶\n",{"type":467,"tag":468,"props":619,"children":620},{},[621],{"type":472,"value":622},"提示：",{"type":467,"tag":624,"props":625,"children":626},"ul",{},[627],{"type":467,"tag":628,"props":629,"children":630},"li",{},[631],{"type":472,"value":632},"1 \u003C= n \u003C= 45",{"type":467,"tag":634,"props":635,"children":637},"h2",{"id":636},"解题思路",[638],{"type":472,"value":636},{"type":467,"tag":634,"props":640,"children":642},{"id":641},"实现",[643],{"type":472,"value":641},{"type":467,"tag":645,"props":646,"children":648},"h3",{"id":647},"动态规划",[649],{"type":472,"value":647},{"type":467,"tag":484,"props":651,"children":655},{"className":652,"code":653,"language":654,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[656],{"type":467,"tag":490,"props":657,"children":658},{"__ignoreMap":460},[659,668,694,711,719,762,791,850,919,1004,1013,1042],{"type":467,"tag":494,"props":660,"children":661},{"class":496,"line":497},[662],{"type":467,"tag":494,"props":663,"children":665},{"style":664},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[666],{"type":472,"value":667},"/**\n",{"type":467,"tag":494,"props":669,"children":670},{"class":496,"line":506},[671,676,682,688],{"type":467,"tag":494,"props":672,"children":673},{"style":664},[674],{"type":472,"value":675}," * ",{"type":467,"tag":494,"props":677,"children":679},{"style":678},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[680],{"type":472,"value":681},"@param",{"type":467,"tag":494,"props":683,"children":685},{"style":684},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[686],{"type":472,"value":687}," {number}",{"type":467,"tag":494,"props":689,"children":691},{"style":690},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[692],{"type":472,"value":693}," n\n",{"type":467,"tag":494,"props":695,"children":696},{"class":496,"line":515},[697,701,706],{"type":467,"tag":494,"props":698,"children":699},{"style":664},[700],{"type":472,"value":675},{"type":467,"tag":494,"props":702,"children":703},{"style":678},[704],{"type":472,"value":705},"@return",{"type":467,"tag":494,"props":707,"children":708},{"style":684},[709],{"type":472,"value":710}," {number}\n",{"type":467,"tag":494,"props":712,"children":713},{"class":496,"line":524},[714],{"type":467,"tag":494,"props":715,"children":716},{"style":664},[717],{"type":472,"value":718}," */\n",{"type":467,"tag":494,"props":720,"children":721},{"class":496,"line":534},[722,728,734,740,745,751,757],{"type":467,"tag":494,"props":723,"children":725},{"style":724},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[726],{"type":472,"value":727},"var",{"type":467,"tag":494,"props":729,"children":731},{"style":730},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[732],{"type":472,"value":733}," climbStairs",{"type":467,"tag":494,"props":735,"children":737},{"style":736},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[738],{"type":472,"value":739}," =",{"type":467,"tag":494,"props":741,"children":742},{"style":724},[743],{"type":472,"value":744}," function",{"type":467,"tag":494,"props":746,"children":748},{"style":747},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[749],{"type":472,"value":750}," (",{"type":467,"tag":494,"props":752,"children":754},{"style":753},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[755],{"type":472,"value":756},"n",{"type":467,"tag":494,"props":758,"children":759},{"style":747},[760],{"type":472,"value":761},") {\n",{"type":467,"tag":494,"props":763,"children":764},{"class":496,"line":543},[765,770,776,780,785],{"type":467,"tag":494,"props":766,"children":767},{"style":724},[768],{"type":472,"value":769},"  let",{"type":467,"tag":494,"props":771,"children":773},{"style":772},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[774],{"type":472,"value":775}," dp",{"type":467,"tag":494,"props":777,"children":778},{"style":736},[779],{"type":472,"value":739},{"type":467,"tag":494,"props":781,"children":782},{"style":747},[783],{"type":472,"value":784}," []",{"type":467,"tag":494,"props":786,"children":788},{"style":787},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[789],{"type":472,"value":790},";\n",{"type":467,"tag":494,"props":792,"children":793},{"class":496,"line":611},[794,799,804,810,815,820,824,828,833,837,841,846],{"type":467,"tag":494,"props":795,"children":796},{"style":772},[797],{"type":472,"value":798},"  dp",{"type":467,"tag":494,"props":800,"children":801},{"style":747},[802],{"type":472,"value":803},"[",{"type":467,"tag":494,"props":805,"children":807},{"style":806},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[808],{"type":472,"value":809},"0",{"type":467,"tag":494,"props":811,"children":812},{"style":747},[813],{"type":472,"value":814},"] ",{"type":467,"tag":494,"props":816,"children":817},{"style":736},[818],{"type":472,"value":819},"=",{"type":467,"tag":494,"props":821,"children":822},{"style":772},[823],{"type":472,"value":775},{"type":467,"tag":494,"props":825,"children":826},{"style":747},[827],{"type":472,"value":803},{"type":467,"tag":494,"props":829,"children":830},{"style":806},[831],{"type":472,"value":832},"1",{"type":467,"tag":494,"props":834,"children":835},{"style":747},[836],{"type":472,"value":814},{"type":467,"tag":494,"props":838,"children":839},{"style":736},[840],{"type":472,"value":819},{"type":467,"tag":494,"props":842,"children":843},{"style":806},[844],{"type":472,"value":845}," 1",{"type":467,"tag":494,"props":847,"children":848},{"style":787},[849],{"type":472,"value":790},{"type":467,"tag":494,"props":851,"children":853},{"class":496,"line":852},8,[854,860,864,869,874,878,883,888,892,897,902,906,910,915],{"type":467,"tag":494,"props":855,"children":857},{"style":856},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[858],{"type":472,"value":859},"  for",{"type":467,"tag":494,"props":861,"children":862},{"style":747},[863],{"type":472,"value":750},{"type":467,"tag":494,"props":865,"children":866},{"style":724},[867],{"type":472,"value":868},"let",{"type":467,"tag":494,"props":870,"children":871},{"style":772},[872],{"type":472,"value":873}," i",{"type":467,"tag":494,"props":875,"children":876},{"style":736},[877],{"type":472,"value":739},{"type":467,"tag":494,"props":879,"children":880},{"style":806},[881],{"type":472,"value":882}," 2",{"type":467,"tag":494,"props":884,"children":885},{"style":787},[886],{"type":472,"value":887},";",{"type":467,"tag":494,"props":889,"children":890},{"style":772},[891],{"type":472,"value":873},{"type":467,"tag":494,"props":893,"children":894},{"style":736},[895],{"type":472,"value":896}," \u003C=",{"type":467,"tag":494,"props":898,"children":899},{"style":772},[900],{"type":472,"value":901}," n",{"type":467,"tag":494,"props":903,"children":904},{"style":787},[905],{"type":472,"value":887},{"type":467,"tag":494,"props":907,"children":908},{"style":772},[909],{"type":472,"value":873},{"type":467,"tag":494,"props":911,"children":912},{"style":736},[913],{"type":472,"value":914},"++",{"type":467,"tag":494,"props":916,"children":917},{"style":747},[918],{"type":472,"value":761},{"type":467,"tag":494,"props":920,"children":922},{"class":496,"line":921},9,[923,928,932,937,941,945,949,953,957,962,966,970,975,979,983,987,991,995,1000],{"type":467,"tag":494,"props":924,"children":925},{"style":772},[926],{"type":472,"value":927},"    dp",{"type":467,"tag":494,"props":929,"children":930},{"style":747},[931],{"type":472,"value":803},{"type":467,"tag":494,"props":933,"children":934},{"style":772},[935],{"type":472,"value":936},"i",{"type":467,"tag":494,"props":938,"children":939},{"style":747},[940],{"type":472,"value":814},{"type":467,"tag":494,"props":942,"children":943},{"style":736},[944],{"type":472,"value":819},{"type":467,"tag":494,"props":946,"children":947},{"style":772},[948],{"type":472,"value":775},{"type":467,"tag":494,"props":950,"children":951},{"style":747},[952],{"type":472,"value":803},{"type":467,"tag":494,"props":954,"children":955},{"style":772},[956],{"type":472,"value":936},{"type":467,"tag":494,"props":958,"children":959},{"style":736},[960],{"type":472,"value":961}," -",{"type":467,"tag":494,"props":963,"children":964},{"style":806},[965],{"type":472,"value":845},{"type":467,"tag":494,"props":967,"children":968},{"style":747},[969],{"type":472,"value":814},{"type":467,"tag":494,"props":971,"children":972},{"style":736},[973],{"type":472,"value":974},"+",{"type":467,"tag":494,"props":976,"children":977},{"style":772},[978],{"type":472,"value":775},{"type":467,"tag":494,"props":980,"children":981},{"style":747},[982],{"type":472,"value":803},{"type":467,"tag":494,"props":984,"children":985},{"style":772},[986],{"type":472,"value":936},{"type":467,"tag":494,"props":988,"children":989},{"style":736},[990],{"type":472,"value":961},{"type":467,"tag":494,"props":992,"children":993},{"style":806},[994],{"type":472,"value":882},{"type":467,"tag":494,"props":996,"children":997},{"style":747},[998],{"type":472,"value":999},"]",{"type":467,"tag":494,"props":1001,"children":1002},{"style":787},[1003],{"type":472,"value":790},{"type":467,"tag":494,"props":1005,"children":1007},{"class":496,"line":1006},10,[1008],{"type":467,"tag":494,"props":1009,"children":1010},{"style":747},[1011],{"type":472,"value":1012},"  }\n",{"type":467,"tag":494,"props":1014,"children":1016},{"class":496,"line":1015},11,[1017,1022,1026,1030,1034,1038],{"type":467,"tag":494,"props":1018,"children":1019},{"style":856},[1020],{"type":472,"value":1021},"  return",{"type":467,"tag":494,"props":1023,"children":1024},{"style":772},[1025],{"type":472,"value":775},{"type":467,"tag":494,"props":1027,"children":1028},{"style":747},[1029],{"type":472,"value":803},{"type":467,"tag":494,"props":1031,"children":1032},{"style":772},[1033],{"type":472,"value":756},{"type":467,"tag":494,"props":1035,"children":1036},{"style":747},[1037],{"type":472,"value":999},{"type":467,"tag":494,"props":1039,"children":1040},{"style":787},[1041],{"type":472,"value":790},{"type":467,"tag":494,"props":1043,"children":1045},{"class":496,"line":1044},12,[1046,1051],{"type":467,"tag":494,"props":1047,"children":1048},{"style":747},[1049],{"type":472,"value":1050},"}",{"type":467,"tag":494,"props":1052,"children":1053},{"style":787},[1054],{"type":472,"value":790},{"type":467,"tag":1056,"props":1057,"children":1058},"style",{},[1059],{"type":472,"value":1060},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":534,"depth":534,"links":1062},[1063,1064],{"id":636,"depth":506,"text":636},{"id":641,"depth":506,"text":641,"children":1065},[1066],{"id":647,"depth":515,"text":647},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1073,1075],{"_path":126,"title":125,"description":1074},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":132,"title":131,"description":1076},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1713597606524]