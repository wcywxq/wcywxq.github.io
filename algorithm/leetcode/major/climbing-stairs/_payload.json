[{"data":1,"prerenderedAt":1072},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":452,"/algorithm/leetcode/major/climbing-stairs-surround":1067},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":129,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":128,"description":456,"url":457,"body":458,"_type":1062,"_id":1063,"_source":1064,"_file":1065,"_extension":1066},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":459,"children":460,"toc":1056},"root",[461,468,473,478,545,550,613,618,628,634,639,645,1050],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":462,"tag":463,"props":474,"children":475},{},[476],{"type":467,"value":477},"示例 1：",{"type":462,"tag":479,"props":480,"children":483},"pre",{"className":481,"code":482,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[484],{"type":462,"tag":485,"props":486,"children":487},"code",{"__ignoreMap":455},[488,499,508,517,527,536],{"type":462,"tag":489,"props":490,"children":493},"span",{"class":491,"line":492},"line",1,[494],{"type":462,"tag":489,"props":495,"children":496},{},[497],{"type":467,"value":498},"输入：n = 2\n",{"type":462,"tag":489,"props":500,"children":502},{"class":491,"line":501},2,[503],{"type":462,"tag":489,"props":504,"children":505},{},[506],{"type":467,"value":507},"输出：2\n",{"type":462,"tag":489,"props":509,"children":511},{"class":491,"line":510},3,[512],{"type":462,"tag":489,"props":513,"children":514},{},[515],{"type":467,"value":516},"解释：有两种方法可以爬到楼顶。\n",{"type":462,"tag":489,"props":518,"children":520},{"class":491,"line":519},4,[521],{"type":462,"tag":489,"props":522,"children":524},{"emptyLinePlaceholder":523},true,[525],{"type":467,"value":526},"\n",{"type":462,"tag":489,"props":528,"children":530},{"class":491,"line":529},5,[531],{"type":462,"tag":489,"props":532,"children":533},{},[534],{"type":467,"value":535},"1. 1 阶 + 1 阶\n",{"type":462,"tag":489,"props":537,"children":539},{"class":491,"line":538},6,[540],{"type":462,"tag":489,"props":541,"children":542},{},[543],{"type":467,"value":544},"2. 2 阶\n",{"type":462,"tag":463,"props":546,"children":547},{},[548],{"type":467,"value":549},"示例 2：",{"type":462,"tag":479,"props":551,"children":553},{"className":481,"code":552,"language":467,"meta":455,"style":455},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[554],{"type":462,"tag":485,"props":555,"children":556},{"__ignoreMap":455},[557,565,573,581,588,596,604],{"type":462,"tag":489,"props":558,"children":559},{"class":491,"line":492},[560],{"type":462,"tag":489,"props":561,"children":562},{},[563],{"type":467,"value":564},"输入：n = 3\n",{"type":462,"tag":489,"props":566,"children":567},{"class":491,"line":501},[568],{"type":462,"tag":489,"props":569,"children":570},{},[571],{"type":467,"value":572},"输出：3\n",{"type":462,"tag":489,"props":574,"children":575},{"class":491,"line":510},[576],{"type":462,"tag":489,"props":577,"children":578},{},[579],{"type":467,"value":580},"解释：有三种方法可以爬到楼顶。\n",{"type":462,"tag":489,"props":582,"children":583},{"class":491,"line":519},[584],{"type":462,"tag":489,"props":585,"children":586},{"emptyLinePlaceholder":523},[587],{"type":467,"value":526},{"type":462,"tag":489,"props":589,"children":590},{"class":491,"line":529},[591],{"type":462,"tag":489,"props":592,"children":593},{},[594],{"type":467,"value":595},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":462,"tag":489,"props":597,"children":598},{"class":491,"line":538},[599],{"type":462,"tag":489,"props":600,"children":601},{},[602],{"type":467,"value":603},"2. 1 阶 + 2 阶\n",{"type":462,"tag":489,"props":605,"children":607},{"class":491,"line":606},7,[608],{"type":462,"tag":489,"props":609,"children":610},{},[611],{"type":467,"value":612},"3. 2 阶 + 1 阶\n",{"type":462,"tag":463,"props":614,"children":615},{},[616],{"type":467,"value":617},"提示：",{"type":462,"tag":619,"props":620,"children":621},"ul",{},[622],{"type":462,"tag":623,"props":624,"children":625},"li",{},[626],{"type":467,"value":627},"1 \u003C= n \u003C= 45",{"type":462,"tag":629,"props":630,"children":632},"h2",{"id":631},"解题思路",[633],{"type":467,"value":631},{"type":462,"tag":629,"props":635,"children":637},{"id":636},"实现",[638],{"type":467,"value":636},{"type":462,"tag":640,"props":641,"children":643},"h3",{"id":642},"动态规划",[644],{"type":467,"value":642},{"type":462,"tag":479,"props":646,"children":650},{"className":647,"code":648,"language":649,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[651],{"type":462,"tag":485,"props":652,"children":653},{"__ignoreMap":455},[654,663,689,706,714,757,786,845,914,999,1008,1037],{"type":462,"tag":489,"props":655,"children":656},{"class":491,"line":492},[657],{"type":462,"tag":489,"props":658,"children":660},{"style":659},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[661],{"type":467,"value":662},"/**\n",{"type":462,"tag":489,"props":664,"children":665},{"class":491,"line":501},[666,671,677,683],{"type":462,"tag":489,"props":667,"children":668},{"style":659},[669],{"type":467,"value":670}," * ",{"type":462,"tag":489,"props":672,"children":674},{"style":673},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[675],{"type":467,"value":676},"@param",{"type":462,"tag":489,"props":678,"children":680},{"style":679},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[681],{"type":467,"value":682}," {number}",{"type":462,"tag":489,"props":684,"children":686},{"style":685},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[687],{"type":467,"value":688}," n\n",{"type":462,"tag":489,"props":690,"children":691},{"class":491,"line":510},[692,696,701],{"type":462,"tag":489,"props":693,"children":694},{"style":659},[695],{"type":467,"value":670},{"type":462,"tag":489,"props":697,"children":698},{"style":673},[699],{"type":467,"value":700},"@return",{"type":462,"tag":489,"props":702,"children":703},{"style":679},[704],{"type":467,"value":705}," {number}\n",{"type":462,"tag":489,"props":707,"children":708},{"class":491,"line":519},[709],{"type":462,"tag":489,"props":710,"children":711},{"style":659},[712],{"type":467,"value":713}," */\n",{"type":462,"tag":489,"props":715,"children":716},{"class":491,"line":529},[717,723,729,735,740,746,752],{"type":462,"tag":489,"props":718,"children":720},{"style":719},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[721],{"type":467,"value":722},"var",{"type":462,"tag":489,"props":724,"children":726},{"style":725},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[727],{"type":467,"value":728}," climbStairs",{"type":462,"tag":489,"props":730,"children":732},{"style":731},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[733],{"type":467,"value":734}," =",{"type":462,"tag":489,"props":736,"children":737},{"style":719},[738],{"type":467,"value":739}," function",{"type":462,"tag":489,"props":741,"children":743},{"style":742},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[744],{"type":467,"value":745}," (",{"type":462,"tag":489,"props":747,"children":749},{"style":748},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[750],{"type":467,"value":751},"n",{"type":462,"tag":489,"props":753,"children":754},{"style":742},[755],{"type":467,"value":756},") {\n",{"type":462,"tag":489,"props":758,"children":759},{"class":491,"line":538},[760,765,771,775,780],{"type":462,"tag":489,"props":761,"children":762},{"style":719},[763],{"type":467,"value":764},"  let",{"type":462,"tag":489,"props":766,"children":768},{"style":767},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[769],{"type":467,"value":770}," dp",{"type":462,"tag":489,"props":772,"children":773},{"style":731},[774],{"type":467,"value":734},{"type":462,"tag":489,"props":776,"children":777},{"style":742},[778],{"type":467,"value":779}," []",{"type":462,"tag":489,"props":781,"children":783},{"style":782},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[784],{"type":467,"value":785},";\n",{"type":462,"tag":489,"props":787,"children":788},{"class":491,"line":606},[789,794,799,805,810,815,819,823,828,832,836,841],{"type":462,"tag":489,"props":790,"children":791},{"style":767},[792],{"type":467,"value":793},"  dp",{"type":462,"tag":489,"props":795,"children":796},{"style":742},[797],{"type":467,"value":798},"[",{"type":462,"tag":489,"props":800,"children":802},{"style":801},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[803],{"type":467,"value":804},"0",{"type":462,"tag":489,"props":806,"children":807},{"style":742},[808],{"type":467,"value":809},"] ",{"type":462,"tag":489,"props":811,"children":812},{"style":731},[813],{"type":467,"value":814},"=",{"type":462,"tag":489,"props":816,"children":817},{"style":767},[818],{"type":467,"value":770},{"type":462,"tag":489,"props":820,"children":821},{"style":742},[822],{"type":467,"value":798},{"type":462,"tag":489,"props":824,"children":825},{"style":801},[826],{"type":467,"value":827},"1",{"type":462,"tag":489,"props":829,"children":830},{"style":742},[831],{"type":467,"value":809},{"type":462,"tag":489,"props":833,"children":834},{"style":731},[835],{"type":467,"value":814},{"type":462,"tag":489,"props":837,"children":838},{"style":801},[839],{"type":467,"value":840}," 1",{"type":462,"tag":489,"props":842,"children":843},{"style":782},[844],{"type":467,"value":785},{"type":462,"tag":489,"props":846,"children":848},{"class":491,"line":847},8,[849,855,859,864,869,873,878,883,887,892,897,901,905,910],{"type":462,"tag":489,"props":850,"children":852},{"style":851},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[853],{"type":467,"value":854},"  for",{"type":462,"tag":489,"props":856,"children":857},{"style":742},[858],{"type":467,"value":745},{"type":462,"tag":489,"props":860,"children":861},{"style":719},[862],{"type":467,"value":863},"let",{"type":462,"tag":489,"props":865,"children":866},{"style":767},[867],{"type":467,"value":868}," i",{"type":462,"tag":489,"props":870,"children":871},{"style":731},[872],{"type":467,"value":734},{"type":462,"tag":489,"props":874,"children":875},{"style":801},[876],{"type":467,"value":877}," 2",{"type":462,"tag":489,"props":879,"children":880},{"style":782},[881],{"type":467,"value":882},";",{"type":462,"tag":489,"props":884,"children":885},{"style":767},[886],{"type":467,"value":868},{"type":462,"tag":489,"props":888,"children":889},{"style":731},[890],{"type":467,"value":891}," \u003C=",{"type":462,"tag":489,"props":893,"children":894},{"style":767},[895],{"type":467,"value":896}," n",{"type":462,"tag":489,"props":898,"children":899},{"style":782},[900],{"type":467,"value":882},{"type":462,"tag":489,"props":902,"children":903},{"style":767},[904],{"type":467,"value":868},{"type":462,"tag":489,"props":906,"children":907},{"style":731},[908],{"type":467,"value":909},"++",{"type":462,"tag":489,"props":911,"children":912},{"style":742},[913],{"type":467,"value":756},{"type":462,"tag":489,"props":915,"children":917},{"class":491,"line":916},9,[918,923,927,932,936,940,944,948,952,957,961,965,970,974,978,982,986,990,995],{"type":462,"tag":489,"props":919,"children":920},{"style":767},[921],{"type":467,"value":922},"    dp",{"type":462,"tag":489,"props":924,"children":925},{"style":742},[926],{"type":467,"value":798},{"type":462,"tag":489,"props":928,"children":929},{"style":767},[930],{"type":467,"value":931},"i",{"type":462,"tag":489,"props":933,"children":934},{"style":742},[935],{"type":467,"value":809},{"type":462,"tag":489,"props":937,"children":938},{"style":731},[939],{"type":467,"value":814},{"type":462,"tag":489,"props":941,"children":942},{"style":767},[943],{"type":467,"value":770},{"type":462,"tag":489,"props":945,"children":946},{"style":742},[947],{"type":467,"value":798},{"type":462,"tag":489,"props":949,"children":950},{"style":767},[951],{"type":467,"value":931},{"type":462,"tag":489,"props":953,"children":954},{"style":731},[955],{"type":467,"value":956}," -",{"type":462,"tag":489,"props":958,"children":959},{"style":801},[960],{"type":467,"value":840},{"type":462,"tag":489,"props":962,"children":963},{"style":742},[964],{"type":467,"value":809},{"type":462,"tag":489,"props":966,"children":967},{"style":731},[968],{"type":467,"value":969},"+",{"type":462,"tag":489,"props":971,"children":972},{"style":767},[973],{"type":467,"value":770},{"type":462,"tag":489,"props":975,"children":976},{"style":742},[977],{"type":467,"value":798},{"type":462,"tag":489,"props":979,"children":980},{"style":767},[981],{"type":467,"value":931},{"type":462,"tag":489,"props":983,"children":984},{"style":731},[985],{"type":467,"value":956},{"type":462,"tag":489,"props":987,"children":988},{"style":801},[989],{"type":467,"value":877},{"type":462,"tag":489,"props":991,"children":992},{"style":742},[993],{"type":467,"value":994},"]",{"type":462,"tag":489,"props":996,"children":997},{"style":782},[998],{"type":467,"value":785},{"type":462,"tag":489,"props":1000,"children":1002},{"class":491,"line":1001},10,[1003],{"type":462,"tag":489,"props":1004,"children":1005},{"style":742},[1006],{"type":467,"value":1007},"  }\n",{"type":462,"tag":489,"props":1009,"children":1011},{"class":491,"line":1010},11,[1012,1017,1021,1025,1029,1033],{"type":462,"tag":489,"props":1013,"children":1014},{"style":851},[1015],{"type":467,"value":1016},"  return",{"type":462,"tag":489,"props":1018,"children":1019},{"style":767},[1020],{"type":467,"value":770},{"type":462,"tag":489,"props":1022,"children":1023},{"style":742},[1024],{"type":467,"value":798},{"type":462,"tag":489,"props":1026,"children":1027},{"style":767},[1028],{"type":467,"value":751},{"type":462,"tag":489,"props":1030,"children":1031},{"style":742},[1032],{"type":467,"value":994},{"type":462,"tag":489,"props":1034,"children":1035},{"style":782},[1036],{"type":467,"value":785},{"type":462,"tag":489,"props":1038,"children":1040},{"class":491,"line":1039},12,[1041,1046],{"type":462,"tag":489,"props":1042,"children":1043},{"style":742},[1044],{"type":467,"value":1045},"}",{"type":462,"tag":489,"props":1047,"children":1048},{"style":782},[1049],{"type":467,"value":785},{"type":462,"tag":1051,"props":1052,"children":1053},"style",{},[1054],{"type":467,"value":1055},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":529,"depth":529,"links":1057},[1058,1059],{"id":631,"depth":501,"text":631},{"id":636,"depth":501,"text":636,"children":1060},[1061],{"id":642,"depth":510,"text":642},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1068,1070],{"_path":126,"title":125,"description":1069},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":132,"title":131,"description":1071},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1713457420102]