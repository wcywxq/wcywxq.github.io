[{"data":1,"prerenderedAt":1185},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":551,"/algorithm/leetcode/major/climbing-stairs-surround":1180},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":138,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":137,"description":555,"url":556,"body":557,"_type":1175,"_id":1176,"_source":1177,"_file":1178,"_extension":1179},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":558,"children":559,"toc":1169},"root",[560,567,572,577,644,649,712,717,727,733,738,744,1163],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":566,"value":576},"示例 1：",{"type":561,"tag":578,"props":579,"children":582},"pre",{"className":580,"code":581,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[583],{"type":561,"tag":584,"props":585,"children":586},"code",{"__ignoreMap":554},[587,598,607,616,626,635],{"type":561,"tag":588,"props":589,"children":592},"span",{"class":590,"line":591},"line",1,[593],{"type":561,"tag":588,"props":594,"children":595},{},[596],{"type":566,"value":597},"输入：n = 2\n",{"type":561,"tag":588,"props":599,"children":601},{"class":590,"line":600},2,[602],{"type":561,"tag":588,"props":603,"children":604},{},[605],{"type":566,"value":606},"输出：2\n",{"type":561,"tag":588,"props":608,"children":610},{"class":590,"line":609},3,[611],{"type":561,"tag":588,"props":612,"children":613},{},[614],{"type":566,"value":615},"解释：有两种方法可以爬到楼顶。\n",{"type":561,"tag":588,"props":617,"children":619},{"class":590,"line":618},4,[620],{"type":561,"tag":588,"props":621,"children":623},{"emptyLinePlaceholder":622},true,[624],{"type":566,"value":625},"\n",{"type":561,"tag":588,"props":627,"children":629},{"class":590,"line":628},5,[630],{"type":561,"tag":588,"props":631,"children":632},{},[633],{"type":566,"value":634},"1. 1 阶 + 1 阶\n",{"type":561,"tag":588,"props":636,"children":638},{"class":590,"line":637},6,[639],{"type":561,"tag":588,"props":640,"children":641},{},[642],{"type":566,"value":643},"2. 2 阶\n",{"type":561,"tag":562,"props":645,"children":646},{},[647],{"type":566,"value":648},"示例 2：",{"type":561,"tag":578,"props":650,"children":652},{"className":580,"code":651,"language":566,"meta":554,"style":554},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[653],{"type":561,"tag":584,"props":654,"children":655},{"__ignoreMap":554},[656,664,672,680,687,695,703],{"type":561,"tag":588,"props":657,"children":658},{"class":590,"line":591},[659],{"type":561,"tag":588,"props":660,"children":661},{},[662],{"type":566,"value":663},"输入：n = 3\n",{"type":561,"tag":588,"props":665,"children":666},{"class":590,"line":600},[667],{"type":561,"tag":588,"props":668,"children":669},{},[670],{"type":566,"value":671},"输出：3\n",{"type":561,"tag":588,"props":673,"children":674},{"class":590,"line":609},[675],{"type":561,"tag":588,"props":676,"children":677},{},[678],{"type":566,"value":679},"解释：有三种方法可以爬到楼顶。\n",{"type":561,"tag":588,"props":681,"children":682},{"class":590,"line":618},[683],{"type":561,"tag":588,"props":684,"children":685},{"emptyLinePlaceholder":622},[686],{"type":566,"value":625},{"type":561,"tag":588,"props":688,"children":689},{"class":590,"line":628},[690],{"type":561,"tag":588,"props":691,"children":692},{},[693],{"type":566,"value":694},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":561,"tag":588,"props":696,"children":697},{"class":590,"line":637},[698],{"type":561,"tag":588,"props":699,"children":700},{},[701],{"type":566,"value":702},"2. 1 阶 + 2 阶\n",{"type":561,"tag":588,"props":704,"children":706},{"class":590,"line":705},7,[707],{"type":561,"tag":588,"props":708,"children":709},{},[710],{"type":566,"value":711},"3. 2 阶 + 1 阶\n",{"type":561,"tag":562,"props":713,"children":714},{},[715],{"type":566,"value":716},"提示：",{"type":561,"tag":718,"props":719,"children":720},"ul",{},[721],{"type":561,"tag":722,"props":723,"children":724},"li",{},[725],{"type":566,"value":726},"1 \u003C= n \u003C= 45",{"type":561,"tag":728,"props":729,"children":731},"h2",{"id":730},"解题思路",[732],{"type":566,"value":730},{"type":561,"tag":728,"props":734,"children":736},{"id":735},"实现",[737],{"type":566,"value":735},{"type":561,"tag":739,"props":740,"children":742},"h3",{"id":741},"动态规划",[743],{"type":566,"value":741},{"type":561,"tag":578,"props":745,"children":749},{"className":746,"code":747,"language":748,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[750],{"type":561,"tag":584,"props":751,"children":752},{"__ignoreMap":554},[753,762,804,833,841,886,908,967,1039,1120,1129,1154],{"type":561,"tag":588,"props":754,"children":755},{"class":590,"line":591},[756],{"type":561,"tag":588,"props":757,"children":759},{"style":758},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[760],{"type":566,"value":761},"/**\n",{"type":561,"tag":588,"props":763,"children":764},{"class":590,"line":600},[765,770,776,782,787,793,798],{"type":561,"tag":588,"props":766,"children":767},{"style":758},[768],{"type":566,"value":769}," * ",{"type":561,"tag":588,"props":771,"children":773},{"style":772},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[774],{"type":566,"value":775},"@",{"type":561,"tag":588,"props":777,"children":779},{"style":778},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[780],{"type":566,"value":781},"param",{"type":561,"tag":588,"props":783,"children":784},{"style":772},[785],{"type":566,"value":786}," {",{"type":561,"tag":588,"props":788,"children":790},{"style":789},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[791],{"type":566,"value":792},"number",{"type":561,"tag":588,"props":794,"children":795},{"style":772},[796],{"type":566,"value":797},"}",{"type":561,"tag":588,"props":799,"children":801},{"style":800},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[802],{"type":566,"value":803}," n\n",{"type":561,"tag":588,"props":805,"children":806},{"class":590,"line":609},[807,811,815,820,824,828],{"type":561,"tag":588,"props":808,"children":809},{"style":758},[810],{"type":566,"value":769},{"type":561,"tag":588,"props":812,"children":813},{"style":772},[814],{"type":566,"value":775},{"type":561,"tag":588,"props":816,"children":817},{"style":778},[818],{"type":566,"value":819},"return",{"type":561,"tag":588,"props":821,"children":822},{"style":772},[823],{"type":566,"value":786},{"type":561,"tag":588,"props":825,"children":826},{"style":789},[827],{"type":566,"value":792},{"type":561,"tag":588,"props":829,"children":830},{"style":772},[831],{"type":566,"value":832},"}\n",{"type":561,"tag":588,"props":834,"children":835},{"class":590,"line":618},[836],{"type":561,"tag":588,"props":837,"children":838},{"style":758},[839],{"type":566,"value":840}," */\n",{"type":561,"tag":588,"props":842,"children":843},{"class":590,"line":628},[844,850,856,861,866,871,876,881],{"type":561,"tag":588,"props":845,"children":847},{"style":846},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[848],{"type":566,"value":849},"var",{"type":561,"tag":588,"props":851,"children":853},{"style":852},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[854],{"type":566,"value":855}," climbStairs",{"type":561,"tag":588,"props":857,"children":858},{"style":772},[859],{"type":566,"value":860}," =",{"type":561,"tag":588,"props":862,"children":863},{"style":846},[864],{"type":566,"value":865}," function",{"type":561,"tag":588,"props":867,"children":868},{"style":772},[869],{"type":566,"value":870}," (",{"type":561,"tag":588,"props":872,"children":873},{"style":800},[874],{"type":566,"value":875},"n",{"type":561,"tag":588,"props":877,"children":878},{"style":772},[879],{"type":566,"value":880},")",{"type":561,"tag":588,"props":882,"children":883},{"style":772},[884],{"type":566,"value":885}," {\n",{"type":561,"tag":588,"props":887,"children":888},{"class":590,"line":637},[889,894,899,903],{"type":561,"tag":588,"props":890,"children":891},{"style":846},[892],{"type":566,"value":893},"  let",{"type":561,"tag":588,"props":895,"children":896},{"style":800},[897],{"type":566,"value":898}," dp",{"type":561,"tag":588,"props":900,"children":901},{"style":772},[902],{"type":566,"value":860},{"type":561,"tag":588,"props":904,"children":905},{"style":772},[906],{"type":566,"value":907}," [];\n",{"type":561,"tag":588,"props":909,"children":910},{"class":590,"line":705},[911,916,921,927,932,936,940,944,949,953,957,962],{"type":561,"tag":588,"props":912,"children":913},{"style":800},[914],{"type":566,"value":915},"  dp",{"type":561,"tag":588,"props":917,"children":918},{"style":772},[919],{"type":566,"value":920},"[",{"type":561,"tag":588,"props":922,"children":924},{"style":923},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[925],{"type":566,"value":926},"0",{"type":561,"tag":588,"props":928,"children":929},{"style":772},[930],{"type":566,"value":931},"]",{"type":561,"tag":588,"props":933,"children":934},{"style":772},[935],{"type":566,"value":860},{"type":561,"tag":588,"props":937,"children":938},{"style":800},[939],{"type":566,"value":898},{"type":561,"tag":588,"props":941,"children":942},{"style":772},[943],{"type":566,"value":920},{"type":561,"tag":588,"props":945,"children":946},{"style":923},[947],{"type":566,"value":948},"1",{"type":561,"tag":588,"props":950,"children":951},{"style":772},[952],{"type":566,"value":931},{"type":561,"tag":588,"props":954,"children":955},{"style":772},[956],{"type":566,"value":860},{"type":561,"tag":588,"props":958,"children":959},{"style":923},[960],{"type":566,"value":961}," 1",{"type":561,"tag":588,"props":963,"children":964},{"style":772},[965],{"type":566,"value":966},";\n",{"type":561,"tag":588,"props":968,"children":970},{"class":590,"line":969},8,[971,976,980,985,990,994,999,1004,1008,1013,1018,1022,1026,1031,1035],{"type":561,"tag":588,"props":972,"children":973},{"style":778},[974],{"type":566,"value":975},"  for",{"type":561,"tag":588,"props":977,"children":978},{"style":772},[979],{"type":566,"value":870},{"type":561,"tag":588,"props":981,"children":982},{"style":846},[983],{"type":566,"value":984},"let",{"type":561,"tag":588,"props":986,"children":987},{"style":800},[988],{"type":566,"value":989}," i",{"type":561,"tag":588,"props":991,"children":992},{"style":772},[993],{"type":566,"value":860},{"type":561,"tag":588,"props":995,"children":996},{"style":923},[997],{"type":566,"value":998}," 2",{"type":561,"tag":588,"props":1000,"children":1001},{"style":772},[1002],{"type":566,"value":1003},";",{"type":561,"tag":588,"props":1005,"children":1006},{"style":800},[1007],{"type":566,"value":989},{"type":561,"tag":588,"props":1009,"children":1010},{"style":772},[1011],{"type":566,"value":1012}," \u003C=",{"type":561,"tag":588,"props":1014,"children":1015},{"style":800},[1016],{"type":566,"value":1017}," n",{"type":561,"tag":588,"props":1019,"children":1020},{"style":772},[1021],{"type":566,"value":1003},{"type":561,"tag":588,"props":1023,"children":1024},{"style":800},[1025],{"type":566,"value":989},{"type":561,"tag":588,"props":1027,"children":1028},{"style":846},[1029],{"type":566,"value":1030},"++",{"type":561,"tag":588,"props":1032,"children":1033},{"style":772},[1034],{"type":566,"value":880},{"type":561,"tag":588,"props":1036,"children":1037},{"style":772},[1038],{"type":566,"value":885},{"type":561,"tag":588,"props":1040,"children":1042},{"class":590,"line":1041},9,[1043,1048,1052,1057,1061,1065,1069,1073,1077,1082,1086,1090,1095,1099,1103,1107,1111,1115],{"type":561,"tag":588,"props":1044,"children":1045},{"style":800},[1046],{"type":566,"value":1047},"    dp",{"type":561,"tag":588,"props":1049,"children":1050},{"style":772},[1051],{"type":566,"value":920},{"type":561,"tag":588,"props":1053,"children":1054},{"style":800},[1055],{"type":566,"value":1056},"i",{"type":561,"tag":588,"props":1058,"children":1059},{"style":772},[1060],{"type":566,"value":931},{"type":561,"tag":588,"props":1062,"children":1063},{"style":772},[1064],{"type":566,"value":860},{"type":561,"tag":588,"props":1066,"children":1067},{"style":800},[1068],{"type":566,"value":898},{"type":561,"tag":588,"props":1070,"children":1071},{"style":772},[1072],{"type":566,"value":920},{"type":561,"tag":588,"props":1074,"children":1075},{"style":800},[1076],{"type":566,"value":1056},{"type":561,"tag":588,"props":1078,"children":1079},{"style":846},[1080],{"type":566,"value":1081}," -",{"type":561,"tag":588,"props":1083,"children":1084},{"style":923},[1085],{"type":566,"value":961},{"type":561,"tag":588,"props":1087,"children":1088},{"style":772},[1089],{"type":566,"value":931},{"type":561,"tag":588,"props":1091,"children":1092},{"style":846},[1093],{"type":566,"value":1094}," +",{"type":561,"tag":588,"props":1096,"children":1097},{"style":800},[1098],{"type":566,"value":898},{"type":561,"tag":588,"props":1100,"children":1101},{"style":772},[1102],{"type":566,"value":920},{"type":561,"tag":588,"props":1104,"children":1105},{"style":800},[1106],{"type":566,"value":1056},{"type":561,"tag":588,"props":1108,"children":1109},{"style":846},[1110],{"type":566,"value":1081},{"type":561,"tag":588,"props":1112,"children":1113},{"style":923},[1114],{"type":566,"value":998},{"type":561,"tag":588,"props":1116,"children":1117},{"style":772},[1118],{"type":566,"value":1119},"];\n",{"type":561,"tag":588,"props":1121,"children":1123},{"class":590,"line":1122},10,[1124],{"type":561,"tag":588,"props":1125,"children":1126},{"style":772},[1127],{"type":566,"value":1128},"  }\n",{"type":561,"tag":588,"props":1130,"children":1132},{"class":590,"line":1131},11,[1133,1138,1142,1146,1150],{"type":561,"tag":588,"props":1134,"children":1135},{"style":778},[1136],{"type":566,"value":1137},"  return",{"type":561,"tag":588,"props":1139,"children":1140},{"style":800},[1141],{"type":566,"value":898},{"type":561,"tag":588,"props":1143,"children":1144},{"style":772},[1145],{"type":566,"value":920},{"type":561,"tag":588,"props":1147,"children":1148},{"style":800},[1149],{"type":566,"value":875},{"type":561,"tag":588,"props":1151,"children":1152},{"style":772},[1153],{"type":566,"value":1119},{"type":561,"tag":588,"props":1155,"children":1157},{"class":590,"line":1156},12,[1158],{"type":561,"tag":588,"props":1159,"children":1160},{"style":772},[1161],{"type":566,"value":1162},"};\n",{"type":561,"tag":1164,"props":1165,"children":1166},"style",{},[1167],{"type":566,"value":1168},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":628,"depth":628,"links":1170},[1171,1172],{"id":730,"depth":600,"text":730},{"id":735,"depth":600,"text":735,"children":1173},[1174],{"id":741,"depth":609,"text":741},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1181,1183],{"_path":135,"title":134,"description":1182},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":141,"title":140,"description":1184},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1715092155388]