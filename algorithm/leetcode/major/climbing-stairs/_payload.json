[{"data":1,"prerenderedAt":1183},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/climbing-stairs":549,"/algorithm/leetcode/major/climbing-stairs-surround":1178},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":138,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":137,"description":553,"url":554,"body":555,"_type":1173,"_id":1174,"_source":1175,"_file":1176,"_extension":1177},"major",false,"","假设你正在爬楼梯。需要 n 阶你才能到达楼顶。","https://leetcode.cn/problems/climbing-stairs",{"type":556,"children":557,"toc":1167},"root",[558,565,570,575,642,647,710,715,725,731,736,742,1161],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"示例 1：",{"type":559,"tag":576,"props":577,"children":580},"pre",{"className":578,"code":579,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 2\n输出：2\n解释：有两种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶\n2. 2 阶\n",[581],{"type":559,"tag":582,"props":583,"children":584},"code",{"__ignoreMap":552},[585,596,605,614,624,633],{"type":559,"tag":586,"props":587,"children":590},"span",{"class":588,"line":589},"line",1,[591],{"type":559,"tag":586,"props":592,"children":593},{},[594],{"type":564,"value":595},"输入：n = 2\n",{"type":559,"tag":586,"props":597,"children":599},{"class":588,"line":598},2,[600],{"type":559,"tag":586,"props":601,"children":602},{},[603],{"type":564,"value":604},"输出：2\n",{"type":559,"tag":586,"props":606,"children":608},{"class":588,"line":607},3,[609],{"type":559,"tag":586,"props":610,"children":611},{},[612],{"type":564,"value":613},"解释：有两种方法可以爬到楼顶。\n",{"type":559,"tag":586,"props":615,"children":617},{"class":588,"line":616},4,[618],{"type":559,"tag":586,"props":619,"children":621},{"emptyLinePlaceholder":620},true,[622],{"type":564,"value":623},"\n",{"type":559,"tag":586,"props":625,"children":627},{"class":588,"line":626},5,[628],{"type":559,"tag":586,"props":629,"children":630},{},[631],{"type":564,"value":632},"1. 1 阶 + 1 阶\n",{"type":559,"tag":586,"props":634,"children":636},{"class":588,"line":635},6,[637],{"type":559,"tag":586,"props":638,"children":639},{},[640],{"type":564,"value":641},"2. 2 阶\n",{"type":559,"tag":560,"props":643,"children":644},{},[645],{"type":564,"value":646},"示例 2：",{"type":559,"tag":576,"props":648,"children":650},{"className":578,"code":649,"language":564,"meta":552,"style":552},"输入：n = 3\n输出：3\n解释：有三种方法可以爬到楼顶。\n\n1. 1 阶 + 1 阶 + 1 阶\n2. 1 阶 + 2 阶\n3. 2 阶 + 1 阶\n",[651],{"type":559,"tag":582,"props":652,"children":653},{"__ignoreMap":552},[654,662,670,678,685,693,701],{"type":559,"tag":586,"props":655,"children":656},{"class":588,"line":589},[657],{"type":559,"tag":586,"props":658,"children":659},{},[660],{"type":564,"value":661},"输入：n = 3\n",{"type":559,"tag":586,"props":663,"children":664},{"class":588,"line":598},[665],{"type":559,"tag":586,"props":666,"children":667},{},[668],{"type":564,"value":669},"输出：3\n",{"type":559,"tag":586,"props":671,"children":672},{"class":588,"line":607},[673],{"type":559,"tag":586,"props":674,"children":675},{},[676],{"type":564,"value":677},"解释：有三种方法可以爬到楼顶。\n",{"type":559,"tag":586,"props":679,"children":680},{"class":588,"line":616},[681],{"type":559,"tag":586,"props":682,"children":683},{"emptyLinePlaceholder":620},[684],{"type":564,"value":623},{"type":559,"tag":586,"props":686,"children":687},{"class":588,"line":626},[688],{"type":559,"tag":586,"props":689,"children":690},{},[691],{"type":564,"value":692},"1. 1 阶 + 1 阶 + 1 阶\n",{"type":559,"tag":586,"props":694,"children":695},{"class":588,"line":635},[696],{"type":559,"tag":586,"props":697,"children":698},{},[699],{"type":564,"value":700},"2. 1 阶 + 2 阶\n",{"type":559,"tag":586,"props":702,"children":704},{"class":588,"line":703},7,[705],{"type":559,"tag":586,"props":706,"children":707},{},[708],{"type":564,"value":709},"3. 2 阶 + 1 阶\n",{"type":559,"tag":560,"props":711,"children":712},{},[713],{"type":564,"value":714},"提示：",{"type":559,"tag":716,"props":717,"children":718},"ul",{},[719],{"type":559,"tag":720,"props":721,"children":722},"li",{},[723],{"type":564,"value":724},"1 \u003C= n \u003C= 45",{"type":559,"tag":726,"props":727,"children":729},"h2",{"id":728},"解题思路",[730],{"type":564,"value":728},{"type":559,"tag":726,"props":732,"children":734},{"id":733},"实现",[735],{"type":564,"value":733},{"type":559,"tag":737,"props":738,"children":740},"h3",{"id":739},"动态规划",[741],{"type":564,"value":739},{"type":559,"tag":576,"props":743,"children":747},{"className":744,"code":745,"language":746,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {number}\n */\nvar climbStairs = function (n) {\n  let dp = [];\n  dp[0] = dp[1] = 1;\n  for (let i = 2; i \u003C= n; i++) {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n};\n","js",[748],{"type":559,"tag":582,"props":749,"children":750},{"__ignoreMap":552},[751,760,802,831,839,884,906,965,1037,1118,1127,1152],{"type":559,"tag":586,"props":752,"children":753},{"class":588,"line":589},[754],{"type":559,"tag":586,"props":755,"children":757},{"style":756},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[758],{"type":564,"value":759},"/**\n",{"type":559,"tag":586,"props":761,"children":762},{"class":588,"line":598},[763,768,774,780,785,791,796],{"type":559,"tag":586,"props":764,"children":765},{"style":756},[766],{"type":564,"value":767}," * ",{"type":559,"tag":586,"props":769,"children":771},{"style":770},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[772],{"type":564,"value":773},"@",{"type":559,"tag":586,"props":775,"children":777},{"style":776},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[778],{"type":564,"value":779},"param",{"type":559,"tag":586,"props":781,"children":782},{"style":770},[783],{"type":564,"value":784}," {",{"type":559,"tag":586,"props":786,"children":788},{"style":787},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[789],{"type":564,"value":790},"number",{"type":559,"tag":586,"props":792,"children":793},{"style":770},[794],{"type":564,"value":795},"}",{"type":559,"tag":586,"props":797,"children":799},{"style":798},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[800],{"type":564,"value":801}," n\n",{"type":559,"tag":586,"props":803,"children":804},{"class":588,"line":607},[805,809,813,818,822,826],{"type":559,"tag":586,"props":806,"children":807},{"style":756},[808],{"type":564,"value":767},{"type":559,"tag":586,"props":810,"children":811},{"style":770},[812],{"type":564,"value":773},{"type":559,"tag":586,"props":814,"children":815},{"style":776},[816],{"type":564,"value":817},"return",{"type":559,"tag":586,"props":819,"children":820},{"style":770},[821],{"type":564,"value":784},{"type":559,"tag":586,"props":823,"children":824},{"style":787},[825],{"type":564,"value":790},{"type":559,"tag":586,"props":827,"children":828},{"style":770},[829],{"type":564,"value":830},"}\n",{"type":559,"tag":586,"props":832,"children":833},{"class":588,"line":616},[834],{"type":559,"tag":586,"props":835,"children":836},{"style":756},[837],{"type":564,"value":838}," */\n",{"type":559,"tag":586,"props":840,"children":841},{"class":588,"line":626},[842,848,854,859,864,869,874,879],{"type":559,"tag":586,"props":843,"children":845},{"style":844},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[846],{"type":564,"value":847},"var",{"type":559,"tag":586,"props":849,"children":851},{"style":850},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[852],{"type":564,"value":853}," climbStairs",{"type":559,"tag":586,"props":855,"children":856},{"style":770},[857],{"type":564,"value":858}," =",{"type":559,"tag":586,"props":860,"children":861},{"style":844},[862],{"type":564,"value":863}," function",{"type":559,"tag":586,"props":865,"children":866},{"style":770},[867],{"type":564,"value":868}," (",{"type":559,"tag":586,"props":870,"children":871},{"style":798},[872],{"type":564,"value":873},"n",{"type":559,"tag":586,"props":875,"children":876},{"style":770},[877],{"type":564,"value":878},")",{"type":559,"tag":586,"props":880,"children":881},{"style":770},[882],{"type":564,"value":883}," {\n",{"type":559,"tag":586,"props":885,"children":886},{"class":588,"line":635},[887,892,897,901],{"type":559,"tag":586,"props":888,"children":889},{"style":844},[890],{"type":564,"value":891},"  let",{"type":559,"tag":586,"props":893,"children":894},{"style":798},[895],{"type":564,"value":896}," dp",{"type":559,"tag":586,"props":898,"children":899},{"style":770},[900],{"type":564,"value":858},{"type":559,"tag":586,"props":902,"children":903},{"style":770},[904],{"type":564,"value":905}," [];\n",{"type":559,"tag":586,"props":907,"children":908},{"class":588,"line":703},[909,914,919,925,930,934,938,942,947,951,955,960],{"type":559,"tag":586,"props":910,"children":911},{"style":798},[912],{"type":564,"value":913},"  dp",{"type":559,"tag":586,"props":915,"children":916},{"style":770},[917],{"type":564,"value":918},"[",{"type":559,"tag":586,"props":920,"children":922},{"style":921},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[923],{"type":564,"value":924},"0",{"type":559,"tag":586,"props":926,"children":927},{"style":770},[928],{"type":564,"value":929},"]",{"type":559,"tag":586,"props":931,"children":932},{"style":770},[933],{"type":564,"value":858},{"type":559,"tag":586,"props":935,"children":936},{"style":798},[937],{"type":564,"value":896},{"type":559,"tag":586,"props":939,"children":940},{"style":770},[941],{"type":564,"value":918},{"type":559,"tag":586,"props":943,"children":944},{"style":921},[945],{"type":564,"value":946},"1",{"type":559,"tag":586,"props":948,"children":949},{"style":770},[950],{"type":564,"value":929},{"type":559,"tag":586,"props":952,"children":953},{"style":770},[954],{"type":564,"value":858},{"type":559,"tag":586,"props":956,"children":957},{"style":921},[958],{"type":564,"value":959}," 1",{"type":559,"tag":586,"props":961,"children":962},{"style":770},[963],{"type":564,"value":964},";\n",{"type":559,"tag":586,"props":966,"children":968},{"class":588,"line":967},8,[969,974,978,983,988,992,997,1002,1006,1011,1016,1020,1024,1029,1033],{"type":559,"tag":586,"props":970,"children":971},{"style":776},[972],{"type":564,"value":973},"  for",{"type":559,"tag":586,"props":975,"children":976},{"style":770},[977],{"type":564,"value":868},{"type":559,"tag":586,"props":979,"children":980},{"style":844},[981],{"type":564,"value":982},"let",{"type":559,"tag":586,"props":984,"children":985},{"style":798},[986],{"type":564,"value":987}," i",{"type":559,"tag":586,"props":989,"children":990},{"style":770},[991],{"type":564,"value":858},{"type":559,"tag":586,"props":993,"children":994},{"style":921},[995],{"type":564,"value":996}," 2",{"type":559,"tag":586,"props":998,"children":999},{"style":770},[1000],{"type":564,"value":1001},";",{"type":559,"tag":586,"props":1003,"children":1004},{"style":798},[1005],{"type":564,"value":987},{"type":559,"tag":586,"props":1007,"children":1008},{"style":770},[1009],{"type":564,"value":1010}," \u003C=",{"type":559,"tag":586,"props":1012,"children":1013},{"style":798},[1014],{"type":564,"value":1015}," n",{"type":559,"tag":586,"props":1017,"children":1018},{"style":770},[1019],{"type":564,"value":1001},{"type":559,"tag":586,"props":1021,"children":1022},{"style":798},[1023],{"type":564,"value":987},{"type":559,"tag":586,"props":1025,"children":1026},{"style":844},[1027],{"type":564,"value":1028},"++",{"type":559,"tag":586,"props":1030,"children":1031},{"style":770},[1032],{"type":564,"value":878},{"type":559,"tag":586,"props":1034,"children":1035},{"style":770},[1036],{"type":564,"value":883},{"type":559,"tag":586,"props":1038,"children":1040},{"class":588,"line":1039},9,[1041,1046,1050,1055,1059,1063,1067,1071,1075,1080,1084,1088,1093,1097,1101,1105,1109,1113],{"type":559,"tag":586,"props":1042,"children":1043},{"style":798},[1044],{"type":564,"value":1045},"    dp",{"type":559,"tag":586,"props":1047,"children":1048},{"style":770},[1049],{"type":564,"value":918},{"type":559,"tag":586,"props":1051,"children":1052},{"style":798},[1053],{"type":564,"value":1054},"i",{"type":559,"tag":586,"props":1056,"children":1057},{"style":770},[1058],{"type":564,"value":929},{"type":559,"tag":586,"props":1060,"children":1061},{"style":770},[1062],{"type":564,"value":858},{"type":559,"tag":586,"props":1064,"children":1065},{"style":798},[1066],{"type":564,"value":896},{"type":559,"tag":586,"props":1068,"children":1069},{"style":770},[1070],{"type":564,"value":918},{"type":559,"tag":586,"props":1072,"children":1073},{"style":798},[1074],{"type":564,"value":1054},{"type":559,"tag":586,"props":1076,"children":1077},{"style":844},[1078],{"type":564,"value":1079}," -",{"type":559,"tag":586,"props":1081,"children":1082},{"style":921},[1083],{"type":564,"value":959},{"type":559,"tag":586,"props":1085,"children":1086},{"style":770},[1087],{"type":564,"value":929},{"type":559,"tag":586,"props":1089,"children":1090},{"style":844},[1091],{"type":564,"value":1092}," +",{"type":559,"tag":586,"props":1094,"children":1095},{"style":798},[1096],{"type":564,"value":896},{"type":559,"tag":586,"props":1098,"children":1099},{"style":770},[1100],{"type":564,"value":918},{"type":559,"tag":586,"props":1102,"children":1103},{"style":798},[1104],{"type":564,"value":1054},{"type":559,"tag":586,"props":1106,"children":1107},{"style":844},[1108],{"type":564,"value":1079},{"type":559,"tag":586,"props":1110,"children":1111},{"style":921},[1112],{"type":564,"value":996},{"type":559,"tag":586,"props":1114,"children":1115},{"style":770},[1116],{"type":564,"value":1117},"];\n",{"type":559,"tag":586,"props":1119,"children":1121},{"class":588,"line":1120},10,[1122],{"type":559,"tag":586,"props":1123,"children":1124},{"style":770},[1125],{"type":564,"value":1126},"  }\n",{"type":559,"tag":586,"props":1128,"children":1130},{"class":588,"line":1129},11,[1131,1136,1140,1144,1148],{"type":559,"tag":586,"props":1132,"children":1133},{"style":776},[1134],{"type":564,"value":1135},"  return",{"type":559,"tag":586,"props":1137,"children":1138},{"style":798},[1139],{"type":564,"value":896},{"type":559,"tag":586,"props":1141,"children":1142},{"style":770},[1143],{"type":564,"value":918},{"type":559,"tag":586,"props":1145,"children":1146},{"style":798},[1147],{"type":564,"value":873},{"type":559,"tag":586,"props":1149,"children":1150},{"style":770},[1151],{"type":564,"value":1117},{"type":559,"tag":586,"props":1153,"children":1155},{"class":588,"line":1154},12,[1156],{"type":559,"tag":586,"props":1157,"children":1158},{"style":770},[1159],{"type":564,"value":1160},"};\n",{"type":559,"tag":1162,"props":1163,"children":1164},"style",{},[1165],{"type":564,"value":1166},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":626,"depth":626,"links":1168},[1169,1170],{"id":728,"depth":598,"text":728},{"id":733,"depth":598,"text":733,"children":1171},[1172],{"id":739,"depth":607,"text":739},"markdown","content:1.algorithm:3.leetcode:3.major:70.climbing-stairs.md","content","1.algorithm/3.leetcode/3.major/70.climbing-stairs.md","md",[1179,1181],{"_path":135,"title":134,"description":1180},"给你一个非负整数 x ，计算并返回 x 的 算术平方根 。",{"_path":141,"title":140,"description":1182},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",1715008124755]