[{"data":1,"prerenderedAt":1396},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-tree-level-order-traversal":546,"/algorithm/leetcode/major/binary-tree-level-order-traversal-surround":1391},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":153,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":152,"description":550,"url":551,"body":552,"_type":1386,"_id":1387,"_source":1388,"_file":1389,"_extension":1390},"major",false,"","给你二叉树的根节点 root ，返回其节点值的 层序遍历 。 （即逐层地，从左到右访问所有节点）。","https://leetcode.cn/problems/binary-tree-level-order-traversal",{"type":553,"children":554,"toc":1380},"root",[555,562,567,576,606,611,634,639,662,667,682,688,693,700,1374],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"示例 1：",{"type":556,"tag":557,"props":568,"children":569},{},[570],{"type":556,"tag":571,"props":572,"children":575},"img",{"alt":573,"src":574},"sample_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.102_sample_1.png",[],{"type":556,"tag":577,"props":578,"children":581},"pre",{"className":579,"code":580,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [3,9,20,null,null,15,7]\n输出：[[3],[9,20],[15,7]]\n",[582],{"type":556,"tag":583,"props":584,"children":585},"code",{"__ignoreMap":549},[586,597],{"type":556,"tag":587,"props":588,"children":591},"span",{"class":589,"line":590},"line",1,[592],{"type":556,"tag":587,"props":593,"children":594},{},[595],{"type":561,"value":596},"输入：root = [3,9,20,null,null,15,7]\n",{"type":556,"tag":587,"props":598,"children":600},{"class":589,"line":599},2,[601],{"type":556,"tag":587,"props":602,"children":603},{},[604],{"type":561,"value":605},"输出：[[3],[9,20],[15,7]]\n",{"type":556,"tag":557,"props":607,"children":608},{},[609],{"type":561,"value":610},"示例 2：",{"type":556,"tag":577,"props":612,"children":614},{"className":579,"code":613,"language":561,"meta":549,"style":549},"输入：root = [1]\n输出：[[1]]\n",[615],{"type":556,"tag":583,"props":616,"children":617},{"__ignoreMap":549},[618,626],{"type":556,"tag":587,"props":619,"children":620},{"class":589,"line":590},[621],{"type":556,"tag":587,"props":622,"children":623},{},[624],{"type":561,"value":625},"输入：root = [1]\n",{"type":556,"tag":587,"props":627,"children":628},{"class":589,"line":599},[629],{"type":556,"tag":587,"props":630,"children":631},{},[632],{"type":561,"value":633},"输出：[[1]]\n",{"type":556,"tag":557,"props":635,"children":636},{},[637],{"type":561,"value":638},"示例 3：",{"type":556,"tag":577,"props":640,"children":642},{"className":579,"code":641,"language":561,"meta":549,"style":549},"输入：root = []\n输出：[]\n",[643],{"type":556,"tag":583,"props":644,"children":645},{"__ignoreMap":549},[646,654],{"type":556,"tag":587,"props":647,"children":648},{"class":589,"line":590},[649],{"type":556,"tag":587,"props":650,"children":651},{},[652],{"type":561,"value":653},"输入：root = []\n",{"type":556,"tag":587,"props":655,"children":656},{"class":589,"line":599},[657],{"type":556,"tag":587,"props":658,"children":659},{},[660],{"type":561,"value":661},"输出：[]\n",{"type":556,"tag":557,"props":663,"children":664},{},[665],{"type":561,"value":666},"提示：",{"type":556,"tag":668,"props":669,"children":670},"ul",{},[671,677],{"type":556,"tag":672,"props":673,"children":674},"li",{},[675],{"type":561,"value":676},"树中节点数目在范围 [0, 2000] 内",{"type":556,"tag":672,"props":678,"children":679},{},[680],{"type":561,"value":681},"-1000 \u003C= Node.val \u003C= 1000",{"type":556,"tag":683,"props":684,"children":686},"h2",{"id":685},"解题思路",[687],{"type":561,"value":685},{"type":556,"tag":683,"props":689,"children":691},{"id":690},"实现",[692],{"type":561,"value":690},{"type":556,"tag":694,"props":695,"children":697},"h3",{"id":696},"深度优先搜索-bfs",[698],{"type":561,"value":699},"深度优先搜索 - bfs",{"type":556,"tag":577,"props":701,"children":705},{"className":702,"code":703,"language":704,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar levelOrder = function (root) {\n  if (!root) return [];\n  let res = [];\n  let queue = [root];\n  while (queue.length) {\n    let len = queue.length;\n    let level = [];\n    for (let i = 0; i \u003C len; i++) {\n      let node = queue.shift();\n      level.push(node.val);\n      if (node.left) queue.push(node.left);\n      if (node.right) queue.push(node.right);\n    }\n    res.push(level);\n  }\n  return res;\n};\n","js",[706],{"type":556,"tag":583,"props":707,"children":708},{"__ignoreMap":549},[709,718,760,791,800,845,881,903,934,971,1006,1027,1099,1135,1177,1239,1300,1309,1339,1348,1365],{"type":556,"tag":587,"props":710,"children":711},{"class":589,"line":590},[712],{"type":556,"tag":587,"props":713,"children":715},{"style":714},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[716],{"type":561,"value":717},"/**\n",{"type":556,"tag":587,"props":719,"children":720},{"class":589,"line":599},[721,726,732,738,743,749,754],{"type":556,"tag":587,"props":722,"children":723},{"style":714},[724],{"type":561,"value":725}," * ",{"type":556,"tag":587,"props":727,"children":729},{"style":728},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[730],{"type":561,"value":731},"@",{"type":556,"tag":587,"props":733,"children":735},{"style":734},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[736],{"type":561,"value":737},"param",{"type":556,"tag":587,"props":739,"children":740},{"style":728},[741],{"type":561,"value":742}," {",{"type":556,"tag":587,"props":744,"children":746},{"style":745},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[747],{"type":561,"value":748},"TreeNode",{"type":556,"tag":587,"props":750,"children":751},{"style":728},[752],{"type":561,"value":753},"}",{"type":556,"tag":587,"props":755,"children":757},{"style":756},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[758],{"type":561,"value":759}," root\n",{"type":556,"tag":587,"props":761,"children":763},{"class":589,"line":762},3,[764,768,772,777,781,786],{"type":556,"tag":587,"props":765,"children":766},{"style":714},[767],{"type":561,"value":725},{"type":556,"tag":587,"props":769,"children":770},{"style":728},[771],{"type":561,"value":731},{"type":556,"tag":587,"props":773,"children":774},{"style":734},[775],{"type":561,"value":776},"return",{"type":556,"tag":587,"props":778,"children":779},{"style":728},[780],{"type":561,"value":742},{"type":556,"tag":587,"props":782,"children":783},{"style":745},[784],{"type":561,"value":785},"number[][]",{"type":556,"tag":587,"props":787,"children":788},{"style":728},[789],{"type":561,"value":790},"}\n",{"type":556,"tag":587,"props":792,"children":794},{"class":589,"line":793},4,[795],{"type":556,"tag":587,"props":796,"children":797},{"style":714},[798],{"type":561,"value":799}," */\n",{"type":556,"tag":587,"props":801,"children":803},{"class":589,"line":802},5,[804,810,816,821,826,831,835,840],{"type":556,"tag":587,"props":805,"children":807},{"style":806},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[808],{"type":561,"value":809},"var",{"type":556,"tag":587,"props":811,"children":813},{"style":812},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[814],{"type":561,"value":815}," levelOrder",{"type":556,"tag":587,"props":817,"children":818},{"style":728},[819],{"type":561,"value":820}," =",{"type":556,"tag":587,"props":822,"children":823},{"style":806},[824],{"type":561,"value":825}," function",{"type":556,"tag":587,"props":827,"children":828},{"style":728},[829],{"type":561,"value":830}," (",{"type":556,"tag":587,"props":832,"children":833},{"style":756},[834],{"type":561,"value":553},{"type":556,"tag":587,"props":836,"children":837},{"style":728},[838],{"type":561,"value":839},")",{"type":556,"tag":587,"props":841,"children":842},{"style":728},[843],{"type":561,"value":844}," {\n",{"type":556,"tag":587,"props":846,"children":848},{"class":589,"line":847},6,[849,854,858,863,867,871,876],{"type":556,"tag":587,"props":850,"children":851},{"style":734},[852],{"type":561,"value":853},"  if",{"type":556,"tag":587,"props":855,"children":856},{"style":728},[857],{"type":561,"value":830},{"type":556,"tag":587,"props":859,"children":860},{"style":806},[861],{"type":561,"value":862},"!",{"type":556,"tag":587,"props":864,"children":865},{"style":756},[866],{"type":561,"value":553},{"type":556,"tag":587,"props":868,"children":869},{"style":728},[870],{"type":561,"value":839},{"type":556,"tag":587,"props":872,"children":873},{"style":734},[874],{"type":561,"value":875}," return",{"type":556,"tag":587,"props":877,"children":878},{"style":728},[879],{"type":561,"value":880}," [];\n",{"type":556,"tag":587,"props":882,"children":884},{"class":589,"line":883},7,[885,890,895,899],{"type":556,"tag":587,"props":886,"children":887},{"style":806},[888],{"type":561,"value":889},"  let",{"type":556,"tag":587,"props":891,"children":892},{"style":756},[893],{"type":561,"value":894}," res",{"type":556,"tag":587,"props":896,"children":897},{"style":728},[898],{"type":561,"value":820},{"type":556,"tag":587,"props":900,"children":901},{"style":728},[902],{"type":561,"value":880},{"type":556,"tag":587,"props":904,"children":906},{"class":589,"line":905},8,[907,911,916,920,925,929],{"type":556,"tag":587,"props":908,"children":909},{"style":806},[910],{"type":561,"value":889},{"type":556,"tag":587,"props":912,"children":913},{"style":756},[914],{"type":561,"value":915}," queue",{"type":556,"tag":587,"props":917,"children":918},{"style":728},[919],{"type":561,"value":820},{"type":556,"tag":587,"props":921,"children":922},{"style":728},[923],{"type":561,"value":924}," [",{"type":556,"tag":587,"props":926,"children":927},{"style":756},[928],{"type":561,"value":553},{"type":556,"tag":587,"props":930,"children":931},{"style":728},[932],{"type":561,"value":933},"];\n",{"type":556,"tag":587,"props":935,"children":937},{"class":589,"line":936},9,[938,943,947,952,957,963,967],{"type":556,"tag":587,"props":939,"children":940},{"style":734},[941],{"type":561,"value":942},"  while",{"type":556,"tag":587,"props":944,"children":945},{"style":728},[946],{"type":561,"value":830},{"type":556,"tag":587,"props":948,"children":949},{"style":756},[950],{"type":561,"value":951},"queue",{"type":556,"tag":587,"props":953,"children":954},{"style":728},[955],{"type":561,"value":956},".",{"type":556,"tag":587,"props":958,"children":960},{"style":959},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[961],{"type":561,"value":962},"length",{"type":556,"tag":587,"props":964,"children":965},{"style":728},[966],{"type":561,"value":839},{"type":556,"tag":587,"props":968,"children":969},{"style":728},[970],{"type":561,"value":844},{"type":556,"tag":587,"props":972,"children":974},{"class":589,"line":973},10,[975,980,985,989,993,997,1001],{"type":556,"tag":587,"props":976,"children":977},{"style":806},[978],{"type":561,"value":979},"    let",{"type":556,"tag":587,"props":981,"children":982},{"style":756},[983],{"type":561,"value":984}," len",{"type":556,"tag":587,"props":986,"children":987},{"style":728},[988],{"type":561,"value":820},{"type":556,"tag":587,"props":990,"children":991},{"style":756},[992],{"type":561,"value":915},{"type":556,"tag":587,"props":994,"children":995},{"style":728},[996],{"type":561,"value":956},{"type":556,"tag":587,"props":998,"children":999},{"style":959},[1000],{"type":561,"value":962},{"type":556,"tag":587,"props":1002,"children":1003},{"style":728},[1004],{"type":561,"value":1005},";\n",{"type":556,"tag":587,"props":1007,"children":1009},{"class":589,"line":1008},11,[1010,1014,1019,1023],{"type":556,"tag":587,"props":1011,"children":1012},{"style":806},[1013],{"type":561,"value":979},{"type":556,"tag":587,"props":1015,"children":1016},{"style":756},[1017],{"type":561,"value":1018}," level",{"type":556,"tag":587,"props":1020,"children":1021},{"style":728},[1022],{"type":561,"value":820},{"type":556,"tag":587,"props":1024,"children":1025},{"style":728},[1026],{"type":561,"value":880},{"type":556,"tag":587,"props":1028,"children":1030},{"class":589,"line":1029},12,[1031,1036,1040,1045,1050,1054,1060,1065,1069,1074,1078,1082,1086,1091,1095],{"type":556,"tag":587,"props":1032,"children":1033},{"style":734},[1034],{"type":561,"value":1035},"    for",{"type":556,"tag":587,"props":1037,"children":1038},{"style":728},[1039],{"type":561,"value":830},{"type":556,"tag":587,"props":1041,"children":1042},{"style":806},[1043],{"type":561,"value":1044},"let",{"type":556,"tag":587,"props":1046,"children":1047},{"style":756},[1048],{"type":561,"value":1049}," i",{"type":556,"tag":587,"props":1051,"children":1052},{"style":728},[1053],{"type":561,"value":820},{"type":556,"tag":587,"props":1055,"children":1057},{"style":1056},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1058],{"type":561,"value":1059}," 0",{"type":556,"tag":587,"props":1061,"children":1062},{"style":728},[1063],{"type":561,"value":1064},";",{"type":556,"tag":587,"props":1066,"children":1067},{"style":756},[1068],{"type":561,"value":1049},{"type":556,"tag":587,"props":1070,"children":1071},{"style":728},[1072],{"type":561,"value":1073}," \u003C",{"type":556,"tag":587,"props":1075,"children":1076},{"style":756},[1077],{"type":561,"value":984},{"type":556,"tag":587,"props":1079,"children":1080},{"style":728},[1081],{"type":561,"value":1064},{"type":556,"tag":587,"props":1083,"children":1084},{"style":756},[1085],{"type":561,"value":1049},{"type":556,"tag":587,"props":1087,"children":1088},{"style":806},[1089],{"type":561,"value":1090},"++",{"type":556,"tag":587,"props":1092,"children":1093},{"style":728},[1094],{"type":561,"value":839},{"type":556,"tag":587,"props":1096,"children":1097},{"style":728},[1098],{"type":561,"value":844},{"type":556,"tag":587,"props":1100,"children":1102},{"class":589,"line":1101},13,[1103,1108,1113,1117,1121,1125,1130],{"type":556,"tag":587,"props":1104,"children":1105},{"style":806},[1106],{"type":561,"value":1107},"      let",{"type":556,"tag":587,"props":1109,"children":1110},{"style":756},[1111],{"type":561,"value":1112}," node",{"type":556,"tag":587,"props":1114,"children":1115},{"style":728},[1116],{"type":561,"value":820},{"type":556,"tag":587,"props":1118,"children":1119},{"style":756},[1120],{"type":561,"value":915},{"type":556,"tag":587,"props":1122,"children":1123},{"style":728},[1124],{"type":561,"value":956},{"type":556,"tag":587,"props":1126,"children":1127},{"style":812},[1128],{"type":561,"value":1129},"shift",{"type":556,"tag":587,"props":1131,"children":1132},{"style":728},[1133],{"type":561,"value":1134},"();\n",{"type":556,"tag":587,"props":1136,"children":1138},{"class":589,"line":1137},14,[1139,1144,1148,1153,1158,1163,1167,1172],{"type":556,"tag":587,"props":1140,"children":1141},{"style":756},[1142],{"type":561,"value":1143},"      level",{"type":556,"tag":587,"props":1145,"children":1146},{"style":728},[1147],{"type":561,"value":956},{"type":556,"tag":587,"props":1149,"children":1150},{"style":812},[1151],{"type":561,"value":1152},"push",{"type":556,"tag":587,"props":1154,"children":1155},{"style":728},[1156],{"type":561,"value":1157},"(",{"type":556,"tag":587,"props":1159,"children":1160},{"style":756},[1161],{"type":561,"value":1162},"node",{"type":556,"tag":587,"props":1164,"children":1165},{"style":728},[1166],{"type":561,"value":956},{"type":556,"tag":587,"props":1168,"children":1169},{"style":756},[1170],{"type":561,"value":1171},"val",{"type":556,"tag":587,"props":1173,"children":1174},{"style":728},[1175],{"type":561,"value":1176},");\n",{"type":556,"tag":587,"props":1178,"children":1180},{"class":589,"line":1179},15,[1181,1186,1190,1194,1198,1203,1207,1211,1215,1219,1223,1227,1231,1235],{"type":556,"tag":587,"props":1182,"children":1183},{"style":734},[1184],{"type":561,"value":1185},"      if",{"type":556,"tag":587,"props":1187,"children":1188},{"style":728},[1189],{"type":561,"value":830},{"type":556,"tag":587,"props":1191,"children":1192},{"style":756},[1193],{"type":561,"value":1162},{"type":556,"tag":587,"props":1195,"children":1196},{"style":728},[1197],{"type":561,"value":956},{"type":556,"tag":587,"props":1199,"children":1200},{"style":756},[1201],{"type":561,"value":1202},"left",{"type":556,"tag":587,"props":1204,"children":1205},{"style":728},[1206],{"type":561,"value":839},{"type":556,"tag":587,"props":1208,"children":1209},{"style":756},[1210],{"type":561,"value":915},{"type":556,"tag":587,"props":1212,"children":1213},{"style":728},[1214],{"type":561,"value":956},{"type":556,"tag":587,"props":1216,"children":1217},{"style":812},[1218],{"type":561,"value":1152},{"type":556,"tag":587,"props":1220,"children":1221},{"style":728},[1222],{"type":561,"value":1157},{"type":556,"tag":587,"props":1224,"children":1225},{"style":756},[1226],{"type":561,"value":1162},{"type":556,"tag":587,"props":1228,"children":1229},{"style":728},[1230],{"type":561,"value":956},{"type":556,"tag":587,"props":1232,"children":1233},{"style":756},[1234],{"type":561,"value":1202},{"type":556,"tag":587,"props":1236,"children":1237},{"style":728},[1238],{"type":561,"value":1176},{"type":556,"tag":587,"props":1240,"children":1242},{"class":589,"line":1241},16,[1243,1247,1251,1255,1259,1264,1268,1272,1276,1280,1284,1288,1292,1296],{"type":556,"tag":587,"props":1244,"children":1245},{"style":734},[1246],{"type":561,"value":1185},{"type":556,"tag":587,"props":1248,"children":1249},{"style":728},[1250],{"type":561,"value":830},{"type":556,"tag":587,"props":1252,"children":1253},{"style":756},[1254],{"type":561,"value":1162},{"type":556,"tag":587,"props":1256,"children":1257},{"style":728},[1258],{"type":561,"value":956},{"type":556,"tag":587,"props":1260,"children":1261},{"style":756},[1262],{"type":561,"value":1263},"right",{"type":556,"tag":587,"props":1265,"children":1266},{"style":728},[1267],{"type":561,"value":839},{"type":556,"tag":587,"props":1269,"children":1270},{"style":756},[1271],{"type":561,"value":915},{"type":556,"tag":587,"props":1273,"children":1274},{"style":728},[1275],{"type":561,"value":956},{"type":556,"tag":587,"props":1277,"children":1278},{"style":812},[1279],{"type":561,"value":1152},{"type":556,"tag":587,"props":1281,"children":1282},{"style":728},[1283],{"type":561,"value":1157},{"type":556,"tag":587,"props":1285,"children":1286},{"style":756},[1287],{"type":561,"value":1162},{"type":556,"tag":587,"props":1289,"children":1290},{"style":728},[1291],{"type":561,"value":956},{"type":556,"tag":587,"props":1293,"children":1294},{"style":756},[1295],{"type":561,"value":1263},{"type":556,"tag":587,"props":1297,"children":1298},{"style":728},[1299],{"type":561,"value":1176},{"type":556,"tag":587,"props":1301,"children":1303},{"class":589,"line":1302},17,[1304],{"type":556,"tag":587,"props":1305,"children":1306},{"style":728},[1307],{"type":561,"value":1308},"    }\n",{"type":556,"tag":587,"props":1310,"children":1312},{"class":589,"line":1311},18,[1313,1318,1322,1326,1330,1335],{"type":556,"tag":587,"props":1314,"children":1315},{"style":756},[1316],{"type":561,"value":1317},"    res",{"type":556,"tag":587,"props":1319,"children":1320},{"style":728},[1321],{"type":561,"value":956},{"type":556,"tag":587,"props":1323,"children":1324},{"style":812},[1325],{"type":561,"value":1152},{"type":556,"tag":587,"props":1327,"children":1328},{"style":728},[1329],{"type":561,"value":1157},{"type":556,"tag":587,"props":1331,"children":1332},{"style":756},[1333],{"type":561,"value":1334},"level",{"type":556,"tag":587,"props":1336,"children":1337},{"style":728},[1338],{"type":561,"value":1176},{"type":556,"tag":587,"props":1340,"children":1342},{"class":589,"line":1341},19,[1343],{"type":556,"tag":587,"props":1344,"children":1345},{"style":728},[1346],{"type":561,"value":1347},"  }\n",{"type":556,"tag":587,"props":1349,"children":1351},{"class":589,"line":1350},20,[1352,1357,1361],{"type":556,"tag":587,"props":1353,"children":1354},{"style":734},[1355],{"type":561,"value":1356},"  return",{"type":556,"tag":587,"props":1358,"children":1359},{"style":756},[1360],{"type":561,"value":894},{"type":556,"tag":587,"props":1362,"children":1363},{"style":728},[1364],{"type":561,"value":1005},{"type":556,"tag":587,"props":1366,"children":1368},{"class":589,"line":1367},21,[1369],{"type":556,"tag":587,"props":1370,"children":1371},{"style":728},[1372],{"type":561,"value":1373},"};\n",{"type":556,"tag":1375,"props":1376,"children":1377},"style",{},[1378],{"type":561,"value":1379},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":802,"depth":802,"links":1381},[1382,1383],{"id":685,"depth":599,"text":685},{"id":690,"depth":599,"text":690,"children":1384},[1385],{"id":696,"depth":762,"text":699},"markdown","content:1.algorithm:3.leetcode:3.major:102.binary-tree-level-order-traversal.md","content","1.algorithm/3.leetcode/3.major/102.binary-tree-level-order-traversal.md","md",[1392,1394],{"_path":150,"title":149,"description":1393},"给你一个二叉树的根节点 root ， 检查它是否轴对称。",{"_path":156,"title":155,"description":1395},"给定一个二叉树 root ，返回其最大深度。",1714279833493]