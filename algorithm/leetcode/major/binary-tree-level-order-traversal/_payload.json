[{"data":1,"prerenderedAt":1350},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-tree-level-order-traversal":500,"/algorithm/leetcode/major/binary-tree-level-order-traversal-surround":1345},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":153,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":152,"description":504,"url":505,"body":506,"_type":1340,"_id":1341,"_source":1342,"_file":1343,"_extension":1344},"major",false,"","给你二叉树的根节点 root ，返回其节点值的 层序遍历 。 （即逐层地，从左到右访问所有节点）。","https://leetcode.cn/problems/binary-tree-level-order-traversal",{"type":507,"children":508,"toc":1334},"root",[509,516,521,530,560,565,588,593,616,621,636,642,647,654,1328],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"示例 1：",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":510,"tag":525,"props":526,"children":529},"img",{"alt":527,"src":528},"sample_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.102_sample_1.png",[],{"type":510,"tag":531,"props":532,"children":535},"pre",{"className":533,"code":534,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [3,9,20,null,null,15,7]\n输出：[[3],[9,20],[15,7]]\n",[536],{"type":510,"tag":537,"props":538,"children":539},"code",{"__ignoreMap":503},[540,551],{"type":510,"tag":541,"props":542,"children":545},"span",{"class":543,"line":544},"line",1,[546],{"type":510,"tag":541,"props":547,"children":548},{},[549],{"type":515,"value":550},"输入：root = [3,9,20,null,null,15,7]\n",{"type":510,"tag":541,"props":552,"children":554},{"class":543,"line":553},2,[555],{"type":510,"tag":541,"props":556,"children":557},{},[558],{"type":515,"value":559},"输出：[[3],[9,20],[15,7]]\n",{"type":510,"tag":511,"props":561,"children":562},{},[563],{"type":515,"value":564},"示例 2：",{"type":510,"tag":531,"props":566,"children":568},{"className":533,"code":567,"language":515,"meta":503,"style":503},"输入：root = [1]\n输出：[[1]]\n",[569],{"type":510,"tag":537,"props":570,"children":571},{"__ignoreMap":503},[572,580],{"type":510,"tag":541,"props":573,"children":574},{"class":543,"line":544},[575],{"type":510,"tag":541,"props":576,"children":577},{},[578],{"type":515,"value":579},"输入：root = [1]\n",{"type":510,"tag":541,"props":581,"children":582},{"class":543,"line":553},[583],{"type":510,"tag":541,"props":584,"children":585},{},[586],{"type":515,"value":587},"输出：[[1]]\n",{"type":510,"tag":511,"props":589,"children":590},{},[591],{"type":515,"value":592},"示例 3：",{"type":510,"tag":531,"props":594,"children":596},{"className":533,"code":595,"language":515,"meta":503,"style":503},"输入：root = []\n输出：[]\n",[597],{"type":510,"tag":537,"props":598,"children":599},{"__ignoreMap":503},[600,608],{"type":510,"tag":541,"props":601,"children":602},{"class":543,"line":544},[603],{"type":510,"tag":541,"props":604,"children":605},{},[606],{"type":515,"value":607},"输入：root = []\n",{"type":510,"tag":541,"props":609,"children":610},{"class":543,"line":553},[611],{"type":510,"tag":541,"props":612,"children":613},{},[614],{"type":515,"value":615},"输出：[]\n",{"type":510,"tag":511,"props":617,"children":618},{},[619],{"type":515,"value":620},"提示：",{"type":510,"tag":622,"props":623,"children":624},"ul",{},[625,631],{"type":510,"tag":626,"props":627,"children":628},"li",{},[629],{"type":515,"value":630},"树中节点数目在范围 [0, 2000] 内",{"type":510,"tag":626,"props":632,"children":633},{},[634],{"type":515,"value":635},"-1000 \u003C= Node.val \u003C= 1000",{"type":510,"tag":637,"props":638,"children":640},"h2",{"id":639},"解题思路",[641],{"type":515,"value":639},{"type":510,"tag":637,"props":643,"children":645},{"id":644},"实现",[646],{"type":515,"value":644},{"type":510,"tag":648,"props":649,"children":651},"h3",{"id":650},"深度优先搜索-bfs",[652],{"type":515,"value":653},"深度优先搜索 - bfs",{"type":510,"tag":531,"props":655,"children":659},{"className":656,"code":657,"language":658,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar levelOrder = function (root) {\n  if (!root) return [];\n  let res = [];\n  let queue = [root];\n  while (queue.length) {\n    let len = queue.length;\n    let level = [];\n    for (let i = 0; i \u003C len; i++) {\n      let node = queue.shift();\n      level.push(node.val);\n      if (node.left) queue.push(node.left);\n      if (node.right) queue.push(node.right);\n    }\n    res.push(level);\n  }\n  return res;\n};\n","js",[660],{"type":510,"tag":537,"props":661,"children":662},{"__ignoreMap":503},[663,672,714,745,754,799,835,857,888,925,960,981,1053,1089,1131,1193,1254,1263,1293,1302,1319],{"type":510,"tag":541,"props":664,"children":665},{"class":543,"line":544},[666],{"type":510,"tag":541,"props":667,"children":669},{"style":668},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[670],{"type":515,"value":671},"/**\n",{"type":510,"tag":541,"props":673,"children":674},{"class":543,"line":553},[675,680,686,692,697,703,708],{"type":510,"tag":541,"props":676,"children":677},{"style":668},[678],{"type":515,"value":679}," * ",{"type":510,"tag":541,"props":681,"children":683},{"style":682},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[684],{"type":515,"value":685},"@",{"type":510,"tag":541,"props":687,"children":689},{"style":688},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[690],{"type":515,"value":691},"param",{"type":510,"tag":541,"props":693,"children":694},{"style":682},[695],{"type":515,"value":696}," {",{"type":510,"tag":541,"props":698,"children":700},{"style":699},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[701],{"type":515,"value":702},"TreeNode",{"type":510,"tag":541,"props":704,"children":705},{"style":682},[706],{"type":515,"value":707},"}",{"type":510,"tag":541,"props":709,"children":711},{"style":710},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[712],{"type":515,"value":713}," root\n",{"type":510,"tag":541,"props":715,"children":717},{"class":543,"line":716},3,[718,722,726,731,735,740],{"type":510,"tag":541,"props":719,"children":720},{"style":668},[721],{"type":515,"value":679},{"type":510,"tag":541,"props":723,"children":724},{"style":682},[725],{"type":515,"value":685},{"type":510,"tag":541,"props":727,"children":728},{"style":688},[729],{"type":515,"value":730},"return",{"type":510,"tag":541,"props":732,"children":733},{"style":682},[734],{"type":515,"value":696},{"type":510,"tag":541,"props":736,"children":737},{"style":699},[738],{"type":515,"value":739},"number[][]",{"type":510,"tag":541,"props":741,"children":742},{"style":682},[743],{"type":515,"value":744},"}\n",{"type":510,"tag":541,"props":746,"children":748},{"class":543,"line":747},4,[749],{"type":510,"tag":541,"props":750,"children":751},{"style":668},[752],{"type":515,"value":753}," */\n",{"type":510,"tag":541,"props":755,"children":757},{"class":543,"line":756},5,[758,764,770,775,780,785,789,794],{"type":510,"tag":541,"props":759,"children":761},{"style":760},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[762],{"type":515,"value":763},"var",{"type":510,"tag":541,"props":765,"children":767},{"style":766},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[768],{"type":515,"value":769}," levelOrder",{"type":510,"tag":541,"props":771,"children":772},{"style":682},[773],{"type":515,"value":774}," =",{"type":510,"tag":541,"props":776,"children":777},{"style":760},[778],{"type":515,"value":779}," function",{"type":510,"tag":541,"props":781,"children":782},{"style":682},[783],{"type":515,"value":784}," (",{"type":510,"tag":541,"props":786,"children":787},{"style":710},[788],{"type":515,"value":507},{"type":510,"tag":541,"props":790,"children":791},{"style":682},[792],{"type":515,"value":793},")",{"type":510,"tag":541,"props":795,"children":796},{"style":682},[797],{"type":515,"value":798}," {\n",{"type":510,"tag":541,"props":800,"children":802},{"class":543,"line":801},6,[803,808,812,817,821,825,830],{"type":510,"tag":541,"props":804,"children":805},{"style":688},[806],{"type":515,"value":807},"  if",{"type":510,"tag":541,"props":809,"children":810},{"style":682},[811],{"type":515,"value":784},{"type":510,"tag":541,"props":813,"children":814},{"style":760},[815],{"type":515,"value":816},"!",{"type":510,"tag":541,"props":818,"children":819},{"style":710},[820],{"type":515,"value":507},{"type":510,"tag":541,"props":822,"children":823},{"style":682},[824],{"type":515,"value":793},{"type":510,"tag":541,"props":826,"children":827},{"style":688},[828],{"type":515,"value":829}," return",{"type":510,"tag":541,"props":831,"children":832},{"style":682},[833],{"type":515,"value":834}," [];\n",{"type":510,"tag":541,"props":836,"children":838},{"class":543,"line":837},7,[839,844,849,853],{"type":510,"tag":541,"props":840,"children":841},{"style":760},[842],{"type":515,"value":843},"  let",{"type":510,"tag":541,"props":845,"children":846},{"style":710},[847],{"type":515,"value":848}," res",{"type":510,"tag":541,"props":850,"children":851},{"style":682},[852],{"type":515,"value":774},{"type":510,"tag":541,"props":854,"children":855},{"style":682},[856],{"type":515,"value":834},{"type":510,"tag":541,"props":858,"children":860},{"class":543,"line":859},8,[861,865,870,874,879,883],{"type":510,"tag":541,"props":862,"children":863},{"style":760},[864],{"type":515,"value":843},{"type":510,"tag":541,"props":866,"children":867},{"style":710},[868],{"type":515,"value":869}," queue",{"type":510,"tag":541,"props":871,"children":872},{"style":682},[873],{"type":515,"value":774},{"type":510,"tag":541,"props":875,"children":876},{"style":682},[877],{"type":515,"value":878}," [",{"type":510,"tag":541,"props":880,"children":881},{"style":710},[882],{"type":515,"value":507},{"type":510,"tag":541,"props":884,"children":885},{"style":682},[886],{"type":515,"value":887},"];\n",{"type":510,"tag":541,"props":889,"children":891},{"class":543,"line":890},9,[892,897,901,906,911,917,921],{"type":510,"tag":541,"props":893,"children":894},{"style":688},[895],{"type":515,"value":896},"  while",{"type":510,"tag":541,"props":898,"children":899},{"style":682},[900],{"type":515,"value":784},{"type":510,"tag":541,"props":902,"children":903},{"style":710},[904],{"type":515,"value":905},"queue",{"type":510,"tag":541,"props":907,"children":908},{"style":682},[909],{"type":515,"value":910},".",{"type":510,"tag":541,"props":912,"children":914},{"style":913},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[915],{"type":515,"value":916},"length",{"type":510,"tag":541,"props":918,"children":919},{"style":682},[920],{"type":515,"value":793},{"type":510,"tag":541,"props":922,"children":923},{"style":682},[924],{"type":515,"value":798},{"type":510,"tag":541,"props":926,"children":928},{"class":543,"line":927},10,[929,934,939,943,947,951,955],{"type":510,"tag":541,"props":930,"children":931},{"style":760},[932],{"type":515,"value":933},"    let",{"type":510,"tag":541,"props":935,"children":936},{"style":710},[937],{"type":515,"value":938}," len",{"type":510,"tag":541,"props":940,"children":941},{"style":682},[942],{"type":515,"value":774},{"type":510,"tag":541,"props":944,"children":945},{"style":710},[946],{"type":515,"value":869},{"type":510,"tag":541,"props":948,"children":949},{"style":682},[950],{"type":515,"value":910},{"type":510,"tag":541,"props":952,"children":953},{"style":913},[954],{"type":515,"value":916},{"type":510,"tag":541,"props":956,"children":957},{"style":682},[958],{"type":515,"value":959},";\n",{"type":510,"tag":541,"props":961,"children":963},{"class":543,"line":962},11,[964,968,973,977],{"type":510,"tag":541,"props":965,"children":966},{"style":760},[967],{"type":515,"value":933},{"type":510,"tag":541,"props":969,"children":970},{"style":710},[971],{"type":515,"value":972}," level",{"type":510,"tag":541,"props":974,"children":975},{"style":682},[976],{"type":515,"value":774},{"type":510,"tag":541,"props":978,"children":979},{"style":682},[980],{"type":515,"value":834},{"type":510,"tag":541,"props":982,"children":984},{"class":543,"line":983},12,[985,990,994,999,1004,1008,1014,1019,1023,1028,1032,1036,1040,1045,1049],{"type":510,"tag":541,"props":986,"children":987},{"style":688},[988],{"type":515,"value":989},"    for",{"type":510,"tag":541,"props":991,"children":992},{"style":682},[993],{"type":515,"value":784},{"type":510,"tag":541,"props":995,"children":996},{"style":760},[997],{"type":515,"value":998},"let",{"type":510,"tag":541,"props":1000,"children":1001},{"style":710},[1002],{"type":515,"value":1003}," i",{"type":510,"tag":541,"props":1005,"children":1006},{"style":682},[1007],{"type":515,"value":774},{"type":510,"tag":541,"props":1009,"children":1011},{"style":1010},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1012],{"type":515,"value":1013}," 0",{"type":510,"tag":541,"props":1015,"children":1016},{"style":682},[1017],{"type":515,"value":1018},";",{"type":510,"tag":541,"props":1020,"children":1021},{"style":710},[1022],{"type":515,"value":1003},{"type":510,"tag":541,"props":1024,"children":1025},{"style":682},[1026],{"type":515,"value":1027}," \u003C",{"type":510,"tag":541,"props":1029,"children":1030},{"style":710},[1031],{"type":515,"value":938},{"type":510,"tag":541,"props":1033,"children":1034},{"style":682},[1035],{"type":515,"value":1018},{"type":510,"tag":541,"props":1037,"children":1038},{"style":710},[1039],{"type":515,"value":1003},{"type":510,"tag":541,"props":1041,"children":1042},{"style":760},[1043],{"type":515,"value":1044},"++",{"type":510,"tag":541,"props":1046,"children":1047},{"style":682},[1048],{"type":515,"value":793},{"type":510,"tag":541,"props":1050,"children":1051},{"style":682},[1052],{"type":515,"value":798},{"type":510,"tag":541,"props":1054,"children":1056},{"class":543,"line":1055},13,[1057,1062,1067,1071,1075,1079,1084],{"type":510,"tag":541,"props":1058,"children":1059},{"style":760},[1060],{"type":515,"value":1061},"      let",{"type":510,"tag":541,"props":1063,"children":1064},{"style":710},[1065],{"type":515,"value":1066}," node",{"type":510,"tag":541,"props":1068,"children":1069},{"style":682},[1070],{"type":515,"value":774},{"type":510,"tag":541,"props":1072,"children":1073},{"style":710},[1074],{"type":515,"value":869},{"type":510,"tag":541,"props":1076,"children":1077},{"style":682},[1078],{"type":515,"value":910},{"type":510,"tag":541,"props":1080,"children":1081},{"style":766},[1082],{"type":515,"value":1083},"shift",{"type":510,"tag":541,"props":1085,"children":1086},{"style":682},[1087],{"type":515,"value":1088},"();\n",{"type":510,"tag":541,"props":1090,"children":1092},{"class":543,"line":1091},14,[1093,1098,1102,1107,1112,1117,1121,1126],{"type":510,"tag":541,"props":1094,"children":1095},{"style":710},[1096],{"type":515,"value":1097},"      level",{"type":510,"tag":541,"props":1099,"children":1100},{"style":682},[1101],{"type":515,"value":910},{"type":510,"tag":541,"props":1103,"children":1104},{"style":766},[1105],{"type":515,"value":1106},"push",{"type":510,"tag":541,"props":1108,"children":1109},{"style":682},[1110],{"type":515,"value":1111},"(",{"type":510,"tag":541,"props":1113,"children":1114},{"style":710},[1115],{"type":515,"value":1116},"node",{"type":510,"tag":541,"props":1118,"children":1119},{"style":682},[1120],{"type":515,"value":910},{"type":510,"tag":541,"props":1122,"children":1123},{"style":710},[1124],{"type":515,"value":1125},"val",{"type":510,"tag":541,"props":1127,"children":1128},{"style":682},[1129],{"type":515,"value":1130},");\n",{"type":510,"tag":541,"props":1132,"children":1134},{"class":543,"line":1133},15,[1135,1140,1144,1148,1152,1157,1161,1165,1169,1173,1177,1181,1185,1189],{"type":510,"tag":541,"props":1136,"children":1137},{"style":688},[1138],{"type":515,"value":1139},"      if",{"type":510,"tag":541,"props":1141,"children":1142},{"style":682},[1143],{"type":515,"value":784},{"type":510,"tag":541,"props":1145,"children":1146},{"style":710},[1147],{"type":515,"value":1116},{"type":510,"tag":541,"props":1149,"children":1150},{"style":682},[1151],{"type":515,"value":910},{"type":510,"tag":541,"props":1153,"children":1154},{"style":710},[1155],{"type":515,"value":1156},"left",{"type":510,"tag":541,"props":1158,"children":1159},{"style":682},[1160],{"type":515,"value":793},{"type":510,"tag":541,"props":1162,"children":1163},{"style":710},[1164],{"type":515,"value":869},{"type":510,"tag":541,"props":1166,"children":1167},{"style":682},[1168],{"type":515,"value":910},{"type":510,"tag":541,"props":1170,"children":1171},{"style":766},[1172],{"type":515,"value":1106},{"type":510,"tag":541,"props":1174,"children":1175},{"style":682},[1176],{"type":515,"value":1111},{"type":510,"tag":541,"props":1178,"children":1179},{"style":710},[1180],{"type":515,"value":1116},{"type":510,"tag":541,"props":1182,"children":1183},{"style":682},[1184],{"type":515,"value":910},{"type":510,"tag":541,"props":1186,"children":1187},{"style":710},[1188],{"type":515,"value":1156},{"type":510,"tag":541,"props":1190,"children":1191},{"style":682},[1192],{"type":515,"value":1130},{"type":510,"tag":541,"props":1194,"children":1196},{"class":543,"line":1195},16,[1197,1201,1205,1209,1213,1218,1222,1226,1230,1234,1238,1242,1246,1250],{"type":510,"tag":541,"props":1198,"children":1199},{"style":688},[1200],{"type":515,"value":1139},{"type":510,"tag":541,"props":1202,"children":1203},{"style":682},[1204],{"type":515,"value":784},{"type":510,"tag":541,"props":1206,"children":1207},{"style":710},[1208],{"type":515,"value":1116},{"type":510,"tag":541,"props":1210,"children":1211},{"style":682},[1212],{"type":515,"value":910},{"type":510,"tag":541,"props":1214,"children":1215},{"style":710},[1216],{"type":515,"value":1217},"right",{"type":510,"tag":541,"props":1219,"children":1220},{"style":682},[1221],{"type":515,"value":793},{"type":510,"tag":541,"props":1223,"children":1224},{"style":710},[1225],{"type":515,"value":869},{"type":510,"tag":541,"props":1227,"children":1228},{"style":682},[1229],{"type":515,"value":910},{"type":510,"tag":541,"props":1231,"children":1232},{"style":766},[1233],{"type":515,"value":1106},{"type":510,"tag":541,"props":1235,"children":1236},{"style":682},[1237],{"type":515,"value":1111},{"type":510,"tag":541,"props":1239,"children":1240},{"style":710},[1241],{"type":515,"value":1116},{"type":510,"tag":541,"props":1243,"children":1244},{"style":682},[1245],{"type":515,"value":910},{"type":510,"tag":541,"props":1247,"children":1248},{"style":710},[1249],{"type":515,"value":1217},{"type":510,"tag":541,"props":1251,"children":1252},{"style":682},[1253],{"type":515,"value":1130},{"type":510,"tag":541,"props":1255,"children":1257},{"class":543,"line":1256},17,[1258],{"type":510,"tag":541,"props":1259,"children":1260},{"style":682},[1261],{"type":515,"value":1262},"    }\n",{"type":510,"tag":541,"props":1264,"children":1266},{"class":543,"line":1265},18,[1267,1272,1276,1280,1284,1289],{"type":510,"tag":541,"props":1268,"children":1269},{"style":710},[1270],{"type":515,"value":1271},"    res",{"type":510,"tag":541,"props":1273,"children":1274},{"style":682},[1275],{"type":515,"value":910},{"type":510,"tag":541,"props":1277,"children":1278},{"style":766},[1279],{"type":515,"value":1106},{"type":510,"tag":541,"props":1281,"children":1282},{"style":682},[1283],{"type":515,"value":1111},{"type":510,"tag":541,"props":1285,"children":1286},{"style":710},[1287],{"type":515,"value":1288},"level",{"type":510,"tag":541,"props":1290,"children":1291},{"style":682},[1292],{"type":515,"value":1130},{"type":510,"tag":541,"props":1294,"children":1296},{"class":543,"line":1295},19,[1297],{"type":510,"tag":541,"props":1298,"children":1299},{"style":682},[1300],{"type":515,"value":1301},"  }\n",{"type":510,"tag":541,"props":1303,"children":1305},{"class":543,"line":1304},20,[1306,1311,1315],{"type":510,"tag":541,"props":1307,"children":1308},{"style":688},[1309],{"type":515,"value":1310},"  return",{"type":510,"tag":541,"props":1312,"children":1313},{"style":710},[1314],{"type":515,"value":848},{"type":510,"tag":541,"props":1316,"children":1317},{"style":682},[1318],{"type":515,"value":959},{"type":510,"tag":541,"props":1320,"children":1322},{"class":543,"line":1321},21,[1323],{"type":510,"tag":541,"props":1324,"children":1325},{"style":682},[1326],{"type":515,"value":1327},"};\n",{"type":510,"tag":1329,"props":1330,"children":1331},"style",{},[1332],{"type":515,"value":1333},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":756,"depth":756,"links":1335},[1336,1337],{"id":639,"depth":553,"text":639},{"id":644,"depth":553,"text":644,"children":1338},[1339],{"id":650,"depth":716,"text":653},"markdown","content:1.algorithm:3.leetcode:3.major:102.binary-tree-level-order-traversal.md","content","1.algorithm/3.leetcode/3.major/102.binary-tree-level-order-traversal.md","md",[1346,1348],{"_path":150,"title":149,"description":1347},"给你一个二叉树的根节点 root ， 检查它是否轴对称。",{"_path":156,"title":155,"description":1349},"给定一个二叉树 root ，返回其最大深度。",1714054337010]