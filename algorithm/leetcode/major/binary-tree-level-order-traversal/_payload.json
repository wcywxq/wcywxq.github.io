[{"data":1,"prerenderedAt":1402},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-tree-level-order-traversal":552,"/algorithm/leetcode/major/binary-tree-level-order-traversal-surround":1397},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":153,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":152,"description":556,"url":557,"body":558,"_type":1392,"_id":1393,"_source":1394,"_file":1395,"_extension":1396},"major",false,"","给你二叉树的根节点 root ，返回其节点值的 层序遍历 。 （即逐层地，从左到右访问所有节点）。","https://leetcode.cn/problems/binary-tree-level-order-traversal",{"type":559,"children":560,"toc":1386},"root",[561,568,573,582,612,617,640,645,668,673,688,694,699,706,1380],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"示例 1：",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":562,"tag":577,"props":578,"children":581},"img",{"alt":579,"src":580},"sample_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.102_sample_1.png",[],{"type":562,"tag":583,"props":584,"children":587},"pre",{"className":585,"code":586,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [3,9,20,null,null,15,7]\n输出：[[3],[9,20],[15,7]]\n",[588],{"type":562,"tag":589,"props":590,"children":591},"code",{"__ignoreMap":555},[592,603],{"type":562,"tag":593,"props":594,"children":597},"span",{"class":595,"line":596},"line",1,[598],{"type":562,"tag":593,"props":599,"children":600},{},[601],{"type":567,"value":602},"输入：root = [3,9,20,null,null,15,7]\n",{"type":562,"tag":593,"props":604,"children":606},{"class":595,"line":605},2,[607],{"type":562,"tag":593,"props":608,"children":609},{},[610],{"type":567,"value":611},"输出：[[3],[9,20],[15,7]]\n",{"type":562,"tag":563,"props":613,"children":614},{},[615],{"type":567,"value":616},"示例 2：",{"type":562,"tag":583,"props":618,"children":620},{"className":585,"code":619,"language":567,"meta":555,"style":555},"输入：root = [1]\n输出：[[1]]\n",[621],{"type":562,"tag":589,"props":622,"children":623},{"__ignoreMap":555},[624,632],{"type":562,"tag":593,"props":625,"children":626},{"class":595,"line":596},[627],{"type":562,"tag":593,"props":628,"children":629},{},[630],{"type":567,"value":631},"输入：root = [1]\n",{"type":562,"tag":593,"props":633,"children":634},{"class":595,"line":605},[635],{"type":562,"tag":593,"props":636,"children":637},{},[638],{"type":567,"value":639},"输出：[[1]]\n",{"type":562,"tag":563,"props":641,"children":642},{},[643],{"type":567,"value":644},"示例 3：",{"type":562,"tag":583,"props":646,"children":648},{"className":585,"code":647,"language":567,"meta":555,"style":555},"输入：root = []\n输出：[]\n",[649],{"type":562,"tag":589,"props":650,"children":651},{"__ignoreMap":555},[652,660],{"type":562,"tag":593,"props":653,"children":654},{"class":595,"line":596},[655],{"type":562,"tag":593,"props":656,"children":657},{},[658],{"type":567,"value":659},"输入：root = []\n",{"type":562,"tag":593,"props":661,"children":662},{"class":595,"line":605},[663],{"type":562,"tag":593,"props":664,"children":665},{},[666],{"type":567,"value":667},"输出：[]\n",{"type":562,"tag":563,"props":669,"children":670},{},[671],{"type":567,"value":672},"提示：",{"type":562,"tag":674,"props":675,"children":676},"ul",{},[677,683],{"type":562,"tag":678,"props":679,"children":680},"li",{},[681],{"type":567,"value":682},"树中节点数目在范围 [0, 2000] 内",{"type":562,"tag":678,"props":684,"children":685},{},[686],{"type":567,"value":687},"-1000 \u003C= Node.val \u003C= 1000",{"type":562,"tag":689,"props":690,"children":692},"h2",{"id":691},"解题思路",[693],{"type":567,"value":691},{"type":562,"tag":689,"props":695,"children":697},{"id":696},"实现",[698],{"type":567,"value":696},{"type":562,"tag":700,"props":701,"children":703},"h3",{"id":702},"深度优先搜索-bfs",[704],{"type":567,"value":705},"深度优先搜索 - bfs",{"type":562,"tag":583,"props":707,"children":711},{"className":708,"code":709,"language":710,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar levelOrder = function (root) {\n  if (!root) return [];\n  let res = [];\n  let queue = [root];\n  while (queue.length) {\n    let len = queue.length;\n    let level = [];\n    for (let i = 0; i \u003C len; i++) {\n      let node = queue.shift();\n      level.push(node.val);\n      if (node.left) queue.push(node.left);\n      if (node.right) queue.push(node.right);\n    }\n    res.push(level);\n  }\n  return res;\n};\n","js",[712],{"type":562,"tag":589,"props":713,"children":714},{"__ignoreMap":555},[715,724,766,797,806,851,887,909,940,977,1012,1033,1105,1141,1183,1245,1306,1315,1345,1354,1371],{"type":562,"tag":593,"props":716,"children":717},{"class":595,"line":596},[718],{"type":562,"tag":593,"props":719,"children":721},{"style":720},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[722],{"type":567,"value":723},"/**\n",{"type":562,"tag":593,"props":725,"children":726},{"class":595,"line":605},[727,732,738,744,749,755,760],{"type":562,"tag":593,"props":728,"children":729},{"style":720},[730],{"type":567,"value":731}," * ",{"type":562,"tag":593,"props":733,"children":735},{"style":734},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[736],{"type":567,"value":737},"@",{"type":562,"tag":593,"props":739,"children":741},{"style":740},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[742],{"type":567,"value":743},"param",{"type":562,"tag":593,"props":745,"children":746},{"style":734},[747],{"type":567,"value":748}," {",{"type":562,"tag":593,"props":750,"children":752},{"style":751},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[753],{"type":567,"value":754},"TreeNode",{"type":562,"tag":593,"props":756,"children":757},{"style":734},[758],{"type":567,"value":759},"}",{"type":562,"tag":593,"props":761,"children":763},{"style":762},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[764],{"type":567,"value":765}," root\n",{"type":562,"tag":593,"props":767,"children":769},{"class":595,"line":768},3,[770,774,778,783,787,792],{"type":562,"tag":593,"props":771,"children":772},{"style":720},[773],{"type":567,"value":731},{"type":562,"tag":593,"props":775,"children":776},{"style":734},[777],{"type":567,"value":737},{"type":562,"tag":593,"props":779,"children":780},{"style":740},[781],{"type":567,"value":782},"return",{"type":562,"tag":593,"props":784,"children":785},{"style":734},[786],{"type":567,"value":748},{"type":562,"tag":593,"props":788,"children":789},{"style":751},[790],{"type":567,"value":791},"number[][]",{"type":562,"tag":593,"props":793,"children":794},{"style":734},[795],{"type":567,"value":796},"}\n",{"type":562,"tag":593,"props":798,"children":800},{"class":595,"line":799},4,[801],{"type":562,"tag":593,"props":802,"children":803},{"style":720},[804],{"type":567,"value":805}," */\n",{"type":562,"tag":593,"props":807,"children":809},{"class":595,"line":808},5,[810,816,822,827,832,837,841,846],{"type":562,"tag":593,"props":811,"children":813},{"style":812},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[814],{"type":567,"value":815},"var",{"type":562,"tag":593,"props":817,"children":819},{"style":818},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[820],{"type":567,"value":821}," levelOrder",{"type":562,"tag":593,"props":823,"children":824},{"style":734},[825],{"type":567,"value":826}," =",{"type":562,"tag":593,"props":828,"children":829},{"style":812},[830],{"type":567,"value":831}," function",{"type":562,"tag":593,"props":833,"children":834},{"style":734},[835],{"type":567,"value":836}," (",{"type":562,"tag":593,"props":838,"children":839},{"style":762},[840],{"type":567,"value":559},{"type":562,"tag":593,"props":842,"children":843},{"style":734},[844],{"type":567,"value":845},")",{"type":562,"tag":593,"props":847,"children":848},{"style":734},[849],{"type":567,"value":850}," {\n",{"type":562,"tag":593,"props":852,"children":854},{"class":595,"line":853},6,[855,860,864,869,873,877,882],{"type":562,"tag":593,"props":856,"children":857},{"style":740},[858],{"type":567,"value":859},"  if",{"type":562,"tag":593,"props":861,"children":862},{"style":734},[863],{"type":567,"value":836},{"type":562,"tag":593,"props":865,"children":866},{"style":812},[867],{"type":567,"value":868},"!",{"type":562,"tag":593,"props":870,"children":871},{"style":762},[872],{"type":567,"value":559},{"type":562,"tag":593,"props":874,"children":875},{"style":734},[876],{"type":567,"value":845},{"type":562,"tag":593,"props":878,"children":879},{"style":740},[880],{"type":567,"value":881}," return",{"type":562,"tag":593,"props":883,"children":884},{"style":734},[885],{"type":567,"value":886}," [];\n",{"type":562,"tag":593,"props":888,"children":890},{"class":595,"line":889},7,[891,896,901,905],{"type":562,"tag":593,"props":892,"children":893},{"style":812},[894],{"type":567,"value":895},"  let",{"type":562,"tag":593,"props":897,"children":898},{"style":762},[899],{"type":567,"value":900}," res",{"type":562,"tag":593,"props":902,"children":903},{"style":734},[904],{"type":567,"value":826},{"type":562,"tag":593,"props":906,"children":907},{"style":734},[908],{"type":567,"value":886},{"type":562,"tag":593,"props":910,"children":912},{"class":595,"line":911},8,[913,917,922,926,931,935],{"type":562,"tag":593,"props":914,"children":915},{"style":812},[916],{"type":567,"value":895},{"type":562,"tag":593,"props":918,"children":919},{"style":762},[920],{"type":567,"value":921}," queue",{"type":562,"tag":593,"props":923,"children":924},{"style":734},[925],{"type":567,"value":826},{"type":562,"tag":593,"props":927,"children":928},{"style":734},[929],{"type":567,"value":930}," [",{"type":562,"tag":593,"props":932,"children":933},{"style":762},[934],{"type":567,"value":559},{"type":562,"tag":593,"props":936,"children":937},{"style":734},[938],{"type":567,"value":939},"];\n",{"type":562,"tag":593,"props":941,"children":943},{"class":595,"line":942},9,[944,949,953,958,963,969,973],{"type":562,"tag":593,"props":945,"children":946},{"style":740},[947],{"type":567,"value":948},"  while",{"type":562,"tag":593,"props":950,"children":951},{"style":734},[952],{"type":567,"value":836},{"type":562,"tag":593,"props":954,"children":955},{"style":762},[956],{"type":567,"value":957},"queue",{"type":562,"tag":593,"props":959,"children":960},{"style":734},[961],{"type":567,"value":962},".",{"type":562,"tag":593,"props":964,"children":966},{"style":965},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[967],{"type":567,"value":968},"length",{"type":562,"tag":593,"props":970,"children":971},{"style":734},[972],{"type":567,"value":845},{"type":562,"tag":593,"props":974,"children":975},{"style":734},[976],{"type":567,"value":850},{"type":562,"tag":593,"props":978,"children":980},{"class":595,"line":979},10,[981,986,991,995,999,1003,1007],{"type":562,"tag":593,"props":982,"children":983},{"style":812},[984],{"type":567,"value":985},"    let",{"type":562,"tag":593,"props":987,"children":988},{"style":762},[989],{"type":567,"value":990}," len",{"type":562,"tag":593,"props":992,"children":993},{"style":734},[994],{"type":567,"value":826},{"type":562,"tag":593,"props":996,"children":997},{"style":762},[998],{"type":567,"value":921},{"type":562,"tag":593,"props":1000,"children":1001},{"style":734},[1002],{"type":567,"value":962},{"type":562,"tag":593,"props":1004,"children":1005},{"style":965},[1006],{"type":567,"value":968},{"type":562,"tag":593,"props":1008,"children":1009},{"style":734},[1010],{"type":567,"value":1011},";\n",{"type":562,"tag":593,"props":1013,"children":1015},{"class":595,"line":1014},11,[1016,1020,1025,1029],{"type":562,"tag":593,"props":1017,"children":1018},{"style":812},[1019],{"type":567,"value":985},{"type":562,"tag":593,"props":1021,"children":1022},{"style":762},[1023],{"type":567,"value":1024}," level",{"type":562,"tag":593,"props":1026,"children":1027},{"style":734},[1028],{"type":567,"value":826},{"type":562,"tag":593,"props":1030,"children":1031},{"style":734},[1032],{"type":567,"value":886},{"type":562,"tag":593,"props":1034,"children":1036},{"class":595,"line":1035},12,[1037,1042,1046,1051,1056,1060,1066,1071,1075,1080,1084,1088,1092,1097,1101],{"type":562,"tag":593,"props":1038,"children":1039},{"style":740},[1040],{"type":567,"value":1041},"    for",{"type":562,"tag":593,"props":1043,"children":1044},{"style":734},[1045],{"type":567,"value":836},{"type":562,"tag":593,"props":1047,"children":1048},{"style":812},[1049],{"type":567,"value":1050},"let",{"type":562,"tag":593,"props":1052,"children":1053},{"style":762},[1054],{"type":567,"value":1055}," i",{"type":562,"tag":593,"props":1057,"children":1058},{"style":734},[1059],{"type":567,"value":826},{"type":562,"tag":593,"props":1061,"children":1063},{"style":1062},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1064],{"type":567,"value":1065}," 0",{"type":562,"tag":593,"props":1067,"children":1068},{"style":734},[1069],{"type":567,"value":1070},";",{"type":562,"tag":593,"props":1072,"children":1073},{"style":762},[1074],{"type":567,"value":1055},{"type":562,"tag":593,"props":1076,"children":1077},{"style":734},[1078],{"type":567,"value":1079}," \u003C",{"type":562,"tag":593,"props":1081,"children":1082},{"style":762},[1083],{"type":567,"value":990},{"type":562,"tag":593,"props":1085,"children":1086},{"style":734},[1087],{"type":567,"value":1070},{"type":562,"tag":593,"props":1089,"children":1090},{"style":762},[1091],{"type":567,"value":1055},{"type":562,"tag":593,"props":1093,"children":1094},{"style":812},[1095],{"type":567,"value":1096},"++",{"type":562,"tag":593,"props":1098,"children":1099},{"style":734},[1100],{"type":567,"value":845},{"type":562,"tag":593,"props":1102,"children":1103},{"style":734},[1104],{"type":567,"value":850},{"type":562,"tag":593,"props":1106,"children":1108},{"class":595,"line":1107},13,[1109,1114,1119,1123,1127,1131,1136],{"type":562,"tag":593,"props":1110,"children":1111},{"style":812},[1112],{"type":567,"value":1113},"      let",{"type":562,"tag":593,"props":1115,"children":1116},{"style":762},[1117],{"type":567,"value":1118}," node",{"type":562,"tag":593,"props":1120,"children":1121},{"style":734},[1122],{"type":567,"value":826},{"type":562,"tag":593,"props":1124,"children":1125},{"style":762},[1126],{"type":567,"value":921},{"type":562,"tag":593,"props":1128,"children":1129},{"style":734},[1130],{"type":567,"value":962},{"type":562,"tag":593,"props":1132,"children":1133},{"style":818},[1134],{"type":567,"value":1135},"shift",{"type":562,"tag":593,"props":1137,"children":1138},{"style":734},[1139],{"type":567,"value":1140},"();\n",{"type":562,"tag":593,"props":1142,"children":1144},{"class":595,"line":1143},14,[1145,1150,1154,1159,1164,1169,1173,1178],{"type":562,"tag":593,"props":1146,"children":1147},{"style":762},[1148],{"type":567,"value":1149},"      level",{"type":562,"tag":593,"props":1151,"children":1152},{"style":734},[1153],{"type":567,"value":962},{"type":562,"tag":593,"props":1155,"children":1156},{"style":818},[1157],{"type":567,"value":1158},"push",{"type":562,"tag":593,"props":1160,"children":1161},{"style":734},[1162],{"type":567,"value":1163},"(",{"type":562,"tag":593,"props":1165,"children":1166},{"style":762},[1167],{"type":567,"value":1168},"node",{"type":562,"tag":593,"props":1170,"children":1171},{"style":734},[1172],{"type":567,"value":962},{"type":562,"tag":593,"props":1174,"children":1175},{"style":762},[1176],{"type":567,"value":1177},"val",{"type":562,"tag":593,"props":1179,"children":1180},{"style":734},[1181],{"type":567,"value":1182},");\n",{"type":562,"tag":593,"props":1184,"children":1186},{"class":595,"line":1185},15,[1187,1192,1196,1200,1204,1209,1213,1217,1221,1225,1229,1233,1237,1241],{"type":562,"tag":593,"props":1188,"children":1189},{"style":740},[1190],{"type":567,"value":1191},"      if",{"type":562,"tag":593,"props":1193,"children":1194},{"style":734},[1195],{"type":567,"value":836},{"type":562,"tag":593,"props":1197,"children":1198},{"style":762},[1199],{"type":567,"value":1168},{"type":562,"tag":593,"props":1201,"children":1202},{"style":734},[1203],{"type":567,"value":962},{"type":562,"tag":593,"props":1205,"children":1206},{"style":762},[1207],{"type":567,"value":1208},"left",{"type":562,"tag":593,"props":1210,"children":1211},{"style":734},[1212],{"type":567,"value":845},{"type":562,"tag":593,"props":1214,"children":1215},{"style":762},[1216],{"type":567,"value":921},{"type":562,"tag":593,"props":1218,"children":1219},{"style":734},[1220],{"type":567,"value":962},{"type":562,"tag":593,"props":1222,"children":1223},{"style":818},[1224],{"type":567,"value":1158},{"type":562,"tag":593,"props":1226,"children":1227},{"style":734},[1228],{"type":567,"value":1163},{"type":562,"tag":593,"props":1230,"children":1231},{"style":762},[1232],{"type":567,"value":1168},{"type":562,"tag":593,"props":1234,"children":1235},{"style":734},[1236],{"type":567,"value":962},{"type":562,"tag":593,"props":1238,"children":1239},{"style":762},[1240],{"type":567,"value":1208},{"type":562,"tag":593,"props":1242,"children":1243},{"style":734},[1244],{"type":567,"value":1182},{"type":562,"tag":593,"props":1246,"children":1248},{"class":595,"line":1247},16,[1249,1253,1257,1261,1265,1270,1274,1278,1282,1286,1290,1294,1298,1302],{"type":562,"tag":593,"props":1250,"children":1251},{"style":740},[1252],{"type":567,"value":1191},{"type":562,"tag":593,"props":1254,"children":1255},{"style":734},[1256],{"type":567,"value":836},{"type":562,"tag":593,"props":1258,"children":1259},{"style":762},[1260],{"type":567,"value":1168},{"type":562,"tag":593,"props":1262,"children":1263},{"style":734},[1264],{"type":567,"value":962},{"type":562,"tag":593,"props":1266,"children":1267},{"style":762},[1268],{"type":567,"value":1269},"right",{"type":562,"tag":593,"props":1271,"children":1272},{"style":734},[1273],{"type":567,"value":845},{"type":562,"tag":593,"props":1275,"children":1276},{"style":762},[1277],{"type":567,"value":921},{"type":562,"tag":593,"props":1279,"children":1280},{"style":734},[1281],{"type":567,"value":962},{"type":562,"tag":593,"props":1283,"children":1284},{"style":818},[1285],{"type":567,"value":1158},{"type":562,"tag":593,"props":1287,"children":1288},{"style":734},[1289],{"type":567,"value":1163},{"type":562,"tag":593,"props":1291,"children":1292},{"style":762},[1293],{"type":567,"value":1168},{"type":562,"tag":593,"props":1295,"children":1296},{"style":734},[1297],{"type":567,"value":962},{"type":562,"tag":593,"props":1299,"children":1300},{"style":762},[1301],{"type":567,"value":1269},{"type":562,"tag":593,"props":1303,"children":1304},{"style":734},[1305],{"type":567,"value":1182},{"type":562,"tag":593,"props":1307,"children":1309},{"class":595,"line":1308},17,[1310],{"type":562,"tag":593,"props":1311,"children":1312},{"style":734},[1313],{"type":567,"value":1314},"    }\n",{"type":562,"tag":593,"props":1316,"children":1318},{"class":595,"line":1317},18,[1319,1324,1328,1332,1336,1341],{"type":562,"tag":593,"props":1320,"children":1321},{"style":762},[1322],{"type":567,"value":1323},"    res",{"type":562,"tag":593,"props":1325,"children":1326},{"style":734},[1327],{"type":567,"value":962},{"type":562,"tag":593,"props":1329,"children":1330},{"style":818},[1331],{"type":567,"value":1158},{"type":562,"tag":593,"props":1333,"children":1334},{"style":734},[1335],{"type":567,"value":1163},{"type":562,"tag":593,"props":1337,"children":1338},{"style":762},[1339],{"type":567,"value":1340},"level",{"type":562,"tag":593,"props":1342,"children":1343},{"style":734},[1344],{"type":567,"value":1182},{"type":562,"tag":593,"props":1346,"children":1348},{"class":595,"line":1347},19,[1349],{"type":562,"tag":593,"props":1350,"children":1351},{"style":734},[1352],{"type":567,"value":1353},"  }\n",{"type":562,"tag":593,"props":1355,"children":1357},{"class":595,"line":1356},20,[1358,1363,1367],{"type":562,"tag":593,"props":1359,"children":1360},{"style":740},[1361],{"type":567,"value":1362},"  return",{"type":562,"tag":593,"props":1364,"children":1365},{"style":762},[1366],{"type":567,"value":900},{"type":562,"tag":593,"props":1368,"children":1369},{"style":734},[1370],{"type":567,"value":1011},{"type":562,"tag":593,"props":1372,"children":1374},{"class":595,"line":1373},21,[1375],{"type":562,"tag":593,"props":1376,"children":1377},{"style":734},[1378],{"type":567,"value":1379},"};\n",{"type":562,"tag":1381,"props":1382,"children":1383},"style",{},[1384],{"type":567,"value":1385},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":808,"depth":808,"links":1387},[1388,1389],{"id":691,"depth":605,"text":691},{"id":696,"depth":605,"text":696,"children":1390},[1391],{"id":702,"depth":768,"text":705},"markdown","content:1.algorithm:3.leetcode:3.major:102.binary-tree-level-order-traversal.md","content","1.algorithm/3.leetcode/3.major/102.binary-tree-level-order-traversal.md","md",[1398,1400],{"_path":150,"title":149,"description":1399},"给你一个二叉树的根节点 root ， 检查它是否轴对称。",{"_path":156,"title":155,"description":1401},"给定一个二叉树 root ，返回其最大深度。",1716810725257]