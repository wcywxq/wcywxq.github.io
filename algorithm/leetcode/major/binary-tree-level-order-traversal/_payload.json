[{"data":1,"prerenderedAt":1401},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-tree-level-order-traversal":551,"/algorithm/leetcode/major/binary-tree-level-order-traversal-surround":1396},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":153,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":152,"description":555,"url":556,"body":557,"_type":1391,"_id":1392,"_source":1393,"_file":1394,"_extension":1395},"major",false,"","给你二叉树的根节点 root ，返回其节点值的 层序遍历 。 （即逐层地，从左到右访问所有节点）。","https://leetcode.cn/problems/binary-tree-level-order-traversal",{"type":558,"children":559,"toc":1385},"root",[560,567,572,581,611,616,639,644,667,672,687,693,698,705,1379],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"示例 1：",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":561,"tag":576,"props":577,"children":580},"img",{"alt":578,"src":579},"sample_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.102_sample_1.png",[],{"type":561,"tag":582,"props":583,"children":586},"pre",{"className":584,"code":585,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [3,9,20,null,null,15,7]\n输出：[[3],[9,20],[15,7]]\n",[587],{"type":561,"tag":588,"props":589,"children":590},"code",{"__ignoreMap":554},[591,602],{"type":561,"tag":592,"props":593,"children":596},"span",{"class":594,"line":595},"line",1,[597],{"type":561,"tag":592,"props":598,"children":599},{},[600],{"type":566,"value":601},"输入：root = [3,9,20,null,null,15,7]\n",{"type":561,"tag":592,"props":603,"children":605},{"class":594,"line":604},2,[606],{"type":561,"tag":592,"props":607,"children":608},{},[609],{"type":566,"value":610},"输出：[[3],[9,20],[15,7]]\n",{"type":561,"tag":562,"props":612,"children":613},{},[614],{"type":566,"value":615},"示例 2：",{"type":561,"tag":582,"props":617,"children":619},{"className":584,"code":618,"language":566,"meta":554,"style":554},"输入：root = [1]\n输出：[[1]]\n",[620],{"type":561,"tag":588,"props":621,"children":622},{"__ignoreMap":554},[623,631],{"type":561,"tag":592,"props":624,"children":625},{"class":594,"line":595},[626],{"type":561,"tag":592,"props":627,"children":628},{},[629],{"type":566,"value":630},"输入：root = [1]\n",{"type":561,"tag":592,"props":632,"children":633},{"class":594,"line":604},[634],{"type":561,"tag":592,"props":635,"children":636},{},[637],{"type":566,"value":638},"输出：[[1]]\n",{"type":561,"tag":562,"props":640,"children":641},{},[642],{"type":566,"value":643},"示例 3：",{"type":561,"tag":582,"props":645,"children":647},{"className":584,"code":646,"language":566,"meta":554,"style":554},"输入：root = []\n输出：[]\n",[648],{"type":561,"tag":588,"props":649,"children":650},{"__ignoreMap":554},[651,659],{"type":561,"tag":592,"props":652,"children":653},{"class":594,"line":595},[654],{"type":561,"tag":592,"props":655,"children":656},{},[657],{"type":566,"value":658},"输入：root = []\n",{"type":561,"tag":592,"props":660,"children":661},{"class":594,"line":604},[662],{"type":561,"tag":592,"props":663,"children":664},{},[665],{"type":566,"value":666},"输出：[]\n",{"type":561,"tag":562,"props":668,"children":669},{},[670],{"type":566,"value":671},"提示：",{"type":561,"tag":673,"props":674,"children":675},"ul",{},[676,682],{"type":561,"tag":677,"props":678,"children":679},"li",{},[680],{"type":566,"value":681},"树中节点数目在范围 [0, 2000] 内",{"type":561,"tag":677,"props":683,"children":684},{},[685],{"type":566,"value":686},"-1000 \u003C= Node.val \u003C= 1000",{"type":561,"tag":688,"props":689,"children":691},"h2",{"id":690},"解题思路",[692],{"type":566,"value":690},{"type":561,"tag":688,"props":694,"children":696},{"id":695},"实现",[697],{"type":566,"value":695},{"type":561,"tag":699,"props":700,"children":702},"h3",{"id":701},"深度优先搜索-bfs",[703],{"type":566,"value":704},"深度优先搜索 - bfs",{"type":561,"tag":582,"props":706,"children":710},{"className":707,"code":708,"language":709,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar levelOrder = function (root) {\n  if (!root) return [];\n  let res = [];\n  let queue = [root];\n  while (queue.length) {\n    let len = queue.length;\n    let level = [];\n    for (let i = 0; i \u003C len; i++) {\n      let node = queue.shift();\n      level.push(node.val);\n      if (node.left) queue.push(node.left);\n      if (node.right) queue.push(node.right);\n    }\n    res.push(level);\n  }\n  return res;\n};\n","js",[711],{"type":561,"tag":588,"props":712,"children":713},{"__ignoreMap":554},[714,723,765,796,805,850,886,908,939,976,1011,1032,1104,1140,1182,1244,1305,1314,1344,1353,1370],{"type":561,"tag":592,"props":715,"children":716},{"class":594,"line":595},[717],{"type":561,"tag":592,"props":718,"children":720},{"style":719},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[721],{"type":566,"value":722},"/**\n",{"type":561,"tag":592,"props":724,"children":725},{"class":594,"line":604},[726,731,737,743,748,754,759],{"type":561,"tag":592,"props":727,"children":728},{"style":719},[729],{"type":566,"value":730}," * ",{"type":561,"tag":592,"props":732,"children":734},{"style":733},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[735],{"type":566,"value":736},"@",{"type":561,"tag":592,"props":738,"children":740},{"style":739},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[741],{"type":566,"value":742},"param",{"type":561,"tag":592,"props":744,"children":745},{"style":733},[746],{"type":566,"value":747}," {",{"type":561,"tag":592,"props":749,"children":751},{"style":750},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[752],{"type":566,"value":753},"TreeNode",{"type":561,"tag":592,"props":755,"children":756},{"style":733},[757],{"type":566,"value":758},"}",{"type":561,"tag":592,"props":760,"children":762},{"style":761},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[763],{"type":566,"value":764}," root\n",{"type":561,"tag":592,"props":766,"children":768},{"class":594,"line":767},3,[769,773,777,782,786,791],{"type":561,"tag":592,"props":770,"children":771},{"style":719},[772],{"type":566,"value":730},{"type":561,"tag":592,"props":774,"children":775},{"style":733},[776],{"type":566,"value":736},{"type":561,"tag":592,"props":778,"children":779},{"style":739},[780],{"type":566,"value":781},"return",{"type":561,"tag":592,"props":783,"children":784},{"style":733},[785],{"type":566,"value":747},{"type":561,"tag":592,"props":787,"children":788},{"style":750},[789],{"type":566,"value":790},"number[][]",{"type":561,"tag":592,"props":792,"children":793},{"style":733},[794],{"type":566,"value":795},"}\n",{"type":561,"tag":592,"props":797,"children":799},{"class":594,"line":798},4,[800],{"type":561,"tag":592,"props":801,"children":802},{"style":719},[803],{"type":566,"value":804}," */\n",{"type":561,"tag":592,"props":806,"children":808},{"class":594,"line":807},5,[809,815,821,826,831,836,840,845],{"type":561,"tag":592,"props":810,"children":812},{"style":811},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[813],{"type":566,"value":814},"var",{"type":561,"tag":592,"props":816,"children":818},{"style":817},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[819],{"type":566,"value":820}," levelOrder",{"type":561,"tag":592,"props":822,"children":823},{"style":733},[824],{"type":566,"value":825}," =",{"type":561,"tag":592,"props":827,"children":828},{"style":811},[829],{"type":566,"value":830}," function",{"type":561,"tag":592,"props":832,"children":833},{"style":733},[834],{"type":566,"value":835}," (",{"type":561,"tag":592,"props":837,"children":838},{"style":761},[839],{"type":566,"value":558},{"type":561,"tag":592,"props":841,"children":842},{"style":733},[843],{"type":566,"value":844},")",{"type":561,"tag":592,"props":846,"children":847},{"style":733},[848],{"type":566,"value":849}," {\n",{"type":561,"tag":592,"props":851,"children":853},{"class":594,"line":852},6,[854,859,863,868,872,876,881],{"type":561,"tag":592,"props":855,"children":856},{"style":739},[857],{"type":566,"value":858},"  if",{"type":561,"tag":592,"props":860,"children":861},{"style":733},[862],{"type":566,"value":835},{"type":561,"tag":592,"props":864,"children":865},{"style":811},[866],{"type":566,"value":867},"!",{"type":561,"tag":592,"props":869,"children":870},{"style":761},[871],{"type":566,"value":558},{"type":561,"tag":592,"props":873,"children":874},{"style":733},[875],{"type":566,"value":844},{"type":561,"tag":592,"props":877,"children":878},{"style":739},[879],{"type":566,"value":880}," return",{"type":561,"tag":592,"props":882,"children":883},{"style":733},[884],{"type":566,"value":885}," [];\n",{"type":561,"tag":592,"props":887,"children":889},{"class":594,"line":888},7,[890,895,900,904],{"type":561,"tag":592,"props":891,"children":892},{"style":811},[893],{"type":566,"value":894},"  let",{"type":561,"tag":592,"props":896,"children":897},{"style":761},[898],{"type":566,"value":899}," res",{"type":561,"tag":592,"props":901,"children":902},{"style":733},[903],{"type":566,"value":825},{"type":561,"tag":592,"props":905,"children":906},{"style":733},[907],{"type":566,"value":885},{"type":561,"tag":592,"props":909,"children":911},{"class":594,"line":910},8,[912,916,921,925,930,934],{"type":561,"tag":592,"props":913,"children":914},{"style":811},[915],{"type":566,"value":894},{"type":561,"tag":592,"props":917,"children":918},{"style":761},[919],{"type":566,"value":920}," queue",{"type":561,"tag":592,"props":922,"children":923},{"style":733},[924],{"type":566,"value":825},{"type":561,"tag":592,"props":926,"children":927},{"style":733},[928],{"type":566,"value":929}," [",{"type":561,"tag":592,"props":931,"children":932},{"style":761},[933],{"type":566,"value":558},{"type":561,"tag":592,"props":935,"children":936},{"style":733},[937],{"type":566,"value":938},"];\n",{"type":561,"tag":592,"props":940,"children":942},{"class":594,"line":941},9,[943,948,952,957,962,968,972],{"type":561,"tag":592,"props":944,"children":945},{"style":739},[946],{"type":566,"value":947},"  while",{"type":561,"tag":592,"props":949,"children":950},{"style":733},[951],{"type":566,"value":835},{"type":561,"tag":592,"props":953,"children":954},{"style":761},[955],{"type":566,"value":956},"queue",{"type":561,"tag":592,"props":958,"children":959},{"style":733},[960],{"type":566,"value":961},".",{"type":561,"tag":592,"props":963,"children":965},{"style":964},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[966],{"type":566,"value":967},"length",{"type":561,"tag":592,"props":969,"children":970},{"style":733},[971],{"type":566,"value":844},{"type":561,"tag":592,"props":973,"children":974},{"style":733},[975],{"type":566,"value":849},{"type":561,"tag":592,"props":977,"children":979},{"class":594,"line":978},10,[980,985,990,994,998,1002,1006],{"type":561,"tag":592,"props":981,"children":982},{"style":811},[983],{"type":566,"value":984},"    let",{"type":561,"tag":592,"props":986,"children":987},{"style":761},[988],{"type":566,"value":989}," len",{"type":561,"tag":592,"props":991,"children":992},{"style":733},[993],{"type":566,"value":825},{"type":561,"tag":592,"props":995,"children":996},{"style":761},[997],{"type":566,"value":920},{"type":561,"tag":592,"props":999,"children":1000},{"style":733},[1001],{"type":566,"value":961},{"type":561,"tag":592,"props":1003,"children":1004},{"style":964},[1005],{"type":566,"value":967},{"type":561,"tag":592,"props":1007,"children":1008},{"style":733},[1009],{"type":566,"value":1010},";\n",{"type":561,"tag":592,"props":1012,"children":1014},{"class":594,"line":1013},11,[1015,1019,1024,1028],{"type":561,"tag":592,"props":1016,"children":1017},{"style":811},[1018],{"type":566,"value":984},{"type":561,"tag":592,"props":1020,"children":1021},{"style":761},[1022],{"type":566,"value":1023}," level",{"type":561,"tag":592,"props":1025,"children":1026},{"style":733},[1027],{"type":566,"value":825},{"type":561,"tag":592,"props":1029,"children":1030},{"style":733},[1031],{"type":566,"value":885},{"type":561,"tag":592,"props":1033,"children":1035},{"class":594,"line":1034},12,[1036,1041,1045,1050,1055,1059,1065,1070,1074,1079,1083,1087,1091,1096,1100],{"type":561,"tag":592,"props":1037,"children":1038},{"style":739},[1039],{"type":566,"value":1040},"    for",{"type":561,"tag":592,"props":1042,"children":1043},{"style":733},[1044],{"type":566,"value":835},{"type":561,"tag":592,"props":1046,"children":1047},{"style":811},[1048],{"type":566,"value":1049},"let",{"type":561,"tag":592,"props":1051,"children":1052},{"style":761},[1053],{"type":566,"value":1054}," i",{"type":561,"tag":592,"props":1056,"children":1057},{"style":733},[1058],{"type":566,"value":825},{"type":561,"tag":592,"props":1060,"children":1062},{"style":1061},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1063],{"type":566,"value":1064}," 0",{"type":561,"tag":592,"props":1066,"children":1067},{"style":733},[1068],{"type":566,"value":1069},";",{"type":561,"tag":592,"props":1071,"children":1072},{"style":761},[1073],{"type":566,"value":1054},{"type":561,"tag":592,"props":1075,"children":1076},{"style":733},[1077],{"type":566,"value":1078}," \u003C",{"type":561,"tag":592,"props":1080,"children":1081},{"style":761},[1082],{"type":566,"value":989},{"type":561,"tag":592,"props":1084,"children":1085},{"style":733},[1086],{"type":566,"value":1069},{"type":561,"tag":592,"props":1088,"children":1089},{"style":761},[1090],{"type":566,"value":1054},{"type":561,"tag":592,"props":1092,"children":1093},{"style":811},[1094],{"type":566,"value":1095},"++",{"type":561,"tag":592,"props":1097,"children":1098},{"style":733},[1099],{"type":566,"value":844},{"type":561,"tag":592,"props":1101,"children":1102},{"style":733},[1103],{"type":566,"value":849},{"type":561,"tag":592,"props":1105,"children":1107},{"class":594,"line":1106},13,[1108,1113,1118,1122,1126,1130,1135],{"type":561,"tag":592,"props":1109,"children":1110},{"style":811},[1111],{"type":566,"value":1112},"      let",{"type":561,"tag":592,"props":1114,"children":1115},{"style":761},[1116],{"type":566,"value":1117}," node",{"type":561,"tag":592,"props":1119,"children":1120},{"style":733},[1121],{"type":566,"value":825},{"type":561,"tag":592,"props":1123,"children":1124},{"style":761},[1125],{"type":566,"value":920},{"type":561,"tag":592,"props":1127,"children":1128},{"style":733},[1129],{"type":566,"value":961},{"type":561,"tag":592,"props":1131,"children":1132},{"style":817},[1133],{"type":566,"value":1134},"shift",{"type":561,"tag":592,"props":1136,"children":1137},{"style":733},[1138],{"type":566,"value":1139},"();\n",{"type":561,"tag":592,"props":1141,"children":1143},{"class":594,"line":1142},14,[1144,1149,1153,1158,1163,1168,1172,1177],{"type":561,"tag":592,"props":1145,"children":1146},{"style":761},[1147],{"type":566,"value":1148},"      level",{"type":561,"tag":592,"props":1150,"children":1151},{"style":733},[1152],{"type":566,"value":961},{"type":561,"tag":592,"props":1154,"children":1155},{"style":817},[1156],{"type":566,"value":1157},"push",{"type":561,"tag":592,"props":1159,"children":1160},{"style":733},[1161],{"type":566,"value":1162},"(",{"type":561,"tag":592,"props":1164,"children":1165},{"style":761},[1166],{"type":566,"value":1167},"node",{"type":561,"tag":592,"props":1169,"children":1170},{"style":733},[1171],{"type":566,"value":961},{"type":561,"tag":592,"props":1173,"children":1174},{"style":761},[1175],{"type":566,"value":1176},"val",{"type":561,"tag":592,"props":1178,"children":1179},{"style":733},[1180],{"type":566,"value":1181},");\n",{"type":561,"tag":592,"props":1183,"children":1185},{"class":594,"line":1184},15,[1186,1191,1195,1199,1203,1208,1212,1216,1220,1224,1228,1232,1236,1240],{"type":561,"tag":592,"props":1187,"children":1188},{"style":739},[1189],{"type":566,"value":1190},"      if",{"type":561,"tag":592,"props":1192,"children":1193},{"style":733},[1194],{"type":566,"value":835},{"type":561,"tag":592,"props":1196,"children":1197},{"style":761},[1198],{"type":566,"value":1167},{"type":561,"tag":592,"props":1200,"children":1201},{"style":733},[1202],{"type":566,"value":961},{"type":561,"tag":592,"props":1204,"children":1205},{"style":761},[1206],{"type":566,"value":1207},"left",{"type":561,"tag":592,"props":1209,"children":1210},{"style":733},[1211],{"type":566,"value":844},{"type":561,"tag":592,"props":1213,"children":1214},{"style":761},[1215],{"type":566,"value":920},{"type":561,"tag":592,"props":1217,"children":1218},{"style":733},[1219],{"type":566,"value":961},{"type":561,"tag":592,"props":1221,"children":1222},{"style":817},[1223],{"type":566,"value":1157},{"type":561,"tag":592,"props":1225,"children":1226},{"style":733},[1227],{"type":566,"value":1162},{"type":561,"tag":592,"props":1229,"children":1230},{"style":761},[1231],{"type":566,"value":1167},{"type":561,"tag":592,"props":1233,"children":1234},{"style":733},[1235],{"type":566,"value":961},{"type":561,"tag":592,"props":1237,"children":1238},{"style":761},[1239],{"type":566,"value":1207},{"type":561,"tag":592,"props":1241,"children":1242},{"style":733},[1243],{"type":566,"value":1181},{"type":561,"tag":592,"props":1245,"children":1247},{"class":594,"line":1246},16,[1248,1252,1256,1260,1264,1269,1273,1277,1281,1285,1289,1293,1297,1301],{"type":561,"tag":592,"props":1249,"children":1250},{"style":739},[1251],{"type":566,"value":1190},{"type":561,"tag":592,"props":1253,"children":1254},{"style":733},[1255],{"type":566,"value":835},{"type":561,"tag":592,"props":1257,"children":1258},{"style":761},[1259],{"type":566,"value":1167},{"type":561,"tag":592,"props":1261,"children":1262},{"style":733},[1263],{"type":566,"value":961},{"type":561,"tag":592,"props":1265,"children":1266},{"style":761},[1267],{"type":566,"value":1268},"right",{"type":561,"tag":592,"props":1270,"children":1271},{"style":733},[1272],{"type":566,"value":844},{"type":561,"tag":592,"props":1274,"children":1275},{"style":761},[1276],{"type":566,"value":920},{"type":561,"tag":592,"props":1278,"children":1279},{"style":733},[1280],{"type":566,"value":961},{"type":561,"tag":592,"props":1282,"children":1283},{"style":817},[1284],{"type":566,"value":1157},{"type":561,"tag":592,"props":1286,"children":1287},{"style":733},[1288],{"type":566,"value":1162},{"type":561,"tag":592,"props":1290,"children":1291},{"style":761},[1292],{"type":566,"value":1167},{"type":561,"tag":592,"props":1294,"children":1295},{"style":733},[1296],{"type":566,"value":961},{"type":561,"tag":592,"props":1298,"children":1299},{"style":761},[1300],{"type":566,"value":1268},{"type":561,"tag":592,"props":1302,"children":1303},{"style":733},[1304],{"type":566,"value":1181},{"type":561,"tag":592,"props":1306,"children":1308},{"class":594,"line":1307},17,[1309],{"type":561,"tag":592,"props":1310,"children":1311},{"style":733},[1312],{"type":566,"value":1313},"    }\n",{"type":561,"tag":592,"props":1315,"children":1317},{"class":594,"line":1316},18,[1318,1323,1327,1331,1335,1340],{"type":561,"tag":592,"props":1319,"children":1320},{"style":761},[1321],{"type":566,"value":1322},"    res",{"type":561,"tag":592,"props":1324,"children":1325},{"style":733},[1326],{"type":566,"value":961},{"type":561,"tag":592,"props":1328,"children":1329},{"style":817},[1330],{"type":566,"value":1157},{"type":561,"tag":592,"props":1332,"children":1333},{"style":733},[1334],{"type":566,"value":1162},{"type":561,"tag":592,"props":1336,"children":1337},{"style":761},[1338],{"type":566,"value":1339},"level",{"type":561,"tag":592,"props":1341,"children":1342},{"style":733},[1343],{"type":566,"value":1181},{"type":561,"tag":592,"props":1345,"children":1347},{"class":594,"line":1346},19,[1348],{"type":561,"tag":592,"props":1349,"children":1350},{"style":733},[1351],{"type":566,"value":1352},"  }\n",{"type":561,"tag":592,"props":1354,"children":1356},{"class":594,"line":1355},20,[1357,1362,1366],{"type":561,"tag":592,"props":1358,"children":1359},{"style":739},[1360],{"type":566,"value":1361},"  return",{"type":561,"tag":592,"props":1363,"children":1364},{"style":761},[1365],{"type":566,"value":899},{"type":561,"tag":592,"props":1367,"children":1368},{"style":733},[1369],{"type":566,"value":1010},{"type":561,"tag":592,"props":1371,"children":1373},{"class":594,"line":1372},21,[1374],{"type":561,"tag":592,"props":1375,"children":1376},{"style":733},[1377],{"type":566,"value":1378},"};\n",{"type":561,"tag":1380,"props":1381,"children":1382},"style",{},[1383],{"type":566,"value":1384},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":807,"depth":807,"links":1386},[1387,1388],{"id":690,"depth":604,"text":690},{"id":695,"depth":604,"text":695,"children":1389},[1390],{"id":701,"depth":767,"text":704},"markdown","content:1.algorithm:3.leetcode:3.major:102.binary-tree-level-order-traversal.md","content","1.algorithm/3.leetcode/3.major/102.binary-tree-level-order-traversal.md","md",[1397,1399],{"_path":150,"title":149,"description":1398},"给你一个二叉树的根节点 root ， 检查它是否轴对称。",{"_path":156,"title":155,"description":1400},"给定一个二叉树 root ，返回其最大深度。",1715092155456]