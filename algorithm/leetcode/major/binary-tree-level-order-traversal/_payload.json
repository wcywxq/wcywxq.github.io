[{"data":1,"prerenderedAt":1374},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-tree-level-order-traversal":524,"/algorithm/leetcode/major/binary-tree-level-order-traversal-surround":1369},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":153,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":152,"description":528,"url":529,"body":530,"_type":1364,"_id":1365,"_source":1366,"_file":1367,"_extension":1368},"major",false,"","给你二叉树的根节点 root ，返回其节点值的 层序遍历 。 （即逐层地，从左到右访问所有节点）。","https://leetcode.cn/problems/binary-tree-level-order-traversal",{"type":531,"children":532,"toc":1358},"root",[533,540,545,554,584,589,612,617,640,645,660,666,671,678,1352],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"示例 1：",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":534,"tag":549,"props":550,"children":553},"img",{"alt":551,"src":552},"sample_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.102_sample_1.png",[],{"type":534,"tag":555,"props":556,"children":559},"pre",{"className":557,"code":558,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [3,9,20,null,null,15,7]\n输出：[[3],[9,20],[15,7]]\n",[560],{"type":534,"tag":561,"props":562,"children":563},"code",{"__ignoreMap":527},[564,575],{"type":534,"tag":565,"props":566,"children":569},"span",{"class":567,"line":568},"line",1,[570],{"type":534,"tag":565,"props":571,"children":572},{},[573],{"type":539,"value":574},"输入：root = [3,9,20,null,null,15,7]\n",{"type":534,"tag":565,"props":576,"children":578},{"class":567,"line":577},2,[579],{"type":534,"tag":565,"props":580,"children":581},{},[582],{"type":539,"value":583},"输出：[[3],[9,20],[15,7]]\n",{"type":534,"tag":535,"props":585,"children":586},{},[587],{"type":539,"value":588},"示例 2：",{"type":534,"tag":555,"props":590,"children":592},{"className":557,"code":591,"language":539,"meta":527,"style":527},"输入：root = [1]\n输出：[[1]]\n",[593],{"type":534,"tag":561,"props":594,"children":595},{"__ignoreMap":527},[596,604],{"type":534,"tag":565,"props":597,"children":598},{"class":567,"line":568},[599],{"type":534,"tag":565,"props":600,"children":601},{},[602],{"type":539,"value":603},"输入：root = [1]\n",{"type":534,"tag":565,"props":605,"children":606},{"class":567,"line":577},[607],{"type":534,"tag":565,"props":608,"children":609},{},[610],{"type":539,"value":611},"输出：[[1]]\n",{"type":534,"tag":535,"props":613,"children":614},{},[615],{"type":539,"value":616},"示例 3：",{"type":534,"tag":555,"props":618,"children":620},{"className":557,"code":619,"language":539,"meta":527,"style":527},"输入：root = []\n输出：[]\n",[621],{"type":534,"tag":561,"props":622,"children":623},{"__ignoreMap":527},[624,632],{"type":534,"tag":565,"props":625,"children":626},{"class":567,"line":568},[627],{"type":534,"tag":565,"props":628,"children":629},{},[630],{"type":539,"value":631},"输入：root = []\n",{"type":534,"tag":565,"props":633,"children":634},{"class":567,"line":577},[635],{"type":534,"tag":565,"props":636,"children":637},{},[638],{"type":539,"value":639},"输出：[]\n",{"type":534,"tag":535,"props":641,"children":642},{},[643],{"type":539,"value":644},"提示：",{"type":534,"tag":646,"props":647,"children":648},"ul",{},[649,655],{"type":534,"tag":650,"props":651,"children":652},"li",{},[653],{"type":539,"value":654},"树中节点数目在范围 [0, 2000] 内",{"type":534,"tag":650,"props":656,"children":657},{},[658],{"type":539,"value":659},"-1000 \u003C= Node.val \u003C= 1000",{"type":534,"tag":661,"props":662,"children":664},"h2",{"id":663},"解题思路",[665],{"type":539,"value":663},{"type":534,"tag":661,"props":667,"children":669},{"id":668},"实现",[670],{"type":539,"value":668},{"type":534,"tag":672,"props":673,"children":675},"h3",{"id":674},"深度优先搜索-bfs",[676],{"type":539,"value":677},"深度优先搜索 - bfs",{"type":534,"tag":555,"props":679,"children":683},{"className":680,"code":681,"language":682,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar levelOrder = function (root) {\n  if (!root) return [];\n  let res = [];\n  let queue = [root];\n  while (queue.length) {\n    let len = queue.length;\n    let level = [];\n    for (let i = 0; i \u003C len; i++) {\n      let node = queue.shift();\n      level.push(node.val);\n      if (node.left) queue.push(node.left);\n      if (node.right) queue.push(node.right);\n    }\n    res.push(level);\n  }\n  return res;\n};\n","js",[684],{"type":534,"tag":561,"props":685,"children":686},{"__ignoreMap":527},[687,696,738,769,778,823,859,881,912,949,984,1005,1077,1113,1155,1217,1278,1287,1317,1326,1343],{"type":534,"tag":565,"props":688,"children":689},{"class":567,"line":568},[690],{"type":534,"tag":565,"props":691,"children":693},{"style":692},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[694],{"type":539,"value":695},"/**\n",{"type":534,"tag":565,"props":697,"children":698},{"class":567,"line":577},[699,704,710,716,721,727,732],{"type":534,"tag":565,"props":700,"children":701},{"style":692},[702],{"type":539,"value":703}," * ",{"type":534,"tag":565,"props":705,"children":707},{"style":706},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[708],{"type":539,"value":709},"@",{"type":534,"tag":565,"props":711,"children":713},{"style":712},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[714],{"type":539,"value":715},"param",{"type":534,"tag":565,"props":717,"children":718},{"style":706},[719],{"type":539,"value":720}," {",{"type":534,"tag":565,"props":722,"children":724},{"style":723},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[725],{"type":539,"value":726},"TreeNode",{"type":534,"tag":565,"props":728,"children":729},{"style":706},[730],{"type":539,"value":731},"}",{"type":534,"tag":565,"props":733,"children":735},{"style":734},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[736],{"type":539,"value":737}," root\n",{"type":534,"tag":565,"props":739,"children":741},{"class":567,"line":740},3,[742,746,750,755,759,764],{"type":534,"tag":565,"props":743,"children":744},{"style":692},[745],{"type":539,"value":703},{"type":534,"tag":565,"props":747,"children":748},{"style":706},[749],{"type":539,"value":709},{"type":534,"tag":565,"props":751,"children":752},{"style":712},[753],{"type":539,"value":754},"return",{"type":534,"tag":565,"props":756,"children":757},{"style":706},[758],{"type":539,"value":720},{"type":534,"tag":565,"props":760,"children":761},{"style":723},[762],{"type":539,"value":763},"number[][]",{"type":534,"tag":565,"props":765,"children":766},{"style":706},[767],{"type":539,"value":768},"}\n",{"type":534,"tag":565,"props":770,"children":772},{"class":567,"line":771},4,[773],{"type":534,"tag":565,"props":774,"children":775},{"style":692},[776],{"type":539,"value":777}," */\n",{"type":534,"tag":565,"props":779,"children":781},{"class":567,"line":780},5,[782,788,794,799,804,809,813,818],{"type":534,"tag":565,"props":783,"children":785},{"style":784},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[786],{"type":539,"value":787},"var",{"type":534,"tag":565,"props":789,"children":791},{"style":790},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[792],{"type":539,"value":793}," levelOrder",{"type":534,"tag":565,"props":795,"children":796},{"style":706},[797],{"type":539,"value":798}," =",{"type":534,"tag":565,"props":800,"children":801},{"style":784},[802],{"type":539,"value":803}," function",{"type":534,"tag":565,"props":805,"children":806},{"style":706},[807],{"type":539,"value":808}," (",{"type":534,"tag":565,"props":810,"children":811},{"style":734},[812],{"type":539,"value":531},{"type":534,"tag":565,"props":814,"children":815},{"style":706},[816],{"type":539,"value":817},")",{"type":534,"tag":565,"props":819,"children":820},{"style":706},[821],{"type":539,"value":822}," {\n",{"type":534,"tag":565,"props":824,"children":826},{"class":567,"line":825},6,[827,832,836,841,845,849,854],{"type":534,"tag":565,"props":828,"children":829},{"style":712},[830],{"type":539,"value":831},"  if",{"type":534,"tag":565,"props":833,"children":834},{"style":706},[835],{"type":539,"value":808},{"type":534,"tag":565,"props":837,"children":838},{"style":784},[839],{"type":539,"value":840},"!",{"type":534,"tag":565,"props":842,"children":843},{"style":734},[844],{"type":539,"value":531},{"type":534,"tag":565,"props":846,"children":847},{"style":706},[848],{"type":539,"value":817},{"type":534,"tag":565,"props":850,"children":851},{"style":712},[852],{"type":539,"value":853}," return",{"type":534,"tag":565,"props":855,"children":856},{"style":706},[857],{"type":539,"value":858}," [];\n",{"type":534,"tag":565,"props":860,"children":862},{"class":567,"line":861},7,[863,868,873,877],{"type":534,"tag":565,"props":864,"children":865},{"style":784},[866],{"type":539,"value":867},"  let",{"type":534,"tag":565,"props":869,"children":870},{"style":734},[871],{"type":539,"value":872}," res",{"type":534,"tag":565,"props":874,"children":875},{"style":706},[876],{"type":539,"value":798},{"type":534,"tag":565,"props":878,"children":879},{"style":706},[880],{"type":539,"value":858},{"type":534,"tag":565,"props":882,"children":884},{"class":567,"line":883},8,[885,889,894,898,903,907],{"type":534,"tag":565,"props":886,"children":887},{"style":784},[888],{"type":539,"value":867},{"type":534,"tag":565,"props":890,"children":891},{"style":734},[892],{"type":539,"value":893}," queue",{"type":534,"tag":565,"props":895,"children":896},{"style":706},[897],{"type":539,"value":798},{"type":534,"tag":565,"props":899,"children":900},{"style":706},[901],{"type":539,"value":902}," [",{"type":534,"tag":565,"props":904,"children":905},{"style":734},[906],{"type":539,"value":531},{"type":534,"tag":565,"props":908,"children":909},{"style":706},[910],{"type":539,"value":911},"];\n",{"type":534,"tag":565,"props":913,"children":915},{"class":567,"line":914},9,[916,921,925,930,935,941,945],{"type":534,"tag":565,"props":917,"children":918},{"style":712},[919],{"type":539,"value":920},"  while",{"type":534,"tag":565,"props":922,"children":923},{"style":706},[924],{"type":539,"value":808},{"type":534,"tag":565,"props":926,"children":927},{"style":734},[928],{"type":539,"value":929},"queue",{"type":534,"tag":565,"props":931,"children":932},{"style":706},[933],{"type":539,"value":934},".",{"type":534,"tag":565,"props":936,"children":938},{"style":937},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[939],{"type":539,"value":940},"length",{"type":534,"tag":565,"props":942,"children":943},{"style":706},[944],{"type":539,"value":817},{"type":534,"tag":565,"props":946,"children":947},{"style":706},[948],{"type":539,"value":822},{"type":534,"tag":565,"props":950,"children":952},{"class":567,"line":951},10,[953,958,963,967,971,975,979],{"type":534,"tag":565,"props":954,"children":955},{"style":784},[956],{"type":539,"value":957},"    let",{"type":534,"tag":565,"props":959,"children":960},{"style":734},[961],{"type":539,"value":962}," len",{"type":534,"tag":565,"props":964,"children":965},{"style":706},[966],{"type":539,"value":798},{"type":534,"tag":565,"props":968,"children":969},{"style":734},[970],{"type":539,"value":893},{"type":534,"tag":565,"props":972,"children":973},{"style":706},[974],{"type":539,"value":934},{"type":534,"tag":565,"props":976,"children":977},{"style":937},[978],{"type":539,"value":940},{"type":534,"tag":565,"props":980,"children":981},{"style":706},[982],{"type":539,"value":983},";\n",{"type":534,"tag":565,"props":985,"children":987},{"class":567,"line":986},11,[988,992,997,1001],{"type":534,"tag":565,"props":989,"children":990},{"style":784},[991],{"type":539,"value":957},{"type":534,"tag":565,"props":993,"children":994},{"style":734},[995],{"type":539,"value":996}," level",{"type":534,"tag":565,"props":998,"children":999},{"style":706},[1000],{"type":539,"value":798},{"type":534,"tag":565,"props":1002,"children":1003},{"style":706},[1004],{"type":539,"value":858},{"type":534,"tag":565,"props":1006,"children":1008},{"class":567,"line":1007},12,[1009,1014,1018,1023,1028,1032,1038,1043,1047,1052,1056,1060,1064,1069,1073],{"type":534,"tag":565,"props":1010,"children":1011},{"style":712},[1012],{"type":539,"value":1013},"    for",{"type":534,"tag":565,"props":1015,"children":1016},{"style":706},[1017],{"type":539,"value":808},{"type":534,"tag":565,"props":1019,"children":1020},{"style":784},[1021],{"type":539,"value":1022},"let",{"type":534,"tag":565,"props":1024,"children":1025},{"style":734},[1026],{"type":539,"value":1027}," i",{"type":534,"tag":565,"props":1029,"children":1030},{"style":706},[1031],{"type":539,"value":798},{"type":534,"tag":565,"props":1033,"children":1035},{"style":1034},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1036],{"type":539,"value":1037}," 0",{"type":534,"tag":565,"props":1039,"children":1040},{"style":706},[1041],{"type":539,"value":1042},";",{"type":534,"tag":565,"props":1044,"children":1045},{"style":734},[1046],{"type":539,"value":1027},{"type":534,"tag":565,"props":1048,"children":1049},{"style":706},[1050],{"type":539,"value":1051}," \u003C",{"type":534,"tag":565,"props":1053,"children":1054},{"style":734},[1055],{"type":539,"value":962},{"type":534,"tag":565,"props":1057,"children":1058},{"style":706},[1059],{"type":539,"value":1042},{"type":534,"tag":565,"props":1061,"children":1062},{"style":734},[1063],{"type":539,"value":1027},{"type":534,"tag":565,"props":1065,"children":1066},{"style":784},[1067],{"type":539,"value":1068},"++",{"type":534,"tag":565,"props":1070,"children":1071},{"style":706},[1072],{"type":539,"value":817},{"type":534,"tag":565,"props":1074,"children":1075},{"style":706},[1076],{"type":539,"value":822},{"type":534,"tag":565,"props":1078,"children":1080},{"class":567,"line":1079},13,[1081,1086,1091,1095,1099,1103,1108],{"type":534,"tag":565,"props":1082,"children":1083},{"style":784},[1084],{"type":539,"value":1085},"      let",{"type":534,"tag":565,"props":1087,"children":1088},{"style":734},[1089],{"type":539,"value":1090}," node",{"type":534,"tag":565,"props":1092,"children":1093},{"style":706},[1094],{"type":539,"value":798},{"type":534,"tag":565,"props":1096,"children":1097},{"style":734},[1098],{"type":539,"value":893},{"type":534,"tag":565,"props":1100,"children":1101},{"style":706},[1102],{"type":539,"value":934},{"type":534,"tag":565,"props":1104,"children":1105},{"style":790},[1106],{"type":539,"value":1107},"shift",{"type":534,"tag":565,"props":1109,"children":1110},{"style":706},[1111],{"type":539,"value":1112},"();\n",{"type":534,"tag":565,"props":1114,"children":1116},{"class":567,"line":1115},14,[1117,1122,1126,1131,1136,1141,1145,1150],{"type":534,"tag":565,"props":1118,"children":1119},{"style":734},[1120],{"type":539,"value":1121},"      level",{"type":534,"tag":565,"props":1123,"children":1124},{"style":706},[1125],{"type":539,"value":934},{"type":534,"tag":565,"props":1127,"children":1128},{"style":790},[1129],{"type":539,"value":1130},"push",{"type":534,"tag":565,"props":1132,"children":1133},{"style":706},[1134],{"type":539,"value":1135},"(",{"type":534,"tag":565,"props":1137,"children":1138},{"style":734},[1139],{"type":539,"value":1140},"node",{"type":534,"tag":565,"props":1142,"children":1143},{"style":706},[1144],{"type":539,"value":934},{"type":534,"tag":565,"props":1146,"children":1147},{"style":734},[1148],{"type":539,"value":1149},"val",{"type":534,"tag":565,"props":1151,"children":1152},{"style":706},[1153],{"type":539,"value":1154},");\n",{"type":534,"tag":565,"props":1156,"children":1158},{"class":567,"line":1157},15,[1159,1164,1168,1172,1176,1181,1185,1189,1193,1197,1201,1205,1209,1213],{"type":534,"tag":565,"props":1160,"children":1161},{"style":712},[1162],{"type":539,"value":1163},"      if",{"type":534,"tag":565,"props":1165,"children":1166},{"style":706},[1167],{"type":539,"value":808},{"type":534,"tag":565,"props":1169,"children":1170},{"style":734},[1171],{"type":539,"value":1140},{"type":534,"tag":565,"props":1173,"children":1174},{"style":706},[1175],{"type":539,"value":934},{"type":534,"tag":565,"props":1177,"children":1178},{"style":734},[1179],{"type":539,"value":1180},"left",{"type":534,"tag":565,"props":1182,"children":1183},{"style":706},[1184],{"type":539,"value":817},{"type":534,"tag":565,"props":1186,"children":1187},{"style":734},[1188],{"type":539,"value":893},{"type":534,"tag":565,"props":1190,"children":1191},{"style":706},[1192],{"type":539,"value":934},{"type":534,"tag":565,"props":1194,"children":1195},{"style":790},[1196],{"type":539,"value":1130},{"type":534,"tag":565,"props":1198,"children":1199},{"style":706},[1200],{"type":539,"value":1135},{"type":534,"tag":565,"props":1202,"children":1203},{"style":734},[1204],{"type":539,"value":1140},{"type":534,"tag":565,"props":1206,"children":1207},{"style":706},[1208],{"type":539,"value":934},{"type":534,"tag":565,"props":1210,"children":1211},{"style":734},[1212],{"type":539,"value":1180},{"type":534,"tag":565,"props":1214,"children":1215},{"style":706},[1216],{"type":539,"value":1154},{"type":534,"tag":565,"props":1218,"children":1220},{"class":567,"line":1219},16,[1221,1225,1229,1233,1237,1242,1246,1250,1254,1258,1262,1266,1270,1274],{"type":534,"tag":565,"props":1222,"children":1223},{"style":712},[1224],{"type":539,"value":1163},{"type":534,"tag":565,"props":1226,"children":1227},{"style":706},[1228],{"type":539,"value":808},{"type":534,"tag":565,"props":1230,"children":1231},{"style":734},[1232],{"type":539,"value":1140},{"type":534,"tag":565,"props":1234,"children":1235},{"style":706},[1236],{"type":539,"value":934},{"type":534,"tag":565,"props":1238,"children":1239},{"style":734},[1240],{"type":539,"value":1241},"right",{"type":534,"tag":565,"props":1243,"children":1244},{"style":706},[1245],{"type":539,"value":817},{"type":534,"tag":565,"props":1247,"children":1248},{"style":734},[1249],{"type":539,"value":893},{"type":534,"tag":565,"props":1251,"children":1252},{"style":706},[1253],{"type":539,"value":934},{"type":534,"tag":565,"props":1255,"children":1256},{"style":790},[1257],{"type":539,"value":1130},{"type":534,"tag":565,"props":1259,"children":1260},{"style":706},[1261],{"type":539,"value":1135},{"type":534,"tag":565,"props":1263,"children":1264},{"style":734},[1265],{"type":539,"value":1140},{"type":534,"tag":565,"props":1267,"children":1268},{"style":706},[1269],{"type":539,"value":934},{"type":534,"tag":565,"props":1271,"children":1272},{"style":734},[1273],{"type":539,"value":1241},{"type":534,"tag":565,"props":1275,"children":1276},{"style":706},[1277],{"type":539,"value":1154},{"type":534,"tag":565,"props":1279,"children":1281},{"class":567,"line":1280},17,[1282],{"type":534,"tag":565,"props":1283,"children":1284},{"style":706},[1285],{"type":539,"value":1286},"    }\n",{"type":534,"tag":565,"props":1288,"children":1290},{"class":567,"line":1289},18,[1291,1296,1300,1304,1308,1313],{"type":534,"tag":565,"props":1292,"children":1293},{"style":734},[1294],{"type":539,"value":1295},"    res",{"type":534,"tag":565,"props":1297,"children":1298},{"style":706},[1299],{"type":539,"value":934},{"type":534,"tag":565,"props":1301,"children":1302},{"style":790},[1303],{"type":539,"value":1130},{"type":534,"tag":565,"props":1305,"children":1306},{"style":706},[1307],{"type":539,"value":1135},{"type":534,"tag":565,"props":1309,"children":1310},{"style":734},[1311],{"type":539,"value":1312},"level",{"type":534,"tag":565,"props":1314,"children":1315},{"style":706},[1316],{"type":539,"value":1154},{"type":534,"tag":565,"props":1318,"children":1320},{"class":567,"line":1319},19,[1321],{"type":534,"tag":565,"props":1322,"children":1323},{"style":706},[1324],{"type":539,"value":1325},"  }\n",{"type":534,"tag":565,"props":1327,"children":1329},{"class":567,"line":1328},20,[1330,1335,1339],{"type":534,"tag":565,"props":1331,"children":1332},{"style":712},[1333],{"type":539,"value":1334},"  return",{"type":534,"tag":565,"props":1336,"children":1337},{"style":734},[1338],{"type":539,"value":872},{"type":534,"tag":565,"props":1340,"children":1341},{"style":706},[1342],{"type":539,"value":983},{"type":534,"tag":565,"props":1344,"children":1346},{"class":567,"line":1345},21,[1347],{"type":534,"tag":565,"props":1348,"children":1349},{"style":706},[1350],{"type":539,"value":1351},"};\n",{"type":534,"tag":1353,"props":1354,"children":1355},"style",{},[1356],{"type":539,"value":1357},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":780,"depth":780,"links":1359},[1360,1361],{"id":663,"depth":577,"text":663},{"id":668,"depth":577,"text":668,"children":1362},[1363],{"id":674,"depth":740,"text":677},"markdown","content:1.algorithm:3.leetcode:3.major:102.binary-tree-level-order-traversal.md","content","1.algorithm/3.leetcode/3.major/102.binary-tree-level-order-traversal.md","md",[1370,1372],{"_path":150,"title":149,"description":1371},"给你一个二叉树的根节点 root ， 检查它是否轴对称。",{"_path":156,"title":155,"description":1373},"给定一个二叉树 root ，返回其最大深度。",1714096143082]