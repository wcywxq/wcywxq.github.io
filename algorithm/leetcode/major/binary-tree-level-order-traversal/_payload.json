[{"data":1,"prerenderedAt":1399},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-tree-level-order-traversal":549,"/algorithm/leetcode/major/binary-tree-level-order-traversal-surround":1394},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":153,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":152,"description":553,"url":554,"body":555,"_type":1389,"_id":1390,"_source":1391,"_file":1392,"_extension":1393},"major",false,"","给你二叉树的根节点 root ，返回其节点值的 层序遍历 。 （即逐层地，从左到右访问所有节点）。","https://leetcode.cn/problems/binary-tree-level-order-traversal",{"type":556,"children":557,"toc":1383},"root",[558,565,570,579,609,614,637,642,665,670,685,691,696,703,1377],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"示例 1：",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":559,"tag":574,"props":575,"children":578},"img",{"alt":576,"src":577},"sample_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.102_sample_1.png",[],{"type":559,"tag":580,"props":581,"children":584},"pre",{"className":582,"code":583,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [3,9,20,null,null,15,7]\n输出：[[3],[9,20],[15,7]]\n",[585],{"type":559,"tag":586,"props":587,"children":588},"code",{"__ignoreMap":552},[589,600],{"type":559,"tag":590,"props":591,"children":594},"span",{"class":592,"line":593},"line",1,[595],{"type":559,"tag":590,"props":596,"children":597},{},[598],{"type":564,"value":599},"输入：root = [3,9,20,null,null,15,7]\n",{"type":559,"tag":590,"props":601,"children":603},{"class":592,"line":602},2,[604],{"type":559,"tag":590,"props":605,"children":606},{},[607],{"type":564,"value":608},"输出：[[3],[9,20],[15,7]]\n",{"type":559,"tag":560,"props":610,"children":611},{},[612],{"type":564,"value":613},"示例 2：",{"type":559,"tag":580,"props":615,"children":617},{"className":582,"code":616,"language":564,"meta":552,"style":552},"输入：root = [1]\n输出：[[1]]\n",[618],{"type":559,"tag":586,"props":619,"children":620},{"__ignoreMap":552},[621,629],{"type":559,"tag":590,"props":622,"children":623},{"class":592,"line":593},[624],{"type":559,"tag":590,"props":625,"children":626},{},[627],{"type":564,"value":628},"输入：root = [1]\n",{"type":559,"tag":590,"props":630,"children":631},{"class":592,"line":602},[632],{"type":559,"tag":590,"props":633,"children":634},{},[635],{"type":564,"value":636},"输出：[[1]]\n",{"type":559,"tag":560,"props":638,"children":639},{},[640],{"type":564,"value":641},"示例 3：",{"type":559,"tag":580,"props":643,"children":645},{"className":582,"code":644,"language":564,"meta":552,"style":552},"输入：root = []\n输出：[]\n",[646],{"type":559,"tag":586,"props":647,"children":648},{"__ignoreMap":552},[649,657],{"type":559,"tag":590,"props":650,"children":651},{"class":592,"line":593},[652],{"type":559,"tag":590,"props":653,"children":654},{},[655],{"type":564,"value":656},"输入：root = []\n",{"type":559,"tag":590,"props":658,"children":659},{"class":592,"line":602},[660],{"type":559,"tag":590,"props":661,"children":662},{},[663],{"type":564,"value":664},"输出：[]\n",{"type":559,"tag":560,"props":666,"children":667},{},[668],{"type":564,"value":669},"提示：",{"type":559,"tag":671,"props":672,"children":673},"ul",{},[674,680],{"type":559,"tag":675,"props":676,"children":677},"li",{},[678],{"type":564,"value":679},"树中节点数目在范围 [0, 2000] 内",{"type":559,"tag":675,"props":681,"children":682},{},[683],{"type":564,"value":684},"-1000 \u003C= Node.val \u003C= 1000",{"type":559,"tag":686,"props":687,"children":689},"h2",{"id":688},"解题思路",[690],{"type":564,"value":688},{"type":559,"tag":686,"props":692,"children":694},{"id":693},"实现",[695],{"type":564,"value":693},{"type":559,"tag":697,"props":698,"children":700},"h3",{"id":699},"深度优先搜索-bfs",[701],{"type":564,"value":702},"深度优先搜索 - bfs",{"type":559,"tag":580,"props":704,"children":708},{"className":705,"code":706,"language":707,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar levelOrder = function (root) {\n  if (!root) return [];\n  let res = [];\n  let queue = [root];\n  while (queue.length) {\n    let len = queue.length;\n    let level = [];\n    for (let i = 0; i \u003C len; i++) {\n      let node = queue.shift();\n      level.push(node.val);\n      if (node.left) queue.push(node.left);\n      if (node.right) queue.push(node.right);\n    }\n    res.push(level);\n  }\n  return res;\n};\n","js",[709],{"type":559,"tag":586,"props":710,"children":711},{"__ignoreMap":552},[712,721,763,794,803,848,884,906,937,974,1009,1030,1102,1138,1180,1242,1303,1312,1342,1351,1368],{"type":559,"tag":590,"props":713,"children":714},{"class":592,"line":593},[715],{"type":559,"tag":590,"props":716,"children":718},{"style":717},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[719],{"type":564,"value":720},"/**\n",{"type":559,"tag":590,"props":722,"children":723},{"class":592,"line":602},[724,729,735,741,746,752,757],{"type":559,"tag":590,"props":725,"children":726},{"style":717},[727],{"type":564,"value":728}," * ",{"type":559,"tag":590,"props":730,"children":732},{"style":731},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[733],{"type":564,"value":734},"@",{"type":559,"tag":590,"props":736,"children":738},{"style":737},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[739],{"type":564,"value":740},"param",{"type":559,"tag":590,"props":742,"children":743},{"style":731},[744],{"type":564,"value":745}," {",{"type":559,"tag":590,"props":747,"children":749},{"style":748},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[750],{"type":564,"value":751},"TreeNode",{"type":559,"tag":590,"props":753,"children":754},{"style":731},[755],{"type":564,"value":756},"}",{"type":559,"tag":590,"props":758,"children":760},{"style":759},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[761],{"type":564,"value":762}," root\n",{"type":559,"tag":590,"props":764,"children":766},{"class":592,"line":765},3,[767,771,775,780,784,789],{"type":559,"tag":590,"props":768,"children":769},{"style":717},[770],{"type":564,"value":728},{"type":559,"tag":590,"props":772,"children":773},{"style":731},[774],{"type":564,"value":734},{"type":559,"tag":590,"props":776,"children":777},{"style":737},[778],{"type":564,"value":779},"return",{"type":559,"tag":590,"props":781,"children":782},{"style":731},[783],{"type":564,"value":745},{"type":559,"tag":590,"props":785,"children":786},{"style":748},[787],{"type":564,"value":788},"number[][]",{"type":559,"tag":590,"props":790,"children":791},{"style":731},[792],{"type":564,"value":793},"}\n",{"type":559,"tag":590,"props":795,"children":797},{"class":592,"line":796},4,[798],{"type":559,"tag":590,"props":799,"children":800},{"style":717},[801],{"type":564,"value":802}," */\n",{"type":559,"tag":590,"props":804,"children":806},{"class":592,"line":805},5,[807,813,819,824,829,834,838,843],{"type":559,"tag":590,"props":808,"children":810},{"style":809},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[811],{"type":564,"value":812},"var",{"type":559,"tag":590,"props":814,"children":816},{"style":815},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[817],{"type":564,"value":818}," levelOrder",{"type":559,"tag":590,"props":820,"children":821},{"style":731},[822],{"type":564,"value":823}," =",{"type":559,"tag":590,"props":825,"children":826},{"style":809},[827],{"type":564,"value":828}," function",{"type":559,"tag":590,"props":830,"children":831},{"style":731},[832],{"type":564,"value":833}," (",{"type":559,"tag":590,"props":835,"children":836},{"style":759},[837],{"type":564,"value":556},{"type":559,"tag":590,"props":839,"children":840},{"style":731},[841],{"type":564,"value":842},")",{"type":559,"tag":590,"props":844,"children":845},{"style":731},[846],{"type":564,"value":847}," {\n",{"type":559,"tag":590,"props":849,"children":851},{"class":592,"line":850},6,[852,857,861,866,870,874,879],{"type":559,"tag":590,"props":853,"children":854},{"style":737},[855],{"type":564,"value":856},"  if",{"type":559,"tag":590,"props":858,"children":859},{"style":731},[860],{"type":564,"value":833},{"type":559,"tag":590,"props":862,"children":863},{"style":809},[864],{"type":564,"value":865},"!",{"type":559,"tag":590,"props":867,"children":868},{"style":759},[869],{"type":564,"value":556},{"type":559,"tag":590,"props":871,"children":872},{"style":731},[873],{"type":564,"value":842},{"type":559,"tag":590,"props":875,"children":876},{"style":737},[877],{"type":564,"value":878}," return",{"type":559,"tag":590,"props":880,"children":881},{"style":731},[882],{"type":564,"value":883}," [];\n",{"type":559,"tag":590,"props":885,"children":887},{"class":592,"line":886},7,[888,893,898,902],{"type":559,"tag":590,"props":889,"children":890},{"style":809},[891],{"type":564,"value":892},"  let",{"type":559,"tag":590,"props":894,"children":895},{"style":759},[896],{"type":564,"value":897}," res",{"type":559,"tag":590,"props":899,"children":900},{"style":731},[901],{"type":564,"value":823},{"type":559,"tag":590,"props":903,"children":904},{"style":731},[905],{"type":564,"value":883},{"type":559,"tag":590,"props":907,"children":909},{"class":592,"line":908},8,[910,914,919,923,928,932],{"type":559,"tag":590,"props":911,"children":912},{"style":809},[913],{"type":564,"value":892},{"type":559,"tag":590,"props":915,"children":916},{"style":759},[917],{"type":564,"value":918}," queue",{"type":559,"tag":590,"props":920,"children":921},{"style":731},[922],{"type":564,"value":823},{"type":559,"tag":590,"props":924,"children":925},{"style":731},[926],{"type":564,"value":927}," [",{"type":559,"tag":590,"props":929,"children":930},{"style":759},[931],{"type":564,"value":556},{"type":559,"tag":590,"props":933,"children":934},{"style":731},[935],{"type":564,"value":936},"];\n",{"type":559,"tag":590,"props":938,"children":940},{"class":592,"line":939},9,[941,946,950,955,960,966,970],{"type":559,"tag":590,"props":942,"children":943},{"style":737},[944],{"type":564,"value":945},"  while",{"type":559,"tag":590,"props":947,"children":948},{"style":731},[949],{"type":564,"value":833},{"type":559,"tag":590,"props":951,"children":952},{"style":759},[953],{"type":564,"value":954},"queue",{"type":559,"tag":590,"props":956,"children":957},{"style":731},[958],{"type":564,"value":959},".",{"type":559,"tag":590,"props":961,"children":963},{"style":962},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[964],{"type":564,"value":965},"length",{"type":559,"tag":590,"props":967,"children":968},{"style":731},[969],{"type":564,"value":842},{"type":559,"tag":590,"props":971,"children":972},{"style":731},[973],{"type":564,"value":847},{"type":559,"tag":590,"props":975,"children":977},{"class":592,"line":976},10,[978,983,988,992,996,1000,1004],{"type":559,"tag":590,"props":979,"children":980},{"style":809},[981],{"type":564,"value":982},"    let",{"type":559,"tag":590,"props":984,"children":985},{"style":759},[986],{"type":564,"value":987}," len",{"type":559,"tag":590,"props":989,"children":990},{"style":731},[991],{"type":564,"value":823},{"type":559,"tag":590,"props":993,"children":994},{"style":759},[995],{"type":564,"value":918},{"type":559,"tag":590,"props":997,"children":998},{"style":731},[999],{"type":564,"value":959},{"type":559,"tag":590,"props":1001,"children":1002},{"style":962},[1003],{"type":564,"value":965},{"type":559,"tag":590,"props":1005,"children":1006},{"style":731},[1007],{"type":564,"value":1008},";\n",{"type":559,"tag":590,"props":1010,"children":1012},{"class":592,"line":1011},11,[1013,1017,1022,1026],{"type":559,"tag":590,"props":1014,"children":1015},{"style":809},[1016],{"type":564,"value":982},{"type":559,"tag":590,"props":1018,"children":1019},{"style":759},[1020],{"type":564,"value":1021}," level",{"type":559,"tag":590,"props":1023,"children":1024},{"style":731},[1025],{"type":564,"value":823},{"type":559,"tag":590,"props":1027,"children":1028},{"style":731},[1029],{"type":564,"value":883},{"type":559,"tag":590,"props":1031,"children":1033},{"class":592,"line":1032},12,[1034,1039,1043,1048,1053,1057,1063,1068,1072,1077,1081,1085,1089,1094,1098],{"type":559,"tag":590,"props":1035,"children":1036},{"style":737},[1037],{"type":564,"value":1038},"    for",{"type":559,"tag":590,"props":1040,"children":1041},{"style":731},[1042],{"type":564,"value":833},{"type":559,"tag":590,"props":1044,"children":1045},{"style":809},[1046],{"type":564,"value":1047},"let",{"type":559,"tag":590,"props":1049,"children":1050},{"style":759},[1051],{"type":564,"value":1052}," i",{"type":559,"tag":590,"props":1054,"children":1055},{"style":731},[1056],{"type":564,"value":823},{"type":559,"tag":590,"props":1058,"children":1060},{"style":1059},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1061],{"type":564,"value":1062}," 0",{"type":559,"tag":590,"props":1064,"children":1065},{"style":731},[1066],{"type":564,"value":1067},";",{"type":559,"tag":590,"props":1069,"children":1070},{"style":759},[1071],{"type":564,"value":1052},{"type":559,"tag":590,"props":1073,"children":1074},{"style":731},[1075],{"type":564,"value":1076}," \u003C",{"type":559,"tag":590,"props":1078,"children":1079},{"style":759},[1080],{"type":564,"value":987},{"type":559,"tag":590,"props":1082,"children":1083},{"style":731},[1084],{"type":564,"value":1067},{"type":559,"tag":590,"props":1086,"children":1087},{"style":759},[1088],{"type":564,"value":1052},{"type":559,"tag":590,"props":1090,"children":1091},{"style":809},[1092],{"type":564,"value":1093},"++",{"type":559,"tag":590,"props":1095,"children":1096},{"style":731},[1097],{"type":564,"value":842},{"type":559,"tag":590,"props":1099,"children":1100},{"style":731},[1101],{"type":564,"value":847},{"type":559,"tag":590,"props":1103,"children":1105},{"class":592,"line":1104},13,[1106,1111,1116,1120,1124,1128,1133],{"type":559,"tag":590,"props":1107,"children":1108},{"style":809},[1109],{"type":564,"value":1110},"      let",{"type":559,"tag":590,"props":1112,"children":1113},{"style":759},[1114],{"type":564,"value":1115}," node",{"type":559,"tag":590,"props":1117,"children":1118},{"style":731},[1119],{"type":564,"value":823},{"type":559,"tag":590,"props":1121,"children":1122},{"style":759},[1123],{"type":564,"value":918},{"type":559,"tag":590,"props":1125,"children":1126},{"style":731},[1127],{"type":564,"value":959},{"type":559,"tag":590,"props":1129,"children":1130},{"style":815},[1131],{"type":564,"value":1132},"shift",{"type":559,"tag":590,"props":1134,"children":1135},{"style":731},[1136],{"type":564,"value":1137},"();\n",{"type":559,"tag":590,"props":1139,"children":1141},{"class":592,"line":1140},14,[1142,1147,1151,1156,1161,1166,1170,1175],{"type":559,"tag":590,"props":1143,"children":1144},{"style":759},[1145],{"type":564,"value":1146},"      level",{"type":559,"tag":590,"props":1148,"children":1149},{"style":731},[1150],{"type":564,"value":959},{"type":559,"tag":590,"props":1152,"children":1153},{"style":815},[1154],{"type":564,"value":1155},"push",{"type":559,"tag":590,"props":1157,"children":1158},{"style":731},[1159],{"type":564,"value":1160},"(",{"type":559,"tag":590,"props":1162,"children":1163},{"style":759},[1164],{"type":564,"value":1165},"node",{"type":559,"tag":590,"props":1167,"children":1168},{"style":731},[1169],{"type":564,"value":959},{"type":559,"tag":590,"props":1171,"children":1172},{"style":759},[1173],{"type":564,"value":1174},"val",{"type":559,"tag":590,"props":1176,"children":1177},{"style":731},[1178],{"type":564,"value":1179},");\n",{"type":559,"tag":590,"props":1181,"children":1183},{"class":592,"line":1182},15,[1184,1189,1193,1197,1201,1206,1210,1214,1218,1222,1226,1230,1234,1238],{"type":559,"tag":590,"props":1185,"children":1186},{"style":737},[1187],{"type":564,"value":1188},"      if",{"type":559,"tag":590,"props":1190,"children":1191},{"style":731},[1192],{"type":564,"value":833},{"type":559,"tag":590,"props":1194,"children":1195},{"style":759},[1196],{"type":564,"value":1165},{"type":559,"tag":590,"props":1198,"children":1199},{"style":731},[1200],{"type":564,"value":959},{"type":559,"tag":590,"props":1202,"children":1203},{"style":759},[1204],{"type":564,"value":1205},"left",{"type":559,"tag":590,"props":1207,"children":1208},{"style":731},[1209],{"type":564,"value":842},{"type":559,"tag":590,"props":1211,"children":1212},{"style":759},[1213],{"type":564,"value":918},{"type":559,"tag":590,"props":1215,"children":1216},{"style":731},[1217],{"type":564,"value":959},{"type":559,"tag":590,"props":1219,"children":1220},{"style":815},[1221],{"type":564,"value":1155},{"type":559,"tag":590,"props":1223,"children":1224},{"style":731},[1225],{"type":564,"value":1160},{"type":559,"tag":590,"props":1227,"children":1228},{"style":759},[1229],{"type":564,"value":1165},{"type":559,"tag":590,"props":1231,"children":1232},{"style":731},[1233],{"type":564,"value":959},{"type":559,"tag":590,"props":1235,"children":1236},{"style":759},[1237],{"type":564,"value":1205},{"type":559,"tag":590,"props":1239,"children":1240},{"style":731},[1241],{"type":564,"value":1179},{"type":559,"tag":590,"props":1243,"children":1245},{"class":592,"line":1244},16,[1246,1250,1254,1258,1262,1267,1271,1275,1279,1283,1287,1291,1295,1299],{"type":559,"tag":590,"props":1247,"children":1248},{"style":737},[1249],{"type":564,"value":1188},{"type":559,"tag":590,"props":1251,"children":1252},{"style":731},[1253],{"type":564,"value":833},{"type":559,"tag":590,"props":1255,"children":1256},{"style":759},[1257],{"type":564,"value":1165},{"type":559,"tag":590,"props":1259,"children":1260},{"style":731},[1261],{"type":564,"value":959},{"type":559,"tag":590,"props":1263,"children":1264},{"style":759},[1265],{"type":564,"value":1266},"right",{"type":559,"tag":590,"props":1268,"children":1269},{"style":731},[1270],{"type":564,"value":842},{"type":559,"tag":590,"props":1272,"children":1273},{"style":759},[1274],{"type":564,"value":918},{"type":559,"tag":590,"props":1276,"children":1277},{"style":731},[1278],{"type":564,"value":959},{"type":559,"tag":590,"props":1280,"children":1281},{"style":815},[1282],{"type":564,"value":1155},{"type":559,"tag":590,"props":1284,"children":1285},{"style":731},[1286],{"type":564,"value":1160},{"type":559,"tag":590,"props":1288,"children":1289},{"style":759},[1290],{"type":564,"value":1165},{"type":559,"tag":590,"props":1292,"children":1293},{"style":731},[1294],{"type":564,"value":959},{"type":559,"tag":590,"props":1296,"children":1297},{"style":759},[1298],{"type":564,"value":1266},{"type":559,"tag":590,"props":1300,"children":1301},{"style":731},[1302],{"type":564,"value":1179},{"type":559,"tag":590,"props":1304,"children":1306},{"class":592,"line":1305},17,[1307],{"type":559,"tag":590,"props":1308,"children":1309},{"style":731},[1310],{"type":564,"value":1311},"    }\n",{"type":559,"tag":590,"props":1313,"children":1315},{"class":592,"line":1314},18,[1316,1321,1325,1329,1333,1338],{"type":559,"tag":590,"props":1317,"children":1318},{"style":759},[1319],{"type":564,"value":1320},"    res",{"type":559,"tag":590,"props":1322,"children":1323},{"style":731},[1324],{"type":564,"value":959},{"type":559,"tag":590,"props":1326,"children":1327},{"style":815},[1328],{"type":564,"value":1155},{"type":559,"tag":590,"props":1330,"children":1331},{"style":731},[1332],{"type":564,"value":1160},{"type":559,"tag":590,"props":1334,"children":1335},{"style":759},[1336],{"type":564,"value":1337},"level",{"type":559,"tag":590,"props":1339,"children":1340},{"style":731},[1341],{"type":564,"value":1179},{"type":559,"tag":590,"props":1343,"children":1345},{"class":592,"line":1344},19,[1346],{"type":559,"tag":590,"props":1347,"children":1348},{"style":731},[1349],{"type":564,"value":1350},"  }\n",{"type":559,"tag":590,"props":1352,"children":1354},{"class":592,"line":1353},20,[1355,1360,1364],{"type":559,"tag":590,"props":1356,"children":1357},{"style":737},[1358],{"type":564,"value":1359},"  return",{"type":559,"tag":590,"props":1361,"children":1362},{"style":759},[1363],{"type":564,"value":897},{"type":559,"tag":590,"props":1365,"children":1366},{"style":731},[1367],{"type":564,"value":1008},{"type":559,"tag":590,"props":1369,"children":1371},{"class":592,"line":1370},21,[1372],{"type":559,"tag":590,"props":1373,"children":1374},{"style":731},[1375],{"type":564,"value":1376},"};\n",{"type":559,"tag":1378,"props":1379,"children":1380},"style",{},[1381],{"type":564,"value":1382},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":805,"depth":805,"links":1384},[1385,1386],{"id":688,"depth":602,"text":688},{"id":693,"depth":602,"text":693,"children":1387},[1388],{"id":699,"depth":765,"text":702},"markdown","content:1.algorithm:3.leetcode:3.major:102.binary-tree-level-order-traversal.md","content","1.algorithm/3.leetcode/3.major/102.binary-tree-level-order-traversal.md","md",[1395,1397],{"_path":150,"title":149,"description":1396},"给你一个二叉树的根节点 root ， 检查它是否轴对称。",{"_path":156,"title":155,"description":1398},"给定一个二叉树 root ，返回其最大深度。",1715007652112]