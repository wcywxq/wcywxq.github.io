[{"data":1,"prerenderedAt":1445},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/merge-strings-alternately":543,"/algorithm/leetcode/major/merge-strings-alternately-surround":1441},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":267,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":266,"description":547,"url":548,"body":549,"_type":1436,"_id":1437,"_source":1438,"_file":1439,"_extension":1440},"major",false,"","给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。","https://leetcode.cn/problems/merge-strings-alternately",{"type":550,"children":551,"toc":1432},"root",[552,559,564,569,635,640,695,700,755,760,775,781,786,1426],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"返回 合并后的字符串 。",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"示例 1：",{"type":553,"tag":570,"props":571,"children":574},"pre",{"className":572,"code":573,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：word1 = \"abc\", word2 = \"pqr\"\n输出：\"apbqcr\"\n解释：字符串合并情况如下所示：\nword1： a b c\nword2： p q r\n合并后： a p b q c r\n",[575],{"type":553,"tag":576,"props":577,"children":578},"code",{"__ignoreMap":546},[579,590,599,608,617,626],{"type":553,"tag":580,"props":581,"children":584},"span",{"class":582,"line":583},"line",1,[585],{"type":553,"tag":580,"props":586,"children":587},{},[588],{"type":558,"value":589},"输入：word1 = \"abc\", word2 = \"pqr\"\n",{"type":553,"tag":580,"props":591,"children":593},{"class":582,"line":592},2,[594],{"type":553,"tag":580,"props":595,"children":596},{},[597],{"type":558,"value":598},"输出：\"apbqcr\"\n",{"type":553,"tag":580,"props":600,"children":602},{"class":582,"line":601},3,[603],{"type":553,"tag":580,"props":604,"children":605},{},[606],{"type":558,"value":607},"解释：字符串合并情况如下所示：\n",{"type":553,"tag":580,"props":609,"children":611},{"class":582,"line":610},4,[612],{"type":553,"tag":580,"props":613,"children":614},{},[615],{"type":558,"value":616},"word1： a b c\n",{"type":553,"tag":580,"props":618,"children":620},{"class":582,"line":619},5,[621],{"type":553,"tag":580,"props":622,"children":623},{},[624],{"type":558,"value":625},"word2： p q r\n",{"type":553,"tag":580,"props":627,"children":629},{"class":582,"line":628},6,[630],{"type":553,"tag":580,"props":631,"children":632},{},[633],{"type":558,"value":634},"合并后： a p b q c r\n",{"type":553,"tag":554,"props":636,"children":637},{},[638],{"type":558,"value":639},"示例 2：",{"type":553,"tag":570,"props":641,"children":643},{"className":572,"code":642,"language":558,"meta":546,"style":546},"输入：word1 = \"ab\", word2 = \"pqrs\"\n输出：\"apbqrs\"\n解释：注意，word2 比 word1 长，\"rs\" 需要追加到合并后字符串的末尾。\nword1： a b\nword2： p q r s\n合并后： a p b q r s\n",[644],{"type":553,"tag":576,"props":645,"children":646},{"__ignoreMap":546},[647,655,663,671,679,687],{"type":553,"tag":580,"props":648,"children":649},{"class":582,"line":583},[650],{"type":553,"tag":580,"props":651,"children":652},{},[653],{"type":558,"value":654},"输入：word1 = \"ab\", word2 = \"pqrs\"\n",{"type":553,"tag":580,"props":656,"children":657},{"class":582,"line":592},[658],{"type":553,"tag":580,"props":659,"children":660},{},[661],{"type":558,"value":662},"输出：\"apbqrs\"\n",{"type":553,"tag":580,"props":664,"children":665},{"class":582,"line":601},[666],{"type":553,"tag":580,"props":667,"children":668},{},[669],{"type":558,"value":670},"解释：注意，word2 比 word1 长，\"rs\" 需要追加到合并后字符串的末尾。\n",{"type":553,"tag":580,"props":672,"children":673},{"class":582,"line":610},[674],{"type":553,"tag":580,"props":675,"children":676},{},[677],{"type":558,"value":678},"word1： a b\n",{"type":553,"tag":580,"props":680,"children":681},{"class":582,"line":619},[682],{"type":553,"tag":580,"props":683,"children":684},{},[685],{"type":558,"value":686},"word2： p q r s\n",{"type":553,"tag":580,"props":688,"children":689},{"class":582,"line":628},[690],{"type":553,"tag":580,"props":691,"children":692},{},[693],{"type":558,"value":694},"合并后： a p b q r s\n",{"type":553,"tag":554,"props":696,"children":697},{},[698],{"type":558,"value":699},"示例 3：",{"type":553,"tag":570,"props":701,"children":703},{"className":572,"code":702,"language":558,"meta":546,"style":546},"输入：word1 = \"abcd\", word2 = \"pq\"\n输出：\"apbqcd\"\n解释：注意，word1 比 word2 长，\"cd\" 需要追加到合并后字符串的末尾。\nword1： a b c d\nword2： p q\n合并后： a p b q c d\n",[704],{"type":553,"tag":576,"props":705,"children":706},{"__ignoreMap":546},[707,715,723,731,739,747],{"type":553,"tag":580,"props":708,"children":709},{"class":582,"line":583},[710],{"type":553,"tag":580,"props":711,"children":712},{},[713],{"type":558,"value":714},"输入：word1 = \"abcd\", word2 = \"pq\"\n",{"type":553,"tag":580,"props":716,"children":717},{"class":582,"line":592},[718],{"type":553,"tag":580,"props":719,"children":720},{},[721],{"type":558,"value":722},"输出：\"apbqcd\"\n",{"type":553,"tag":580,"props":724,"children":725},{"class":582,"line":601},[726],{"type":553,"tag":580,"props":727,"children":728},{},[729],{"type":558,"value":730},"解释：注意，word1 比 word2 长，\"cd\" 需要追加到合并后字符串的末尾。\n",{"type":553,"tag":580,"props":732,"children":733},{"class":582,"line":610},[734],{"type":553,"tag":580,"props":735,"children":736},{},[737],{"type":558,"value":738},"word1： a b c d\n",{"type":553,"tag":580,"props":740,"children":741},{"class":582,"line":619},[742],{"type":553,"tag":580,"props":743,"children":744},{},[745],{"type":558,"value":746},"word2： p q\n",{"type":553,"tag":580,"props":748,"children":749},{"class":582,"line":628},[750],{"type":553,"tag":580,"props":751,"children":752},{},[753],{"type":558,"value":754},"合并后： a p b q c d\n",{"type":553,"tag":554,"props":756,"children":757},{},[758],{"type":558,"value":759},"提示：",{"type":553,"tag":761,"props":762,"children":763},"ul",{},[764,770],{"type":553,"tag":765,"props":766,"children":767},"li",{},[768],{"type":558,"value":769},"1 \u003C= word1.length, word2.length \u003C= 100",{"type":553,"tag":765,"props":771,"children":772},{},[773],{"type":558,"value":774},"word1 和 word2 由小写英文字母组成",{"type":553,"tag":776,"props":777,"children":779},"h2",{"id":778},"解题思路",[780],{"type":558,"value":778},{"type":553,"tag":776,"props":782,"children":784},{"id":783},"实现",[785],{"type":558,"value":783},{"type":553,"tag":570,"props":787,"children":791},{"className":788,"code":789,"language":790,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} word1\n * @param {string} word2\n * @return {string}\n */\nvar mergeAlternately = function (word1, word2) {\n  let len1 = word1.length;\n  let len2 = word2.length;\n  if (len1 === 0) return word2;\n  if (len2 === 0) return word1;\n\n  let maxLen = Math.max(len1, len2) - 1;\n  let str = \"\";\n  for (let i = 0; i \u003C= maxLen; i++) {\n    str += (word1[i] || \"\") + (word2[i] || \"\");\n  }\n  return str;\n};\n","js",[792],{"type":553,"tag":576,"props":793,"children":794},{"__ignoreMap":546},[795,804,846,878,907,915,970,1009,1042,1088,1129,1139,1205,1232,1302,1391,1400,1417],{"type":553,"tag":580,"props":796,"children":797},{"class":582,"line":583},[798],{"type":553,"tag":580,"props":799,"children":801},{"style":800},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[802],{"type":558,"value":803},"/**\n",{"type":553,"tag":580,"props":805,"children":806},{"class":582,"line":592},[807,812,818,824,829,835,840],{"type":553,"tag":580,"props":808,"children":809},{"style":800},[810],{"type":558,"value":811}," * ",{"type":553,"tag":580,"props":813,"children":815},{"style":814},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[816],{"type":558,"value":817},"@",{"type":553,"tag":580,"props":819,"children":821},{"style":820},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[822],{"type":558,"value":823},"param",{"type":553,"tag":580,"props":825,"children":826},{"style":814},[827],{"type":558,"value":828}," {",{"type":553,"tag":580,"props":830,"children":832},{"style":831},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[833],{"type":558,"value":834},"string",{"type":553,"tag":580,"props":836,"children":837},{"style":814},[838],{"type":558,"value":839},"}",{"type":553,"tag":580,"props":841,"children":843},{"style":842},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[844],{"type":558,"value":845}," word1\n",{"type":553,"tag":580,"props":847,"children":848},{"class":582,"line":601},[849,853,857,861,865,869,873],{"type":553,"tag":580,"props":850,"children":851},{"style":800},[852],{"type":558,"value":811},{"type":553,"tag":580,"props":854,"children":855},{"style":814},[856],{"type":558,"value":817},{"type":553,"tag":580,"props":858,"children":859},{"style":820},[860],{"type":558,"value":823},{"type":553,"tag":580,"props":862,"children":863},{"style":814},[864],{"type":558,"value":828},{"type":553,"tag":580,"props":866,"children":867},{"style":831},[868],{"type":558,"value":834},{"type":553,"tag":580,"props":870,"children":871},{"style":814},[872],{"type":558,"value":839},{"type":553,"tag":580,"props":874,"children":875},{"style":842},[876],{"type":558,"value":877}," word2\n",{"type":553,"tag":580,"props":879,"children":880},{"class":582,"line":610},[881,885,889,894,898,902],{"type":553,"tag":580,"props":882,"children":883},{"style":800},[884],{"type":558,"value":811},{"type":553,"tag":580,"props":886,"children":887},{"style":814},[888],{"type":558,"value":817},{"type":553,"tag":580,"props":890,"children":891},{"style":820},[892],{"type":558,"value":893},"return",{"type":553,"tag":580,"props":895,"children":896},{"style":814},[897],{"type":558,"value":828},{"type":553,"tag":580,"props":899,"children":900},{"style":831},[901],{"type":558,"value":834},{"type":553,"tag":580,"props":903,"children":904},{"style":814},[905],{"type":558,"value":906},"}\n",{"type":553,"tag":580,"props":908,"children":909},{"class":582,"line":619},[910],{"type":553,"tag":580,"props":911,"children":912},{"style":800},[913],{"type":558,"value":914}," */\n",{"type":553,"tag":580,"props":916,"children":917},{"class":582,"line":628},[918,924,930,935,940,945,950,955,960,965],{"type":553,"tag":580,"props":919,"children":921},{"style":920},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[922],{"type":558,"value":923},"var",{"type":553,"tag":580,"props":925,"children":927},{"style":926},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[928],{"type":558,"value":929}," mergeAlternately",{"type":553,"tag":580,"props":931,"children":932},{"style":814},[933],{"type":558,"value":934}," =",{"type":553,"tag":580,"props":936,"children":937},{"style":920},[938],{"type":558,"value":939}," function",{"type":553,"tag":580,"props":941,"children":942},{"style":814},[943],{"type":558,"value":944}," (",{"type":553,"tag":580,"props":946,"children":947},{"style":842},[948],{"type":558,"value":949},"word1",{"type":553,"tag":580,"props":951,"children":952},{"style":814},[953],{"type":558,"value":954},",",{"type":553,"tag":580,"props":956,"children":957},{"style":842},[958],{"type":558,"value":959}," word2",{"type":553,"tag":580,"props":961,"children":962},{"style":814},[963],{"type":558,"value":964},")",{"type":553,"tag":580,"props":966,"children":967},{"style":814},[968],{"type":558,"value":969}," {\n",{"type":553,"tag":580,"props":971,"children":973},{"class":582,"line":972},7,[974,979,984,988,993,998,1004],{"type":553,"tag":580,"props":975,"children":976},{"style":920},[977],{"type":558,"value":978},"  let",{"type":553,"tag":580,"props":980,"children":981},{"style":842},[982],{"type":558,"value":983}," len1",{"type":553,"tag":580,"props":985,"children":986},{"style":814},[987],{"type":558,"value":934},{"type":553,"tag":580,"props":989,"children":990},{"style":842},[991],{"type":558,"value":992}," word1",{"type":553,"tag":580,"props":994,"children":995},{"style":814},[996],{"type":558,"value":997},".",{"type":553,"tag":580,"props":999,"children":1001},{"style":1000},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1002],{"type":558,"value":1003},"length",{"type":553,"tag":580,"props":1005,"children":1006},{"style":814},[1007],{"type":558,"value":1008},";\n",{"type":553,"tag":580,"props":1010,"children":1012},{"class":582,"line":1011},8,[1013,1017,1022,1026,1030,1034,1038],{"type":553,"tag":580,"props":1014,"children":1015},{"style":920},[1016],{"type":558,"value":978},{"type":553,"tag":580,"props":1018,"children":1019},{"style":842},[1020],{"type":558,"value":1021}," len2",{"type":553,"tag":580,"props":1023,"children":1024},{"style":814},[1025],{"type":558,"value":934},{"type":553,"tag":580,"props":1027,"children":1028},{"style":842},[1029],{"type":558,"value":959},{"type":553,"tag":580,"props":1031,"children":1032},{"style":814},[1033],{"type":558,"value":997},{"type":553,"tag":580,"props":1035,"children":1036},{"style":1000},[1037],{"type":558,"value":1003},{"type":553,"tag":580,"props":1039,"children":1040},{"style":814},[1041],{"type":558,"value":1008},{"type":553,"tag":580,"props":1043,"children":1045},{"class":582,"line":1044},9,[1046,1051,1055,1060,1065,1071,1075,1080,1084],{"type":553,"tag":580,"props":1047,"children":1048},{"style":820},[1049],{"type":558,"value":1050},"  if",{"type":553,"tag":580,"props":1052,"children":1053},{"style":814},[1054],{"type":558,"value":944},{"type":553,"tag":580,"props":1056,"children":1057},{"style":842},[1058],{"type":558,"value":1059},"len1",{"type":553,"tag":580,"props":1061,"children":1062},{"style":920},[1063],{"type":558,"value":1064}," ===",{"type":553,"tag":580,"props":1066,"children":1068},{"style":1067},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1069],{"type":558,"value":1070}," 0",{"type":553,"tag":580,"props":1072,"children":1073},{"style":814},[1074],{"type":558,"value":964},{"type":553,"tag":580,"props":1076,"children":1077},{"style":820},[1078],{"type":558,"value":1079}," return",{"type":553,"tag":580,"props":1081,"children":1082},{"style":842},[1083],{"type":558,"value":959},{"type":553,"tag":580,"props":1085,"children":1086},{"style":814},[1087],{"type":558,"value":1008},{"type":553,"tag":580,"props":1089,"children":1091},{"class":582,"line":1090},10,[1092,1096,1100,1105,1109,1113,1117,1121,1125],{"type":553,"tag":580,"props":1093,"children":1094},{"style":820},[1095],{"type":558,"value":1050},{"type":553,"tag":580,"props":1097,"children":1098},{"style":814},[1099],{"type":558,"value":944},{"type":553,"tag":580,"props":1101,"children":1102},{"style":842},[1103],{"type":558,"value":1104},"len2",{"type":553,"tag":580,"props":1106,"children":1107},{"style":920},[1108],{"type":558,"value":1064},{"type":553,"tag":580,"props":1110,"children":1111},{"style":1067},[1112],{"type":558,"value":1070},{"type":553,"tag":580,"props":1114,"children":1115},{"style":814},[1116],{"type":558,"value":964},{"type":553,"tag":580,"props":1118,"children":1119},{"style":820},[1120],{"type":558,"value":1079},{"type":553,"tag":580,"props":1122,"children":1123},{"style":842},[1124],{"type":558,"value":992},{"type":553,"tag":580,"props":1126,"children":1127},{"style":814},[1128],{"type":558,"value":1008},{"type":553,"tag":580,"props":1130,"children":1132},{"class":582,"line":1131},11,[1133],{"type":553,"tag":580,"props":1134,"children":1136},{"emptyLinePlaceholder":1135},true,[1137],{"type":558,"value":1138},"\n",{"type":553,"tag":580,"props":1140,"children":1142},{"class":582,"line":1141},12,[1143,1147,1152,1156,1161,1165,1170,1175,1179,1183,1187,1191,1196,1201],{"type":553,"tag":580,"props":1144,"children":1145},{"style":920},[1146],{"type":558,"value":978},{"type":553,"tag":580,"props":1148,"children":1149},{"style":842},[1150],{"type":558,"value":1151}," maxLen",{"type":553,"tag":580,"props":1153,"children":1154},{"style":814},[1155],{"type":558,"value":934},{"type":553,"tag":580,"props":1157,"children":1158},{"style":842},[1159],{"type":558,"value":1160}," Math",{"type":553,"tag":580,"props":1162,"children":1163},{"style":814},[1164],{"type":558,"value":997},{"type":553,"tag":580,"props":1166,"children":1167},{"style":926},[1168],{"type":558,"value":1169},"max",{"type":553,"tag":580,"props":1171,"children":1172},{"style":814},[1173],{"type":558,"value":1174},"(",{"type":553,"tag":580,"props":1176,"children":1177},{"style":842},[1178],{"type":558,"value":1059},{"type":553,"tag":580,"props":1180,"children":1181},{"style":814},[1182],{"type":558,"value":954},{"type":553,"tag":580,"props":1184,"children":1185},{"style":842},[1186],{"type":558,"value":1021},{"type":553,"tag":580,"props":1188,"children":1189},{"style":814},[1190],{"type":558,"value":964},{"type":553,"tag":580,"props":1192,"children":1193},{"style":920},[1194],{"type":558,"value":1195}," -",{"type":553,"tag":580,"props":1197,"children":1198},{"style":1067},[1199],{"type":558,"value":1200}," 1",{"type":553,"tag":580,"props":1202,"children":1203},{"style":814},[1204],{"type":558,"value":1008},{"type":553,"tag":580,"props":1206,"children":1208},{"class":582,"line":1207},13,[1209,1213,1218,1222,1228],{"type":553,"tag":580,"props":1210,"children":1211},{"style":920},[1212],{"type":558,"value":978},{"type":553,"tag":580,"props":1214,"children":1215},{"style":842},[1216],{"type":558,"value":1217}," str",{"type":553,"tag":580,"props":1219,"children":1220},{"style":814},[1221],{"type":558,"value":934},{"type":553,"tag":580,"props":1223,"children":1225},{"style":1224},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1226],{"type":558,"value":1227}," \"\"",{"type":553,"tag":580,"props":1229,"children":1230},{"style":814},[1231],{"type":558,"value":1008},{"type":553,"tag":580,"props":1233,"children":1235},{"class":582,"line":1234},14,[1236,1241,1245,1250,1255,1259,1263,1268,1272,1277,1281,1285,1289,1294,1298],{"type":553,"tag":580,"props":1237,"children":1238},{"style":820},[1239],{"type":558,"value":1240},"  for",{"type":553,"tag":580,"props":1242,"children":1243},{"style":814},[1244],{"type":558,"value":944},{"type":553,"tag":580,"props":1246,"children":1247},{"style":920},[1248],{"type":558,"value":1249},"let",{"type":553,"tag":580,"props":1251,"children":1252},{"style":842},[1253],{"type":558,"value":1254}," i",{"type":553,"tag":580,"props":1256,"children":1257},{"style":814},[1258],{"type":558,"value":934},{"type":553,"tag":580,"props":1260,"children":1261},{"style":1067},[1262],{"type":558,"value":1070},{"type":553,"tag":580,"props":1264,"children":1265},{"style":814},[1266],{"type":558,"value":1267},";",{"type":553,"tag":580,"props":1269,"children":1270},{"style":842},[1271],{"type":558,"value":1254},{"type":553,"tag":580,"props":1273,"children":1274},{"style":814},[1275],{"type":558,"value":1276}," \u003C=",{"type":553,"tag":580,"props":1278,"children":1279},{"style":842},[1280],{"type":558,"value":1151},{"type":553,"tag":580,"props":1282,"children":1283},{"style":814},[1284],{"type":558,"value":1267},{"type":553,"tag":580,"props":1286,"children":1287},{"style":842},[1288],{"type":558,"value":1254},{"type":553,"tag":580,"props":1290,"children":1291},{"style":920},[1292],{"type":558,"value":1293},"++",{"type":553,"tag":580,"props":1295,"children":1296},{"style":814},[1297],{"type":558,"value":964},{"type":553,"tag":580,"props":1299,"children":1300},{"style":814},[1301],{"type":558,"value":969},{"type":553,"tag":580,"props":1303,"children":1305},{"class":582,"line":1304},15,[1306,1311,1316,1320,1324,1329,1334,1339,1344,1348,1352,1357,1361,1366,1370,1374,1378,1382,1386],{"type":553,"tag":580,"props":1307,"children":1308},{"style":842},[1309],{"type":558,"value":1310},"    str",{"type":553,"tag":580,"props":1312,"children":1313},{"style":920},[1314],{"type":558,"value":1315}," +=",{"type":553,"tag":580,"props":1317,"children":1318},{"style":814},[1319],{"type":558,"value":944},{"type":553,"tag":580,"props":1321,"children":1322},{"style":842},[1323],{"type":558,"value":949},{"type":553,"tag":580,"props":1325,"children":1326},{"style":814},[1327],{"type":558,"value":1328},"[",{"type":553,"tag":580,"props":1330,"children":1331},{"style":842},[1332],{"type":558,"value":1333},"i",{"type":553,"tag":580,"props":1335,"children":1336},{"style":814},[1337],{"type":558,"value":1338},"]",{"type":553,"tag":580,"props":1340,"children":1341},{"style":920},[1342],{"type":558,"value":1343}," ||",{"type":553,"tag":580,"props":1345,"children":1346},{"style":1224},[1347],{"type":558,"value":1227},{"type":553,"tag":580,"props":1349,"children":1350},{"style":814},[1351],{"type":558,"value":964},{"type":553,"tag":580,"props":1353,"children":1354},{"style":920},[1355],{"type":558,"value":1356}," +",{"type":553,"tag":580,"props":1358,"children":1359},{"style":814},[1360],{"type":558,"value":944},{"type":553,"tag":580,"props":1362,"children":1363},{"style":842},[1364],{"type":558,"value":1365},"word2",{"type":553,"tag":580,"props":1367,"children":1368},{"style":814},[1369],{"type":558,"value":1328},{"type":553,"tag":580,"props":1371,"children":1372},{"style":842},[1373],{"type":558,"value":1333},{"type":553,"tag":580,"props":1375,"children":1376},{"style":814},[1377],{"type":558,"value":1338},{"type":553,"tag":580,"props":1379,"children":1380},{"style":920},[1381],{"type":558,"value":1343},{"type":553,"tag":580,"props":1383,"children":1384},{"style":1224},[1385],{"type":558,"value":1227},{"type":553,"tag":580,"props":1387,"children":1388},{"style":814},[1389],{"type":558,"value":1390},");\n",{"type":553,"tag":580,"props":1392,"children":1394},{"class":582,"line":1393},16,[1395],{"type":553,"tag":580,"props":1396,"children":1397},{"style":814},[1398],{"type":558,"value":1399},"  }\n",{"type":553,"tag":580,"props":1401,"children":1403},{"class":582,"line":1402},17,[1404,1409,1413],{"type":553,"tag":580,"props":1405,"children":1406},{"style":820},[1407],{"type":558,"value":1408},"  return",{"type":553,"tag":580,"props":1410,"children":1411},{"style":842},[1412],{"type":558,"value":1217},{"type":553,"tag":580,"props":1414,"children":1415},{"style":814},[1416],{"type":558,"value":1008},{"type":553,"tag":580,"props":1418,"children":1420},{"class":582,"line":1419},18,[1421],{"type":553,"tag":580,"props":1422,"children":1423},{"style":814},[1424],{"type":558,"value":1425},"};\n",{"type":553,"tag":1427,"props":1428,"children":1429},"style",{},[1430],{"type":558,"value":1431},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":619,"depth":619,"links":1433},[1434,1435],{"id":778,"depth":592,"text":778},{"id":783,"depth":592,"text":783},"markdown","content:1.algorithm:3.leetcode:3.major:1768.merge-strings-alternately.md","content","1.algorithm/3.leetcode/3.major/1768.merge-strings-alternately.md","md",[1442,1444],{"_path":264,"title":263,"description":1443},"给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。",{"_path":283,"title":282,"description":546},1714099681390]