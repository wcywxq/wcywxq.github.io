[{"data":1,"prerenderedAt":1461},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/merge-strings-alternately":559,"/algorithm/leetcode/major/merge-strings-alternately-surround":1457},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":270,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":269,"description":563,"url":564,"body":565,"_type":1452,"_id":1453,"_source":1454,"_file":1455,"_extension":1456},"major",false,"","给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。","https://leetcode.cn/problems/merge-strings-alternately",{"type":566,"children":567,"toc":1448},"root",[568,575,580,585,651,656,711,716,771,776,791,797,802,1442],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"返回 合并后的字符串 。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"示例 1：",{"type":569,"tag":586,"props":587,"children":590},"pre",{"className":588,"code":589,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：word1 = \"abc\", word2 = \"pqr\"\n输出：\"apbqcr\"\n解释：字符串合并情况如下所示：\nword1： a b c\nword2： p q r\n合并后： a p b q c r\n",[591],{"type":569,"tag":592,"props":593,"children":594},"code",{"__ignoreMap":562},[595,606,615,624,633,642],{"type":569,"tag":596,"props":597,"children":600},"span",{"class":598,"line":599},"line",1,[601],{"type":569,"tag":596,"props":602,"children":603},{},[604],{"type":574,"value":605},"输入：word1 = \"abc\", word2 = \"pqr\"\n",{"type":569,"tag":596,"props":607,"children":609},{"class":598,"line":608},2,[610],{"type":569,"tag":596,"props":611,"children":612},{},[613],{"type":574,"value":614},"输出：\"apbqcr\"\n",{"type":569,"tag":596,"props":616,"children":618},{"class":598,"line":617},3,[619],{"type":569,"tag":596,"props":620,"children":621},{},[622],{"type":574,"value":623},"解释：字符串合并情况如下所示：\n",{"type":569,"tag":596,"props":625,"children":627},{"class":598,"line":626},4,[628],{"type":569,"tag":596,"props":629,"children":630},{},[631],{"type":574,"value":632},"word1： a b c\n",{"type":569,"tag":596,"props":634,"children":636},{"class":598,"line":635},5,[637],{"type":569,"tag":596,"props":638,"children":639},{},[640],{"type":574,"value":641},"word2： p q r\n",{"type":569,"tag":596,"props":643,"children":645},{"class":598,"line":644},6,[646],{"type":569,"tag":596,"props":647,"children":648},{},[649],{"type":574,"value":650},"合并后： a p b q c r\n",{"type":569,"tag":570,"props":652,"children":653},{},[654],{"type":574,"value":655},"示例 2：",{"type":569,"tag":586,"props":657,"children":659},{"className":588,"code":658,"language":574,"meta":562,"style":562},"输入：word1 = \"ab\", word2 = \"pqrs\"\n输出：\"apbqrs\"\n解释：注意，word2 比 word1 长，\"rs\" 需要追加到合并后字符串的末尾。\nword1： a b\nword2： p q r s\n合并后： a p b q r s\n",[660],{"type":569,"tag":592,"props":661,"children":662},{"__ignoreMap":562},[663,671,679,687,695,703],{"type":569,"tag":596,"props":664,"children":665},{"class":598,"line":599},[666],{"type":569,"tag":596,"props":667,"children":668},{},[669],{"type":574,"value":670},"输入：word1 = \"ab\", word2 = \"pqrs\"\n",{"type":569,"tag":596,"props":672,"children":673},{"class":598,"line":608},[674],{"type":569,"tag":596,"props":675,"children":676},{},[677],{"type":574,"value":678},"输出：\"apbqrs\"\n",{"type":569,"tag":596,"props":680,"children":681},{"class":598,"line":617},[682],{"type":569,"tag":596,"props":683,"children":684},{},[685],{"type":574,"value":686},"解释：注意，word2 比 word1 长，\"rs\" 需要追加到合并后字符串的末尾。\n",{"type":569,"tag":596,"props":688,"children":689},{"class":598,"line":626},[690],{"type":569,"tag":596,"props":691,"children":692},{},[693],{"type":574,"value":694},"word1： a b\n",{"type":569,"tag":596,"props":696,"children":697},{"class":598,"line":635},[698],{"type":569,"tag":596,"props":699,"children":700},{},[701],{"type":574,"value":702},"word2： p q r s\n",{"type":569,"tag":596,"props":704,"children":705},{"class":598,"line":644},[706],{"type":569,"tag":596,"props":707,"children":708},{},[709],{"type":574,"value":710},"合并后： a p b q r s\n",{"type":569,"tag":570,"props":712,"children":713},{},[714],{"type":574,"value":715},"示例 3：",{"type":569,"tag":586,"props":717,"children":719},{"className":588,"code":718,"language":574,"meta":562,"style":562},"输入：word1 = \"abcd\", word2 = \"pq\"\n输出：\"apbqcd\"\n解释：注意，word1 比 word2 长，\"cd\" 需要追加到合并后字符串的末尾。\nword1： a b c d\nword2： p q\n合并后： a p b q c d\n",[720],{"type":569,"tag":592,"props":721,"children":722},{"__ignoreMap":562},[723,731,739,747,755,763],{"type":569,"tag":596,"props":724,"children":725},{"class":598,"line":599},[726],{"type":569,"tag":596,"props":727,"children":728},{},[729],{"type":574,"value":730},"输入：word1 = \"abcd\", word2 = \"pq\"\n",{"type":569,"tag":596,"props":732,"children":733},{"class":598,"line":608},[734],{"type":569,"tag":596,"props":735,"children":736},{},[737],{"type":574,"value":738},"输出：\"apbqcd\"\n",{"type":569,"tag":596,"props":740,"children":741},{"class":598,"line":617},[742],{"type":569,"tag":596,"props":743,"children":744},{},[745],{"type":574,"value":746},"解释：注意，word1 比 word2 长，\"cd\" 需要追加到合并后字符串的末尾。\n",{"type":569,"tag":596,"props":748,"children":749},{"class":598,"line":626},[750],{"type":569,"tag":596,"props":751,"children":752},{},[753],{"type":574,"value":754},"word1： a b c d\n",{"type":569,"tag":596,"props":756,"children":757},{"class":598,"line":635},[758],{"type":569,"tag":596,"props":759,"children":760},{},[761],{"type":574,"value":762},"word2： p q\n",{"type":569,"tag":596,"props":764,"children":765},{"class":598,"line":644},[766],{"type":569,"tag":596,"props":767,"children":768},{},[769],{"type":574,"value":770},"合并后： a p b q c d\n",{"type":569,"tag":570,"props":772,"children":773},{},[774],{"type":574,"value":775},"提示：",{"type":569,"tag":777,"props":778,"children":779},"ul",{},[780,786],{"type":569,"tag":781,"props":782,"children":783},"li",{},[784],{"type":574,"value":785},"1 \u003C= word1.length, word2.length \u003C= 100",{"type":569,"tag":781,"props":787,"children":788},{},[789],{"type":574,"value":790},"word1 和 word2 由小写英文字母组成",{"type":569,"tag":792,"props":793,"children":795},"h2",{"id":794},"解题思路",[796],{"type":574,"value":794},{"type":569,"tag":792,"props":798,"children":800},{"id":799},"实现",[801],{"type":574,"value":799},{"type":569,"tag":586,"props":803,"children":807},{"className":804,"code":805,"language":806,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} word1\n * @param {string} word2\n * @return {string}\n */\nvar mergeAlternately = function (word1, word2) {\n  let len1 = word1.length;\n  let len2 = word2.length;\n  if (len1 === 0) return word2;\n  if (len2 === 0) return word1;\n\n  let maxLen = Math.max(len1, len2) - 1;\n  let str = \"\";\n  for (let i = 0; i \u003C= maxLen; i++) {\n    str += (word1[i] || \"\") + (word2[i] || \"\");\n  }\n  return str;\n};\n","js",[808],{"type":569,"tag":592,"props":809,"children":810},{"__ignoreMap":562},[811,820,862,894,923,931,986,1025,1058,1104,1145,1155,1221,1248,1318,1407,1416,1433],{"type":569,"tag":596,"props":812,"children":813},{"class":598,"line":599},[814],{"type":569,"tag":596,"props":815,"children":817},{"style":816},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[818],{"type":574,"value":819},"/**\n",{"type":569,"tag":596,"props":821,"children":822},{"class":598,"line":608},[823,828,834,840,845,851,856],{"type":569,"tag":596,"props":824,"children":825},{"style":816},[826],{"type":574,"value":827}," * ",{"type":569,"tag":596,"props":829,"children":831},{"style":830},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[832],{"type":574,"value":833},"@",{"type":569,"tag":596,"props":835,"children":837},{"style":836},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[838],{"type":574,"value":839},"param",{"type":569,"tag":596,"props":841,"children":842},{"style":830},[843],{"type":574,"value":844}," {",{"type":569,"tag":596,"props":846,"children":848},{"style":847},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[849],{"type":574,"value":850},"string",{"type":569,"tag":596,"props":852,"children":853},{"style":830},[854],{"type":574,"value":855},"}",{"type":569,"tag":596,"props":857,"children":859},{"style":858},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[860],{"type":574,"value":861}," word1\n",{"type":569,"tag":596,"props":863,"children":864},{"class":598,"line":617},[865,869,873,877,881,885,889],{"type":569,"tag":596,"props":866,"children":867},{"style":816},[868],{"type":574,"value":827},{"type":569,"tag":596,"props":870,"children":871},{"style":830},[872],{"type":574,"value":833},{"type":569,"tag":596,"props":874,"children":875},{"style":836},[876],{"type":574,"value":839},{"type":569,"tag":596,"props":878,"children":879},{"style":830},[880],{"type":574,"value":844},{"type":569,"tag":596,"props":882,"children":883},{"style":847},[884],{"type":574,"value":850},{"type":569,"tag":596,"props":886,"children":887},{"style":830},[888],{"type":574,"value":855},{"type":569,"tag":596,"props":890,"children":891},{"style":858},[892],{"type":574,"value":893}," word2\n",{"type":569,"tag":596,"props":895,"children":896},{"class":598,"line":626},[897,901,905,910,914,918],{"type":569,"tag":596,"props":898,"children":899},{"style":816},[900],{"type":574,"value":827},{"type":569,"tag":596,"props":902,"children":903},{"style":830},[904],{"type":574,"value":833},{"type":569,"tag":596,"props":906,"children":907},{"style":836},[908],{"type":574,"value":909},"return",{"type":569,"tag":596,"props":911,"children":912},{"style":830},[913],{"type":574,"value":844},{"type":569,"tag":596,"props":915,"children":916},{"style":847},[917],{"type":574,"value":850},{"type":569,"tag":596,"props":919,"children":920},{"style":830},[921],{"type":574,"value":922},"}\n",{"type":569,"tag":596,"props":924,"children":925},{"class":598,"line":635},[926],{"type":569,"tag":596,"props":927,"children":928},{"style":816},[929],{"type":574,"value":930}," */\n",{"type":569,"tag":596,"props":932,"children":933},{"class":598,"line":644},[934,940,946,951,956,961,966,971,976,981],{"type":569,"tag":596,"props":935,"children":937},{"style":936},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[938],{"type":574,"value":939},"var",{"type":569,"tag":596,"props":941,"children":943},{"style":942},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[944],{"type":574,"value":945}," mergeAlternately",{"type":569,"tag":596,"props":947,"children":948},{"style":830},[949],{"type":574,"value":950}," =",{"type":569,"tag":596,"props":952,"children":953},{"style":936},[954],{"type":574,"value":955}," function",{"type":569,"tag":596,"props":957,"children":958},{"style":830},[959],{"type":574,"value":960}," (",{"type":569,"tag":596,"props":962,"children":963},{"style":858},[964],{"type":574,"value":965},"word1",{"type":569,"tag":596,"props":967,"children":968},{"style":830},[969],{"type":574,"value":970},",",{"type":569,"tag":596,"props":972,"children":973},{"style":858},[974],{"type":574,"value":975}," word2",{"type":569,"tag":596,"props":977,"children":978},{"style":830},[979],{"type":574,"value":980},")",{"type":569,"tag":596,"props":982,"children":983},{"style":830},[984],{"type":574,"value":985}," {\n",{"type":569,"tag":596,"props":987,"children":989},{"class":598,"line":988},7,[990,995,1000,1004,1009,1014,1020],{"type":569,"tag":596,"props":991,"children":992},{"style":936},[993],{"type":574,"value":994},"  let",{"type":569,"tag":596,"props":996,"children":997},{"style":858},[998],{"type":574,"value":999}," len1",{"type":569,"tag":596,"props":1001,"children":1002},{"style":830},[1003],{"type":574,"value":950},{"type":569,"tag":596,"props":1005,"children":1006},{"style":858},[1007],{"type":574,"value":1008}," word1",{"type":569,"tag":596,"props":1010,"children":1011},{"style":830},[1012],{"type":574,"value":1013},".",{"type":569,"tag":596,"props":1015,"children":1017},{"style":1016},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1018],{"type":574,"value":1019},"length",{"type":569,"tag":596,"props":1021,"children":1022},{"style":830},[1023],{"type":574,"value":1024},";\n",{"type":569,"tag":596,"props":1026,"children":1028},{"class":598,"line":1027},8,[1029,1033,1038,1042,1046,1050,1054],{"type":569,"tag":596,"props":1030,"children":1031},{"style":936},[1032],{"type":574,"value":994},{"type":569,"tag":596,"props":1034,"children":1035},{"style":858},[1036],{"type":574,"value":1037}," len2",{"type":569,"tag":596,"props":1039,"children":1040},{"style":830},[1041],{"type":574,"value":950},{"type":569,"tag":596,"props":1043,"children":1044},{"style":858},[1045],{"type":574,"value":975},{"type":569,"tag":596,"props":1047,"children":1048},{"style":830},[1049],{"type":574,"value":1013},{"type":569,"tag":596,"props":1051,"children":1052},{"style":1016},[1053],{"type":574,"value":1019},{"type":569,"tag":596,"props":1055,"children":1056},{"style":830},[1057],{"type":574,"value":1024},{"type":569,"tag":596,"props":1059,"children":1061},{"class":598,"line":1060},9,[1062,1067,1071,1076,1081,1087,1091,1096,1100],{"type":569,"tag":596,"props":1063,"children":1064},{"style":836},[1065],{"type":574,"value":1066},"  if",{"type":569,"tag":596,"props":1068,"children":1069},{"style":830},[1070],{"type":574,"value":960},{"type":569,"tag":596,"props":1072,"children":1073},{"style":858},[1074],{"type":574,"value":1075},"len1",{"type":569,"tag":596,"props":1077,"children":1078},{"style":936},[1079],{"type":574,"value":1080}," ===",{"type":569,"tag":596,"props":1082,"children":1084},{"style":1083},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1085],{"type":574,"value":1086}," 0",{"type":569,"tag":596,"props":1088,"children":1089},{"style":830},[1090],{"type":574,"value":980},{"type":569,"tag":596,"props":1092,"children":1093},{"style":836},[1094],{"type":574,"value":1095}," return",{"type":569,"tag":596,"props":1097,"children":1098},{"style":858},[1099],{"type":574,"value":975},{"type":569,"tag":596,"props":1101,"children":1102},{"style":830},[1103],{"type":574,"value":1024},{"type":569,"tag":596,"props":1105,"children":1107},{"class":598,"line":1106},10,[1108,1112,1116,1121,1125,1129,1133,1137,1141],{"type":569,"tag":596,"props":1109,"children":1110},{"style":836},[1111],{"type":574,"value":1066},{"type":569,"tag":596,"props":1113,"children":1114},{"style":830},[1115],{"type":574,"value":960},{"type":569,"tag":596,"props":1117,"children":1118},{"style":858},[1119],{"type":574,"value":1120},"len2",{"type":569,"tag":596,"props":1122,"children":1123},{"style":936},[1124],{"type":574,"value":1080},{"type":569,"tag":596,"props":1126,"children":1127},{"style":1083},[1128],{"type":574,"value":1086},{"type":569,"tag":596,"props":1130,"children":1131},{"style":830},[1132],{"type":574,"value":980},{"type":569,"tag":596,"props":1134,"children":1135},{"style":836},[1136],{"type":574,"value":1095},{"type":569,"tag":596,"props":1138,"children":1139},{"style":858},[1140],{"type":574,"value":1008},{"type":569,"tag":596,"props":1142,"children":1143},{"style":830},[1144],{"type":574,"value":1024},{"type":569,"tag":596,"props":1146,"children":1148},{"class":598,"line":1147},11,[1149],{"type":569,"tag":596,"props":1150,"children":1152},{"emptyLinePlaceholder":1151},true,[1153],{"type":574,"value":1154},"\n",{"type":569,"tag":596,"props":1156,"children":1158},{"class":598,"line":1157},12,[1159,1163,1168,1172,1177,1181,1186,1191,1195,1199,1203,1207,1212,1217],{"type":569,"tag":596,"props":1160,"children":1161},{"style":936},[1162],{"type":574,"value":994},{"type":569,"tag":596,"props":1164,"children":1165},{"style":858},[1166],{"type":574,"value":1167}," maxLen",{"type":569,"tag":596,"props":1169,"children":1170},{"style":830},[1171],{"type":574,"value":950},{"type":569,"tag":596,"props":1173,"children":1174},{"style":858},[1175],{"type":574,"value":1176}," Math",{"type":569,"tag":596,"props":1178,"children":1179},{"style":830},[1180],{"type":574,"value":1013},{"type":569,"tag":596,"props":1182,"children":1183},{"style":942},[1184],{"type":574,"value":1185},"max",{"type":569,"tag":596,"props":1187,"children":1188},{"style":830},[1189],{"type":574,"value":1190},"(",{"type":569,"tag":596,"props":1192,"children":1193},{"style":858},[1194],{"type":574,"value":1075},{"type":569,"tag":596,"props":1196,"children":1197},{"style":830},[1198],{"type":574,"value":970},{"type":569,"tag":596,"props":1200,"children":1201},{"style":858},[1202],{"type":574,"value":1037},{"type":569,"tag":596,"props":1204,"children":1205},{"style":830},[1206],{"type":574,"value":980},{"type":569,"tag":596,"props":1208,"children":1209},{"style":936},[1210],{"type":574,"value":1211}," -",{"type":569,"tag":596,"props":1213,"children":1214},{"style":1083},[1215],{"type":574,"value":1216}," 1",{"type":569,"tag":596,"props":1218,"children":1219},{"style":830},[1220],{"type":574,"value":1024},{"type":569,"tag":596,"props":1222,"children":1224},{"class":598,"line":1223},13,[1225,1229,1234,1238,1244],{"type":569,"tag":596,"props":1226,"children":1227},{"style":936},[1228],{"type":574,"value":994},{"type":569,"tag":596,"props":1230,"children":1231},{"style":858},[1232],{"type":574,"value":1233}," str",{"type":569,"tag":596,"props":1235,"children":1236},{"style":830},[1237],{"type":574,"value":950},{"type":569,"tag":596,"props":1239,"children":1241},{"style":1240},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1242],{"type":574,"value":1243}," \"\"",{"type":569,"tag":596,"props":1245,"children":1246},{"style":830},[1247],{"type":574,"value":1024},{"type":569,"tag":596,"props":1249,"children":1251},{"class":598,"line":1250},14,[1252,1257,1261,1266,1271,1275,1279,1284,1288,1293,1297,1301,1305,1310,1314],{"type":569,"tag":596,"props":1253,"children":1254},{"style":836},[1255],{"type":574,"value":1256},"  for",{"type":569,"tag":596,"props":1258,"children":1259},{"style":830},[1260],{"type":574,"value":960},{"type":569,"tag":596,"props":1262,"children":1263},{"style":936},[1264],{"type":574,"value":1265},"let",{"type":569,"tag":596,"props":1267,"children":1268},{"style":858},[1269],{"type":574,"value":1270}," i",{"type":569,"tag":596,"props":1272,"children":1273},{"style":830},[1274],{"type":574,"value":950},{"type":569,"tag":596,"props":1276,"children":1277},{"style":1083},[1278],{"type":574,"value":1086},{"type":569,"tag":596,"props":1280,"children":1281},{"style":830},[1282],{"type":574,"value":1283},";",{"type":569,"tag":596,"props":1285,"children":1286},{"style":858},[1287],{"type":574,"value":1270},{"type":569,"tag":596,"props":1289,"children":1290},{"style":830},[1291],{"type":574,"value":1292}," \u003C=",{"type":569,"tag":596,"props":1294,"children":1295},{"style":858},[1296],{"type":574,"value":1167},{"type":569,"tag":596,"props":1298,"children":1299},{"style":830},[1300],{"type":574,"value":1283},{"type":569,"tag":596,"props":1302,"children":1303},{"style":858},[1304],{"type":574,"value":1270},{"type":569,"tag":596,"props":1306,"children":1307},{"style":936},[1308],{"type":574,"value":1309},"++",{"type":569,"tag":596,"props":1311,"children":1312},{"style":830},[1313],{"type":574,"value":980},{"type":569,"tag":596,"props":1315,"children":1316},{"style":830},[1317],{"type":574,"value":985},{"type":569,"tag":596,"props":1319,"children":1321},{"class":598,"line":1320},15,[1322,1327,1332,1336,1340,1345,1350,1355,1360,1364,1368,1373,1377,1382,1386,1390,1394,1398,1402],{"type":569,"tag":596,"props":1323,"children":1324},{"style":858},[1325],{"type":574,"value":1326},"    str",{"type":569,"tag":596,"props":1328,"children":1329},{"style":936},[1330],{"type":574,"value":1331}," +=",{"type":569,"tag":596,"props":1333,"children":1334},{"style":830},[1335],{"type":574,"value":960},{"type":569,"tag":596,"props":1337,"children":1338},{"style":858},[1339],{"type":574,"value":965},{"type":569,"tag":596,"props":1341,"children":1342},{"style":830},[1343],{"type":574,"value":1344},"[",{"type":569,"tag":596,"props":1346,"children":1347},{"style":858},[1348],{"type":574,"value":1349},"i",{"type":569,"tag":596,"props":1351,"children":1352},{"style":830},[1353],{"type":574,"value":1354},"]",{"type":569,"tag":596,"props":1356,"children":1357},{"style":936},[1358],{"type":574,"value":1359}," ||",{"type":569,"tag":596,"props":1361,"children":1362},{"style":1240},[1363],{"type":574,"value":1243},{"type":569,"tag":596,"props":1365,"children":1366},{"style":830},[1367],{"type":574,"value":980},{"type":569,"tag":596,"props":1369,"children":1370},{"style":936},[1371],{"type":574,"value":1372}," +",{"type":569,"tag":596,"props":1374,"children":1375},{"style":830},[1376],{"type":574,"value":960},{"type":569,"tag":596,"props":1378,"children":1379},{"style":858},[1380],{"type":574,"value":1381},"word2",{"type":569,"tag":596,"props":1383,"children":1384},{"style":830},[1385],{"type":574,"value":1344},{"type":569,"tag":596,"props":1387,"children":1388},{"style":858},[1389],{"type":574,"value":1349},{"type":569,"tag":596,"props":1391,"children":1392},{"style":830},[1393],{"type":574,"value":1354},{"type":569,"tag":596,"props":1395,"children":1396},{"style":936},[1397],{"type":574,"value":1359},{"type":569,"tag":596,"props":1399,"children":1400},{"style":1240},[1401],{"type":574,"value":1243},{"type":569,"tag":596,"props":1403,"children":1404},{"style":830},[1405],{"type":574,"value":1406},");\n",{"type":569,"tag":596,"props":1408,"children":1410},{"class":598,"line":1409},16,[1411],{"type":569,"tag":596,"props":1412,"children":1413},{"style":830},[1414],{"type":574,"value":1415},"  }\n",{"type":569,"tag":596,"props":1417,"children":1419},{"class":598,"line":1418},17,[1420,1425,1429],{"type":569,"tag":596,"props":1421,"children":1422},{"style":836},[1423],{"type":574,"value":1424},"  return",{"type":569,"tag":596,"props":1426,"children":1427},{"style":858},[1428],{"type":574,"value":1233},{"type":569,"tag":596,"props":1430,"children":1431},{"style":830},[1432],{"type":574,"value":1024},{"type":569,"tag":596,"props":1434,"children":1436},{"class":598,"line":1435},18,[1437],{"type":569,"tag":596,"props":1438,"children":1439},{"style":830},[1440],{"type":574,"value":1441},"};\n",{"type":569,"tag":1443,"props":1444,"children":1445},"style",{},[1446],{"type":574,"value":1447},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":635,"depth":635,"links":1449},[1450,1451],{"id":794,"depth":608,"text":794},{"id":799,"depth":608,"text":799},"markdown","content:1.algorithm:3.leetcode:3.major:1768.merge-strings-alternately.md","content","1.algorithm/3.leetcode/3.major/1768.merge-strings-alternately.md","md",[1458,1460],{"_path":267,"title":266,"description":1459},"给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。",{"_path":282,"title":281,"description":562},1717734309069]