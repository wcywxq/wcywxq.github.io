[{"data":1,"prerenderedAt":903},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/single-number":460,"/algorithm/leetcode/major/single-number-surround":898},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":165,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":164,"description":464,"url":465,"body":466,"_type":893,"_id":894,"_source":895,"_file":896,"_extension":897},"major",false,"","给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。","https://leetcode.cn/problems/single-number",{"type":467,"children":468,"toc":887},"root",[469,476,481,486,516,521,544,549,571,576,596,602,607,625,630,636,881],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"示例 1 ：",{"type":470,"tag":487,"props":488,"children":491},"pre",{"className":489,"code":490,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [2,2,1]\n输出：1\n",[492],{"type":470,"tag":493,"props":494,"children":495},"code",{"__ignoreMap":463},[496,507],{"type":470,"tag":497,"props":498,"children":501},"span",{"class":499,"line":500},"line",1,[502],{"type":470,"tag":497,"props":503,"children":504},{},[505],{"type":475,"value":506},"输入：nums = [2,2,1]\n",{"type":470,"tag":497,"props":508,"children":510},{"class":499,"line":509},2,[511],{"type":470,"tag":497,"props":512,"children":513},{},[514],{"type":475,"value":515},"输出：1\n",{"type":470,"tag":471,"props":517,"children":518},{},[519],{"type":475,"value":520},"示例 2 ：",{"type":470,"tag":487,"props":522,"children":524},{"className":489,"code":523,"language":475,"meta":463,"style":463},"输入：nums = [4,1,2,1,2]\n输出：4\n",[525],{"type":470,"tag":493,"props":526,"children":527},{"__ignoreMap":463},[528,536],{"type":470,"tag":497,"props":529,"children":530},{"class":499,"line":500},[531],{"type":470,"tag":497,"props":532,"children":533},{},[534],{"type":475,"value":535},"输入：nums = [4,1,2,1,2]\n",{"type":470,"tag":497,"props":537,"children":538},{"class":499,"line":509},[539],{"type":470,"tag":497,"props":540,"children":541},{},[542],{"type":475,"value":543},"输出：4\n",{"type":470,"tag":471,"props":545,"children":546},{},[547],{"type":475,"value":548},"示例 3 ：",{"type":470,"tag":487,"props":550,"children":552},{"className":489,"code":551,"language":475,"meta":463,"style":463},"输入：nums = [1]\n输出：1\n",[553],{"type":470,"tag":493,"props":554,"children":555},{"__ignoreMap":463},[556,564],{"type":470,"tag":497,"props":557,"children":558},{"class":499,"line":500},[559],{"type":470,"tag":497,"props":560,"children":561},{},[562],{"type":475,"value":563},"输入：nums = [1]\n",{"type":470,"tag":497,"props":565,"children":566},{"class":499,"line":509},[567],{"type":470,"tag":497,"props":568,"children":569},{},[570],{"type":475,"value":515},{"type":470,"tag":471,"props":572,"children":573},{},[574],{"type":475,"value":575},"提示：",{"type":470,"tag":577,"props":578,"children":579},"ul",{},[580,586,591],{"type":470,"tag":581,"props":582,"children":583},"li",{},[584],{"type":475,"value":585},"1 \u003C= nums.length \u003C= 3 * 10^4",{"type":470,"tag":581,"props":587,"children":588},{},[589],{"type":475,"value":590},"-3 * 10^4 \u003C= nums[i] \u003C= 3 * 10^4",{"type":470,"tag":581,"props":592,"children":593},{},[594],{"type":475,"value":595},"除了某个元素只出现一次以外，其余每个元素均出现两次。",{"type":470,"tag":597,"props":598,"children":600},"h2",{"id":599},"解题思路",[601],{"type":475,"value":599},{"type":470,"tag":471,"props":603,"children":604},{},[605],{"type":475,"value":606},"异或满足以下行为：",{"type":470,"tag":577,"props":608,"children":609},{},[610,615,620],{"type":470,"tag":581,"props":611,"children":612},{},[613],{"type":475,"value":614},"a ^ 0 = a；",{"type":470,"tag":581,"props":616,"children":617},{},[618],{"type":475,"value":619},"a ^ a = 0；",{"type":470,"tag":581,"props":621,"children":622},{},[623],{"type":475,"value":624},"a ^ b ^ a = (a ^ a) ^ b = 0 ^ b = b",{"type":470,"tag":597,"props":626,"children":628},{"id":627},"实现",[629],{"type":475,"value":627},{"type":470,"tag":631,"props":632,"children":634},"h3",{"id":633},"异或",[635],{"type":475,"value":633},{"type":470,"tag":487,"props":637,"children":641},{"className":638,"code":639,"language":640,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar singleNumber = function (nums) {\n  let ans = 0;\n  for (let num of nums) {\n    ans ^= num;\n  }\n  return ans;\n};\n","js",[642],{"type":470,"tag":493,"props":643,"children":644},{"__ignoreMap":463},[645,654,680,698,707,751,782,820,842,851,868],{"type":470,"tag":497,"props":646,"children":647},{"class":499,"line":500},[648],{"type":470,"tag":497,"props":649,"children":651},{"style":650},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[652],{"type":475,"value":653},"/**\n",{"type":470,"tag":497,"props":655,"children":656},{"class":499,"line":509},[657,662,668,674],{"type":470,"tag":497,"props":658,"children":659},{"style":650},[660],{"type":475,"value":661}," * ",{"type":470,"tag":497,"props":663,"children":665},{"style":664},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[666],{"type":475,"value":667},"@param",{"type":470,"tag":497,"props":669,"children":671},{"style":670},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[672],{"type":475,"value":673}," {number[]}",{"type":470,"tag":497,"props":675,"children":677},{"style":676},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[678],{"type":475,"value":679}," nums\n",{"type":470,"tag":497,"props":681,"children":683},{"class":499,"line":682},3,[684,688,693],{"type":470,"tag":497,"props":685,"children":686},{"style":650},[687],{"type":475,"value":661},{"type":470,"tag":497,"props":689,"children":690},{"style":664},[691],{"type":475,"value":692},"@return",{"type":470,"tag":497,"props":694,"children":695},{"style":670},[696],{"type":475,"value":697}," {number}\n",{"type":470,"tag":497,"props":699,"children":701},{"class":499,"line":700},4,[702],{"type":470,"tag":497,"props":703,"children":704},{"style":650},[705],{"type":475,"value":706}," */\n",{"type":470,"tag":497,"props":708,"children":710},{"class":499,"line":709},5,[711,717,723,729,734,740,746],{"type":470,"tag":497,"props":712,"children":714},{"style":713},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[715],{"type":475,"value":716},"var",{"type":470,"tag":497,"props":718,"children":720},{"style":719},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[721],{"type":475,"value":722}," singleNumber",{"type":470,"tag":497,"props":724,"children":726},{"style":725},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[727],{"type":475,"value":728}," =",{"type":470,"tag":497,"props":730,"children":731},{"style":713},[732],{"type":475,"value":733}," function",{"type":470,"tag":497,"props":735,"children":737},{"style":736},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[738],{"type":475,"value":739}," (",{"type":470,"tag":497,"props":741,"children":743},{"style":742},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[744],{"type":475,"value":745},"nums",{"type":470,"tag":497,"props":747,"children":748},{"style":736},[749],{"type":475,"value":750},") {\n",{"type":470,"tag":497,"props":752,"children":754},{"class":499,"line":753},6,[755,760,766,770,776],{"type":470,"tag":497,"props":756,"children":757},{"style":713},[758],{"type":475,"value":759},"  let",{"type":470,"tag":497,"props":761,"children":763},{"style":762},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[764],{"type":475,"value":765}," ans",{"type":470,"tag":497,"props":767,"children":768},{"style":725},[769],{"type":475,"value":728},{"type":470,"tag":497,"props":771,"children":773},{"style":772},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[774],{"type":475,"value":775}," 0",{"type":470,"tag":497,"props":777,"children":779},{"style":778},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[780],{"type":475,"value":781},";\n",{"type":470,"tag":497,"props":783,"children":785},{"class":499,"line":784},7,[786,792,796,801,806,811,816],{"type":470,"tag":497,"props":787,"children":789},{"style":788},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[790],{"type":475,"value":791},"  for",{"type":470,"tag":497,"props":793,"children":794},{"style":736},[795],{"type":475,"value":739},{"type":470,"tag":497,"props":797,"children":798},{"style":713},[799],{"type":475,"value":800},"let",{"type":470,"tag":497,"props":802,"children":803},{"style":762},[804],{"type":475,"value":805}," num",{"type":470,"tag":497,"props":807,"children":808},{"style":725},[809],{"type":475,"value":810}," of",{"type":470,"tag":497,"props":812,"children":813},{"style":762},[814],{"type":475,"value":815}," nums",{"type":470,"tag":497,"props":817,"children":818},{"style":736},[819],{"type":475,"value":750},{"type":470,"tag":497,"props":821,"children":823},{"class":499,"line":822},8,[824,829,834,838],{"type":470,"tag":497,"props":825,"children":826},{"style":762},[827],{"type":475,"value":828},"    ans",{"type":470,"tag":497,"props":830,"children":831},{"style":725},[832],{"type":475,"value":833}," ^=",{"type":470,"tag":497,"props":835,"children":836},{"style":762},[837],{"type":475,"value":805},{"type":470,"tag":497,"props":839,"children":840},{"style":778},[841],{"type":475,"value":781},{"type":470,"tag":497,"props":843,"children":845},{"class":499,"line":844},9,[846],{"type":470,"tag":497,"props":847,"children":848},{"style":736},[849],{"type":475,"value":850},"  }\n",{"type":470,"tag":497,"props":852,"children":854},{"class":499,"line":853},10,[855,860,864],{"type":470,"tag":497,"props":856,"children":857},{"style":788},[858],{"type":475,"value":859},"  return",{"type":470,"tag":497,"props":861,"children":862},{"style":762},[863],{"type":475,"value":765},{"type":470,"tag":497,"props":865,"children":866},{"style":778},[867],{"type":475,"value":781},{"type":470,"tag":497,"props":869,"children":871},{"class":499,"line":870},11,[872,877],{"type":470,"tag":497,"props":873,"children":874},{"style":736},[875],{"type":475,"value":876},"}",{"type":470,"tag":497,"props":878,"children":879},{"style":778},[880],{"type":475,"value":781},{"type":470,"tag":882,"props":883,"children":884},"style",{},[885],{"type":475,"value":886},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":709,"depth":709,"links":888},[889,890],{"id":599,"depth":509,"text":599},{"id":627,"depth":509,"text":627,"children":891},[892],{"id":633,"depth":682,"text":633},"markdown","content:1.algorithm:3.leetcode:3.major:136.single-number.md","content","1.algorithm/3.leetcode/3.major/136.single-number.md","md",[899,901],{"_path":162,"title":161,"description":900},"给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：",{"_path":168,"title":167,"description":902},"给你一个链表的头节点 head ，判断链表中是否有环。",1713626403447]