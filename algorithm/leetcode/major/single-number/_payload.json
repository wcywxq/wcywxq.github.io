[{"data":1,"prerenderedAt":909},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/single-number":466,"/algorithm/leetcode/major/single-number-surround":904},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":171,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":170,"description":470,"url":471,"body":472,"_type":899,"_id":900,"_source":901,"_file":902,"_extension":903},"major",false,"","给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。","https://leetcode.cn/problems/single-number",{"type":473,"children":474,"toc":893},"root",[475,482,487,492,522,527,550,555,577,582,602,608,613,631,636,642,887],{"type":476,"tag":477,"props":478,"children":479},"element","p",{},[480],{"type":481,"value":470},"text",{"type":476,"tag":477,"props":483,"children":484},{},[485],{"type":481,"value":486},"你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。",{"type":476,"tag":477,"props":488,"children":489},{},[490],{"type":481,"value":491},"示例 1 ：",{"type":476,"tag":493,"props":494,"children":497},"pre",{"className":495,"code":496,"language":481,"meta":469,"style":469},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [2,2,1]\n输出：1\n",[498],{"type":476,"tag":499,"props":500,"children":501},"code",{"__ignoreMap":469},[502,513],{"type":476,"tag":503,"props":504,"children":507},"span",{"class":505,"line":506},"line",1,[508],{"type":476,"tag":503,"props":509,"children":510},{},[511],{"type":481,"value":512},"输入：nums = [2,2,1]\n",{"type":476,"tag":503,"props":514,"children":516},{"class":505,"line":515},2,[517],{"type":476,"tag":503,"props":518,"children":519},{},[520],{"type":481,"value":521},"输出：1\n",{"type":476,"tag":477,"props":523,"children":524},{},[525],{"type":481,"value":526},"示例 2 ：",{"type":476,"tag":493,"props":528,"children":530},{"className":495,"code":529,"language":481,"meta":469,"style":469},"输入：nums = [4,1,2,1,2]\n输出：4\n",[531],{"type":476,"tag":499,"props":532,"children":533},{"__ignoreMap":469},[534,542],{"type":476,"tag":503,"props":535,"children":536},{"class":505,"line":506},[537],{"type":476,"tag":503,"props":538,"children":539},{},[540],{"type":481,"value":541},"输入：nums = [4,1,2,1,2]\n",{"type":476,"tag":503,"props":543,"children":544},{"class":505,"line":515},[545],{"type":476,"tag":503,"props":546,"children":547},{},[548],{"type":481,"value":549},"输出：4\n",{"type":476,"tag":477,"props":551,"children":552},{},[553],{"type":481,"value":554},"示例 3 ：",{"type":476,"tag":493,"props":556,"children":558},{"className":495,"code":557,"language":481,"meta":469,"style":469},"输入：nums = [1]\n输出：1\n",[559],{"type":476,"tag":499,"props":560,"children":561},{"__ignoreMap":469},[562,570],{"type":476,"tag":503,"props":563,"children":564},{"class":505,"line":506},[565],{"type":476,"tag":503,"props":566,"children":567},{},[568],{"type":481,"value":569},"输入：nums = [1]\n",{"type":476,"tag":503,"props":571,"children":572},{"class":505,"line":515},[573],{"type":476,"tag":503,"props":574,"children":575},{},[576],{"type":481,"value":521},{"type":476,"tag":477,"props":578,"children":579},{},[580],{"type":481,"value":581},"提示：",{"type":476,"tag":583,"props":584,"children":585},"ul",{},[586,592,597],{"type":476,"tag":587,"props":588,"children":589},"li",{},[590],{"type":481,"value":591},"1 \u003C= nums.length \u003C= 3 * 10^4",{"type":476,"tag":587,"props":593,"children":594},{},[595],{"type":481,"value":596},"-3 * 10^4 \u003C= nums[i] \u003C= 3 * 10^4",{"type":476,"tag":587,"props":598,"children":599},{},[600],{"type":481,"value":601},"除了某个元素只出现一次以外，其余每个元素均出现两次。",{"type":476,"tag":603,"props":604,"children":606},"h2",{"id":605},"解题思路",[607],{"type":481,"value":605},{"type":476,"tag":477,"props":609,"children":610},{},[611],{"type":481,"value":612},"异或满足以下行为：",{"type":476,"tag":583,"props":614,"children":615},{},[616,621,626],{"type":476,"tag":587,"props":617,"children":618},{},[619],{"type":481,"value":620},"a ^ 0 = a；",{"type":476,"tag":587,"props":622,"children":623},{},[624],{"type":481,"value":625},"a ^ a = 0；",{"type":476,"tag":587,"props":627,"children":628},{},[629],{"type":481,"value":630},"a ^ b ^ a = (a ^ a) ^ b = 0 ^ b = b",{"type":476,"tag":603,"props":632,"children":634},{"id":633},"实现",[635],{"type":481,"value":633},{"type":476,"tag":637,"props":638,"children":640},"h3",{"id":639},"异或",[641],{"type":481,"value":639},{"type":476,"tag":493,"props":643,"children":647},{"className":644,"code":645,"language":646,"meta":469,"style":469},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar singleNumber = function (nums) {\n  let ans = 0;\n  for (let num of nums) {\n    ans ^= num;\n  }\n  return ans;\n};\n","js",[648],{"type":476,"tag":499,"props":649,"children":650},{"__ignoreMap":469},[651,660,686,704,713,757,788,826,848,857,874],{"type":476,"tag":503,"props":652,"children":653},{"class":505,"line":506},[654],{"type":476,"tag":503,"props":655,"children":657},{"style":656},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[658],{"type":481,"value":659},"/**\n",{"type":476,"tag":503,"props":661,"children":662},{"class":505,"line":515},[663,668,674,680],{"type":476,"tag":503,"props":664,"children":665},{"style":656},[666],{"type":481,"value":667}," * ",{"type":476,"tag":503,"props":669,"children":671},{"style":670},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[672],{"type":481,"value":673},"@param",{"type":476,"tag":503,"props":675,"children":677},{"style":676},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[678],{"type":481,"value":679}," {number[]}",{"type":476,"tag":503,"props":681,"children":683},{"style":682},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[684],{"type":481,"value":685}," nums\n",{"type":476,"tag":503,"props":687,"children":689},{"class":505,"line":688},3,[690,694,699],{"type":476,"tag":503,"props":691,"children":692},{"style":656},[693],{"type":481,"value":667},{"type":476,"tag":503,"props":695,"children":696},{"style":670},[697],{"type":481,"value":698},"@return",{"type":476,"tag":503,"props":700,"children":701},{"style":676},[702],{"type":481,"value":703}," {number}\n",{"type":476,"tag":503,"props":705,"children":707},{"class":505,"line":706},4,[708],{"type":476,"tag":503,"props":709,"children":710},{"style":656},[711],{"type":481,"value":712}," */\n",{"type":476,"tag":503,"props":714,"children":716},{"class":505,"line":715},5,[717,723,729,735,740,746,752],{"type":476,"tag":503,"props":718,"children":720},{"style":719},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[721],{"type":481,"value":722},"var",{"type":476,"tag":503,"props":724,"children":726},{"style":725},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[727],{"type":481,"value":728}," singleNumber",{"type":476,"tag":503,"props":730,"children":732},{"style":731},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[733],{"type":481,"value":734}," =",{"type":476,"tag":503,"props":736,"children":737},{"style":719},[738],{"type":481,"value":739}," function",{"type":476,"tag":503,"props":741,"children":743},{"style":742},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[744],{"type":481,"value":745}," (",{"type":476,"tag":503,"props":747,"children":749},{"style":748},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[750],{"type":481,"value":751},"nums",{"type":476,"tag":503,"props":753,"children":754},{"style":742},[755],{"type":481,"value":756},") {\n",{"type":476,"tag":503,"props":758,"children":760},{"class":505,"line":759},6,[761,766,772,776,782],{"type":476,"tag":503,"props":762,"children":763},{"style":719},[764],{"type":481,"value":765},"  let",{"type":476,"tag":503,"props":767,"children":769},{"style":768},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[770],{"type":481,"value":771}," ans",{"type":476,"tag":503,"props":773,"children":774},{"style":731},[775],{"type":481,"value":734},{"type":476,"tag":503,"props":777,"children":779},{"style":778},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[780],{"type":481,"value":781}," 0",{"type":476,"tag":503,"props":783,"children":785},{"style":784},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[786],{"type":481,"value":787},";\n",{"type":476,"tag":503,"props":789,"children":791},{"class":505,"line":790},7,[792,798,802,807,812,817,822],{"type":476,"tag":503,"props":793,"children":795},{"style":794},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[796],{"type":481,"value":797},"  for",{"type":476,"tag":503,"props":799,"children":800},{"style":742},[801],{"type":481,"value":745},{"type":476,"tag":503,"props":803,"children":804},{"style":719},[805],{"type":481,"value":806},"let",{"type":476,"tag":503,"props":808,"children":809},{"style":768},[810],{"type":481,"value":811}," num",{"type":476,"tag":503,"props":813,"children":814},{"style":731},[815],{"type":481,"value":816}," of",{"type":476,"tag":503,"props":818,"children":819},{"style":768},[820],{"type":481,"value":821}," nums",{"type":476,"tag":503,"props":823,"children":824},{"style":742},[825],{"type":481,"value":756},{"type":476,"tag":503,"props":827,"children":829},{"class":505,"line":828},8,[830,835,840,844],{"type":476,"tag":503,"props":831,"children":832},{"style":768},[833],{"type":481,"value":834},"    ans",{"type":476,"tag":503,"props":836,"children":837},{"style":731},[838],{"type":481,"value":839}," ^=",{"type":476,"tag":503,"props":841,"children":842},{"style":768},[843],{"type":481,"value":811},{"type":476,"tag":503,"props":845,"children":846},{"style":784},[847],{"type":481,"value":787},{"type":476,"tag":503,"props":849,"children":851},{"class":505,"line":850},9,[852],{"type":476,"tag":503,"props":853,"children":854},{"style":742},[855],{"type":481,"value":856},"  }\n",{"type":476,"tag":503,"props":858,"children":860},{"class":505,"line":859},10,[861,866,870],{"type":476,"tag":503,"props":862,"children":863},{"style":794},[864],{"type":481,"value":865},"  return",{"type":476,"tag":503,"props":867,"children":868},{"style":768},[869],{"type":481,"value":771},{"type":476,"tag":503,"props":871,"children":872},{"style":784},[873],{"type":481,"value":787},{"type":476,"tag":503,"props":875,"children":877},{"class":505,"line":876},11,[878,883],{"type":476,"tag":503,"props":879,"children":880},{"style":742},[881],{"type":481,"value":882},"}",{"type":476,"tag":503,"props":884,"children":885},{"style":784},[886],{"type":481,"value":787},{"type":476,"tag":888,"props":889,"children":890},"style",{},[891],{"type":481,"value":892},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":715,"depth":715,"links":894},[895,896],{"id":605,"depth":515,"text":605},{"id":633,"depth":515,"text":633,"children":897},[898],{"id":639,"depth":688,"text":639},"markdown","content:1.algorithm:3.leetcode:3.major:136.single-number.md","content","1.algorithm/3.leetcode/3.major/136.single-number.md","md",[905,907],{"_path":168,"title":167,"description":906},"给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：",{"_path":174,"title":173,"description":908},"给你一个链表的头节点 head ，判断链表中是否有环。",1714007215185]