[{"data":1,"prerenderedAt":1030},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/single-number":559,"/algorithm/leetcode/major/single-number-surround":1025},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":171,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":170,"description":563,"url":564,"body":565,"_type":1020,"_id":1021,"_source":1022,"_file":1023,"_extension":1024},"major",false,"","给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。","https://leetcode.cn/problems/single-number",{"type":566,"children":567,"toc":1014},"root",[568,575,580,585,615,620,643,648,670,675,695,701,706,724,729,735,1008],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"示例 1 ：",{"type":569,"tag":586,"props":587,"children":590},"pre",{"className":588,"code":589,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [2,2,1]\n输出：1\n",[591],{"type":569,"tag":592,"props":593,"children":594},"code",{"__ignoreMap":562},[595,606],{"type":569,"tag":596,"props":597,"children":600},"span",{"class":598,"line":599},"line",1,[601],{"type":569,"tag":596,"props":602,"children":603},{},[604],{"type":574,"value":605},"输入：nums = [2,2,1]\n",{"type":569,"tag":596,"props":607,"children":609},{"class":598,"line":608},2,[610],{"type":569,"tag":596,"props":611,"children":612},{},[613],{"type":574,"value":614},"输出：1\n",{"type":569,"tag":570,"props":616,"children":617},{},[618],{"type":574,"value":619},"示例 2 ：",{"type":569,"tag":586,"props":621,"children":623},{"className":588,"code":622,"language":574,"meta":562,"style":562},"输入：nums = [4,1,2,1,2]\n输出：4\n",[624],{"type":569,"tag":592,"props":625,"children":626},{"__ignoreMap":562},[627,635],{"type":569,"tag":596,"props":628,"children":629},{"class":598,"line":599},[630],{"type":569,"tag":596,"props":631,"children":632},{},[633],{"type":574,"value":634},"输入：nums = [4,1,2,1,2]\n",{"type":569,"tag":596,"props":636,"children":637},{"class":598,"line":608},[638],{"type":569,"tag":596,"props":639,"children":640},{},[641],{"type":574,"value":642},"输出：4\n",{"type":569,"tag":570,"props":644,"children":645},{},[646],{"type":574,"value":647},"示例 3 ：",{"type":569,"tag":586,"props":649,"children":651},{"className":588,"code":650,"language":574,"meta":562,"style":562},"输入：nums = [1]\n输出：1\n",[652],{"type":569,"tag":592,"props":653,"children":654},{"__ignoreMap":562},[655,663],{"type":569,"tag":596,"props":656,"children":657},{"class":598,"line":599},[658],{"type":569,"tag":596,"props":659,"children":660},{},[661],{"type":574,"value":662},"输入：nums = [1]\n",{"type":569,"tag":596,"props":664,"children":665},{"class":598,"line":608},[666],{"type":569,"tag":596,"props":667,"children":668},{},[669],{"type":574,"value":614},{"type":569,"tag":570,"props":671,"children":672},{},[673],{"type":574,"value":674},"提示：",{"type":569,"tag":676,"props":677,"children":678},"ul",{},[679,685,690],{"type":569,"tag":680,"props":681,"children":682},"li",{},[683],{"type":574,"value":684},"1 \u003C= nums.length \u003C= 3 * 10^4",{"type":569,"tag":680,"props":686,"children":687},{},[688],{"type":574,"value":689},"-3 * 10^4 \u003C= nums[i] \u003C= 3 * 10^4",{"type":569,"tag":680,"props":691,"children":692},{},[693],{"type":574,"value":694},"除了某个元素只出现一次以外，其余每个元素均出现两次。",{"type":569,"tag":696,"props":697,"children":699},"h2",{"id":698},"解题思路",[700],{"type":574,"value":698},{"type":569,"tag":570,"props":702,"children":703},{},[704],{"type":574,"value":705},"异或满足以下行为：",{"type":569,"tag":676,"props":707,"children":708},{},[709,714,719],{"type":569,"tag":680,"props":710,"children":711},{},[712],{"type":574,"value":713},"a ^ 0 = a；",{"type":569,"tag":680,"props":715,"children":716},{},[717],{"type":574,"value":718},"a ^ a = 0；",{"type":569,"tag":680,"props":720,"children":721},{},[722],{"type":574,"value":723},"a ^ b ^ a = (a ^ a) ^ b = 0 ^ b = b",{"type":569,"tag":696,"props":725,"children":727},{"id":726},"实现",[728],{"type":574,"value":726},{"type":569,"tag":730,"props":731,"children":733},"h3",{"id":732},"异或",[734],{"type":574,"value":732},{"type":569,"tag":586,"props":736,"children":740},{"className":737,"code":738,"language":739,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar singleNumber = function (nums) {\n  let ans = 0;\n  for (let num of nums) {\n    ans ^= num;\n  }\n  return ans;\n};\n","js",[741],{"type":569,"tag":592,"props":742,"children":743},{"__ignoreMap":562},[744,753,795,826,835,881,910,951,973,982,999],{"type":569,"tag":596,"props":745,"children":746},{"class":598,"line":599},[747],{"type":569,"tag":596,"props":748,"children":750},{"style":749},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[751],{"type":574,"value":752},"/**\n",{"type":569,"tag":596,"props":754,"children":755},{"class":598,"line":608},[756,761,767,773,778,784,789],{"type":569,"tag":596,"props":757,"children":758},{"style":749},[759],{"type":574,"value":760}," * ",{"type":569,"tag":596,"props":762,"children":764},{"style":763},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[765],{"type":574,"value":766},"@",{"type":569,"tag":596,"props":768,"children":770},{"style":769},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[771],{"type":574,"value":772},"param",{"type":569,"tag":596,"props":774,"children":775},{"style":763},[776],{"type":574,"value":777}," {",{"type":569,"tag":596,"props":779,"children":781},{"style":780},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[782],{"type":574,"value":783},"number[]",{"type":569,"tag":596,"props":785,"children":786},{"style":763},[787],{"type":574,"value":788},"}",{"type":569,"tag":596,"props":790,"children":792},{"style":791},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[793],{"type":574,"value":794}," nums\n",{"type":569,"tag":596,"props":796,"children":798},{"class":598,"line":797},3,[799,803,807,812,816,821],{"type":569,"tag":596,"props":800,"children":801},{"style":749},[802],{"type":574,"value":760},{"type":569,"tag":596,"props":804,"children":805},{"style":763},[806],{"type":574,"value":766},{"type":569,"tag":596,"props":808,"children":809},{"style":769},[810],{"type":574,"value":811},"return",{"type":569,"tag":596,"props":813,"children":814},{"style":763},[815],{"type":574,"value":777},{"type":569,"tag":596,"props":817,"children":818},{"style":780},[819],{"type":574,"value":820},"number",{"type":569,"tag":596,"props":822,"children":823},{"style":763},[824],{"type":574,"value":825},"}\n",{"type":569,"tag":596,"props":827,"children":829},{"class":598,"line":828},4,[830],{"type":569,"tag":596,"props":831,"children":832},{"style":749},[833],{"type":574,"value":834}," */\n",{"type":569,"tag":596,"props":836,"children":838},{"class":598,"line":837},5,[839,845,851,856,861,866,871,876],{"type":569,"tag":596,"props":840,"children":842},{"style":841},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[843],{"type":574,"value":844},"var",{"type":569,"tag":596,"props":846,"children":848},{"style":847},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[849],{"type":574,"value":850}," singleNumber",{"type":569,"tag":596,"props":852,"children":853},{"style":763},[854],{"type":574,"value":855}," =",{"type":569,"tag":596,"props":857,"children":858},{"style":841},[859],{"type":574,"value":860}," function",{"type":569,"tag":596,"props":862,"children":863},{"style":763},[864],{"type":574,"value":865}," (",{"type":569,"tag":596,"props":867,"children":868},{"style":791},[869],{"type":574,"value":870},"nums",{"type":569,"tag":596,"props":872,"children":873},{"style":763},[874],{"type":574,"value":875},")",{"type":569,"tag":596,"props":877,"children":878},{"style":763},[879],{"type":574,"value":880}," {\n",{"type":569,"tag":596,"props":882,"children":884},{"class":598,"line":883},6,[885,890,895,899,905],{"type":569,"tag":596,"props":886,"children":887},{"style":841},[888],{"type":574,"value":889},"  let",{"type":569,"tag":596,"props":891,"children":892},{"style":791},[893],{"type":574,"value":894}," ans",{"type":569,"tag":596,"props":896,"children":897},{"style":763},[898],{"type":574,"value":855},{"type":569,"tag":596,"props":900,"children":902},{"style":901},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[903],{"type":574,"value":904}," 0",{"type":569,"tag":596,"props":906,"children":907},{"style":763},[908],{"type":574,"value":909},";\n",{"type":569,"tag":596,"props":911,"children":913},{"class":598,"line":912},7,[914,919,923,928,933,938,943,947],{"type":569,"tag":596,"props":915,"children":916},{"style":769},[917],{"type":574,"value":918},"  for",{"type":569,"tag":596,"props":920,"children":921},{"style":763},[922],{"type":574,"value":865},{"type":569,"tag":596,"props":924,"children":925},{"style":841},[926],{"type":574,"value":927},"let",{"type":569,"tag":596,"props":929,"children":930},{"style":791},[931],{"type":574,"value":932}," num",{"type":569,"tag":596,"props":934,"children":935},{"style":841},[936],{"type":574,"value":937}," of",{"type":569,"tag":596,"props":939,"children":940},{"style":791},[941],{"type":574,"value":942}," nums",{"type":569,"tag":596,"props":944,"children":945},{"style":763},[946],{"type":574,"value":875},{"type":569,"tag":596,"props":948,"children":949},{"style":763},[950],{"type":574,"value":880},{"type":569,"tag":596,"props":952,"children":954},{"class":598,"line":953},8,[955,960,965,969],{"type":569,"tag":596,"props":956,"children":957},{"style":791},[958],{"type":574,"value":959},"    ans",{"type":569,"tag":596,"props":961,"children":962},{"style":841},[963],{"type":574,"value":964}," ^=",{"type":569,"tag":596,"props":966,"children":967},{"style":791},[968],{"type":574,"value":932},{"type":569,"tag":596,"props":970,"children":971},{"style":763},[972],{"type":574,"value":909},{"type":569,"tag":596,"props":974,"children":976},{"class":598,"line":975},9,[977],{"type":569,"tag":596,"props":978,"children":979},{"style":763},[980],{"type":574,"value":981},"  }\n",{"type":569,"tag":596,"props":983,"children":985},{"class":598,"line":984},10,[986,991,995],{"type":569,"tag":596,"props":987,"children":988},{"style":769},[989],{"type":574,"value":990},"  return",{"type":569,"tag":596,"props":992,"children":993},{"style":791},[994],{"type":574,"value":894},{"type":569,"tag":596,"props":996,"children":997},{"style":763},[998],{"type":574,"value":909},{"type":569,"tag":596,"props":1000,"children":1002},{"class":598,"line":1001},11,[1003],{"type":569,"tag":596,"props":1004,"children":1005},{"style":763},[1006],{"type":574,"value":1007},"};\n",{"type":569,"tag":1009,"props":1010,"children":1011},"style",{},[1012],{"type":574,"value":1013},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":837,"depth":837,"links":1015},[1016,1017],{"id":698,"depth":608,"text":698},{"id":726,"depth":608,"text":726,"children":1018},[1019],{"id":732,"depth":797,"text":732},"markdown","content:1.algorithm:3.leetcode:3.major:136.single-number.md","content","1.algorithm/3.leetcode/3.major/136.single-number.md","md",[1026,1028],{"_path":168,"title":167,"description":1027},"给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：",{"_path":174,"title":173,"description":1029},"给你一个链表的头节点 head ，判断链表中是否有环。",1717735570788]