[{"data":1,"prerenderedAt":949},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/single-number":478,"/algorithm/leetcode/major/single-number-surround":944},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":171,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":170,"description":482,"url":483,"body":484,"_type":939,"_id":940,"_source":941,"_file":942,"_extension":943},"major",false,"","给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。","https://leetcode.cn/problems/single-number",{"type":485,"children":486,"toc":933},"root",[487,494,499,504,534,539,562,567,589,594,614,620,625,643,648,654,927],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。",{"type":488,"tag":489,"props":500,"children":501},{},[502],{"type":493,"value":503},"示例 1 ：",{"type":488,"tag":505,"props":506,"children":509},"pre",{"className":507,"code":508,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [2,2,1]\n输出：1\n",[510],{"type":488,"tag":511,"props":512,"children":513},"code",{"__ignoreMap":481},[514,525],{"type":488,"tag":515,"props":516,"children":519},"span",{"class":517,"line":518},"line",1,[520],{"type":488,"tag":515,"props":521,"children":522},{},[523],{"type":493,"value":524},"输入：nums = [2,2,1]\n",{"type":488,"tag":515,"props":526,"children":528},{"class":517,"line":527},2,[529],{"type":488,"tag":515,"props":530,"children":531},{},[532],{"type":493,"value":533},"输出：1\n",{"type":488,"tag":489,"props":535,"children":536},{},[537],{"type":493,"value":538},"示例 2 ：",{"type":488,"tag":505,"props":540,"children":542},{"className":507,"code":541,"language":493,"meta":481,"style":481},"输入：nums = [4,1,2,1,2]\n输出：4\n",[543],{"type":488,"tag":511,"props":544,"children":545},{"__ignoreMap":481},[546,554],{"type":488,"tag":515,"props":547,"children":548},{"class":517,"line":518},[549],{"type":488,"tag":515,"props":550,"children":551},{},[552],{"type":493,"value":553},"输入：nums = [4,1,2,1,2]\n",{"type":488,"tag":515,"props":555,"children":556},{"class":517,"line":527},[557],{"type":488,"tag":515,"props":558,"children":559},{},[560],{"type":493,"value":561},"输出：4\n",{"type":488,"tag":489,"props":563,"children":564},{},[565],{"type":493,"value":566},"示例 3 ：",{"type":488,"tag":505,"props":568,"children":570},{"className":507,"code":569,"language":493,"meta":481,"style":481},"输入：nums = [1]\n输出：1\n",[571],{"type":488,"tag":511,"props":572,"children":573},{"__ignoreMap":481},[574,582],{"type":488,"tag":515,"props":575,"children":576},{"class":517,"line":518},[577],{"type":488,"tag":515,"props":578,"children":579},{},[580],{"type":493,"value":581},"输入：nums = [1]\n",{"type":488,"tag":515,"props":583,"children":584},{"class":517,"line":527},[585],{"type":488,"tag":515,"props":586,"children":587},{},[588],{"type":493,"value":533},{"type":488,"tag":489,"props":590,"children":591},{},[592],{"type":493,"value":593},"提示：",{"type":488,"tag":595,"props":596,"children":597},"ul",{},[598,604,609],{"type":488,"tag":599,"props":600,"children":601},"li",{},[602],{"type":493,"value":603},"1 \u003C= nums.length \u003C= 3 * 10^4",{"type":488,"tag":599,"props":605,"children":606},{},[607],{"type":493,"value":608},"-3 * 10^4 \u003C= nums[i] \u003C= 3 * 10^4",{"type":488,"tag":599,"props":610,"children":611},{},[612],{"type":493,"value":613},"除了某个元素只出现一次以外，其余每个元素均出现两次。",{"type":488,"tag":615,"props":616,"children":618},"h2",{"id":617},"解题思路",[619],{"type":493,"value":617},{"type":488,"tag":489,"props":621,"children":622},{},[623],{"type":493,"value":624},"异或满足以下行为：",{"type":488,"tag":595,"props":626,"children":627},{},[628,633,638],{"type":488,"tag":599,"props":629,"children":630},{},[631],{"type":493,"value":632},"a ^ 0 = a；",{"type":488,"tag":599,"props":634,"children":635},{},[636],{"type":493,"value":637},"a ^ a = 0；",{"type":488,"tag":599,"props":639,"children":640},{},[641],{"type":493,"value":642},"a ^ b ^ a = (a ^ a) ^ b = 0 ^ b = b",{"type":488,"tag":615,"props":644,"children":646},{"id":645},"实现",[647],{"type":493,"value":645},{"type":488,"tag":649,"props":650,"children":652},"h3",{"id":651},"异或",[653],{"type":493,"value":651},{"type":488,"tag":505,"props":655,"children":659},{"className":656,"code":657,"language":658,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar singleNumber = function (nums) {\n  let ans = 0;\n  for (let num of nums) {\n    ans ^= num;\n  }\n  return ans;\n};\n","js",[660],{"type":488,"tag":511,"props":661,"children":662},{"__ignoreMap":481},[663,672,714,745,754,800,829,870,892,901,918],{"type":488,"tag":515,"props":664,"children":665},{"class":517,"line":518},[666],{"type":488,"tag":515,"props":667,"children":669},{"style":668},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[670],{"type":493,"value":671},"/**\n",{"type":488,"tag":515,"props":673,"children":674},{"class":517,"line":527},[675,680,686,692,697,703,708],{"type":488,"tag":515,"props":676,"children":677},{"style":668},[678],{"type":493,"value":679}," * ",{"type":488,"tag":515,"props":681,"children":683},{"style":682},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[684],{"type":493,"value":685},"@",{"type":488,"tag":515,"props":687,"children":689},{"style":688},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[690],{"type":493,"value":691},"param",{"type":488,"tag":515,"props":693,"children":694},{"style":682},[695],{"type":493,"value":696}," {",{"type":488,"tag":515,"props":698,"children":700},{"style":699},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[701],{"type":493,"value":702},"number[]",{"type":488,"tag":515,"props":704,"children":705},{"style":682},[706],{"type":493,"value":707},"}",{"type":488,"tag":515,"props":709,"children":711},{"style":710},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[712],{"type":493,"value":713}," nums\n",{"type":488,"tag":515,"props":715,"children":717},{"class":517,"line":716},3,[718,722,726,731,735,740],{"type":488,"tag":515,"props":719,"children":720},{"style":668},[721],{"type":493,"value":679},{"type":488,"tag":515,"props":723,"children":724},{"style":682},[725],{"type":493,"value":685},{"type":488,"tag":515,"props":727,"children":728},{"style":688},[729],{"type":493,"value":730},"return",{"type":488,"tag":515,"props":732,"children":733},{"style":682},[734],{"type":493,"value":696},{"type":488,"tag":515,"props":736,"children":737},{"style":699},[738],{"type":493,"value":739},"number",{"type":488,"tag":515,"props":741,"children":742},{"style":682},[743],{"type":493,"value":744},"}\n",{"type":488,"tag":515,"props":746,"children":748},{"class":517,"line":747},4,[749],{"type":488,"tag":515,"props":750,"children":751},{"style":668},[752],{"type":493,"value":753}," */\n",{"type":488,"tag":515,"props":755,"children":757},{"class":517,"line":756},5,[758,764,770,775,780,785,790,795],{"type":488,"tag":515,"props":759,"children":761},{"style":760},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[762],{"type":493,"value":763},"var",{"type":488,"tag":515,"props":765,"children":767},{"style":766},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[768],{"type":493,"value":769}," singleNumber",{"type":488,"tag":515,"props":771,"children":772},{"style":682},[773],{"type":493,"value":774}," =",{"type":488,"tag":515,"props":776,"children":777},{"style":760},[778],{"type":493,"value":779}," function",{"type":488,"tag":515,"props":781,"children":782},{"style":682},[783],{"type":493,"value":784}," (",{"type":488,"tag":515,"props":786,"children":787},{"style":710},[788],{"type":493,"value":789},"nums",{"type":488,"tag":515,"props":791,"children":792},{"style":682},[793],{"type":493,"value":794},")",{"type":488,"tag":515,"props":796,"children":797},{"style":682},[798],{"type":493,"value":799}," {\n",{"type":488,"tag":515,"props":801,"children":803},{"class":517,"line":802},6,[804,809,814,818,824],{"type":488,"tag":515,"props":805,"children":806},{"style":760},[807],{"type":493,"value":808},"  let",{"type":488,"tag":515,"props":810,"children":811},{"style":710},[812],{"type":493,"value":813}," ans",{"type":488,"tag":515,"props":815,"children":816},{"style":682},[817],{"type":493,"value":774},{"type":488,"tag":515,"props":819,"children":821},{"style":820},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[822],{"type":493,"value":823}," 0",{"type":488,"tag":515,"props":825,"children":826},{"style":682},[827],{"type":493,"value":828},";\n",{"type":488,"tag":515,"props":830,"children":832},{"class":517,"line":831},7,[833,838,842,847,852,857,862,866],{"type":488,"tag":515,"props":834,"children":835},{"style":688},[836],{"type":493,"value":837},"  for",{"type":488,"tag":515,"props":839,"children":840},{"style":682},[841],{"type":493,"value":784},{"type":488,"tag":515,"props":843,"children":844},{"style":760},[845],{"type":493,"value":846},"let",{"type":488,"tag":515,"props":848,"children":849},{"style":710},[850],{"type":493,"value":851}," num",{"type":488,"tag":515,"props":853,"children":854},{"style":760},[855],{"type":493,"value":856}," of",{"type":488,"tag":515,"props":858,"children":859},{"style":710},[860],{"type":493,"value":861}," nums",{"type":488,"tag":515,"props":863,"children":864},{"style":682},[865],{"type":493,"value":794},{"type":488,"tag":515,"props":867,"children":868},{"style":682},[869],{"type":493,"value":799},{"type":488,"tag":515,"props":871,"children":873},{"class":517,"line":872},8,[874,879,884,888],{"type":488,"tag":515,"props":875,"children":876},{"style":710},[877],{"type":493,"value":878},"    ans",{"type":488,"tag":515,"props":880,"children":881},{"style":760},[882],{"type":493,"value":883}," ^=",{"type":488,"tag":515,"props":885,"children":886},{"style":710},[887],{"type":493,"value":851},{"type":488,"tag":515,"props":889,"children":890},{"style":682},[891],{"type":493,"value":828},{"type":488,"tag":515,"props":893,"children":895},{"class":517,"line":894},9,[896],{"type":488,"tag":515,"props":897,"children":898},{"style":682},[899],{"type":493,"value":900},"  }\n",{"type":488,"tag":515,"props":902,"children":904},{"class":517,"line":903},10,[905,910,914],{"type":488,"tag":515,"props":906,"children":907},{"style":688},[908],{"type":493,"value":909},"  return",{"type":488,"tag":515,"props":911,"children":912},{"style":710},[913],{"type":493,"value":813},{"type":488,"tag":515,"props":915,"children":916},{"style":682},[917],{"type":493,"value":828},{"type":488,"tag":515,"props":919,"children":921},{"class":517,"line":920},11,[922],{"type":488,"tag":515,"props":923,"children":924},{"style":682},[925],{"type":493,"value":926},"};\n",{"type":488,"tag":928,"props":929,"children":930},"style",{},[931],{"type":493,"value":932},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":756,"depth":756,"links":934},[935,936],{"id":617,"depth":527,"text":617},{"id":645,"depth":527,"text":645,"children":937},[938],{"id":651,"depth":716,"text":651},"markdown","content:1.algorithm:3.leetcode:3.major:136.single-number.md","content","1.algorithm/3.leetcode/3.major/136.single-number.md","md",[945,947],{"_path":168,"title":167,"description":946},"给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：",{"_path":174,"title":173,"description":948},"给你一个链表的头节点 head ，判断链表中是否有环。",1714046225944]