[{"data":1,"prerenderedAt":895},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/single-number":452,"/algorithm/leetcode/major/single-number-surround":890},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":162,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":161,"description":456,"url":457,"body":458,"_type":885,"_id":886,"_source":887,"_file":888,"_extension":889},"major",false,"","给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。","https://leetcode.cn/problems/single-number",{"type":459,"children":460,"toc":879},"root",[461,468,473,478,508,513,536,541,563,568,588,594,599,617,622,628,873],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。",{"type":462,"tag":463,"props":474,"children":475},{},[476],{"type":467,"value":477},"示例 1 ：",{"type":462,"tag":479,"props":480,"children":483},"pre",{"className":481,"code":482,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [2,2,1]\n输出：1\n",[484],{"type":462,"tag":485,"props":486,"children":487},"code",{"__ignoreMap":455},[488,499],{"type":462,"tag":489,"props":490,"children":493},"span",{"class":491,"line":492},"line",1,[494],{"type":462,"tag":489,"props":495,"children":496},{},[497],{"type":467,"value":498},"输入：nums = [2,2,1]\n",{"type":462,"tag":489,"props":500,"children":502},{"class":491,"line":501},2,[503],{"type":462,"tag":489,"props":504,"children":505},{},[506],{"type":467,"value":507},"输出：1\n",{"type":462,"tag":463,"props":509,"children":510},{},[511],{"type":467,"value":512},"示例 2 ：",{"type":462,"tag":479,"props":514,"children":516},{"className":481,"code":515,"language":467,"meta":455,"style":455},"输入：nums = [4,1,2,1,2]\n输出：4\n",[517],{"type":462,"tag":485,"props":518,"children":519},{"__ignoreMap":455},[520,528],{"type":462,"tag":489,"props":521,"children":522},{"class":491,"line":492},[523],{"type":462,"tag":489,"props":524,"children":525},{},[526],{"type":467,"value":527},"输入：nums = [4,1,2,1,2]\n",{"type":462,"tag":489,"props":529,"children":530},{"class":491,"line":501},[531],{"type":462,"tag":489,"props":532,"children":533},{},[534],{"type":467,"value":535},"输出：4\n",{"type":462,"tag":463,"props":537,"children":538},{},[539],{"type":467,"value":540},"示例 3 ：",{"type":462,"tag":479,"props":542,"children":544},{"className":481,"code":543,"language":467,"meta":455,"style":455},"输入：nums = [1]\n输出：1\n",[545],{"type":462,"tag":485,"props":546,"children":547},{"__ignoreMap":455},[548,556],{"type":462,"tag":489,"props":549,"children":550},{"class":491,"line":492},[551],{"type":462,"tag":489,"props":552,"children":553},{},[554],{"type":467,"value":555},"输入：nums = [1]\n",{"type":462,"tag":489,"props":557,"children":558},{"class":491,"line":501},[559],{"type":462,"tag":489,"props":560,"children":561},{},[562],{"type":467,"value":507},{"type":462,"tag":463,"props":564,"children":565},{},[566],{"type":467,"value":567},"提示：",{"type":462,"tag":569,"props":570,"children":571},"ul",{},[572,578,583],{"type":462,"tag":573,"props":574,"children":575},"li",{},[576],{"type":467,"value":577},"1 \u003C= nums.length \u003C= 3 * 10^4",{"type":462,"tag":573,"props":579,"children":580},{},[581],{"type":467,"value":582},"-3 * 10^4 \u003C= nums[i] \u003C= 3 * 10^4",{"type":462,"tag":573,"props":584,"children":585},{},[586],{"type":467,"value":587},"除了某个元素只出现一次以外，其余每个元素均出现两次。",{"type":462,"tag":589,"props":590,"children":592},"h2",{"id":591},"解题思路",[593],{"type":467,"value":591},{"type":462,"tag":463,"props":595,"children":596},{},[597],{"type":467,"value":598},"异或满足以下行为：",{"type":462,"tag":569,"props":600,"children":601},{},[602,607,612],{"type":462,"tag":573,"props":603,"children":604},{},[605],{"type":467,"value":606},"a ^ 0 = a；",{"type":462,"tag":573,"props":608,"children":609},{},[610],{"type":467,"value":611},"a ^ a = 0；",{"type":462,"tag":573,"props":613,"children":614},{},[615],{"type":467,"value":616},"a ^ b ^ a = (a ^ a) ^ b = 0 ^ b = b",{"type":462,"tag":589,"props":618,"children":620},{"id":619},"实现",[621],{"type":467,"value":619},{"type":462,"tag":623,"props":624,"children":626},"h3",{"id":625},"异或",[627],{"type":467,"value":625},{"type":462,"tag":479,"props":629,"children":633},{"className":630,"code":631,"language":632,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar singleNumber = function (nums) {\n  let ans = 0;\n  for (let num of nums) {\n    ans ^= num;\n  }\n  return ans;\n};\n","js",[634],{"type":462,"tag":485,"props":635,"children":636},{"__ignoreMap":455},[637,646,672,690,699,743,774,812,834,843,860],{"type":462,"tag":489,"props":638,"children":639},{"class":491,"line":492},[640],{"type":462,"tag":489,"props":641,"children":643},{"style":642},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[644],{"type":467,"value":645},"/**\n",{"type":462,"tag":489,"props":647,"children":648},{"class":491,"line":501},[649,654,660,666],{"type":462,"tag":489,"props":650,"children":651},{"style":642},[652],{"type":467,"value":653}," * ",{"type":462,"tag":489,"props":655,"children":657},{"style":656},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[658],{"type":467,"value":659},"@param",{"type":462,"tag":489,"props":661,"children":663},{"style":662},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[664],{"type":467,"value":665}," {number[]}",{"type":462,"tag":489,"props":667,"children":669},{"style":668},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[670],{"type":467,"value":671}," nums\n",{"type":462,"tag":489,"props":673,"children":675},{"class":491,"line":674},3,[676,680,685],{"type":462,"tag":489,"props":677,"children":678},{"style":642},[679],{"type":467,"value":653},{"type":462,"tag":489,"props":681,"children":682},{"style":656},[683],{"type":467,"value":684},"@return",{"type":462,"tag":489,"props":686,"children":687},{"style":662},[688],{"type":467,"value":689}," {number}\n",{"type":462,"tag":489,"props":691,"children":693},{"class":491,"line":692},4,[694],{"type":462,"tag":489,"props":695,"children":696},{"style":642},[697],{"type":467,"value":698}," */\n",{"type":462,"tag":489,"props":700,"children":702},{"class":491,"line":701},5,[703,709,715,721,726,732,738],{"type":462,"tag":489,"props":704,"children":706},{"style":705},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[707],{"type":467,"value":708},"var",{"type":462,"tag":489,"props":710,"children":712},{"style":711},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[713],{"type":467,"value":714}," singleNumber",{"type":462,"tag":489,"props":716,"children":718},{"style":717},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[719],{"type":467,"value":720}," =",{"type":462,"tag":489,"props":722,"children":723},{"style":705},[724],{"type":467,"value":725}," function",{"type":462,"tag":489,"props":727,"children":729},{"style":728},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[730],{"type":467,"value":731}," (",{"type":462,"tag":489,"props":733,"children":735},{"style":734},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[736],{"type":467,"value":737},"nums",{"type":462,"tag":489,"props":739,"children":740},{"style":728},[741],{"type":467,"value":742},") {\n",{"type":462,"tag":489,"props":744,"children":746},{"class":491,"line":745},6,[747,752,758,762,768],{"type":462,"tag":489,"props":748,"children":749},{"style":705},[750],{"type":467,"value":751},"  let",{"type":462,"tag":489,"props":753,"children":755},{"style":754},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[756],{"type":467,"value":757}," ans",{"type":462,"tag":489,"props":759,"children":760},{"style":717},[761],{"type":467,"value":720},{"type":462,"tag":489,"props":763,"children":765},{"style":764},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[766],{"type":467,"value":767}," 0",{"type":462,"tag":489,"props":769,"children":771},{"style":770},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[772],{"type":467,"value":773},";\n",{"type":462,"tag":489,"props":775,"children":777},{"class":491,"line":776},7,[778,784,788,793,798,803,808],{"type":462,"tag":489,"props":779,"children":781},{"style":780},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[782],{"type":467,"value":783},"  for",{"type":462,"tag":489,"props":785,"children":786},{"style":728},[787],{"type":467,"value":731},{"type":462,"tag":489,"props":789,"children":790},{"style":705},[791],{"type":467,"value":792},"let",{"type":462,"tag":489,"props":794,"children":795},{"style":754},[796],{"type":467,"value":797}," num",{"type":462,"tag":489,"props":799,"children":800},{"style":717},[801],{"type":467,"value":802}," of",{"type":462,"tag":489,"props":804,"children":805},{"style":754},[806],{"type":467,"value":807}," nums",{"type":462,"tag":489,"props":809,"children":810},{"style":728},[811],{"type":467,"value":742},{"type":462,"tag":489,"props":813,"children":815},{"class":491,"line":814},8,[816,821,826,830],{"type":462,"tag":489,"props":817,"children":818},{"style":754},[819],{"type":467,"value":820},"    ans",{"type":462,"tag":489,"props":822,"children":823},{"style":717},[824],{"type":467,"value":825}," ^=",{"type":462,"tag":489,"props":827,"children":828},{"style":754},[829],{"type":467,"value":797},{"type":462,"tag":489,"props":831,"children":832},{"style":770},[833],{"type":467,"value":773},{"type":462,"tag":489,"props":835,"children":837},{"class":491,"line":836},9,[838],{"type":462,"tag":489,"props":839,"children":840},{"style":728},[841],{"type":467,"value":842},"  }\n",{"type":462,"tag":489,"props":844,"children":846},{"class":491,"line":845},10,[847,852,856],{"type":462,"tag":489,"props":848,"children":849},{"style":780},[850],{"type":467,"value":851},"  return",{"type":462,"tag":489,"props":853,"children":854},{"style":754},[855],{"type":467,"value":757},{"type":462,"tag":489,"props":857,"children":858},{"style":770},[859],{"type":467,"value":773},{"type":462,"tag":489,"props":861,"children":863},{"class":491,"line":862},11,[864,869],{"type":462,"tag":489,"props":865,"children":866},{"style":728},[867],{"type":467,"value":868},"}",{"type":462,"tag":489,"props":870,"children":871},{"style":770},[872],{"type":467,"value":773},{"type":462,"tag":874,"props":875,"children":876},"style",{},[877],{"type":467,"value":878},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":701,"depth":701,"links":880},[881,882],{"id":591,"depth":501,"text":591},{"id":619,"depth":501,"text":619,"children":883},[884],{"id":625,"depth":674,"text":625},"markdown","content:1.algorithm:3.leetcode:3.major:136.single-number.md","content","1.algorithm/3.leetcode/3.major/136.single-number.md","md",[891,893],{"_path":159,"title":158,"description":892},"给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：",{"_path":165,"title":164,"description":894},"给你一个链表的头节点 head ，判断链表中是否有环。",1713457421840]