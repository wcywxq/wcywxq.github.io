[{"data":1,"prerenderedAt":1228},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":524,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1223},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":264,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":263,"description":528,"url":529,"body":530,"_type":1218,"_id":1219,"_source":1220,"_file":1221,"_extension":1222},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":531,"children":532,"toc":1214},"root",[533,540,545,550,634,639,670,675,698,703,723,729,734,1208],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":539,"value":549},"示例 1：",{"type":534,"tag":551,"props":552,"children":555},"pre",{"className":553,"code":554,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[556],{"type":534,"tag":557,"props":558,"children":559},"code",{"__ignoreMap":527},[560,571,580,589,598,607,616,625],{"type":534,"tag":561,"props":562,"children":565},"span",{"class":563,"line":564},"line",1,[566],{"type":534,"tag":561,"props":567,"children":568},{},[569],{"type":539,"value":570},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":534,"tag":561,"props":572,"children":574},{"class":563,"line":573},2,[575],{"type":534,"tag":561,"props":576,"children":577},{},[578],{"type":539,"value":579},"输出：[true,true,true,false,true]\n",{"type":534,"tag":561,"props":581,"children":583},{"class":563,"line":582},3,[584],{"type":534,"tag":561,"props":585,"children":586},{},[587],{"type":539,"value":588},"解释：\n",{"type":534,"tag":561,"props":590,"children":592},{"class":563,"line":591},4,[593],{"type":534,"tag":561,"props":594,"children":595},{},[596],{"type":539,"value":597},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":534,"tag":561,"props":599,"children":601},{"class":563,"line":600},5,[602],{"type":534,"tag":561,"props":603,"children":604},{},[605],{"type":539,"value":606},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":534,"tag":561,"props":608,"children":610},{"class":563,"line":609},6,[611],{"type":534,"tag":561,"props":612,"children":613},{},[614],{"type":539,"value":615},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":534,"tag":561,"props":617,"children":619},{"class":563,"line":618},7,[620],{"type":534,"tag":561,"props":621,"children":622},{},[623],{"type":539,"value":624},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":534,"tag":561,"props":626,"children":628},{"class":563,"line":627},8,[629],{"type":534,"tag":561,"props":630,"children":631},{},[632],{"type":539,"value":633},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":534,"tag":535,"props":635,"children":636},{},[637],{"type":539,"value":638},"示例 2：",{"type":534,"tag":551,"props":640,"children":642},{"className":553,"code":641,"language":539,"meta":527,"style":527},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[643],{"type":534,"tag":557,"props":644,"children":645},{"__ignoreMap":527},[646,654,662],{"type":534,"tag":561,"props":647,"children":648},{"class":563,"line":564},[649],{"type":534,"tag":561,"props":650,"children":651},{},[652],{"type":539,"value":653},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":534,"tag":561,"props":655,"children":656},{"class":563,"line":573},[657],{"type":534,"tag":561,"props":658,"children":659},{},[660],{"type":539,"value":661},"输出：[true,false,false,false,false]\n",{"type":534,"tag":561,"props":663,"children":664},{"class":563,"line":582},[665],{"type":534,"tag":561,"props":666,"children":667},{},[668],{"type":539,"value":669},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":534,"tag":535,"props":671,"children":672},{},[673],{"type":539,"value":674},"示例 3：",{"type":534,"tag":551,"props":676,"children":678},{"className":553,"code":677,"language":539,"meta":527,"style":527},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[679],{"type":534,"tag":557,"props":680,"children":681},{"__ignoreMap":527},[682,690],{"type":534,"tag":561,"props":683,"children":684},{"class":563,"line":564},[685],{"type":534,"tag":561,"props":686,"children":687},{},[688],{"type":539,"value":689},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":534,"tag":561,"props":691,"children":692},{"class":563,"line":573},[693],{"type":534,"tag":561,"props":694,"children":695},{},[696],{"type":539,"value":697},"输出：[true,false,true]\n",{"type":534,"tag":535,"props":699,"children":700},{},[701],{"type":539,"value":702},"提示：",{"type":534,"tag":704,"props":705,"children":706},"ul",{},[707,713,718],{"type":534,"tag":708,"props":709,"children":710},"li",{},[711],{"type":539,"value":712},"2 \u003C= candies.length \u003C= 100",{"type":534,"tag":708,"props":714,"children":715},{},[716],{"type":539,"value":717},"1 \u003C= candies[i] \u003C= 100",{"type":534,"tag":708,"props":719,"children":720},{},[721],{"type":539,"value":722},"1 \u003C= extraCandies \u003C= 50",{"type":534,"tag":724,"props":725,"children":727},"h2",{"id":726},"解题思路",[728],{"type":539,"value":726},{"type":534,"tag":724,"props":730,"children":732},{"id":731},"实现",[733],{"type":539,"value":731},{"type":534,"tag":551,"props":735,"children":739},{"className":736,"code":737,"language":738,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[740],{"type":534,"tag":557,"props":741,"children":742},{"__ignoreMap":527},[743,752,794,827,857,865,920,976,998,1080,1131,1173,1182,1199],{"type":534,"tag":561,"props":744,"children":745},{"class":563,"line":564},[746],{"type":534,"tag":561,"props":747,"children":749},{"style":748},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[750],{"type":539,"value":751},"/**\n",{"type":534,"tag":561,"props":753,"children":754},{"class":563,"line":573},[755,760,766,772,777,783,788],{"type":534,"tag":561,"props":756,"children":757},{"style":748},[758],{"type":539,"value":759}," * ",{"type":534,"tag":561,"props":761,"children":763},{"style":762},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[764],{"type":539,"value":765},"@",{"type":534,"tag":561,"props":767,"children":769},{"style":768},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[770],{"type":539,"value":771},"param",{"type":534,"tag":561,"props":773,"children":774},{"style":762},[775],{"type":539,"value":776}," {",{"type":534,"tag":561,"props":778,"children":780},{"style":779},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[781],{"type":539,"value":782},"number[]",{"type":534,"tag":561,"props":784,"children":785},{"style":762},[786],{"type":539,"value":787},"}",{"type":534,"tag":561,"props":789,"children":791},{"style":790},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[792],{"type":539,"value":793}," candies\n",{"type":534,"tag":561,"props":795,"children":796},{"class":563,"line":582},[797,801,805,809,813,818,822],{"type":534,"tag":561,"props":798,"children":799},{"style":748},[800],{"type":539,"value":759},{"type":534,"tag":561,"props":802,"children":803},{"style":762},[804],{"type":539,"value":765},{"type":534,"tag":561,"props":806,"children":807},{"style":768},[808],{"type":539,"value":771},{"type":534,"tag":561,"props":810,"children":811},{"style":762},[812],{"type":539,"value":776},{"type":534,"tag":561,"props":814,"children":815},{"style":779},[816],{"type":539,"value":817},"number",{"type":534,"tag":561,"props":819,"children":820},{"style":762},[821],{"type":539,"value":787},{"type":534,"tag":561,"props":823,"children":824},{"style":790},[825],{"type":539,"value":826}," extraCandies\n",{"type":534,"tag":561,"props":828,"children":829},{"class":563,"line":591},[830,834,838,843,847,852],{"type":534,"tag":561,"props":831,"children":832},{"style":748},[833],{"type":539,"value":759},{"type":534,"tag":561,"props":835,"children":836},{"style":762},[837],{"type":539,"value":765},{"type":534,"tag":561,"props":839,"children":840},{"style":768},[841],{"type":539,"value":842},"return",{"type":534,"tag":561,"props":844,"children":845},{"style":762},[846],{"type":539,"value":776},{"type":534,"tag":561,"props":848,"children":849},{"style":779},[850],{"type":539,"value":851},"boolean[]",{"type":534,"tag":561,"props":853,"children":854},{"style":762},[855],{"type":539,"value":856},"}\n",{"type":534,"tag":561,"props":858,"children":859},{"class":563,"line":600},[860],{"type":534,"tag":561,"props":861,"children":862},{"style":748},[863],{"type":539,"value":864}," */\n",{"type":534,"tag":561,"props":866,"children":867},{"class":563,"line":609},[868,874,880,885,890,895,900,905,910,915],{"type":534,"tag":561,"props":869,"children":871},{"style":870},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[872],{"type":539,"value":873},"var",{"type":534,"tag":561,"props":875,"children":877},{"style":876},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[878],{"type":539,"value":879}," kidsWithCandies",{"type":534,"tag":561,"props":881,"children":882},{"style":762},[883],{"type":539,"value":884}," =",{"type":534,"tag":561,"props":886,"children":887},{"style":870},[888],{"type":539,"value":889}," function",{"type":534,"tag":561,"props":891,"children":892},{"style":762},[893],{"type":539,"value":894}," (",{"type":534,"tag":561,"props":896,"children":897},{"style":790},[898],{"type":539,"value":899},"candies",{"type":534,"tag":561,"props":901,"children":902},{"style":762},[903],{"type":539,"value":904},",",{"type":534,"tag":561,"props":906,"children":907},{"style":790},[908],{"type":539,"value":909}," extraCandies",{"type":534,"tag":561,"props":911,"children":912},{"style":762},[913],{"type":539,"value":914},")",{"type":534,"tag":561,"props":916,"children":917},{"style":762},[918],{"type":539,"value":919}," {\n",{"type":534,"tag":561,"props":921,"children":922},{"class":563,"line":618},[923,928,933,937,942,947,952,956,961,966,971],{"type":534,"tag":561,"props":924,"children":925},{"style":870},[926],{"type":539,"value":927},"  const",{"type":534,"tag":561,"props":929,"children":930},{"style":790},[931],{"type":539,"value":932}," max",{"type":534,"tag":561,"props":934,"children":935},{"style":762},[936],{"type":539,"value":884},{"type":534,"tag":561,"props":938,"children":939},{"style":790},[940],{"type":539,"value":941}," Math",{"type":534,"tag":561,"props":943,"children":944},{"style":762},[945],{"type":539,"value":946},".",{"type":534,"tag":561,"props":948,"children":949},{"style":790},[950],{"type":539,"value":951},"max",{"type":534,"tag":561,"props":953,"children":954},{"style":762},[955],{"type":539,"value":946},{"type":534,"tag":561,"props":957,"children":958},{"style":876},[959],{"type":539,"value":960},"apply",{"type":534,"tag":561,"props":962,"children":963},{"style":762},[964],{"type":539,"value":965},"([],",{"type":534,"tag":561,"props":967,"children":968},{"style":790},[969],{"type":539,"value":970}," candies",{"type":534,"tag":561,"props":972,"children":973},{"style":762},[974],{"type":539,"value":975},");\n",{"type":534,"tag":561,"props":977,"children":978},{"class":563,"line":627},[979,984,989,993],{"type":534,"tag":561,"props":980,"children":981},{"style":870},[982],{"type":539,"value":983},"  let",{"type":534,"tag":561,"props":985,"children":986},{"style":790},[987],{"type":539,"value":988}," res",{"type":534,"tag":561,"props":990,"children":991},{"style":762},[992],{"type":539,"value":884},{"type":534,"tag":561,"props":994,"children":995},{"style":762},[996],{"type":539,"value":997}," [];\n",{"type":534,"tag":561,"props":999,"children":1001},{"class":563,"line":1000},9,[1002,1007,1011,1016,1021,1025,1031,1036,1040,1045,1049,1053,1059,1063,1067,1072,1076],{"type":534,"tag":561,"props":1003,"children":1004},{"style":768},[1005],{"type":539,"value":1006},"  for",{"type":534,"tag":561,"props":1008,"children":1009},{"style":762},[1010],{"type":539,"value":894},{"type":534,"tag":561,"props":1012,"children":1013},{"style":870},[1014],{"type":539,"value":1015},"let",{"type":534,"tag":561,"props":1017,"children":1018},{"style":790},[1019],{"type":539,"value":1020}," i",{"type":534,"tag":561,"props":1022,"children":1023},{"style":762},[1024],{"type":539,"value":884},{"type":534,"tag":561,"props":1026,"children":1028},{"style":1027},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1029],{"type":539,"value":1030}," 0",{"type":534,"tag":561,"props":1032,"children":1033},{"style":762},[1034],{"type":539,"value":1035},";",{"type":534,"tag":561,"props":1037,"children":1038},{"style":790},[1039],{"type":539,"value":1020},{"type":534,"tag":561,"props":1041,"children":1042},{"style":762},[1043],{"type":539,"value":1044}," \u003C",{"type":534,"tag":561,"props":1046,"children":1047},{"style":790},[1048],{"type":539,"value":970},{"type":534,"tag":561,"props":1050,"children":1051},{"style":762},[1052],{"type":539,"value":946},{"type":534,"tag":561,"props":1054,"children":1056},{"style":1055},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1057],{"type":539,"value":1058},"length",{"type":534,"tag":561,"props":1060,"children":1061},{"style":762},[1062],{"type":539,"value":1035},{"type":534,"tag":561,"props":1064,"children":1065},{"style":790},[1066],{"type":539,"value":1020},{"type":534,"tag":561,"props":1068,"children":1069},{"style":870},[1070],{"type":539,"value":1071},"++",{"type":534,"tag":561,"props":1073,"children":1074},{"style":762},[1075],{"type":539,"value":914},{"type":534,"tag":561,"props":1077,"children":1078},{"style":762},[1079],{"type":539,"value":919},{"type":534,"tag":561,"props":1081,"children":1083},{"class":563,"line":1082},10,[1084,1089,1094,1098,1102,1107,1112,1117,1122,1126],{"type":534,"tag":561,"props":1085,"children":1086},{"style":870},[1087],{"type":539,"value":1088},"    let",{"type":534,"tag":561,"props":1090,"children":1091},{"style":790},[1092],{"type":539,"value":1093}," currentMax",{"type":534,"tag":561,"props":1095,"children":1096},{"style":762},[1097],{"type":539,"value":884},{"type":534,"tag":561,"props":1099,"children":1100},{"style":790},[1101],{"type":539,"value":970},{"type":534,"tag":561,"props":1103,"children":1104},{"style":762},[1105],{"type":539,"value":1106},"[",{"type":534,"tag":561,"props":1108,"children":1109},{"style":790},[1110],{"type":539,"value":1111},"i",{"type":534,"tag":561,"props":1113,"children":1114},{"style":762},[1115],{"type":539,"value":1116},"]",{"type":534,"tag":561,"props":1118,"children":1119},{"style":870},[1120],{"type":539,"value":1121}," +",{"type":534,"tag":561,"props":1123,"children":1124},{"style":790},[1125],{"type":539,"value":909},{"type":534,"tag":561,"props":1127,"children":1128},{"style":762},[1129],{"type":539,"value":1130},";\n",{"type":534,"tag":561,"props":1132,"children":1134},{"class":563,"line":1133},11,[1135,1140,1144,1148,1152,1156,1160,1165,1169],{"type":534,"tag":561,"props":1136,"children":1137},{"style":790},[1138],{"type":539,"value":1139},"    res",{"type":534,"tag":561,"props":1141,"children":1142},{"style":762},[1143],{"type":539,"value":1106},{"type":534,"tag":561,"props":1145,"children":1146},{"style":790},[1147],{"type":539,"value":1111},{"type":534,"tag":561,"props":1149,"children":1150},{"style":762},[1151],{"type":539,"value":1116},{"type":534,"tag":561,"props":1153,"children":1154},{"style":762},[1155],{"type":539,"value":884},{"type":534,"tag":561,"props":1157,"children":1158},{"style":790},[1159],{"type":539,"value":1093},{"type":534,"tag":561,"props":1161,"children":1162},{"style":762},[1163],{"type":539,"value":1164}," >=",{"type":534,"tag":561,"props":1166,"children":1167},{"style":790},[1168],{"type":539,"value":932},{"type":534,"tag":561,"props":1170,"children":1171},{"style":762},[1172],{"type":539,"value":1130},{"type":534,"tag":561,"props":1174,"children":1176},{"class":563,"line":1175},12,[1177],{"type":534,"tag":561,"props":1178,"children":1179},{"style":762},[1180],{"type":539,"value":1181},"  }\n",{"type":534,"tag":561,"props":1183,"children":1185},{"class":563,"line":1184},13,[1186,1191,1195],{"type":534,"tag":561,"props":1187,"children":1188},{"style":768},[1189],{"type":539,"value":1190},"  return",{"type":534,"tag":561,"props":1192,"children":1193},{"style":790},[1194],{"type":539,"value":988},{"type":534,"tag":561,"props":1196,"children":1197},{"style":762},[1198],{"type":539,"value":1130},{"type":534,"tag":561,"props":1200,"children":1202},{"class":563,"line":1201},14,[1203],{"type":534,"tag":561,"props":1204,"children":1205},{"style":762},[1206],{"type":539,"value":1207},"};\n",{"type":534,"tag":1209,"props":1210,"children":1211},"style",{},[1212],{"type":539,"value":1213},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":600,"depth":600,"links":1215},[1216,1217],{"id":726,"depth":573,"text":726},{"id":731,"depth":573,"text":731},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1224,1226],{"_path":261,"title":260,"description":1225},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":267,"title":266,"description":1227},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1714096146029]