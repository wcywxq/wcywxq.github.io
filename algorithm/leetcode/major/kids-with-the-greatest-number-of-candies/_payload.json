[{"data":1,"prerenderedAt":1210},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":506,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1205},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":264,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":263,"description":510,"url":511,"body":512,"_type":1200,"_id":1201,"_source":1202,"_file":1203,"_extension":1204},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":513,"children":514,"toc":1196},"root",[515,522,527,532,616,621,652,657,680,685,705,711,716,1190],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":521,"value":531},"示例 1：",{"type":516,"tag":533,"props":534,"children":537},"pre",{"className":535,"code":536,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[538],{"type":516,"tag":539,"props":540,"children":541},"code",{"__ignoreMap":509},[542,553,562,571,580,589,598,607],{"type":516,"tag":543,"props":544,"children":547},"span",{"class":545,"line":546},"line",1,[548],{"type":516,"tag":543,"props":549,"children":550},{},[551],{"type":521,"value":552},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":516,"tag":543,"props":554,"children":556},{"class":545,"line":555},2,[557],{"type":516,"tag":543,"props":558,"children":559},{},[560],{"type":521,"value":561},"输出：[true,true,true,false,true]\n",{"type":516,"tag":543,"props":563,"children":565},{"class":545,"line":564},3,[566],{"type":516,"tag":543,"props":567,"children":568},{},[569],{"type":521,"value":570},"解释：\n",{"type":516,"tag":543,"props":572,"children":574},{"class":545,"line":573},4,[575],{"type":516,"tag":543,"props":576,"children":577},{},[578],{"type":521,"value":579},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":516,"tag":543,"props":581,"children":583},{"class":545,"line":582},5,[584],{"type":516,"tag":543,"props":585,"children":586},{},[587],{"type":521,"value":588},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":516,"tag":543,"props":590,"children":592},{"class":545,"line":591},6,[593],{"type":516,"tag":543,"props":594,"children":595},{},[596],{"type":521,"value":597},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":516,"tag":543,"props":599,"children":601},{"class":545,"line":600},7,[602],{"type":516,"tag":543,"props":603,"children":604},{},[605],{"type":521,"value":606},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":516,"tag":543,"props":608,"children":610},{"class":545,"line":609},8,[611],{"type":516,"tag":543,"props":612,"children":613},{},[614],{"type":521,"value":615},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":516,"tag":517,"props":617,"children":618},{},[619],{"type":521,"value":620},"示例 2：",{"type":516,"tag":533,"props":622,"children":624},{"className":535,"code":623,"language":521,"meta":509,"style":509},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[625],{"type":516,"tag":539,"props":626,"children":627},{"__ignoreMap":509},[628,636,644],{"type":516,"tag":543,"props":629,"children":630},{"class":545,"line":546},[631],{"type":516,"tag":543,"props":632,"children":633},{},[634],{"type":521,"value":635},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":516,"tag":543,"props":637,"children":638},{"class":545,"line":555},[639],{"type":516,"tag":543,"props":640,"children":641},{},[642],{"type":521,"value":643},"输出：[true,false,false,false,false]\n",{"type":516,"tag":543,"props":645,"children":646},{"class":545,"line":564},[647],{"type":516,"tag":543,"props":648,"children":649},{},[650],{"type":521,"value":651},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":516,"tag":517,"props":653,"children":654},{},[655],{"type":521,"value":656},"示例 3：",{"type":516,"tag":533,"props":658,"children":660},{"className":535,"code":659,"language":521,"meta":509,"style":509},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[661],{"type":516,"tag":539,"props":662,"children":663},{"__ignoreMap":509},[664,672],{"type":516,"tag":543,"props":665,"children":666},{"class":545,"line":546},[667],{"type":516,"tag":543,"props":668,"children":669},{},[670],{"type":521,"value":671},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":516,"tag":543,"props":673,"children":674},{"class":545,"line":555},[675],{"type":516,"tag":543,"props":676,"children":677},{},[678],{"type":521,"value":679},"输出：[true,false,true]\n",{"type":516,"tag":517,"props":681,"children":682},{},[683],{"type":521,"value":684},"提示：",{"type":516,"tag":686,"props":687,"children":688},"ul",{},[689,695,700],{"type":516,"tag":690,"props":691,"children":692},"li",{},[693],{"type":521,"value":694},"2 \u003C= candies.length \u003C= 100",{"type":516,"tag":690,"props":696,"children":697},{},[698],{"type":521,"value":699},"1 \u003C= candies[i] \u003C= 100",{"type":516,"tag":690,"props":701,"children":702},{},[703],{"type":521,"value":704},"1 \u003C= extraCandies \u003C= 50",{"type":516,"tag":706,"props":707,"children":709},"h2",{"id":708},"解题思路",[710],{"type":521,"value":708},{"type":516,"tag":706,"props":712,"children":714},{"id":713},"实现",[715],{"type":521,"value":713},{"type":516,"tag":533,"props":717,"children":721},{"className":718,"code":719,"language":720,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[722],{"type":516,"tag":539,"props":723,"children":724},{"__ignoreMap":509},[725,734,776,809,839,847,902,958,980,1062,1113,1155,1164,1181],{"type":516,"tag":543,"props":726,"children":727},{"class":545,"line":546},[728],{"type":516,"tag":543,"props":729,"children":731},{"style":730},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[732],{"type":521,"value":733},"/**\n",{"type":516,"tag":543,"props":735,"children":736},{"class":545,"line":555},[737,742,748,754,759,765,770],{"type":516,"tag":543,"props":738,"children":739},{"style":730},[740],{"type":521,"value":741}," * ",{"type":516,"tag":543,"props":743,"children":745},{"style":744},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[746],{"type":521,"value":747},"@",{"type":516,"tag":543,"props":749,"children":751},{"style":750},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[752],{"type":521,"value":753},"param",{"type":516,"tag":543,"props":755,"children":756},{"style":744},[757],{"type":521,"value":758}," {",{"type":516,"tag":543,"props":760,"children":762},{"style":761},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[763],{"type":521,"value":764},"number[]",{"type":516,"tag":543,"props":766,"children":767},{"style":744},[768],{"type":521,"value":769},"}",{"type":516,"tag":543,"props":771,"children":773},{"style":772},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[774],{"type":521,"value":775}," candies\n",{"type":516,"tag":543,"props":777,"children":778},{"class":545,"line":564},[779,783,787,791,795,800,804],{"type":516,"tag":543,"props":780,"children":781},{"style":730},[782],{"type":521,"value":741},{"type":516,"tag":543,"props":784,"children":785},{"style":744},[786],{"type":521,"value":747},{"type":516,"tag":543,"props":788,"children":789},{"style":750},[790],{"type":521,"value":753},{"type":516,"tag":543,"props":792,"children":793},{"style":744},[794],{"type":521,"value":758},{"type":516,"tag":543,"props":796,"children":797},{"style":761},[798],{"type":521,"value":799},"number",{"type":516,"tag":543,"props":801,"children":802},{"style":744},[803],{"type":521,"value":769},{"type":516,"tag":543,"props":805,"children":806},{"style":772},[807],{"type":521,"value":808}," extraCandies\n",{"type":516,"tag":543,"props":810,"children":811},{"class":545,"line":573},[812,816,820,825,829,834],{"type":516,"tag":543,"props":813,"children":814},{"style":730},[815],{"type":521,"value":741},{"type":516,"tag":543,"props":817,"children":818},{"style":744},[819],{"type":521,"value":747},{"type":516,"tag":543,"props":821,"children":822},{"style":750},[823],{"type":521,"value":824},"return",{"type":516,"tag":543,"props":826,"children":827},{"style":744},[828],{"type":521,"value":758},{"type":516,"tag":543,"props":830,"children":831},{"style":761},[832],{"type":521,"value":833},"boolean[]",{"type":516,"tag":543,"props":835,"children":836},{"style":744},[837],{"type":521,"value":838},"}\n",{"type":516,"tag":543,"props":840,"children":841},{"class":545,"line":582},[842],{"type":516,"tag":543,"props":843,"children":844},{"style":730},[845],{"type":521,"value":846}," */\n",{"type":516,"tag":543,"props":848,"children":849},{"class":545,"line":591},[850,856,862,867,872,877,882,887,892,897],{"type":516,"tag":543,"props":851,"children":853},{"style":852},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[854],{"type":521,"value":855},"var",{"type":516,"tag":543,"props":857,"children":859},{"style":858},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[860],{"type":521,"value":861}," kidsWithCandies",{"type":516,"tag":543,"props":863,"children":864},{"style":744},[865],{"type":521,"value":866}," =",{"type":516,"tag":543,"props":868,"children":869},{"style":852},[870],{"type":521,"value":871}," function",{"type":516,"tag":543,"props":873,"children":874},{"style":744},[875],{"type":521,"value":876}," (",{"type":516,"tag":543,"props":878,"children":879},{"style":772},[880],{"type":521,"value":881},"candies",{"type":516,"tag":543,"props":883,"children":884},{"style":744},[885],{"type":521,"value":886},",",{"type":516,"tag":543,"props":888,"children":889},{"style":772},[890],{"type":521,"value":891}," extraCandies",{"type":516,"tag":543,"props":893,"children":894},{"style":744},[895],{"type":521,"value":896},")",{"type":516,"tag":543,"props":898,"children":899},{"style":744},[900],{"type":521,"value":901}," {\n",{"type":516,"tag":543,"props":903,"children":904},{"class":545,"line":600},[905,910,915,919,924,929,934,938,943,948,953],{"type":516,"tag":543,"props":906,"children":907},{"style":852},[908],{"type":521,"value":909},"  const",{"type":516,"tag":543,"props":911,"children":912},{"style":772},[913],{"type":521,"value":914}," max",{"type":516,"tag":543,"props":916,"children":917},{"style":744},[918],{"type":521,"value":866},{"type":516,"tag":543,"props":920,"children":921},{"style":772},[922],{"type":521,"value":923}," Math",{"type":516,"tag":543,"props":925,"children":926},{"style":744},[927],{"type":521,"value":928},".",{"type":516,"tag":543,"props":930,"children":931},{"style":772},[932],{"type":521,"value":933},"max",{"type":516,"tag":543,"props":935,"children":936},{"style":744},[937],{"type":521,"value":928},{"type":516,"tag":543,"props":939,"children":940},{"style":858},[941],{"type":521,"value":942},"apply",{"type":516,"tag":543,"props":944,"children":945},{"style":744},[946],{"type":521,"value":947},"([],",{"type":516,"tag":543,"props":949,"children":950},{"style":772},[951],{"type":521,"value":952}," candies",{"type":516,"tag":543,"props":954,"children":955},{"style":744},[956],{"type":521,"value":957},");\n",{"type":516,"tag":543,"props":959,"children":960},{"class":545,"line":609},[961,966,971,975],{"type":516,"tag":543,"props":962,"children":963},{"style":852},[964],{"type":521,"value":965},"  let",{"type":516,"tag":543,"props":967,"children":968},{"style":772},[969],{"type":521,"value":970}," res",{"type":516,"tag":543,"props":972,"children":973},{"style":744},[974],{"type":521,"value":866},{"type":516,"tag":543,"props":976,"children":977},{"style":744},[978],{"type":521,"value":979}," [];\n",{"type":516,"tag":543,"props":981,"children":983},{"class":545,"line":982},9,[984,989,993,998,1003,1007,1013,1018,1022,1027,1031,1035,1041,1045,1049,1054,1058],{"type":516,"tag":543,"props":985,"children":986},{"style":750},[987],{"type":521,"value":988},"  for",{"type":516,"tag":543,"props":990,"children":991},{"style":744},[992],{"type":521,"value":876},{"type":516,"tag":543,"props":994,"children":995},{"style":852},[996],{"type":521,"value":997},"let",{"type":516,"tag":543,"props":999,"children":1000},{"style":772},[1001],{"type":521,"value":1002}," i",{"type":516,"tag":543,"props":1004,"children":1005},{"style":744},[1006],{"type":521,"value":866},{"type":516,"tag":543,"props":1008,"children":1010},{"style":1009},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1011],{"type":521,"value":1012}," 0",{"type":516,"tag":543,"props":1014,"children":1015},{"style":744},[1016],{"type":521,"value":1017},";",{"type":516,"tag":543,"props":1019,"children":1020},{"style":772},[1021],{"type":521,"value":1002},{"type":516,"tag":543,"props":1023,"children":1024},{"style":744},[1025],{"type":521,"value":1026}," \u003C",{"type":516,"tag":543,"props":1028,"children":1029},{"style":772},[1030],{"type":521,"value":952},{"type":516,"tag":543,"props":1032,"children":1033},{"style":744},[1034],{"type":521,"value":928},{"type":516,"tag":543,"props":1036,"children":1038},{"style":1037},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1039],{"type":521,"value":1040},"length",{"type":516,"tag":543,"props":1042,"children":1043},{"style":744},[1044],{"type":521,"value":1017},{"type":516,"tag":543,"props":1046,"children":1047},{"style":772},[1048],{"type":521,"value":1002},{"type":516,"tag":543,"props":1050,"children":1051},{"style":852},[1052],{"type":521,"value":1053},"++",{"type":516,"tag":543,"props":1055,"children":1056},{"style":744},[1057],{"type":521,"value":896},{"type":516,"tag":543,"props":1059,"children":1060},{"style":744},[1061],{"type":521,"value":901},{"type":516,"tag":543,"props":1063,"children":1065},{"class":545,"line":1064},10,[1066,1071,1076,1080,1084,1089,1094,1099,1104,1108],{"type":516,"tag":543,"props":1067,"children":1068},{"style":852},[1069],{"type":521,"value":1070},"    let",{"type":516,"tag":543,"props":1072,"children":1073},{"style":772},[1074],{"type":521,"value":1075}," currentMax",{"type":516,"tag":543,"props":1077,"children":1078},{"style":744},[1079],{"type":521,"value":866},{"type":516,"tag":543,"props":1081,"children":1082},{"style":772},[1083],{"type":521,"value":952},{"type":516,"tag":543,"props":1085,"children":1086},{"style":744},[1087],{"type":521,"value":1088},"[",{"type":516,"tag":543,"props":1090,"children":1091},{"style":772},[1092],{"type":521,"value":1093},"i",{"type":516,"tag":543,"props":1095,"children":1096},{"style":744},[1097],{"type":521,"value":1098},"]",{"type":516,"tag":543,"props":1100,"children":1101},{"style":852},[1102],{"type":521,"value":1103}," +",{"type":516,"tag":543,"props":1105,"children":1106},{"style":772},[1107],{"type":521,"value":891},{"type":516,"tag":543,"props":1109,"children":1110},{"style":744},[1111],{"type":521,"value":1112},";\n",{"type":516,"tag":543,"props":1114,"children":1116},{"class":545,"line":1115},11,[1117,1122,1126,1130,1134,1138,1142,1147,1151],{"type":516,"tag":543,"props":1118,"children":1119},{"style":772},[1120],{"type":521,"value":1121},"    res",{"type":516,"tag":543,"props":1123,"children":1124},{"style":744},[1125],{"type":521,"value":1088},{"type":516,"tag":543,"props":1127,"children":1128},{"style":772},[1129],{"type":521,"value":1093},{"type":516,"tag":543,"props":1131,"children":1132},{"style":744},[1133],{"type":521,"value":1098},{"type":516,"tag":543,"props":1135,"children":1136},{"style":744},[1137],{"type":521,"value":866},{"type":516,"tag":543,"props":1139,"children":1140},{"style":772},[1141],{"type":521,"value":1075},{"type":516,"tag":543,"props":1143,"children":1144},{"style":744},[1145],{"type":521,"value":1146}," >=",{"type":516,"tag":543,"props":1148,"children":1149},{"style":772},[1150],{"type":521,"value":914},{"type":516,"tag":543,"props":1152,"children":1153},{"style":744},[1154],{"type":521,"value":1112},{"type":516,"tag":543,"props":1156,"children":1158},{"class":545,"line":1157},12,[1159],{"type":516,"tag":543,"props":1160,"children":1161},{"style":744},[1162],{"type":521,"value":1163},"  }\n",{"type":516,"tag":543,"props":1165,"children":1167},{"class":545,"line":1166},13,[1168,1173,1177],{"type":516,"tag":543,"props":1169,"children":1170},{"style":750},[1171],{"type":521,"value":1172},"  return",{"type":516,"tag":543,"props":1174,"children":1175},{"style":772},[1176],{"type":521,"value":970},{"type":516,"tag":543,"props":1178,"children":1179},{"style":744},[1180],{"type":521,"value":1112},{"type":516,"tag":543,"props":1182,"children":1184},{"class":545,"line":1183},14,[1185],{"type":516,"tag":543,"props":1186,"children":1187},{"style":744},[1188],{"type":521,"value":1189},"};\n",{"type":516,"tag":1191,"props":1192,"children":1193},"style",{},[1194],{"type":521,"value":1195},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":582,"depth":582,"links":1197},[1198,1199],{"id":708,"depth":555,"text":708},{"id":713,"depth":555,"text":713},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1206,1208],{"_path":261,"title":260,"description":1207},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":267,"title":266,"description":1209},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1714058129375]