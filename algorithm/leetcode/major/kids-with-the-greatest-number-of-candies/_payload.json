[{"data":1,"prerenderedAt":1213},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":509,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1208},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":264,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":263,"description":513,"url":514,"body":515,"_type":1203,"_id":1204,"_source":1205,"_file":1206,"_extension":1207},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":516,"children":517,"toc":1199},"root",[518,525,530,535,619,624,655,660,683,688,708,714,719,1193],{"type":519,"tag":520,"props":521,"children":522},"element","p",{},[523],{"type":524,"value":513},"text",{"type":519,"tag":520,"props":526,"children":527},{},[528],{"type":524,"value":529},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":519,"tag":520,"props":531,"children":532},{},[533],{"type":524,"value":534},"示例 1：",{"type":519,"tag":536,"props":537,"children":540},"pre",{"className":538,"code":539,"language":524,"meta":512,"style":512},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[541],{"type":519,"tag":542,"props":543,"children":544},"code",{"__ignoreMap":512},[545,556,565,574,583,592,601,610],{"type":519,"tag":546,"props":547,"children":550},"span",{"class":548,"line":549},"line",1,[551],{"type":519,"tag":546,"props":552,"children":553},{},[554],{"type":524,"value":555},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":519,"tag":546,"props":557,"children":559},{"class":548,"line":558},2,[560],{"type":519,"tag":546,"props":561,"children":562},{},[563],{"type":524,"value":564},"输出：[true,true,true,false,true]\n",{"type":519,"tag":546,"props":566,"children":568},{"class":548,"line":567},3,[569],{"type":519,"tag":546,"props":570,"children":571},{},[572],{"type":524,"value":573},"解释：\n",{"type":519,"tag":546,"props":575,"children":577},{"class":548,"line":576},4,[578],{"type":519,"tag":546,"props":579,"children":580},{},[581],{"type":524,"value":582},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":519,"tag":546,"props":584,"children":586},{"class":548,"line":585},5,[587],{"type":519,"tag":546,"props":588,"children":589},{},[590],{"type":524,"value":591},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":519,"tag":546,"props":593,"children":595},{"class":548,"line":594},6,[596],{"type":519,"tag":546,"props":597,"children":598},{},[599],{"type":524,"value":600},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":519,"tag":546,"props":602,"children":604},{"class":548,"line":603},7,[605],{"type":519,"tag":546,"props":606,"children":607},{},[608],{"type":524,"value":609},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":519,"tag":546,"props":611,"children":613},{"class":548,"line":612},8,[614],{"type":519,"tag":546,"props":615,"children":616},{},[617],{"type":524,"value":618},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":519,"tag":520,"props":620,"children":621},{},[622],{"type":524,"value":623},"示例 2：",{"type":519,"tag":536,"props":625,"children":627},{"className":538,"code":626,"language":524,"meta":512,"style":512},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[628],{"type":519,"tag":542,"props":629,"children":630},{"__ignoreMap":512},[631,639,647],{"type":519,"tag":546,"props":632,"children":633},{"class":548,"line":549},[634],{"type":519,"tag":546,"props":635,"children":636},{},[637],{"type":524,"value":638},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":519,"tag":546,"props":640,"children":641},{"class":548,"line":558},[642],{"type":519,"tag":546,"props":643,"children":644},{},[645],{"type":524,"value":646},"输出：[true,false,false,false,false]\n",{"type":519,"tag":546,"props":648,"children":649},{"class":548,"line":567},[650],{"type":519,"tag":546,"props":651,"children":652},{},[653],{"type":524,"value":654},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":519,"tag":520,"props":656,"children":657},{},[658],{"type":524,"value":659},"示例 3：",{"type":519,"tag":536,"props":661,"children":663},{"className":538,"code":662,"language":524,"meta":512,"style":512},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[664],{"type":519,"tag":542,"props":665,"children":666},{"__ignoreMap":512},[667,675],{"type":519,"tag":546,"props":668,"children":669},{"class":548,"line":549},[670],{"type":519,"tag":546,"props":671,"children":672},{},[673],{"type":524,"value":674},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":519,"tag":546,"props":676,"children":677},{"class":548,"line":558},[678],{"type":519,"tag":546,"props":679,"children":680},{},[681],{"type":524,"value":682},"输出：[true,false,true]\n",{"type":519,"tag":520,"props":684,"children":685},{},[686],{"type":524,"value":687},"提示：",{"type":519,"tag":689,"props":690,"children":691},"ul",{},[692,698,703],{"type":519,"tag":693,"props":694,"children":695},"li",{},[696],{"type":524,"value":697},"2 \u003C= candies.length \u003C= 100",{"type":519,"tag":693,"props":699,"children":700},{},[701],{"type":524,"value":702},"1 \u003C= candies[i] \u003C= 100",{"type":519,"tag":693,"props":704,"children":705},{},[706],{"type":524,"value":707},"1 \u003C= extraCandies \u003C= 50",{"type":519,"tag":709,"props":710,"children":712},"h2",{"id":711},"解题思路",[713],{"type":524,"value":711},{"type":519,"tag":709,"props":715,"children":717},{"id":716},"实现",[718],{"type":524,"value":716},{"type":519,"tag":536,"props":720,"children":724},{"className":721,"code":722,"language":723,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[725],{"type":519,"tag":542,"props":726,"children":727},{"__ignoreMap":512},[728,737,779,812,842,850,905,961,983,1065,1116,1158,1167,1184],{"type":519,"tag":546,"props":729,"children":730},{"class":548,"line":549},[731],{"type":519,"tag":546,"props":732,"children":734},{"style":733},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[735],{"type":524,"value":736},"/**\n",{"type":519,"tag":546,"props":738,"children":739},{"class":548,"line":558},[740,745,751,757,762,768,773],{"type":519,"tag":546,"props":741,"children":742},{"style":733},[743],{"type":524,"value":744}," * ",{"type":519,"tag":546,"props":746,"children":748},{"style":747},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[749],{"type":524,"value":750},"@",{"type":519,"tag":546,"props":752,"children":754},{"style":753},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[755],{"type":524,"value":756},"param",{"type":519,"tag":546,"props":758,"children":759},{"style":747},[760],{"type":524,"value":761}," {",{"type":519,"tag":546,"props":763,"children":765},{"style":764},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[766],{"type":524,"value":767},"number[]",{"type":519,"tag":546,"props":769,"children":770},{"style":747},[771],{"type":524,"value":772},"}",{"type":519,"tag":546,"props":774,"children":776},{"style":775},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[777],{"type":524,"value":778}," candies\n",{"type":519,"tag":546,"props":780,"children":781},{"class":548,"line":567},[782,786,790,794,798,803,807],{"type":519,"tag":546,"props":783,"children":784},{"style":733},[785],{"type":524,"value":744},{"type":519,"tag":546,"props":787,"children":788},{"style":747},[789],{"type":524,"value":750},{"type":519,"tag":546,"props":791,"children":792},{"style":753},[793],{"type":524,"value":756},{"type":519,"tag":546,"props":795,"children":796},{"style":747},[797],{"type":524,"value":761},{"type":519,"tag":546,"props":799,"children":800},{"style":764},[801],{"type":524,"value":802},"number",{"type":519,"tag":546,"props":804,"children":805},{"style":747},[806],{"type":524,"value":772},{"type":519,"tag":546,"props":808,"children":809},{"style":775},[810],{"type":524,"value":811}," extraCandies\n",{"type":519,"tag":546,"props":813,"children":814},{"class":548,"line":576},[815,819,823,828,832,837],{"type":519,"tag":546,"props":816,"children":817},{"style":733},[818],{"type":524,"value":744},{"type":519,"tag":546,"props":820,"children":821},{"style":747},[822],{"type":524,"value":750},{"type":519,"tag":546,"props":824,"children":825},{"style":753},[826],{"type":524,"value":827},"return",{"type":519,"tag":546,"props":829,"children":830},{"style":747},[831],{"type":524,"value":761},{"type":519,"tag":546,"props":833,"children":834},{"style":764},[835],{"type":524,"value":836},"boolean[]",{"type":519,"tag":546,"props":838,"children":839},{"style":747},[840],{"type":524,"value":841},"}\n",{"type":519,"tag":546,"props":843,"children":844},{"class":548,"line":585},[845],{"type":519,"tag":546,"props":846,"children":847},{"style":733},[848],{"type":524,"value":849}," */\n",{"type":519,"tag":546,"props":851,"children":852},{"class":548,"line":594},[853,859,865,870,875,880,885,890,895,900],{"type":519,"tag":546,"props":854,"children":856},{"style":855},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[857],{"type":524,"value":858},"var",{"type":519,"tag":546,"props":860,"children":862},{"style":861},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[863],{"type":524,"value":864}," kidsWithCandies",{"type":519,"tag":546,"props":866,"children":867},{"style":747},[868],{"type":524,"value":869}," =",{"type":519,"tag":546,"props":871,"children":872},{"style":855},[873],{"type":524,"value":874}," function",{"type":519,"tag":546,"props":876,"children":877},{"style":747},[878],{"type":524,"value":879}," (",{"type":519,"tag":546,"props":881,"children":882},{"style":775},[883],{"type":524,"value":884},"candies",{"type":519,"tag":546,"props":886,"children":887},{"style":747},[888],{"type":524,"value":889},",",{"type":519,"tag":546,"props":891,"children":892},{"style":775},[893],{"type":524,"value":894}," extraCandies",{"type":519,"tag":546,"props":896,"children":897},{"style":747},[898],{"type":524,"value":899},")",{"type":519,"tag":546,"props":901,"children":902},{"style":747},[903],{"type":524,"value":904}," {\n",{"type":519,"tag":546,"props":906,"children":907},{"class":548,"line":603},[908,913,918,922,927,932,937,941,946,951,956],{"type":519,"tag":546,"props":909,"children":910},{"style":855},[911],{"type":524,"value":912},"  const",{"type":519,"tag":546,"props":914,"children":915},{"style":775},[916],{"type":524,"value":917}," max",{"type":519,"tag":546,"props":919,"children":920},{"style":747},[921],{"type":524,"value":869},{"type":519,"tag":546,"props":923,"children":924},{"style":775},[925],{"type":524,"value":926}," Math",{"type":519,"tag":546,"props":928,"children":929},{"style":747},[930],{"type":524,"value":931},".",{"type":519,"tag":546,"props":933,"children":934},{"style":775},[935],{"type":524,"value":936},"max",{"type":519,"tag":546,"props":938,"children":939},{"style":747},[940],{"type":524,"value":931},{"type":519,"tag":546,"props":942,"children":943},{"style":861},[944],{"type":524,"value":945},"apply",{"type":519,"tag":546,"props":947,"children":948},{"style":747},[949],{"type":524,"value":950},"([],",{"type":519,"tag":546,"props":952,"children":953},{"style":775},[954],{"type":524,"value":955}," candies",{"type":519,"tag":546,"props":957,"children":958},{"style":747},[959],{"type":524,"value":960},");\n",{"type":519,"tag":546,"props":962,"children":963},{"class":548,"line":612},[964,969,974,978],{"type":519,"tag":546,"props":965,"children":966},{"style":855},[967],{"type":524,"value":968},"  let",{"type":519,"tag":546,"props":970,"children":971},{"style":775},[972],{"type":524,"value":973}," res",{"type":519,"tag":546,"props":975,"children":976},{"style":747},[977],{"type":524,"value":869},{"type":519,"tag":546,"props":979,"children":980},{"style":747},[981],{"type":524,"value":982}," [];\n",{"type":519,"tag":546,"props":984,"children":986},{"class":548,"line":985},9,[987,992,996,1001,1006,1010,1016,1021,1025,1030,1034,1038,1044,1048,1052,1057,1061],{"type":519,"tag":546,"props":988,"children":989},{"style":753},[990],{"type":524,"value":991},"  for",{"type":519,"tag":546,"props":993,"children":994},{"style":747},[995],{"type":524,"value":879},{"type":519,"tag":546,"props":997,"children":998},{"style":855},[999],{"type":524,"value":1000},"let",{"type":519,"tag":546,"props":1002,"children":1003},{"style":775},[1004],{"type":524,"value":1005}," i",{"type":519,"tag":546,"props":1007,"children":1008},{"style":747},[1009],{"type":524,"value":869},{"type":519,"tag":546,"props":1011,"children":1013},{"style":1012},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1014],{"type":524,"value":1015}," 0",{"type":519,"tag":546,"props":1017,"children":1018},{"style":747},[1019],{"type":524,"value":1020},";",{"type":519,"tag":546,"props":1022,"children":1023},{"style":775},[1024],{"type":524,"value":1005},{"type":519,"tag":546,"props":1026,"children":1027},{"style":747},[1028],{"type":524,"value":1029}," \u003C",{"type":519,"tag":546,"props":1031,"children":1032},{"style":775},[1033],{"type":524,"value":955},{"type":519,"tag":546,"props":1035,"children":1036},{"style":747},[1037],{"type":524,"value":931},{"type":519,"tag":546,"props":1039,"children":1041},{"style":1040},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1042],{"type":524,"value":1043},"length",{"type":519,"tag":546,"props":1045,"children":1046},{"style":747},[1047],{"type":524,"value":1020},{"type":519,"tag":546,"props":1049,"children":1050},{"style":775},[1051],{"type":524,"value":1005},{"type":519,"tag":546,"props":1053,"children":1054},{"style":855},[1055],{"type":524,"value":1056},"++",{"type":519,"tag":546,"props":1058,"children":1059},{"style":747},[1060],{"type":524,"value":899},{"type":519,"tag":546,"props":1062,"children":1063},{"style":747},[1064],{"type":524,"value":904},{"type":519,"tag":546,"props":1066,"children":1068},{"class":548,"line":1067},10,[1069,1074,1079,1083,1087,1092,1097,1102,1107,1111],{"type":519,"tag":546,"props":1070,"children":1071},{"style":855},[1072],{"type":524,"value":1073},"    let",{"type":519,"tag":546,"props":1075,"children":1076},{"style":775},[1077],{"type":524,"value":1078}," currentMax",{"type":519,"tag":546,"props":1080,"children":1081},{"style":747},[1082],{"type":524,"value":869},{"type":519,"tag":546,"props":1084,"children":1085},{"style":775},[1086],{"type":524,"value":955},{"type":519,"tag":546,"props":1088,"children":1089},{"style":747},[1090],{"type":524,"value":1091},"[",{"type":519,"tag":546,"props":1093,"children":1094},{"style":775},[1095],{"type":524,"value":1096},"i",{"type":519,"tag":546,"props":1098,"children":1099},{"style":747},[1100],{"type":524,"value":1101},"]",{"type":519,"tag":546,"props":1103,"children":1104},{"style":855},[1105],{"type":524,"value":1106}," +",{"type":519,"tag":546,"props":1108,"children":1109},{"style":775},[1110],{"type":524,"value":894},{"type":519,"tag":546,"props":1112,"children":1113},{"style":747},[1114],{"type":524,"value":1115},";\n",{"type":519,"tag":546,"props":1117,"children":1119},{"class":548,"line":1118},11,[1120,1125,1129,1133,1137,1141,1145,1150,1154],{"type":519,"tag":546,"props":1121,"children":1122},{"style":775},[1123],{"type":524,"value":1124},"    res",{"type":519,"tag":546,"props":1126,"children":1127},{"style":747},[1128],{"type":524,"value":1091},{"type":519,"tag":546,"props":1130,"children":1131},{"style":775},[1132],{"type":524,"value":1096},{"type":519,"tag":546,"props":1134,"children":1135},{"style":747},[1136],{"type":524,"value":1101},{"type":519,"tag":546,"props":1138,"children":1139},{"style":747},[1140],{"type":524,"value":869},{"type":519,"tag":546,"props":1142,"children":1143},{"style":775},[1144],{"type":524,"value":1078},{"type":519,"tag":546,"props":1146,"children":1147},{"style":747},[1148],{"type":524,"value":1149}," >=",{"type":519,"tag":546,"props":1151,"children":1152},{"style":775},[1153],{"type":524,"value":917},{"type":519,"tag":546,"props":1155,"children":1156},{"style":747},[1157],{"type":524,"value":1115},{"type":519,"tag":546,"props":1159,"children":1161},{"class":548,"line":1160},12,[1162],{"type":519,"tag":546,"props":1163,"children":1164},{"style":747},[1165],{"type":524,"value":1166},"  }\n",{"type":519,"tag":546,"props":1168,"children":1170},{"class":548,"line":1169},13,[1171,1176,1180],{"type":519,"tag":546,"props":1172,"children":1173},{"style":753},[1174],{"type":524,"value":1175},"  return",{"type":519,"tag":546,"props":1177,"children":1178},{"style":775},[1179],{"type":524,"value":973},{"type":519,"tag":546,"props":1181,"children":1182},{"style":747},[1183],{"type":524,"value":1115},{"type":519,"tag":546,"props":1185,"children":1187},{"class":548,"line":1186},14,[1188],{"type":519,"tag":546,"props":1189,"children":1190},{"style":747},[1191],{"type":524,"value":1192},"};\n",{"type":519,"tag":1194,"props":1195,"children":1196},"style",{},[1197],{"type":524,"value":1198},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":585,"depth":585,"links":1200},[1201,1202],{"id":711,"depth":558,"text":711},{"id":716,"depth":558,"text":716},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1209,1211],{"_path":261,"title":260,"description":1210},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":267,"title":266,"description":1212},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1714059007332]