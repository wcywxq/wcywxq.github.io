[{"data":1,"prerenderedAt":1244},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":540,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1239},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":264,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":263,"description":544,"url":545,"body":546,"_type":1234,"_id":1235,"_source":1236,"_file":1237,"_extension":1238},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":547,"children":548,"toc":1230},"root",[549,556,561,566,650,655,686,691,714,719,739,745,750,1224],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"示例 1：",{"type":550,"tag":567,"props":568,"children":571},"pre",{"className":569,"code":570,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[572],{"type":550,"tag":573,"props":574,"children":575},"code",{"__ignoreMap":543},[576,587,596,605,614,623,632,641],{"type":550,"tag":577,"props":578,"children":581},"span",{"class":579,"line":580},"line",1,[582],{"type":550,"tag":577,"props":583,"children":584},{},[585],{"type":555,"value":586},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":550,"tag":577,"props":588,"children":590},{"class":579,"line":589},2,[591],{"type":550,"tag":577,"props":592,"children":593},{},[594],{"type":555,"value":595},"输出：[true,true,true,false,true]\n",{"type":550,"tag":577,"props":597,"children":599},{"class":579,"line":598},3,[600],{"type":550,"tag":577,"props":601,"children":602},{},[603],{"type":555,"value":604},"解释：\n",{"type":550,"tag":577,"props":606,"children":608},{"class":579,"line":607},4,[609],{"type":550,"tag":577,"props":610,"children":611},{},[612],{"type":555,"value":613},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":550,"tag":577,"props":615,"children":617},{"class":579,"line":616},5,[618],{"type":550,"tag":577,"props":619,"children":620},{},[621],{"type":555,"value":622},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":550,"tag":577,"props":624,"children":626},{"class":579,"line":625},6,[627],{"type":550,"tag":577,"props":628,"children":629},{},[630],{"type":555,"value":631},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":550,"tag":577,"props":633,"children":635},{"class":579,"line":634},7,[636],{"type":550,"tag":577,"props":637,"children":638},{},[639],{"type":555,"value":640},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":550,"tag":577,"props":642,"children":644},{"class":579,"line":643},8,[645],{"type":550,"tag":577,"props":646,"children":647},{},[648],{"type":555,"value":649},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":550,"tag":551,"props":651,"children":652},{},[653],{"type":555,"value":654},"示例 2：",{"type":550,"tag":567,"props":656,"children":658},{"className":569,"code":657,"language":555,"meta":543,"style":543},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[659],{"type":550,"tag":573,"props":660,"children":661},{"__ignoreMap":543},[662,670,678],{"type":550,"tag":577,"props":663,"children":664},{"class":579,"line":580},[665],{"type":550,"tag":577,"props":666,"children":667},{},[668],{"type":555,"value":669},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":550,"tag":577,"props":671,"children":672},{"class":579,"line":589},[673],{"type":550,"tag":577,"props":674,"children":675},{},[676],{"type":555,"value":677},"输出：[true,false,false,false,false]\n",{"type":550,"tag":577,"props":679,"children":680},{"class":579,"line":598},[681],{"type":550,"tag":577,"props":682,"children":683},{},[684],{"type":555,"value":685},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":550,"tag":551,"props":687,"children":688},{},[689],{"type":555,"value":690},"示例 3：",{"type":550,"tag":567,"props":692,"children":694},{"className":569,"code":693,"language":555,"meta":543,"style":543},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[695],{"type":550,"tag":573,"props":696,"children":697},{"__ignoreMap":543},[698,706],{"type":550,"tag":577,"props":699,"children":700},{"class":579,"line":580},[701],{"type":550,"tag":577,"props":702,"children":703},{},[704],{"type":555,"value":705},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":550,"tag":577,"props":707,"children":708},{"class":579,"line":589},[709],{"type":550,"tag":577,"props":710,"children":711},{},[712],{"type":555,"value":713},"输出：[true,false,true]\n",{"type":550,"tag":551,"props":715,"children":716},{},[717],{"type":555,"value":718},"提示：",{"type":550,"tag":720,"props":721,"children":722},"ul",{},[723,729,734],{"type":550,"tag":724,"props":725,"children":726},"li",{},[727],{"type":555,"value":728},"2 \u003C= candies.length \u003C= 100",{"type":550,"tag":724,"props":730,"children":731},{},[732],{"type":555,"value":733},"1 \u003C= candies[i] \u003C= 100",{"type":550,"tag":724,"props":735,"children":736},{},[737],{"type":555,"value":738},"1 \u003C= extraCandies \u003C= 50",{"type":550,"tag":740,"props":741,"children":743},"h2",{"id":742},"解题思路",[744],{"type":555,"value":742},{"type":550,"tag":740,"props":746,"children":748},{"id":747},"实现",[749],{"type":555,"value":747},{"type":550,"tag":567,"props":751,"children":755},{"className":752,"code":753,"language":754,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[756],{"type":550,"tag":573,"props":757,"children":758},{"__ignoreMap":543},[759,768,810,843,873,881,936,992,1014,1096,1147,1189,1198,1215],{"type":550,"tag":577,"props":760,"children":761},{"class":579,"line":580},[762],{"type":550,"tag":577,"props":763,"children":765},{"style":764},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[766],{"type":555,"value":767},"/**\n",{"type":550,"tag":577,"props":769,"children":770},{"class":579,"line":589},[771,776,782,788,793,799,804],{"type":550,"tag":577,"props":772,"children":773},{"style":764},[774],{"type":555,"value":775}," * ",{"type":550,"tag":577,"props":777,"children":779},{"style":778},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[780],{"type":555,"value":781},"@",{"type":550,"tag":577,"props":783,"children":785},{"style":784},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[786],{"type":555,"value":787},"param",{"type":550,"tag":577,"props":789,"children":790},{"style":778},[791],{"type":555,"value":792}," {",{"type":550,"tag":577,"props":794,"children":796},{"style":795},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[797],{"type":555,"value":798},"number[]",{"type":550,"tag":577,"props":800,"children":801},{"style":778},[802],{"type":555,"value":803},"}",{"type":550,"tag":577,"props":805,"children":807},{"style":806},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[808],{"type":555,"value":809}," candies\n",{"type":550,"tag":577,"props":811,"children":812},{"class":579,"line":598},[813,817,821,825,829,834,838],{"type":550,"tag":577,"props":814,"children":815},{"style":764},[816],{"type":555,"value":775},{"type":550,"tag":577,"props":818,"children":819},{"style":778},[820],{"type":555,"value":781},{"type":550,"tag":577,"props":822,"children":823},{"style":784},[824],{"type":555,"value":787},{"type":550,"tag":577,"props":826,"children":827},{"style":778},[828],{"type":555,"value":792},{"type":550,"tag":577,"props":830,"children":831},{"style":795},[832],{"type":555,"value":833},"number",{"type":550,"tag":577,"props":835,"children":836},{"style":778},[837],{"type":555,"value":803},{"type":550,"tag":577,"props":839,"children":840},{"style":806},[841],{"type":555,"value":842}," extraCandies\n",{"type":550,"tag":577,"props":844,"children":845},{"class":579,"line":607},[846,850,854,859,863,868],{"type":550,"tag":577,"props":847,"children":848},{"style":764},[849],{"type":555,"value":775},{"type":550,"tag":577,"props":851,"children":852},{"style":778},[853],{"type":555,"value":781},{"type":550,"tag":577,"props":855,"children":856},{"style":784},[857],{"type":555,"value":858},"return",{"type":550,"tag":577,"props":860,"children":861},{"style":778},[862],{"type":555,"value":792},{"type":550,"tag":577,"props":864,"children":865},{"style":795},[866],{"type":555,"value":867},"boolean[]",{"type":550,"tag":577,"props":869,"children":870},{"style":778},[871],{"type":555,"value":872},"}\n",{"type":550,"tag":577,"props":874,"children":875},{"class":579,"line":616},[876],{"type":550,"tag":577,"props":877,"children":878},{"style":764},[879],{"type":555,"value":880}," */\n",{"type":550,"tag":577,"props":882,"children":883},{"class":579,"line":625},[884,890,896,901,906,911,916,921,926,931],{"type":550,"tag":577,"props":885,"children":887},{"style":886},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[888],{"type":555,"value":889},"var",{"type":550,"tag":577,"props":891,"children":893},{"style":892},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[894],{"type":555,"value":895}," kidsWithCandies",{"type":550,"tag":577,"props":897,"children":898},{"style":778},[899],{"type":555,"value":900}," =",{"type":550,"tag":577,"props":902,"children":903},{"style":886},[904],{"type":555,"value":905}," function",{"type":550,"tag":577,"props":907,"children":908},{"style":778},[909],{"type":555,"value":910}," (",{"type":550,"tag":577,"props":912,"children":913},{"style":806},[914],{"type":555,"value":915},"candies",{"type":550,"tag":577,"props":917,"children":918},{"style":778},[919],{"type":555,"value":920},",",{"type":550,"tag":577,"props":922,"children":923},{"style":806},[924],{"type":555,"value":925}," extraCandies",{"type":550,"tag":577,"props":927,"children":928},{"style":778},[929],{"type":555,"value":930},")",{"type":550,"tag":577,"props":932,"children":933},{"style":778},[934],{"type":555,"value":935}," {\n",{"type":550,"tag":577,"props":937,"children":938},{"class":579,"line":634},[939,944,949,953,958,963,968,972,977,982,987],{"type":550,"tag":577,"props":940,"children":941},{"style":886},[942],{"type":555,"value":943},"  const",{"type":550,"tag":577,"props":945,"children":946},{"style":806},[947],{"type":555,"value":948}," max",{"type":550,"tag":577,"props":950,"children":951},{"style":778},[952],{"type":555,"value":900},{"type":550,"tag":577,"props":954,"children":955},{"style":806},[956],{"type":555,"value":957}," Math",{"type":550,"tag":577,"props":959,"children":960},{"style":778},[961],{"type":555,"value":962},".",{"type":550,"tag":577,"props":964,"children":965},{"style":806},[966],{"type":555,"value":967},"max",{"type":550,"tag":577,"props":969,"children":970},{"style":778},[971],{"type":555,"value":962},{"type":550,"tag":577,"props":973,"children":974},{"style":892},[975],{"type":555,"value":976},"apply",{"type":550,"tag":577,"props":978,"children":979},{"style":778},[980],{"type":555,"value":981},"([],",{"type":550,"tag":577,"props":983,"children":984},{"style":806},[985],{"type":555,"value":986}," candies",{"type":550,"tag":577,"props":988,"children":989},{"style":778},[990],{"type":555,"value":991},");\n",{"type":550,"tag":577,"props":993,"children":994},{"class":579,"line":643},[995,1000,1005,1009],{"type":550,"tag":577,"props":996,"children":997},{"style":886},[998],{"type":555,"value":999},"  let",{"type":550,"tag":577,"props":1001,"children":1002},{"style":806},[1003],{"type":555,"value":1004}," res",{"type":550,"tag":577,"props":1006,"children":1007},{"style":778},[1008],{"type":555,"value":900},{"type":550,"tag":577,"props":1010,"children":1011},{"style":778},[1012],{"type":555,"value":1013}," [];\n",{"type":550,"tag":577,"props":1015,"children":1017},{"class":579,"line":1016},9,[1018,1023,1027,1032,1037,1041,1047,1052,1056,1061,1065,1069,1075,1079,1083,1088,1092],{"type":550,"tag":577,"props":1019,"children":1020},{"style":784},[1021],{"type":555,"value":1022},"  for",{"type":550,"tag":577,"props":1024,"children":1025},{"style":778},[1026],{"type":555,"value":910},{"type":550,"tag":577,"props":1028,"children":1029},{"style":886},[1030],{"type":555,"value":1031},"let",{"type":550,"tag":577,"props":1033,"children":1034},{"style":806},[1035],{"type":555,"value":1036}," i",{"type":550,"tag":577,"props":1038,"children":1039},{"style":778},[1040],{"type":555,"value":900},{"type":550,"tag":577,"props":1042,"children":1044},{"style":1043},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1045],{"type":555,"value":1046}," 0",{"type":550,"tag":577,"props":1048,"children":1049},{"style":778},[1050],{"type":555,"value":1051},";",{"type":550,"tag":577,"props":1053,"children":1054},{"style":806},[1055],{"type":555,"value":1036},{"type":550,"tag":577,"props":1057,"children":1058},{"style":778},[1059],{"type":555,"value":1060}," \u003C",{"type":550,"tag":577,"props":1062,"children":1063},{"style":806},[1064],{"type":555,"value":986},{"type":550,"tag":577,"props":1066,"children":1067},{"style":778},[1068],{"type":555,"value":962},{"type":550,"tag":577,"props":1070,"children":1072},{"style":1071},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1073],{"type":555,"value":1074},"length",{"type":550,"tag":577,"props":1076,"children":1077},{"style":778},[1078],{"type":555,"value":1051},{"type":550,"tag":577,"props":1080,"children":1081},{"style":806},[1082],{"type":555,"value":1036},{"type":550,"tag":577,"props":1084,"children":1085},{"style":886},[1086],{"type":555,"value":1087},"++",{"type":550,"tag":577,"props":1089,"children":1090},{"style":778},[1091],{"type":555,"value":930},{"type":550,"tag":577,"props":1093,"children":1094},{"style":778},[1095],{"type":555,"value":935},{"type":550,"tag":577,"props":1097,"children":1099},{"class":579,"line":1098},10,[1100,1105,1110,1114,1118,1123,1128,1133,1138,1142],{"type":550,"tag":577,"props":1101,"children":1102},{"style":886},[1103],{"type":555,"value":1104},"    let",{"type":550,"tag":577,"props":1106,"children":1107},{"style":806},[1108],{"type":555,"value":1109}," currentMax",{"type":550,"tag":577,"props":1111,"children":1112},{"style":778},[1113],{"type":555,"value":900},{"type":550,"tag":577,"props":1115,"children":1116},{"style":806},[1117],{"type":555,"value":986},{"type":550,"tag":577,"props":1119,"children":1120},{"style":778},[1121],{"type":555,"value":1122},"[",{"type":550,"tag":577,"props":1124,"children":1125},{"style":806},[1126],{"type":555,"value":1127},"i",{"type":550,"tag":577,"props":1129,"children":1130},{"style":778},[1131],{"type":555,"value":1132},"]",{"type":550,"tag":577,"props":1134,"children":1135},{"style":886},[1136],{"type":555,"value":1137}," +",{"type":550,"tag":577,"props":1139,"children":1140},{"style":806},[1141],{"type":555,"value":925},{"type":550,"tag":577,"props":1143,"children":1144},{"style":778},[1145],{"type":555,"value":1146},";\n",{"type":550,"tag":577,"props":1148,"children":1150},{"class":579,"line":1149},11,[1151,1156,1160,1164,1168,1172,1176,1181,1185],{"type":550,"tag":577,"props":1152,"children":1153},{"style":806},[1154],{"type":555,"value":1155},"    res",{"type":550,"tag":577,"props":1157,"children":1158},{"style":778},[1159],{"type":555,"value":1122},{"type":550,"tag":577,"props":1161,"children":1162},{"style":806},[1163],{"type":555,"value":1127},{"type":550,"tag":577,"props":1165,"children":1166},{"style":778},[1167],{"type":555,"value":1132},{"type":550,"tag":577,"props":1169,"children":1170},{"style":778},[1171],{"type":555,"value":900},{"type":550,"tag":577,"props":1173,"children":1174},{"style":806},[1175],{"type":555,"value":1109},{"type":550,"tag":577,"props":1177,"children":1178},{"style":778},[1179],{"type":555,"value":1180}," >=",{"type":550,"tag":577,"props":1182,"children":1183},{"style":806},[1184],{"type":555,"value":948},{"type":550,"tag":577,"props":1186,"children":1187},{"style":778},[1188],{"type":555,"value":1146},{"type":550,"tag":577,"props":1190,"children":1192},{"class":579,"line":1191},12,[1193],{"type":550,"tag":577,"props":1194,"children":1195},{"style":778},[1196],{"type":555,"value":1197},"  }\n",{"type":550,"tag":577,"props":1199,"children":1201},{"class":579,"line":1200},13,[1202,1207,1211],{"type":550,"tag":577,"props":1203,"children":1204},{"style":784},[1205],{"type":555,"value":1206},"  return",{"type":550,"tag":577,"props":1208,"children":1209},{"style":806},[1210],{"type":555,"value":1004},{"type":550,"tag":577,"props":1212,"children":1213},{"style":778},[1214],{"type":555,"value":1146},{"type":550,"tag":577,"props":1216,"children":1218},{"class":579,"line":1217},14,[1219],{"type":550,"tag":577,"props":1220,"children":1221},{"style":778},[1222],{"type":555,"value":1223},"};\n",{"type":550,"tag":1225,"props":1226,"children":1227},"style",{},[1228],{"type":555,"value":1229},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":616,"depth":616,"links":1231},[1232,1233],{"id":742,"depth":589,"text":742},{"id":747,"depth":589,"text":747},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1240,1242],{"_path":261,"title":260,"description":1241},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":267,"title":266,"description":1243},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1714099277811]