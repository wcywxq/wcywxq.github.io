[{"data":1,"prerenderedAt":1140},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":463,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1135},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":261,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":260,"description":467,"url":468,"body":469,"_type":1130,"_id":1131,"_source":1132,"_file":1133,"_extension":1134},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":470,"children":471,"toc":1126},"root",[472,479,484,489,573,578,609,614,637,642,662,668,673,1120],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":473,"tag":474,"props":485,"children":486},{},[487],{"type":478,"value":488},"示例 1：",{"type":473,"tag":490,"props":491,"children":494},"pre",{"className":492,"code":493,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[495],{"type":473,"tag":496,"props":497,"children":498},"code",{"__ignoreMap":466},[499,510,519,528,537,546,555,564],{"type":473,"tag":500,"props":501,"children":504},"span",{"class":502,"line":503},"line",1,[505],{"type":473,"tag":500,"props":506,"children":507},{},[508],{"type":478,"value":509},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":473,"tag":500,"props":511,"children":513},{"class":502,"line":512},2,[514],{"type":473,"tag":500,"props":515,"children":516},{},[517],{"type":478,"value":518},"输出：[true,true,true,false,true]\n",{"type":473,"tag":500,"props":520,"children":522},{"class":502,"line":521},3,[523],{"type":473,"tag":500,"props":524,"children":525},{},[526],{"type":478,"value":527},"解释：\n",{"type":473,"tag":500,"props":529,"children":531},{"class":502,"line":530},4,[532],{"type":473,"tag":500,"props":533,"children":534},{},[535],{"type":478,"value":536},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":473,"tag":500,"props":538,"children":540},{"class":502,"line":539},5,[541],{"type":473,"tag":500,"props":542,"children":543},{},[544],{"type":478,"value":545},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":473,"tag":500,"props":547,"children":549},{"class":502,"line":548},6,[550],{"type":473,"tag":500,"props":551,"children":552},{},[553],{"type":478,"value":554},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":473,"tag":500,"props":556,"children":558},{"class":502,"line":557},7,[559],{"type":473,"tag":500,"props":560,"children":561},{},[562],{"type":478,"value":563},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":473,"tag":500,"props":565,"children":567},{"class":502,"line":566},8,[568],{"type":473,"tag":500,"props":569,"children":570},{},[571],{"type":478,"value":572},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":473,"tag":474,"props":574,"children":575},{},[576],{"type":478,"value":577},"示例 2：",{"type":473,"tag":490,"props":579,"children":581},{"className":492,"code":580,"language":478,"meta":466,"style":466},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[582],{"type":473,"tag":496,"props":583,"children":584},{"__ignoreMap":466},[585,593,601],{"type":473,"tag":500,"props":586,"children":587},{"class":502,"line":503},[588],{"type":473,"tag":500,"props":589,"children":590},{},[591],{"type":478,"value":592},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":473,"tag":500,"props":594,"children":595},{"class":502,"line":512},[596],{"type":473,"tag":500,"props":597,"children":598},{},[599],{"type":478,"value":600},"输出：[true,false,false,false,false]\n",{"type":473,"tag":500,"props":602,"children":603},{"class":502,"line":521},[604],{"type":473,"tag":500,"props":605,"children":606},{},[607],{"type":478,"value":608},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":473,"tag":474,"props":610,"children":611},{},[612],{"type":478,"value":613},"示例 3：",{"type":473,"tag":490,"props":615,"children":617},{"className":492,"code":616,"language":478,"meta":466,"style":466},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[618],{"type":473,"tag":496,"props":619,"children":620},{"__ignoreMap":466},[621,629],{"type":473,"tag":500,"props":622,"children":623},{"class":502,"line":503},[624],{"type":473,"tag":500,"props":625,"children":626},{},[627],{"type":478,"value":628},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":473,"tag":500,"props":630,"children":631},{"class":502,"line":512},[632],{"type":473,"tag":500,"props":633,"children":634},{},[635],{"type":478,"value":636},"输出：[true,false,true]\n",{"type":473,"tag":474,"props":638,"children":639},{},[640],{"type":478,"value":641},"提示：",{"type":473,"tag":643,"props":644,"children":645},"ul",{},[646,652,657],{"type":473,"tag":647,"props":648,"children":649},"li",{},[650],{"type":478,"value":651},"2 \u003C= candies.length \u003C= 100",{"type":473,"tag":647,"props":653,"children":654},{},[655],{"type":478,"value":656},"1 \u003C= candies[i] \u003C= 100",{"type":473,"tag":647,"props":658,"children":659},{},[660],{"type":478,"value":661},"1 \u003C= extraCandies \u003C= 50",{"type":473,"tag":663,"props":664,"children":666},"h2",{"id":665},"解题思路",[667],{"type":478,"value":665},{"type":473,"tag":663,"props":669,"children":671},{"id":670},"实现",[672],{"type":478,"value":670},{"type":473,"tag":490,"props":674,"children":678},{"className":675,"code":676,"language":677,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[679],{"type":473,"tag":496,"props":680,"children":681},{"__ignoreMap":466},[682,691,717,738,755,763,817,884,910,988,1038,1081,1090,1107],{"type":473,"tag":500,"props":683,"children":684},{"class":502,"line":503},[685],{"type":473,"tag":500,"props":686,"children":688},{"style":687},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[689],{"type":478,"value":690},"/**\n",{"type":473,"tag":500,"props":692,"children":693},{"class":502,"line":512},[694,699,705,711],{"type":473,"tag":500,"props":695,"children":696},{"style":687},[697],{"type":478,"value":698}," * ",{"type":473,"tag":500,"props":700,"children":702},{"style":701},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[703],{"type":478,"value":704},"@param",{"type":473,"tag":500,"props":706,"children":708},{"style":707},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[709],{"type":478,"value":710}," {number[]}",{"type":473,"tag":500,"props":712,"children":714},{"style":713},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[715],{"type":478,"value":716}," candies\n",{"type":473,"tag":500,"props":718,"children":719},{"class":502,"line":521},[720,724,728,733],{"type":473,"tag":500,"props":721,"children":722},{"style":687},[723],{"type":478,"value":698},{"type":473,"tag":500,"props":725,"children":726},{"style":701},[727],{"type":478,"value":704},{"type":473,"tag":500,"props":729,"children":730},{"style":707},[731],{"type":478,"value":732}," {number}",{"type":473,"tag":500,"props":734,"children":735},{"style":713},[736],{"type":478,"value":737}," extraCandies\n",{"type":473,"tag":500,"props":739,"children":740},{"class":502,"line":530},[741,745,750],{"type":473,"tag":500,"props":742,"children":743},{"style":687},[744],{"type":478,"value":698},{"type":473,"tag":500,"props":746,"children":747},{"style":701},[748],{"type":478,"value":749},"@return",{"type":473,"tag":500,"props":751,"children":752},{"style":707},[753],{"type":478,"value":754}," {boolean[]}\n",{"type":473,"tag":500,"props":756,"children":757},{"class":502,"line":539},[758],{"type":473,"tag":500,"props":759,"children":760},{"style":687},[761],{"type":478,"value":762}," */\n",{"type":473,"tag":500,"props":764,"children":765},{"class":502,"line":548},[766,772,778,784,789,795,801,807,812],{"type":473,"tag":500,"props":767,"children":769},{"style":768},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[770],{"type":478,"value":771},"var",{"type":473,"tag":500,"props":773,"children":775},{"style":774},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[776],{"type":478,"value":777}," kidsWithCandies",{"type":473,"tag":500,"props":779,"children":781},{"style":780},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[782],{"type":478,"value":783}," =",{"type":473,"tag":500,"props":785,"children":786},{"style":768},[787],{"type":478,"value":788}," function",{"type":473,"tag":500,"props":790,"children":792},{"style":791},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[793],{"type":478,"value":794}," (",{"type":473,"tag":500,"props":796,"children":798},{"style":797},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[799],{"type":478,"value":800},"candies",{"type":473,"tag":500,"props":802,"children":804},{"style":803},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[805],{"type":478,"value":806},",",{"type":473,"tag":500,"props":808,"children":809},{"style":797},[810],{"type":478,"value":811}," extraCandies",{"type":473,"tag":500,"props":813,"children":814},{"style":791},[815],{"type":478,"value":816},") {\n",{"type":473,"tag":500,"props":818,"children":819},{"class":502,"line":557},[820,825,831,835,840,846,851,855,860,865,869,874,879],{"type":473,"tag":500,"props":821,"children":822},{"style":768},[823],{"type":478,"value":824},"  const",{"type":473,"tag":500,"props":826,"children":828},{"style":827},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[829],{"type":478,"value":830}," max",{"type":473,"tag":500,"props":832,"children":833},{"style":780},[834],{"type":478,"value":783},{"type":473,"tag":500,"props":836,"children":837},{"style":827},[838],{"type":478,"value":839}," Math",{"type":473,"tag":500,"props":841,"children":843},{"style":842},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[844],{"type":478,"value":845},".",{"type":473,"tag":500,"props":847,"children":848},{"style":827},[849],{"type":478,"value":850},"max",{"type":473,"tag":500,"props":852,"children":853},{"style":842},[854],{"type":478,"value":845},{"type":473,"tag":500,"props":856,"children":857},{"style":774},[858],{"type":478,"value":859},"apply",{"type":473,"tag":500,"props":861,"children":862},{"style":791},[863],{"type":478,"value":864},"([]",{"type":473,"tag":500,"props":866,"children":867},{"style":803},[868],{"type":478,"value":806},{"type":473,"tag":500,"props":870,"children":871},{"style":827},[872],{"type":478,"value":873}," candies",{"type":473,"tag":500,"props":875,"children":876},{"style":791},[877],{"type":478,"value":878},")",{"type":473,"tag":500,"props":880,"children":881},{"style":803},[882],{"type":478,"value":883},";\n",{"type":473,"tag":500,"props":885,"children":886},{"class":502,"line":566},[887,892,897,901,906],{"type":473,"tag":500,"props":888,"children":889},{"style":768},[890],{"type":478,"value":891},"  let",{"type":473,"tag":500,"props":893,"children":894},{"style":827},[895],{"type":478,"value":896}," res",{"type":473,"tag":500,"props":898,"children":899},{"style":780},[900],{"type":478,"value":783},{"type":473,"tag":500,"props":902,"children":903},{"style":791},[904],{"type":478,"value":905}," []",{"type":473,"tag":500,"props":907,"children":908},{"style":803},[909],{"type":478,"value":883},{"type":473,"tag":500,"props":911,"children":913},{"class":502,"line":912},9,[914,920,924,929,934,938,944,949,953,958,962,966,971,975,979,984],{"type":473,"tag":500,"props":915,"children":917},{"style":916},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[918],{"type":478,"value":919},"  for",{"type":473,"tag":500,"props":921,"children":922},{"style":791},[923],{"type":478,"value":794},{"type":473,"tag":500,"props":925,"children":926},{"style":768},[927],{"type":478,"value":928},"let",{"type":473,"tag":500,"props":930,"children":931},{"style":827},[932],{"type":478,"value":933}," i",{"type":473,"tag":500,"props":935,"children":936},{"style":780},[937],{"type":478,"value":783},{"type":473,"tag":500,"props":939,"children":941},{"style":940},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[942],{"type":478,"value":943}," 0",{"type":473,"tag":500,"props":945,"children":946},{"style":803},[947],{"type":478,"value":948},";",{"type":473,"tag":500,"props":950,"children":951},{"style":827},[952],{"type":478,"value":933},{"type":473,"tag":500,"props":954,"children":955},{"style":780},[956],{"type":478,"value":957}," \u003C",{"type":473,"tag":500,"props":959,"children":960},{"style":827},[961],{"type":478,"value":873},{"type":473,"tag":500,"props":963,"children":964},{"style":842},[965],{"type":478,"value":845},{"type":473,"tag":500,"props":967,"children":968},{"style":791},[969],{"type":478,"value":970},"length",{"type":473,"tag":500,"props":972,"children":973},{"style":803},[974],{"type":478,"value":948},{"type":473,"tag":500,"props":976,"children":977},{"style":827},[978],{"type":478,"value":933},{"type":473,"tag":500,"props":980,"children":981},{"style":780},[982],{"type":478,"value":983},"++",{"type":473,"tag":500,"props":985,"children":986},{"style":791},[987],{"type":478,"value":816},{"type":473,"tag":500,"props":989,"children":991},{"class":502,"line":990},10,[992,997,1002,1006,1010,1015,1020,1025,1030,1034],{"type":473,"tag":500,"props":993,"children":994},{"style":768},[995],{"type":478,"value":996},"    let",{"type":473,"tag":500,"props":998,"children":999},{"style":827},[1000],{"type":478,"value":1001}," currentMax",{"type":473,"tag":500,"props":1003,"children":1004},{"style":780},[1005],{"type":478,"value":783},{"type":473,"tag":500,"props":1007,"children":1008},{"style":827},[1009],{"type":478,"value":873},{"type":473,"tag":500,"props":1011,"children":1012},{"style":791},[1013],{"type":478,"value":1014},"[",{"type":473,"tag":500,"props":1016,"children":1017},{"style":827},[1018],{"type":478,"value":1019},"i",{"type":473,"tag":500,"props":1021,"children":1022},{"style":791},[1023],{"type":478,"value":1024},"] ",{"type":473,"tag":500,"props":1026,"children":1027},{"style":780},[1028],{"type":478,"value":1029},"+",{"type":473,"tag":500,"props":1031,"children":1032},{"style":827},[1033],{"type":478,"value":811},{"type":473,"tag":500,"props":1035,"children":1036},{"style":803},[1037],{"type":478,"value":883},{"type":473,"tag":500,"props":1039,"children":1041},{"class":502,"line":1040},11,[1042,1047,1051,1055,1059,1064,1068,1073,1077],{"type":473,"tag":500,"props":1043,"children":1044},{"style":827},[1045],{"type":478,"value":1046},"    res",{"type":473,"tag":500,"props":1048,"children":1049},{"style":791},[1050],{"type":478,"value":1014},{"type":473,"tag":500,"props":1052,"children":1053},{"style":827},[1054],{"type":478,"value":1019},{"type":473,"tag":500,"props":1056,"children":1057},{"style":791},[1058],{"type":478,"value":1024},{"type":473,"tag":500,"props":1060,"children":1061},{"style":780},[1062],{"type":478,"value":1063},"=",{"type":473,"tag":500,"props":1065,"children":1066},{"style":827},[1067],{"type":478,"value":1001},{"type":473,"tag":500,"props":1069,"children":1070},{"style":780},[1071],{"type":478,"value":1072}," >=",{"type":473,"tag":500,"props":1074,"children":1075},{"style":827},[1076],{"type":478,"value":830},{"type":473,"tag":500,"props":1078,"children":1079},{"style":803},[1080],{"type":478,"value":883},{"type":473,"tag":500,"props":1082,"children":1084},{"class":502,"line":1083},12,[1085],{"type":473,"tag":500,"props":1086,"children":1087},{"style":791},[1088],{"type":478,"value":1089},"  }\n",{"type":473,"tag":500,"props":1091,"children":1093},{"class":502,"line":1092},13,[1094,1099,1103],{"type":473,"tag":500,"props":1095,"children":1096},{"style":916},[1097],{"type":478,"value":1098},"  return",{"type":473,"tag":500,"props":1100,"children":1101},{"style":827},[1102],{"type":478,"value":896},{"type":473,"tag":500,"props":1104,"children":1105},{"style":803},[1106],{"type":478,"value":883},{"type":473,"tag":500,"props":1108,"children":1110},{"class":502,"line":1109},14,[1111,1116],{"type":473,"tag":500,"props":1112,"children":1113},{"style":791},[1114],{"type":478,"value":1115},"}",{"type":473,"tag":500,"props":1117,"children":1118},{"style":803},[1119],{"type":478,"value":883},{"type":473,"tag":1121,"props":1122,"children":1123},"style",{},[1124],{"type":478,"value":1125},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":539,"depth":539,"links":1127},[1128,1129],{"id":665,"depth":512,"text":665},{"id":670,"depth":512,"text":670},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1136,1138],{"_path":258,"title":257,"description":1137},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":264,"title":263,"description":1139},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1713695849182]