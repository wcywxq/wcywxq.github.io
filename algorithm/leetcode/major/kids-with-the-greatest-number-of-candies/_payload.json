[{"data":1,"prerenderedAt":1129},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":452,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1124},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":255,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":254,"description":456,"url":457,"body":458,"_type":1119,"_id":1120,"_source":1121,"_file":1122,"_extension":1123},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":459,"children":460,"toc":1115},"root",[461,468,473,478,562,567,598,603,626,631,651,657,662,1109],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":462,"tag":463,"props":474,"children":475},{},[476],{"type":467,"value":477},"示例 1：",{"type":462,"tag":479,"props":480,"children":483},"pre",{"className":481,"code":482,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[484],{"type":462,"tag":485,"props":486,"children":487},"code",{"__ignoreMap":455},[488,499,508,517,526,535,544,553],{"type":462,"tag":489,"props":490,"children":493},"span",{"class":491,"line":492},"line",1,[494],{"type":462,"tag":489,"props":495,"children":496},{},[497],{"type":467,"value":498},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":462,"tag":489,"props":500,"children":502},{"class":491,"line":501},2,[503],{"type":462,"tag":489,"props":504,"children":505},{},[506],{"type":467,"value":507},"输出：[true,true,true,false,true]\n",{"type":462,"tag":489,"props":509,"children":511},{"class":491,"line":510},3,[512],{"type":462,"tag":489,"props":513,"children":514},{},[515],{"type":467,"value":516},"解释：\n",{"type":462,"tag":489,"props":518,"children":520},{"class":491,"line":519},4,[521],{"type":462,"tag":489,"props":522,"children":523},{},[524],{"type":467,"value":525},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":462,"tag":489,"props":527,"children":529},{"class":491,"line":528},5,[530],{"type":462,"tag":489,"props":531,"children":532},{},[533],{"type":467,"value":534},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":462,"tag":489,"props":536,"children":538},{"class":491,"line":537},6,[539],{"type":462,"tag":489,"props":540,"children":541},{},[542],{"type":467,"value":543},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":462,"tag":489,"props":545,"children":547},{"class":491,"line":546},7,[548],{"type":462,"tag":489,"props":549,"children":550},{},[551],{"type":467,"value":552},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":462,"tag":489,"props":554,"children":556},{"class":491,"line":555},8,[557],{"type":462,"tag":489,"props":558,"children":559},{},[560],{"type":467,"value":561},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":462,"tag":463,"props":563,"children":564},{},[565],{"type":467,"value":566},"示例 2：",{"type":462,"tag":479,"props":568,"children":570},{"className":481,"code":569,"language":467,"meta":455,"style":455},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[571],{"type":462,"tag":485,"props":572,"children":573},{"__ignoreMap":455},[574,582,590],{"type":462,"tag":489,"props":575,"children":576},{"class":491,"line":492},[577],{"type":462,"tag":489,"props":578,"children":579},{},[580],{"type":467,"value":581},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":462,"tag":489,"props":583,"children":584},{"class":491,"line":501},[585],{"type":462,"tag":489,"props":586,"children":587},{},[588],{"type":467,"value":589},"输出：[true,false,false,false,false]\n",{"type":462,"tag":489,"props":591,"children":592},{"class":491,"line":510},[593],{"type":462,"tag":489,"props":594,"children":595},{},[596],{"type":467,"value":597},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":462,"tag":463,"props":599,"children":600},{},[601],{"type":467,"value":602},"示例 3：",{"type":462,"tag":479,"props":604,"children":606},{"className":481,"code":605,"language":467,"meta":455,"style":455},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[607],{"type":462,"tag":485,"props":608,"children":609},{"__ignoreMap":455},[610,618],{"type":462,"tag":489,"props":611,"children":612},{"class":491,"line":492},[613],{"type":462,"tag":489,"props":614,"children":615},{},[616],{"type":467,"value":617},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":462,"tag":489,"props":619,"children":620},{"class":491,"line":501},[621],{"type":462,"tag":489,"props":622,"children":623},{},[624],{"type":467,"value":625},"输出：[true,false,true]\n",{"type":462,"tag":463,"props":627,"children":628},{},[629],{"type":467,"value":630},"提示：",{"type":462,"tag":632,"props":633,"children":634},"ul",{},[635,641,646],{"type":462,"tag":636,"props":637,"children":638},"li",{},[639],{"type":467,"value":640},"2 \u003C= candies.length \u003C= 100",{"type":462,"tag":636,"props":642,"children":643},{},[644],{"type":467,"value":645},"1 \u003C= candies[i] \u003C= 100",{"type":462,"tag":636,"props":647,"children":648},{},[649],{"type":467,"value":650},"1 \u003C= extraCandies \u003C= 50",{"type":462,"tag":652,"props":653,"children":655},"h2",{"id":654},"解题思路",[656],{"type":467,"value":654},{"type":462,"tag":652,"props":658,"children":660},{"id":659},"实现",[661],{"type":467,"value":659},{"type":462,"tag":479,"props":663,"children":667},{"className":664,"code":665,"language":666,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[668],{"type":462,"tag":485,"props":669,"children":670},{"__ignoreMap":455},[671,680,706,727,744,752,806,873,899,977,1027,1070,1079,1096],{"type":462,"tag":489,"props":672,"children":673},{"class":491,"line":492},[674],{"type":462,"tag":489,"props":675,"children":677},{"style":676},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[678],{"type":467,"value":679},"/**\n",{"type":462,"tag":489,"props":681,"children":682},{"class":491,"line":501},[683,688,694,700],{"type":462,"tag":489,"props":684,"children":685},{"style":676},[686],{"type":467,"value":687}," * ",{"type":462,"tag":489,"props":689,"children":691},{"style":690},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[692],{"type":467,"value":693},"@param",{"type":462,"tag":489,"props":695,"children":697},{"style":696},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[698],{"type":467,"value":699}," {number[]}",{"type":462,"tag":489,"props":701,"children":703},{"style":702},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[704],{"type":467,"value":705}," candies\n",{"type":462,"tag":489,"props":707,"children":708},{"class":491,"line":510},[709,713,717,722],{"type":462,"tag":489,"props":710,"children":711},{"style":676},[712],{"type":467,"value":687},{"type":462,"tag":489,"props":714,"children":715},{"style":690},[716],{"type":467,"value":693},{"type":462,"tag":489,"props":718,"children":719},{"style":696},[720],{"type":467,"value":721}," {number}",{"type":462,"tag":489,"props":723,"children":724},{"style":702},[725],{"type":467,"value":726}," extraCandies\n",{"type":462,"tag":489,"props":728,"children":729},{"class":491,"line":519},[730,734,739],{"type":462,"tag":489,"props":731,"children":732},{"style":676},[733],{"type":467,"value":687},{"type":462,"tag":489,"props":735,"children":736},{"style":690},[737],{"type":467,"value":738},"@return",{"type":462,"tag":489,"props":740,"children":741},{"style":696},[742],{"type":467,"value":743}," {boolean[]}\n",{"type":462,"tag":489,"props":745,"children":746},{"class":491,"line":528},[747],{"type":462,"tag":489,"props":748,"children":749},{"style":676},[750],{"type":467,"value":751}," */\n",{"type":462,"tag":489,"props":753,"children":754},{"class":491,"line":537},[755,761,767,773,778,784,790,796,801],{"type":462,"tag":489,"props":756,"children":758},{"style":757},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[759],{"type":467,"value":760},"var",{"type":462,"tag":489,"props":762,"children":764},{"style":763},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[765],{"type":467,"value":766}," kidsWithCandies",{"type":462,"tag":489,"props":768,"children":770},{"style":769},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[771],{"type":467,"value":772}," =",{"type":462,"tag":489,"props":774,"children":775},{"style":757},[776],{"type":467,"value":777}," function",{"type":462,"tag":489,"props":779,"children":781},{"style":780},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[782],{"type":467,"value":783}," (",{"type":462,"tag":489,"props":785,"children":787},{"style":786},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[788],{"type":467,"value":789},"candies",{"type":462,"tag":489,"props":791,"children":793},{"style":792},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[794],{"type":467,"value":795},",",{"type":462,"tag":489,"props":797,"children":798},{"style":786},[799],{"type":467,"value":800}," extraCandies",{"type":462,"tag":489,"props":802,"children":803},{"style":780},[804],{"type":467,"value":805},") {\n",{"type":462,"tag":489,"props":807,"children":808},{"class":491,"line":546},[809,814,820,824,829,835,840,844,849,854,858,863,868],{"type":462,"tag":489,"props":810,"children":811},{"style":757},[812],{"type":467,"value":813},"  const",{"type":462,"tag":489,"props":815,"children":817},{"style":816},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[818],{"type":467,"value":819}," max",{"type":462,"tag":489,"props":821,"children":822},{"style":769},[823],{"type":467,"value":772},{"type":462,"tag":489,"props":825,"children":826},{"style":816},[827],{"type":467,"value":828}," Math",{"type":462,"tag":489,"props":830,"children":832},{"style":831},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[833],{"type":467,"value":834},".",{"type":462,"tag":489,"props":836,"children":837},{"style":816},[838],{"type":467,"value":839},"max",{"type":462,"tag":489,"props":841,"children":842},{"style":831},[843],{"type":467,"value":834},{"type":462,"tag":489,"props":845,"children":846},{"style":763},[847],{"type":467,"value":848},"apply",{"type":462,"tag":489,"props":850,"children":851},{"style":780},[852],{"type":467,"value":853},"([]",{"type":462,"tag":489,"props":855,"children":856},{"style":792},[857],{"type":467,"value":795},{"type":462,"tag":489,"props":859,"children":860},{"style":816},[861],{"type":467,"value":862}," candies",{"type":462,"tag":489,"props":864,"children":865},{"style":780},[866],{"type":467,"value":867},")",{"type":462,"tag":489,"props":869,"children":870},{"style":792},[871],{"type":467,"value":872},";\n",{"type":462,"tag":489,"props":874,"children":875},{"class":491,"line":555},[876,881,886,890,895],{"type":462,"tag":489,"props":877,"children":878},{"style":757},[879],{"type":467,"value":880},"  let",{"type":462,"tag":489,"props":882,"children":883},{"style":816},[884],{"type":467,"value":885}," res",{"type":462,"tag":489,"props":887,"children":888},{"style":769},[889],{"type":467,"value":772},{"type":462,"tag":489,"props":891,"children":892},{"style":780},[893],{"type":467,"value":894}," []",{"type":462,"tag":489,"props":896,"children":897},{"style":792},[898],{"type":467,"value":872},{"type":462,"tag":489,"props":900,"children":902},{"class":491,"line":901},9,[903,909,913,918,923,927,933,938,942,947,951,955,960,964,968,973],{"type":462,"tag":489,"props":904,"children":906},{"style":905},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[907],{"type":467,"value":908},"  for",{"type":462,"tag":489,"props":910,"children":911},{"style":780},[912],{"type":467,"value":783},{"type":462,"tag":489,"props":914,"children":915},{"style":757},[916],{"type":467,"value":917},"let",{"type":462,"tag":489,"props":919,"children":920},{"style":816},[921],{"type":467,"value":922}," i",{"type":462,"tag":489,"props":924,"children":925},{"style":769},[926],{"type":467,"value":772},{"type":462,"tag":489,"props":928,"children":930},{"style":929},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[931],{"type":467,"value":932}," 0",{"type":462,"tag":489,"props":934,"children":935},{"style":792},[936],{"type":467,"value":937},";",{"type":462,"tag":489,"props":939,"children":940},{"style":816},[941],{"type":467,"value":922},{"type":462,"tag":489,"props":943,"children":944},{"style":769},[945],{"type":467,"value":946}," \u003C",{"type":462,"tag":489,"props":948,"children":949},{"style":816},[950],{"type":467,"value":862},{"type":462,"tag":489,"props":952,"children":953},{"style":831},[954],{"type":467,"value":834},{"type":462,"tag":489,"props":956,"children":957},{"style":780},[958],{"type":467,"value":959},"length",{"type":462,"tag":489,"props":961,"children":962},{"style":792},[963],{"type":467,"value":937},{"type":462,"tag":489,"props":965,"children":966},{"style":816},[967],{"type":467,"value":922},{"type":462,"tag":489,"props":969,"children":970},{"style":769},[971],{"type":467,"value":972},"++",{"type":462,"tag":489,"props":974,"children":975},{"style":780},[976],{"type":467,"value":805},{"type":462,"tag":489,"props":978,"children":980},{"class":491,"line":979},10,[981,986,991,995,999,1004,1009,1014,1019,1023],{"type":462,"tag":489,"props":982,"children":983},{"style":757},[984],{"type":467,"value":985},"    let",{"type":462,"tag":489,"props":987,"children":988},{"style":816},[989],{"type":467,"value":990}," currentMax",{"type":462,"tag":489,"props":992,"children":993},{"style":769},[994],{"type":467,"value":772},{"type":462,"tag":489,"props":996,"children":997},{"style":816},[998],{"type":467,"value":862},{"type":462,"tag":489,"props":1000,"children":1001},{"style":780},[1002],{"type":467,"value":1003},"[",{"type":462,"tag":489,"props":1005,"children":1006},{"style":816},[1007],{"type":467,"value":1008},"i",{"type":462,"tag":489,"props":1010,"children":1011},{"style":780},[1012],{"type":467,"value":1013},"] ",{"type":462,"tag":489,"props":1015,"children":1016},{"style":769},[1017],{"type":467,"value":1018},"+",{"type":462,"tag":489,"props":1020,"children":1021},{"style":816},[1022],{"type":467,"value":800},{"type":462,"tag":489,"props":1024,"children":1025},{"style":792},[1026],{"type":467,"value":872},{"type":462,"tag":489,"props":1028,"children":1030},{"class":491,"line":1029},11,[1031,1036,1040,1044,1048,1053,1057,1062,1066],{"type":462,"tag":489,"props":1032,"children":1033},{"style":816},[1034],{"type":467,"value":1035},"    res",{"type":462,"tag":489,"props":1037,"children":1038},{"style":780},[1039],{"type":467,"value":1003},{"type":462,"tag":489,"props":1041,"children":1042},{"style":816},[1043],{"type":467,"value":1008},{"type":462,"tag":489,"props":1045,"children":1046},{"style":780},[1047],{"type":467,"value":1013},{"type":462,"tag":489,"props":1049,"children":1050},{"style":769},[1051],{"type":467,"value":1052},"=",{"type":462,"tag":489,"props":1054,"children":1055},{"style":816},[1056],{"type":467,"value":990},{"type":462,"tag":489,"props":1058,"children":1059},{"style":769},[1060],{"type":467,"value":1061}," >=",{"type":462,"tag":489,"props":1063,"children":1064},{"style":816},[1065],{"type":467,"value":819},{"type":462,"tag":489,"props":1067,"children":1068},{"style":792},[1069],{"type":467,"value":872},{"type":462,"tag":489,"props":1071,"children":1073},{"class":491,"line":1072},12,[1074],{"type":462,"tag":489,"props":1075,"children":1076},{"style":780},[1077],{"type":467,"value":1078},"  }\n",{"type":462,"tag":489,"props":1080,"children":1082},{"class":491,"line":1081},13,[1083,1088,1092],{"type":462,"tag":489,"props":1084,"children":1085},{"style":905},[1086],{"type":467,"value":1087},"  return",{"type":462,"tag":489,"props":1089,"children":1090},{"style":816},[1091],{"type":467,"value":885},{"type":462,"tag":489,"props":1093,"children":1094},{"style":792},[1095],{"type":467,"value":872},{"type":462,"tag":489,"props":1097,"children":1099},{"class":491,"line":1098},14,[1100,1105],{"type":462,"tag":489,"props":1101,"children":1102},{"style":780},[1103],{"type":467,"value":1104},"}",{"type":462,"tag":489,"props":1106,"children":1107},{"style":792},[1108],{"type":467,"value":872},{"type":462,"tag":1110,"props":1111,"children":1112},"style",{},[1113],{"type":467,"value":1114},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":528,"depth":528,"links":1116},[1117,1118],{"id":654,"depth":501,"text":654},{"id":659,"depth":501,"text":659},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1125,1127],{"_path":252,"title":251,"description":1126},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":258,"title":257,"description":1128},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1713457425350]