[{"data":1,"prerenderedAt":1207},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":503,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1202},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":264,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":263,"description":507,"url":508,"body":509,"_type":1197,"_id":1198,"_source":1199,"_file":1200,"_extension":1201},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":510,"children":511,"toc":1193},"root",[512,519,524,529,613,618,649,654,677,682,702,708,713,1187],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522],{"type":518,"value":523},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":513,"tag":514,"props":525,"children":526},{},[527],{"type":518,"value":528},"示例 1：",{"type":513,"tag":530,"props":531,"children":534},"pre",{"className":532,"code":533,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[535],{"type":513,"tag":536,"props":537,"children":538},"code",{"__ignoreMap":506},[539,550,559,568,577,586,595,604],{"type":513,"tag":540,"props":541,"children":544},"span",{"class":542,"line":543},"line",1,[545],{"type":513,"tag":540,"props":546,"children":547},{},[548],{"type":518,"value":549},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":513,"tag":540,"props":551,"children":553},{"class":542,"line":552},2,[554],{"type":513,"tag":540,"props":555,"children":556},{},[557],{"type":518,"value":558},"输出：[true,true,true,false,true]\n",{"type":513,"tag":540,"props":560,"children":562},{"class":542,"line":561},3,[563],{"type":513,"tag":540,"props":564,"children":565},{},[566],{"type":518,"value":567},"解释：\n",{"type":513,"tag":540,"props":569,"children":571},{"class":542,"line":570},4,[572],{"type":513,"tag":540,"props":573,"children":574},{},[575],{"type":518,"value":576},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":513,"tag":540,"props":578,"children":580},{"class":542,"line":579},5,[581],{"type":513,"tag":540,"props":582,"children":583},{},[584],{"type":518,"value":585},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":513,"tag":540,"props":587,"children":589},{"class":542,"line":588},6,[590],{"type":513,"tag":540,"props":591,"children":592},{},[593],{"type":518,"value":594},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":513,"tag":540,"props":596,"children":598},{"class":542,"line":597},7,[599],{"type":513,"tag":540,"props":600,"children":601},{},[602],{"type":518,"value":603},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":513,"tag":540,"props":605,"children":607},{"class":542,"line":606},8,[608],{"type":513,"tag":540,"props":609,"children":610},{},[611],{"type":518,"value":612},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":513,"tag":514,"props":614,"children":615},{},[616],{"type":518,"value":617},"示例 2：",{"type":513,"tag":530,"props":619,"children":621},{"className":532,"code":620,"language":518,"meta":506,"style":506},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[622],{"type":513,"tag":536,"props":623,"children":624},{"__ignoreMap":506},[625,633,641],{"type":513,"tag":540,"props":626,"children":627},{"class":542,"line":543},[628],{"type":513,"tag":540,"props":629,"children":630},{},[631],{"type":518,"value":632},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":513,"tag":540,"props":634,"children":635},{"class":542,"line":552},[636],{"type":513,"tag":540,"props":637,"children":638},{},[639],{"type":518,"value":640},"输出：[true,false,false,false,false]\n",{"type":513,"tag":540,"props":642,"children":643},{"class":542,"line":561},[644],{"type":513,"tag":540,"props":645,"children":646},{},[647],{"type":518,"value":648},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":513,"tag":514,"props":650,"children":651},{},[652],{"type":518,"value":653},"示例 3：",{"type":513,"tag":530,"props":655,"children":657},{"className":532,"code":656,"language":518,"meta":506,"style":506},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[658],{"type":513,"tag":536,"props":659,"children":660},{"__ignoreMap":506},[661,669],{"type":513,"tag":540,"props":662,"children":663},{"class":542,"line":543},[664],{"type":513,"tag":540,"props":665,"children":666},{},[667],{"type":518,"value":668},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":513,"tag":540,"props":670,"children":671},{"class":542,"line":552},[672],{"type":513,"tag":540,"props":673,"children":674},{},[675],{"type":518,"value":676},"输出：[true,false,true]\n",{"type":513,"tag":514,"props":678,"children":679},{},[680],{"type":518,"value":681},"提示：",{"type":513,"tag":683,"props":684,"children":685},"ul",{},[686,692,697],{"type":513,"tag":687,"props":688,"children":689},"li",{},[690],{"type":518,"value":691},"2 \u003C= candies.length \u003C= 100",{"type":513,"tag":687,"props":693,"children":694},{},[695],{"type":518,"value":696},"1 \u003C= candies[i] \u003C= 100",{"type":513,"tag":687,"props":698,"children":699},{},[700],{"type":518,"value":701},"1 \u003C= extraCandies \u003C= 50",{"type":513,"tag":703,"props":704,"children":706},"h2",{"id":705},"解题思路",[707],{"type":518,"value":705},{"type":513,"tag":703,"props":709,"children":711},{"id":710},"实现",[712],{"type":518,"value":710},{"type":513,"tag":530,"props":714,"children":718},{"className":715,"code":716,"language":717,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[719],{"type":513,"tag":536,"props":720,"children":721},{"__ignoreMap":506},[722,731,773,806,836,844,899,955,977,1059,1110,1152,1161,1178],{"type":513,"tag":540,"props":723,"children":724},{"class":542,"line":543},[725],{"type":513,"tag":540,"props":726,"children":728},{"style":727},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[729],{"type":518,"value":730},"/**\n",{"type":513,"tag":540,"props":732,"children":733},{"class":542,"line":552},[734,739,745,751,756,762,767],{"type":513,"tag":540,"props":735,"children":736},{"style":727},[737],{"type":518,"value":738}," * ",{"type":513,"tag":540,"props":740,"children":742},{"style":741},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[743],{"type":518,"value":744},"@",{"type":513,"tag":540,"props":746,"children":748},{"style":747},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[749],{"type":518,"value":750},"param",{"type":513,"tag":540,"props":752,"children":753},{"style":741},[754],{"type":518,"value":755}," {",{"type":513,"tag":540,"props":757,"children":759},{"style":758},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[760],{"type":518,"value":761},"number[]",{"type":513,"tag":540,"props":763,"children":764},{"style":741},[765],{"type":518,"value":766},"}",{"type":513,"tag":540,"props":768,"children":770},{"style":769},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[771],{"type":518,"value":772}," candies\n",{"type":513,"tag":540,"props":774,"children":775},{"class":542,"line":561},[776,780,784,788,792,797,801],{"type":513,"tag":540,"props":777,"children":778},{"style":727},[779],{"type":518,"value":738},{"type":513,"tag":540,"props":781,"children":782},{"style":741},[783],{"type":518,"value":744},{"type":513,"tag":540,"props":785,"children":786},{"style":747},[787],{"type":518,"value":750},{"type":513,"tag":540,"props":789,"children":790},{"style":741},[791],{"type":518,"value":755},{"type":513,"tag":540,"props":793,"children":794},{"style":758},[795],{"type":518,"value":796},"number",{"type":513,"tag":540,"props":798,"children":799},{"style":741},[800],{"type":518,"value":766},{"type":513,"tag":540,"props":802,"children":803},{"style":769},[804],{"type":518,"value":805}," extraCandies\n",{"type":513,"tag":540,"props":807,"children":808},{"class":542,"line":570},[809,813,817,822,826,831],{"type":513,"tag":540,"props":810,"children":811},{"style":727},[812],{"type":518,"value":738},{"type":513,"tag":540,"props":814,"children":815},{"style":741},[816],{"type":518,"value":744},{"type":513,"tag":540,"props":818,"children":819},{"style":747},[820],{"type":518,"value":821},"return",{"type":513,"tag":540,"props":823,"children":824},{"style":741},[825],{"type":518,"value":755},{"type":513,"tag":540,"props":827,"children":828},{"style":758},[829],{"type":518,"value":830},"boolean[]",{"type":513,"tag":540,"props":832,"children":833},{"style":741},[834],{"type":518,"value":835},"}\n",{"type":513,"tag":540,"props":837,"children":838},{"class":542,"line":579},[839],{"type":513,"tag":540,"props":840,"children":841},{"style":727},[842],{"type":518,"value":843}," */\n",{"type":513,"tag":540,"props":845,"children":846},{"class":542,"line":588},[847,853,859,864,869,874,879,884,889,894],{"type":513,"tag":540,"props":848,"children":850},{"style":849},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[851],{"type":518,"value":852},"var",{"type":513,"tag":540,"props":854,"children":856},{"style":855},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[857],{"type":518,"value":858}," kidsWithCandies",{"type":513,"tag":540,"props":860,"children":861},{"style":741},[862],{"type":518,"value":863}," =",{"type":513,"tag":540,"props":865,"children":866},{"style":849},[867],{"type":518,"value":868}," function",{"type":513,"tag":540,"props":870,"children":871},{"style":741},[872],{"type":518,"value":873}," (",{"type":513,"tag":540,"props":875,"children":876},{"style":769},[877],{"type":518,"value":878},"candies",{"type":513,"tag":540,"props":880,"children":881},{"style":741},[882],{"type":518,"value":883},",",{"type":513,"tag":540,"props":885,"children":886},{"style":769},[887],{"type":518,"value":888}," extraCandies",{"type":513,"tag":540,"props":890,"children":891},{"style":741},[892],{"type":518,"value":893},")",{"type":513,"tag":540,"props":895,"children":896},{"style":741},[897],{"type":518,"value":898}," {\n",{"type":513,"tag":540,"props":900,"children":901},{"class":542,"line":597},[902,907,912,916,921,926,931,935,940,945,950],{"type":513,"tag":540,"props":903,"children":904},{"style":849},[905],{"type":518,"value":906},"  const",{"type":513,"tag":540,"props":908,"children":909},{"style":769},[910],{"type":518,"value":911}," max",{"type":513,"tag":540,"props":913,"children":914},{"style":741},[915],{"type":518,"value":863},{"type":513,"tag":540,"props":917,"children":918},{"style":769},[919],{"type":518,"value":920}," Math",{"type":513,"tag":540,"props":922,"children":923},{"style":741},[924],{"type":518,"value":925},".",{"type":513,"tag":540,"props":927,"children":928},{"style":769},[929],{"type":518,"value":930},"max",{"type":513,"tag":540,"props":932,"children":933},{"style":741},[934],{"type":518,"value":925},{"type":513,"tag":540,"props":936,"children":937},{"style":855},[938],{"type":518,"value":939},"apply",{"type":513,"tag":540,"props":941,"children":942},{"style":741},[943],{"type":518,"value":944},"([],",{"type":513,"tag":540,"props":946,"children":947},{"style":769},[948],{"type":518,"value":949}," candies",{"type":513,"tag":540,"props":951,"children":952},{"style":741},[953],{"type":518,"value":954},");\n",{"type":513,"tag":540,"props":956,"children":957},{"class":542,"line":606},[958,963,968,972],{"type":513,"tag":540,"props":959,"children":960},{"style":849},[961],{"type":518,"value":962},"  let",{"type":513,"tag":540,"props":964,"children":965},{"style":769},[966],{"type":518,"value":967}," res",{"type":513,"tag":540,"props":969,"children":970},{"style":741},[971],{"type":518,"value":863},{"type":513,"tag":540,"props":973,"children":974},{"style":741},[975],{"type":518,"value":976}," [];\n",{"type":513,"tag":540,"props":978,"children":980},{"class":542,"line":979},9,[981,986,990,995,1000,1004,1010,1015,1019,1024,1028,1032,1038,1042,1046,1051,1055],{"type":513,"tag":540,"props":982,"children":983},{"style":747},[984],{"type":518,"value":985},"  for",{"type":513,"tag":540,"props":987,"children":988},{"style":741},[989],{"type":518,"value":873},{"type":513,"tag":540,"props":991,"children":992},{"style":849},[993],{"type":518,"value":994},"let",{"type":513,"tag":540,"props":996,"children":997},{"style":769},[998],{"type":518,"value":999}," i",{"type":513,"tag":540,"props":1001,"children":1002},{"style":741},[1003],{"type":518,"value":863},{"type":513,"tag":540,"props":1005,"children":1007},{"style":1006},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1008],{"type":518,"value":1009}," 0",{"type":513,"tag":540,"props":1011,"children":1012},{"style":741},[1013],{"type":518,"value":1014},";",{"type":513,"tag":540,"props":1016,"children":1017},{"style":769},[1018],{"type":518,"value":999},{"type":513,"tag":540,"props":1020,"children":1021},{"style":741},[1022],{"type":518,"value":1023}," \u003C",{"type":513,"tag":540,"props":1025,"children":1026},{"style":769},[1027],{"type":518,"value":949},{"type":513,"tag":540,"props":1029,"children":1030},{"style":741},[1031],{"type":518,"value":925},{"type":513,"tag":540,"props":1033,"children":1035},{"style":1034},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1036],{"type":518,"value":1037},"length",{"type":513,"tag":540,"props":1039,"children":1040},{"style":741},[1041],{"type":518,"value":1014},{"type":513,"tag":540,"props":1043,"children":1044},{"style":769},[1045],{"type":518,"value":999},{"type":513,"tag":540,"props":1047,"children":1048},{"style":849},[1049],{"type":518,"value":1050},"++",{"type":513,"tag":540,"props":1052,"children":1053},{"style":741},[1054],{"type":518,"value":893},{"type":513,"tag":540,"props":1056,"children":1057},{"style":741},[1058],{"type":518,"value":898},{"type":513,"tag":540,"props":1060,"children":1062},{"class":542,"line":1061},10,[1063,1068,1073,1077,1081,1086,1091,1096,1101,1105],{"type":513,"tag":540,"props":1064,"children":1065},{"style":849},[1066],{"type":518,"value":1067},"    let",{"type":513,"tag":540,"props":1069,"children":1070},{"style":769},[1071],{"type":518,"value":1072}," currentMax",{"type":513,"tag":540,"props":1074,"children":1075},{"style":741},[1076],{"type":518,"value":863},{"type":513,"tag":540,"props":1078,"children":1079},{"style":769},[1080],{"type":518,"value":949},{"type":513,"tag":540,"props":1082,"children":1083},{"style":741},[1084],{"type":518,"value":1085},"[",{"type":513,"tag":540,"props":1087,"children":1088},{"style":769},[1089],{"type":518,"value":1090},"i",{"type":513,"tag":540,"props":1092,"children":1093},{"style":741},[1094],{"type":518,"value":1095},"]",{"type":513,"tag":540,"props":1097,"children":1098},{"style":849},[1099],{"type":518,"value":1100}," +",{"type":513,"tag":540,"props":1102,"children":1103},{"style":769},[1104],{"type":518,"value":888},{"type":513,"tag":540,"props":1106,"children":1107},{"style":741},[1108],{"type":518,"value":1109},";\n",{"type":513,"tag":540,"props":1111,"children":1113},{"class":542,"line":1112},11,[1114,1119,1123,1127,1131,1135,1139,1144,1148],{"type":513,"tag":540,"props":1115,"children":1116},{"style":769},[1117],{"type":518,"value":1118},"    res",{"type":513,"tag":540,"props":1120,"children":1121},{"style":741},[1122],{"type":518,"value":1085},{"type":513,"tag":540,"props":1124,"children":1125},{"style":769},[1126],{"type":518,"value":1090},{"type":513,"tag":540,"props":1128,"children":1129},{"style":741},[1130],{"type":518,"value":1095},{"type":513,"tag":540,"props":1132,"children":1133},{"style":741},[1134],{"type":518,"value":863},{"type":513,"tag":540,"props":1136,"children":1137},{"style":769},[1138],{"type":518,"value":1072},{"type":513,"tag":540,"props":1140,"children":1141},{"style":741},[1142],{"type":518,"value":1143}," >=",{"type":513,"tag":540,"props":1145,"children":1146},{"style":769},[1147],{"type":518,"value":911},{"type":513,"tag":540,"props":1149,"children":1150},{"style":741},[1151],{"type":518,"value":1109},{"type":513,"tag":540,"props":1153,"children":1155},{"class":542,"line":1154},12,[1156],{"type":513,"tag":540,"props":1157,"children":1158},{"style":741},[1159],{"type":518,"value":1160},"  }\n",{"type":513,"tag":540,"props":1162,"children":1164},{"class":542,"line":1163},13,[1165,1170,1174],{"type":513,"tag":540,"props":1166,"children":1167},{"style":747},[1168],{"type":518,"value":1169},"  return",{"type":513,"tag":540,"props":1171,"children":1172},{"style":769},[1173],{"type":518,"value":967},{"type":513,"tag":540,"props":1175,"children":1176},{"style":741},[1177],{"type":518,"value":1109},{"type":513,"tag":540,"props":1179,"children":1181},{"class":542,"line":1180},14,[1182],{"type":513,"tag":540,"props":1183,"children":1184},{"style":741},[1185],{"type":518,"value":1186},"};\n",{"type":513,"tag":1188,"props":1189,"children":1190},"style",{},[1191],{"type":518,"value":1192},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":579,"depth":579,"links":1194},[1195,1196],{"id":705,"depth":552,"text":705},{"id":710,"depth":552,"text":710},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1203,1205],{"_path":261,"title":260,"description":1204},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":267,"title":266,"description":1206},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1714056097001]