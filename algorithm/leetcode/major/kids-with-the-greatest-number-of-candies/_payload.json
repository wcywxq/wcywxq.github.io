[{"data":1,"prerenderedAt":1143},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":466,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1138},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":264,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":263,"description":470,"url":471,"body":472,"_type":1133,"_id":1134,"_source":1135,"_file":1136,"_extension":1137},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":473,"children":474,"toc":1129},"root",[475,482,487,492,576,581,612,617,640,645,665,671,676,1123],{"type":476,"tag":477,"props":478,"children":479},"element","p",{},[480],{"type":481,"value":470},"text",{"type":476,"tag":477,"props":483,"children":484},{},[485],{"type":481,"value":486},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":476,"tag":477,"props":488,"children":489},{},[490],{"type":481,"value":491},"示例 1：",{"type":476,"tag":493,"props":494,"children":497},"pre",{"className":495,"code":496,"language":481,"meta":469,"style":469},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[498],{"type":476,"tag":499,"props":500,"children":501},"code",{"__ignoreMap":469},[502,513,522,531,540,549,558,567],{"type":476,"tag":503,"props":504,"children":507},"span",{"class":505,"line":506},"line",1,[508],{"type":476,"tag":503,"props":509,"children":510},{},[511],{"type":481,"value":512},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":476,"tag":503,"props":514,"children":516},{"class":505,"line":515},2,[517],{"type":476,"tag":503,"props":518,"children":519},{},[520],{"type":481,"value":521},"输出：[true,true,true,false,true]\n",{"type":476,"tag":503,"props":523,"children":525},{"class":505,"line":524},3,[526],{"type":476,"tag":503,"props":527,"children":528},{},[529],{"type":481,"value":530},"解释：\n",{"type":476,"tag":503,"props":532,"children":534},{"class":505,"line":533},4,[535],{"type":476,"tag":503,"props":536,"children":537},{},[538],{"type":481,"value":539},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":476,"tag":503,"props":541,"children":543},{"class":505,"line":542},5,[544],{"type":476,"tag":503,"props":545,"children":546},{},[547],{"type":481,"value":548},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":476,"tag":503,"props":550,"children":552},{"class":505,"line":551},6,[553],{"type":476,"tag":503,"props":554,"children":555},{},[556],{"type":481,"value":557},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":476,"tag":503,"props":559,"children":561},{"class":505,"line":560},7,[562],{"type":476,"tag":503,"props":563,"children":564},{},[565],{"type":481,"value":566},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":476,"tag":503,"props":568,"children":570},{"class":505,"line":569},8,[571],{"type":476,"tag":503,"props":572,"children":573},{},[574],{"type":481,"value":575},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":476,"tag":477,"props":577,"children":578},{},[579],{"type":481,"value":580},"示例 2：",{"type":476,"tag":493,"props":582,"children":584},{"className":495,"code":583,"language":481,"meta":469,"style":469},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[585],{"type":476,"tag":499,"props":586,"children":587},{"__ignoreMap":469},[588,596,604],{"type":476,"tag":503,"props":589,"children":590},{"class":505,"line":506},[591],{"type":476,"tag":503,"props":592,"children":593},{},[594],{"type":481,"value":595},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":476,"tag":503,"props":597,"children":598},{"class":505,"line":515},[599],{"type":476,"tag":503,"props":600,"children":601},{},[602],{"type":481,"value":603},"输出：[true,false,false,false,false]\n",{"type":476,"tag":503,"props":605,"children":606},{"class":505,"line":524},[607],{"type":476,"tag":503,"props":608,"children":609},{},[610],{"type":481,"value":611},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":476,"tag":477,"props":613,"children":614},{},[615],{"type":481,"value":616},"示例 3：",{"type":476,"tag":493,"props":618,"children":620},{"className":495,"code":619,"language":481,"meta":469,"style":469},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[621],{"type":476,"tag":499,"props":622,"children":623},{"__ignoreMap":469},[624,632],{"type":476,"tag":503,"props":625,"children":626},{"class":505,"line":506},[627],{"type":476,"tag":503,"props":628,"children":629},{},[630],{"type":481,"value":631},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":476,"tag":503,"props":633,"children":634},{"class":505,"line":515},[635],{"type":476,"tag":503,"props":636,"children":637},{},[638],{"type":481,"value":639},"输出：[true,false,true]\n",{"type":476,"tag":477,"props":641,"children":642},{},[643],{"type":481,"value":644},"提示：",{"type":476,"tag":646,"props":647,"children":648},"ul",{},[649,655,660],{"type":476,"tag":650,"props":651,"children":652},"li",{},[653],{"type":481,"value":654},"2 \u003C= candies.length \u003C= 100",{"type":476,"tag":650,"props":656,"children":657},{},[658],{"type":481,"value":659},"1 \u003C= candies[i] \u003C= 100",{"type":476,"tag":650,"props":661,"children":662},{},[663],{"type":481,"value":664},"1 \u003C= extraCandies \u003C= 50",{"type":476,"tag":666,"props":667,"children":669},"h2",{"id":668},"解题思路",[670],{"type":481,"value":668},{"type":476,"tag":666,"props":672,"children":674},{"id":673},"实现",[675],{"type":481,"value":673},{"type":476,"tag":493,"props":677,"children":681},{"className":678,"code":679,"language":680,"meta":469,"style":469},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[682],{"type":476,"tag":499,"props":683,"children":684},{"__ignoreMap":469},[685,694,720,741,758,766,820,887,913,991,1041,1084,1093,1110],{"type":476,"tag":503,"props":686,"children":687},{"class":505,"line":506},[688],{"type":476,"tag":503,"props":689,"children":691},{"style":690},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[692],{"type":481,"value":693},"/**\n",{"type":476,"tag":503,"props":695,"children":696},{"class":505,"line":515},[697,702,708,714],{"type":476,"tag":503,"props":698,"children":699},{"style":690},[700],{"type":481,"value":701}," * ",{"type":476,"tag":503,"props":703,"children":705},{"style":704},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[706],{"type":481,"value":707},"@param",{"type":476,"tag":503,"props":709,"children":711},{"style":710},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[712],{"type":481,"value":713}," {number[]}",{"type":476,"tag":503,"props":715,"children":717},{"style":716},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[718],{"type":481,"value":719}," candies\n",{"type":476,"tag":503,"props":721,"children":722},{"class":505,"line":524},[723,727,731,736],{"type":476,"tag":503,"props":724,"children":725},{"style":690},[726],{"type":481,"value":701},{"type":476,"tag":503,"props":728,"children":729},{"style":704},[730],{"type":481,"value":707},{"type":476,"tag":503,"props":732,"children":733},{"style":710},[734],{"type":481,"value":735}," {number}",{"type":476,"tag":503,"props":737,"children":738},{"style":716},[739],{"type":481,"value":740}," extraCandies\n",{"type":476,"tag":503,"props":742,"children":743},{"class":505,"line":533},[744,748,753],{"type":476,"tag":503,"props":745,"children":746},{"style":690},[747],{"type":481,"value":701},{"type":476,"tag":503,"props":749,"children":750},{"style":704},[751],{"type":481,"value":752},"@return",{"type":476,"tag":503,"props":754,"children":755},{"style":710},[756],{"type":481,"value":757}," {boolean[]}\n",{"type":476,"tag":503,"props":759,"children":760},{"class":505,"line":542},[761],{"type":476,"tag":503,"props":762,"children":763},{"style":690},[764],{"type":481,"value":765}," */\n",{"type":476,"tag":503,"props":767,"children":768},{"class":505,"line":551},[769,775,781,787,792,798,804,810,815],{"type":476,"tag":503,"props":770,"children":772},{"style":771},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[773],{"type":481,"value":774},"var",{"type":476,"tag":503,"props":776,"children":778},{"style":777},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[779],{"type":481,"value":780}," kidsWithCandies",{"type":476,"tag":503,"props":782,"children":784},{"style":783},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[785],{"type":481,"value":786}," =",{"type":476,"tag":503,"props":788,"children":789},{"style":771},[790],{"type":481,"value":791}," function",{"type":476,"tag":503,"props":793,"children":795},{"style":794},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[796],{"type":481,"value":797}," (",{"type":476,"tag":503,"props":799,"children":801},{"style":800},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[802],{"type":481,"value":803},"candies",{"type":476,"tag":503,"props":805,"children":807},{"style":806},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[808],{"type":481,"value":809},",",{"type":476,"tag":503,"props":811,"children":812},{"style":800},[813],{"type":481,"value":814}," extraCandies",{"type":476,"tag":503,"props":816,"children":817},{"style":794},[818],{"type":481,"value":819},") {\n",{"type":476,"tag":503,"props":821,"children":822},{"class":505,"line":560},[823,828,834,838,843,849,854,858,863,868,872,877,882],{"type":476,"tag":503,"props":824,"children":825},{"style":771},[826],{"type":481,"value":827},"  const",{"type":476,"tag":503,"props":829,"children":831},{"style":830},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[832],{"type":481,"value":833}," max",{"type":476,"tag":503,"props":835,"children":836},{"style":783},[837],{"type":481,"value":786},{"type":476,"tag":503,"props":839,"children":840},{"style":830},[841],{"type":481,"value":842}," Math",{"type":476,"tag":503,"props":844,"children":846},{"style":845},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[847],{"type":481,"value":848},".",{"type":476,"tag":503,"props":850,"children":851},{"style":830},[852],{"type":481,"value":853},"max",{"type":476,"tag":503,"props":855,"children":856},{"style":845},[857],{"type":481,"value":848},{"type":476,"tag":503,"props":859,"children":860},{"style":777},[861],{"type":481,"value":862},"apply",{"type":476,"tag":503,"props":864,"children":865},{"style":794},[866],{"type":481,"value":867},"([]",{"type":476,"tag":503,"props":869,"children":870},{"style":806},[871],{"type":481,"value":809},{"type":476,"tag":503,"props":873,"children":874},{"style":830},[875],{"type":481,"value":876}," candies",{"type":476,"tag":503,"props":878,"children":879},{"style":794},[880],{"type":481,"value":881},")",{"type":476,"tag":503,"props":883,"children":884},{"style":806},[885],{"type":481,"value":886},";\n",{"type":476,"tag":503,"props":888,"children":889},{"class":505,"line":569},[890,895,900,904,909],{"type":476,"tag":503,"props":891,"children":892},{"style":771},[893],{"type":481,"value":894},"  let",{"type":476,"tag":503,"props":896,"children":897},{"style":830},[898],{"type":481,"value":899}," res",{"type":476,"tag":503,"props":901,"children":902},{"style":783},[903],{"type":481,"value":786},{"type":476,"tag":503,"props":905,"children":906},{"style":794},[907],{"type":481,"value":908}," []",{"type":476,"tag":503,"props":910,"children":911},{"style":806},[912],{"type":481,"value":886},{"type":476,"tag":503,"props":914,"children":916},{"class":505,"line":915},9,[917,923,927,932,937,941,947,952,956,961,965,969,974,978,982,987],{"type":476,"tag":503,"props":918,"children":920},{"style":919},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[921],{"type":481,"value":922},"  for",{"type":476,"tag":503,"props":924,"children":925},{"style":794},[926],{"type":481,"value":797},{"type":476,"tag":503,"props":928,"children":929},{"style":771},[930],{"type":481,"value":931},"let",{"type":476,"tag":503,"props":933,"children":934},{"style":830},[935],{"type":481,"value":936}," i",{"type":476,"tag":503,"props":938,"children":939},{"style":783},[940],{"type":481,"value":786},{"type":476,"tag":503,"props":942,"children":944},{"style":943},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[945],{"type":481,"value":946}," 0",{"type":476,"tag":503,"props":948,"children":949},{"style":806},[950],{"type":481,"value":951},";",{"type":476,"tag":503,"props":953,"children":954},{"style":830},[955],{"type":481,"value":936},{"type":476,"tag":503,"props":957,"children":958},{"style":783},[959],{"type":481,"value":960}," \u003C",{"type":476,"tag":503,"props":962,"children":963},{"style":830},[964],{"type":481,"value":876},{"type":476,"tag":503,"props":966,"children":967},{"style":845},[968],{"type":481,"value":848},{"type":476,"tag":503,"props":970,"children":971},{"style":794},[972],{"type":481,"value":973},"length",{"type":476,"tag":503,"props":975,"children":976},{"style":806},[977],{"type":481,"value":951},{"type":476,"tag":503,"props":979,"children":980},{"style":830},[981],{"type":481,"value":936},{"type":476,"tag":503,"props":983,"children":984},{"style":783},[985],{"type":481,"value":986},"++",{"type":476,"tag":503,"props":988,"children":989},{"style":794},[990],{"type":481,"value":819},{"type":476,"tag":503,"props":992,"children":994},{"class":505,"line":993},10,[995,1000,1005,1009,1013,1018,1023,1028,1033,1037],{"type":476,"tag":503,"props":996,"children":997},{"style":771},[998],{"type":481,"value":999},"    let",{"type":476,"tag":503,"props":1001,"children":1002},{"style":830},[1003],{"type":481,"value":1004}," currentMax",{"type":476,"tag":503,"props":1006,"children":1007},{"style":783},[1008],{"type":481,"value":786},{"type":476,"tag":503,"props":1010,"children":1011},{"style":830},[1012],{"type":481,"value":876},{"type":476,"tag":503,"props":1014,"children":1015},{"style":794},[1016],{"type":481,"value":1017},"[",{"type":476,"tag":503,"props":1019,"children":1020},{"style":830},[1021],{"type":481,"value":1022},"i",{"type":476,"tag":503,"props":1024,"children":1025},{"style":794},[1026],{"type":481,"value":1027},"] ",{"type":476,"tag":503,"props":1029,"children":1030},{"style":783},[1031],{"type":481,"value":1032},"+",{"type":476,"tag":503,"props":1034,"children":1035},{"style":830},[1036],{"type":481,"value":814},{"type":476,"tag":503,"props":1038,"children":1039},{"style":806},[1040],{"type":481,"value":886},{"type":476,"tag":503,"props":1042,"children":1044},{"class":505,"line":1043},11,[1045,1050,1054,1058,1062,1067,1071,1076,1080],{"type":476,"tag":503,"props":1046,"children":1047},{"style":830},[1048],{"type":481,"value":1049},"    res",{"type":476,"tag":503,"props":1051,"children":1052},{"style":794},[1053],{"type":481,"value":1017},{"type":476,"tag":503,"props":1055,"children":1056},{"style":830},[1057],{"type":481,"value":1022},{"type":476,"tag":503,"props":1059,"children":1060},{"style":794},[1061],{"type":481,"value":1027},{"type":476,"tag":503,"props":1063,"children":1064},{"style":783},[1065],{"type":481,"value":1066},"=",{"type":476,"tag":503,"props":1068,"children":1069},{"style":830},[1070],{"type":481,"value":1004},{"type":476,"tag":503,"props":1072,"children":1073},{"style":783},[1074],{"type":481,"value":1075}," >=",{"type":476,"tag":503,"props":1077,"children":1078},{"style":830},[1079],{"type":481,"value":833},{"type":476,"tag":503,"props":1081,"children":1082},{"style":806},[1083],{"type":481,"value":886},{"type":476,"tag":503,"props":1085,"children":1087},{"class":505,"line":1086},12,[1088],{"type":476,"tag":503,"props":1089,"children":1090},{"style":794},[1091],{"type":481,"value":1092},"  }\n",{"type":476,"tag":503,"props":1094,"children":1096},{"class":505,"line":1095},13,[1097,1102,1106],{"type":476,"tag":503,"props":1098,"children":1099},{"style":919},[1100],{"type":481,"value":1101},"  return",{"type":476,"tag":503,"props":1103,"children":1104},{"style":830},[1105],{"type":481,"value":899},{"type":476,"tag":503,"props":1107,"children":1108},{"style":806},[1109],{"type":481,"value":886},{"type":476,"tag":503,"props":1111,"children":1113},{"class":505,"line":1112},14,[1114,1119],{"type":476,"tag":503,"props":1115,"children":1116},{"style":794},[1117],{"type":481,"value":1118},"}",{"type":476,"tag":503,"props":1120,"children":1121},{"style":806},[1122],{"type":481,"value":886},{"type":476,"tag":1124,"props":1125,"children":1126},"style",{},[1127],{"type":481,"value":1128},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":542,"depth":542,"links":1130},[1131,1132],{"id":668,"depth":515,"text":668},{"id":673,"depth":515,"text":673},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1139,1141],{"_path":261,"title":260,"description":1140},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":267,"title":266,"description":1142},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1714007217372]