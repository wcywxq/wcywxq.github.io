[{"data":1,"prerenderedAt":1247},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":543,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1242},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":264,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":263,"description":547,"url":548,"body":549,"_type":1237,"_id":1238,"_source":1239,"_file":1240,"_extension":1241},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":550,"children":551,"toc":1233},"root",[552,559,564,569,653,658,689,694,717,722,742,748,753,1227],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"示例 1：",{"type":553,"tag":570,"props":571,"children":574},"pre",{"className":572,"code":573,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[575],{"type":553,"tag":576,"props":577,"children":578},"code",{"__ignoreMap":546},[579,590,599,608,617,626,635,644],{"type":553,"tag":580,"props":581,"children":584},"span",{"class":582,"line":583},"line",1,[585],{"type":553,"tag":580,"props":586,"children":587},{},[588],{"type":558,"value":589},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":553,"tag":580,"props":591,"children":593},{"class":582,"line":592},2,[594],{"type":553,"tag":580,"props":595,"children":596},{},[597],{"type":558,"value":598},"输出：[true,true,true,false,true]\n",{"type":553,"tag":580,"props":600,"children":602},{"class":582,"line":601},3,[603],{"type":553,"tag":580,"props":604,"children":605},{},[606],{"type":558,"value":607},"解释：\n",{"type":553,"tag":580,"props":609,"children":611},{"class":582,"line":610},4,[612],{"type":553,"tag":580,"props":613,"children":614},{},[615],{"type":558,"value":616},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":553,"tag":580,"props":618,"children":620},{"class":582,"line":619},5,[621],{"type":553,"tag":580,"props":622,"children":623},{},[624],{"type":558,"value":625},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":553,"tag":580,"props":627,"children":629},{"class":582,"line":628},6,[630],{"type":553,"tag":580,"props":631,"children":632},{},[633],{"type":558,"value":634},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":553,"tag":580,"props":636,"children":638},{"class":582,"line":637},7,[639],{"type":553,"tag":580,"props":640,"children":641},{},[642],{"type":558,"value":643},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":553,"tag":580,"props":645,"children":647},{"class":582,"line":646},8,[648],{"type":553,"tag":580,"props":649,"children":650},{},[651],{"type":558,"value":652},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":553,"tag":554,"props":654,"children":655},{},[656],{"type":558,"value":657},"示例 2：",{"type":553,"tag":570,"props":659,"children":661},{"className":572,"code":660,"language":558,"meta":546,"style":546},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[662],{"type":553,"tag":576,"props":663,"children":664},{"__ignoreMap":546},[665,673,681],{"type":553,"tag":580,"props":666,"children":667},{"class":582,"line":583},[668],{"type":553,"tag":580,"props":669,"children":670},{},[671],{"type":558,"value":672},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":553,"tag":580,"props":674,"children":675},{"class":582,"line":592},[676],{"type":553,"tag":580,"props":677,"children":678},{},[679],{"type":558,"value":680},"输出：[true,false,false,false,false]\n",{"type":553,"tag":580,"props":682,"children":683},{"class":582,"line":601},[684],{"type":553,"tag":580,"props":685,"children":686},{},[687],{"type":558,"value":688},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":553,"tag":554,"props":690,"children":691},{},[692],{"type":558,"value":693},"示例 3：",{"type":553,"tag":570,"props":695,"children":697},{"className":572,"code":696,"language":558,"meta":546,"style":546},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[698],{"type":553,"tag":576,"props":699,"children":700},{"__ignoreMap":546},[701,709],{"type":553,"tag":580,"props":702,"children":703},{"class":582,"line":583},[704],{"type":553,"tag":580,"props":705,"children":706},{},[707],{"type":558,"value":708},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":553,"tag":580,"props":710,"children":711},{"class":582,"line":592},[712],{"type":553,"tag":580,"props":713,"children":714},{},[715],{"type":558,"value":716},"输出：[true,false,true]\n",{"type":553,"tag":554,"props":718,"children":719},{},[720],{"type":558,"value":721},"提示：",{"type":553,"tag":723,"props":724,"children":725},"ul",{},[726,732,737],{"type":553,"tag":727,"props":728,"children":729},"li",{},[730],{"type":558,"value":731},"2 \u003C= candies.length \u003C= 100",{"type":553,"tag":727,"props":733,"children":734},{},[735],{"type":558,"value":736},"1 \u003C= candies[i] \u003C= 100",{"type":553,"tag":727,"props":738,"children":739},{},[740],{"type":558,"value":741},"1 \u003C= extraCandies \u003C= 50",{"type":553,"tag":743,"props":744,"children":746},"h2",{"id":745},"解题思路",[747],{"type":558,"value":745},{"type":553,"tag":743,"props":749,"children":751},{"id":750},"实现",[752],{"type":558,"value":750},{"type":553,"tag":570,"props":754,"children":758},{"className":755,"code":756,"language":757,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[759],{"type":553,"tag":576,"props":760,"children":761},{"__ignoreMap":546},[762,771,813,846,876,884,939,995,1017,1099,1150,1192,1201,1218],{"type":553,"tag":580,"props":763,"children":764},{"class":582,"line":583},[765],{"type":553,"tag":580,"props":766,"children":768},{"style":767},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[769],{"type":558,"value":770},"/**\n",{"type":553,"tag":580,"props":772,"children":773},{"class":582,"line":592},[774,779,785,791,796,802,807],{"type":553,"tag":580,"props":775,"children":776},{"style":767},[777],{"type":558,"value":778}," * ",{"type":553,"tag":580,"props":780,"children":782},{"style":781},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[783],{"type":558,"value":784},"@",{"type":553,"tag":580,"props":786,"children":788},{"style":787},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[789],{"type":558,"value":790},"param",{"type":553,"tag":580,"props":792,"children":793},{"style":781},[794],{"type":558,"value":795}," {",{"type":553,"tag":580,"props":797,"children":799},{"style":798},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[800],{"type":558,"value":801},"number[]",{"type":553,"tag":580,"props":803,"children":804},{"style":781},[805],{"type":558,"value":806},"}",{"type":553,"tag":580,"props":808,"children":810},{"style":809},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[811],{"type":558,"value":812}," candies\n",{"type":553,"tag":580,"props":814,"children":815},{"class":582,"line":601},[816,820,824,828,832,837,841],{"type":553,"tag":580,"props":817,"children":818},{"style":767},[819],{"type":558,"value":778},{"type":553,"tag":580,"props":821,"children":822},{"style":781},[823],{"type":558,"value":784},{"type":553,"tag":580,"props":825,"children":826},{"style":787},[827],{"type":558,"value":790},{"type":553,"tag":580,"props":829,"children":830},{"style":781},[831],{"type":558,"value":795},{"type":553,"tag":580,"props":833,"children":834},{"style":798},[835],{"type":558,"value":836},"number",{"type":553,"tag":580,"props":838,"children":839},{"style":781},[840],{"type":558,"value":806},{"type":553,"tag":580,"props":842,"children":843},{"style":809},[844],{"type":558,"value":845}," extraCandies\n",{"type":553,"tag":580,"props":847,"children":848},{"class":582,"line":610},[849,853,857,862,866,871],{"type":553,"tag":580,"props":850,"children":851},{"style":767},[852],{"type":558,"value":778},{"type":553,"tag":580,"props":854,"children":855},{"style":781},[856],{"type":558,"value":784},{"type":553,"tag":580,"props":858,"children":859},{"style":787},[860],{"type":558,"value":861},"return",{"type":553,"tag":580,"props":863,"children":864},{"style":781},[865],{"type":558,"value":795},{"type":553,"tag":580,"props":867,"children":868},{"style":798},[869],{"type":558,"value":870},"boolean[]",{"type":553,"tag":580,"props":872,"children":873},{"style":781},[874],{"type":558,"value":875},"}\n",{"type":553,"tag":580,"props":877,"children":878},{"class":582,"line":619},[879],{"type":553,"tag":580,"props":880,"children":881},{"style":767},[882],{"type":558,"value":883}," */\n",{"type":553,"tag":580,"props":885,"children":886},{"class":582,"line":628},[887,893,899,904,909,914,919,924,929,934],{"type":553,"tag":580,"props":888,"children":890},{"style":889},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[891],{"type":558,"value":892},"var",{"type":553,"tag":580,"props":894,"children":896},{"style":895},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[897],{"type":558,"value":898}," kidsWithCandies",{"type":553,"tag":580,"props":900,"children":901},{"style":781},[902],{"type":558,"value":903}," =",{"type":553,"tag":580,"props":905,"children":906},{"style":889},[907],{"type":558,"value":908}," function",{"type":553,"tag":580,"props":910,"children":911},{"style":781},[912],{"type":558,"value":913}," (",{"type":553,"tag":580,"props":915,"children":916},{"style":809},[917],{"type":558,"value":918},"candies",{"type":553,"tag":580,"props":920,"children":921},{"style":781},[922],{"type":558,"value":923},",",{"type":553,"tag":580,"props":925,"children":926},{"style":809},[927],{"type":558,"value":928}," extraCandies",{"type":553,"tag":580,"props":930,"children":931},{"style":781},[932],{"type":558,"value":933},")",{"type":553,"tag":580,"props":935,"children":936},{"style":781},[937],{"type":558,"value":938}," {\n",{"type":553,"tag":580,"props":940,"children":941},{"class":582,"line":637},[942,947,952,956,961,966,971,975,980,985,990],{"type":553,"tag":580,"props":943,"children":944},{"style":889},[945],{"type":558,"value":946},"  const",{"type":553,"tag":580,"props":948,"children":949},{"style":809},[950],{"type":558,"value":951}," max",{"type":553,"tag":580,"props":953,"children":954},{"style":781},[955],{"type":558,"value":903},{"type":553,"tag":580,"props":957,"children":958},{"style":809},[959],{"type":558,"value":960}," Math",{"type":553,"tag":580,"props":962,"children":963},{"style":781},[964],{"type":558,"value":965},".",{"type":553,"tag":580,"props":967,"children":968},{"style":809},[969],{"type":558,"value":970},"max",{"type":553,"tag":580,"props":972,"children":973},{"style":781},[974],{"type":558,"value":965},{"type":553,"tag":580,"props":976,"children":977},{"style":895},[978],{"type":558,"value":979},"apply",{"type":553,"tag":580,"props":981,"children":982},{"style":781},[983],{"type":558,"value":984},"([],",{"type":553,"tag":580,"props":986,"children":987},{"style":809},[988],{"type":558,"value":989}," candies",{"type":553,"tag":580,"props":991,"children":992},{"style":781},[993],{"type":558,"value":994},");\n",{"type":553,"tag":580,"props":996,"children":997},{"class":582,"line":646},[998,1003,1008,1012],{"type":553,"tag":580,"props":999,"children":1000},{"style":889},[1001],{"type":558,"value":1002},"  let",{"type":553,"tag":580,"props":1004,"children":1005},{"style":809},[1006],{"type":558,"value":1007}," res",{"type":553,"tag":580,"props":1009,"children":1010},{"style":781},[1011],{"type":558,"value":903},{"type":553,"tag":580,"props":1013,"children":1014},{"style":781},[1015],{"type":558,"value":1016}," [];\n",{"type":553,"tag":580,"props":1018,"children":1020},{"class":582,"line":1019},9,[1021,1026,1030,1035,1040,1044,1050,1055,1059,1064,1068,1072,1078,1082,1086,1091,1095],{"type":553,"tag":580,"props":1022,"children":1023},{"style":787},[1024],{"type":558,"value":1025},"  for",{"type":553,"tag":580,"props":1027,"children":1028},{"style":781},[1029],{"type":558,"value":913},{"type":553,"tag":580,"props":1031,"children":1032},{"style":889},[1033],{"type":558,"value":1034},"let",{"type":553,"tag":580,"props":1036,"children":1037},{"style":809},[1038],{"type":558,"value":1039}," i",{"type":553,"tag":580,"props":1041,"children":1042},{"style":781},[1043],{"type":558,"value":903},{"type":553,"tag":580,"props":1045,"children":1047},{"style":1046},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1048],{"type":558,"value":1049}," 0",{"type":553,"tag":580,"props":1051,"children":1052},{"style":781},[1053],{"type":558,"value":1054},";",{"type":553,"tag":580,"props":1056,"children":1057},{"style":809},[1058],{"type":558,"value":1039},{"type":553,"tag":580,"props":1060,"children":1061},{"style":781},[1062],{"type":558,"value":1063}," \u003C",{"type":553,"tag":580,"props":1065,"children":1066},{"style":809},[1067],{"type":558,"value":989},{"type":553,"tag":580,"props":1069,"children":1070},{"style":781},[1071],{"type":558,"value":965},{"type":553,"tag":580,"props":1073,"children":1075},{"style":1074},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1076],{"type":558,"value":1077},"length",{"type":553,"tag":580,"props":1079,"children":1080},{"style":781},[1081],{"type":558,"value":1054},{"type":553,"tag":580,"props":1083,"children":1084},{"style":809},[1085],{"type":558,"value":1039},{"type":553,"tag":580,"props":1087,"children":1088},{"style":889},[1089],{"type":558,"value":1090},"++",{"type":553,"tag":580,"props":1092,"children":1093},{"style":781},[1094],{"type":558,"value":933},{"type":553,"tag":580,"props":1096,"children":1097},{"style":781},[1098],{"type":558,"value":938},{"type":553,"tag":580,"props":1100,"children":1102},{"class":582,"line":1101},10,[1103,1108,1113,1117,1121,1126,1131,1136,1141,1145],{"type":553,"tag":580,"props":1104,"children":1105},{"style":889},[1106],{"type":558,"value":1107},"    let",{"type":553,"tag":580,"props":1109,"children":1110},{"style":809},[1111],{"type":558,"value":1112}," currentMax",{"type":553,"tag":580,"props":1114,"children":1115},{"style":781},[1116],{"type":558,"value":903},{"type":553,"tag":580,"props":1118,"children":1119},{"style":809},[1120],{"type":558,"value":989},{"type":553,"tag":580,"props":1122,"children":1123},{"style":781},[1124],{"type":558,"value":1125},"[",{"type":553,"tag":580,"props":1127,"children":1128},{"style":809},[1129],{"type":558,"value":1130},"i",{"type":553,"tag":580,"props":1132,"children":1133},{"style":781},[1134],{"type":558,"value":1135},"]",{"type":553,"tag":580,"props":1137,"children":1138},{"style":889},[1139],{"type":558,"value":1140}," +",{"type":553,"tag":580,"props":1142,"children":1143},{"style":809},[1144],{"type":558,"value":928},{"type":553,"tag":580,"props":1146,"children":1147},{"style":781},[1148],{"type":558,"value":1149},";\n",{"type":553,"tag":580,"props":1151,"children":1153},{"class":582,"line":1152},11,[1154,1159,1163,1167,1171,1175,1179,1184,1188],{"type":553,"tag":580,"props":1155,"children":1156},{"style":809},[1157],{"type":558,"value":1158},"    res",{"type":553,"tag":580,"props":1160,"children":1161},{"style":781},[1162],{"type":558,"value":1125},{"type":553,"tag":580,"props":1164,"children":1165},{"style":809},[1166],{"type":558,"value":1130},{"type":553,"tag":580,"props":1168,"children":1169},{"style":781},[1170],{"type":558,"value":1135},{"type":553,"tag":580,"props":1172,"children":1173},{"style":781},[1174],{"type":558,"value":903},{"type":553,"tag":580,"props":1176,"children":1177},{"style":809},[1178],{"type":558,"value":1112},{"type":553,"tag":580,"props":1180,"children":1181},{"style":781},[1182],{"type":558,"value":1183}," >=",{"type":553,"tag":580,"props":1185,"children":1186},{"style":809},[1187],{"type":558,"value":951},{"type":553,"tag":580,"props":1189,"children":1190},{"style":781},[1191],{"type":558,"value":1149},{"type":553,"tag":580,"props":1193,"children":1195},{"class":582,"line":1194},12,[1196],{"type":553,"tag":580,"props":1197,"children":1198},{"style":781},[1199],{"type":558,"value":1200},"  }\n",{"type":553,"tag":580,"props":1202,"children":1204},{"class":582,"line":1203},13,[1205,1210,1214],{"type":553,"tag":580,"props":1206,"children":1207},{"style":787},[1208],{"type":558,"value":1209},"  return",{"type":553,"tag":580,"props":1211,"children":1212},{"style":809},[1213],{"type":558,"value":1007},{"type":553,"tag":580,"props":1215,"children":1216},{"style":781},[1217],{"type":558,"value":1149},{"type":553,"tag":580,"props":1219,"children":1221},{"class":582,"line":1220},14,[1222],{"type":553,"tag":580,"props":1223,"children":1224},{"style":781},[1225],{"type":558,"value":1226},"};\n",{"type":553,"tag":1228,"props":1229,"children":1230},"style",{},[1231],{"type":558,"value":1232},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":619,"depth":619,"links":1234},[1235,1236],{"id":745,"depth":592,"text":745},{"id":750,"depth":592,"text":750},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1243,1245],{"_path":261,"title":260,"description":1244},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":267,"title":266,"description":1246},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1714099680834]