[{"data":1,"prerenderedAt":1253},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":549,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1248},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":267,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":266,"description":553,"url":554,"body":555,"_type":1243,"_id":1244,"_source":1245,"_file":1246,"_extension":1247},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":556,"children":557,"toc":1239},"root",[558,565,570,575,659,664,695,700,723,728,748,754,759,1233],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"示例 1：",{"type":559,"tag":576,"props":577,"children":580},"pre",{"className":578,"code":579,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[581],{"type":559,"tag":582,"props":583,"children":584},"code",{"__ignoreMap":552},[585,596,605,614,623,632,641,650],{"type":559,"tag":586,"props":587,"children":590},"span",{"class":588,"line":589},"line",1,[591],{"type":559,"tag":586,"props":592,"children":593},{},[594],{"type":564,"value":595},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":559,"tag":586,"props":597,"children":599},{"class":588,"line":598},2,[600],{"type":559,"tag":586,"props":601,"children":602},{},[603],{"type":564,"value":604},"输出：[true,true,true,false,true]\n",{"type":559,"tag":586,"props":606,"children":608},{"class":588,"line":607},3,[609],{"type":559,"tag":586,"props":610,"children":611},{},[612],{"type":564,"value":613},"解释：\n",{"type":559,"tag":586,"props":615,"children":617},{"class":588,"line":616},4,[618],{"type":559,"tag":586,"props":619,"children":620},{},[621],{"type":564,"value":622},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":559,"tag":586,"props":624,"children":626},{"class":588,"line":625},5,[627],{"type":559,"tag":586,"props":628,"children":629},{},[630],{"type":564,"value":631},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":559,"tag":586,"props":633,"children":635},{"class":588,"line":634},6,[636],{"type":559,"tag":586,"props":637,"children":638},{},[639],{"type":564,"value":640},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":559,"tag":586,"props":642,"children":644},{"class":588,"line":643},7,[645],{"type":559,"tag":586,"props":646,"children":647},{},[648],{"type":564,"value":649},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":559,"tag":586,"props":651,"children":653},{"class":588,"line":652},8,[654],{"type":559,"tag":586,"props":655,"children":656},{},[657],{"type":564,"value":658},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":559,"tag":560,"props":660,"children":661},{},[662],{"type":564,"value":663},"示例 2：",{"type":559,"tag":576,"props":665,"children":667},{"className":578,"code":666,"language":564,"meta":552,"style":552},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[668],{"type":559,"tag":582,"props":669,"children":670},{"__ignoreMap":552},[671,679,687],{"type":559,"tag":586,"props":672,"children":673},{"class":588,"line":589},[674],{"type":559,"tag":586,"props":675,"children":676},{},[677],{"type":564,"value":678},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":559,"tag":586,"props":680,"children":681},{"class":588,"line":598},[682],{"type":559,"tag":586,"props":683,"children":684},{},[685],{"type":564,"value":686},"输出：[true,false,false,false,false]\n",{"type":559,"tag":586,"props":688,"children":689},{"class":588,"line":607},[690],{"type":559,"tag":586,"props":691,"children":692},{},[693],{"type":564,"value":694},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":559,"tag":560,"props":696,"children":697},{},[698],{"type":564,"value":699},"示例 3：",{"type":559,"tag":576,"props":701,"children":703},{"className":578,"code":702,"language":564,"meta":552,"style":552},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[704],{"type":559,"tag":582,"props":705,"children":706},{"__ignoreMap":552},[707,715],{"type":559,"tag":586,"props":708,"children":709},{"class":588,"line":589},[710],{"type":559,"tag":586,"props":711,"children":712},{},[713],{"type":564,"value":714},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":559,"tag":586,"props":716,"children":717},{"class":588,"line":598},[718],{"type":559,"tag":586,"props":719,"children":720},{},[721],{"type":564,"value":722},"输出：[true,false,true]\n",{"type":559,"tag":560,"props":724,"children":725},{},[726],{"type":564,"value":727},"提示：",{"type":559,"tag":729,"props":730,"children":731},"ul",{},[732,738,743],{"type":559,"tag":733,"props":734,"children":735},"li",{},[736],{"type":564,"value":737},"2 \u003C= candies.length \u003C= 100",{"type":559,"tag":733,"props":739,"children":740},{},[741],{"type":564,"value":742},"1 \u003C= candies[i] \u003C= 100",{"type":559,"tag":733,"props":744,"children":745},{},[746],{"type":564,"value":747},"1 \u003C= extraCandies \u003C= 50",{"type":559,"tag":749,"props":750,"children":752},"h2",{"id":751},"解题思路",[753],{"type":564,"value":751},{"type":559,"tag":749,"props":755,"children":757},{"id":756},"实现",[758],{"type":564,"value":756},{"type":559,"tag":576,"props":760,"children":764},{"className":761,"code":762,"language":763,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[765],{"type":559,"tag":582,"props":766,"children":767},{"__ignoreMap":552},[768,777,819,852,882,890,945,1001,1023,1105,1156,1198,1207,1224],{"type":559,"tag":586,"props":769,"children":770},{"class":588,"line":589},[771],{"type":559,"tag":586,"props":772,"children":774},{"style":773},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[775],{"type":564,"value":776},"/**\n",{"type":559,"tag":586,"props":778,"children":779},{"class":588,"line":598},[780,785,791,797,802,808,813],{"type":559,"tag":586,"props":781,"children":782},{"style":773},[783],{"type":564,"value":784}," * ",{"type":559,"tag":586,"props":786,"children":788},{"style":787},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[789],{"type":564,"value":790},"@",{"type":559,"tag":586,"props":792,"children":794},{"style":793},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[795],{"type":564,"value":796},"param",{"type":559,"tag":586,"props":798,"children":799},{"style":787},[800],{"type":564,"value":801}," {",{"type":559,"tag":586,"props":803,"children":805},{"style":804},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[806],{"type":564,"value":807},"number[]",{"type":559,"tag":586,"props":809,"children":810},{"style":787},[811],{"type":564,"value":812},"}",{"type":559,"tag":586,"props":814,"children":816},{"style":815},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[817],{"type":564,"value":818}," candies\n",{"type":559,"tag":586,"props":820,"children":821},{"class":588,"line":607},[822,826,830,834,838,843,847],{"type":559,"tag":586,"props":823,"children":824},{"style":773},[825],{"type":564,"value":784},{"type":559,"tag":586,"props":827,"children":828},{"style":787},[829],{"type":564,"value":790},{"type":559,"tag":586,"props":831,"children":832},{"style":793},[833],{"type":564,"value":796},{"type":559,"tag":586,"props":835,"children":836},{"style":787},[837],{"type":564,"value":801},{"type":559,"tag":586,"props":839,"children":840},{"style":804},[841],{"type":564,"value":842},"number",{"type":559,"tag":586,"props":844,"children":845},{"style":787},[846],{"type":564,"value":812},{"type":559,"tag":586,"props":848,"children":849},{"style":815},[850],{"type":564,"value":851}," extraCandies\n",{"type":559,"tag":586,"props":853,"children":854},{"class":588,"line":616},[855,859,863,868,872,877],{"type":559,"tag":586,"props":856,"children":857},{"style":773},[858],{"type":564,"value":784},{"type":559,"tag":586,"props":860,"children":861},{"style":787},[862],{"type":564,"value":790},{"type":559,"tag":586,"props":864,"children":865},{"style":793},[866],{"type":564,"value":867},"return",{"type":559,"tag":586,"props":869,"children":870},{"style":787},[871],{"type":564,"value":801},{"type":559,"tag":586,"props":873,"children":874},{"style":804},[875],{"type":564,"value":876},"boolean[]",{"type":559,"tag":586,"props":878,"children":879},{"style":787},[880],{"type":564,"value":881},"}\n",{"type":559,"tag":586,"props":883,"children":884},{"class":588,"line":625},[885],{"type":559,"tag":586,"props":886,"children":887},{"style":773},[888],{"type":564,"value":889}," */\n",{"type":559,"tag":586,"props":891,"children":892},{"class":588,"line":634},[893,899,905,910,915,920,925,930,935,940],{"type":559,"tag":586,"props":894,"children":896},{"style":895},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[897],{"type":564,"value":898},"var",{"type":559,"tag":586,"props":900,"children":902},{"style":901},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[903],{"type":564,"value":904}," kidsWithCandies",{"type":559,"tag":586,"props":906,"children":907},{"style":787},[908],{"type":564,"value":909}," =",{"type":559,"tag":586,"props":911,"children":912},{"style":895},[913],{"type":564,"value":914}," function",{"type":559,"tag":586,"props":916,"children":917},{"style":787},[918],{"type":564,"value":919}," (",{"type":559,"tag":586,"props":921,"children":922},{"style":815},[923],{"type":564,"value":924},"candies",{"type":559,"tag":586,"props":926,"children":927},{"style":787},[928],{"type":564,"value":929},",",{"type":559,"tag":586,"props":931,"children":932},{"style":815},[933],{"type":564,"value":934}," extraCandies",{"type":559,"tag":586,"props":936,"children":937},{"style":787},[938],{"type":564,"value":939},")",{"type":559,"tag":586,"props":941,"children":942},{"style":787},[943],{"type":564,"value":944}," {\n",{"type":559,"tag":586,"props":946,"children":947},{"class":588,"line":643},[948,953,958,962,967,972,977,981,986,991,996],{"type":559,"tag":586,"props":949,"children":950},{"style":895},[951],{"type":564,"value":952},"  const",{"type":559,"tag":586,"props":954,"children":955},{"style":815},[956],{"type":564,"value":957}," max",{"type":559,"tag":586,"props":959,"children":960},{"style":787},[961],{"type":564,"value":909},{"type":559,"tag":586,"props":963,"children":964},{"style":815},[965],{"type":564,"value":966}," Math",{"type":559,"tag":586,"props":968,"children":969},{"style":787},[970],{"type":564,"value":971},".",{"type":559,"tag":586,"props":973,"children":974},{"style":815},[975],{"type":564,"value":976},"max",{"type":559,"tag":586,"props":978,"children":979},{"style":787},[980],{"type":564,"value":971},{"type":559,"tag":586,"props":982,"children":983},{"style":901},[984],{"type":564,"value":985},"apply",{"type":559,"tag":586,"props":987,"children":988},{"style":787},[989],{"type":564,"value":990},"([],",{"type":559,"tag":586,"props":992,"children":993},{"style":815},[994],{"type":564,"value":995}," candies",{"type":559,"tag":586,"props":997,"children":998},{"style":787},[999],{"type":564,"value":1000},");\n",{"type":559,"tag":586,"props":1002,"children":1003},{"class":588,"line":652},[1004,1009,1014,1018],{"type":559,"tag":586,"props":1005,"children":1006},{"style":895},[1007],{"type":564,"value":1008},"  let",{"type":559,"tag":586,"props":1010,"children":1011},{"style":815},[1012],{"type":564,"value":1013}," res",{"type":559,"tag":586,"props":1015,"children":1016},{"style":787},[1017],{"type":564,"value":909},{"type":559,"tag":586,"props":1019,"children":1020},{"style":787},[1021],{"type":564,"value":1022}," [];\n",{"type":559,"tag":586,"props":1024,"children":1026},{"class":588,"line":1025},9,[1027,1032,1036,1041,1046,1050,1056,1061,1065,1070,1074,1078,1084,1088,1092,1097,1101],{"type":559,"tag":586,"props":1028,"children":1029},{"style":793},[1030],{"type":564,"value":1031},"  for",{"type":559,"tag":586,"props":1033,"children":1034},{"style":787},[1035],{"type":564,"value":919},{"type":559,"tag":586,"props":1037,"children":1038},{"style":895},[1039],{"type":564,"value":1040},"let",{"type":559,"tag":586,"props":1042,"children":1043},{"style":815},[1044],{"type":564,"value":1045}," i",{"type":559,"tag":586,"props":1047,"children":1048},{"style":787},[1049],{"type":564,"value":909},{"type":559,"tag":586,"props":1051,"children":1053},{"style":1052},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1054],{"type":564,"value":1055}," 0",{"type":559,"tag":586,"props":1057,"children":1058},{"style":787},[1059],{"type":564,"value":1060},";",{"type":559,"tag":586,"props":1062,"children":1063},{"style":815},[1064],{"type":564,"value":1045},{"type":559,"tag":586,"props":1066,"children":1067},{"style":787},[1068],{"type":564,"value":1069}," \u003C",{"type":559,"tag":586,"props":1071,"children":1072},{"style":815},[1073],{"type":564,"value":995},{"type":559,"tag":586,"props":1075,"children":1076},{"style":787},[1077],{"type":564,"value":971},{"type":559,"tag":586,"props":1079,"children":1081},{"style":1080},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1082],{"type":564,"value":1083},"length",{"type":559,"tag":586,"props":1085,"children":1086},{"style":787},[1087],{"type":564,"value":1060},{"type":559,"tag":586,"props":1089,"children":1090},{"style":815},[1091],{"type":564,"value":1045},{"type":559,"tag":586,"props":1093,"children":1094},{"style":895},[1095],{"type":564,"value":1096},"++",{"type":559,"tag":586,"props":1098,"children":1099},{"style":787},[1100],{"type":564,"value":939},{"type":559,"tag":586,"props":1102,"children":1103},{"style":787},[1104],{"type":564,"value":944},{"type":559,"tag":586,"props":1106,"children":1108},{"class":588,"line":1107},10,[1109,1114,1119,1123,1127,1132,1137,1142,1147,1151],{"type":559,"tag":586,"props":1110,"children":1111},{"style":895},[1112],{"type":564,"value":1113},"    let",{"type":559,"tag":586,"props":1115,"children":1116},{"style":815},[1117],{"type":564,"value":1118}," currentMax",{"type":559,"tag":586,"props":1120,"children":1121},{"style":787},[1122],{"type":564,"value":909},{"type":559,"tag":586,"props":1124,"children":1125},{"style":815},[1126],{"type":564,"value":995},{"type":559,"tag":586,"props":1128,"children":1129},{"style":787},[1130],{"type":564,"value":1131},"[",{"type":559,"tag":586,"props":1133,"children":1134},{"style":815},[1135],{"type":564,"value":1136},"i",{"type":559,"tag":586,"props":1138,"children":1139},{"style":787},[1140],{"type":564,"value":1141},"]",{"type":559,"tag":586,"props":1143,"children":1144},{"style":895},[1145],{"type":564,"value":1146}," +",{"type":559,"tag":586,"props":1148,"children":1149},{"style":815},[1150],{"type":564,"value":934},{"type":559,"tag":586,"props":1152,"children":1153},{"style":787},[1154],{"type":564,"value":1155},";\n",{"type":559,"tag":586,"props":1157,"children":1159},{"class":588,"line":1158},11,[1160,1165,1169,1173,1177,1181,1185,1190,1194],{"type":559,"tag":586,"props":1161,"children":1162},{"style":815},[1163],{"type":564,"value":1164},"    res",{"type":559,"tag":586,"props":1166,"children":1167},{"style":787},[1168],{"type":564,"value":1131},{"type":559,"tag":586,"props":1170,"children":1171},{"style":815},[1172],{"type":564,"value":1136},{"type":559,"tag":586,"props":1174,"children":1175},{"style":787},[1176],{"type":564,"value":1141},{"type":559,"tag":586,"props":1178,"children":1179},{"style":787},[1180],{"type":564,"value":909},{"type":559,"tag":586,"props":1182,"children":1183},{"style":815},[1184],{"type":564,"value":1118},{"type":559,"tag":586,"props":1186,"children":1187},{"style":787},[1188],{"type":564,"value":1189}," >=",{"type":559,"tag":586,"props":1191,"children":1192},{"style":815},[1193],{"type":564,"value":957},{"type":559,"tag":586,"props":1195,"children":1196},{"style":787},[1197],{"type":564,"value":1155},{"type":559,"tag":586,"props":1199,"children":1201},{"class":588,"line":1200},12,[1202],{"type":559,"tag":586,"props":1203,"children":1204},{"style":787},[1205],{"type":564,"value":1206},"  }\n",{"type":559,"tag":586,"props":1208,"children":1210},{"class":588,"line":1209},13,[1211,1216,1220],{"type":559,"tag":586,"props":1212,"children":1213},{"style":793},[1214],{"type":564,"value":1215},"  return",{"type":559,"tag":586,"props":1217,"children":1218},{"style":815},[1219],{"type":564,"value":1013},{"type":559,"tag":586,"props":1221,"children":1222},{"style":787},[1223],{"type":564,"value":1155},{"type":559,"tag":586,"props":1225,"children":1227},{"class":588,"line":1226},14,[1228],{"type":559,"tag":586,"props":1229,"children":1230},{"style":787},[1231],{"type":564,"value":1232},"};\n",{"type":559,"tag":1234,"props":1235,"children":1236},"style",{},[1237],{"type":564,"value":1238},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":625,"depth":625,"links":1240},[1241,1242],{"id":751,"depth":598,"text":751},{"id":756,"depth":598,"text":756},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1249,1251],{"_path":264,"title":263,"description":1250},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":270,"title":269,"description":1252},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1715007499320]