[{"data":1,"prerenderedAt":1134},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":457,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1129},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":255,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":254,"description":461,"url":462,"body":463,"_type":1124,"_id":1125,"_source":1126,"_file":1127,"_extension":1128},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":464,"children":465,"toc":1120},"root",[466,473,478,483,567,572,603,608,631,636,656,662,667,1114],{"type":467,"tag":468,"props":469,"children":470},"element","p",{},[471],{"type":472,"value":461},"text",{"type":467,"tag":468,"props":474,"children":475},{},[476],{"type":472,"value":477},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":467,"tag":468,"props":479,"children":480},{},[481],{"type":472,"value":482},"示例 1：",{"type":467,"tag":484,"props":485,"children":488},"pre",{"className":486,"code":487,"language":472,"meta":460,"style":460},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[489],{"type":467,"tag":490,"props":491,"children":492},"code",{"__ignoreMap":460},[493,504,513,522,531,540,549,558],{"type":467,"tag":494,"props":495,"children":498},"span",{"class":496,"line":497},"line",1,[499],{"type":467,"tag":494,"props":500,"children":501},{},[502],{"type":472,"value":503},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":467,"tag":494,"props":505,"children":507},{"class":496,"line":506},2,[508],{"type":467,"tag":494,"props":509,"children":510},{},[511],{"type":472,"value":512},"输出：[true,true,true,false,true]\n",{"type":467,"tag":494,"props":514,"children":516},{"class":496,"line":515},3,[517],{"type":467,"tag":494,"props":518,"children":519},{},[520],{"type":472,"value":521},"解释：\n",{"type":467,"tag":494,"props":523,"children":525},{"class":496,"line":524},4,[526],{"type":467,"tag":494,"props":527,"children":528},{},[529],{"type":472,"value":530},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":467,"tag":494,"props":532,"children":534},{"class":496,"line":533},5,[535],{"type":467,"tag":494,"props":536,"children":537},{},[538],{"type":472,"value":539},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":467,"tag":494,"props":541,"children":543},{"class":496,"line":542},6,[544],{"type":467,"tag":494,"props":545,"children":546},{},[547],{"type":472,"value":548},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":467,"tag":494,"props":550,"children":552},{"class":496,"line":551},7,[553],{"type":467,"tag":494,"props":554,"children":555},{},[556],{"type":472,"value":557},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":467,"tag":494,"props":559,"children":561},{"class":496,"line":560},8,[562],{"type":467,"tag":494,"props":563,"children":564},{},[565],{"type":472,"value":566},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":467,"tag":468,"props":568,"children":569},{},[570],{"type":472,"value":571},"示例 2：",{"type":467,"tag":484,"props":573,"children":575},{"className":486,"code":574,"language":472,"meta":460,"style":460},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[576],{"type":467,"tag":490,"props":577,"children":578},{"__ignoreMap":460},[579,587,595],{"type":467,"tag":494,"props":580,"children":581},{"class":496,"line":497},[582],{"type":467,"tag":494,"props":583,"children":584},{},[585],{"type":472,"value":586},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":467,"tag":494,"props":588,"children":589},{"class":496,"line":506},[590],{"type":467,"tag":494,"props":591,"children":592},{},[593],{"type":472,"value":594},"输出：[true,false,false,false,false]\n",{"type":467,"tag":494,"props":596,"children":597},{"class":496,"line":515},[598],{"type":467,"tag":494,"props":599,"children":600},{},[601],{"type":472,"value":602},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":467,"tag":468,"props":604,"children":605},{},[606],{"type":472,"value":607},"示例 3：",{"type":467,"tag":484,"props":609,"children":611},{"className":486,"code":610,"language":472,"meta":460,"style":460},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[612],{"type":467,"tag":490,"props":613,"children":614},{"__ignoreMap":460},[615,623],{"type":467,"tag":494,"props":616,"children":617},{"class":496,"line":497},[618],{"type":467,"tag":494,"props":619,"children":620},{},[621],{"type":472,"value":622},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":467,"tag":494,"props":624,"children":625},{"class":496,"line":506},[626],{"type":467,"tag":494,"props":627,"children":628},{},[629],{"type":472,"value":630},"输出：[true,false,true]\n",{"type":467,"tag":468,"props":632,"children":633},{},[634],{"type":472,"value":635},"提示：",{"type":467,"tag":637,"props":638,"children":639},"ul",{},[640,646,651],{"type":467,"tag":641,"props":642,"children":643},"li",{},[644],{"type":472,"value":645},"2 \u003C= candies.length \u003C= 100",{"type":467,"tag":641,"props":647,"children":648},{},[649],{"type":472,"value":650},"1 \u003C= candies[i] \u003C= 100",{"type":467,"tag":641,"props":652,"children":653},{},[654],{"type":472,"value":655},"1 \u003C= extraCandies \u003C= 50",{"type":467,"tag":657,"props":658,"children":660},"h2",{"id":659},"解题思路",[661],{"type":472,"value":659},{"type":467,"tag":657,"props":663,"children":665},{"id":664},"实现",[666],{"type":472,"value":664},{"type":467,"tag":484,"props":668,"children":672},{"className":669,"code":670,"language":671,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[673],{"type":467,"tag":490,"props":674,"children":675},{"__ignoreMap":460},[676,685,711,732,749,757,811,878,904,982,1032,1075,1084,1101],{"type":467,"tag":494,"props":677,"children":678},{"class":496,"line":497},[679],{"type":467,"tag":494,"props":680,"children":682},{"style":681},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[683],{"type":472,"value":684},"/**\n",{"type":467,"tag":494,"props":686,"children":687},{"class":496,"line":506},[688,693,699,705],{"type":467,"tag":494,"props":689,"children":690},{"style":681},[691],{"type":472,"value":692}," * ",{"type":467,"tag":494,"props":694,"children":696},{"style":695},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[697],{"type":472,"value":698},"@param",{"type":467,"tag":494,"props":700,"children":702},{"style":701},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[703],{"type":472,"value":704}," {number[]}",{"type":467,"tag":494,"props":706,"children":708},{"style":707},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[709],{"type":472,"value":710}," candies\n",{"type":467,"tag":494,"props":712,"children":713},{"class":496,"line":515},[714,718,722,727],{"type":467,"tag":494,"props":715,"children":716},{"style":681},[717],{"type":472,"value":692},{"type":467,"tag":494,"props":719,"children":720},{"style":695},[721],{"type":472,"value":698},{"type":467,"tag":494,"props":723,"children":724},{"style":701},[725],{"type":472,"value":726}," {number}",{"type":467,"tag":494,"props":728,"children":729},{"style":707},[730],{"type":472,"value":731}," extraCandies\n",{"type":467,"tag":494,"props":733,"children":734},{"class":496,"line":524},[735,739,744],{"type":467,"tag":494,"props":736,"children":737},{"style":681},[738],{"type":472,"value":692},{"type":467,"tag":494,"props":740,"children":741},{"style":695},[742],{"type":472,"value":743},"@return",{"type":467,"tag":494,"props":745,"children":746},{"style":701},[747],{"type":472,"value":748}," {boolean[]}\n",{"type":467,"tag":494,"props":750,"children":751},{"class":496,"line":533},[752],{"type":467,"tag":494,"props":753,"children":754},{"style":681},[755],{"type":472,"value":756}," */\n",{"type":467,"tag":494,"props":758,"children":759},{"class":496,"line":542},[760,766,772,778,783,789,795,801,806],{"type":467,"tag":494,"props":761,"children":763},{"style":762},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[764],{"type":472,"value":765},"var",{"type":467,"tag":494,"props":767,"children":769},{"style":768},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[770],{"type":472,"value":771}," kidsWithCandies",{"type":467,"tag":494,"props":773,"children":775},{"style":774},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[776],{"type":472,"value":777}," =",{"type":467,"tag":494,"props":779,"children":780},{"style":762},[781],{"type":472,"value":782}," function",{"type":467,"tag":494,"props":784,"children":786},{"style":785},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[787],{"type":472,"value":788}," (",{"type":467,"tag":494,"props":790,"children":792},{"style":791},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[793],{"type":472,"value":794},"candies",{"type":467,"tag":494,"props":796,"children":798},{"style":797},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[799],{"type":472,"value":800},",",{"type":467,"tag":494,"props":802,"children":803},{"style":791},[804],{"type":472,"value":805}," extraCandies",{"type":467,"tag":494,"props":807,"children":808},{"style":785},[809],{"type":472,"value":810},") {\n",{"type":467,"tag":494,"props":812,"children":813},{"class":496,"line":551},[814,819,825,829,834,840,845,849,854,859,863,868,873],{"type":467,"tag":494,"props":815,"children":816},{"style":762},[817],{"type":472,"value":818},"  const",{"type":467,"tag":494,"props":820,"children":822},{"style":821},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[823],{"type":472,"value":824}," max",{"type":467,"tag":494,"props":826,"children":827},{"style":774},[828],{"type":472,"value":777},{"type":467,"tag":494,"props":830,"children":831},{"style":821},[832],{"type":472,"value":833}," Math",{"type":467,"tag":494,"props":835,"children":837},{"style":836},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[838],{"type":472,"value":839},".",{"type":467,"tag":494,"props":841,"children":842},{"style":821},[843],{"type":472,"value":844},"max",{"type":467,"tag":494,"props":846,"children":847},{"style":836},[848],{"type":472,"value":839},{"type":467,"tag":494,"props":850,"children":851},{"style":768},[852],{"type":472,"value":853},"apply",{"type":467,"tag":494,"props":855,"children":856},{"style":785},[857],{"type":472,"value":858},"([]",{"type":467,"tag":494,"props":860,"children":861},{"style":797},[862],{"type":472,"value":800},{"type":467,"tag":494,"props":864,"children":865},{"style":821},[866],{"type":472,"value":867}," candies",{"type":467,"tag":494,"props":869,"children":870},{"style":785},[871],{"type":472,"value":872},")",{"type":467,"tag":494,"props":874,"children":875},{"style":797},[876],{"type":472,"value":877},";\n",{"type":467,"tag":494,"props":879,"children":880},{"class":496,"line":560},[881,886,891,895,900],{"type":467,"tag":494,"props":882,"children":883},{"style":762},[884],{"type":472,"value":885},"  let",{"type":467,"tag":494,"props":887,"children":888},{"style":821},[889],{"type":472,"value":890}," res",{"type":467,"tag":494,"props":892,"children":893},{"style":774},[894],{"type":472,"value":777},{"type":467,"tag":494,"props":896,"children":897},{"style":785},[898],{"type":472,"value":899}," []",{"type":467,"tag":494,"props":901,"children":902},{"style":797},[903],{"type":472,"value":877},{"type":467,"tag":494,"props":905,"children":907},{"class":496,"line":906},9,[908,914,918,923,928,932,938,943,947,952,956,960,965,969,973,978],{"type":467,"tag":494,"props":909,"children":911},{"style":910},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[912],{"type":472,"value":913},"  for",{"type":467,"tag":494,"props":915,"children":916},{"style":785},[917],{"type":472,"value":788},{"type":467,"tag":494,"props":919,"children":920},{"style":762},[921],{"type":472,"value":922},"let",{"type":467,"tag":494,"props":924,"children":925},{"style":821},[926],{"type":472,"value":927}," i",{"type":467,"tag":494,"props":929,"children":930},{"style":774},[931],{"type":472,"value":777},{"type":467,"tag":494,"props":933,"children":935},{"style":934},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[936],{"type":472,"value":937}," 0",{"type":467,"tag":494,"props":939,"children":940},{"style":797},[941],{"type":472,"value":942},";",{"type":467,"tag":494,"props":944,"children":945},{"style":821},[946],{"type":472,"value":927},{"type":467,"tag":494,"props":948,"children":949},{"style":774},[950],{"type":472,"value":951}," \u003C",{"type":467,"tag":494,"props":953,"children":954},{"style":821},[955],{"type":472,"value":867},{"type":467,"tag":494,"props":957,"children":958},{"style":836},[959],{"type":472,"value":839},{"type":467,"tag":494,"props":961,"children":962},{"style":785},[963],{"type":472,"value":964},"length",{"type":467,"tag":494,"props":966,"children":967},{"style":797},[968],{"type":472,"value":942},{"type":467,"tag":494,"props":970,"children":971},{"style":821},[972],{"type":472,"value":927},{"type":467,"tag":494,"props":974,"children":975},{"style":774},[976],{"type":472,"value":977},"++",{"type":467,"tag":494,"props":979,"children":980},{"style":785},[981],{"type":472,"value":810},{"type":467,"tag":494,"props":983,"children":985},{"class":496,"line":984},10,[986,991,996,1000,1004,1009,1014,1019,1024,1028],{"type":467,"tag":494,"props":987,"children":988},{"style":762},[989],{"type":472,"value":990},"    let",{"type":467,"tag":494,"props":992,"children":993},{"style":821},[994],{"type":472,"value":995}," currentMax",{"type":467,"tag":494,"props":997,"children":998},{"style":774},[999],{"type":472,"value":777},{"type":467,"tag":494,"props":1001,"children":1002},{"style":821},[1003],{"type":472,"value":867},{"type":467,"tag":494,"props":1005,"children":1006},{"style":785},[1007],{"type":472,"value":1008},"[",{"type":467,"tag":494,"props":1010,"children":1011},{"style":821},[1012],{"type":472,"value":1013},"i",{"type":467,"tag":494,"props":1015,"children":1016},{"style":785},[1017],{"type":472,"value":1018},"] ",{"type":467,"tag":494,"props":1020,"children":1021},{"style":774},[1022],{"type":472,"value":1023},"+",{"type":467,"tag":494,"props":1025,"children":1026},{"style":821},[1027],{"type":472,"value":805},{"type":467,"tag":494,"props":1029,"children":1030},{"style":797},[1031],{"type":472,"value":877},{"type":467,"tag":494,"props":1033,"children":1035},{"class":496,"line":1034},11,[1036,1041,1045,1049,1053,1058,1062,1067,1071],{"type":467,"tag":494,"props":1037,"children":1038},{"style":821},[1039],{"type":472,"value":1040},"    res",{"type":467,"tag":494,"props":1042,"children":1043},{"style":785},[1044],{"type":472,"value":1008},{"type":467,"tag":494,"props":1046,"children":1047},{"style":821},[1048],{"type":472,"value":1013},{"type":467,"tag":494,"props":1050,"children":1051},{"style":785},[1052],{"type":472,"value":1018},{"type":467,"tag":494,"props":1054,"children":1055},{"style":774},[1056],{"type":472,"value":1057},"=",{"type":467,"tag":494,"props":1059,"children":1060},{"style":821},[1061],{"type":472,"value":995},{"type":467,"tag":494,"props":1063,"children":1064},{"style":774},[1065],{"type":472,"value":1066}," >=",{"type":467,"tag":494,"props":1068,"children":1069},{"style":821},[1070],{"type":472,"value":824},{"type":467,"tag":494,"props":1072,"children":1073},{"style":797},[1074],{"type":472,"value":877},{"type":467,"tag":494,"props":1076,"children":1078},{"class":496,"line":1077},12,[1079],{"type":467,"tag":494,"props":1080,"children":1081},{"style":785},[1082],{"type":472,"value":1083},"  }\n",{"type":467,"tag":494,"props":1085,"children":1087},{"class":496,"line":1086},13,[1088,1093,1097],{"type":467,"tag":494,"props":1089,"children":1090},{"style":910},[1091],{"type":472,"value":1092},"  return",{"type":467,"tag":494,"props":1094,"children":1095},{"style":821},[1096],{"type":472,"value":890},{"type":467,"tag":494,"props":1098,"children":1099},{"style":797},[1100],{"type":472,"value":877},{"type":467,"tag":494,"props":1102,"children":1104},{"class":496,"line":1103},14,[1105,1110],{"type":467,"tag":494,"props":1106,"children":1107},{"style":785},[1108],{"type":472,"value":1109},"}",{"type":467,"tag":494,"props":1111,"children":1112},{"style":797},[1113],{"type":472,"value":877},{"type":467,"tag":1115,"props":1116,"children":1117},"style",{},[1118],{"type":472,"value":1119},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":533,"depth":533,"links":1121},[1122,1123],{"id":659,"depth":506,"text":659},{"id":664,"depth":506,"text":664},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1130,1132],{"_path":252,"title":251,"description":1131},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":258,"title":257,"description":1133},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1713624720435]