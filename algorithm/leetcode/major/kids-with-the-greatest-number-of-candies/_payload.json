[{"data":1,"prerenderedAt":1137},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":460,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1132},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":258,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":257,"description":464,"url":465,"body":466,"_type":1127,"_id":1128,"_source":1129,"_file":1130,"_extension":1131},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":467,"children":468,"toc":1123},"root",[469,476,481,486,570,575,606,611,634,639,659,665,670,1117],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"示例 1：",{"type":470,"tag":487,"props":488,"children":491},"pre",{"className":489,"code":490,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[492],{"type":470,"tag":493,"props":494,"children":495},"code",{"__ignoreMap":463},[496,507,516,525,534,543,552,561],{"type":470,"tag":497,"props":498,"children":501},"span",{"class":499,"line":500},"line",1,[502],{"type":470,"tag":497,"props":503,"children":504},{},[505],{"type":475,"value":506},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":470,"tag":497,"props":508,"children":510},{"class":499,"line":509},2,[511],{"type":470,"tag":497,"props":512,"children":513},{},[514],{"type":475,"value":515},"输出：[true,true,true,false,true]\n",{"type":470,"tag":497,"props":517,"children":519},{"class":499,"line":518},3,[520],{"type":470,"tag":497,"props":521,"children":522},{},[523],{"type":475,"value":524},"解释：\n",{"type":470,"tag":497,"props":526,"children":528},{"class":499,"line":527},4,[529],{"type":470,"tag":497,"props":530,"children":531},{},[532],{"type":475,"value":533},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":470,"tag":497,"props":535,"children":537},{"class":499,"line":536},5,[538],{"type":470,"tag":497,"props":539,"children":540},{},[541],{"type":475,"value":542},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":470,"tag":497,"props":544,"children":546},{"class":499,"line":545},6,[547],{"type":470,"tag":497,"props":548,"children":549},{},[550],{"type":475,"value":551},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":470,"tag":497,"props":553,"children":555},{"class":499,"line":554},7,[556],{"type":470,"tag":497,"props":557,"children":558},{},[559],{"type":475,"value":560},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":470,"tag":497,"props":562,"children":564},{"class":499,"line":563},8,[565],{"type":470,"tag":497,"props":566,"children":567},{},[568],{"type":475,"value":569},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":470,"tag":471,"props":571,"children":572},{},[573],{"type":475,"value":574},"示例 2：",{"type":470,"tag":487,"props":576,"children":578},{"className":489,"code":577,"language":475,"meta":463,"style":463},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[579],{"type":470,"tag":493,"props":580,"children":581},{"__ignoreMap":463},[582,590,598],{"type":470,"tag":497,"props":583,"children":584},{"class":499,"line":500},[585],{"type":470,"tag":497,"props":586,"children":587},{},[588],{"type":475,"value":589},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":470,"tag":497,"props":591,"children":592},{"class":499,"line":509},[593],{"type":470,"tag":497,"props":594,"children":595},{},[596],{"type":475,"value":597},"输出：[true,false,false,false,false]\n",{"type":470,"tag":497,"props":599,"children":600},{"class":499,"line":518},[601],{"type":470,"tag":497,"props":602,"children":603},{},[604],{"type":475,"value":605},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":470,"tag":471,"props":607,"children":608},{},[609],{"type":475,"value":610},"示例 3：",{"type":470,"tag":487,"props":612,"children":614},{"className":489,"code":613,"language":475,"meta":463,"style":463},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[615],{"type":470,"tag":493,"props":616,"children":617},{"__ignoreMap":463},[618,626],{"type":470,"tag":497,"props":619,"children":620},{"class":499,"line":500},[621],{"type":470,"tag":497,"props":622,"children":623},{},[624],{"type":475,"value":625},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":470,"tag":497,"props":627,"children":628},{"class":499,"line":509},[629],{"type":470,"tag":497,"props":630,"children":631},{},[632],{"type":475,"value":633},"输出：[true,false,true]\n",{"type":470,"tag":471,"props":635,"children":636},{},[637],{"type":475,"value":638},"提示：",{"type":470,"tag":640,"props":641,"children":642},"ul",{},[643,649,654],{"type":470,"tag":644,"props":645,"children":646},"li",{},[647],{"type":475,"value":648},"2 \u003C= candies.length \u003C= 100",{"type":470,"tag":644,"props":650,"children":651},{},[652],{"type":475,"value":653},"1 \u003C= candies[i] \u003C= 100",{"type":470,"tag":644,"props":655,"children":656},{},[657],{"type":475,"value":658},"1 \u003C= extraCandies \u003C= 50",{"type":470,"tag":660,"props":661,"children":663},"h2",{"id":662},"解题思路",[664],{"type":475,"value":662},{"type":470,"tag":660,"props":666,"children":668},{"id":667},"实现",[669],{"type":475,"value":667},{"type":470,"tag":487,"props":671,"children":675},{"className":672,"code":673,"language":674,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[676],{"type":470,"tag":493,"props":677,"children":678},{"__ignoreMap":463},[679,688,714,735,752,760,814,881,907,985,1035,1078,1087,1104],{"type":470,"tag":497,"props":680,"children":681},{"class":499,"line":500},[682],{"type":470,"tag":497,"props":683,"children":685},{"style":684},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[686],{"type":475,"value":687},"/**\n",{"type":470,"tag":497,"props":689,"children":690},{"class":499,"line":509},[691,696,702,708],{"type":470,"tag":497,"props":692,"children":693},{"style":684},[694],{"type":475,"value":695}," * ",{"type":470,"tag":497,"props":697,"children":699},{"style":698},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[700],{"type":475,"value":701},"@param",{"type":470,"tag":497,"props":703,"children":705},{"style":704},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[706],{"type":475,"value":707}," {number[]}",{"type":470,"tag":497,"props":709,"children":711},{"style":710},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[712],{"type":475,"value":713}," candies\n",{"type":470,"tag":497,"props":715,"children":716},{"class":499,"line":518},[717,721,725,730],{"type":470,"tag":497,"props":718,"children":719},{"style":684},[720],{"type":475,"value":695},{"type":470,"tag":497,"props":722,"children":723},{"style":698},[724],{"type":475,"value":701},{"type":470,"tag":497,"props":726,"children":727},{"style":704},[728],{"type":475,"value":729}," {number}",{"type":470,"tag":497,"props":731,"children":732},{"style":710},[733],{"type":475,"value":734}," extraCandies\n",{"type":470,"tag":497,"props":736,"children":737},{"class":499,"line":527},[738,742,747],{"type":470,"tag":497,"props":739,"children":740},{"style":684},[741],{"type":475,"value":695},{"type":470,"tag":497,"props":743,"children":744},{"style":698},[745],{"type":475,"value":746},"@return",{"type":470,"tag":497,"props":748,"children":749},{"style":704},[750],{"type":475,"value":751}," {boolean[]}\n",{"type":470,"tag":497,"props":753,"children":754},{"class":499,"line":536},[755],{"type":470,"tag":497,"props":756,"children":757},{"style":684},[758],{"type":475,"value":759}," */\n",{"type":470,"tag":497,"props":761,"children":762},{"class":499,"line":545},[763,769,775,781,786,792,798,804,809],{"type":470,"tag":497,"props":764,"children":766},{"style":765},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[767],{"type":475,"value":768},"var",{"type":470,"tag":497,"props":770,"children":772},{"style":771},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[773],{"type":475,"value":774}," kidsWithCandies",{"type":470,"tag":497,"props":776,"children":778},{"style":777},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[779],{"type":475,"value":780}," =",{"type":470,"tag":497,"props":782,"children":783},{"style":765},[784],{"type":475,"value":785}," function",{"type":470,"tag":497,"props":787,"children":789},{"style":788},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[790],{"type":475,"value":791}," (",{"type":470,"tag":497,"props":793,"children":795},{"style":794},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[796],{"type":475,"value":797},"candies",{"type":470,"tag":497,"props":799,"children":801},{"style":800},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[802],{"type":475,"value":803},",",{"type":470,"tag":497,"props":805,"children":806},{"style":794},[807],{"type":475,"value":808}," extraCandies",{"type":470,"tag":497,"props":810,"children":811},{"style":788},[812],{"type":475,"value":813},") {\n",{"type":470,"tag":497,"props":815,"children":816},{"class":499,"line":554},[817,822,828,832,837,843,848,852,857,862,866,871,876],{"type":470,"tag":497,"props":818,"children":819},{"style":765},[820],{"type":475,"value":821},"  const",{"type":470,"tag":497,"props":823,"children":825},{"style":824},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[826],{"type":475,"value":827}," max",{"type":470,"tag":497,"props":829,"children":830},{"style":777},[831],{"type":475,"value":780},{"type":470,"tag":497,"props":833,"children":834},{"style":824},[835],{"type":475,"value":836}," Math",{"type":470,"tag":497,"props":838,"children":840},{"style":839},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[841],{"type":475,"value":842},".",{"type":470,"tag":497,"props":844,"children":845},{"style":824},[846],{"type":475,"value":847},"max",{"type":470,"tag":497,"props":849,"children":850},{"style":839},[851],{"type":475,"value":842},{"type":470,"tag":497,"props":853,"children":854},{"style":771},[855],{"type":475,"value":856},"apply",{"type":470,"tag":497,"props":858,"children":859},{"style":788},[860],{"type":475,"value":861},"([]",{"type":470,"tag":497,"props":863,"children":864},{"style":800},[865],{"type":475,"value":803},{"type":470,"tag":497,"props":867,"children":868},{"style":824},[869],{"type":475,"value":870}," candies",{"type":470,"tag":497,"props":872,"children":873},{"style":788},[874],{"type":475,"value":875},")",{"type":470,"tag":497,"props":877,"children":878},{"style":800},[879],{"type":475,"value":880},";\n",{"type":470,"tag":497,"props":882,"children":883},{"class":499,"line":563},[884,889,894,898,903],{"type":470,"tag":497,"props":885,"children":886},{"style":765},[887],{"type":475,"value":888},"  let",{"type":470,"tag":497,"props":890,"children":891},{"style":824},[892],{"type":475,"value":893}," res",{"type":470,"tag":497,"props":895,"children":896},{"style":777},[897],{"type":475,"value":780},{"type":470,"tag":497,"props":899,"children":900},{"style":788},[901],{"type":475,"value":902}," []",{"type":470,"tag":497,"props":904,"children":905},{"style":800},[906],{"type":475,"value":880},{"type":470,"tag":497,"props":908,"children":910},{"class":499,"line":909},9,[911,917,921,926,931,935,941,946,950,955,959,963,968,972,976,981],{"type":470,"tag":497,"props":912,"children":914},{"style":913},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[915],{"type":475,"value":916},"  for",{"type":470,"tag":497,"props":918,"children":919},{"style":788},[920],{"type":475,"value":791},{"type":470,"tag":497,"props":922,"children":923},{"style":765},[924],{"type":475,"value":925},"let",{"type":470,"tag":497,"props":927,"children":928},{"style":824},[929],{"type":475,"value":930}," i",{"type":470,"tag":497,"props":932,"children":933},{"style":777},[934],{"type":475,"value":780},{"type":470,"tag":497,"props":936,"children":938},{"style":937},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[939],{"type":475,"value":940}," 0",{"type":470,"tag":497,"props":942,"children":943},{"style":800},[944],{"type":475,"value":945},";",{"type":470,"tag":497,"props":947,"children":948},{"style":824},[949],{"type":475,"value":930},{"type":470,"tag":497,"props":951,"children":952},{"style":777},[953],{"type":475,"value":954}," \u003C",{"type":470,"tag":497,"props":956,"children":957},{"style":824},[958],{"type":475,"value":870},{"type":470,"tag":497,"props":960,"children":961},{"style":839},[962],{"type":475,"value":842},{"type":470,"tag":497,"props":964,"children":965},{"style":788},[966],{"type":475,"value":967},"length",{"type":470,"tag":497,"props":969,"children":970},{"style":800},[971],{"type":475,"value":945},{"type":470,"tag":497,"props":973,"children":974},{"style":824},[975],{"type":475,"value":930},{"type":470,"tag":497,"props":977,"children":978},{"style":777},[979],{"type":475,"value":980},"++",{"type":470,"tag":497,"props":982,"children":983},{"style":788},[984],{"type":475,"value":813},{"type":470,"tag":497,"props":986,"children":988},{"class":499,"line":987},10,[989,994,999,1003,1007,1012,1017,1022,1027,1031],{"type":470,"tag":497,"props":990,"children":991},{"style":765},[992],{"type":475,"value":993},"    let",{"type":470,"tag":497,"props":995,"children":996},{"style":824},[997],{"type":475,"value":998}," currentMax",{"type":470,"tag":497,"props":1000,"children":1001},{"style":777},[1002],{"type":475,"value":780},{"type":470,"tag":497,"props":1004,"children":1005},{"style":824},[1006],{"type":475,"value":870},{"type":470,"tag":497,"props":1008,"children":1009},{"style":788},[1010],{"type":475,"value":1011},"[",{"type":470,"tag":497,"props":1013,"children":1014},{"style":824},[1015],{"type":475,"value":1016},"i",{"type":470,"tag":497,"props":1018,"children":1019},{"style":788},[1020],{"type":475,"value":1021},"] ",{"type":470,"tag":497,"props":1023,"children":1024},{"style":777},[1025],{"type":475,"value":1026},"+",{"type":470,"tag":497,"props":1028,"children":1029},{"style":824},[1030],{"type":475,"value":808},{"type":470,"tag":497,"props":1032,"children":1033},{"style":800},[1034],{"type":475,"value":880},{"type":470,"tag":497,"props":1036,"children":1038},{"class":499,"line":1037},11,[1039,1044,1048,1052,1056,1061,1065,1070,1074],{"type":470,"tag":497,"props":1040,"children":1041},{"style":824},[1042],{"type":475,"value":1043},"    res",{"type":470,"tag":497,"props":1045,"children":1046},{"style":788},[1047],{"type":475,"value":1011},{"type":470,"tag":497,"props":1049,"children":1050},{"style":824},[1051],{"type":475,"value":1016},{"type":470,"tag":497,"props":1053,"children":1054},{"style":788},[1055],{"type":475,"value":1021},{"type":470,"tag":497,"props":1057,"children":1058},{"style":777},[1059],{"type":475,"value":1060},"=",{"type":470,"tag":497,"props":1062,"children":1063},{"style":824},[1064],{"type":475,"value":998},{"type":470,"tag":497,"props":1066,"children":1067},{"style":777},[1068],{"type":475,"value":1069}," >=",{"type":470,"tag":497,"props":1071,"children":1072},{"style":824},[1073],{"type":475,"value":827},{"type":470,"tag":497,"props":1075,"children":1076},{"style":800},[1077],{"type":475,"value":880},{"type":470,"tag":497,"props":1079,"children":1081},{"class":499,"line":1080},12,[1082],{"type":470,"tag":497,"props":1083,"children":1084},{"style":788},[1085],{"type":475,"value":1086},"  }\n",{"type":470,"tag":497,"props":1088,"children":1090},{"class":499,"line":1089},13,[1091,1096,1100],{"type":470,"tag":497,"props":1092,"children":1093},{"style":913},[1094],{"type":475,"value":1095},"  return",{"type":470,"tag":497,"props":1097,"children":1098},{"style":824},[1099],{"type":475,"value":893},{"type":470,"tag":497,"props":1101,"children":1102},{"style":800},[1103],{"type":475,"value":880},{"type":470,"tag":497,"props":1105,"children":1107},{"class":499,"line":1106},14,[1108,1113],{"type":470,"tag":497,"props":1109,"children":1110},{"style":788},[1111],{"type":475,"value":1112},"}",{"type":470,"tag":497,"props":1114,"children":1115},{"style":800},[1116],{"type":475,"value":880},{"type":470,"tag":1118,"props":1119,"children":1120},"style",{},[1121],{"type":475,"value":1122},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":536,"depth":536,"links":1124},[1125,1126],{"id":662,"depth":509,"text":662},{"id":667,"depth":509,"text":667},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1133,1135],{"_path":255,"title":254,"description":1134},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":261,"title":260,"description":1136},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1713626405312]