[{"data":1,"prerenderedAt":1256},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":552,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1251},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":267,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":266,"description":556,"url":557,"body":558,"_type":1246,"_id":1247,"_source":1248,"_file":1249,"_extension":1250},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":559,"children":560,"toc":1242},"root",[561,568,573,578,662,667,698,703,726,731,751,757,762,1236],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"示例 1：",{"type":562,"tag":579,"props":580,"children":583},"pre",{"className":581,"code":582,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[584],{"type":562,"tag":585,"props":586,"children":587},"code",{"__ignoreMap":555},[588,599,608,617,626,635,644,653],{"type":562,"tag":589,"props":590,"children":593},"span",{"class":591,"line":592},"line",1,[594],{"type":562,"tag":589,"props":595,"children":596},{},[597],{"type":567,"value":598},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":562,"tag":589,"props":600,"children":602},{"class":591,"line":601},2,[603],{"type":562,"tag":589,"props":604,"children":605},{},[606],{"type":567,"value":607},"输出：[true,true,true,false,true]\n",{"type":562,"tag":589,"props":609,"children":611},{"class":591,"line":610},3,[612],{"type":562,"tag":589,"props":613,"children":614},{},[615],{"type":567,"value":616},"解释：\n",{"type":562,"tag":589,"props":618,"children":620},{"class":591,"line":619},4,[621],{"type":562,"tag":589,"props":622,"children":623},{},[624],{"type":567,"value":625},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":562,"tag":589,"props":627,"children":629},{"class":591,"line":628},5,[630],{"type":562,"tag":589,"props":631,"children":632},{},[633],{"type":567,"value":634},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":562,"tag":589,"props":636,"children":638},{"class":591,"line":637},6,[639],{"type":562,"tag":589,"props":640,"children":641},{},[642],{"type":567,"value":643},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":562,"tag":589,"props":645,"children":647},{"class":591,"line":646},7,[648],{"type":562,"tag":589,"props":649,"children":650},{},[651],{"type":567,"value":652},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":562,"tag":589,"props":654,"children":656},{"class":591,"line":655},8,[657],{"type":562,"tag":589,"props":658,"children":659},{},[660],{"type":567,"value":661},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":562,"tag":563,"props":663,"children":664},{},[665],{"type":567,"value":666},"示例 2：",{"type":562,"tag":579,"props":668,"children":670},{"className":581,"code":669,"language":567,"meta":555,"style":555},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[671],{"type":562,"tag":585,"props":672,"children":673},{"__ignoreMap":555},[674,682,690],{"type":562,"tag":589,"props":675,"children":676},{"class":591,"line":592},[677],{"type":562,"tag":589,"props":678,"children":679},{},[680],{"type":567,"value":681},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":562,"tag":589,"props":683,"children":684},{"class":591,"line":601},[685],{"type":562,"tag":589,"props":686,"children":687},{},[688],{"type":567,"value":689},"输出：[true,false,false,false,false]\n",{"type":562,"tag":589,"props":691,"children":692},{"class":591,"line":610},[693],{"type":562,"tag":589,"props":694,"children":695},{},[696],{"type":567,"value":697},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":562,"tag":563,"props":699,"children":700},{},[701],{"type":567,"value":702},"示例 3：",{"type":562,"tag":579,"props":704,"children":706},{"className":581,"code":705,"language":567,"meta":555,"style":555},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[707],{"type":562,"tag":585,"props":708,"children":709},{"__ignoreMap":555},[710,718],{"type":562,"tag":589,"props":711,"children":712},{"class":591,"line":592},[713],{"type":562,"tag":589,"props":714,"children":715},{},[716],{"type":567,"value":717},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":562,"tag":589,"props":719,"children":720},{"class":591,"line":601},[721],{"type":562,"tag":589,"props":722,"children":723},{},[724],{"type":567,"value":725},"输出：[true,false,true]\n",{"type":562,"tag":563,"props":727,"children":728},{},[729],{"type":567,"value":730},"提示：",{"type":562,"tag":732,"props":733,"children":734},"ul",{},[735,741,746],{"type":562,"tag":736,"props":737,"children":738},"li",{},[739],{"type":567,"value":740},"2 \u003C= candies.length \u003C= 100",{"type":562,"tag":736,"props":742,"children":743},{},[744],{"type":567,"value":745},"1 \u003C= candies[i] \u003C= 100",{"type":562,"tag":736,"props":747,"children":748},{},[749],{"type":567,"value":750},"1 \u003C= extraCandies \u003C= 50",{"type":562,"tag":752,"props":753,"children":755},"h2",{"id":754},"解题思路",[756],{"type":567,"value":754},{"type":562,"tag":752,"props":758,"children":760},{"id":759},"实现",[761],{"type":567,"value":759},{"type":562,"tag":579,"props":763,"children":767},{"className":764,"code":765,"language":766,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[768],{"type":562,"tag":585,"props":769,"children":770},{"__ignoreMap":555},[771,780,822,855,885,893,948,1004,1026,1108,1159,1201,1210,1227],{"type":562,"tag":589,"props":772,"children":773},{"class":591,"line":592},[774],{"type":562,"tag":589,"props":775,"children":777},{"style":776},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[778],{"type":567,"value":779},"/**\n",{"type":562,"tag":589,"props":781,"children":782},{"class":591,"line":601},[783,788,794,800,805,811,816],{"type":562,"tag":589,"props":784,"children":785},{"style":776},[786],{"type":567,"value":787}," * ",{"type":562,"tag":589,"props":789,"children":791},{"style":790},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[792],{"type":567,"value":793},"@",{"type":562,"tag":589,"props":795,"children":797},{"style":796},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[798],{"type":567,"value":799},"param",{"type":562,"tag":589,"props":801,"children":802},{"style":790},[803],{"type":567,"value":804}," {",{"type":562,"tag":589,"props":806,"children":808},{"style":807},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[809],{"type":567,"value":810},"number[]",{"type":562,"tag":589,"props":812,"children":813},{"style":790},[814],{"type":567,"value":815},"}",{"type":562,"tag":589,"props":817,"children":819},{"style":818},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[820],{"type":567,"value":821}," candies\n",{"type":562,"tag":589,"props":823,"children":824},{"class":591,"line":610},[825,829,833,837,841,846,850],{"type":562,"tag":589,"props":826,"children":827},{"style":776},[828],{"type":567,"value":787},{"type":562,"tag":589,"props":830,"children":831},{"style":790},[832],{"type":567,"value":793},{"type":562,"tag":589,"props":834,"children":835},{"style":796},[836],{"type":567,"value":799},{"type":562,"tag":589,"props":838,"children":839},{"style":790},[840],{"type":567,"value":804},{"type":562,"tag":589,"props":842,"children":843},{"style":807},[844],{"type":567,"value":845},"number",{"type":562,"tag":589,"props":847,"children":848},{"style":790},[849],{"type":567,"value":815},{"type":562,"tag":589,"props":851,"children":852},{"style":818},[853],{"type":567,"value":854}," extraCandies\n",{"type":562,"tag":589,"props":856,"children":857},{"class":591,"line":619},[858,862,866,871,875,880],{"type":562,"tag":589,"props":859,"children":860},{"style":776},[861],{"type":567,"value":787},{"type":562,"tag":589,"props":863,"children":864},{"style":790},[865],{"type":567,"value":793},{"type":562,"tag":589,"props":867,"children":868},{"style":796},[869],{"type":567,"value":870},"return",{"type":562,"tag":589,"props":872,"children":873},{"style":790},[874],{"type":567,"value":804},{"type":562,"tag":589,"props":876,"children":877},{"style":807},[878],{"type":567,"value":879},"boolean[]",{"type":562,"tag":589,"props":881,"children":882},{"style":790},[883],{"type":567,"value":884},"}\n",{"type":562,"tag":589,"props":886,"children":887},{"class":591,"line":628},[888],{"type":562,"tag":589,"props":889,"children":890},{"style":776},[891],{"type":567,"value":892}," */\n",{"type":562,"tag":589,"props":894,"children":895},{"class":591,"line":637},[896,902,908,913,918,923,928,933,938,943],{"type":562,"tag":589,"props":897,"children":899},{"style":898},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[900],{"type":567,"value":901},"var",{"type":562,"tag":589,"props":903,"children":905},{"style":904},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[906],{"type":567,"value":907}," kidsWithCandies",{"type":562,"tag":589,"props":909,"children":910},{"style":790},[911],{"type":567,"value":912}," =",{"type":562,"tag":589,"props":914,"children":915},{"style":898},[916],{"type":567,"value":917}," function",{"type":562,"tag":589,"props":919,"children":920},{"style":790},[921],{"type":567,"value":922}," (",{"type":562,"tag":589,"props":924,"children":925},{"style":818},[926],{"type":567,"value":927},"candies",{"type":562,"tag":589,"props":929,"children":930},{"style":790},[931],{"type":567,"value":932},",",{"type":562,"tag":589,"props":934,"children":935},{"style":818},[936],{"type":567,"value":937}," extraCandies",{"type":562,"tag":589,"props":939,"children":940},{"style":790},[941],{"type":567,"value":942},")",{"type":562,"tag":589,"props":944,"children":945},{"style":790},[946],{"type":567,"value":947}," {\n",{"type":562,"tag":589,"props":949,"children":950},{"class":591,"line":646},[951,956,961,965,970,975,980,984,989,994,999],{"type":562,"tag":589,"props":952,"children":953},{"style":898},[954],{"type":567,"value":955},"  const",{"type":562,"tag":589,"props":957,"children":958},{"style":818},[959],{"type":567,"value":960}," max",{"type":562,"tag":589,"props":962,"children":963},{"style":790},[964],{"type":567,"value":912},{"type":562,"tag":589,"props":966,"children":967},{"style":818},[968],{"type":567,"value":969}," Math",{"type":562,"tag":589,"props":971,"children":972},{"style":790},[973],{"type":567,"value":974},".",{"type":562,"tag":589,"props":976,"children":977},{"style":818},[978],{"type":567,"value":979},"max",{"type":562,"tag":589,"props":981,"children":982},{"style":790},[983],{"type":567,"value":974},{"type":562,"tag":589,"props":985,"children":986},{"style":904},[987],{"type":567,"value":988},"apply",{"type":562,"tag":589,"props":990,"children":991},{"style":790},[992],{"type":567,"value":993},"([],",{"type":562,"tag":589,"props":995,"children":996},{"style":818},[997],{"type":567,"value":998}," candies",{"type":562,"tag":589,"props":1000,"children":1001},{"style":790},[1002],{"type":567,"value":1003},");\n",{"type":562,"tag":589,"props":1005,"children":1006},{"class":591,"line":655},[1007,1012,1017,1021],{"type":562,"tag":589,"props":1008,"children":1009},{"style":898},[1010],{"type":567,"value":1011},"  let",{"type":562,"tag":589,"props":1013,"children":1014},{"style":818},[1015],{"type":567,"value":1016}," res",{"type":562,"tag":589,"props":1018,"children":1019},{"style":790},[1020],{"type":567,"value":912},{"type":562,"tag":589,"props":1022,"children":1023},{"style":790},[1024],{"type":567,"value":1025}," [];\n",{"type":562,"tag":589,"props":1027,"children":1029},{"class":591,"line":1028},9,[1030,1035,1039,1044,1049,1053,1059,1064,1068,1073,1077,1081,1087,1091,1095,1100,1104],{"type":562,"tag":589,"props":1031,"children":1032},{"style":796},[1033],{"type":567,"value":1034},"  for",{"type":562,"tag":589,"props":1036,"children":1037},{"style":790},[1038],{"type":567,"value":922},{"type":562,"tag":589,"props":1040,"children":1041},{"style":898},[1042],{"type":567,"value":1043},"let",{"type":562,"tag":589,"props":1045,"children":1046},{"style":818},[1047],{"type":567,"value":1048}," i",{"type":562,"tag":589,"props":1050,"children":1051},{"style":790},[1052],{"type":567,"value":912},{"type":562,"tag":589,"props":1054,"children":1056},{"style":1055},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1057],{"type":567,"value":1058}," 0",{"type":562,"tag":589,"props":1060,"children":1061},{"style":790},[1062],{"type":567,"value":1063},";",{"type":562,"tag":589,"props":1065,"children":1066},{"style":818},[1067],{"type":567,"value":1048},{"type":562,"tag":589,"props":1069,"children":1070},{"style":790},[1071],{"type":567,"value":1072}," \u003C",{"type":562,"tag":589,"props":1074,"children":1075},{"style":818},[1076],{"type":567,"value":998},{"type":562,"tag":589,"props":1078,"children":1079},{"style":790},[1080],{"type":567,"value":974},{"type":562,"tag":589,"props":1082,"children":1084},{"style":1083},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1085],{"type":567,"value":1086},"length",{"type":562,"tag":589,"props":1088,"children":1089},{"style":790},[1090],{"type":567,"value":1063},{"type":562,"tag":589,"props":1092,"children":1093},{"style":818},[1094],{"type":567,"value":1048},{"type":562,"tag":589,"props":1096,"children":1097},{"style":898},[1098],{"type":567,"value":1099},"++",{"type":562,"tag":589,"props":1101,"children":1102},{"style":790},[1103],{"type":567,"value":942},{"type":562,"tag":589,"props":1105,"children":1106},{"style":790},[1107],{"type":567,"value":947},{"type":562,"tag":589,"props":1109,"children":1111},{"class":591,"line":1110},10,[1112,1117,1122,1126,1130,1135,1140,1145,1150,1154],{"type":562,"tag":589,"props":1113,"children":1114},{"style":898},[1115],{"type":567,"value":1116},"    let",{"type":562,"tag":589,"props":1118,"children":1119},{"style":818},[1120],{"type":567,"value":1121}," currentMax",{"type":562,"tag":589,"props":1123,"children":1124},{"style":790},[1125],{"type":567,"value":912},{"type":562,"tag":589,"props":1127,"children":1128},{"style":818},[1129],{"type":567,"value":998},{"type":562,"tag":589,"props":1131,"children":1132},{"style":790},[1133],{"type":567,"value":1134},"[",{"type":562,"tag":589,"props":1136,"children":1137},{"style":818},[1138],{"type":567,"value":1139},"i",{"type":562,"tag":589,"props":1141,"children":1142},{"style":790},[1143],{"type":567,"value":1144},"]",{"type":562,"tag":589,"props":1146,"children":1147},{"style":898},[1148],{"type":567,"value":1149}," +",{"type":562,"tag":589,"props":1151,"children":1152},{"style":818},[1153],{"type":567,"value":937},{"type":562,"tag":589,"props":1155,"children":1156},{"style":790},[1157],{"type":567,"value":1158},";\n",{"type":562,"tag":589,"props":1160,"children":1162},{"class":591,"line":1161},11,[1163,1168,1172,1176,1180,1184,1188,1193,1197],{"type":562,"tag":589,"props":1164,"children":1165},{"style":818},[1166],{"type":567,"value":1167},"    res",{"type":562,"tag":589,"props":1169,"children":1170},{"style":790},[1171],{"type":567,"value":1134},{"type":562,"tag":589,"props":1173,"children":1174},{"style":818},[1175],{"type":567,"value":1139},{"type":562,"tag":589,"props":1177,"children":1178},{"style":790},[1179],{"type":567,"value":1144},{"type":562,"tag":589,"props":1181,"children":1182},{"style":790},[1183],{"type":567,"value":912},{"type":562,"tag":589,"props":1185,"children":1186},{"style":818},[1187],{"type":567,"value":1121},{"type":562,"tag":589,"props":1189,"children":1190},{"style":790},[1191],{"type":567,"value":1192}," >=",{"type":562,"tag":589,"props":1194,"children":1195},{"style":818},[1196],{"type":567,"value":960},{"type":562,"tag":589,"props":1198,"children":1199},{"style":790},[1200],{"type":567,"value":1158},{"type":562,"tag":589,"props":1202,"children":1204},{"class":591,"line":1203},12,[1205],{"type":562,"tag":589,"props":1206,"children":1207},{"style":790},[1208],{"type":567,"value":1209},"  }\n",{"type":562,"tag":589,"props":1211,"children":1213},{"class":591,"line":1212},13,[1214,1219,1223],{"type":562,"tag":589,"props":1215,"children":1216},{"style":796},[1217],{"type":567,"value":1218},"  return",{"type":562,"tag":589,"props":1220,"children":1221},{"style":818},[1222],{"type":567,"value":1016},{"type":562,"tag":589,"props":1224,"children":1225},{"style":790},[1226],{"type":567,"value":1158},{"type":562,"tag":589,"props":1228,"children":1230},{"class":591,"line":1229},14,[1231],{"type":562,"tag":589,"props":1232,"children":1233},{"style":790},[1234],{"type":567,"value":1235},"};\n",{"type":562,"tag":1237,"props":1238,"children":1239},"style",{},[1240],{"type":567,"value":1241},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":628,"depth":628,"links":1243},[1244,1245],{"id":754,"depth":601,"text":754},{"id":759,"depth":601,"text":759},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1252,1254],{"_path":264,"title":263,"description":1253},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":270,"title":269,"description":1255},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1716810728738]