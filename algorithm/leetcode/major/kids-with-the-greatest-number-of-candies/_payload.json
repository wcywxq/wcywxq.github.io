[{"data":1,"prerenderedAt":1182},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":478,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1177},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":264,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":263,"description":482,"url":483,"body":484,"_type":1172,"_id":1173,"_source":1174,"_file":1175,"_extension":1176},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":485,"children":486,"toc":1168},"root",[487,494,499,504,588,593,624,629,652,657,677,683,688,1162],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":488,"tag":489,"props":500,"children":501},{},[502],{"type":493,"value":503},"示例 1：",{"type":488,"tag":505,"props":506,"children":509},"pre",{"className":507,"code":508,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[510],{"type":488,"tag":511,"props":512,"children":513},"code",{"__ignoreMap":481},[514,525,534,543,552,561,570,579],{"type":488,"tag":515,"props":516,"children":519},"span",{"class":517,"line":518},"line",1,[520],{"type":488,"tag":515,"props":521,"children":522},{},[523],{"type":493,"value":524},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":488,"tag":515,"props":526,"children":528},{"class":517,"line":527},2,[529],{"type":488,"tag":515,"props":530,"children":531},{},[532],{"type":493,"value":533},"输出：[true,true,true,false,true]\n",{"type":488,"tag":515,"props":535,"children":537},{"class":517,"line":536},3,[538],{"type":488,"tag":515,"props":539,"children":540},{},[541],{"type":493,"value":542},"解释：\n",{"type":488,"tag":515,"props":544,"children":546},{"class":517,"line":545},4,[547],{"type":488,"tag":515,"props":548,"children":549},{},[550],{"type":493,"value":551},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":488,"tag":515,"props":553,"children":555},{"class":517,"line":554},5,[556],{"type":488,"tag":515,"props":557,"children":558},{},[559],{"type":493,"value":560},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":488,"tag":515,"props":562,"children":564},{"class":517,"line":563},6,[565],{"type":488,"tag":515,"props":566,"children":567},{},[568],{"type":493,"value":569},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":488,"tag":515,"props":571,"children":573},{"class":517,"line":572},7,[574],{"type":488,"tag":515,"props":575,"children":576},{},[577],{"type":493,"value":578},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":488,"tag":515,"props":580,"children":582},{"class":517,"line":581},8,[583],{"type":488,"tag":515,"props":584,"children":585},{},[586],{"type":493,"value":587},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":488,"tag":489,"props":589,"children":590},{},[591],{"type":493,"value":592},"示例 2：",{"type":488,"tag":505,"props":594,"children":596},{"className":507,"code":595,"language":493,"meta":481,"style":481},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[597],{"type":488,"tag":511,"props":598,"children":599},{"__ignoreMap":481},[600,608,616],{"type":488,"tag":515,"props":601,"children":602},{"class":517,"line":518},[603],{"type":488,"tag":515,"props":604,"children":605},{},[606],{"type":493,"value":607},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":488,"tag":515,"props":609,"children":610},{"class":517,"line":527},[611],{"type":488,"tag":515,"props":612,"children":613},{},[614],{"type":493,"value":615},"输出：[true,false,false,false,false]\n",{"type":488,"tag":515,"props":617,"children":618},{"class":517,"line":536},[619],{"type":488,"tag":515,"props":620,"children":621},{},[622],{"type":493,"value":623},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":488,"tag":489,"props":625,"children":626},{},[627],{"type":493,"value":628},"示例 3：",{"type":488,"tag":505,"props":630,"children":632},{"className":507,"code":631,"language":493,"meta":481,"style":481},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[633],{"type":488,"tag":511,"props":634,"children":635},{"__ignoreMap":481},[636,644],{"type":488,"tag":515,"props":637,"children":638},{"class":517,"line":518},[639],{"type":488,"tag":515,"props":640,"children":641},{},[642],{"type":493,"value":643},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":488,"tag":515,"props":645,"children":646},{"class":517,"line":527},[647],{"type":488,"tag":515,"props":648,"children":649},{},[650],{"type":493,"value":651},"输出：[true,false,true]\n",{"type":488,"tag":489,"props":653,"children":654},{},[655],{"type":493,"value":656},"提示：",{"type":488,"tag":658,"props":659,"children":660},"ul",{},[661,667,672],{"type":488,"tag":662,"props":663,"children":664},"li",{},[665],{"type":493,"value":666},"2 \u003C= candies.length \u003C= 100",{"type":488,"tag":662,"props":668,"children":669},{},[670],{"type":493,"value":671},"1 \u003C= candies[i] \u003C= 100",{"type":488,"tag":662,"props":673,"children":674},{},[675],{"type":493,"value":676},"1 \u003C= extraCandies \u003C= 50",{"type":488,"tag":678,"props":679,"children":681},"h2",{"id":680},"解题思路",[682],{"type":493,"value":680},{"type":488,"tag":678,"props":684,"children":686},{"id":685},"实现",[687],{"type":493,"value":685},{"type":488,"tag":505,"props":689,"children":693},{"className":690,"code":691,"language":692,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[694],{"type":488,"tag":511,"props":695,"children":696},{"__ignoreMap":481},[697,706,748,781,811,819,874,930,952,1034,1085,1127,1136,1153],{"type":488,"tag":515,"props":698,"children":699},{"class":517,"line":518},[700],{"type":488,"tag":515,"props":701,"children":703},{"style":702},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[704],{"type":493,"value":705},"/**\n",{"type":488,"tag":515,"props":707,"children":708},{"class":517,"line":527},[709,714,720,726,731,737,742],{"type":488,"tag":515,"props":710,"children":711},{"style":702},[712],{"type":493,"value":713}," * ",{"type":488,"tag":515,"props":715,"children":717},{"style":716},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[718],{"type":493,"value":719},"@",{"type":488,"tag":515,"props":721,"children":723},{"style":722},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[724],{"type":493,"value":725},"param",{"type":488,"tag":515,"props":727,"children":728},{"style":716},[729],{"type":493,"value":730}," {",{"type":488,"tag":515,"props":732,"children":734},{"style":733},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[735],{"type":493,"value":736},"number[]",{"type":488,"tag":515,"props":738,"children":739},{"style":716},[740],{"type":493,"value":741},"}",{"type":488,"tag":515,"props":743,"children":745},{"style":744},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[746],{"type":493,"value":747}," candies\n",{"type":488,"tag":515,"props":749,"children":750},{"class":517,"line":536},[751,755,759,763,767,772,776],{"type":488,"tag":515,"props":752,"children":753},{"style":702},[754],{"type":493,"value":713},{"type":488,"tag":515,"props":756,"children":757},{"style":716},[758],{"type":493,"value":719},{"type":488,"tag":515,"props":760,"children":761},{"style":722},[762],{"type":493,"value":725},{"type":488,"tag":515,"props":764,"children":765},{"style":716},[766],{"type":493,"value":730},{"type":488,"tag":515,"props":768,"children":769},{"style":733},[770],{"type":493,"value":771},"number",{"type":488,"tag":515,"props":773,"children":774},{"style":716},[775],{"type":493,"value":741},{"type":488,"tag":515,"props":777,"children":778},{"style":744},[779],{"type":493,"value":780}," extraCandies\n",{"type":488,"tag":515,"props":782,"children":783},{"class":517,"line":545},[784,788,792,797,801,806],{"type":488,"tag":515,"props":785,"children":786},{"style":702},[787],{"type":493,"value":713},{"type":488,"tag":515,"props":789,"children":790},{"style":716},[791],{"type":493,"value":719},{"type":488,"tag":515,"props":793,"children":794},{"style":722},[795],{"type":493,"value":796},"return",{"type":488,"tag":515,"props":798,"children":799},{"style":716},[800],{"type":493,"value":730},{"type":488,"tag":515,"props":802,"children":803},{"style":733},[804],{"type":493,"value":805},"boolean[]",{"type":488,"tag":515,"props":807,"children":808},{"style":716},[809],{"type":493,"value":810},"}\n",{"type":488,"tag":515,"props":812,"children":813},{"class":517,"line":554},[814],{"type":488,"tag":515,"props":815,"children":816},{"style":702},[817],{"type":493,"value":818}," */\n",{"type":488,"tag":515,"props":820,"children":821},{"class":517,"line":563},[822,828,834,839,844,849,854,859,864,869],{"type":488,"tag":515,"props":823,"children":825},{"style":824},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[826],{"type":493,"value":827},"var",{"type":488,"tag":515,"props":829,"children":831},{"style":830},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[832],{"type":493,"value":833}," kidsWithCandies",{"type":488,"tag":515,"props":835,"children":836},{"style":716},[837],{"type":493,"value":838}," =",{"type":488,"tag":515,"props":840,"children":841},{"style":824},[842],{"type":493,"value":843}," function",{"type":488,"tag":515,"props":845,"children":846},{"style":716},[847],{"type":493,"value":848}," (",{"type":488,"tag":515,"props":850,"children":851},{"style":744},[852],{"type":493,"value":853},"candies",{"type":488,"tag":515,"props":855,"children":856},{"style":716},[857],{"type":493,"value":858},",",{"type":488,"tag":515,"props":860,"children":861},{"style":744},[862],{"type":493,"value":863}," extraCandies",{"type":488,"tag":515,"props":865,"children":866},{"style":716},[867],{"type":493,"value":868},")",{"type":488,"tag":515,"props":870,"children":871},{"style":716},[872],{"type":493,"value":873}," {\n",{"type":488,"tag":515,"props":875,"children":876},{"class":517,"line":572},[877,882,887,891,896,901,906,910,915,920,925],{"type":488,"tag":515,"props":878,"children":879},{"style":824},[880],{"type":493,"value":881},"  const",{"type":488,"tag":515,"props":883,"children":884},{"style":744},[885],{"type":493,"value":886}," max",{"type":488,"tag":515,"props":888,"children":889},{"style":716},[890],{"type":493,"value":838},{"type":488,"tag":515,"props":892,"children":893},{"style":744},[894],{"type":493,"value":895}," Math",{"type":488,"tag":515,"props":897,"children":898},{"style":716},[899],{"type":493,"value":900},".",{"type":488,"tag":515,"props":902,"children":903},{"style":744},[904],{"type":493,"value":905},"max",{"type":488,"tag":515,"props":907,"children":908},{"style":716},[909],{"type":493,"value":900},{"type":488,"tag":515,"props":911,"children":912},{"style":830},[913],{"type":493,"value":914},"apply",{"type":488,"tag":515,"props":916,"children":917},{"style":716},[918],{"type":493,"value":919},"([],",{"type":488,"tag":515,"props":921,"children":922},{"style":744},[923],{"type":493,"value":924}," candies",{"type":488,"tag":515,"props":926,"children":927},{"style":716},[928],{"type":493,"value":929},");\n",{"type":488,"tag":515,"props":931,"children":932},{"class":517,"line":581},[933,938,943,947],{"type":488,"tag":515,"props":934,"children":935},{"style":824},[936],{"type":493,"value":937},"  let",{"type":488,"tag":515,"props":939,"children":940},{"style":744},[941],{"type":493,"value":942}," res",{"type":488,"tag":515,"props":944,"children":945},{"style":716},[946],{"type":493,"value":838},{"type":488,"tag":515,"props":948,"children":949},{"style":716},[950],{"type":493,"value":951}," [];\n",{"type":488,"tag":515,"props":953,"children":955},{"class":517,"line":954},9,[956,961,965,970,975,979,985,990,994,999,1003,1007,1013,1017,1021,1026,1030],{"type":488,"tag":515,"props":957,"children":958},{"style":722},[959],{"type":493,"value":960},"  for",{"type":488,"tag":515,"props":962,"children":963},{"style":716},[964],{"type":493,"value":848},{"type":488,"tag":515,"props":966,"children":967},{"style":824},[968],{"type":493,"value":969},"let",{"type":488,"tag":515,"props":971,"children":972},{"style":744},[973],{"type":493,"value":974}," i",{"type":488,"tag":515,"props":976,"children":977},{"style":716},[978],{"type":493,"value":838},{"type":488,"tag":515,"props":980,"children":982},{"style":981},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[983],{"type":493,"value":984}," 0",{"type":488,"tag":515,"props":986,"children":987},{"style":716},[988],{"type":493,"value":989},";",{"type":488,"tag":515,"props":991,"children":992},{"style":744},[993],{"type":493,"value":974},{"type":488,"tag":515,"props":995,"children":996},{"style":716},[997],{"type":493,"value":998}," \u003C",{"type":488,"tag":515,"props":1000,"children":1001},{"style":744},[1002],{"type":493,"value":924},{"type":488,"tag":515,"props":1004,"children":1005},{"style":716},[1006],{"type":493,"value":900},{"type":488,"tag":515,"props":1008,"children":1010},{"style":1009},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1011],{"type":493,"value":1012},"length",{"type":488,"tag":515,"props":1014,"children":1015},{"style":716},[1016],{"type":493,"value":989},{"type":488,"tag":515,"props":1018,"children":1019},{"style":744},[1020],{"type":493,"value":974},{"type":488,"tag":515,"props":1022,"children":1023},{"style":824},[1024],{"type":493,"value":1025},"++",{"type":488,"tag":515,"props":1027,"children":1028},{"style":716},[1029],{"type":493,"value":868},{"type":488,"tag":515,"props":1031,"children":1032},{"style":716},[1033],{"type":493,"value":873},{"type":488,"tag":515,"props":1035,"children":1037},{"class":517,"line":1036},10,[1038,1043,1048,1052,1056,1061,1066,1071,1076,1080],{"type":488,"tag":515,"props":1039,"children":1040},{"style":824},[1041],{"type":493,"value":1042},"    let",{"type":488,"tag":515,"props":1044,"children":1045},{"style":744},[1046],{"type":493,"value":1047}," currentMax",{"type":488,"tag":515,"props":1049,"children":1050},{"style":716},[1051],{"type":493,"value":838},{"type":488,"tag":515,"props":1053,"children":1054},{"style":744},[1055],{"type":493,"value":924},{"type":488,"tag":515,"props":1057,"children":1058},{"style":716},[1059],{"type":493,"value":1060},"[",{"type":488,"tag":515,"props":1062,"children":1063},{"style":744},[1064],{"type":493,"value":1065},"i",{"type":488,"tag":515,"props":1067,"children":1068},{"style":716},[1069],{"type":493,"value":1070},"]",{"type":488,"tag":515,"props":1072,"children":1073},{"style":824},[1074],{"type":493,"value":1075}," +",{"type":488,"tag":515,"props":1077,"children":1078},{"style":744},[1079],{"type":493,"value":863},{"type":488,"tag":515,"props":1081,"children":1082},{"style":716},[1083],{"type":493,"value":1084},";\n",{"type":488,"tag":515,"props":1086,"children":1088},{"class":517,"line":1087},11,[1089,1094,1098,1102,1106,1110,1114,1119,1123],{"type":488,"tag":515,"props":1090,"children":1091},{"style":744},[1092],{"type":493,"value":1093},"    res",{"type":488,"tag":515,"props":1095,"children":1096},{"style":716},[1097],{"type":493,"value":1060},{"type":488,"tag":515,"props":1099,"children":1100},{"style":744},[1101],{"type":493,"value":1065},{"type":488,"tag":515,"props":1103,"children":1104},{"style":716},[1105],{"type":493,"value":1070},{"type":488,"tag":515,"props":1107,"children":1108},{"style":716},[1109],{"type":493,"value":838},{"type":488,"tag":515,"props":1111,"children":1112},{"style":744},[1113],{"type":493,"value":1047},{"type":488,"tag":515,"props":1115,"children":1116},{"style":716},[1117],{"type":493,"value":1118}," >=",{"type":488,"tag":515,"props":1120,"children":1121},{"style":744},[1122],{"type":493,"value":886},{"type":488,"tag":515,"props":1124,"children":1125},{"style":716},[1126],{"type":493,"value":1084},{"type":488,"tag":515,"props":1128,"children":1130},{"class":517,"line":1129},12,[1131],{"type":488,"tag":515,"props":1132,"children":1133},{"style":716},[1134],{"type":493,"value":1135},"  }\n",{"type":488,"tag":515,"props":1137,"children":1139},{"class":517,"line":1138},13,[1140,1145,1149],{"type":488,"tag":515,"props":1141,"children":1142},{"style":722},[1143],{"type":493,"value":1144},"  return",{"type":488,"tag":515,"props":1146,"children":1147},{"style":744},[1148],{"type":493,"value":942},{"type":488,"tag":515,"props":1150,"children":1151},{"style":716},[1152],{"type":493,"value":1084},{"type":488,"tag":515,"props":1154,"children":1156},{"class":517,"line":1155},14,[1157],{"type":488,"tag":515,"props":1158,"children":1159},{"style":716},[1160],{"type":493,"value":1161},"};\n",{"type":488,"tag":1163,"props":1164,"children":1165},"style",{},[1166],{"type":493,"value":1167},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":554,"depth":554,"links":1169},[1170,1171],{"id":680,"depth":527,"text":680},{"id":685,"depth":527,"text":685},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1178,1180],{"_path":261,"title":260,"description":1179},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":267,"title":266,"description":1181},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1714046227891]