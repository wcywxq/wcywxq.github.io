[{"data":1,"prerenderedAt":1204},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies":500,"/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies-surround":1199},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":264,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":263,"description":504,"url":505,"body":506,"_type":1194,"_id":1195,"_source":1196,"_file":1197,"_extension":1198},"major",false,"","给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。","https://leetcode.cn/problems/kids-with-the-greatest-number-of-candies",{"type":507,"children":508,"toc":1190},"root",[509,516,521,526,610,615,646,651,674,679,699,705,710,1184],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":515,"value":525},"示例 1：",{"type":510,"tag":527,"props":528,"children":531},"pre",{"className":529,"code":530,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true]\n解释：\n孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",[532],{"type":510,"tag":533,"props":534,"children":535},"code",{"__ignoreMap":503},[536,547,556,565,574,583,592,601],{"type":510,"tag":537,"props":538,"children":541},"span",{"class":539,"line":540},"line",1,[542],{"type":510,"tag":537,"props":543,"children":544},{},[545],{"type":515,"value":546},"输入：candies = [2,3,5,1,3], extraCandies = 3\n",{"type":510,"tag":537,"props":548,"children":550},{"class":539,"line":549},2,[551],{"type":510,"tag":537,"props":552,"children":553},{},[554],{"type":515,"value":555},"输出：[true,true,true,false,true]\n",{"type":510,"tag":537,"props":557,"children":559},{"class":539,"line":558},3,[560],{"type":510,"tag":537,"props":561,"children":562},{},[563],{"type":515,"value":564},"解释：\n",{"type":510,"tag":537,"props":566,"children":568},{"class":539,"line":567},4,[569],{"type":510,"tag":537,"props":570,"children":571},{},[572],{"type":515,"value":573},"孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3 个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n",{"type":510,"tag":537,"props":575,"children":577},{"class":539,"line":576},5,[578],{"type":510,"tag":537,"props":579,"children":580},{},[581],{"type":515,"value":582},"孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":510,"tag":537,"props":584,"children":586},{"class":539,"line":585},6,[587],{"type":510,"tag":537,"props":588,"children":589},{},[590],{"type":515,"value":591},"孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n",{"type":510,"tag":537,"props":593,"children":595},{"class":539,"line":594},7,[596],{"type":510,"tag":537,"props":597,"children":598},{},[599],{"type":515,"value":600},"孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n",{"type":510,"tag":537,"props":602,"children":604},{"class":539,"line":603},8,[605],{"type":510,"tag":537,"props":606,"children":607},{},[608],{"type":515,"value":609},"孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n",{"type":510,"tag":511,"props":611,"children":612},{},[613],{"type":515,"value":614},"示例 2：",{"type":510,"tag":527,"props":616,"children":618},{"className":529,"code":617,"language":515,"meta":503,"style":503},"输入：candies = [4,2,1,1,2], extraCandies = 1\n输出：[true,false,false,false,false]\n解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",[619],{"type":510,"tag":533,"props":620,"children":621},{"__ignoreMap":503},[622,630,638],{"type":510,"tag":537,"props":623,"children":624},{"class":539,"line":540},[625],{"type":510,"tag":537,"props":626,"children":627},{},[628],{"type":515,"value":629},"输入：candies = [4,2,1,1,2], extraCandies = 1\n",{"type":510,"tag":537,"props":631,"children":632},{"class":539,"line":549},[633],{"type":510,"tag":537,"props":634,"children":635},{},[636],{"type":515,"value":637},"输出：[true,false,false,false,false]\n",{"type":510,"tag":537,"props":639,"children":640},{"class":539,"line":558},[641],{"type":510,"tag":537,"props":642,"children":643},{},[644],{"type":515,"value":645},"解释：只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n",{"type":510,"tag":511,"props":647,"children":648},{},[649],{"type":515,"value":650},"示例 3：",{"type":510,"tag":527,"props":652,"children":654},{"className":529,"code":653,"language":515,"meta":503,"style":503},"输入：candies = [12,1,12], extraCandies = 10\n输出：[true,false,true]\n",[655],{"type":510,"tag":533,"props":656,"children":657},{"__ignoreMap":503},[658,666],{"type":510,"tag":537,"props":659,"children":660},{"class":539,"line":540},[661],{"type":510,"tag":537,"props":662,"children":663},{},[664],{"type":515,"value":665},"输入：candies = [12,1,12], extraCandies = 10\n",{"type":510,"tag":537,"props":667,"children":668},{"class":539,"line":549},[669],{"type":510,"tag":537,"props":670,"children":671},{},[672],{"type":515,"value":673},"输出：[true,false,true]\n",{"type":510,"tag":511,"props":675,"children":676},{},[677],{"type":515,"value":678},"提示：",{"type":510,"tag":680,"props":681,"children":682},"ul",{},[683,689,694],{"type":510,"tag":684,"props":685,"children":686},"li",{},[687],{"type":515,"value":688},"2 \u003C= candies.length \u003C= 100",{"type":510,"tag":684,"props":690,"children":691},{},[692],{"type":515,"value":693},"1 \u003C= candies[i] \u003C= 100",{"type":510,"tag":684,"props":695,"children":696},{},[697],{"type":515,"value":698},"1 \u003C= extraCandies \u003C= 50",{"type":510,"tag":700,"props":701,"children":703},"h2",{"id":702},"解题思路",[704],{"type":515,"value":702},{"type":510,"tag":700,"props":706,"children":708},{"id":707},"实现",[709],{"type":515,"value":707},{"type":510,"tag":527,"props":711,"children":715},{"className":712,"code":713,"language":714,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} candies\n * @param {number} extraCandies\n * @return {boolean[]}\n */\nvar kidsWithCandies = function (candies, extraCandies) {\n  const max = Math.max.apply([], candies);\n  let res = [];\n  for (let i = 0; i \u003C candies.length; i++) {\n    let currentMax = candies[i] + extraCandies;\n    res[i] = currentMax >= max;\n  }\n  return res;\n};\n","js",[716],{"type":510,"tag":533,"props":717,"children":718},{"__ignoreMap":503},[719,728,770,803,833,841,896,952,974,1056,1107,1149,1158,1175],{"type":510,"tag":537,"props":720,"children":721},{"class":539,"line":540},[722],{"type":510,"tag":537,"props":723,"children":725},{"style":724},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[726],{"type":515,"value":727},"/**\n",{"type":510,"tag":537,"props":729,"children":730},{"class":539,"line":549},[731,736,742,748,753,759,764],{"type":510,"tag":537,"props":732,"children":733},{"style":724},[734],{"type":515,"value":735}," * ",{"type":510,"tag":537,"props":737,"children":739},{"style":738},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[740],{"type":515,"value":741},"@",{"type":510,"tag":537,"props":743,"children":745},{"style":744},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[746],{"type":515,"value":747},"param",{"type":510,"tag":537,"props":749,"children":750},{"style":738},[751],{"type":515,"value":752}," {",{"type":510,"tag":537,"props":754,"children":756},{"style":755},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[757],{"type":515,"value":758},"number[]",{"type":510,"tag":537,"props":760,"children":761},{"style":738},[762],{"type":515,"value":763},"}",{"type":510,"tag":537,"props":765,"children":767},{"style":766},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[768],{"type":515,"value":769}," candies\n",{"type":510,"tag":537,"props":771,"children":772},{"class":539,"line":558},[773,777,781,785,789,794,798],{"type":510,"tag":537,"props":774,"children":775},{"style":724},[776],{"type":515,"value":735},{"type":510,"tag":537,"props":778,"children":779},{"style":738},[780],{"type":515,"value":741},{"type":510,"tag":537,"props":782,"children":783},{"style":744},[784],{"type":515,"value":747},{"type":510,"tag":537,"props":786,"children":787},{"style":738},[788],{"type":515,"value":752},{"type":510,"tag":537,"props":790,"children":791},{"style":755},[792],{"type":515,"value":793},"number",{"type":510,"tag":537,"props":795,"children":796},{"style":738},[797],{"type":515,"value":763},{"type":510,"tag":537,"props":799,"children":800},{"style":766},[801],{"type":515,"value":802}," extraCandies\n",{"type":510,"tag":537,"props":804,"children":805},{"class":539,"line":567},[806,810,814,819,823,828],{"type":510,"tag":537,"props":807,"children":808},{"style":724},[809],{"type":515,"value":735},{"type":510,"tag":537,"props":811,"children":812},{"style":738},[813],{"type":515,"value":741},{"type":510,"tag":537,"props":815,"children":816},{"style":744},[817],{"type":515,"value":818},"return",{"type":510,"tag":537,"props":820,"children":821},{"style":738},[822],{"type":515,"value":752},{"type":510,"tag":537,"props":824,"children":825},{"style":755},[826],{"type":515,"value":827},"boolean[]",{"type":510,"tag":537,"props":829,"children":830},{"style":738},[831],{"type":515,"value":832},"}\n",{"type":510,"tag":537,"props":834,"children":835},{"class":539,"line":576},[836],{"type":510,"tag":537,"props":837,"children":838},{"style":724},[839],{"type":515,"value":840}," */\n",{"type":510,"tag":537,"props":842,"children":843},{"class":539,"line":585},[844,850,856,861,866,871,876,881,886,891],{"type":510,"tag":537,"props":845,"children":847},{"style":846},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[848],{"type":515,"value":849},"var",{"type":510,"tag":537,"props":851,"children":853},{"style":852},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[854],{"type":515,"value":855}," kidsWithCandies",{"type":510,"tag":537,"props":857,"children":858},{"style":738},[859],{"type":515,"value":860}," =",{"type":510,"tag":537,"props":862,"children":863},{"style":846},[864],{"type":515,"value":865}," function",{"type":510,"tag":537,"props":867,"children":868},{"style":738},[869],{"type":515,"value":870}," (",{"type":510,"tag":537,"props":872,"children":873},{"style":766},[874],{"type":515,"value":875},"candies",{"type":510,"tag":537,"props":877,"children":878},{"style":738},[879],{"type":515,"value":880},",",{"type":510,"tag":537,"props":882,"children":883},{"style":766},[884],{"type":515,"value":885}," extraCandies",{"type":510,"tag":537,"props":887,"children":888},{"style":738},[889],{"type":515,"value":890},")",{"type":510,"tag":537,"props":892,"children":893},{"style":738},[894],{"type":515,"value":895}," {\n",{"type":510,"tag":537,"props":897,"children":898},{"class":539,"line":594},[899,904,909,913,918,923,928,932,937,942,947],{"type":510,"tag":537,"props":900,"children":901},{"style":846},[902],{"type":515,"value":903},"  const",{"type":510,"tag":537,"props":905,"children":906},{"style":766},[907],{"type":515,"value":908}," max",{"type":510,"tag":537,"props":910,"children":911},{"style":738},[912],{"type":515,"value":860},{"type":510,"tag":537,"props":914,"children":915},{"style":766},[916],{"type":515,"value":917}," Math",{"type":510,"tag":537,"props":919,"children":920},{"style":738},[921],{"type":515,"value":922},".",{"type":510,"tag":537,"props":924,"children":925},{"style":766},[926],{"type":515,"value":927},"max",{"type":510,"tag":537,"props":929,"children":930},{"style":738},[931],{"type":515,"value":922},{"type":510,"tag":537,"props":933,"children":934},{"style":852},[935],{"type":515,"value":936},"apply",{"type":510,"tag":537,"props":938,"children":939},{"style":738},[940],{"type":515,"value":941},"([],",{"type":510,"tag":537,"props":943,"children":944},{"style":766},[945],{"type":515,"value":946}," candies",{"type":510,"tag":537,"props":948,"children":949},{"style":738},[950],{"type":515,"value":951},");\n",{"type":510,"tag":537,"props":953,"children":954},{"class":539,"line":603},[955,960,965,969],{"type":510,"tag":537,"props":956,"children":957},{"style":846},[958],{"type":515,"value":959},"  let",{"type":510,"tag":537,"props":961,"children":962},{"style":766},[963],{"type":515,"value":964}," res",{"type":510,"tag":537,"props":966,"children":967},{"style":738},[968],{"type":515,"value":860},{"type":510,"tag":537,"props":970,"children":971},{"style":738},[972],{"type":515,"value":973}," [];\n",{"type":510,"tag":537,"props":975,"children":977},{"class":539,"line":976},9,[978,983,987,992,997,1001,1007,1012,1016,1021,1025,1029,1035,1039,1043,1048,1052],{"type":510,"tag":537,"props":979,"children":980},{"style":744},[981],{"type":515,"value":982},"  for",{"type":510,"tag":537,"props":984,"children":985},{"style":738},[986],{"type":515,"value":870},{"type":510,"tag":537,"props":988,"children":989},{"style":846},[990],{"type":515,"value":991},"let",{"type":510,"tag":537,"props":993,"children":994},{"style":766},[995],{"type":515,"value":996}," i",{"type":510,"tag":537,"props":998,"children":999},{"style":738},[1000],{"type":515,"value":860},{"type":510,"tag":537,"props":1002,"children":1004},{"style":1003},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1005],{"type":515,"value":1006}," 0",{"type":510,"tag":537,"props":1008,"children":1009},{"style":738},[1010],{"type":515,"value":1011},";",{"type":510,"tag":537,"props":1013,"children":1014},{"style":766},[1015],{"type":515,"value":996},{"type":510,"tag":537,"props":1017,"children":1018},{"style":738},[1019],{"type":515,"value":1020}," \u003C",{"type":510,"tag":537,"props":1022,"children":1023},{"style":766},[1024],{"type":515,"value":946},{"type":510,"tag":537,"props":1026,"children":1027},{"style":738},[1028],{"type":515,"value":922},{"type":510,"tag":537,"props":1030,"children":1032},{"style":1031},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1033],{"type":515,"value":1034},"length",{"type":510,"tag":537,"props":1036,"children":1037},{"style":738},[1038],{"type":515,"value":1011},{"type":510,"tag":537,"props":1040,"children":1041},{"style":766},[1042],{"type":515,"value":996},{"type":510,"tag":537,"props":1044,"children":1045},{"style":846},[1046],{"type":515,"value":1047},"++",{"type":510,"tag":537,"props":1049,"children":1050},{"style":738},[1051],{"type":515,"value":890},{"type":510,"tag":537,"props":1053,"children":1054},{"style":738},[1055],{"type":515,"value":895},{"type":510,"tag":537,"props":1057,"children":1059},{"class":539,"line":1058},10,[1060,1065,1070,1074,1078,1083,1088,1093,1098,1102],{"type":510,"tag":537,"props":1061,"children":1062},{"style":846},[1063],{"type":515,"value":1064},"    let",{"type":510,"tag":537,"props":1066,"children":1067},{"style":766},[1068],{"type":515,"value":1069}," currentMax",{"type":510,"tag":537,"props":1071,"children":1072},{"style":738},[1073],{"type":515,"value":860},{"type":510,"tag":537,"props":1075,"children":1076},{"style":766},[1077],{"type":515,"value":946},{"type":510,"tag":537,"props":1079,"children":1080},{"style":738},[1081],{"type":515,"value":1082},"[",{"type":510,"tag":537,"props":1084,"children":1085},{"style":766},[1086],{"type":515,"value":1087},"i",{"type":510,"tag":537,"props":1089,"children":1090},{"style":738},[1091],{"type":515,"value":1092},"]",{"type":510,"tag":537,"props":1094,"children":1095},{"style":846},[1096],{"type":515,"value":1097}," +",{"type":510,"tag":537,"props":1099,"children":1100},{"style":766},[1101],{"type":515,"value":885},{"type":510,"tag":537,"props":1103,"children":1104},{"style":738},[1105],{"type":515,"value":1106},";\n",{"type":510,"tag":537,"props":1108,"children":1110},{"class":539,"line":1109},11,[1111,1116,1120,1124,1128,1132,1136,1141,1145],{"type":510,"tag":537,"props":1112,"children":1113},{"style":766},[1114],{"type":515,"value":1115},"    res",{"type":510,"tag":537,"props":1117,"children":1118},{"style":738},[1119],{"type":515,"value":1082},{"type":510,"tag":537,"props":1121,"children":1122},{"style":766},[1123],{"type":515,"value":1087},{"type":510,"tag":537,"props":1125,"children":1126},{"style":738},[1127],{"type":515,"value":1092},{"type":510,"tag":537,"props":1129,"children":1130},{"style":738},[1131],{"type":515,"value":860},{"type":510,"tag":537,"props":1133,"children":1134},{"style":766},[1135],{"type":515,"value":1069},{"type":510,"tag":537,"props":1137,"children":1138},{"style":738},[1139],{"type":515,"value":1140}," >=",{"type":510,"tag":537,"props":1142,"children":1143},{"style":766},[1144],{"type":515,"value":908},{"type":510,"tag":537,"props":1146,"children":1147},{"style":738},[1148],{"type":515,"value":1106},{"type":510,"tag":537,"props":1150,"children":1152},{"class":539,"line":1151},12,[1153],{"type":510,"tag":537,"props":1154,"children":1155},{"style":738},[1156],{"type":515,"value":1157},"  }\n",{"type":510,"tag":537,"props":1159,"children":1161},{"class":539,"line":1160},13,[1162,1167,1171],{"type":510,"tag":537,"props":1163,"children":1164},{"style":744},[1165],{"type":515,"value":1166},"  return",{"type":510,"tag":537,"props":1168,"children":1169},{"style":766},[1170],{"type":515,"value":964},{"type":510,"tag":537,"props":1172,"children":1173},{"style":738},[1174],{"type":515,"value":1106},{"type":510,"tag":537,"props":1176,"children":1178},{"class":539,"line":1177},14,[1179],{"type":510,"tag":537,"props":1180,"children":1181},{"style":738},[1182],{"type":515,"value":1183},"};\n",{"type":510,"tag":1185,"props":1186,"children":1187},"style",{},[1188],{"type":515,"value":1189},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":576,"depth":576,"links":1191},[1192,1193],{"id":702,"depth":549,"text":702},{"id":707,"depth":549,"text":707},"markdown","content:1.algorithm:3.leetcode:3.major:1431.kids-with-the-greatest-number-of-candies.md","content","1.algorithm/3.leetcode/3.major/1431.kids-with-the-greatest-number-of-candies.md","md",[1200,1202],{"_path":261,"title":260,"description":1201},"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。",{"_path":267,"title":266,"description":1203},"给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。",1714054340244]