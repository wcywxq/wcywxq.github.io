[{"data":1,"prerenderedAt":1642},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-linked-list-ii":549,"/algorithm/leetcode/major/reverse-linked-list-ii-surround":1637},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":144,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":143,"description":553,"url":554,"body":555,"_type":1632,"_id":1633,"_source":1634,"_file":1635,"_extension":1636},"major",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":556,"children":557,"toc":1628},"root",[558,565,570,579,609,614,637,642,667,672,678,683,688,1622],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"示例 1：",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":559,"tag":574,"props":575,"children":578},"img",{"alt":576,"src":577},"rev2ex2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.92_rev2ex2.png",[],{"type":559,"tag":580,"props":581,"children":584},"pre",{"className":582,"code":583,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[585],{"type":559,"tag":586,"props":587,"children":588},"code",{"__ignoreMap":552},[589,600],{"type":559,"tag":590,"props":591,"children":594},"span",{"class":592,"line":593},"line",1,[595],{"type":559,"tag":590,"props":596,"children":597},{},[598],{"type":564,"value":599},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":559,"tag":590,"props":601,"children":603},{"class":592,"line":602},2,[604],{"type":559,"tag":590,"props":605,"children":606},{},[607],{"type":564,"value":608},"输出：[1,4,3,2,5]\n",{"type":559,"tag":560,"props":610,"children":611},{},[612],{"type":564,"value":613},"示例 2：",{"type":559,"tag":580,"props":615,"children":617},{"className":582,"code":616,"language":564,"meta":552,"style":552},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[618],{"type":559,"tag":586,"props":619,"children":620},{"__ignoreMap":552},[621,629],{"type":559,"tag":590,"props":622,"children":623},{"class":592,"line":593},[624],{"type":559,"tag":590,"props":625,"children":626},{},[627],{"type":564,"value":628},"输入：head = [5], left = 1, right = 1\n",{"type":559,"tag":590,"props":630,"children":631},{"class":592,"line":602},[632],{"type":559,"tag":590,"props":633,"children":634},{},[635],{"type":564,"value":636},"输出：[5]\n",{"type":559,"tag":560,"props":638,"children":639},{},[640],{"type":564,"value":641},"提示：",{"type":559,"tag":643,"props":644,"children":645},"ul",{},[646,652,657,662],{"type":559,"tag":647,"props":648,"children":649},"li",{},[650],{"type":564,"value":651},"链表中节点数目为 n",{"type":559,"tag":647,"props":653,"children":654},{},[655],{"type":564,"value":656},"1 \u003C= n \u003C= 500",{"type":559,"tag":647,"props":658,"children":659},{},[660],{"type":564,"value":661},"-500 \u003C= Node.val \u003C= 500",{"type":559,"tag":647,"props":663,"children":664},{},[665],{"type":564,"value":666},"1 \u003C= left \u003C= right \u003C= n",{"type":559,"tag":560,"props":668,"children":669},{},[670],{"type":564,"value":671},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":559,"tag":673,"props":674,"children":676},"h2",{"id":675},"解题思路",[677],{"type":564,"value":675},{"type":559,"tag":560,"props":679,"children":680},{},[681],{"type":564,"value":682},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":559,"tag":673,"props":684,"children":686},{"id":685},"实现",[687],{"type":564,"value":685},{"type":559,"tag":580,"props":689,"children":693},{"className":690,"code":691,"language":692,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[694],{"type":559,"tag":586,"props":695,"children":696},{"__ignoreMap":552},[697,706,714,723,732,741,750,759,767,810,844,877,907,915,980,1013,1046,1056,1065,1074,1083,1109,1191,1220,1229,1237,1263,1296,1377,1411,1440,1461,1481,1489,1497,1506,1515,1552,1580,1588,1613],{"type":559,"tag":590,"props":698,"children":699},{"class":592,"line":593},[700],{"type":559,"tag":590,"props":701,"children":703},{"style":702},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[704],{"type":564,"value":705},"/**\n",{"type":559,"tag":590,"props":707,"children":708},{"class":592,"line":602},[709],{"type":559,"tag":590,"props":710,"children":711},{"style":702},[712],{"type":564,"value":713}," * Definition for singly-linked list.\n",{"type":559,"tag":590,"props":715,"children":717},{"class":592,"line":716},3,[718],{"type":559,"tag":590,"props":719,"children":720},{"style":702},[721],{"type":564,"value":722}," * function ListNode(val, next) {\n",{"type":559,"tag":590,"props":724,"children":726},{"class":592,"line":725},4,[727],{"type":559,"tag":590,"props":728,"children":729},{"style":702},[730],{"type":564,"value":731}," *     this.val = (val===undefined ? 0 : val)\n",{"type":559,"tag":590,"props":733,"children":735},{"class":592,"line":734},5,[736],{"type":559,"tag":590,"props":737,"children":738},{"style":702},[739],{"type":564,"value":740}," *     this.next = (next===undefined ? null : next)\n",{"type":559,"tag":590,"props":742,"children":744},{"class":592,"line":743},6,[745],{"type":559,"tag":590,"props":746,"children":747},{"style":702},[748],{"type":564,"value":749}," * }\n",{"type":559,"tag":590,"props":751,"children":753},{"class":592,"line":752},7,[754],{"type":559,"tag":590,"props":755,"children":756},{"style":702},[757],{"type":564,"value":758}," */\n",{"type":559,"tag":590,"props":760,"children":762},{"class":592,"line":761},8,[763],{"type":559,"tag":590,"props":764,"children":765},{"style":702},[766],{"type":564,"value":705},{"type":559,"tag":590,"props":768,"children":770},{"class":592,"line":769},9,[771,776,782,788,793,799,804],{"type":559,"tag":590,"props":772,"children":773},{"style":702},[774],{"type":564,"value":775}," * ",{"type":559,"tag":590,"props":777,"children":779},{"style":778},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[780],{"type":564,"value":781},"@",{"type":559,"tag":590,"props":783,"children":785},{"style":784},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[786],{"type":564,"value":787},"param",{"type":559,"tag":590,"props":789,"children":790},{"style":778},[791],{"type":564,"value":792}," {",{"type":559,"tag":590,"props":794,"children":796},{"style":795},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[797],{"type":564,"value":798},"ListNode",{"type":559,"tag":590,"props":800,"children":801},{"style":778},[802],{"type":564,"value":803},"}",{"type":559,"tag":590,"props":805,"children":807},{"style":806},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[808],{"type":564,"value":809}," head\n",{"type":559,"tag":590,"props":811,"children":813},{"class":592,"line":812},10,[814,818,822,826,830,835,839],{"type":559,"tag":590,"props":815,"children":816},{"style":702},[817],{"type":564,"value":775},{"type":559,"tag":590,"props":819,"children":820},{"style":778},[821],{"type":564,"value":781},{"type":559,"tag":590,"props":823,"children":824},{"style":784},[825],{"type":564,"value":787},{"type":559,"tag":590,"props":827,"children":828},{"style":778},[829],{"type":564,"value":792},{"type":559,"tag":590,"props":831,"children":832},{"style":795},[833],{"type":564,"value":834},"number",{"type":559,"tag":590,"props":836,"children":837},{"style":778},[838],{"type":564,"value":803},{"type":559,"tag":590,"props":840,"children":841},{"style":806},[842],{"type":564,"value":843}," left\n",{"type":559,"tag":590,"props":845,"children":847},{"class":592,"line":846},11,[848,852,856,860,864,868,872],{"type":559,"tag":590,"props":849,"children":850},{"style":702},[851],{"type":564,"value":775},{"type":559,"tag":590,"props":853,"children":854},{"style":778},[855],{"type":564,"value":781},{"type":559,"tag":590,"props":857,"children":858},{"style":784},[859],{"type":564,"value":787},{"type":559,"tag":590,"props":861,"children":862},{"style":778},[863],{"type":564,"value":792},{"type":559,"tag":590,"props":865,"children":866},{"style":795},[867],{"type":564,"value":834},{"type":559,"tag":590,"props":869,"children":870},{"style":778},[871],{"type":564,"value":803},{"type":559,"tag":590,"props":873,"children":874},{"style":806},[875],{"type":564,"value":876}," right\n",{"type":559,"tag":590,"props":878,"children":880},{"class":592,"line":879},12,[881,885,889,894,898,902],{"type":559,"tag":590,"props":882,"children":883},{"style":702},[884],{"type":564,"value":775},{"type":559,"tag":590,"props":886,"children":887},{"style":778},[888],{"type":564,"value":781},{"type":559,"tag":590,"props":890,"children":891},{"style":784},[892],{"type":564,"value":893},"return",{"type":559,"tag":590,"props":895,"children":896},{"style":778},[897],{"type":564,"value":792},{"type":559,"tag":590,"props":899,"children":900},{"style":795},[901],{"type":564,"value":798},{"type":559,"tag":590,"props":903,"children":904},{"style":778},[905],{"type":564,"value":906},"}\n",{"type":559,"tag":590,"props":908,"children":910},{"class":592,"line":909},13,[911],{"type":559,"tag":590,"props":912,"children":913},{"style":702},[914],{"type":564,"value":758},{"type":559,"tag":590,"props":916,"children":918},{"class":592,"line":917},14,[919,925,931,936,941,946,951,956,961,965,970,975],{"type":559,"tag":590,"props":920,"children":922},{"style":921},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[923],{"type":564,"value":924},"var",{"type":559,"tag":590,"props":926,"children":928},{"style":927},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[929],{"type":564,"value":930}," reverseBetween",{"type":559,"tag":590,"props":932,"children":933},{"style":778},[934],{"type":564,"value":935}," =",{"type":559,"tag":590,"props":937,"children":938},{"style":921},[939],{"type":564,"value":940}," function",{"type":559,"tag":590,"props":942,"children":943},{"style":778},[944],{"type":564,"value":945}," (",{"type":559,"tag":590,"props":947,"children":948},{"style":806},[949],{"type":564,"value":950},"head",{"type":559,"tag":590,"props":952,"children":953},{"style":778},[954],{"type":564,"value":955},",",{"type":559,"tag":590,"props":957,"children":958},{"style":806},[959],{"type":564,"value":960}," left",{"type":559,"tag":590,"props":962,"children":963},{"style":778},[964],{"type":564,"value":955},{"type":559,"tag":590,"props":966,"children":967},{"style":806},[968],{"type":564,"value":969}," right",{"type":559,"tag":590,"props":971,"children":972},{"style":778},[973],{"type":564,"value":974},")",{"type":559,"tag":590,"props":976,"children":977},{"style":778},[978],{"type":564,"value":979}," {\n",{"type":559,"tag":590,"props":981,"children":983},{"class":592,"line":982},15,[984,989,994,998,1003,1008],{"type":559,"tag":590,"props":985,"children":986},{"style":921},[987],{"type":564,"value":988},"  const",{"type":559,"tag":590,"props":990,"children":991},{"style":806},[992],{"type":564,"value":993}," dummy",{"type":559,"tag":590,"props":995,"children":996},{"style":778},[997],{"type":564,"value":935},{"type":559,"tag":590,"props":999,"children":1000},{"style":921},[1001],{"type":564,"value":1002}," new",{"type":559,"tag":590,"props":1004,"children":1005},{"style":927},[1006],{"type":564,"value":1007}," ListNode",{"type":559,"tag":590,"props":1009,"children":1010},{"style":778},[1011],{"type":564,"value":1012},"();\n",{"type":559,"tag":590,"props":1014,"children":1016},{"class":592,"line":1015},16,[1017,1022,1027,1032,1036,1041],{"type":559,"tag":590,"props":1018,"children":1019},{"style":806},[1020],{"type":564,"value":1021},"  dummy",{"type":559,"tag":590,"props":1023,"children":1024},{"style":778},[1025],{"type":564,"value":1026},".",{"type":559,"tag":590,"props":1028,"children":1029},{"style":806},[1030],{"type":564,"value":1031},"next",{"type":559,"tag":590,"props":1033,"children":1034},{"style":778},[1035],{"type":564,"value":935},{"type":559,"tag":590,"props":1037,"children":1038},{"style":806},[1039],{"type":564,"value":1040}," head",{"type":559,"tag":590,"props":1042,"children":1043},{"style":778},[1044],{"type":564,"value":1045},";\n",{"type":559,"tag":590,"props":1047,"children":1049},{"class":592,"line":1048},17,[1050],{"type":559,"tag":590,"props":1051,"children":1053},{"emptyLinePlaceholder":1052},true,[1054],{"type":564,"value":1055},"\n",{"type":559,"tag":590,"props":1057,"children":1059},{"class":592,"line":1058},18,[1060],{"type":559,"tag":590,"props":1061,"children":1062},{"style":702},[1063],{"type":564,"value":1064},"  // p0 代表反转中间段的上一个节点\n",{"type":559,"tag":590,"props":1066,"children":1068},{"class":592,"line":1067},19,[1069],{"type":559,"tag":590,"props":1070,"children":1071},{"style":702},[1072],{"type":564,"value":1073},"  // left = 1 时，构造哨兵节点\n",{"type":559,"tag":590,"props":1075,"children":1077},{"class":592,"line":1076},20,[1078],{"type":559,"tag":590,"props":1079,"children":1080},{"style":702},[1081],{"type":564,"value":1082},"  // 循环后，到达反转后的上一个节点\n",{"type":559,"tag":590,"props":1084,"children":1086},{"class":592,"line":1085},21,[1087,1092,1097,1101,1105],{"type":559,"tag":590,"props":1088,"children":1089},{"style":921},[1090],{"type":564,"value":1091},"  let",{"type":559,"tag":590,"props":1093,"children":1094},{"style":806},[1095],{"type":564,"value":1096}," p0",{"type":559,"tag":590,"props":1098,"children":1099},{"style":778},[1100],{"type":564,"value":935},{"type":559,"tag":590,"props":1102,"children":1103},{"style":806},[1104],{"type":564,"value":993},{"type":559,"tag":590,"props":1106,"children":1107},{"style":778},[1108],{"type":564,"value":1045},{"type":559,"tag":590,"props":1110,"children":1112},{"class":592,"line":1111},22,[1113,1118,1122,1127,1132,1136,1142,1147,1151,1156,1160,1165,1170,1174,1178,1183,1187],{"type":559,"tag":590,"props":1114,"children":1115},{"style":784},[1116],{"type":564,"value":1117},"  for",{"type":559,"tag":590,"props":1119,"children":1120},{"style":778},[1121],{"type":564,"value":945},{"type":559,"tag":590,"props":1123,"children":1124},{"style":921},[1125],{"type":564,"value":1126},"let",{"type":559,"tag":590,"props":1128,"children":1129},{"style":806},[1130],{"type":564,"value":1131}," i",{"type":559,"tag":590,"props":1133,"children":1134},{"style":778},[1135],{"type":564,"value":935},{"type":559,"tag":590,"props":1137,"children":1139},{"style":1138},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1140],{"type":564,"value":1141}," 0",{"type":559,"tag":590,"props":1143,"children":1144},{"style":778},[1145],{"type":564,"value":1146},";",{"type":559,"tag":590,"props":1148,"children":1149},{"style":806},[1150],{"type":564,"value":1131},{"type":559,"tag":590,"props":1152,"children":1153},{"style":778},[1154],{"type":564,"value":1155}," \u003C",{"type":559,"tag":590,"props":1157,"children":1158},{"style":806},[1159],{"type":564,"value":960},{"type":559,"tag":590,"props":1161,"children":1162},{"style":921},[1163],{"type":564,"value":1164}," -",{"type":559,"tag":590,"props":1166,"children":1167},{"style":1138},[1168],{"type":564,"value":1169}," 1",{"type":559,"tag":590,"props":1171,"children":1172},{"style":778},[1173],{"type":564,"value":1146},{"type":559,"tag":590,"props":1175,"children":1176},{"style":806},[1177],{"type":564,"value":1131},{"type":559,"tag":590,"props":1179,"children":1180},{"style":921},[1181],{"type":564,"value":1182},"++",{"type":559,"tag":590,"props":1184,"children":1185},{"style":778},[1186],{"type":564,"value":974},{"type":559,"tag":590,"props":1188,"children":1189},{"style":778},[1190],{"type":564,"value":979},{"type":559,"tag":590,"props":1192,"children":1194},{"class":592,"line":1193},23,[1195,1200,1204,1208,1212,1216],{"type":559,"tag":590,"props":1196,"children":1197},{"style":806},[1198],{"type":564,"value":1199},"    p0",{"type":559,"tag":590,"props":1201,"children":1202},{"style":778},[1203],{"type":564,"value":935},{"type":559,"tag":590,"props":1205,"children":1206},{"style":806},[1207],{"type":564,"value":1096},{"type":559,"tag":590,"props":1209,"children":1210},{"style":778},[1211],{"type":564,"value":1026},{"type":559,"tag":590,"props":1213,"children":1214},{"style":806},[1215],{"type":564,"value":1031},{"type":559,"tag":590,"props":1217,"children":1218},{"style":778},[1219],{"type":564,"value":1045},{"type":559,"tag":590,"props":1221,"children":1223},{"class":592,"line":1222},24,[1224],{"type":559,"tag":590,"props":1225,"children":1226},{"style":778},[1227],{"type":564,"value":1228},"  }\n",{"type":559,"tag":590,"props":1230,"children":1232},{"class":592,"line":1231},25,[1233],{"type":559,"tag":590,"props":1234,"children":1235},{"emptyLinePlaceholder":1052},[1236],{"type":564,"value":1055},{"type":559,"tag":590,"props":1238,"children":1240},{"class":592,"line":1239},26,[1241,1245,1250,1254,1259],{"type":559,"tag":590,"props":1242,"children":1243},{"style":921},[1244],{"type":564,"value":1091},{"type":559,"tag":590,"props":1246,"children":1247},{"style":806},[1248],{"type":564,"value":1249}," prev",{"type":559,"tag":590,"props":1251,"children":1252},{"style":778},[1253],{"type":564,"value":935},{"type":559,"tag":590,"props":1255,"children":1256},{"style":921},[1257],{"type":564,"value":1258}," null",{"type":559,"tag":590,"props":1260,"children":1261},{"style":778},[1262],{"type":564,"value":1045},{"type":559,"tag":590,"props":1264,"children":1266},{"class":592,"line":1265},27,[1267,1271,1276,1280,1284,1288,1292],{"type":559,"tag":590,"props":1268,"children":1269},{"style":921},[1270],{"type":564,"value":1091},{"type":559,"tag":590,"props":1272,"children":1273},{"style":806},[1274],{"type":564,"value":1275}," current",{"type":559,"tag":590,"props":1277,"children":1278},{"style":778},[1279],{"type":564,"value":935},{"type":559,"tag":590,"props":1281,"children":1282},{"style":806},[1283],{"type":564,"value":1096},{"type":559,"tag":590,"props":1285,"children":1286},{"style":778},[1287],{"type":564,"value":1026},{"type":559,"tag":590,"props":1289,"children":1290},{"style":806},[1291],{"type":564,"value":1031},{"type":559,"tag":590,"props":1293,"children":1294},{"style":778},[1295],{"type":564,"value":1045},{"type":559,"tag":590,"props":1297,"children":1299},{"class":592,"line":1298},28,[1300,1304,1308,1312,1316,1320,1324,1328,1332,1336,1340,1344,1348,1353,1357,1361,1365,1369,1373],{"type":559,"tag":590,"props":1301,"children":1302},{"style":784},[1303],{"type":564,"value":1117},{"type":559,"tag":590,"props":1305,"children":1306},{"style":778},[1307],{"type":564,"value":945},{"type":559,"tag":590,"props":1309,"children":1310},{"style":921},[1311],{"type":564,"value":1126},{"type":559,"tag":590,"props":1313,"children":1314},{"style":806},[1315],{"type":564,"value":1131},{"type":559,"tag":590,"props":1317,"children":1318},{"style":778},[1319],{"type":564,"value":935},{"type":559,"tag":590,"props":1321,"children":1322},{"style":1138},[1323],{"type":564,"value":1141},{"type":559,"tag":590,"props":1325,"children":1326},{"style":778},[1327],{"type":564,"value":1146},{"type":559,"tag":590,"props":1329,"children":1330},{"style":806},[1331],{"type":564,"value":1131},{"type":559,"tag":590,"props":1333,"children":1334},{"style":778},[1335],{"type":564,"value":1155},{"type":559,"tag":590,"props":1337,"children":1338},{"style":806},[1339],{"type":564,"value":969},{"type":559,"tag":590,"props":1341,"children":1342},{"style":921},[1343],{"type":564,"value":1164},{"type":559,"tag":590,"props":1345,"children":1346},{"style":806},[1347],{"type":564,"value":960},{"type":559,"tag":590,"props":1349,"children":1350},{"style":921},[1351],{"type":564,"value":1352}," +",{"type":559,"tag":590,"props":1354,"children":1355},{"style":1138},[1356],{"type":564,"value":1169},{"type":559,"tag":590,"props":1358,"children":1359},{"style":778},[1360],{"type":564,"value":1146},{"type":559,"tag":590,"props":1362,"children":1363},{"style":806},[1364],{"type":564,"value":1131},{"type":559,"tag":590,"props":1366,"children":1367},{"style":921},[1368],{"type":564,"value":1182},{"type":559,"tag":590,"props":1370,"children":1371},{"style":778},[1372],{"type":564,"value":974},{"type":559,"tag":590,"props":1374,"children":1375},{"style":778},[1376],{"type":564,"value":979},{"type":559,"tag":590,"props":1378,"children":1380},{"class":592,"line":1379},29,[1381,1386,1391,1395,1399,1403,1407],{"type":559,"tag":590,"props":1382,"children":1383},{"style":921},[1384],{"type":564,"value":1385},"    const",{"type":559,"tag":590,"props":1387,"children":1388},{"style":806},[1389],{"type":564,"value":1390}," next",{"type":559,"tag":590,"props":1392,"children":1393},{"style":778},[1394],{"type":564,"value":935},{"type":559,"tag":590,"props":1396,"children":1397},{"style":806},[1398],{"type":564,"value":1275},{"type":559,"tag":590,"props":1400,"children":1401},{"style":778},[1402],{"type":564,"value":1026},{"type":559,"tag":590,"props":1404,"children":1405},{"style":806},[1406],{"type":564,"value":1031},{"type":559,"tag":590,"props":1408,"children":1409},{"style":778},[1410],{"type":564,"value":1045},{"type":559,"tag":590,"props":1412,"children":1414},{"class":592,"line":1413},30,[1415,1420,1424,1428,1432,1436],{"type":559,"tag":590,"props":1416,"children":1417},{"style":806},[1418],{"type":564,"value":1419},"    current",{"type":559,"tag":590,"props":1421,"children":1422},{"style":778},[1423],{"type":564,"value":1026},{"type":559,"tag":590,"props":1425,"children":1426},{"style":806},[1427],{"type":564,"value":1031},{"type":559,"tag":590,"props":1429,"children":1430},{"style":778},[1431],{"type":564,"value":935},{"type":559,"tag":590,"props":1433,"children":1434},{"style":806},[1435],{"type":564,"value":1249},{"type":559,"tag":590,"props":1437,"children":1438},{"style":778},[1439],{"type":564,"value":1045},{"type":559,"tag":590,"props":1441,"children":1443},{"class":592,"line":1442},31,[1444,1449,1453,1457],{"type":559,"tag":590,"props":1445,"children":1446},{"style":806},[1447],{"type":564,"value":1448},"    prev",{"type":559,"tag":590,"props":1450,"children":1451},{"style":778},[1452],{"type":564,"value":935},{"type":559,"tag":590,"props":1454,"children":1455},{"style":806},[1456],{"type":564,"value":1275},{"type":559,"tag":590,"props":1458,"children":1459},{"style":778},[1460],{"type":564,"value":1045},{"type":559,"tag":590,"props":1462,"children":1464},{"class":592,"line":1463},32,[1465,1469,1473,1477],{"type":559,"tag":590,"props":1466,"children":1467},{"style":806},[1468],{"type":564,"value":1419},{"type":559,"tag":590,"props":1470,"children":1471},{"style":778},[1472],{"type":564,"value":935},{"type":559,"tag":590,"props":1474,"children":1475},{"style":806},[1476],{"type":564,"value":1390},{"type":559,"tag":590,"props":1478,"children":1479},{"style":778},[1480],{"type":564,"value":1045},{"type":559,"tag":590,"props":1482,"children":1484},{"class":592,"line":1483},33,[1485],{"type":559,"tag":590,"props":1486,"children":1487},{"style":778},[1488],{"type":564,"value":1228},{"type":559,"tag":590,"props":1490,"children":1492},{"class":592,"line":1491},34,[1493],{"type":559,"tag":590,"props":1494,"children":1495},{"emptyLinePlaceholder":1052},[1496],{"type":564,"value":1055},{"type":559,"tag":590,"props":1498,"children":1500},{"class":592,"line":1499},35,[1501],{"type":559,"tag":590,"props":1502,"children":1503},{"style":702},[1504],{"type":564,"value":1505},"  // p0 指向 prev\n",{"type":559,"tag":590,"props":1507,"children":1509},{"class":592,"line":1508},36,[1510],{"type":559,"tag":590,"props":1511,"children":1512},{"style":702},[1513],{"type":564,"value":1514},"  // p0 的 next 指向 current\n",{"type":559,"tag":590,"props":1516,"children":1518},{"class":592,"line":1517},37,[1519,1524,1528,1532,1536,1540,1544,1548],{"type":559,"tag":590,"props":1520,"children":1521},{"style":806},[1522],{"type":564,"value":1523},"  p0",{"type":559,"tag":590,"props":1525,"children":1526},{"style":778},[1527],{"type":564,"value":1026},{"type":559,"tag":590,"props":1529,"children":1530},{"style":806},[1531],{"type":564,"value":1031},{"type":559,"tag":590,"props":1533,"children":1534},{"style":778},[1535],{"type":564,"value":1026},{"type":559,"tag":590,"props":1537,"children":1538},{"style":806},[1539],{"type":564,"value":1031},{"type":559,"tag":590,"props":1541,"children":1542},{"style":778},[1543],{"type":564,"value":935},{"type":559,"tag":590,"props":1545,"children":1546},{"style":806},[1547],{"type":564,"value":1275},{"type":559,"tag":590,"props":1549,"children":1550},{"style":778},[1551],{"type":564,"value":1045},{"type":559,"tag":590,"props":1553,"children":1555},{"class":592,"line":1554},38,[1556,1560,1564,1568,1572,1576],{"type":559,"tag":590,"props":1557,"children":1558},{"style":806},[1559],{"type":564,"value":1523},{"type":559,"tag":590,"props":1561,"children":1562},{"style":778},[1563],{"type":564,"value":1026},{"type":559,"tag":590,"props":1565,"children":1566},{"style":806},[1567],{"type":564,"value":1031},{"type":559,"tag":590,"props":1569,"children":1570},{"style":778},[1571],{"type":564,"value":935},{"type":559,"tag":590,"props":1573,"children":1574},{"style":806},[1575],{"type":564,"value":1249},{"type":559,"tag":590,"props":1577,"children":1578},{"style":778},[1579],{"type":564,"value":1045},{"type":559,"tag":590,"props":1581,"children":1583},{"class":592,"line":1582},39,[1584],{"type":559,"tag":590,"props":1585,"children":1586},{"emptyLinePlaceholder":1052},[1587],{"type":564,"value":1055},{"type":559,"tag":590,"props":1589,"children":1591},{"class":592,"line":1590},40,[1592,1597,1601,1605,1609],{"type":559,"tag":590,"props":1593,"children":1594},{"style":784},[1595],{"type":564,"value":1596},"  return",{"type":559,"tag":590,"props":1598,"children":1599},{"style":806},[1600],{"type":564,"value":993},{"type":559,"tag":590,"props":1602,"children":1603},{"style":778},[1604],{"type":564,"value":1026},{"type":559,"tag":590,"props":1606,"children":1607},{"style":806},[1608],{"type":564,"value":1031},{"type":559,"tag":590,"props":1610,"children":1611},{"style":778},[1612],{"type":564,"value":1045},{"type":559,"tag":590,"props":1614,"children":1616},{"class":592,"line":1615},41,[1617],{"type":559,"tag":590,"props":1618,"children":1619},{"style":778},[1620],{"type":564,"value":1621},"};\n",{"type":559,"tag":1623,"props":1624,"children":1625},"style",{},[1626],{"type":564,"value":1627},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":734,"depth":734,"links":1629},[1630,1631],{"id":675,"depth":602,"text":675},{"id":685,"depth":602,"text":685},"markdown","content:1.algorithm:3.leetcode:3.major:92.reverse-linked-list-ii.md","content","1.algorithm/3.leetcode/3.major/92.reverse-linked-list-ii.md","md",[1638,1640],{"_path":141,"title":140,"description":1639},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":147,"title":146,"description":1641},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1715008124773]