[{"data":1,"prerenderedAt":1639},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-linked-list-ii":546,"/algorithm/leetcode/major/reverse-linked-list-ii-surround":1634},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":144,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":143,"description":550,"url":551,"body":552,"_type":1629,"_id":1630,"_source":1631,"_file":1632,"_extension":1633},"major",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":553,"children":554,"toc":1625},"root",[555,562,567,576,606,611,634,639,664,669,675,680,685,1619],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"示例 1：",{"type":556,"tag":557,"props":568,"children":569},{},[570],{"type":556,"tag":571,"props":572,"children":575},"img",{"alt":573,"src":574},"rev2ex2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.92_rev2ex2.png",[],{"type":556,"tag":577,"props":578,"children":581},"pre",{"className":579,"code":580,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[582],{"type":556,"tag":583,"props":584,"children":585},"code",{"__ignoreMap":549},[586,597],{"type":556,"tag":587,"props":588,"children":591},"span",{"class":589,"line":590},"line",1,[592],{"type":556,"tag":587,"props":593,"children":594},{},[595],{"type":561,"value":596},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":556,"tag":587,"props":598,"children":600},{"class":589,"line":599},2,[601],{"type":556,"tag":587,"props":602,"children":603},{},[604],{"type":561,"value":605},"输出：[1,4,3,2,5]\n",{"type":556,"tag":557,"props":607,"children":608},{},[609],{"type":561,"value":610},"示例 2：",{"type":556,"tag":577,"props":612,"children":614},{"className":579,"code":613,"language":561,"meta":549,"style":549},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[615],{"type":556,"tag":583,"props":616,"children":617},{"__ignoreMap":549},[618,626],{"type":556,"tag":587,"props":619,"children":620},{"class":589,"line":590},[621],{"type":556,"tag":587,"props":622,"children":623},{},[624],{"type":561,"value":625},"输入：head = [5], left = 1, right = 1\n",{"type":556,"tag":587,"props":627,"children":628},{"class":589,"line":599},[629],{"type":556,"tag":587,"props":630,"children":631},{},[632],{"type":561,"value":633},"输出：[5]\n",{"type":556,"tag":557,"props":635,"children":636},{},[637],{"type":561,"value":638},"提示：",{"type":556,"tag":640,"props":641,"children":642},"ul",{},[643,649,654,659],{"type":556,"tag":644,"props":645,"children":646},"li",{},[647],{"type":561,"value":648},"链表中节点数目为 n",{"type":556,"tag":644,"props":650,"children":651},{},[652],{"type":561,"value":653},"1 \u003C= n \u003C= 500",{"type":556,"tag":644,"props":655,"children":656},{},[657],{"type":561,"value":658},"-500 \u003C= Node.val \u003C= 500",{"type":556,"tag":644,"props":660,"children":661},{},[662],{"type":561,"value":663},"1 \u003C= left \u003C= right \u003C= n",{"type":556,"tag":557,"props":665,"children":666},{},[667],{"type":561,"value":668},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":556,"tag":670,"props":671,"children":673},"h2",{"id":672},"解题思路",[674],{"type":561,"value":672},{"type":556,"tag":557,"props":676,"children":677},{},[678],{"type":561,"value":679},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":556,"tag":670,"props":681,"children":683},{"id":682},"实现",[684],{"type":561,"value":682},{"type":556,"tag":577,"props":686,"children":690},{"className":687,"code":688,"language":689,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[691],{"type":556,"tag":583,"props":692,"children":693},{"__ignoreMap":549},[694,703,711,720,729,738,747,756,764,807,841,874,904,912,977,1010,1043,1053,1062,1071,1080,1106,1188,1217,1226,1234,1260,1293,1374,1408,1437,1458,1478,1486,1494,1503,1512,1549,1577,1585,1610],{"type":556,"tag":587,"props":695,"children":696},{"class":589,"line":590},[697],{"type":556,"tag":587,"props":698,"children":700},{"style":699},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[701],{"type":561,"value":702},"/**\n",{"type":556,"tag":587,"props":704,"children":705},{"class":589,"line":599},[706],{"type":556,"tag":587,"props":707,"children":708},{"style":699},[709],{"type":561,"value":710}," * Definition for singly-linked list.\n",{"type":556,"tag":587,"props":712,"children":714},{"class":589,"line":713},3,[715],{"type":556,"tag":587,"props":716,"children":717},{"style":699},[718],{"type":561,"value":719}," * function ListNode(val, next) {\n",{"type":556,"tag":587,"props":721,"children":723},{"class":589,"line":722},4,[724],{"type":556,"tag":587,"props":725,"children":726},{"style":699},[727],{"type":561,"value":728}," *     this.val = (val===undefined ? 0 : val)\n",{"type":556,"tag":587,"props":730,"children":732},{"class":589,"line":731},5,[733],{"type":556,"tag":587,"props":734,"children":735},{"style":699},[736],{"type":561,"value":737}," *     this.next = (next===undefined ? null : next)\n",{"type":556,"tag":587,"props":739,"children":741},{"class":589,"line":740},6,[742],{"type":556,"tag":587,"props":743,"children":744},{"style":699},[745],{"type":561,"value":746}," * }\n",{"type":556,"tag":587,"props":748,"children":750},{"class":589,"line":749},7,[751],{"type":556,"tag":587,"props":752,"children":753},{"style":699},[754],{"type":561,"value":755}," */\n",{"type":556,"tag":587,"props":757,"children":759},{"class":589,"line":758},8,[760],{"type":556,"tag":587,"props":761,"children":762},{"style":699},[763],{"type":561,"value":702},{"type":556,"tag":587,"props":765,"children":767},{"class":589,"line":766},9,[768,773,779,785,790,796,801],{"type":556,"tag":587,"props":769,"children":770},{"style":699},[771],{"type":561,"value":772}," * ",{"type":556,"tag":587,"props":774,"children":776},{"style":775},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[777],{"type":561,"value":778},"@",{"type":556,"tag":587,"props":780,"children":782},{"style":781},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[783],{"type":561,"value":784},"param",{"type":556,"tag":587,"props":786,"children":787},{"style":775},[788],{"type":561,"value":789}," {",{"type":556,"tag":587,"props":791,"children":793},{"style":792},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[794],{"type":561,"value":795},"ListNode",{"type":556,"tag":587,"props":797,"children":798},{"style":775},[799],{"type":561,"value":800},"}",{"type":556,"tag":587,"props":802,"children":804},{"style":803},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[805],{"type":561,"value":806}," head\n",{"type":556,"tag":587,"props":808,"children":810},{"class":589,"line":809},10,[811,815,819,823,827,832,836],{"type":556,"tag":587,"props":812,"children":813},{"style":699},[814],{"type":561,"value":772},{"type":556,"tag":587,"props":816,"children":817},{"style":775},[818],{"type":561,"value":778},{"type":556,"tag":587,"props":820,"children":821},{"style":781},[822],{"type":561,"value":784},{"type":556,"tag":587,"props":824,"children":825},{"style":775},[826],{"type":561,"value":789},{"type":556,"tag":587,"props":828,"children":829},{"style":792},[830],{"type":561,"value":831},"number",{"type":556,"tag":587,"props":833,"children":834},{"style":775},[835],{"type":561,"value":800},{"type":556,"tag":587,"props":837,"children":838},{"style":803},[839],{"type":561,"value":840}," left\n",{"type":556,"tag":587,"props":842,"children":844},{"class":589,"line":843},11,[845,849,853,857,861,865,869],{"type":556,"tag":587,"props":846,"children":847},{"style":699},[848],{"type":561,"value":772},{"type":556,"tag":587,"props":850,"children":851},{"style":775},[852],{"type":561,"value":778},{"type":556,"tag":587,"props":854,"children":855},{"style":781},[856],{"type":561,"value":784},{"type":556,"tag":587,"props":858,"children":859},{"style":775},[860],{"type":561,"value":789},{"type":556,"tag":587,"props":862,"children":863},{"style":792},[864],{"type":561,"value":831},{"type":556,"tag":587,"props":866,"children":867},{"style":775},[868],{"type":561,"value":800},{"type":556,"tag":587,"props":870,"children":871},{"style":803},[872],{"type":561,"value":873}," right\n",{"type":556,"tag":587,"props":875,"children":877},{"class":589,"line":876},12,[878,882,886,891,895,899],{"type":556,"tag":587,"props":879,"children":880},{"style":699},[881],{"type":561,"value":772},{"type":556,"tag":587,"props":883,"children":884},{"style":775},[885],{"type":561,"value":778},{"type":556,"tag":587,"props":887,"children":888},{"style":781},[889],{"type":561,"value":890},"return",{"type":556,"tag":587,"props":892,"children":893},{"style":775},[894],{"type":561,"value":789},{"type":556,"tag":587,"props":896,"children":897},{"style":792},[898],{"type":561,"value":795},{"type":556,"tag":587,"props":900,"children":901},{"style":775},[902],{"type":561,"value":903},"}\n",{"type":556,"tag":587,"props":905,"children":907},{"class":589,"line":906},13,[908],{"type":556,"tag":587,"props":909,"children":910},{"style":699},[911],{"type":561,"value":755},{"type":556,"tag":587,"props":913,"children":915},{"class":589,"line":914},14,[916,922,928,933,938,943,948,953,958,962,967,972],{"type":556,"tag":587,"props":917,"children":919},{"style":918},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[920],{"type":561,"value":921},"var",{"type":556,"tag":587,"props":923,"children":925},{"style":924},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[926],{"type":561,"value":927}," reverseBetween",{"type":556,"tag":587,"props":929,"children":930},{"style":775},[931],{"type":561,"value":932}," =",{"type":556,"tag":587,"props":934,"children":935},{"style":918},[936],{"type":561,"value":937}," function",{"type":556,"tag":587,"props":939,"children":940},{"style":775},[941],{"type":561,"value":942}," (",{"type":556,"tag":587,"props":944,"children":945},{"style":803},[946],{"type":561,"value":947},"head",{"type":556,"tag":587,"props":949,"children":950},{"style":775},[951],{"type":561,"value":952},",",{"type":556,"tag":587,"props":954,"children":955},{"style":803},[956],{"type":561,"value":957}," left",{"type":556,"tag":587,"props":959,"children":960},{"style":775},[961],{"type":561,"value":952},{"type":556,"tag":587,"props":963,"children":964},{"style":803},[965],{"type":561,"value":966}," right",{"type":556,"tag":587,"props":968,"children":969},{"style":775},[970],{"type":561,"value":971},")",{"type":556,"tag":587,"props":973,"children":974},{"style":775},[975],{"type":561,"value":976}," {\n",{"type":556,"tag":587,"props":978,"children":980},{"class":589,"line":979},15,[981,986,991,995,1000,1005],{"type":556,"tag":587,"props":982,"children":983},{"style":918},[984],{"type":561,"value":985},"  const",{"type":556,"tag":587,"props":987,"children":988},{"style":803},[989],{"type":561,"value":990}," dummy",{"type":556,"tag":587,"props":992,"children":993},{"style":775},[994],{"type":561,"value":932},{"type":556,"tag":587,"props":996,"children":997},{"style":918},[998],{"type":561,"value":999}," new",{"type":556,"tag":587,"props":1001,"children":1002},{"style":924},[1003],{"type":561,"value":1004}," ListNode",{"type":556,"tag":587,"props":1006,"children":1007},{"style":775},[1008],{"type":561,"value":1009},"();\n",{"type":556,"tag":587,"props":1011,"children":1013},{"class":589,"line":1012},16,[1014,1019,1024,1029,1033,1038],{"type":556,"tag":587,"props":1015,"children":1016},{"style":803},[1017],{"type":561,"value":1018},"  dummy",{"type":556,"tag":587,"props":1020,"children":1021},{"style":775},[1022],{"type":561,"value":1023},".",{"type":556,"tag":587,"props":1025,"children":1026},{"style":803},[1027],{"type":561,"value":1028},"next",{"type":556,"tag":587,"props":1030,"children":1031},{"style":775},[1032],{"type":561,"value":932},{"type":556,"tag":587,"props":1034,"children":1035},{"style":803},[1036],{"type":561,"value":1037}," head",{"type":556,"tag":587,"props":1039,"children":1040},{"style":775},[1041],{"type":561,"value":1042},";\n",{"type":556,"tag":587,"props":1044,"children":1046},{"class":589,"line":1045},17,[1047],{"type":556,"tag":587,"props":1048,"children":1050},{"emptyLinePlaceholder":1049},true,[1051],{"type":561,"value":1052},"\n",{"type":556,"tag":587,"props":1054,"children":1056},{"class":589,"line":1055},18,[1057],{"type":556,"tag":587,"props":1058,"children":1059},{"style":699},[1060],{"type":561,"value":1061},"  // p0 代表反转中间段的上一个节点\n",{"type":556,"tag":587,"props":1063,"children":1065},{"class":589,"line":1064},19,[1066],{"type":556,"tag":587,"props":1067,"children":1068},{"style":699},[1069],{"type":561,"value":1070},"  // left = 1 时，构造哨兵节点\n",{"type":556,"tag":587,"props":1072,"children":1074},{"class":589,"line":1073},20,[1075],{"type":556,"tag":587,"props":1076,"children":1077},{"style":699},[1078],{"type":561,"value":1079},"  // 循环后，到达反转后的上一个节点\n",{"type":556,"tag":587,"props":1081,"children":1083},{"class":589,"line":1082},21,[1084,1089,1094,1098,1102],{"type":556,"tag":587,"props":1085,"children":1086},{"style":918},[1087],{"type":561,"value":1088},"  let",{"type":556,"tag":587,"props":1090,"children":1091},{"style":803},[1092],{"type":561,"value":1093}," p0",{"type":556,"tag":587,"props":1095,"children":1096},{"style":775},[1097],{"type":561,"value":932},{"type":556,"tag":587,"props":1099,"children":1100},{"style":803},[1101],{"type":561,"value":990},{"type":556,"tag":587,"props":1103,"children":1104},{"style":775},[1105],{"type":561,"value":1042},{"type":556,"tag":587,"props":1107,"children":1109},{"class":589,"line":1108},22,[1110,1115,1119,1124,1129,1133,1139,1144,1148,1153,1157,1162,1167,1171,1175,1180,1184],{"type":556,"tag":587,"props":1111,"children":1112},{"style":781},[1113],{"type":561,"value":1114},"  for",{"type":556,"tag":587,"props":1116,"children":1117},{"style":775},[1118],{"type":561,"value":942},{"type":556,"tag":587,"props":1120,"children":1121},{"style":918},[1122],{"type":561,"value":1123},"let",{"type":556,"tag":587,"props":1125,"children":1126},{"style":803},[1127],{"type":561,"value":1128}," i",{"type":556,"tag":587,"props":1130,"children":1131},{"style":775},[1132],{"type":561,"value":932},{"type":556,"tag":587,"props":1134,"children":1136},{"style":1135},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1137],{"type":561,"value":1138}," 0",{"type":556,"tag":587,"props":1140,"children":1141},{"style":775},[1142],{"type":561,"value":1143},";",{"type":556,"tag":587,"props":1145,"children":1146},{"style":803},[1147],{"type":561,"value":1128},{"type":556,"tag":587,"props":1149,"children":1150},{"style":775},[1151],{"type":561,"value":1152}," \u003C",{"type":556,"tag":587,"props":1154,"children":1155},{"style":803},[1156],{"type":561,"value":957},{"type":556,"tag":587,"props":1158,"children":1159},{"style":918},[1160],{"type":561,"value":1161}," -",{"type":556,"tag":587,"props":1163,"children":1164},{"style":1135},[1165],{"type":561,"value":1166}," 1",{"type":556,"tag":587,"props":1168,"children":1169},{"style":775},[1170],{"type":561,"value":1143},{"type":556,"tag":587,"props":1172,"children":1173},{"style":803},[1174],{"type":561,"value":1128},{"type":556,"tag":587,"props":1176,"children":1177},{"style":918},[1178],{"type":561,"value":1179},"++",{"type":556,"tag":587,"props":1181,"children":1182},{"style":775},[1183],{"type":561,"value":971},{"type":556,"tag":587,"props":1185,"children":1186},{"style":775},[1187],{"type":561,"value":976},{"type":556,"tag":587,"props":1189,"children":1191},{"class":589,"line":1190},23,[1192,1197,1201,1205,1209,1213],{"type":556,"tag":587,"props":1193,"children":1194},{"style":803},[1195],{"type":561,"value":1196},"    p0",{"type":556,"tag":587,"props":1198,"children":1199},{"style":775},[1200],{"type":561,"value":932},{"type":556,"tag":587,"props":1202,"children":1203},{"style":803},[1204],{"type":561,"value":1093},{"type":556,"tag":587,"props":1206,"children":1207},{"style":775},[1208],{"type":561,"value":1023},{"type":556,"tag":587,"props":1210,"children":1211},{"style":803},[1212],{"type":561,"value":1028},{"type":556,"tag":587,"props":1214,"children":1215},{"style":775},[1216],{"type":561,"value":1042},{"type":556,"tag":587,"props":1218,"children":1220},{"class":589,"line":1219},24,[1221],{"type":556,"tag":587,"props":1222,"children":1223},{"style":775},[1224],{"type":561,"value":1225},"  }\n",{"type":556,"tag":587,"props":1227,"children":1229},{"class":589,"line":1228},25,[1230],{"type":556,"tag":587,"props":1231,"children":1232},{"emptyLinePlaceholder":1049},[1233],{"type":561,"value":1052},{"type":556,"tag":587,"props":1235,"children":1237},{"class":589,"line":1236},26,[1238,1242,1247,1251,1256],{"type":556,"tag":587,"props":1239,"children":1240},{"style":918},[1241],{"type":561,"value":1088},{"type":556,"tag":587,"props":1243,"children":1244},{"style":803},[1245],{"type":561,"value":1246}," prev",{"type":556,"tag":587,"props":1248,"children":1249},{"style":775},[1250],{"type":561,"value":932},{"type":556,"tag":587,"props":1252,"children":1253},{"style":918},[1254],{"type":561,"value":1255}," null",{"type":556,"tag":587,"props":1257,"children":1258},{"style":775},[1259],{"type":561,"value":1042},{"type":556,"tag":587,"props":1261,"children":1263},{"class":589,"line":1262},27,[1264,1268,1273,1277,1281,1285,1289],{"type":556,"tag":587,"props":1265,"children":1266},{"style":918},[1267],{"type":561,"value":1088},{"type":556,"tag":587,"props":1269,"children":1270},{"style":803},[1271],{"type":561,"value":1272}," current",{"type":556,"tag":587,"props":1274,"children":1275},{"style":775},[1276],{"type":561,"value":932},{"type":556,"tag":587,"props":1278,"children":1279},{"style":803},[1280],{"type":561,"value":1093},{"type":556,"tag":587,"props":1282,"children":1283},{"style":775},[1284],{"type":561,"value":1023},{"type":556,"tag":587,"props":1286,"children":1287},{"style":803},[1288],{"type":561,"value":1028},{"type":556,"tag":587,"props":1290,"children":1291},{"style":775},[1292],{"type":561,"value":1042},{"type":556,"tag":587,"props":1294,"children":1296},{"class":589,"line":1295},28,[1297,1301,1305,1309,1313,1317,1321,1325,1329,1333,1337,1341,1345,1350,1354,1358,1362,1366,1370],{"type":556,"tag":587,"props":1298,"children":1299},{"style":781},[1300],{"type":561,"value":1114},{"type":556,"tag":587,"props":1302,"children":1303},{"style":775},[1304],{"type":561,"value":942},{"type":556,"tag":587,"props":1306,"children":1307},{"style":918},[1308],{"type":561,"value":1123},{"type":556,"tag":587,"props":1310,"children":1311},{"style":803},[1312],{"type":561,"value":1128},{"type":556,"tag":587,"props":1314,"children":1315},{"style":775},[1316],{"type":561,"value":932},{"type":556,"tag":587,"props":1318,"children":1319},{"style":1135},[1320],{"type":561,"value":1138},{"type":556,"tag":587,"props":1322,"children":1323},{"style":775},[1324],{"type":561,"value":1143},{"type":556,"tag":587,"props":1326,"children":1327},{"style":803},[1328],{"type":561,"value":1128},{"type":556,"tag":587,"props":1330,"children":1331},{"style":775},[1332],{"type":561,"value":1152},{"type":556,"tag":587,"props":1334,"children":1335},{"style":803},[1336],{"type":561,"value":966},{"type":556,"tag":587,"props":1338,"children":1339},{"style":918},[1340],{"type":561,"value":1161},{"type":556,"tag":587,"props":1342,"children":1343},{"style":803},[1344],{"type":561,"value":957},{"type":556,"tag":587,"props":1346,"children":1347},{"style":918},[1348],{"type":561,"value":1349}," +",{"type":556,"tag":587,"props":1351,"children":1352},{"style":1135},[1353],{"type":561,"value":1166},{"type":556,"tag":587,"props":1355,"children":1356},{"style":775},[1357],{"type":561,"value":1143},{"type":556,"tag":587,"props":1359,"children":1360},{"style":803},[1361],{"type":561,"value":1128},{"type":556,"tag":587,"props":1363,"children":1364},{"style":918},[1365],{"type":561,"value":1179},{"type":556,"tag":587,"props":1367,"children":1368},{"style":775},[1369],{"type":561,"value":971},{"type":556,"tag":587,"props":1371,"children":1372},{"style":775},[1373],{"type":561,"value":976},{"type":556,"tag":587,"props":1375,"children":1377},{"class":589,"line":1376},29,[1378,1383,1388,1392,1396,1400,1404],{"type":556,"tag":587,"props":1379,"children":1380},{"style":918},[1381],{"type":561,"value":1382},"    const",{"type":556,"tag":587,"props":1384,"children":1385},{"style":803},[1386],{"type":561,"value":1387}," next",{"type":556,"tag":587,"props":1389,"children":1390},{"style":775},[1391],{"type":561,"value":932},{"type":556,"tag":587,"props":1393,"children":1394},{"style":803},[1395],{"type":561,"value":1272},{"type":556,"tag":587,"props":1397,"children":1398},{"style":775},[1399],{"type":561,"value":1023},{"type":556,"tag":587,"props":1401,"children":1402},{"style":803},[1403],{"type":561,"value":1028},{"type":556,"tag":587,"props":1405,"children":1406},{"style":775},[1407],{"type":561,"value":1042},{"type":556,"tag":587,"props":1409,"children":1411},{"class":589,"line":1410},30,[1412,1417,1421,1425,1429,1433],{"type":556,"tag":587,"props":1413,"children":1414},{"style":803},[1415],{"type":561,"value":1416},"    current",{"type":556,"tag":587,"props":1418,"children":1419},{"style":775},[1420],{"type":561,"value":1023},{"type":556,"tag":587,"props":1422,"children":1423},{"style":803},[1424],{"type":561,"value":1028},{"type":556,"tag":587,"props":1426,"children":1427},{"style":775},[1428],{"type":561,"value":932},{"type":556,"tag":587,"props":1430,"children":1431},{"style":803},[1432],{"type":561,"value":1246},{"type":556,"tag":587,"props":1434,"children":1435},{"style":775},[1436],{"type":561,"value":1042},{"type":556,"tag":587,"props":1438,"children":1440},{"class":589,"line":1439},31,[1441,1446,1450,1454],{"type":556,"tag":587,"props":1442,"children":1443},{"style":803},[1444],{"type":561,"value":1445},"    prev",{"type":556,"tag":587,"props":1447,"children":1448},{"style":775},[1449],{"type":561,"value":932},{"type":556,"tag":587,"props":1451,"children":1452},{"style":803},[1453],{"type":561,"value":1272},{"type":556,"tag":587,"props":1455,"children":1456},{"style":775},[1457],{"type":561,"value":1042},{"type":556,"tag":587,"props":1459,"children":1461},{"class":589,"line":1460},32,[1462,1466,1470,1474],{"type":556,"tag":587,"props":1463,"children":1464},{"style":803},[1465],{"type":561,"value":1416},{"type":556,"tag":587,"props":1467,"children":1468},{"style":775},[1469],{"type":561,"value":932},{"type":556,"tag":587,"props":1471,"children":1472},{"style":803},[1473],{"type":561,"value":1387},{"type":556,"tag":587,"props":1475,"children":1476},{"style":775},[1477],{"type":561,"value":1042},{"type":556,"tag":587,"props":1479,"children":1481},{"class":589,"line":1480},33,[1482],{"type":556,"tag":587,"props":1483,"children":1484},{"style":775},[1485],{"type":561,"value":1225},{"type":556,"tag":587,"props":1487,"children":1489},{"class":589,"line":1488},34,[1490],{"type":556,"tag":587,"props":1491,"children":1492},{"emptyLinePlaceholder":1049},[1493],{"type":561,"value":1052},{"type":556,"tag":587,"props":1495,"children":1497},{"class":589,"line":1496},35,[1498],{"type":556,"tag":587,"props":1499,"children":1500},{"style":699},[1501],{"type":561,"value":1502},"  // p0 指向 prev\n",{"type":556,"tag":587,"props":1504,"children":1506},{"class":589,"line":1505},36,[1507],{"type":556,"tag":587,"props":1508,"children":1509},{"style":699},[1510],{"type":561,"value":1511},"  // p0 的 next 指向 current\n",{"type":556,"tag":587,"props":1513,"children":1515},{"class":589,"line":1514},37,[1516,1521,1525,1529,1533,1537,1541,1545],{"type":556,"tag":587,"props":1517,"children":1518},{"style":803},[1519],{"type":561,"value":1520},"  p0",{"type":556,"tag":587,"props":1522,"children":1523},{"style":775},[1524],{"type":561,"value":1023},{"type":556,"tag":587,"props":1526,"children":1527},{"style":803},[1528],{"type":561,"value":1028},{"type":556,"tag":587,"props":1530,"children":1531},{"style":775},[1532],{"type":561,"value":1023},{"type":556,"tag":587,"props":1534,"children":1535},{"style":803},[1536],{"type":561,"value":1028},{"type":556,"tag":587,"props":1538,"children":1539},{"style":775},[1540],{"type":561,"value":932},{"type":556,"tag":587,"props":1542,"children":1543},{"style":803},[1544],{"type":561,"value":1272},{"type":556,"tag":587,"props":1546,"children":1547},{"style":775},[1548],{"type":561,"value":1042},{"type":556,"tag":587,"props":1550,"children":1552},{"class":589,"line":1551},38,[1553,1557,1561,1565,1569,1573],{"type":556,"tag":587,"props":1554,"children":1555},{"style":803},[1556],{"type":561,"value":1520},{"type":556,"tag":587,"props":1558,"children":1559},{"style":775},[1560],{"type":561,"value":1023},{"type":556,"tag":587,"props":1562,"children":1563},{"style":803},[1564],{"type":561,"value":1028},{"type":556,"tag":587,"props":1566,"children":1567},{"style":775},[1568],{"type":561,"value":932},{"type":556,"tag":587,"props":1570,"children":1571},{"style":803},[1572],{"type":561,"value":1246},{"type":556,"tag":587,"props":1574,"children":1575},{"style":775},[1576],{"type":561,"value":1042},{"type":556,"tag":587,"props":1578,"children":1580},{"class":589,"line":1579},39,[1581],{"type":556,"tag":587,"props":1582,"children":1583},{"emptyLinePlaceholder":1049},[1584],{"type":561,"value":1052},{"type":556,"tag":587,"props":1586,"children":1588},{"class":589,"line":1587},40,[1589,1594,1598,1602,1606],{"type":556,"tag":587,"props":1590,"children":1591},{"style":781},[1592],{"type":561,"value":1593},"  return",{"type":556,"tag":587,"props":1595,"children":1596},{"style":803},[1597],{"type":561,"value":990},{"type":556,"tag":587,"props":1599,"children":1600},{"style":775},[1601],{"type":561,"value":1023},{"type":556,"tag":587,"props":1603,"children":1604},{"style":803},[1605],{"type":561,"value":1028},{"type":556,"tag":587,"props":1607,"children":1608},{"style":775},[1609],{"type":561,"value":1042},{"type":556,"tag":587,"props":1611,"children":1613},{"class":589,"line":1612},41,[1614],{"type":556,"tag":587,"props":1615,"children":1616},{"style":775},[1617],{"type":561,"value":1618},"};\n",{"type":556,"tag":1620,"props":1621,"children":1622},"style",{},[1623],{"type":561,"value":1624},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":731,"depth":731,"links":1626},[1627,1628],{"id":672,"depth":599,"text":672},{"id":682,"depth":599,"text":682},"markdown","content:1.algorithm:3.leetcode:3.major:92.reverse-linked-list-ii.md","content","1.algorithm/3.leetcode/3.major/92.reverse-linked-list-ii.md","md",[1635,1637],{"_path":141,"title":140,"description":1636},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":147,"title":146,"description":1638},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1714279833436]