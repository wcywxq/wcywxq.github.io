[{"data":1,"prerenderedAt":1617},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-linked-list-ii":524,"/algorithm/leetcode/major/reverse-linked-list-ii-surround":1612},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":144,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":143,"description":528,"url":529,"body":530,"_type":1607,"_id":1608,"_source":1609,"_file":1610,"_extension":1611},"major",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":531,"children":532,"toc":1603},"root",[533,540,545,554,584,589,612,617,642,647,653,658,663,1597],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"示例 1：",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":534,"tag":549,"props":550,"children":553},"img",{"alt":551,"src":552},"rev2ex2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.92_rev2ex2.png",[],{"type":534,"tag":555,"props":556,"children":559},"pre",{"className":557,"code":558,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[560],{"type":534,"tag":561,"props":562,"children":563},"code",{"__ignoreMap":527},[564,575],{"type":534,"tag":565,"props":566,"children":569},"span",{"class":567,"line":568},"line",1,[570],{"type":534,"tag":565,"props":571,"children":572},{},[573],{"type":539,"value":574},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":534,"tag":565,"props":576,"children":578},{"class":567,"line":577},2,[579],{"type":534,"tag":565,"props":580,"children":581},{},[582],{"type":539,"value":583},"输出：[1,4,3,2,5]\n",{"type":534,"tag":535,"props":585,"children":586},{},[587],{"type":539,"value":588},"示例 2：",{"type":534,"tag":555,"props":590,"children":592},{"className":557,"code":591,"language":539,"meta":527,"style":527},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[593],{"type":534,"tag":561,"props":594,"children":595},{"__ignoreMap":527},[596,604],{"type":534,"tag":565,"props":597,"children":598},{"class":567,"line":568},[599],{"type":534,"tag":565,"props":600,"children":601},{},[602],{"type":539,"value":603},"输入：head = [5], left = 1, right = 1\n",{"type":534,"tag":565,"props":605,"children":606},{"class":567,"line":577},[607],{"type":534,"tag":565,"props":608,"children":609},{},[610],{"type":539,"value":611},"输出：[5]\n",{"type":534,"tag":535,"props":613,"children":614},{},[615],{"type":539,"value":616},"提示：",{"type":534,"tag":618,"props":619,"children":620},"ul",{},[621,627,632,637],{"type":534,"tag":622,"props":623,"children":624},"li",{},[625],{"type":539,"value":626},"链表中节点数目为 n",{"type":534,"tag":622,"props":628,"children":629},{},[630],{"type":539,"value":631},"1 \u003C= n \u003C= 500",{"type":534,"tag":622,"props":633,"children":634},{},[635],{"type":539,"value":636},"-500 \u003C= Node.val \u003C= 500",{"type":534,"tag":622,"props":638,"children":639},{},[640],{"type":539,"value":641},"1 \u003C= left \u003C= right \u003C= n",{"type":534,"tag":535,"props":643,"children":644},{},[645],{"type":539,"value":646},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":534,"tag":648,"props":649,"children":651},"h2",{"id":650},"解题思路",[652],{"type":539,"value":650},{"type":534,"tag":535,"props":654,"children":655},{},[656],{"type":539,"value":657},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":534,"tag":648,"props":659,"children":661},{"id":660},"实现",[662],{"type":539,"value":660},{"type":534,"tag":555,"props":664,"children":668},{"className":665,"code":666,"language":667,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[669],{"type":534,"tag":561,"props":670,"children":671},{"__ignoreMap":527},[672,681,689,698,707,716,725,734,742,785,819,852,882,890,955,988,1021,1031,1040,1049,1058,1084,1166,1195,1204,1212,1238,1271,1352,1386,1415,1436,1456,1464,1472,1481,1490,1527,1555,1563,1588],{"type":534,"tag":565,"props":673,"children":674},{"class":567,"line":568},[675],{"type":534,"tag":565,"props":676,"children":678},{"style":677},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[679],{"type":539,"value":680},"/**\n",{"type":534,"tag":565,"props":682,"children":683},{"class":567,"line":577},[684],{"type":534,"tag":565,"props":685,"children":686},{"style":677},[687],{"type":539,"value":688}," * Definition for singly-linked list.\n",{"type":534,"tag":565,"props":690,"children":692},{"class":567,"line":691},3,[693],{"type":534,"tag":565,"props":694,"children":695},{"style":677},[696],{"type":539,"value":697}," * function ListNode(val, next) {\n",{"type":534,"tag":565,"props":699,"children":701},{"class":567,"line":700},4,[702],{"type":534,"tag":565,"props":703,"children":704},{"style":677},[705],{"type":539,"value":706}," *     this.val = (val===undefined ? 0 : val)\n",{"type":534,"tag":565,"props":708,"children":710},{"class":567,"line":709},5,[711],{"type":534,"tag":565,"props":712,"children":713},{"style":677},[714],{"type":539,"value":715}," *     this.next = (next===undefined ? null : next)\n",{"type":534,"tag":565,"props":717,"children":719},{"class":567,"line":718},6,[720],{"type":534,"tag":565,"props":721,"children":722},{"style":677},[723],{"type":539,"value":724}," * }\n",{"type":534,"tag":565,"props":726,"children":728},{"class":567,"line":727},7,[729],{"type":534,"tag":565,"props":730,"children":731},{"style":677},[732],{"type":539,"value":733}," */\n",{"type":534,"tag":565,"props":735,"children":737},{"class":567,"line":736},8,[738],{"type":534,"tag":565,"props":739,"children":740},{"style":677},[741],{"type":539,"value":680},{"type":534,"tag":565,"props":743,"children":745},{"class":567,"line":744},9,[746,751,757,763,768,774,779],{"type":534,"tag":565,"props":747,"children":748},{"style":677},[749],{"type":539,"value":750}," * ",{"type":534,"tag":565,"props":752,"children":754},{"style":753},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[755],{"type":539,"value":756},"@",{"type":534,"tag":565,"props":758,"children":760},{"style":759},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[761],{"type":539,"value":762},"param",{"type":534,"tag":565,"props":764,"children":765},{"style":753},[766],{"type":539,"value":767}," {",{"type":534,"tag":565,"props":769,"children":771},{"style":770},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[772],{"type":539,"value":773},"ListNode",{"type":534,"tag":565,"props":775,"children":776},{"style":753},[777],{"type":539,"value":778},"}",{"type":534,"tag":565,"props":780,"children":782},{"style":781},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[783],{"type":539,"value":784}," head\n",{"type":534,"tag":565,"props":786,"children":788},{"class":567,"line":787},10,[789,793,797,801,805,810,814],{"type":534,"tag":565,"props":790,"children":791},{"style":677},[792],{"type":539,"value":750},{"type":534,"tag":565,"props":794,"children":795},{"style":753},[796],{"type":539,"value":756},{"type":534,"tag":565,"props":798,"children":799},{"style":759},[800],{"type":539,"value":762},{"type":534,"tag":565,"props":802,"children":803},{"style":753},[804],{"type":539,"value":767},{"type":534,"tag":565,"props":806,"children":807},{"style":770},[808],{"type":539,"value":809},"number",{"type":534,"tag":565,"props":811,"children":812},{"style":753},[813],{"type":539,"value":778},{"type":534,"tag":565,"props":815,"children":816},{"style":781},[817],{"type":539,"value":818}," left\n",{"type":534,"tag":565,"props":820,"children":822},{"class":567,"line":821},11,[823,827,831,835,839,843,847],{"type":534,"tag":565,"props":824,"children":825},{"style":677},[826],{"type":539,"value":750},{"type":534,"tag":565,"props":828,"children":829},{"style":753},[830],{"type":539,"value":756},{"type":534,"tag":565,"props":832,"children":833},{"style":759},[834],{"type":539,"value":762},{"type":534,"tag":565,"props":836,"children":837},{"style":753},[838],{"type":539,"value":767},{"type":534,"tag":565,"props":840,"children":841},{"style":770},[842],{"type":539,"value":809},{"type":534,"tag":565,"props":844,"children":845},{"style":753},[846],{"type":539,"value":778},{"type":534,"tag":565,"props":848,"children":849},{"style":781},[850],{"type":539,"value":851}," right\n",{"type":534,"tag":565,"props":853,"children":855},{"class":567,"line":854},12,[856,860,864,869,873,877],{"type":534,"tag":565,"props":857,"children":858},{"style":677},[859],{"type":539,"value":750},{"type":534,"tag":565,"props":861,"children":862},{"style":753},[863],{"type":539,"value":756},{"type":534,"tag":565,"props":865,"children":866},{"style":759},[867],{"type":539,"value":868},"return",{"type":534,"tag":565,"props":870,"children":871},{"style":753},[872],{"type":539,"value":767},{"type":534,"tag":565,"props":874,"children":875},{"style":770},[876],{"type":539,"value":773},{"type":534,"tag":565,"props":878,"children":879},{"style":753},[880],{"type":539,"value":881},"}\n",{"type":534,"tag":565,"props":883,"children":885},{"class":567,"line":884},13,[886],{"type":534,"tag":565,"props":887,"children":888},{"style":677},[889],{"type":539,"value":733},{"type":534,"tag":565,"props":891,"children":893},{"class":567,"line":892},14,[894,900,906,911,916,921,926,931,936,940,945,950],{"type":534,"tag":565,"props":895,"children":897},{"style":896},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[898],{"type":539,"value":899},"var",{"type":534,"tag":565,"props":901,"children":903},{"style":902},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[904],{"type":539,"value":905}," reverseBetween",{"type":534,"tag":565,"props":907,"children":908},{"style":753},[909],{"type":539,"value":910}," =",{"type":534,"tag":565,"props":912,"children":913},{"style":896},[914],{"type":539,"value":915}," function",{"type":534,"tag":565,"props":917,"children":918},{"style":753},[919],{"type":539,"value":920}," (",{"type":534,"tag":565,"props":922,"children":923},{"style":781},[924],{"type":539,"value":925},"head",{"type":534,"tag":565,"props":927,"children":928},{"style":753},[929],{"type":539,"value":930},",",{"type":534,"tag":565,"props":932,"children":933},{"style":781},[934],{"type":539,"value":935}," left",{"type":534,"tag":565,"props":937,"children":938},{"style":753},[939],{"type":539,"value":930},{"type":534,"tag":565,"props":941,"children":942},{"style":781},[943],{"type":539,"value":944}," right",{"type":534,"tag":565,"props":946,"children":947},{"style":753},[948],{"type":539,"value":949},")",{"type":534,"tag":565,"props":951,"children":952},{"style":753},[953],{"type":539,"value":954}," {\n",{"type":534,"tag":565,"props":956,"children":958},{"class":567,"line":957},15,[959,964,969,973,978,983],{"type":534,"tag":565,"props":960,"children":961},{"style":896},[962],{"type":539,"value":963},"  const",{"type":534,"tag":565,"props":965,"children":966},{"style":781},[967],{"type":539,"value":968}," dummy",{"type":534,"tag":565,"props":970,"children":971},{"style":753},[972],{"type":539,"value":910},{"type":534,"tag":565,"props":974,"children":975},{"style":896},[976],{"type":539,"value":977}," new",{"type":534,"tag":565,"props":979,"children":980},{"style":902},[981],{"type":539,"value":982}," ListNode",{"type":534,"tag":565,"props":984,"children":985},{"style":753},[986],{"type":539,"value":987},"();\n",{"type":534,"tag":565,"props":989,"children":991},{"class":567,"line":990},16,[992,997,1002,1007,1011,1016],{"type":534,"tag":565,"props":993,"children":994},{"style":781},[995],{"type":539,"value":996},"  dummy",{"type":534,"tag":565,"props":998,"children":999},{"style":753},[1000],{"type":539,"value":1001},".",{"type":534,"tag":565,"props":1003,"children":1004},{"style":781},[1005],{"type":539,"value":1006},"next",{"type":534,"tag":565,"props":1008,"children":1009},{"style":753},[1010],{"type":539,"value":910},{"type":534,"tag":565,"props":1012,"children":1013},{"style":781},[1014],{"type":539,"value":1015}," head",{"type":534,"tag":565,"props":1017,"children":1018},{"style":753},[1019],{"type":539,"value":1020},";\n",{"type":534,"tag":565,"props":1022,"children":1024},{"class":567,"line":1023},17,[1025],{"type":534,"tag":565,"props":1026,"children":1028},{"emptyLinePlaceholder":1027},true,[1029],{"type":539,"value":1030},"\n",{"type":534,"tag":565,"props":1032,"children":1034},{"class":567,"line":1033},18,[1035],{"type":534,"tag":565,"props":1036,"children":1037},{"style":677},[1038],{"type":539,"value":1039},"  // p0 代表反转中间段的上一个节点\n",{"type":534,"tag":565,"props":1041,"children":1043},{"class":567,"line":1042},19,[1044],{"type":534,"tag":565,"props":1045,"children":1046},{"style":677},[1047],{"type":539,"value":1048},"  // left = 1 时，构造哨兵节点\n",{"type":534,"tag":565,"props":1050,"children":1052},{"class":567,"line":1051},20,[1053],{"type":534,"tag":565,"props":1054,"children":1055},{"style":677},[1056],{"type":539,"value":1057},"  // 循环后，到达反转后的上一个节点\n",{"type":534,"tag":565,"props":1059,"children":1061},{"class":567,"line":1060},21,[1062,1067,1072,1076,1080],{"type":534,"tag":565,"props":1063,"children":1064},{"style":896},[1065],{"type":539,"value":1066},"  let",{"type":534,"tag":565,"props":1068,"children":1069},{"style":781},[1070],{"type":539,"value":1071}," p0",{"type":534,"tag":565,"props":1073,"children":1074},{"style":753},[1075],{"type":539,"value":910},{"type":534,"tag":565,"props":1077,"children":1078},{"style":781},[1079],{"type":539,"value":968},{"type":534,"tag":565,"props":1081,"children":1082},{"style":753},[1083],{"type":539,"value":1020},{"type":534,"tag":565,"props":1085,"children":1087},{"class":567,"line":1086},22,[1088,1093,1097,1102,1107,1111,1117,1122,1126,1131,1135,1140,1145,1149,1153,1158,1162],{"type":534,"tag":565,"props":1089,"children":1090},{"style":759},[1091],{"type":539,"value":1092},"  for",{"type":534,"tag":565,"props":1094,"children":1095},{"style":753},[1096],{"type":539,"value":920},{"type":534,"tag":565,"props":1098,"children":1099},{"style":896},[1100],{"type":539,"value":1101},"let",{"type":534,"tag":565,"props":1103,"children":1104},{"style":781},[1105],{"type":539,"value":1106}," i",{"type":534,"tag":565,"props":1108,"children":1109},{"style":753},[1110],{"type":539,"value":910},{"type":534,"tag":565,"props":1112,"children":1114},{"style":1113},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1115],{"type":539,"value":1116}," 0",{"type":534,"tag":565,"props":1118,"children":1119},{"style":753},[1120],{"type":539,"value":1121},";",{"type":534,"tag":565,"props":1123,"children":1124},{"style":781},[1125],{"type":539,"value":1106},{"type":534,"tag":565,"props":1127,"children":1128},{"style":753},[1129],{"type":539,"value":1130}," \u003C",{"type":534,"tag":565,"props":1132,"children":1133},{"style":781},[1134],{"type":539,"value":935},{"type":534,"tag":565,"props":1136,"children":1137},{"style":896},[1138],{"type":539,"value":1139}," -",{"type":534,"tag":565,"props":1141,"children":1142},{"style":1113},[1143],{"type":539,"value":1144}," 1",{"type":534,"tag":565,"props":1146,"children":1147},{"style":753},[1148],{"type":539,"value":1121},{"type":534,"tag":565,"props":1150,"children":1151},{"style":781},[1152],{"type":539,"value":1106},{"type":534,"tag":565,"props":1154,"children":1155},{"style":896},[1156],{"type":539,"value":1157},"++",{"type":534,"tag":565,"props":1159,"children":1160},{"style":753},[1161],{"type":539,"value":949},{"type":534,"tag":565,"props":1163,"children":1164},{"style":753},[1165],{"type":539,"value":954},{"type":534,"tag":565,"props":1167,"children":1169},{"class":567,"line":1168},23,[1170,1175,1179,1183,1187,1191],{"type":534,"tag":565,"props":1171,"children":1172},{"style":781},[1173],{"type":539,"value":1174},"    p0",{"type":534,"tag":565,"props":1176,"children":1177},{"style":753},[1178],{"type":539,"value":910},{"type":534,"tag":565,"props":1180,"children":1181},{"style":781},[1182],{"type":539,"value":1071},{"type":534,"tag":565,"props":1184,"children":1185},{"style":753},[1186],{"type":539,"value":1001},{"type":534,"tag":565,"props":1188,"children":1189},{"style":781},[1190],{"type":539,"value":1006},{"type":534,"tag":565,"props":1192,"children":1193},{"style":753},[1194],{"type":539,"value":1020},{"type":534,"tag":565,"props":1196,"children":1198},{"class":567,"line":1197},24,[1199],{"type":534,"tag":565,"props":1200,"children":1201},{"style":753},[1202],{"type":539,"value":1203},"  }\n",{"type":534,"tag":565,"props":1205,"children":1207},{"class":567,"line":1206},25,[1208],{"type":534,"tag":565,"props":1209,"children":1210},{"emptyLinePlaceholder":1027},[1211],{"type":539,"value":1030},{"type":534,"tag":565,"props":1213,"children":1215},{"class":567,"line":1214},26,[1216,1220,1225,1229,1234],{"type":534,"tag":565,"props":1217,"children":1218},{"style":896},[1219],{"type":539,"value":1066},{"type":534,"tag":565,"props":1221,"children":1222},{"style":781},[1223],{"type":539,"value":1224}," prev",{"type":534,"tag":565,"props":1226,"children":1227},{"style":753},[1228],{"type":539,"value":910},{"type":534,"tag":565,"props":1230,"children":1231},{"style":896},[1232],{"type":539,"value":1233}," null",{"type":534,"tag":565,"props":1235,"children":1236},{"style":753},[1237],{"type":539,"value":1020},{"type":534,"tag":565,"props":1239,"children":1241},{"class":567,"line":1240},27,[1242,1246,1251,1255,1259,1263,1267],{"type":534,"tag":565,"props":1243,"children":1244},{"style":896},[1245],{"type":539,"value":1066},{"type":534,"tag":565,"props":1247,"children":1248},{"style":781},[1249],{"type":539,"value":1250}," current",{"type":534,"tag":565,"props":1252,"children":1253},{"style":753},[1254],{"type":539,"value":910},{"type":534,"tag":565,"props":1256,"children":1257},{"style":781},[1258],{"type":539,"value":1071},{"type":534,"tag":565,"props":1260,"children":1261},{"style":753},[1262],{"type":539,"value":1001},{"type":534,"tag":565,"props":1264,"children":1265},{"style":781},[1266],{"type":539,"value":1006},{"type":534,"tag":565,"props":1268,"children":1269},{"style":753},[1270],{"type":539,"value":1020},{"type":534,"tag":565,"props":1272,"children":1274},{"class":567,"line":1273},28,[1275,1279,1283,1287,1291,1295,1299,1303,1307,1311,1315,1319,1323,1328,1332,1336,1340,1344,1348],{"type":534,"tag":565,"props":1276,"children":1277},{"style":759},[1278],{"type":539,"value":1092},{"type":534,"tag":565,"props":1280,"children":1281},{"style":753},[1282],{"type":539,"value":920},{"type":534,"tag":565,"props":1284,"children":1285},{"style":896},[1286],{"type":539,"value":1101},{"type":534,"tag":565,"props":1288,"children":1289},{"style":781},[1290],{"type":539,"value":1106},{"type":534,"tag":565,"props":1292,"children":1293},{"style":753},[1294],{"type":539,"value":910},{"type":534,"tag":565,"props":1296,"children":1297},{"style":1113},[1298],{"type":539,"value":1116},{"type":534,"tag":565,"props":1300,"children":1301},{"style":753},[1302],{"type":539,"value":1121},{"type":534,"tag":565,"props":1304,"children":1305},{"style":781},[1306],{"type":539,"value":1106},{"type":534,"tag":565,"props":1308,"children":1309},{"style":753},[1310],{"type":539,"value":1130},{"type":534,"tag":565,"props":1312,"children":1313},{"style":781},[1314],{"type":539,"value":944},{"type":534,"tag":565,"props":1316,"children":1317},{"style":896},[1318],{"type":539,"value":1139},{"type":534,"tag":565,"props":1320,"children":1321},{"style":781},[1322],{"type":539,"value":935},{"type":534,"tag":565,"props":1324,"children":1325},{"style":896},[1326],{"type":539,"value":1327}," +",{"type":534,"tag":565,"props":1329,"children":1330},{"style":1113},[1331],{"type":539,"value":1144},{"type":534,"tag":565,"props":1333,"children":1334},{"style":753},[1335],{"type":539,"value":1121},{"type":534,"tag":565,"props":1337,"children":1338},{"style":781},[1339],{"type":539,"value":1106},{"type":534,"tag":565,"props":1341,"children":1342},{"style":896},[1343],{"type":539,"value":1157},{"type":534,"tag":565,"props":1345,"children":1346},{"style":753},[1347],{"type":539,"value":949},{"type":534,"tag":565,"props":1349,"children":1350},{"style":753},[1351],{"type":539,"value":954},{"type":534,"tag":565,"props":1353,"children":1355},{"class":567,"line":1354},29,[1356,1361,1366,1370,1374,1378,1382],{"type":534,"tag":565,"props":1357,"children":1358},{"style":896},[1359],{"type":539,"value":1360},"    const",{"type":534,"tag":565,"props":1362,"children":1363},{"style":781},[1364],{"type":539,"value":1365}," next",{"type":534,"tag":565,"props":1367,"children":1368},{"style":753},[1369],{"type":539,"value":910},{"type":534,"tag":565,"props":1371,"children":1372},{"style":781},[1373],{"type":539,"value":1250},{"type":534,"tag":565,"props":1375,"children":1376},{"style":753},[1377],{"type":539,"value":1001},{"type":534,"tag":565,"props":1379,"children":1380},{"style":781},[1381],{"type":539,"value":1006},{"type":534,"tag":565,"props":1383,"children":1384},{"style":753},[1385],{"type":539,"value":1020},{"type":534,"tag":565,"props":1387,"children":1389},{"class":567,"line":1388},30,[1390,1395,1399,1403,1407,1411],{"type":534,"tag":565,"props":1391,"children":1392},{"style":781},[1393],{"type":539,"value":1394},"    current",{"type":534,"tag":565,"props":1396,"children":1397},{"style":753},[1398],{"type":539,"value":1001},{"type":534,"tag":565,"props":1400,"children":1401},{"style":781},[1402],{"type":539,"value":1006},{"type":534,"tag":565,"props":1404,"children":1405},{"style":753},[1406],{"type":539,"value":910},{"type":534,"tag":565,"props":1408,"children":1409},{"style":781},[1410],{"type":539,"value":1224},{"type":534,"tag":565,"props":1412,"children":1413},{"style":753},[1414],{"type":539,"value":1020},{"type":534,"tag":565,"props":1416,"children":1418},{"class":567,"line":1417},31,[1419,1424,1428,1432],{"type":534,"tag":565,"props":1420,"children":1421},{"style":781},[1422],{"type":539,"value":1423},"    prev",{"type":534,"tag":565,"props":1425,"children":1426},{"style":753},[1427],{"type":539,"value":910},{"type":534,"tag":565,"props":1429,"children":1430},{"style":781},[1431],{"type":539,"value":1250},{"type":534,"tag":565,"props":1433,"children":1434},{"style":753},[1435],{"type":539,"value":1020},{"type":534,"tag":565,"props":1437,"children":1439},{"class":567,"line":1438},32,[1440,1444,1448,1452],{"type":534,"tag":565,"props":1441,"children":1442},{"style":781},[1443],{"type":539,"value":1394},{"type":534,"tag":565,"props":1445,"children":1446},{"style":753},[1447],{"type":539,"value":910},{"type":534,"tag":565,"props":1449,"children":1450},{"style":781},[1451],{"type":539,"value":1365},{"type":534,"tag":565,"props":1453,"children":1454},{"style":753},[1455],{"type":539,"value":1020},{"type":534,"tag":565,"props":1457,"children":1459},{"class":567,"line":1458},33,[1460],{"type":534,"tag":565,"props":1461,"children":1462},{"style":753},[1463],{"type":539,"value":1203},{"type":534,"tag":565,"props":1465,"children":1467},{"class":567,"line":1466},34,[1468],{"type":534,"tag":565,"props":1469,"children":1470},{"emptyLinePlaceholder":1027},[1471],{"type":539,"value":1030},{"type":534,"tag":565,"props":1473,"children":1475},{"class":567,"line":1474},35,[1476],{"type":534,"tag":565,"props":1477,"children":1478},{"style":677},[1479],{"type":539,"value":1480},"  // p0 指向 prev\n",{"type":534,"tag":565,"props":1482,"children":1484},{"class":567,"line":1483},36,[1485],{"type":534,"tag":565,"props":1486,"children":1487},{"style":677},[1488],{"type":539,"value":1489},"  // p0 的 next 指向 current\n",{"type":534,"tag":565,"props":1491,"children":1493},{"class":567,"line":1492},37,[1494,1499,1503,1507,1511,1515,1519,1523],{"type":534,"tag":565,"props":1495,"children":1496},{"style":781},[1497],{"type":539,"value":1498},"  p0",{"type":534,"tag":565,"props":1500,"children":1501},{"style":753},[1502],{"type":539,"value":1001},{"type":534,"tag":565,"props":1504,"children":1505},{"style":781},[1506],{"type":539,"value":1006},{"type":534,"tag":565,"props":1508,"children":1509},{"style":753},[1510],{"type":539,"value":1001},{"type":534,"tag":565,"props":1512,"children":1513},{"style":781},[1514],{"type":539,"value":1006},{"type":534,"tag":565,"props":1516,"children":1517},{"style":753},[1518],{"type":539,"value":910},{"type":534,"tag":565,"props":1520,"children":1521},{"style":781},[1522],{"type":539,"value":1250},{"type":534,"tag":565,"props":1524,"children":1525},{"style":753},[1526],{"type":539,"value":1020},{"type":534,"tag":565,"props":1528,"children":1530},{"class":567,"line":1529},38,[1531,1535,1539,1543,1547,1551],{"type":534,"tag":565,"props":1532,"children":1533},{"style":781},[1534],{"type":539,"value":1498},{"type":534,"tag":565,"props":1536,"children":1537},{"style":753},[1538],{"type":539,"value":1001},{"type":534,"tag":565,"props":1540,"children":1541},{"style":781},[1542],{"type":539,"value":1006},{"type":534,"tag":565,"props":1544,"children":1545},{"style":753},[1546],{"type":539,"value":910},{"type":534,"tag":565,"props":1548,"children":1549},{"style":781},[1550],{"type":539,"value":1224},{"type":534,"tag":565,"props":1552,"children":1553},{"style":753},[1554],{"type":539,"value":1020},{"type":534,"tag":565,"props":1556,"children":1558},{"class":567,"line":1557},39,[1559],{"type":534,"tag":565,"props":1560,"children":1561},{"emptyLinePlaceholder":1027},[1562],{"type":539,"value":1030},{"type":534,"tag":565,"props":1564,"children":1566},{"class":567,"line":1565},40,[1567,1572,1576,1580,1584],{"type":534,"tag":565,"props":1568,"children":1569},{"style":759},[1570],{"type":539,"value":1571},"  return",{"type":534,"tag":565,"props":1573,"children":1574},{"style":781},[1575],{"type":539,"value":968},{"type":534,"tag":565,"props":1577,"children":1578},{"style":753},[1579],{"type":539,"value":1001},{"type":534,"tag":565,"props":1581,"children":1582},{"style":781},[1583],{"type":539,"value":1006},{"type":534,"tag":565,"props":1585,"children":1586},{"style":753},[1587],{"type":539,"value":1020},{"type":534,"tag":565,"props":1589,"children":1591},{"class":567,"line":1590},41,[1592],{"type":534,"tag":565,"props":1593,"children":1594},{"style":753},[1595],{"type":539,"value":1596},"};\n",{"type":534,"tag":1598,"props":1599,"children":1600},"style",{},[1601],{"type":539,"value":1602},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":709,"depth":709,"links":1604},[1605,1606],{"id":650,"depth":577,"text":650},{"id":660,"depth":577,"text":660},"markdown","content:1.algorithm:3.leetcode:3.major:92.reverse-linked-list-ii.md","content","1.algorithm/3.leetcode/3.major/92.reverse-linked-list-ii.md","md",[1613,1615],{"_path":141,"title":140,"description":1614},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":147,"title":146,"description":1616},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1714096143064]