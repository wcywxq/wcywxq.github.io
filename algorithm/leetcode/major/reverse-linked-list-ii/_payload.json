[{"data":1,"prerenderedAt":1652},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-linked-list-ii":559,"/algorithm/leetcode/major/reverse-linked-list-ii-surround":1647},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":144,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":143,"description":563,"url":564,"body":565,"_type":1642,"_id":1643,"_source":1644,"_file":1645,"_extension":1646},"major",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":566,"children":567,"toc":1638},"root",[568,575,580,589,619,624,647,652,677,682,688,693,698,1632],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"示例 1：",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":569,"tag":584,"props":585,"children":588},"img",{"alt":586,"src":587},"rev2ex2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.92_rev2ex2.png",[],{"type":569,"tag":590,"props":591,"children":594},"pre",{"className":592,"code":593,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[595],{"type":569,"tag":596,"props":597,"children":598},"code",{"__ignoreMap":562},[599,610],{"type":569,"tag":600,"props":601,"children":604},"span",{"class":602,"line":603},"line",1,[605],{"type":569,"tag":600,"props":606,"children":607},{},[608],{"type":574,"value":609},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":569,"tag":600,"props":611,"children":613},{"class":602,"line":612},2,[614],{"type":569,"tag":600,"props":615,"children":616},{},[617],{"type":574,"value":618},"输出：[1,4,3,2,5]\n",{"type":569,"tag":570,"props":620,"children":621},{},[622],{"type":574,"value":623},"示例 2：",{"type":569,"tag":590,"props":625,"children":627},{"className":592,"code":626,"language":574,"meta":562,"style":562},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[628],{"type":569,"tag":596,"props":629,"children":630},{"__ignoreMap":562},[631,639],{"type":569,"tag":600,"props":632,"children":633},{"class":602,"line":603},[634],{"type":569,"tag":600,"props":635,"children":636},{},[637],{"type":574,"value":638},"输入：head = [5], left = 1, right = 1\n",{"type":569,"tag":600,"props":640,"children":641},{"class":602,"line":612},[642],{"type":569,"tag":600,"props":643,"children":644},{},[645],{"type":574,"value":646},"输出：[5]\n",{"type":569,"tag":570,"props":648,"children":649},{},[650],{"type":574,"value":651},"提示：",{"type":569,"tag":653,"props":654,"children":655},"ul",{},[656,662,667,672],{"type":569,"tag":657,"props":658,"children":659},"li",{},[660],{"type":574,"value":661},"链表中节点数目为 n",{"type":569,"tag":657,"props":663,"children":664},{},[665],{"type":574,"value":666},"1 \u003C= n \u003C= 500",{"type":569,"tag":657,"props":668,"children":669},{},[670],{"type":574,"value":671},"-500 \u003C= Node.val \u003C= 500",{"type":569,"tag":657,"props":673,"children":674},{},[675],{"type":574,"value":676},"1 \u003C= left \u003C= right \u003C= n",{"type":569,"tag":570,"props":678,"children":679},{},[680],{"type":574,"value":681},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":569,"tag":683,"props":684,"children":686},"h2",{"id":685},"解题思路",[687],{"type":574,"value":685},{"type":569,"tag":570,"props":689,"children":690},{},[691],{"type":574,"value":692},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":569,"tag":683,"props":694,"children":696},{"id":695},"实现",[697],{"type":574,"value":695},{"type":569,"tag":590,"props":699,"children":703},{"className":700,"code":701,"language":702,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[704],{"type":569,"tag":596,"props":705,"children":706},{"__ignoreMap":562},[707,716,724,733,742,751,760,769,777,820,854,887,917,925,990,1023,1056,1066,1075,1084,1093,1119,1201,1230,1239,1247,1273,1306,1387,1421,1450,1471,1491,1499,1507,1516,1525,1562,1590,1598,1623],{"type":569,"tag":600,"props":708,"children":709},{"class":602,"line":603},[710],{"type":569,"tag":600,"props":711,"children":713},{"style":712},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[714],{"type":574,"value":715},"/**\n",{"type":569,"tag":600,"props":717,"children":718},{"class":602,"line":612},[719],{"type":569,"tag":600,"props":720,"children":721},{"style":712},[722],{"type":574,"value":723}," * Definition for singly-linked list.\n",{"type":569,"tag":600,"props":725,"children":727},{"class":602,"line":726},3,[728],{"type":569,"tag":600,"props":729,"children":730},{"style":712},[731],{"type":574,"value":732}," * function ListNode(val, next) {\n",{"type":569,"tag":600,"props":734,"children":736},{"class":602,"line":735},4,[737],{"type":569,"tag":600,"props":738,"children":739},{"style":712},[740],{"type":574,"value":741}," *     this.val = (val===undefined ? 0 : val)\n",{"type":569,"tag":600,"props":743,"children":745},{"class":602,"line":744},5,[746],{"type":569,"tag":600,"props":747,"children":748},{"style":712},[749],{"type":574,"value":750}," *     this.next = (next===undefined ? null : next)\n",{"type":569,"tag":600,"props":752,"children":754},{"class":602,"line":753},6,[755],{"type":569,"tag":600,"props":756,"children":757},{"style":712},[758],{"type":574,"value":759}," * }\n",{"type":569,"tag":600,"props":761,"children":763},{"class":602,"line":762},7,[764],{"type":569,"tag":600,"props":765,"children":766},{"style":712},[767],{"type":574,"value":768}," */\n",{"type":569,"tag":600,"props":770,"children":772},{"class":602,"line":771},8,[773],{"type":569,"tag":600,"props":774,"children":775},{"style":712},[776],{"type":574,"value":715},{"type":569,"tag":600,"props":778,"children":780},{"class":602,"line":779},9,[781,786,792,798,803,809,814],{"type":569,"tag":600,"props":782,"children":783},{"style":712},[784],{"type":574,"value":785}," * ",{"type":569,"tag":600,"props":787,"children":789},{"style":788},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[790],{"type":574,"value":791},"@",{"type":569,"tag":600,"props":793,"children":795},{"style":794},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[796],{"type":574,"value":797},"param",{"type":569,"tag":600,"props":799,"children":800},{"style":788},[801],{"type":574,"value":802}," {",{"type":569,"tag":600,"props":804,"children":806},{"style":805},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[807],{"type":574,"value":808},"ListNode",{"type":569,"tag":600,"props":810,"children":811},{"style":788},[812],{"type":574,"value":813},"}",{"type":569,"tag":600,"props":815,"children":817},{"style":816},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[818],{"type":574,"value":819}," head\n",{"type":569,"tag":600,"props":821,"children":823},{"class":602,"line":822},10,[824,828,832,836,840,845,849],{"type":569,"tag":600,"props":825,"children":826},{"style":712},[827],{"type":574,"value":785},{"type":569,"tag":600,"props":829,"children":830},{"style":788},[831],{"type":574,"value":791},{"type":569,"tag":600,"props":833,"children":834},{"style":794},[835],{"type":574,"value":797},{"type":569,"tag":600,"props":837,"children":838},{"style":788},[839],{"type":574,"value":802},{"type":569,"tag":600,"props":841,"children":842},{"style":805},[843],{"type":574,"value":844},"number",{"type":569,"tag":600,"props":846,"children":847},{"style":788},[848],{"type":574,"value":813},{"type":569,"tag":600,"props":850,"children":851},{"style":816},[852],{"type":574,"value":853}," left\n",{"type":569,"tag":600,"props":855,"children":857},{"class":602,"line":856},11,[858,862,866,870,874,878,882],{"type":569,"tag":600,"props":859,"children":860},{"style":712},[861],{"type":574,"value":785},{"type":569,"tag":600,"props":863,"children":864},{"style":788},[865],{"type":574,"value":791},{"type":569,"tag":600,"props":867,"children":868},{"style":794},[869],{"type":574,"value":797},{"type":569,"tag":600,"props":871,"children":872},{"style":788},[873],{"type":574,"value":802},{"type":569,"tag":600,"props":875,"children":876},{"style":805},[877],{"type":574,"value":844},{"type":569,"tag":600,"props":879,"children":880},{"style":788},[881],{"type":574,"value":813},{"type":569,"tag":600,"props":883,"children":884},{"style":816},[885],{"type":574,"value":886}," right\n",{"type":569,"tag":600,"props":888,"children":890},{"class":602,"line":889},12,[891,895,899,904,908,912],{"type":569,"tag":600,"props":892,"children":893},{"style":712},[894],{"type":574,"value":785},{"type":569,"tag":600,"props":896,"children":897},{"style":788},[898],{"type":574,"value":791},{"type":569,"tag":600,"props":900,"children":901},{"style":794},[902],{"type":574,"value":903},"return",{"type":569,"tag":600,"props":905,"children":906},{"style":788},[907],{"type":574,"value":802},{"type":569,"tag":600,"props":909,"children":910},{"style":805},[911],{"type":574,"value":808},{"type":569,"tag":600,"props":913,"children":914},{"style":788},[915],{"type":574,"value":916},"}\n",{"type":569,"tag":600,"props":918,"children":920},{"class":602,"line":919},13,[921],{"type":569,"tag":600,"props":922,"children":923},{"style":712},[924],{"type":574,"value":768},{"type":569,"tag":600,"props":926,"children":928},{"class":602,"line":927},14,[929,935,941,946,951,956,961,966,971,975,980,985],{"type":569,"tag":600,"props":930,"children":932},{"style":931},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[933],{"type":574,"value":934},"var",{"type":569,"tag":600,"props":936,"children":938},{"style":937},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[939],{"type":574,"value":940}," reverseBetween",{"type":569,"tag":600,"props":942,"children":943},{"style":788},[944],{"type":574,"value":945}," =",{"type":569,"tag":600,"props":947,"children":948},{"style":931},[949],{"type":574,"value":950}," function",{"type":569,"tag":600,"props":952,"children":953},{"style":788},[954],{"type":574,"value":955}," (",{"type":569,"tag":600,"props":957,"children":958},{"style":816},[959],{"type":574,"value":960},"head",{"type":569,"tag":600,"props":962,"children":963},{"style":788},[964],{"type":574,"value":965},",",{"type":569,"tag":600,"props":967,"children":968},{"style":816},[969],{"type":574,"value":970}," left",{"type":569,"tag":600,"props":972,"children":973},{"style":788},[974],{"type":574,"value":965},{"type":569,"tag":600,"props":976,"children":977},{"style":816},[978],{"type":574,"value":979}," right",{"type":569,"tag":600,"props":981,"children":982},{"style":788},[983],{"type":574,"value":984},")",{"type":569,"tag":600,"props":986,"children":987},{"style":788},[988],{"type":574,"value":989}," {\n",{"type":569,"tag":600,"props":991,"children":993},{"class":602,"line":992},15,[994,999,1004,1008,1013,1018],{"type":569,"tag":600,"props":995,"children":996},{"style":931},[997],{"type":574,"value":998},"  const",{"type":569,"tag":600,"props":1000,"children":1001},{"style":816},[1002],{"type":574,"value":1003}," dummy",{"type":569,"tag":600,"props":1005,"children":1006},{"style":788},[1007],{"type":574,"value":945},{"type":569,"tag":600,"props":1009,"children":1010},{"style":931},[1011],{"type":574,"value":1012}," new",{"type":569,"tag":600,"props":1014,"children":1015},{"style":937},[1016],{"type":574,"value":1017}," ListNode",{"type":569,"tag":600,"props":1019,"children":1020},{"style":788},[1021],{"type":574,"value":1022},"();\n",{"type":569,"tag":600,"props":1024,"children":1026},{"class":602,"line":1025},16,[1027,1032,1037,1042,1046,1051],{"type":569,"tag":600,"props":1028,"children":1029},{"style":816},[1030],{"type":574,"value":1031},"  dummy",{"type":569,"tag":600,"props":1033,"children":1034},{"style":788},[1035],{"type":574,"value":1036},".",{"type":569,"tag":600,"props":1038,"children":1039},{"style":816},[1040],{"type":574,"value":1041},"next",{"type":569,"tag":600,"props":1043,"children":1044},{"style":788},[1045],{"type":574,"value":945},{"type":569,"tag":600,"props":1047,"children":1048},{"style":816},[1049],{"type":574,"value":1050}," head",{"type":569,"tag":600,"props":1052,"children":1053},{"style":788},[1054],{"type":574,"value":1055},";\n",{"type":569,"tag":600,"props":1057,"children":1059},{"class":602,"line":1058},17,[1060],{"type":569,"tag":600,"props":1061,"children":1063},{"emptyLinePlaceholder":1062},true,[1064],{"type":574,"value":1065},"\n",{"type":569,"tag":600,"props":1067,"children":1069},{"class":602,"line":1068},18,[1070],{"type":569,"tag":600,"props":1071,"children":1072},{"style":712},[1073],{"type":574,"value":1074},"  // p0 代表反转中间段的上一个节点\n",{"type":569,"tag":600,"props":1076,"children":1078},{"class":602,"line":1077},19,[1079],{"type":569,"tag":600,"props":1080,"children":1081},{"style":712},[1082],{"type":574,"value":1083},"  // left = 1 时，构造哨兵节点\n",{"type":569,"tag":600,"props":1085,"children":1087},{"class":602,"line":1086},20,[1088],{"type":569,"tag":600,"props":1089,"children":1090},{"style":712},[1091],{"type":574,"value":1092},"  // 循环后，到达反转后的上一个节点\n",{"type":569,"tag":600,"props":1094,"children":1096},{"class":602,"line":1095},21,[1097,1102,1107,1111,1115],{"type":569,"tag":600,"props":1098,"children":1099},{"style":931},[1100],{"type":574,"value":1101},"  let",{"type":569,"tag":600,"props":1103,"children":1104},{"style":816},[1105],{"type":574,"value":1106}," p0",{"type":569,"tag":600,"props":1108,"children":1109},{"style":788},[1110],{"type":574,"value":945},{"type":569,"tag":600,"props":1112,"children":1113},{"style":816},[1114],{"type":574,"value":1003},{"type":569,"tag":600,"props":1116,"children":1117},{"style":788},[1118],{"type":574,"value":1055},{"type":569,"tag":600,"props":1120,"children":1122},{"class":602,"line":1121},22,[1123,1128,1132,1137,1142,1146,1152,1157,1161,1166,1170,1175,1180,1184,1188,1193,1197],{"type":569,"tag":600,"props":1124,"children":1125},{"style":794},[1126],{"type":574,"value":1127},"  for",{"type":569,"tag":600,"props":1129,"children":1130},{"style":788},[1131],{"type":574,"value":955},{"type":569,"tag":600,"props":1133,"children":1134},{"style":931},[1135],{"type":574,"value":1136},"let",{"type":569,"tag":600,"props":1138,"children":1139},{"style":816},[1140],{"type":574,"value":1141}," i",{"type":569,"tag":600,"props":1143,"children":1144},{"style":788},[1145],{"type":574,"value":945},{"type":569,"tag":600,"props":1147,"children":1149},{"style":1148},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1150],{"type":574,"value":1151}," 0",{"type":569,"tag":600,"props":1153,"children":1154},{"style":788},[1155],{"type":574,"value":1156},";",{"type":569,"tag":600,"props":1158,"children":1159},{"style":816},[1160],{"type":574,"value":1141},{"type":569,"tag":600,"props":1162,"children":1163},{"style":788},[1164],{"type":574,"value":1165}," \u003C",{"type":569,"tag":600,"props":1167,"children":1168},{"style":816},[1169],{"type":574,"value":970},{"type":569,"tag":600,"props":1171,"children":1172},{"style":931},[1173],{"type":574,"value":1174}," -",{"type":569,"tag":600,"props":1176,"children":1177},{"style":1148},[1178],{"type":574,"value":1179}," 1",{"type":569,"tag":600,"props":1181,"children":1182},{"style":788},[1183],{"type":574,"value":1156},{"type":569,"tag":600,"props":1185,"children":1186},{"style":816},[1187],{"type":574,"value":1141},{"type":569,"tag":600,"props":1189,"children":1190},{"style":931},[1191],{"type":574,"value":1192},"++",{"type":569,"tag":600,"props":1194,"children":1195},{"style":788},[1196],{"type":574,"value":984},{"type":569,"tag":600,"props":1198,"children":1199},{"style":788},[1200],{"type":574,"value":989},{"type":569,"tag":600,"props":1202,"children":1204},{"class":602,"line":1203},23,[1205,1210,1214,1218,1222,1226],{"type":569,"tag":600,"props":1206,"children":1207},{"style":816},[1208],{"type":574,"value":1209},"    p0",{"type":569,"tag":600,"props":1211,"children":1212},{"style":788},[1213],{"type":574,"value":945},{"type":569,"tag":600,"props":1215,"children":1216},{"style":816},[1217],{"type":574,"value":1106},{"type":569,"tag":600,"props":1219,"children":1220},{"style":788},[1221],{"type":574,"value":1036},{"type":569,"tag":600,"props":1223,"children":1224},{"style":816},[1225],{"type":574,"value":1041},{"type":569,"tag":600,"props":1227,"children":1228},{"style":788},[1229],{"type":574,"value":1055},{"type":569,"tag":600,"props":1231,"children":1233},{"class":602,"line":1232},24,[1234],{"type":569,"tag":600,"props":1235,"children":1236},{"style":788},[1237],{"type":574,"value":1238},"  }\n",{"type":569,"tag":600,"props":1240,"children":1242},{"class":602,"line":1241},25,[1243],{"type":569,"tag":600,"props":1244,"children":1245},{"emptyLinePlaceholder":1062},[1246],{"type":574,"value":1065},{"type":569,"tag":600,"props":1248,"children":1250},{"class":602,"line":1249},26,[1251,1255,1260,1264,1269],{"type":569,"tag":600,"props":1252,"children":1253},{"style":931},[1254],{"type":574,"value":1101},{"type":569,"tag":600,"props":1256,"children":1257},{"style":816},[1258],{"type":574,"value":1259}," prev",{"type":569,"tag":600,"props":1261,"children":1262},{"style":788},[1263],{"type":574,"value":945},{"type":569,"tag":600,"props":1265,"children":1266},{"style":931},[1267],{"type":574,"value":1268}," null",{"type":569,"tag":600,"props":1270,"children":1271},{"style":788},[1272],{"type":574,"value":1055},{"type":569,"tag":600,"props":1274,"children":1276},{"class":602,"line":1275},27,[1277,1281,1286,1290,1294,1298,1302],{"type":569,"tag":600,"props":1278,"children":1279},{"style":931},[1280],{"type":574,"value":1101},{"type":569,"tag":600,"props":1282,"children":1283},{"style":816},[1284],{"type":574,"value":1285}," current",{"type":569,"tag":600,"props":1287,"children":1288},{"style":788},[1289],{"type":574,"value":945},{"type":569,"tag":600,"props":1291,"children":1292},{"style":816},[1293],{"type":574,"value":1106},{"type":569,"tag":600,"props":1295,"children":1296},{"style":788},[1297],{"type":574,"value":1036},{"type":569,"tag":600,"props":1299,"children":1300},{"style":816},[1301],{"type":574,"value":1041},{"type":569,"tag":600,"props":1303,"children":1304},{"style":788},[1305],{"type":574,"value":1055},{"type":569,"tag":600,"props":1307,"children":1309},{"class":602,"line":1308},28,[1310,1314,1318,1322,1326,1330,1334,1338,1342,1346,1350,1354,1358,1363,1367,1371,1375,1379,1383],{"type":569,"tag":600,"props":1311,"children":1312},{"style":794},[1313],{"type":574,"value":1127},{"type":569,"tag":600,"props":1315,"children":1316},{"style":788},[1317],{"type":574,"value":955},{"type":569,"tag":600,"props":1319,"children":1320},{"style":931},[1321],{"type":574,"value":1136},{"type":569,"tag":600,"props":1323,"children":1324},{"style":816},[1325],{"type":574,"value":1141},{"type":569,"tag":600,"props":1327,"children":1328},{"style":788},[1329],{"type":574,"value":945},{"type":569,"tag":600,"props":1331,"children":1332},{"style":1148},[1333],{"type":574,"value":1151},{"type":569,"tag":600,"props":1335,"children":1336},{"style":788},[1337],{"type":574,"value":1156},{"type":569,"tag":600,"props":1339,"children":1340},{"style":816},[1341],{"type":574,"value":1141},{"type":569,"tag":600,"props":1343,"children":1344},{"style":788},[1345],{"type":574,"value":1165},{"type":569,"tag":600,"props":1347,"children":1348},{"style":816},[1349],{"type":574,"value":979},{"type":569,"tag":600,"props":1351,"children":1352},{"style":931},[1353],{"type":574,"value":1174},{"type":569,"tag":600,"props":1355,"children":1356},{"style":816},[1357],{"type":574,"value":970},{"type":569,"tag":600,"props":1359,"children":1360},{"style":931},[1361],{"type":574,"value":1362}," +",{"type":569,"tag":600,"props":1364,"children":1365},{"style":1148},[1366],{"type":574,"value":1179},{"type":569,"tag":600,"props":1368,"children":1369},{"style":788},[1370],{"type":574,"value":1156},{"type":569,"tag":600,"props":1372,"children":1373},{"style":816},[1374],{"type":574,"value":1141},{"type":569,"tag":600,"props":1376,"children":1377},{"style":931},[1378],{"type":574,"value":1192},{"type":569,"tag":600,"props":1380,"children":1381},{"style":788},[1382],{"type":574,"value":984},{"type":569,"tag":600,"props":1384,"children":1385},{"style":788},[1386],{"type":574,"value":989},{"type":569,"tag":600,"props":1388,"children":1390},{"class":602,"line":1389},29,[1391,1396,1401,1405,1409,1413,1417],{"type":569,"tag":600,"props":1392,"children":1393},{"style":931},[1394],{"type":574,"value":1395},"    const",{"type":569,"tag":600,"props":1397,"children":1398},{"style":816},[1399],{"type":574,"value":1400}," next",{"type":569,"tag":600,"props":1402,"children":1403},{"style":788},[1404],{"type":574,"value":945},{"type":569,"tag":600,"props":1406,"children":1407},{"style":816},[1408],{"type":574,"value":1285},{"type":569,"tag":600,"props":1410,"children":1411},{"style":788},[1412],{"type":574,"value":1036},{"type":569,"tag":600,"props":1414,"children":1415},{"style":816},[1416],{"type":574,"value":1041},{"type":569,"tag":600,"props":1418,"children":1419},{"style":788},[1420],{"type":574,"value":1055},{"type":569,"tag":600,"props":1422,"children":1424},{"class":602,"line":1423},30,[1425,1430,1434,1438,1442,1446],{"type":569,"tag":600,"props":1426,"children":1427},{"style":816},[1428],{"type":574,"value":1429},"    current",{"type":569,"tag":600,"props":1431,"children":1432},{"style":788},[1433],{"type":574,"value":1036},{"type":569,"tag":600,"props":1435,"children":1436},{"style":816},[1437],{"type":574,"value":1041},{"type":569,"tag":600,"props":1439,"children":1440},{"style":788},[1441],{"type":574,"value":945},{"type":569,"tag":600,"props":1443,"children":1444},{"style":816},[1445],{"type":574,"value":1259},{"type":569,"tag":600,"props":1447,"children":1448},{"style":788},[1449],{"type":574,"value":1055},{"type":569,"tag":600,"props":1451,"children":1453},{"class":602,"line":1452},31,[1454,1459,1463,1467],{"type":569,"tag":600,"props":1455,"children":1456},{"style":816},[1457],{"type":574,"value":1458},"    prev",{"type":569,"tag":600,"props":1460,"children":1461},{"style":788},[1462],{"type":574,"value":945},{"type":569,"tag":600,"props":1464,"children":1465},{"style":816},[1466],{"type":574,"value":1285},{"type":569,"tag":600,"props":1468,"children":1469},{"style":788},[1470],{"type":574,"value":1055},{"type":569,"tag":600,"props":1472,"children":1474},{"class":602,"line":1473},32,[1475,1479,1483,1487],{"type":569,"tag":600,"props":1476,"children":1477},{"style":816},[1478],{"type":574,"value":1429},{"type":569,"tag":600,"props":1480,"children":1481},{"style":788},[1482],{"type":574,"value":945},{"type":569,"tag":600,"props":1484,"children":1485},{"style":816},[1486],{"type":574,"value":1400},{"type":569,"tag":600,"props":1488,"children":1489},{"style":788},[1490],{"type":574,"value":1055},{"type":569,"tag":600,"props":1492,"children":1494},{"class":602,"line":1493},33,[1495],{"type":569,"tag":600,"props":1496,"children":1497},{"style":788},[1498],{"type":574,"value":1238},{"type":569,"tag":600,"props":1500,"children":1502},{"class":602,"line":1501},34,[1503],{"type":569,"tag":600,"props":1504,"children":1505},{"emptyLinePlaceholder":1062},[1506],{"type":574,"value":1065},{"type":569,"tag":600,"props":1508,"children":1510},{"class":602,"line":1509},35,[1511],{"type":569,"tag":600,"props":1512,"children":1513},{"style":712},[1514],{"type":574,"value":1515},"  // p0 指向 prev\n",{"type":569,"tag":600,"props":1517,"children":1519},{"class":602,"line":1518},36,[1520],{"type":569,"tag":600,"props":1521,"children":1522},{"style":712},[1523],{"type":574,"value":1524},"  // p0 的 next 指向 current\n",{"type":569,"tag":600,"props":1526,"children":1528},{"class":602,"line":1527},37,[1529,1534,1538,1542,1546,1550,1554,1558],{"type":569,"tag":600,"props":1530,"children":1531},{"style":816},[1532],{"type":574,"value":1533},"  p0",{"type":569,"tag":600,"props":1535,"children":1536},{"style":788},[1537],{"type":574,"value":1036},{"type":569,"tag":600,"props":1539,"children":1540},{"style":816},[1541],{"type":574,"value":1041},{"type":569,"tag":600,"props":1543,"children":1544},{"style":788},[1545],{"type":574,"value":1036},{"type":569,"tag":600,"props":1547,"children":1548},{"style":816},[1549],{"type":574,"value":1041},{"type":569,"tag":600,"props":1551,"children":1552},{"style":788},[1553],{"type":574,"value":945},{"type":569,"tag":600,"props":1555,"children":1556},{"style":816},[1557],{"type":574,"value":1285},{"type":569,"tag":600,"props":1559,"children":1560},{"style":788},[1561],{"type":574,"value":1055},{"type":569,"tag":600,"props":1563,"children":1565},{"class":602,"line":1564},38,[1566,1570,1574,1578,1582,1586],{"type":569,"tag":600,"props":1567,"children":1568},{"style":816},[1569],{"type":574,"value":1533},{"type":569,"tag":600,"props":1571,"children":1572},{"style":788},[1573],{"type":574,"value":1036},{"type":569,"tag":600,"props":1575,"children":1576},{"style":816},[1577],{"type":574,"value":1041},{"type":569,"tag":600,"props":1579,"children":1580},{"style":788},[1581],{"type":574,"value":945},{"type":569,"tag":600,"props":1583,"children":1584},{"style":816},[1585],{"type":574,"value":1259},{"type":569,"tag":600,"props":1587,"children":1588},{"style":788},[1589],{"type":574,"value":1055},{"type":569,"tag":600,"props":1591,"children":1593},{"class":602,"line":1592},39,[1594],{"type":569,"tag":600,"props":1595,"children":1596},{"emptyLinePlaceholder":1062},[1597],{"type":574,"value":1065},{"type":569,"tag":600,"props":1599,"children":1601},{"class":602,"line":1600},40,[1602,1607,1611,1615,1619],{"type":569,"tag":600,"props":1603,"children":1604},{"style":794},[1605],{"type":574,"value":1606},"  return",{"type":569,"tag":600,"props":1608,"children":1609},{"style":816},[1610],{"type":574,"value":1003},{"type":569,"tag":600,"props":1612,"children":1613},{"style":788},[1614],{"type":574,"value":1036},{"type":569,"tag":600,"props":1616,"children":1617},{"style":816},[1618],{"type":574,"value":1041},{"type":569,"tag":600,"props":1620,"children":1621},{"style":788},[1622],{"type":574,"value":1055},{"type":569,"tag":600,"props":1624,"children":1626},{"class":602,"line":1625},41,[1627],{"type":569,"tag":600,"props":1628,"children":1629},{"style":788},[1630],{"type":574,"value":1631},"};\n",{"type":569,"tag":1633,"props":1634,"children":1635},"style",{},[1636],{"type":574,"value":1637},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":744,"depth":744,"links":1639},[1640,1641],{"id":685,"depth":612,"text":685},{"id":695,"depth":612,"text":695},"markdown","content:1.algorithm:3.leetcode:3.major:92.reverse-linked-list-ii.md","content","1.algorithm/3.leetcode/3.major/92.reverse-linked-list-ii.md","md",[1648,1650],{"_path":141,"title":140,"description":1649},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":147,"title":146,"description":1651},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1717731138971]