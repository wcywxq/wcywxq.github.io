[{"data":1,"prerenderedAt":1645},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-linked-list-ii":552,"/algorithm/leetcode/major/reverse-linked-list-ii-surround":1640},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":144,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":143,"description":556,"url":557,"body":558,"_type":1635,"_id":1636,"_source":1637,"_file":1638,"_extension":1639},"major",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":559,"children":560,"toc":1631},"root",[561,568,573,582,612,617,640,645,670,675,681,686,691,1625],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"示例 1：",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":562,"tag":577,"props":578,"children":581},"img",{"alt":579,"src":580},"rev2ex2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.92_rev2ex2.png",[],{"type":562,"tag":583,"props":584,"children":587},"pre",{"className":585,"code":586,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[588],{"type":562,"tag":589,"props":590,"children":591},"code",{"__ignoreMap":555},[592,603],{"type":562,"tag":593,"props":594,"children":597},"span",{"class":595,"line":596},"line",1,[598],{"type":562,"tag":593,"props":599,"children":600},{},[601],{"type":567,"value":602},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":562,"tag":593,"props":604,"children":606},{"class":595,"line":605},2,[607],{"type":562,"tag":593,"props":608,"children":609},{},[610],{"type":567,"value":611},"输出：[1,4,3,2,5]\n",{"type":562,"tag":563,"props":613,"children":614},{},[615],{"type":567,"value":616},"示例 2：",{"type":562,"tag":583,"props":618,"children":620},{"className":585,"code":619,"language":567,"meta":555,"style":555},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[621],{"type":562,"tag":589,"props":622,"children":623},{"__ignoreMap":555},[624,632],{"type":562,"tag":593,"props":625,"children":626},{"class":595,"line":596},[627],{"type":562,"tag":593,"props":628,"children":629},{},[630],{"type":567,"value":631},"输入：head = [5], left = 1, right = 1\n",{"type":562,"tag":593,"props":633,"children":634},{"class":595,"line":605},[635],{"type":562,"tag":593,"props":636,"children":637},{},[638],{"type":567,"value":639},"输出：[5]\n",{"type":562,"tag":563,"props":641,"children":642},{},[643],{"type":567,"value":644},"提示：",{"type":562,"tag":646,"props":647,"children":648},"ul",{},[649,655,660,665],{"type":562,"tag":650,"props":651,"children":652},"li",{},[653],{"type":567,"value":654},"链表中节点数目为 n",{"type":562,"tag":650,"props":656,"children":657},{},[658],{"type":567,"value":659},"1 \u003C= n \u003C= 500",{"type":562,"tag":650,"props":661,"children":662},{},[663],{"type":567,"value":664},"-500 \u003C= Node.val \u003C= 500",{"type":562,"tag":650,"props":666,"children":667},{},[668],{"type":567,"value":669},"1 \u003C= left \u003C= right \u003C= n",{"type":562,"tag":563,"props":671,"children":672},{},[673],{"type":567,"value":674},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":562,"tag":676,"props":677,"children":679},"h2",{"id":678},"解题思路",[680],{"type":567,"value":678},{"type":562,"tag":563,"props":682,"children":683},{},[684],{"type":567,"value":685},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":562,"tag":676,"props":687,"children":689},{"id":688},"实现",[690],{"type":567,"value":688},{"type":562,"tag":583,"props":692,"children":696},{"className":693,"code":694,"language":695,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[697],{"type":562,"tag":589,"props":698,"children":699},{"__ignoreMap":555},[700,709,717,726,735,744,753,762,770,813,847,880,910,918,983,1016,1049,1059,1068,1077,1086,1112,1194,1223,1232,1240,1266,1299,1380,1414,1443,1464,1484,1492,1500,1509,1518,1555,1583,1591,1616],{"type":562,"tag":593,"props":701,"children":702},{"class":595,"line":596},[703],{"type":562,"tag":593,"props":704,"children":706},{"style":705},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[707],{"type":567,"value":708},"/**\n",{"type":562,"tag":593,"props":710,"children":711},{"class":595,"line":605},[712],{"type":562,"tag":593,"props":713,"children":714},{"style":705},[715],{"type":567,"value":716}," * Definition for singly-linked list.\n",{"type":562,"tag":593,"props":718,"children":720},{"class":595,"line":719},3,[721],{"type":562,"tag":593,"props":722,"children":723},{"style":705},[724],{"type":567,"value":725}," * function ListNode(val, next) {\n",{"type":562,"tag":593,"props":727,"children":729},{"class":595,"line":728},4,[730],{"type":562,"tag":593,"props":731,"children":732},{"style":705},[733],{"type":567,"value":734}," *     this.val = (val===undefined ? 0 : val)\n",{"type":562,"tag":593,"props":736,"children":738},{"class":595,"line":737},5,[739],{"type":562,"tag":593,"props":740,"children":741},{"style":705},[742],{"type":567,"value":743}," *     this.next = (next===undefined ? null : next)\n",{"type":562,"tag":593,"props":745,"children":747},{"class":595,"line":746},6,[748],{"type":562,"tag":593,"props":749,"children":750},{"style":705},[751],{"type":567,"value":752}," * }\n",{"type":562,"tag":593,"props":754,"children":756},{"class":595,"line":755},7,[757],{"type":562,"tag":593,"props":758,"children":759},{"style":705},[760],{"type":567,"value":761}," */\n",{"type":562,"tag":593,"props":763,"children":765},{"class":595,"line":764},8,[766],{"type":562,"tag":593,"props":767,"children":768},{"style":705},[769],{"type":567,"value":708},{"type":562,"tag":593,"props":771,"children":773},{"class":595,"line":772},9,[774,779,785,791,796,802,807],{"type":562,"tag":593,"props":775,"children":776},{"style":705},[777],{"type":567,"value":778}," * ",{"type":562,"tag":593,"props":780,"children":782},{"style":781},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[783],{"type":567,"value":784},"@",{"type":562,"tag":593,"props":786,"children":788},{"style":787},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[789],{"type":567,"value":790},"param",{"type":562,"tag":593,"props":792,"children":793},{"style":781},[794],{"type":567,"value":795}," {",{"type":562,"tag":593,"props":797,"children":799},{"style":798},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[800],{"type":567,"value":801},"ListNode",{"type":562,"tag":593,"props":803,"children":804},{"style":781},[805],{"type":567,"value":806},"}",{"type":562,"tag":593,"props":808,"children":810},{"style":809},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[811],{"type":567,"value":812}," head\n",{"type":562,"tag":593,"props":814,"children":816},{"class":595,"line":815},10,[817,821,825,829,833,838,842],{"type":562,"tag":593,"props":818,"children":819},{"style":705},[820],{"type":567,"value":778},{"type":562,"tag":593,"props":822,"children":823},{"style":781},[824],{"type":567,"value":784},{"type":562,"tag":593,"props":826,"children":827},{"style":787},[828],{"type":567,"value":790},{"type":562,"tag":593,"props":830,"children":831},{"style":781},[832],{"type":567,"value":795},{"type":562,"tag":593,"props":834,"children":835},{"style":798},[836],{"type":567,"value":837},"number",{"type":562,"tag":593,"props":839,"children":840},{"style":781},[841],{"type":567,"value":806},{"type":562,"tag":593,"props":843,"children":844},{"style":809},[845],{"type":567,"value":846}," left\n",{"type":562,"tag":593,"props":848,"children":850},{"class":595,"line":849},11,[851,855,859,863,867,871,875],{"type":562,"tag":593,"props":852,"children":853},{"style":705},[854],{"type":567,"value":778},{"type":562,"tag":593,"props":856,"children":857},{"style":781},[858],{"type":567,"value":784},{"type":562,"tag":593,"props":860,"children":861},{"style":787},[862],{"type":567,"value":790},{"type":562,"tag":593,"props":864,"children":865},{"style":781},[866],{"type":567,"value":795},{"type":562,"tag":593,"props":868,"children":869},{"style":798},[870],{"type":567,"value":837},{"type":562,"tag":593,"props":872,"children":873},{"style":781},[874],{"type":567,"value":806},{"type":562,"tag":593,"props":876,"children":877},{"style":809},[878],{"type":567,"value":879}," right\n",{"type":562,"tag":593,"props":881,"children":883},{"class":595,"line":882},12,[884,888,892,897,901,905],{"type":562,"tag":593,"props":885,"children":886},{"style":705},[887],{"type":567,"value":778},{"type":562,"tag":593,"props":889,"children":890},{"style":781},[891],{"type":567,"value":784},{"type":562,"tag":593,"props":893,"children":894},{"style":787},[895],{"type":567,"value":896},"return",{"type":562,"tag":593,"props":898,"children":899},{"style":781},[900],{"type":567,"value":795},{"type":562,"tag":593,"props":902,"children":903},{"style":798},[904],{"type":567,"value":801},{"type":562,"tag":593,"props":906,"children":907},{"style":781},[908],{"type":567,"value":909},"}\n",{"type":562,"tag":593,"props":911,"children":913},{"class":595,"line":912},13,[914],{"type":562,"tag":593,"props":915,"children":916},{"style":705},[917],{"type":567,"value":761},{"type":562,"tag":593,"props":919,"children":921},{"class":595,"line":920},14,[922,928,934,939,944,949,954,959,964,968,973,978],{"type":562,"tag":593,"props":923,"children":925},{"style":924},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[926],{"type":567,"value":927},"var",{"type":562,"tag":593,"props":929,"children":931},{"style":930},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[932],{"type":567,"value":933}," reverseBetween",{"type":562,"tag":593,"props":935,"children":936},{"style":781},[937],{"type":567,"value":938}," =",{"type":562,"tag":593,"props":940,"children":941},{"style":924},[942],{"type":567,"value":943}," function",{"type":562,"tag":593,"props":945,"children":946},{"style":781},[947],{"type":567,"value":948}," (",{"type":562,"tag":593,"props":950,"children":951},{"style":809},[952],{"type":567,"value":953},"head",{"type":562,"tag":593,"props":955,"children":956},{"style":781},[957],{"type":567,"value":958},",",{"type":562,"tag":593,"props":960,"children":961},{"style":809},[962],{"type":567,"value":963}," left",{"type":562,"tag":593,"props":965,"children":966},{"style":781},[967],{"type":567,"value":958},{"type":562,"tag":593,"props":969,"children":970},{"style":809},[971],{"type":567,"value":972}," right",{"type":562,"tag":593,"props":974,"children":975},{"style":781},[976],{"type":567,"value":977},")",{"type":562,"tag":593,"props":979,"children":980},{"style":781},[981],{"type":567,"value":982}," {\n",{"type":562,"tag":593,"props":984,"children":986},{"class":595,"line":985},15,[987,992,997,1001,1006,1011],{"type":562,"tag":593,"props":988,"children":989},{"style":924},[990],{"type":567,"value":991},"  const",{"type":562,"tag":593,"props":993,"children":994},{"style":809},[995],{"type":567,"value":996}," dummy",{"type":562,"tag":593,"props":998,"children":999},{"style":781},[1000],{"type":567,"value":938},{"type":562,"tag":593,"props":1002,"children":1003},{"style":924},[1004],{"type":567,"value":1005}," new",{"type":562,"tag":593,"props":1007,"children":1008},{"style":930},[1009],{"type":567,"value":1010}," ListNode",{"type":562,"tag":593,"props":1012,"children":1013},{"style":781},[1014],{"type":567,"value":1015},"();\n",{"type":562,"tag":593,"props":1017,"children":1019},{"class":595,"line":1018},16,[1020,1025,1030,1035,1039,1044],{"type":562,"tag":593,"props":1021,"children":1022},{"style":809},[1023],{"type":567,"value":1024},"  dummy",{"type":562,"tag":593,"props":1026,"children":1027},{"style":781},[1028],{"type":567,"value":1029},".",{"type":562,"tag":593,"props":1031,"children":1032},{"style":809},[1033],{"type":567,"value":1034},"next",{"type":562,"tag":593,"props":1036,"children":1037},{"style":781},[1038],{"type":567,"value":938},{"type":562,"tag":593,"props":1040,"children":1041},{"style":809},[1042],{"type":567,"value":1043}," head",{"type":562,"tag":593,"props":1045,"children":1046},{"style":781},[1047],{"type":567,"value":1048},";\n",{"type":562,"tag":593,"props":1050,"children":1052},{"class":595,"line":1051},17,[1053],{"type":562,"tag":593,"props":1054,"children":1056},{"emptyLinePlaceholder":1055},true,[1057],{"type":567,"value":1058},"\n",{"type":562,"tag":593,"props":1060,"children":1062},{"class":595,"line":1061},18,[1063],{"type":562,"tag":593,"props":1064,"children":1065},{"style":705},[1066],{"type":567,"value":1067},"  // p0 代表反转中间段的上一个节点\n",{"type":562,"tag":593,"props":1069,"children":1071},{"class":595,"line":1070},19,[1072],{"type":562,"tag":593,"props":1073,"children":1074},{"style":705},[1075],{"type":567,"value":1076},"  // left = 1 时，构造哨兵节点\n",{"type":562,"tag":593,"props":1078,"children":1080},{"class":595,"line":1079},20,[1081],{"type":562,"tag":593,"props":1082,"children":1083},{"style":705},[1084],{"type":567,"value":1085},"  // 循环后，到达反转后的上一个节点\n",{"type":562,"tag":593,"props":1087,"children":1089},{"class":595,"line":1088},21,[1090,1095,1100,1104,1108],{"type":562,"tag":593,"props":1091,"children":1092},{"style":924},[1093],{"type":567,"value":1094},"  let",{"type":562,"tag":593,"props":1096,"children":1097},{"style":809},[1098],{"type":567,"value":1099}," p0",{"type":562,"tag":593,"props":1101,"children":1102},{"style":781},[1103],{"type":567,"value":938},{"type":562,"tag":593,"props":1105,"children":1106},{"style":809},[1107],{"type":567,"value":996},{"type":562,"tag":593,"props":1109,"children":1110},{"style":781},[1111],{"type":567,"value":1048},{"type":562,"tag":593,"props":1113,"children":1115},{"class":595,"line":1114},22,[1116,1121,1125,1130,1135,1139,1145,1150,1154,1159,1163,1168,1173,1177,1181,1186,1190],{"type":562,"tag":593,"props":1117,"children":1118},{"style":787},[1119],{"type":567,"value":1120},"  for",{"type":562,"tag":593,"props":1122,"children":1123},{"style":781},[1124],{"type":567,"value":948},{"type":562,"tag":593,"props":1126,"children":1127},{"style":924},[1128],{"type":567,"value":1129},"let",{"type":562,"tag":593,"props":1131,"children":1132},{"style":809},[1133],{"type":567,"value":1134}," i",{"type":562,"tag":593,"props":1136,"children":1137},{"style":781},[1138],{"type":567,"value":938},{"type":562,"tag":593,"props":1140,"children":1142},{"style":1141},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1143],{"type":567,"value":1144}," 0",{"type":562,"tag":593,"props":1146,"children":1147},{"style":781},[1148],{"type":567,"value":1149},";",{"type":562,"tag":593,"props":1151,"children":1152},{"style":809},[1153],{"type":567,"value":1134},{"type":562,"tag":593,"props":1155,"children":1156},{"style":781},[1157],{"type":567,"value":1158}," \u003C",{"type":562,"tag":593,"props":1160,"children":1161},{"style":809},[1162],{"type":567,"value":963},{"type":562,"tag":593,"props":1164,"children":1165},{"style":924},[1166],{"type":567,"value":1167}," -",{"type":562,"tag":593,"props":1169,"children":1170},{"style":1141},[1171],{"type":567,"value":1172}," 1",{"type":562,"tag":593,"props":1174,"children":1175},{"style":781},[1176],{"type":567,"value":1149},{"type":562,"tag":593,"props":1178,"children":1179},{"style":809},[1180],{"type":567,"value":1134},{"type":562,"tag":593,"props":1182,"children":1183},{"style":924},[1184],{"type":567,"value":1185},"++",{"type":562,"tag":593,"props":1187,"children":1188},{"style":781},[1189],{"type":567,"value":977},{"type":562,"tag":593,"props":1191,"children":1192},{"style":781},[1193],{"type":567,"value":982},{"type":562,"tag":593,"props":1195,"children":1197},{"class":595,"line":1196},23,[1198,1203,1207,1211,1215,1219],{"type":562,"tag":593,"props":1199,"children":1200},{"style":809},[1201],{"type":567,"value":1202},"    p0",{"type":562,"tag":593,"props":1204,"children":1205},{"style":781},[1206],{"type":567,"value":938},{"type":562,"tag":593,"props":1208,"children":1209},{"style":809},[1210],{"type":567,"value":1099},{"type":562,"tag":593,"props":1212,"children":1213},{"style":781},[1214],{"type":567,"value":1029},{"type":562,"tag":593,"props":1216,"children":1217},{"style":809},[1218],{"type":567,"value":1034},{"type":562,"tag":593,"props":1220,"children":1221},{"style":781},[1222],{"type":567,"value":1048},{"type":562,"tag":593,"props":1224,"children":1226},{"class":595,"line":1225},24,[1227],{"type":562,"tag":593,"props":1228,"children":1229},{"style":781},[1230],{"type":567,"value":1231},"  }\n",{"type":562,"tag":593,"props":1233,"children":1235},{"class":595,"line":1234},25,[1236],{"type":562,"tag":593,"props":1237,"children":1238},{"emptyLinePlaceholder":1055},[1239],{"type":567,"value":1058},{"type":562,"tag":593,"props":1241,"children":1243},{"class":595,"line":1242},26,[1244,1248,1253,1257,1262],{"type":562,"tag":593,"props":1245,"children":1246},{"style":924},[1247],{"type":567,"value":1094},{"type":562,"tag":593,"props":1249,"children":1250},{"style":809},[1251],{"type":567,"value":1252}," prev",{"type":562,"tag":593,"props":1254,"children":1255},{"style":781},[1256],{"type":567,"value":938},{"type":562,"tag":593,"props":1258,"children":1259},{"style":924},[1260],{"type":567,"value":1261}," null",{"type":562,"tag":593,"props":1263,"children":1264},{"style":781},[1265],{"type":567,"value":1048},{"type":562,"tag":593,"props":1267,"children":1269},{"class":595,"line":1268},27,[1270,1274,1279,1283,1287,1291,1295],{"type":562,"tag":593,"props":1271,"children":1272},{"style":924},[1273],{"type":567,"value":1094},{"type":562,"tag":593,"props":1275,"children":1276},{"style":809},[1277],{"type":567,"value":1278}," current",{"type":562,"tag":593,"props":1280,"children":1281},{"style":781},[1282],{"type":567,"value":938},{"type":562,"tag":593,"props":1284,"children":1285},{"style":809},[1286],{"type":567,"value":1099},{"type":562,"tag":593,"props":1288,"children":1289},{"style":781},[1290],{"type":567,"value":1029},{"type":562,"tag":593,"props":1292,"children":1293},{"style":809},[1294],{"type":567,"value":1034},{"type":562,"tag":593,"props":1296,"children":1297},{"style":781},[1298],{"type":567,"value":1048},{"type":562,"tag":593,"props":1300,"children":1302},{"class":595,"line":1301},28,[1303,1307,1311,1315,1319,1323,1327,1331,1335,1339,1343,1347,1351,1356,1360,1364,1368,1372,1376],{"type":562,"tag":593,"props":1304,"children":1305},{"style":787},[1306],{"type":567,"value":1120},{"type":562,"tag":593,"props":1308,"children":1309},{"style":781},[1310],{"type":567,"value":948},{"type":562,"tag":593,"props":1312,"children":1313},{"style":924},[1314],{"type":567,"value":1129},{"type":562,"tag":593,"props":1316,"children":1317},{"style":809},[1318],{"type":567,"value":1134},{"type":562,"tag":593,"props":1320,"children":1321},{"style":781},[1322],{"type":567,"value":938},{"type":562,"tag":593,"props":1324,"children":1325},{"style":1141},[1326],{"type":567,"value":1144},{"type":562,"tag":593,"props":1328,"children":1329},{"style":781},[1330],{"type":567,"value":1149},{"type":562,"tag":593,"props":1332,"children":1333},{"style":809},[1334],{"type":567,"value":1134},{"type":562,"tag":593,"props":1336,"children":1337},{"style":781},[1338],{"type":567,"value":1158},{"type":562,"tag":593,"props":1340,"children":1341},{"style":809},[1342],{"type":567,"value":972},{"type":562,"tag":593,"props":1344,"children":1345},{"style":924},[1346],{"type":567,"value":1167},{"type":562,"tag":593,"props":1348,"children":1349},{"style":809},[1350],{"type":567,"value":963},{"type":562,"tag":593,"props":1352,"children":1353},{"style":924},[1354],{"type":567,"value":1355}," +",{"type":562,"tag":593,"props":1357,"children":1358},{"style":1141},[1359],{"type":567,"value":1172},{"type":562,"tag":593,"props":1361,"children":1362},{"style":781},[1363],{"type":567,"value":1149},{"type":562,"tag":593,"props":1365,"children":1366},{"style":809},[1367],{"type":567,"value":1134},{"type":562,"tag":593,"props":1369,"children":1370},{"style":924},[1371],{"type":567,"value":1185},{"type":562,"tag":593,"props":1373,"children":1374},{"style":781},[1375],{"type":567,"value":977},{"type":562,"tag":593,"props":1377,"children":1378},{"style":781},[1379],{"type":567,"value":982},{"type":562,"tag":593,"props":1381,"children":1383},{"class":595,"line":1382},29,[1384,1389,1394,1398,1402,1406,1410],{"type":562,"tag":593,"props":1385,"children":1386},{"style":924},[1387],{"type":567,"value":1388},"    const",{"type":562,"tag":593,"props":1390,"children":1391},{"style":809},[1392],{"type":567,"value":1393}," next",{"type":562,"tag":593,"props":1395,"children":1396},{"style":781},[1397],{"type":567,"value":938},{"type":562,"tag":593,"props":1399,"children":1400},{"style":809},[1401],{"type":567,"value":1278},{"type":562,"tag":593,"props":1403,"children":1404},{"style":781},[1405],{"type":567,"value":1029},{"type":562,"tag":593,"props":1407,"children":1408},{"style":809},[1409],{"type":567,"value":1034},{"type":562,"tag":593,"props":1411,"children":1412},{"style":781},[1413],{"type":567,"value":1048},{"type":562,"tag":593,"props":1415,"children":1417},{"class":595,"line":1416},30,[1418,1423,1427,1431,1435,1439],{"type":562,"tag":593,"props":1419,"children":1420},{"style":809},[1421],{"type":567,"value":1422},"    current",{"type":562,"tag":593,"props":1424,"children":1425},{"style":781},[1426],{"type":567,"value":1029},{"type":562,"tag":593,"props":1428,"children":1429},{"style":809},[1430],{"type":567,"value":1034},{"type":562,"tag":593,"props":1432,"children":1433},{"style":781},[1434],{"type":567,"value":938},{"type":562,"tag":593,"props":1436,"children":1437},{"style":809},[1438],{"type":567,"value":1252},{"type":562,"tag":593,"props":1440,"children":1441},{"style":781},[1442],{"type":567,"value":1048},{"type":562,"tag":593,"props":1444,"children":1446},{"class":595,"line":1445},31,[1447,1452,1456,1460],{"type":562,"tag":593,"props":1448,"children":1449},{"style":809},[1450],{"type":567,"value":1451},"    prev",{"type":562,"tag":593,"props":1453,"children":1454},{"style":781},[1455],{"type":567,"value":938},{"type":562,"tag":593,"props":1457,"children":1458},{"style":809},[1459],{"type":567,"value":1278},{"type":562,"tag":593,"props":1461,"children":1462},{"style":781},[1463],{"type":567,"value":1048},{"type":562,"tag":593,"props":1465,"children":1467},{"class":595,"line":1466},32,[1468,1472,1476,1480],{"type":562,"tag":593,"props":1469,"children":1470},{"style":809},[1471],{"type":567,"value":1422},{"type":562,"tag":593,"props":1473,"children":1474},{"style":781},[1475],{"type":567,"value":938},{"type":562,"tag":593,"props":1477,"children":1478},{"style":809},[1479],{"type":567,"value":1393},{"type":562,"tag":593,"props":1481,"children":1482},{"style":781},[1483],{"type":567,"value":1048},{"type":562,"tag":593,"props":1485,"children":1487},{"class":595,"line":1486},33,[1488],{"type":562,"tag":593,"props":1489,"children":1490},{"style":781},[1491],{"type":567,"value":1231},{"type":562,"tag":593,"props":1493,"children":1495},{"class":595,"line":1494},34,[1496],{"type":562,"tag":593,"props":1497,"children":1498},{"emptyLinePlaceholder":1055},[1499],{"type":567,"value":1058},{"type":562,"tag":593,"props":1501,"children":1503},{"class":595,"line":1502},35,[1504],{"type":562,"tag":593,"props":1505,"children":1506},{"style":705},[1507],{"type":567,"value":1508},"  // p0 指向 prev\n",{"type":562,"tag":593,"props":1510,"children":1512},{"class":595,"line":1511},36,[1513],{"type":562,"tag":593,"props":1514,"children":1515},{"style":705},[1516],{"type":567,"value":1517},"  // p0 的 next 指向 current\n",{"type":562,"tag":593,"props":1519,"children":1521},{"class":595,"line":1520},37,[1522,1527,1531,1535,1539,1543,1547,1551],{"type":562,"tag":593,"props":1523,"children":1524},{"style":809},[1525],{"type":567,"value":1526},"  p0",{"type":562,"tag":593,"props":1528,"children":1529},{"style":781},[1530],{"type":567,"value":1029},{"type":562,"tag":593,"props":1532,"children":1533},{"style":809},[1534],{"type":567,"value":1034},{"type":562,"tag":593,"props":1536,"children":1537},{"style":781},[1538],{"type":567,"value":1029},{"type":562,"tag":593,"props":1540,"children":1541},{"style":809},[1542],{"type":567,"value":1034},{"type":562,"tag":593,"props":1544,"children":1545},{"style":781},[1546],{"type":567,"value":938},{"type":562,"tag":593,"props":1548,"children":1549},{"style":809},[1550],{"type":567,"value":1278},{"type":562,"tag":593,"props":1552,"children":1553},{"style":781},[1554],{"type":567,"value":1048},{"type":562,"tag":593,"props":1556,"children":1558},{"class":595,"line":1557},38,[1559,1563,1567,1571,1575,1579],{"type":562,"tag":593,"props":1560,"children":1561},{"style":809},[1562],{"type":567,"value":1526},{"type":562,"tag":593,"props":1564,"children":1565},{"style":781},[1566],{"type":567,"value":1029},{"type":562,"tag":593,"props":1568,"children":1569},{"style":809},[1570],{"type":567,"value":1034},{"type":562,"tag":593,"props":1572,"children":1573},{"style":781},[1574],{"type":567,"value":938},{"type":562,"tag":593,"props":1576,"children":1577},{"style":809},[1578],{"type":567,"value":1252},{"type":562,"tag":593,"props":1580,"children":1581},{"style":781},[1582],{"type":567,"value":1048},{"type":562,"tag":593,"props":1584,"children":1586},{"class":595,"line":1585},39,[1587],{"type":562,"tag":593,"props":1588,"children":1589},{"emptyLinePlaceholder":1055},[1590],{"type":567,"value":1058},{"type":562,"tag":593,"props":1592,"children":1594},{"class":595,"line":1593},40,[1595,1600,1604,1608,1612],{"type":562,"tag":593,"props":1596,"children":1597},{"style":787},[1598],{"type":567,"value":1599},"  return",{"type":562,"tag":593,"props":1601,"children":1602},{"style":809},[1603],{"type":567,"value":996},{"type":562,"tag":593,"props":1605,"children":1606},{"style":781},[1607],{"type":567,"value":1029},{"type":562,"tag":593,"props":1609,"children":1610},{"style":809},[1611],{"type":567,"value":1034},{"type":562,"tag":593,"props":1613,"children":1614},{"style":781},[1615],{"type":567,"value":1048},{"type":562,"tag":593,"props":1617,"children":1619},{"class":595,"line":1618},41,[1620],{"type":562,"tag":593,"props":1621,"children":1622},{"style":781},[1623],{"type":567,"value":1624},"};\n",{"type":562,"tag":1626,"props":1627,"children":1628},"style",{},[1629],{"type":567,"value":1630},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":737,"depth":737,"links":1632},[1633,1634],{"id":678,"depth":605,"text":678},{"id":688,"depth":605,"text":688},"markdown","content:1.algorithm:3.leetcode:3.major:92.reverse-linked-list-ii.md","content","1.algorithm/3.leetcode/3.major/92.reverse-linked-list-ii.md","md",[1641,1643],{"_path":141,"title":140,"description":1642},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":147,"title":146,"description":1644},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1715137598860]