[{"data":1,"prerenderedAt":1644},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-linked-list-ii":551,"/algorithm/leetcode/major/reverse-linked-list-ii-surround":1639},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":144,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":143,"description":555,"url":556,"body":557,"_type":1634,"_id":1635,"_source":1636,"_file":1637,"_extension":1638},"major",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":558,"children":559,"toc":1630},"root",[560,567,572,581,611,616,639,644,669,674,680,685,690,1624],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"示例 1：",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":561,"tag":576,"props":577,"children":580},"img",{"alt":578,"src":579},"rev2ex2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.92_rev2ex2.png",[],{"type":561,"tag":582,"props":583,"children":586},"pre",{"className":584,"code":585,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[587],{"type":561,"tag":588,"props":589,"children":590},"code",{"__ignoreMap":554},[591,602],{"type":561,"tag":592,"props":593,"children":596},"span",{"class":594,"line":595},"line",1,[597],{"type":561,"tag":592,"props":598,"children":599},{},[600],{"type":566,"value":601},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":561,"tag":592,"props":603,"children":605},{"class":594,"line":604},2,[606],{"type":561,"tag":592,"props":607,"children":608},{},[609],{"type":566,"value":610},"输出：[1,4,3,2,5]\n",{"type":561,"tag":562,"props":612,"children":613},{},[614],{"type":566,"value":615},"示例 2：",{"type":561,"tag":582,"props":617,"children":619},{"className":584,"code":618,"language":566,"meta":554,"style":554},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[620],{"type":561,"tag":588,"props":621,"children":622},{"__ignoreMap":554},[623,631],{"type":561,"tag":592,"props":624,"children":625},{"class":594,"line":595},[626],{"type":561,"tag":592,"props":627,"children":628},{},[629],{"type":566,"value":630},"输入：head = [5], left = 1, right = 1\n",{"type":561,"tag":592,"props":632,"children":633},{"class":594,"line":604},[634],{"type":561,"tag":592,"props":635,"children":636},{},[637],{"type":566,"value":638},"输出：[5]\n",{"type":561,"tag":562,"props":640,"children":641},{},[642],{"type":566,"value":643},"提示：",{"type":561,"tag":645,"props":646,"children":647},"ul",{},[648,654,659,664],{"type":561,"tag":649,"props":650,"children":651},"li",{},[652],{"type":566,"value":653},"链表中节点数目为 n",{"type":561,"tag":649,"props":655,"children":656},{},[657],{"type":566,"value":658},"1 \u003C= n \u003C= 500",{"type":561,"tag":649,"props":660,"children":661},{},[662],{"type":566,"value":663},"-500 \u003C= Node.val \u003C= 500",{"type":561,"tag":649,"props":665,"children":666},{},[667],{"type":566,"value":668},"1 \u003C= left \u003C= right \u003C= n",{"type":561,"tag":562,"props":670,"children":671},{},[672],{"type":566,"value":673},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":561,"tag":675,"props":676,"children":678},"h2",{"id":677},"解题思路",[679],{"type":566,"value":677},{"type":561,"tag":562,"props":681,"children":682},{},[683],{"type":566,"value":684},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":561,"tag":675,"props":686,"children":688},{"id":687},"实现",[689],{"type":566,"value":687},{"type":561,"tag":582,"props":691,"children":695},{"className":692,"code":693,"language":694,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[696],{"type":561,"tag":588,"props":697,"children":698},{"__ignoreMap":554},[699,708,716,725,734,743,752,761,769,812,846,879,909,917,982,1015,1048,1058,1067,1076,1085,1111,1193,1222,1231,1239,1265,1298,1379,1413,1442,1463,1483,1491,1499,1508,1517,1554,1582,1590,1615],{"type":561,"tag":592,"props":700,"children":701},{"class":594,"line":595},[702],{"type":561,"tag":592,"props":703,"children":705},{"style":704},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[706],{"type":566,"value":707},"/**\n",{"type":561,"tag":592,"props":709,"children":710},{"class":594,"line":604},[711],{"type":561,"tag":592,"props":712,"children":713},{"style":704},[714],{"type":566,"value":715}," * Definition for singly-linked list.\n",{"type":561,"tag":592,"props":717,"children":719},{"class":594,"line":718},3,[720],{"type":561,"tag":592,"props":721,"children":722},{"style":704},[723],{"type":566,"value":724}," * function ListNode(val, next) {\n",{"type":561,"tag":592,"props":726,"children":728},{"class":594,"line":727},4,[729],{"type":561,"tag":592,"props":730,"children":731},{"style":704},[732],{"type":566,"value":733}," *     this.val = (val===undefined ? 0 : val)\n",{"type":561,"tag":592,"props":735,"children":737},{"class":594,"line":736},5,[738],{"type":561,"tag":592,"props":739,"children":740},{"style":704},[741],{"type":566,"value":742}," *     this.next = (next===undefined ? null : next)\n",{"type":561,"tag":592,"props":744,"children":746},{"class":594,"line":745},6,[747],{"type":561,"tag":592,"props":748,"children":749},{"style":704},[750],{"type":566,"value":751}," * }\n",{"type":561,"tag":592,"props":753,"children":755},{"class":594,"line":754},7,[756],{"type":561,"tag":592,"props":757,"children":758},{"style":704},[759],{"type":566,"value":760}," */\n",{"type":561,"tag":592,"props":762,"children":764},{"class":594,"line":763},8,[765],{"type":561,"tag":592,"props":766,"children":767},{"style":704},[768],{"type":566,"value":707},{"type":561,"tag":592,"props":770,"children":772},{"class":594,"line":771},9,[773,778,784,790,795,801,806],{"type":561,"tag":592,"props":774,"children":775},{"style":704},[776],{"type":566,"value":777}," * ",{"type":561,"tag":592,"props":779,"children":781},{"style":780},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[782],{"type":566,"value":783},"@",{"type":561,"tag":592,"props":785,"children":787},{"style":786},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[788],{"type":566,"value":789},"param",{"type":561,"tag":592,"props":791,"children":792},{"style":780},[793],{"type":566,"value":794}," {",{"type":561,"tag":592,"props":796,"children":798},{"style":797},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[799],{"type":566,"value":800},"ListNode",{"type":561,"tag":592,"props":802,"children":803},{"style":780},[804],{"type":566,"value":805},"}",{"type":561,"tag":592,"props":807,"children":809},{"style":808},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[810],{"type":566,"value":811}," head\n",{"type":561,"tag":592,"props":813,"children":815},{"class":594,"line":814},10,[816,820,824,828,832,837,841],{"type":561,"tag":592,"props":817,"children":818},{"style":704},[819],{"type":566,"value":777},{"type":561,"tag":592,"props":821,"children":822},{"style":780},[823],{"type":566,"value":783},{"type":561,"tag":592,"props":825,"children":826},{"style":786},[827],{"type":566,"value":789},{"type":561,"tag":592,"props":829,"children":830},{"style":780},[831],{"type":566,"value":794},{"type":561,"tag":592,"props":833,"children":834},{"style":797},[835],{"type":566,"value":836},"number",{"type":561,"tag":592,"props":838,"children":839},{"style":780},[840],{"type":566,"value":805},{"type":561,"tag":592,"props":842,"children":843},{"style":808},[844],{"type":566,"value":845}," left\n",{"type":561,"tag":592,"props":847,"children":849},{"class":594,"line":848},11,[850,854,858,862,866,870,874],{"type":561,"tag":592,"props":851,"children":852},{"style":704},[853],{"type":566,"value":777},{"type":561,"tag":592,"props":855,"children":856},{"style":780},[857],{"type":566,"value":783},{"type":561,"tag":592,"props":859,"children":860},{"style":786},[861],{"type":566,"value":789},{"type":561,"tag":592,"props":863,"children":864},{"style":780},[865],{"type":566,"value":794},{"type":561,"tag":592,"props":867,"children":868},{"style":797},[869],{"type":566,"value":836},{"type":561,"tag":592,"props":871,"children":872},{"style":780},[873],{"type":566,"value":805},{"type":561,"tag":592,"props":875,"children":876},{"style":808},[877],{"type":566,"value":878}," right\n",{"type":561,"tag":592,"props":880,"children":882},{"class":594,"line":881},12,[883,887,891,896,900,904],{"type":561,"tag":592,"props":884,"children":885},{"style":704},[886],{"type":566,"value":777},{"type":561,"tag":592,"props":888,"children":889},{"style":780},[890],{"type":566,"value":783},{"type":561,"tag":592,"props":892,"children":893},{"style":786},[894],{"type":566,"value":895},"return",{"type":561,"tag":592,"props":897,"children":898},{"style":780},[899],{"type":566,"value":794},{"type":561,"tag":592,"props":901,"children":902},{"style":797},[903],{"type":566,"value":800},{"type":561,"tag":592,"props":905,"children":906},{"style":780},[907],{"type":566,"value":908},"}\n",{"type":561,"tag":592,"props":910,"children":912},{"class":594,"line":911},13,[913],{"type":561,"tag":592,"props":914,"children":915},{"style":704},[916],{"type":566,"value":760},{"type":561,"tag":592,"props":918,"children":920},{"class":594,"line":919},14,[921,927,933,938,943,948,953,958,963,967,972,977],{"type":561,"tag":592,"props":922,"children":924},{"style":923},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[925],{"type":566,"value":926},"var",{"type":561,"tag":592,"props":928,"children":930},{"style":929},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[931],{"type":566,"value":932}," reverseBetween",{"type":561,"tag":592,"props":934,"children":935},{"style":780},[936],{"type":566,"value":937}," =",{"type":561,"tag":592,"props":939,"children":940},{"style":923},[941],{"type":566,"value":942}," function",{"type":561,"tag":592,"props":944,"children":945},{"style":780},[946],{"type":566,"value":947}," (",{"type":561,"tag":592,"props":949,"children":950},{"style":808},[951],{"type":566,"value":952},"head",{"type":561,"tag":592,"props":954,"children":955},{"style":780},[956],{"type":566,"value":957},",",{"type":561,"tag":592,"props":959,"children":960},{"style":808},[961],{"type":566,"value":962}," left",{"type":561,"tag":592,"props":964,"children":965},{"style":780},[966],{"type":566,"value":957},{"type":561,"tag":592,"props":968,"children":969},{"style":808},[970],{"type":566,"value":971}," right",{"type":561,"tag":592,"props":973,"children":974},{"style":780},[975],{"type":566,"value":976},")",{"type":561,"tag":592,"props":978,"children":979},{"style":780},[980],{"type":566,"value":981}," {\n",{"type":561,"tag":592,"props":983,"children":985},{"class":594,"line":984},15,[986,991,996,1000,1005,1010],{"type":561,"tag":592,"props":987,"children":988},{"style":923},[989],{"type":566,"value":990},"  const",{"type":561,"tag":592,"props":992,"children":993},{"style":808},[994],{"type":566,"value":995}," dummy",{"type":561,"tag":592,"props":997,"children":998},{"style":780},[999],{"type":566,"value":937},{"type":561,"tag":592,"props":1001,"children":1002},{"style":923},[1003],{"type":566,"value":1004}," new",{"type":561,"tag":592,"props":1006,"children":1007},{"style":929},[1008],{"type":566,"value":1009}," ListNode",{"type":561,"tag":592,"props":1011,"children":1012},{"style":780},[1013],{"type":566,"value":1014},"();\n",{"type":561,"tag":592,"props":1016,"children":1018},{"class":594,"line":1017},16,[1019,1024,1029,1034,1038,1043],{"type":561,"tag":592,"props":1020,"children":1021},{"style":808},[1022],{"type":566,"value":1023},"  dummy",{"type":561,"tag":592,"props":1025,"children":1026},{"style":780},[1027],{"type":566,"value":1028},".",{"type":561,"tag":592,"props":1030,"children":1031},{"style":808},[1032],{"type":566,"value":1033},"next",{"type":561,"tag":592,"props":1035,"children":1036},{"style":780},[1037],{"type":566,"value":937},{"type":561,"tag":592,"props":1039,"children":1040},{"style":808},[1041],{"type":566,"value":1042}," head",{"type":561,"tag":592,"props":1044,"children":1045},{"style":780},[1046],{"type":566,"value":1047},";\n",{"type":561,"tag":592,"props":1049,"children":1051},{"class":594,"line":1050},17,[1052],{"type":561,"tag":592,"props":1053,"children":1055},{"emptyLinePlaceholder":1054},true,[1056],{"type":566,"value":1057},"\n",{"type":561,"tag":592,"props":1059,"children":1061},{"class":594,"line":1060},18,[1062],{"type":561,"tag":592,"props":1063,"children":1064},{"style":704},[1065],{"type":566,"value":1066},"  // p0 代表反转中间段的上一个节点\n",{"type":561,"tag":592,"props":1068,"children":1070},{"class":594,"line":1069},19,[1071],{"type":561,"tag":592,"props":1072,"children":1073},{"style":704},[1074],{"type":566,"value":1075},"  // left = 1 时，构造哨兵节点\n",{"type":561,"tag":592,"props":1077,"children":1079},{"class":594,"line":1078},20,[1080],{"type":561,"tag":592,"props":1081,"children":1082},{"style":704},[1083],{"type":566,"value":1084},"  // 循环后，到达反转后的上一个节点\n",{"type":561,"tag":592,"props":1086,"children":1088},{"class":594,"line":1087},21,[1089,1094,1099,1103,1107],{"type":561,"tag":592,"props":1090,"children":1091},{"style":923},[1092],{"type":566,"value":1093},"  let",{"type":561,"tag":592,"props":1095,"children":1096},{"style":808},[1097],{"type":566,"value":1098}," p0",{"type":561,"tag":592,"props":1100,"children":1101},{"style":780},[1102],{"type":566,"value":937},{"type":561,"tag":592,"props":1104,"children":1105},{"style":808},[1106],{"type":566,"value":995},{"type":561,"tag":592,"props":1108,"children":1109},{"style":780},[1110],{"type":566,"value":1047},{"type":561,"tag":592,"props":1112,"children":1114},{"class":594,"line":1113},22,[1115,1120,1124,1129,1134,1138,1144,1149,1153,1158,1162,1167,1172,1176,1180,1185,1189],{"type":561,"tag":592,"props":1116,"children":1117},{"style":786},[1118],{"type":566,"value":1119},"  for",{"type":561,"tag":592,"props":1121,"children":1122},{"style":780},[1123],{"type":566,"value":947},{"type":561,"tag":592,"props":1125,"children":1126},{"style":923},[1127],{"type":566,"value":1128},"let",{"type":561,"tag":592,"props":1130,"children":1131},{"style":808},[1132],{"type":566,"value":1133}," i",{"type":561,"tag":592,"props":1135,"children":1136},{"style":780},[1137],{"type":566,"value":937},{"type":561,"tag":592,"props":1139,"children":1141},{"style":1140},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1142],{"type":566,"value":1143}," 0",{"type":561,"tag":592,"props":1145,"children":1146},{"style":780},[1147],{"type":566,"value":1148},";",{"type":561,"tag":592,"props":1150,"children":1151},{"style":808},[1152],{"type":566,"value":1133},{"type":561,"tag":592,"props":1154,"children":1155},{"style":780},[1156],{"type":566,"value":1157}," \u003C",{"type":561,"tag":592,"props":1159,"children":1160},{"style":808},[1161],{"type":566,"value":962},{"type":561,"tag":592,"props":1163,"children":1164},{"style":923},[1165],{"type":566,"value":1166}," -",{"type":561,"tag":592,"props":1168,"children":1169},{"style":1140},[1170],{"type":566,"value":1171}," 1",{"type":561,"tag":592,"props":1173,"children":1174},{"style":780},[1175],{"type":566,"value":1148},{"type":561,"tag":592,"props":1177,"children":1178},{"style":808},[1179],{"type":566,"value":1133},{"type":561,"tag":592,"props":1181,"children":1182},{"style":923},[1183],{"type":566,"value":1184},"++",{"type":561,"tag":592,"props":1186,"children":1187},{"style":780},[1188],{"type":566,"value":976},{"type":561,"tag":592,"props":1190,"children":1191},{"style":780},[1192],{"type":566,"value":981},{"type":561,"tag":592,"props":1194,"children":1196},{"class":594,"line":1195},23,[1197,1202,1206,1210,1214,1218],{"type":561,"tag":592,"props":1198,"children":1199},{"style":808},[1200],{"type":566,"value":1201},"    p0",{"type":561,"tag":592,"props":1203,"children":1204},{"style":780},[1205],{"type":566,"value":937},{"type":561,"tag":592,"props":1207,"children":1208},{"style":808},[1209],{"type":566,"value":1098},{"type":561,"tag":592,"props":1211,"children":1212},{"style":780},[1213],{"type":566,"value":1028},{"type":561,"tag":592,"props":1215,"children":1216},{"style":808},[1217],{"type":566,"value":1033},{"type":561,"tag":592,"props":1219,"children":1220},{"style":780},[1221],{"type":566,"value":1047},{"type":561,"tag":592,"props":1223,"children":1225},{"class":594,"line":1224},24,[1226],{"type":561,"tag":592,"props":1227,"children":1228},{"style":780},[1229],{"type":566,"value":1230},"  }\n",{"type":561,"tag":592,"props":1232,"children":1234},{"class":594,"line":1233},25,[1235],{"type":561,"tag":592,"props":1236,"children":1237},{"emptyLinePlaceholder":1054},[1238],{"type":566,"value":1057},{"type":561,"tag":592,"props":1240,"children":1242},{"class":594,"line":1241},26,[1243,1247,1252,1256,1261],{"type":561,"tag":592,"props":1244,"children":1245},{"style":923},[1246],{"type":566,"value":1093},{"type":561,"tag":592,"props":1248,"children":1249},{"style":808},[1250],{"type":566,"value":1251}," prev",{"type":561,"tag":592,"props":1253,"children":1254},{"style":780},[1255],{"type":566,"value":937},{"type":561,"tag":592,"props":1257,"children":1258},{"style":923},[1259],{"type":566,"value":1260}," null",{"type":561,"tag":592,"props":1262,"children":1263},{"style":780},[1264],{"type":566,"value":1047},{"type":561,"tag":592,"props":1266,"children":1268},{"class":594,"line":1267},27,[1269,1273,1278,1282,1286,1290,1294],{"type":561,"tag":592,"props":1270,"children":1271},{"style":923},[1272],{"type":566,"value":1093},{"type":561,"tag":592,"props":1274,"children":1275},{"style":808},[1276],{"type":566,"value":1277}," current",{"type":561,"tag":592,"props":1279,"children":1280},{"style":780},[1281],{"type":566,"value":937},{"type":561,"tag":592,"props":1283,"children":1284},{"style":808},[1285],{"type":566,"value":1098},{"type":561,"tag":592,"props":1287,"children":1288},{"style":780},[1289],{"type":566,"value":1028},{"type":561,"tag":592,"props":1291,"children":1292},{"style":808},[1293],{"type":566,"value":1033},{"type":561,"tag":592,"props":1295,"children":1296},{"style":780},[1297],{"type":566,"value":1047},{"type":561,"tag":592,"props":1299,"children":1301},{"class":594,"line":1300},28,[1302,1306,1310,1314,1318,1322,1326,1330,1334,1338,1342,1346,1350,1355,1359,1363,1367,1371,1375],{"type":561,"tag":592,"props":1303,"children":1304},{"style":786},[1305],{"type":566,"value":1119},{"type":561,"tag":592,"props":1307,"children":1308},{"style":780},[1309],{"type":566,"value":947},{"type":561,"tag":592,"props":1311,"children":1312},{"style":923},[1313],{"type":566,"value":1128},{"type":561,"tag":592,"props":1315,"children":1316},{"style":808},[1317],{"type":566,"value":1133},{"type":561,"tag":592,"props":1319,"children":1320},{"style":780},[1321],{"type":566,"value":937},{"type":561,"tag":592,"props":1323,"children":1324},{"style":1140},[1325],{"type":566,"value":1143},{"type":561,"tag":592,"props":1327,"children":1328},{"style":780},[1329],{"type":566,"value":1148},{"type":561,"tag":592,"props":1331,"children":1332},{"style":808},[1333],{"type":566,"value":1133},{"type":561,"tag":592,"props":1335,"children":1336},{"style":780},[1337],{"type":566,"value":1157},{"type":561,"tag":592,"props":1339,"children":1340},{"style":808},[1341],{"type":566,"value":971},{"type":561,"tag":592,"props":1343,"children":1344},{"style":923},[1345],{"type":566,"value":1166},{"type":561,"tag":592,"props":1347,"children":1348},{"style":808},[1349],{"type":566,"value":962},{"type":561,"tag":592,"props":1351,"children":1352},{"style":923},[1353],{"type":566,"value":1354}," +",{"type":561,"tag":592,"props":1356,"children":1357},{"style":1140},[1358],{"type":566,"value":1171},{"type":561,"tag":592,"props":1360,"children":1361},{"style":780},[1362],{"type":566,"value":1148},{"type":561,"tag":592,"props":1364,"children":1365},{"style":808},[1366],{"type":566,"value":1133},{"type":561,"tag":592,"props":1368,"children":1369},{"style":923},[1370],{"type":566,"value":1184},{"type":561,"tag":592,"props":1372,"children":1373},{"style":780},[1374],{"type":566,"value":976},{"type":561,"tag":592,"props":1376,"children":1377},{"style":780},[1378],{"type":566,"value":981},{"type":561,"tag":592,"props":1380,"children":1382},{"class":594,"line":1381},29,[1383,1388,1393,1397,1401,1405,1409],{"type":561,"tag":592,"props":1384,"children":1385},{"style":923},[1386],{"type":566,"value":1387},"    const",{"type":561,"tag":592,"props":1389,"children":1390},{"style":808},[1391],{"type":566,"value":1392}," next",{"type":561,"tag":592,"props":1394,"children":1395},{"style":780},[1396],{"type":566,"value":937},{"type":561,"tag":592,"props":1398,"children":1399},{"style":808},[1400],{"type":566,"value":1277},{"type":561,"tag":592,"props":1402,"children":1403},{"style":780},[1404],{"type":566,"value":1028},{"type":561,"tag":592,"props":1406,"children":1407},{"style":808},[1408],{"type":566,"value":1033},{"type":561,"tag":592,"props":1410,"children":1411},{"style":780},[1412],{"type":566,"value":1047},{"type":561,"tag":592,"props":1414,"children":1416},{"class":594,"line":1415},30,[1417,1422,1426,1430,1434,1438],{"type":561,"tag":592,"props":1418,"children":1419},{"style":808},[1420],{"type":566,"value":1421},"    current",{"type":561,"tag":592,"props":1423,"children":1424},{"style":780},[1425],{"type":566,"value":1028},{"type":561,"tag":592,"props":1427,"children":1428},{"style":808},[1429],{"type":566,"value":1033},{"type":561,"tag":592,"props":1431,"children":1432},{"style":780},[1433],{"type":566,"value":937},{"type":561,"tag":592,"props":1435,"children":1436},{"style":808},[1437],{"type":566,"value":1251},{"type":561,"tag":592,"props":1439,"children":1440},{"style":780},[1441],{"type":566,"value":1047},{"type":561,"tag":592,"props":1443,"children":1445},{"class":594,"line":1444},31,[1446,1451,1455,1459],{"type":561,"tag":592,"props":1447,"children":1448},{"style":808},[1449],{"type":566,"value":1450},"    prev",{"type":561,"tag":592,"props":1452,"children":1453},{"style":780},[1454],{"type":566,"value":937},{"type":561,"tag":592,"props":1456,"children":1457},{"style":808},[1458],{"type":566,"value":1277},{"type":561,"tag":592,"props":1460,"children":1461},{"style":780},[1462],{"type":566,"value":1047},{"type":561,"tag":592,"props":1464,"children":1466},{"class":594,"line":1465},32,[1467,1471,1475,1479],{"type":561,"tag":592,"props":1468,"children":1469},{"style":808},[1470],{"type":566,"value":1421},{"type":561,"tag":592,"props":1472,"children":1473},{"style":780},[1474],{"type":566,"value":937},{"type":561,"tag":592,"props":1476,"children":1477},{"style":808},[1478],{"type":566,"value":1392},{"type":561,"tag":592,"props":1480,"children":1481},{"style":780},[1482],{"type":566,"value":1047},{"type":561,"tag":592,"props":1484,"children":1486},{"class":594,"line":1485},33,[1487],{"type":561,"tag":592,"props":1488,"children":1489},{"style":780},[1490],{"type":566,"value":1230},{"type":561,"tag":592,"props":1492,"children":1494},{"class":594,"line":1493},34,[1495],{"type":561,"tag":592,"props":1496,"children":1497},{"emptyLinePlaceholder":1054},[1498],{"type":566,"value":1057},{"type":561,"tag":592,"props":1500,"children":1502},{"class":594,"line":1501},35,[1503],{"type":561,"tag":592,"props":1504,"children":1505},{"style":704},[1506],{"type":566,"value":1507},"  // p0 指向 prev\n",{"type":561,"tag":592,"props":1509,"children":1511},{"class":594,"line":1510},36,[1512],{"type":561,"tag":592,"props":1513,"children":1514},{"style":704},[1515],{"type":566,"value":1516},"  // p0 的 next 指向 current\n",{"type":561,"tag":592,"props":1518,"children":1520},{"class":594,"line":1519},37,[1521,1526,1530,1534,1538,1542,1546,1550],{"type":561,"tag":592,"props":1522,"children":1523},{"style":808},[1524],{"type":566,"value":1525},"  p0",{"type":561,"tag":592,"props":1527,"children":1528},{"style":780},[1529],{"type":566,"value":1028},{"type":561,"tag":592,"props":1531,"children":1532},{"style":808},[1533],{"type":566,"value":1033},{"type":561,"tag":592,"props":1535,"children":1536},{"style":780},[1537],{"type":566,"value":1028},{"type":561,"tag":592,"props":1539,"children":1540},{"style":808},[1541],{"type":566,"value":1033},{"type":561,"tag":592,"props":1543,"children":1544},{"style":780},[1545],{"type":566,"value":937},{"type":561,"tag":592,"props":1547,"children":1548},{"style":808},[1549],{"type":566,"value":1277},{"type":561,"tag":592,"props":1551,"children":1552},{"style":780},[1553],{"type":566,"value":1047},{"type":561,"tag":592,"props":1555,"children":1557},{"class":594,"line":1556},38,[1558,1562,1566,1570,1574,1578],{"type":561,"tag":592,"props":1559,"children":1560},{"style":808},[1561],{"type":566,"value":1525},{"type":561,"tag":592,"props":1563,"children":1564},{"style":780},[1565],{"type":566,"value":1028},{"type":561,"tag":592,"props":1567,"children":1568},{"style":808},[1569],{"type":566,"value":1033},{"type":561,"tag":592,"props":1571,"children":1572},{"style":780},[1573],{"type":566,"value":937},{"type":561,"tag":592,"props":1575,"children":1576},{"style":808},[1577],{"type":566,"value":1251},{"type":561,"tag":592,"props":1579,"children":1580},{"style":780},[1581],{"type":566,"value":1047},{"type":561,"tag":592,"props":1583,"children":1585},{"class":594,"line":1584},39,[1586],{"type":561,"tag":592,"props":1587,"children":1588},{"emptyLinePlaceholder":1054},[1589],{"type":566,"value":1057},{"type":561,"tag":592,"props":1591,"children":1593},{"class":594,"line":1592},40,[1594,1599,1603,1607,1611],{"type":561,"tag":592,"props":1595,"children":1596},{"style":786},[1597],{"type":566,"value":1598},"  return",{"type":561,"tag":592,"props":1600,"children":1601},{"style":808},[1602],{"type":566,"value":995},{"type":561,"tag":592,"props":1604,"children":1605},{"style":780},[1606],{"type":566,"value":1028},{"type":561,"tag":592,"props":1608,"children":1609},{"style":808},[1610],{"type":566,"value":1033},{"type":561,"tag":592,"props":1612,"children":1613},{"style":780},[1614],{"type":566,"value":1047},{"type":561,"tag":592,"props":1616,"children":1618},{"class":594,"line":1617},41,[1619],{"type":561,"tag":592,"props":1620,"children":1621},{"style":780},[1622],{"type":566,"value":1623},"};\n",{"type":561,"tag":1625,"props":1626,"children":1627},"style",{},[1628],{"type":566,"value":1629},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":736,"depth":736,"links":1631},[1632,1633],{"id":677,"depth":604,"text":677},{"id":687,"depth":604,"text":687},"markdown","content:1.algorithm:3.leetcode:3.major:92.reverse-linked-list-ii.md","content","1.algorithm/3.leetcode/3.major/92.reverse-linked-list-ii.md","md",[1640,1642],{"_path":141,"title":140,"description":1641},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":147,"title":146,"description":1643},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1715092075433]