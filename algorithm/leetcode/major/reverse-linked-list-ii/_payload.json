[{"data":1,"prerenderedAt":1593},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-linked-list-ii":500,"/algorithm/leetcode/major/reverse-linked-list-ii-surround":1588},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":144,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":143,"description":504,"url":505,"body":506,"_type":1583,"_id":1584,"_source":1585,"_file":1586,"_extension":1587},"major",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":507,"children":508,"toc":1579},"root",[509,516,521,530,560,565,588,593,618,623,629,634,639,1573],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"示例 1：",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":510,"tag":525,"props":526,"children":529},"img",{"alt":527,"src":528},"rev2ex2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.92_rev2ex2.png",[],{"type":510,"tag":531,"props":532,"children":535},"pre",{"className":533,"code":534,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[536],{"type":510,"tag":537,"props":538,"children":539},"code",{"__ignoreMap":503},[540,551],{"type":510,"tag":541,"props":542,"children":545},"span",{"class":543,"line":544},"line",1,[546],{"type":510,"tag":541,"props":547,"children":548},{},[549],{"type":515,"value":550},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":510,"tag":541,"props":552,"children":554},{"class":543,"line":553},2,[555],{"type":510,"tag":541,"props":556,"children":557},{},[558],{"type":515,"value":559},"输出：[1,4,3,2,5]\n",{"type":510,"tag":511,"props":561,"children":562},{},[563],{"type":515,"value":564},"示例 2：",{"type":510,"tag":531,"props":566,"children":568},{"className":533,"code":567,"language":515,"meta":503,"style":503},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[569],{"type":510,"tag":537,"props":570,"children":571},{"__ignoreMap":503},[572,580],{"type":510,"tag":541,"props":573,"children":574},{"class":543,"line":544},[575],{"type":510,"tag":541,"props":576,"children":577},{},[578],{"type":515,"value":579},"输入：head = [5], left = 1, right = 1\n",{"type":510,"tag":541,"props":581,"children":582},{"class":543,"line":553},[583],{"type":510,"tag":541,"props":584,"children":585},{},[586],{"type":515,"value":587},"输出：[5]\n",{"type":510,"tag":511,"props":589,"children":590},{},[591],{"type":515,"value":592},"提示：",{"type":510,"tag":594,"props":595,"children":596},"ul",{},[597,603,608,613],{"type":510,"tag":598,"props":599,"children":600},"li",{},[601],{"type":515,"value":602},"链表中节点数目为 n",{"type":510,"tag":598,"props":604,"children":605},{},[606],{"type":515,"value":607},"1 \u003C= n \u003C= 500",{"type":510,"tag":598,"props":609,"children":610},{},[611],{"type":515,"value":612},"-500 \u003C= Node.val \u003C= 500",{"type":510,"tag":598,"props":614,"children":615},{},[616],{"type":515,"value":617},"1 \u003C= left \u003C= right \u003C= n",{"type":510,"tag":511,"props":619,"children":620},{},[621],{"type":515,"value":622},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":510,"tag":624,"props":625,"children":627},"h2",{"id":626},"解题思路",[628],{"type":515,"value":626},{"type":510,"tag":511,"props":630,"children":631},{},[632],{"type":515,"value":633},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":510,"tag":624,"props":635,"children":637},{"id":636},"实现",[638],{"type":515,"value":636},{"type":510,"tag":531,"props":640,"children":644},{"className":641,"code":642,"language":643,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[645],{"type":510,"tag":537,"props":646,"children":647},{"__ignoreMap":503},[648,657,665,674,683,692,701,710,718,761,795,828,858,866,931,964,997,1007,1016,1025,1034,1060,1142,1171,1180,1188,1214,1247,1328,1362,1391,1412,1432,1440,1448,1457,1466,1503,1531,1539,1564],{"type":510,"tag":541,"props":649,"children":650},{"class":543,"line":544},[651],{"type":510,"tag":541,"props":652,"children":654},{"style":653},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[655],{"type":515,"value":656},"/**\n",{"type":510,"tag":541,"props":658,"children":659},{"class":543,"line":553},[660],{"type":510,"tag":541,"props":661,"children":662},{"style":653},[663],{"type":515,"value":664}," * Definition for singly-linked list.\n",{"type":510,"tag":541,"props":666,"children":668},{"class":543,"line":667},3,[669],{"type":510,"tag":541,"props":670,"children":671},{"style":653},[672],{"type":515,"value":673}," * function ListNode(val, next) {\n",{"type":510,"tag":541,"props":675,"children":677},{"class":543,"line":676},4,[678],{"type":510,"tag":541,"props":679,"children":680},{"style":653},[681],{"type":515,"value":682}," *     this.val = (val===undefined ? 0 : val)\n",{"type":510,"tag":541,"props":684,"children":686},{"class":543,"line":685},5,[687],{"type":510,"tag":541,"props":688,"children":689},{"style":653},[690],{"type":515,"value":691}," *     this.next = (next===undefined ? null : next)\n",{"type":510,"tag":541,"props":693,"children":695},{"class":543,"line":694},6,[696],{"type":510,"tag":541,"props":697,"children":698},{"style":653},[699],{"type":515,"value":700}," * }\n",{"type":510,"tag":541,"props":702,"children":704},{"class":543,"line":703},7,[705],{"type":510,"tag":541,"props":706,"children":707},{"style":653},[708],{"type":515,"value":709}," */\n",{"type":510,"tag":541,"props":711,"children":713},{"class":543,"line":712},8,[714],{"type":510,"tag":541,"props":715,"children":716},{"style":653},[717],{"type":515,"value":656},{"type":510,"tag":541,"props":719,"children":721},{"class":543,"line":720},9,[722,727,733,739,744,750,755],{"type":510,"tag":541,"props":723,"children":724},{"style":653},[725],{"type":515,"value":726}," * ",{"type":510,"tag":541,"props":728,"children":730},{"style":729},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[731],{"type":515,"value":732},"@",{"type":510,"tag":541,"props":734,"children":736},{"style":735},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[737],{"type":515,"value":738},"param",{"type":510,"tag":541,"props":740,"children":741},{"style":729},[742],{"type":515,"value":743}," {",{"type":510,"tag":541,"props":745,"children":747},{"style":746},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[748],{"type":515,"value":749},"ListNode",{"type":510,"tag":541,"props":751,"children":752},{"style":729},[753],{"type":515,"value":754},"}",{"type":510,"tag":541,"props":756,"children":758},{"style":757},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[759],{"type":515,"value":760}," head\n",{"type":510,"tag":541,"props":762,"children":764},{"class":543,"line":763},10,[765,769,773,777,781,786,790],{"type":510,"tag":541,"props":766,"children":767},{"style":653},[768],{"type":515,"value":726},{"type":510,"tag":541,"props":770,"children":771},{"style":729},[772],{"type":515,"value":732},{"type":510,"tag":541,"props":774,"children":775},{"style":735},[776],{"type":515,"value":738},{"type":510,"tag":541,"props":778,"children":779},{"style":729},[780],{"type":515,"value":743},{"type":510,"tag":541,"props":782,"children":783},{"style":746},[784],{"type":515,"value":785},"number",{"type":510,"tag":541,"props":787,"children":788},{"style":729},[789],{"type":515,"value":754},{"type":510,"tag":541,"props":791,"children":792},{"style":757},[793],{"type":515,"value":794}," left\n",{"type":510,"tag":541,"props":796,"children":798},{"class":543,"line":797},11,[799,803,807,811,815,819,823],{"type":510,"tag":541,"props":800,"children":801},{"style":653},[802],{"type":515,"value":726},{"type":510,"tag":541,"props":804,"children":805},{"style":729},[806],{"type":515,"value":732},{"type":510,"tag":541,"props":808,"children":809},{"style":735},[810],{"type":515,"value":738},{"type":510,"tag":541,"props":812,"children":813},{"style":729},[814],{"type":515,"value":743},{"type":510,"tag":541,"props":816,"children":817},{"style":746},[818],{"type":515,"value":785},{"type":510,"tag":541,"props":820,"children":821},{"style":729},[822],{"type":515,"value":754},{"type":510,"tag":541,"props":824,"children":825},{"style":757},[826],{"type":515,"value":827}," right\n",{"type":510,"tag":541,"props":829,"children":831},{"class":543,"line":830},12,[832,836,840,845,849,853],{"type":510,"tag":541,"props":833,"children":834},{"style":653},[835],{"type":515,"value":726},{"type":510,"tag":541,"props":837,"children":838},{"style":729},[839],{"type":515,"value":732},{"type":510,"tag":541,"props":841,"children":842},{"style":735},[843],{"type":515,"value":844},"return",{"type":510,"tag":541,"props":846,"children":847},{"style":729},[848],{"type":515,"value":743},{"type":510,"tag":541,"props":850,"children":851},{"style":746},[852],{"type":515,"value":749},{"type":510,"tag":541,"props":854,"children":855},{"style":729},[856],{"type":515,"value":857},"}\n",{"type":510,"tag":541,"props":859,"children":861},{"class":543,"line":860},13,[862],{"type":510,"tag":541,"props":863,"children":864},{"style":653},[865],{"type":515,"value":709},{"type":510,"tag":541,"props":867,"children":869},{"class":543,"line":868},14,[870,876,882,887,892,897,902,907,912,916,921,926],{"type":510,"tag":541,"props":871,"children":873},{"style":872},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[874],{"type":515,"value":875},"var",{"type":510,"tag":541,"props":877,"children":879},{"style":878},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[880],{"type":515,"value":881}," reverseBetween",{"type":510,"tag":541,"props":883,"children":884},{"style":729},[885],{"type":515,"value":886}," =",{"type":510,"tag":541,"props":888,"children":889},{"style":872},[890],{"type":515,"value":891}," function",{"type":510,"tag":541,"props":893,"children":894},{"style":729},[895],{"type":515,"value":896}," (",{"type":510,"tag":541,"props":898,"children":899},{"style":757},[900],{"type":515,"value":901},"head",{"type":510,"tag":541,"props":903,"children":904},{"style":729},[905],{"type":515,"value":906},",",{"type":510,"tag":541,"props":908,"children":909},{"style":757},[910],{"type":515,"value":911}," left",{"type":510,"tag":541,"props":913,"children":914},{"style":729},[915],{"type":515,"value":906},{"type":510,"tag":541,"props":917,"children":918},{"style":757},[919],{"type":515,"value":920}," right",{"type":510,"tag":541,"props":922,"children":923},{"style":729},[924],{"type":515,"value":925},")",{"type":510,"tag":541,"props":927,"children":928},{"style":729},[929],{"type":515,"value":930}," {\n",{"type":510,"tag":541,"props":932,"children":934},{"class":543,"line":933},15,[935,940,945,949,954,959],{"type":510,"tag":541,"props":936,"children":937},{"style":872},[938],{"type":515,"value":939},"  const",{"type":510,"tag":541,"props":941,"children":942},{"style":757},[943],{"type":515,"value":944}," dummy",{"type":510,"tag":541,"props":946,"children":947},{"style":729},[948],{"type":515,"value":886},{"type":510,"tag":541,"props":950,"children":951},{"style":872},[952],{"type":515,"value":953}," new",{"type":510,"tag":541,"props":955,"children":956},{"style":878},[957],{"type":515,"value":958}," ListNode",{"type":510,"tag":541,"props":960,"children":961},{"style":729},[962],{"type":515,"value":963},"();\n",{"type":510,"tag":541,"props":965,"children":967},{"class":543,"line":966},16,[968,973,978,983,987,992],{"type":510,"tag":541,"props":969,"children":970},{"style":757},[971],{"type":515,"value":972},"  dummy",{"type":510,"tag":541,"props":974,"children":975},{"style":729},[976],{"type":515,"value":977},".",{"type":510,"tag":541,"props":979,"children":980},{"style":757},[981],{"type":515,"value":982},"next",{"type":510,"tag":541,"props":984,"children":985},{"style":729},[986],{"type":515,"value":886},{"type":510,"tag":541,"props":988,"children":989},{"style":757},[990],{"type":515,"value":991}," head",{"type":510,"tag":541,"props":993,"children":994},{"style":729},[995],{"type":515,"value":996},";\n",{"type":510,"tag":541,"props":998,"children":1000},{"class":543,"line":999},17,[1001],{"type":510,"tag":541,"props":1002,"children":1004},{"emptyLinePlaceholder":1003},true,[1005],{"type":515,"value":1006},"\n",{"type":510,"tag":541,"props":1008,"children":1010},{"class":543,"line":1009},18,[1011],{"type":510,"tag":541,"props":1012,"children":1013},{"style":653},[1014],{"type":515,"value":1015},"  // p0 代表反转中间段的上一个节点\n",{"type":510,"tag":541,"props":1017,"children":1019},{"class":543,"line":1018},19,[1020],{"type":510,"tag":541,"props":1021,"children":1022},{"style":653},[1023],{"type":515,"value":1024},"  // left = 1 时，构造哨兵节点\n",{"type":510,"tag":541,"props":1026,"children":1028},{"class":543,"line":1027},20,[1029],{"type":510,"tag":541,"props":1030,"children":1031},{"style":653},[1032],{"type":515,"value":1033},"  // 循环后，到达反转后的上一个节点\n",{"type":510,"tag":541,"props":1035,"children":1037},{"class":543,"line":1036},21,[1038,1043,1048,1052,1056],{"type":510,"tag":541,"props":1039,"children":1040},{"style":872},[1041],{"type":515,"value":1042},"  let",{"type":510,"tag":541,"props":1044,"children":1045},{"style":757},[1046],{"type":515,"value":1047}," p0",{"type":510,"tag":541,"props":1049,"children":1050},{"style":729},[1051],{"type":515,"value":886},{"type":510,"tag":541,"props":1053,"children":1054},{"style":757},[1055],{"type":515,"value":944},{"type":510,"tag":541,"props":1057,"children":1058},{"style":729},[1059],{"type":515,"value":996},{"type":510,"tag":541,"props":1061,"children":1063},{"class":543,"line":1062},22,[1064,1069,1073,1078,1083,1087,1093,1098,1102,1107,1111,1116,1121,1125,1129,1134,1138],{"type":510,"tag":541,"props":1065,"children":1066},{"style":735},[1067],{"type":515,"value":1068},"  for",{"type":510,"tag":541,"props":1070,"children":1071},{"style":729},[1072],{"type":515,"value":896},{"type":510,"tag":541,"props":1074,"children":1075},{"style":872},[1076],{"type":515,"value":1077},"let",{"type":510,"tag":541,"props":1079,"children":1080},{"style":757},[1081],{"type":515,"value":1082}," i",{"type":510,"tag":541,"props":1084,"children":1085},{"style":729},[1086],{"type":515,"value":886},{"type":510,"tag":541,"props":1088,"children":1090},{"style":1089},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1091],{"type":515,"value":1092}," 0",{"type":510,"tag":541,"props":1094,"children":1095},{"style":729},[1096],{"type":515,"value":1097},";",{"type":510,"tag":541,"props":1099,"children":1100},{"style":757},[1101],{"type":515,"value":1082},{"type":510,"tag":541,"props":1103,"children":1104},{"style":729},[1105],{"type":515,"value":1106}," \u003C",{"type":510,"tag":541,"props":1108,"children":1109},{"style":757},[1110],{"type":515,"value":911},{"type":510,"tag":541,"props":1112,"children":1113},{"style":872},[1114],{"type":515,"value":1115}," -",{"type":510,"tag":541,"props":1117,"children":1118},{"style":1089},[1119],{"type":515,"value":1120}," 1",{"type":510,"tag":541,"props":1122,"children":1123},{"style":729},[1124],{"type":515,"value":1097},{"type":510,"tag":541,"props":1126,"children":1127},{"style":757},[1128],{"type":515,"value":1082},{"type":510,"tag":541,"props":1130,"children":1131},{"style":872},[1132],{"type":515,"value":1133},"++",{"type":510,"tag":541,"props":1135,"children":1136},{"style":729},[1137],{"type":515,"value":925},{"type":510,"tag":541,"props":1139,"children":1140},{"style":729},[1141],{"type":515,"value":930},{"type":510,"tag":541,"props":1143,"children":1145},{"class":543,"line":1144},23,[1146,1151,1155,1159,1163,1167],{"type":510,"tag":541,"props":1147,"children":1148},{"style":757},[1149],{"type":515,"value":1150},"    p0",{"type":510,"tag":541,"props":1152,"children":1153},{"style":729},[1154],{"type":515,"value":886},{"type":510,"tag":541,"props":1156,"children":1157},{"style":757},[1158],{"type":515,"value":1047},{"type":510,"tag":541,"props":1160,"children":1161},{"style":729},[1162],{"type":515,"value":977},{"type":510,"tag":541,"props":1164,"children":1165},{"style":757},[1166],{"type":515,"value":982},{"type":510,"tag":541,"props":1168,"children":1169},{"style":729},[1170],{"type":515,"value":996},{"type":510,"tag":541,"props":1172,"children":1174},{"class":543,"line":1173},24,[1175],{"type":510,"tag":541,"props":1176,"children":1177},{"style":729},[1178],{"type":515,"value":1179},"  }\n",{"type":510,"tag":541,"props":1181,"children":1183},{"class":543,"line":1182},25,[1184],{"type":510,"tag":541,"props":1185,"children":1186},{"emptyLinePlaceholder":1003},[1187],{"type":515,"value":1006},{"type":510,"tag":541,"props":1189,"children":1191},{"class":543,"line":1190},26,[1192,1196,1201,1205,1210],{"type":510,"tag":541,"props":1193,"children":1194},{"style":872},[1195],{"type":515,"value":1042},{"type":510,"tag":541,"props":1197,"children":1198},{"style":757},[1199],{"type":515,"value":1200}," prev",{"type":510,"tag":541,"props":1202,"children":1203},{"style":729},[1204],{"type":515,"value":886},{"type":510,"tag":541,"props":1206,"children":1207},{"style":872},[1208],{"type":515,"value":1209}," null",{"type":510,"tag":541,"props":1211,"children":1212},{"style":729},[1213],{"type":515,"value":996},{"type":510,"tag":541,"props":1215,"children":1217},{"class":543,"line":1216},27,[1218,1222,1227,1231,1235,1239,1243],{"type":510,"tag":541,"props":1219,"children":1220},{"style":872},[1221],{"type":515,"value":1042},{"type":510,"tag":541,"props":1223,"children":1224},{"style":757},[1225],{"type":515,"value":1226}," current",{"type":510,"tag":541,"props":1228,"children":1229},{"style":729},[1230],{"type":515,"value":886},{"type":510,"tag":541,"props":1232,"children":1233},{"style":757},[1234],{"type":515,"value":1047},{"type":510,"tag":541,"props":1236,"children":1237},{"style":729},[1238],{"type":515,"value":977},{"type":510,"tag":541,"props":1240,"children":1241},{"style":757},[1242],{"type":515,"value":982},{"type":510,"tag":541,"props":1244,"children":1245},{"style":729},[1246],{"type":515,"value":996},{"type":510,"tag":541,"props":1248,"children":1250},{"class":543,"line":1249},28,[1251,1255,1259,1263,1267,1271,1275,1279,1283,1287,1291,1295,1299,1304,1308,1312,1316,1320,1324],{"type":510,"tag":541,"props":1252,"children":1253},{"style":735},[1254],{"type":515,"value":1068},{"type":510,"tag":541,"props":1256,"children":1257},{"style":729},[1258],{"type":515,"value":896},{"type":510,"tag":541,"props":1260,"children":1261},{"style":872},[1262],{"type":515,"value":1077},{"type":510,"tag":541,"props":1264,"children":1265},{"style":757},[1266],{"type":515,"value":1082},{"type":510,"tag":541,"props":1268,"children":1269},{"style":729},[1270],{"type":515,"value":886},{"type":510,"tag":541,"props":1272,"children":1273},{"style":1089},[1274],{"type":515,"value":1092},{"type":510,"tag":541,"props":1276,"children":1277},{"style":729},[1278],{"type":515,"value":1097},{"type":510,"tag":541,"props":1280,"children":1281},{"style":757},[1282],{"type":515,"value":1082},{"type":510,"tag":541,"props":1284,"children":1285},{"style":729},[1286],{"type":515,"value":1106},{"type":510,"tag":541,"props":1288,"children":1289},{"style":757},[1290],{"type":515,"value":920},{"type":510,"tag":541,"props":1292,"children":1293},{"style":872},[1294],{"type":515,"value":1115},{"type":510,"tag":541,"props":1296,"children":1297},{"style":757},[1298],{"type":515,"value":911},{"type":510,"tag":541,"props":1300,"children":1301},{"style":872},[1302],{"type":515,"value":1303}," +",{"type":510,"tag":541,"props":1305,"children":1306},{"style":1089},[1307],{"type":515,"value":1120},{"type":510,"tag":541,"props":1309,"children":1310},{"style":729},[1311],{"type":515,"value":1097},{"type":510,"tag":541,"props":1313,"children":1314},{"style":757},[1315],{"type":515,"value":1082},{"type":510,"tag":541,"props":1317,"children":1318},{"style":872},[1319],{"type":515,"value":1133},{"type":510,"tag":541,"props":1321,"children":1322},{"style":729},[1323],{"type":515,"value":925},{"type":510,"tag":541,"props":1325,"children":1326},{"style":729},[1327],{"type":515,"value":930},{"type":510,"tag":541,"props":1329,"children":1331},{"class":543,"line":1330},29,[1332,1337,1342,1346,1350,1354,1358],{"type":510,"tag":541,"props":1333,"children":1334},{"style":872},[1335],{"type":515,"value":1336},"    const",{"type":510,"tag":541,"props":1338,"children":1339},{"style":757},[1340],{"type":515,"value":1341}," next",{"type":510,"tag":541,"props":1343,"children":1344},{"style":729},[1345],{"type":515,"value":886},{"type":510,"tag":541,"props":1347,"children":1348},{"style":757},[1349],{"type":515,"value":1226},{"type":510,"tag":541,"props":1351,"children":1352},{"style":729},[1353],{"type":515,"value":977},{"type":510,"tag":541,"props":1355,"children":1356},{"style":757},[1357],{"type":515,"value":982},{"type":510,"tag":541,"props":1359,"children":1360},{"style":729},[1361],{"type":515,"value":996},{"type":510,"tag":541,"props":1363,"children":1365},{"class":543,"line":1364},30,[1366,1371,1375,1379,1383,1387],{"type":510,"tag":541,"props":1367,"children":1368},{"style":757},[1369],{"type":515,"value":1370},"    current",{"type":510,"tag":541,"props":1372,"children":1373},{"style":729},[1374],{"type":515,"value":977},{"type":510,"tag":541,"props":1376,"children":1377},{"style":757},[1378],{"type":515,"value":982},{"type":510,"tag":541,"props":1380,"children":1381},{"style":729},[1382],{"type":515,"value":886},{"type":510,"tag":541,"props":1384,"children":1385},{"style":757},[1386],{"type":515,"value":1200},{"type":510,"tag":541,"props":1388,"children":1389},{"style":729},[1390],{"type":515,"value":996},{"type":510,"tag":541,"props":1392,"children":1394},{"class":543,"line":1393},31,[1395,1400,1404,1408],{"type":510,"tag":541,"props":1396,"children":1397},{"style":757},[1398],{"type":515,"value":1399},"    prev",{"type":510,"tag":541,"props":1401,"children":1402},{"style":729},[1403],{"type":515,"value":886},{"type":510,"tag":541,"props":1405,"children":1406},{"style":757},[1407],{"type":515,"value":1226},{"type":510,"tag":541,"props":1409,"children":1410},{"style":729},[1411],{"type":515,"value":996},{"type":510,"tag":541,"props":1413,"children":1415},{"class":543,"line":1414},32,[1416,1420,1424,1428],{"type":510,"tag":541,"props":1417,"children":1418},{"style":757},[1419],{"type":515,"value":1370},{"type":510,"tag":541,"props":1421,"children":1422},{"style":729},[1423],{"type":515,"value":886},{"type":510,"tag":541,"props":1425,"children":1426},{"style":757},[1427],{"type":515,"value":1341},{"type":510,"tag":541,"props":1429,"children":1430},{"style":729},[1431],{"type":515,"value":996},{"type":510,"tag":541,"props":1433,"children":1435},{"class":543,"line":1434},33,[1436],{"type":510,"tag":541,"props":1437,"children":1438},{"style":729},[1439],{"type":515,"value":1179},{"type":510,"tag":541,"props":1441,"children":1443},{"class":543,"line":1442},34,[1444],{"type":510,"tag":541,"props":1445,"children":1446},{"emptyLinePlaceholder":1003},[1447],{"type":515,"value":1006},{"type":510,"tag":541,"props":1449,"children":1451},{"class":543,"line":1450},35,[1452],{"type":510,"tag":541,"props":1453,"children":1454},{"style":653},[1455],{"type":515,"value":1456},"  // p0 指向 prev\n",{"type":510,"tag":541,"props":1458,"children":1460},{"class":543,"line":1459},36,[1461],{"type":510,"tag":541,"props":1462,"children":1463},{"style":653},[1464],{"type":515,"value":1465},"  // p0 的 next 指向 current\n",{"type":510,"tag":541,"props":1467,"children":1469},{"class":543,"line":1468},37,[1470,1475,1479,1483,1487,1491,1495,1499],{"type":510,"tag":541,"props":1471,"children":1472},{"style":757},[1473],{"type":515,"value":1474},"  p0",{"type":510,"tag":541,"props":1476,"children":1477},{"style":729},[1478],{"type":515,"value":977},{"type":510,"tag":541,"props":1480,"children":1481},{"style":757},[1482],{"type":515,"value":982},{"type":510,"tag":541,"props":1484,"children":1485},{"style":729},[1486],{"type":515,"value":977},{"type":510,"tag":541,"props":1488,"children":1489},{"style":757},[1490],{"type":515,"value":982},{"type":510,"tag":541,"props":1492,"children":1493},{"style":729},[1494],{"type":515,"value":886},{"type":510,"tag":541,"props":1496,"children":1497},{"style":757},[1498],{"type":515,"value":1226},{"type":510,"tag":541,"props":1500,"children":1501},{"style":729},[1502],{"type":515,"value":996},{"type":510,"tag":541,"props":1504,"children":1506},{"class":543,"line":1505},38,[1507,1511,1515,1519,1523,1527],{"type":510,"tag":541,"props":1508,"children":1509},{"style":757},[1510],{"type":515,"value":1474},{"type":510,"tag":541,"props":1512,"children":1513},{"style":729},[1514],{"type":515,"value":977},{"type":510,"tag":541,"props":1516,"children":1517},{"style":757},[1518],{"type":515,"value":982},{"type":510,"tag":541,"props":1520,"children":1521},{"style":729},[1522],{"type":515,"value":886},{"type":510,"tag":541,"props":1524,"children":1525},{"style":757},[1526],{"type":515,"value":1200},{"type":510,"tag":541,"props":1528,"children":1529},{"style":729},[1530],{"type":515,"value":996},{"type":510,"tag":541,"props":1532,"children":1534},{"class":543,"line":1533},39,[1535],{"type":510,"tag":541,"props":1536,"children":1537},{"emptyLinePlaceholder":1003},[1538],{"type":515,"value":1006},{"type":510,"tag":541,"props":1540,"children":1542},{"class":543,"line":1541},40,[1543,1548,1552,1556,1560],{"type":510,"tag":541,"props":1544,"children":1545},{"style":735},[1546],{"type":515,"value":1547},"  return",{"type":510,"tag":541,"props":1549,"children":1550},{"style":757},[1551],{"type":515,"value":944},{"type":510,"tag":541,"props":1553,"children":1554},{"style":729},[1555],{"type":515,"value":977},{"type":510,"tag":541,"props":1557,"children":1558},{"style":757},[1559],{"type":515,"value":982},{"type":510,"tag":541,"props":1561,"children":1562},{"style":729},[1563],{"type":515,"value":996},{"type":510,"tag":541,"props":1565,"children":1567},{"class":543,"line":1566},41,[1568],{"type":510,"tag":541,"props":1569,"children":1570},{"style":729},[1571],{"type":515,"value":1572},"};\n",{"type":510,"tag":1574,"props":1575,"children":1576},"style",{},[1577],{"type":515,"value":1578},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":685,"depth":685,"links":1580},[1581,1582],{"id":626,"depth":553,"text":626},{"id":636,"depth":553,"text":636},"markdown","content:1.algorithm:3.leetcode:3.major:92.reverse-linked-list-ii.md","content","1.algorithm/3.leetcode/3.major/92.reverse-linked-list-ii.md","md",[1589,1591],{"_path":141,"title":140,"description":1590},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":147,"title":146,"description":1592},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1714054336989]