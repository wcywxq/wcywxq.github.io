[{"data":1,"prerenderedAt":1599},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-linked-list-ii":506,"/algorithm/leetcode/major/reverse-linked-list-ii-surround":1594},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":144,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":143,"description":510,"url":511,"body":512,"_type":1589,"_id":1590,"_source":1591,"_file":1592,"_extension":1593},"major",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":513,"children":514,"toc":1585},"root",[515,522,527,536,566,571,594,599,624,629,635,640,645,1579],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"示例 1：",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":516,"tag":531,"props":532,"children":535},"img",{"alt":533,"src":534},"rev2ex2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.92_rev2ex2.png",[],{"type":516,"tag":537,"props":538,"children":541},"pre",{"className":539,"code":540,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[542],{"type":516,"tag":543,"props":544,"children":545},"code",{"__ignoreMap":509},[546,557],{"type":516,"tag":547,"props":548,"children":551},"span",{"class":549,"line":550},"line",1,[552],{"type":516,"tag":547,"props":553,"children":554},{},[555],{"type":521,"value":556},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":516,"tag":547,"props":558,"children":560},{"class":549,"line":559},2,[561],{"type":516,"tag":547,"props":562,"children":563},{},[564],{"type":521,"value":565},"输出：[1,4,3,2,5]\n",{"type":516,"tag":517,"props":567,"children":568},{},[569],{"type":521,"value":570},"示例 2：",{"type":516,"tag":537,"props":572,"children":574},{"className":539,"code":573,"language":521,"meta":509,"style":509},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[575],{"type":516,"tag":543,"props":576,"children":577},{"__ignoreMap":509},[578,586],{"type":516,"tag":547,"props":579,"children":580},{"class":549,"line":550},[581],{"type":516,"tag":547,"props":582,"children":583},{},[584],{"type":521,"value":585},"输入：head = [5], left = 1, right = 1\n",{"type":516,"tag":547,"props":587,"children":588},{"class":549,"line":559},[589],{"type":516,"tag":547,"props":590,"children":591},{},[592],{"type":521,"value":593},"输出：[5]\n",{"type":516,"tag":517,"props":595,"children":596},{},[597],{"type":521,"value":598},"提示：",{"type":516,"tag":600,"props":601,"children":602},"ul",{},[603,609,614,619],{"type":516,"tag":604,"props":605,"children":606},"li",{},[607],{"type":521,"value":608},"链表中节点数目为 n",{"type":516,"tag":604,"props":610,"children":611},{},[612],{"type":521,"value":613},"1 \u003C= n \u003C= 500",{"type":516,"tag":604,"props":615,"children":616},{},[617],{"type":521,"value":618},"-500 \u003C= Node.val \u003C= 500",{"type":516,"tag":604,"props":620,"children":621},{},[622],{"type":521,"value":623},"1 \u003C= left \u003C= right \u003C= n",{"type":516,"tag":517,"props":625,"children":626},{},[627],{"type":521,"value":628},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":516,"tag":630,"props":631,"children":633},"h2",{"id":632},"解题思路",[634],{"type":521,"value":632},{"type":516,"tag":517,"props":636,"children":637},{},[638],{"type":521,"value":639},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":516,"tag":630,"props":641,"children":643},{"id":642},"实现",[644],{"type":521,"value":642},{"type":516,"tag":537,"props":646,"children":650},{"className":647,"code":648,"language":649,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[651],{"type":516,"tag":543,"props":652,"children":653},{"__ignoreMap":509},[654,663,671,680,689,698,707,716,724,767,801,834,864,872,937,970,1003,1013,1022,1031,1040,1066,1148,1177,1186,1194,1220,1253,1334,1368,1397,1418,1438,1446,1454,1463,1472,1509,1537,1545,1570],{"type":516,"tag":547,"props":655,"children":656},{"class":549,"line":550},[657],{"type":516,"tag":547,"props":658,"children":660},{"style":659},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[661],{"type":521,"value":662},"/**\n",{"type":516,"tag":547,"props":664,"children":665},{"class":549,"line":559},[666],{"type":516,"tag":547,"props":667,"children":668},{"style":659},[669],{"type":521,"value":670}," * Definition for singly-linked list.\n",{"type":516,"tag":547,"props":672,"children":674},{"class":549,"line":673},3,[675],{"type":516,"tag":547,"props":676,"children":677},{"style":659},[678],{"type":521,"value":679}," * function ListNode(val, next) {\n",{"type":516,"tag":547,"props":681,"children":683},{"class":549,"line":682},4,[684],{"type":516,"tag":547,"props":685,"children":686},{"style":659},[687],{"type":521,"value":688}," *     this.val = (val===undefined ? 0 : val)\n",{"type":516,"tag":547,"props":690,"children":692},{"class":549,"line":691},5,[693],{"type":516,"tag":547,"props":694,"children":695},{"style":659},[696],{"type":521,"value":697}," *     this.next = (next===undefined ? null : next)\n",{"type":516,"tag":547,"props":699,"children":701},{"class":549,"line":700},6,[702],{"type":516,"tag":547,"props":703,"children":704},{"style":659},[705],{"type":521,"value":706}," * }\n",{"type":516,"tag":547,"props":708,"children":710},{"class":549,"line":709},7,[711],{"type":516,"tag":547,"props":712,"children":713},{"style":659},[714],{"type":521,"value":715}," */\n",{"type":516,"tag":547,"props":717,"children":719},{"class":549,"line":718},8,[720],{"type":516,"tag":547,"props":721,"children":722},{"style":659},[723],{"type":521,"value":662},{"type":516,"tag":547,"props":725,"children":727},{"class":549,"line":726},9,[728,733,739,745,750,756,761],{"type":516,"tag":547,"props":729,"children":730},{"style":659},[731],{"type":521,"value":732}," * ",{"type":516,"tag":547,"props":734,"children":736},{"style":735},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[737],{"type":521,"value":738},"@",{"type":516,"tag":547,"props":740,"children":742},{"style":741},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[743],{"type":521,"value":744},"param",{"type":516,"tag":547,"props":746,"children":747},{"style":735},[748],{"type":521,"value":749}," {",{"type":516,"tag":547,"props":751,"children":753},{"style":752},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[754],{"type":521,"value":755},"ListNode",{"type":516,"tag":547,"props":757,"children":758},{"style":735},[759],{"type":521,"value":760},"}",{"type":516,"tag":547,"props":762,"children":764},{"style":763},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[765],{"type":521,"value":766}," head\n",{"type":516,"tag":547,"props":768,"children":770},{"class":549,"line":769},10,[771,775,779,783,787,792,796],{"type":516,"tag":547,"props":772,"children":773},{"style":659},[774],{"type":521,"value":732},{"type":516,"tag":547,"props":776,"children":777},{"style":735},[778],{"type":521,"value":738},{"type":516,"tag":547,"props":780,"children":781},{"style":741},[782],{"type":521,"value":744},{"type":516,"tag":547,"props":784,"children":785},{"style":735},[786],{"type":521,"value":749},{"type":516,"tag":547,"props":788,"children":789},{"style":752},[790],{"type":521,"value":791},"number",{"type":516,"tag":547,"props":793,"children":794},{"style":735},[795],{"type":521,"value":760},{"type":516,"tag":547,"props":797,"children":798},{"style":763},[799],{"type":521,"value":800}," left\n",{"type":516,"tag":547,"props":802,"children":804},{"class":549,"line":803},11,[805,809,813,817,821,825,829],{"type":516,"tag":547,"props":806,"children":807},{"style":659},[808],{"type":521,"value":732},{"type":516,"tag":547,"props":810,"children":811},{"style":735},[812],{"type":521,"value":738},{"type":516,"tag":547,"props":814,"children":815},{"style":741},[816],{"type":521,"value":744},{"type":516,"tag":547,"props":818,"children":819},{"style":735},[820],{"type":521,"value":749},{"type":516,"tag":547,"props":822,"children":823},{"style":752},[824],{"type":521,"value":791},{"type":516,"tag":547,"props":826,"children":827},{"style":735},[828],{"type":521,"value":760},{"type":516,"tag":547,"props":830,"children":831},{"style":763},[832],{"type":521,"value":833}," right\n",{"type":516,"tag":547,"props":835,"children":837},{"class":549,"line":836},12,[838,842,846,851,855,859],{"type":516,"tag":547,"props":839,"children":840},{"style":659},[841],{"type":521,"value":732},{"type":516,"tag":547,"props":843,"children":844},{"style":735},[845],{"type":521,"value":738},{"type":516,"tag":547,"props":847,"children":848},{"style":741},[849],{"type":521,"value":850},"return",{"type":516,"tag":547,"props":852,"children":853},{"style":735},[854],{"type":521,"value":749},{"type":516,"tag":547,"props":856,"children":857},{"style":752},[858],{"type":521,"value":755},{"type":516,"tag":547,"props":860,"children":861},{"style":735},[862],{"type":521,"value":863},"}\n",{"type":516,"tag":547,"props":865,"children":867},{"class":549,"line":866},13,[868],{"type":516,"tag":547,"props":869,"children":870},{"style":659},[871],{"type":521,"value":715},{"type":516,"tag":547,"props":873,"children":875},{"class":549,"line":874},14,[876,882,888,893,898,903,908,913,918,922,927,932],{"type":516,"tag":547,"props":877,"children":879},{"style":878},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[880],{"type":521,"value":881},"var",{"type":516,"tag":547,"props":883,"children":885},{"style":884},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[886],{"type":521,"value":887}," reverseBetween",{"type":516,"tag":547,"props":889,"children":890},{"style":735},[891],{"type":521,"value":892}," =",{"type":516,"tag":547,"props":894,"children":895},{"style":878},[896],{"type":521,"value":897}," function",{"type":516,"tag":547,"props":899,"children":900},{"style":735},[901],{"type":521,"value":902}," (",{"type":516,"tag":547,"props":904,"children":905},{"style":763},[906],{"type":521,"value":907},"head",{"type":516,"tag":547,"props":909,"children":910},{"style":735},[911],{"type":521,"value":912},",",{"type":516,"tag":547,"props":914,"children":915},{"style":763},[916],{"type":521,"value":917}," left",{"type":516,"tag":547,"props":919,"children":920},{"style":735},[921],{"type":521,"value":912},{"type":516,"tag":547,"props":923,"children":924},{"style":763},[925],{"type":521,"value":926}," right",{"type":516,"tag":547,"props":928,"children":929},{"style":735},[930],{"type":521,"value":931},")",{"type":516,"tag":547,"props":933,"children":934},{"style":735},[935],{"type":521,"value":936}," {\n",{"type":516,"tag":547,"props":938,"children":940},{"class":549,"line":939},15,[941,946,951,955,960,965],{"type":516,"tag":547,"props":942,"children":943},{"style":878},[944],{"type":521,"value":945},"  const",{"type":516,"tag":547,"props":947,"children":948},{"style":763},[949],{"type":521,"value":950}," dummy",{"type":516,"tag":547,"props":952,"children":953},{"style":735},[954],{"type":521,"value":892},{"type":516,"tag":547,"props":956,"children":957},{"style":878},[958],{"type":521,"value":959}," new",{"type":516,"tag":547,"props":961,"children":962},{"style":884},[963],{"type":521,"value":964}," ListNode",{"type":516,"tag":547,"props":966,"children":967},{"style":735},[968],{"type":521,"value":969},"();\n",{"type":516,"tag":547,"props":971,"children":973},{"class":549,"line":972},16,[974,979,984,989,993,998],{"type":516,"tag":547,"props":975,"children":976},{"style":763},[977],{"type":521,"value":978},"  dummy",{"type":516,"tag":547,"props":980,"children":981},{"style":735},[982],{"type":521,"value":983},".",{"type":516,"tag":547,"props":985,"children":986},{"style":763},[987],{"type":521,"value":988},"next",{"type":516,"tag":547,"props":990,"children":991},{"style":735},[992],{"type":521,"value":892},{"type":516,"tag":547,"props":994,"children":995},{"style":763},[996],{"type":521,"value":997}," head",{"type":516,"tag":547,"props":999,"children":1000},{"style":735},[1001],{"type":521,"value":1002},";\n",{"type":516,"tag":547,"props":1004,"children":1006},{"class":549,"line":1005},17,[1007],{"type":516,"tag":547,"props":1008,"children":1010},{"emptyLinePlaceholder":1009},true,[1011],{"type":521,"value":1012},"\n",{"type":516,"tag":547,"props":1014,"children":1016},{"class":549,"line":1015},18,[1017],{"type":516,"tag":547,"props":1018,"children":1019},{"style":659},[1020],{"type":521,"value":1021},"  // p0 代表反转中间段的上一个节点\n",{"type":516,"tag":547,"props":1023,"children":1025},{"class":549,"line":1024},19,[1026],{"type":516,"tag":547,"props":1027,"children":1028},{"style":659},[1029],{"type":521,"value":1030},"  // left = 1 时，构造哨兵节点\n",{"type":516,"tag":547,"props":1032,"children":1034},{"class":549,"line":1033},20,[1035],{"type":516,"tag":547,"props":1036,"children":1037},{"style":659},[1038],{"type":521,"value":1039},"  // 循环后，到达反转后的上一个节点\n",{"type":516,"tag":547,"props":1041,"children":1043},{"class":549,"line":1042},21,[1044,1049,1054,1058,1062],{"type":516,"tag":547,"props":1045,"children":1046},{"style":878},[1047],{"type":521,"value":1048},"  let",{"type":516,"tag":547,"props":1050,"children":1051},{"style":763},[1052],{"type":521,"value":1053}," p0",{"type":516,"tag":547,"props":1055,"children":1056},{"style":735},[1057],{"type":521,"value":892},{"type":516,"tag":547,"props":1059,"children":1060},{"style":763},[1061],{"type":521,"value":950},{"type":516,"tag":547,"props":1063,"children":1064},{"style":735},[1065],{"type":521,"value":1002},{"type":516,"tag":547,"props":1067,"children":1069},{"class":549,"line":1068},22,[1070,1075,1079,1084,1089,1093,1099,1104,1108,1113,1117,1122,1127,1131,1135,1140,1144],{"type":516,"tag":547,"props":1071,"children":1072},{"style":741},[1073],{"type":521,"value":1074},"  for",{"type":516,"tag":547,"props":1076,"children":1077},{"style":735},[1078],{"type":521,"value":902},{"type":516,"tag":547,"props":1080,"children":1081},{"style":878},[1082],{"type":521,"value":1083},"let",{"type":516,"tag":547,"props":1085,"children":1086},{"style":763},[1087],{"type":521,"value":1088}," i",{"type":516,"tag":547,"props":1090,"children":1091},{"style":735},[1092],{"type":521,"value":892},{"type":516,"tag":547,"props":1094,"children":1096},{"style":1095},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1097],{"type":521,"value":1098}," 0",{"type":516,"tag":547,"props":1100,"children":1101},{"style":735},[1102],{"type":521,"value":1103},";",{"type":516,"tag":547,"props":1105,"children":1106},{"style":763},[1107],{"type":521,"value":1088},{"type":516,"tag":547,"props":1109,"children":1110},{"style":735},[1111],{"type":521,"value":1112}," \u003C",{"type":516,"tag":547,"props":1114,"children":1115},{"style":763},[1116],{"type":521,"value":917},{"type":516,"tag":547,"props":1118,"children":1119},{"style":878},[1120],{"type":521,"value":1121}," -",{"type":516,"tag":547,"props":1123,"children":1124},{"style":1095},[1125],{"type":521,"value":1126}," 1",{"type":516,"tag":547,"props":1128,"children":1129},{"style":735},[1130],{"type":521,"value":1103},{"type":516,"tag":547,"props":1132,"children":1133},{"style":763},[1134],{"type":521,"value":1088},{"type":516,"tag":547,"props":1136,"children":1137},{"style":878},[1138],{"type":521,"value":1139},"++",{"type":516,"tag":547,"props":1141,"children":1142},{"style":735},[1143],{"type":521,"value":931},{"type":516,"tag":547,"props":1145,"children":1146},{"style":735},[1147],{"type":521,"value":936},{"type":516,"tag":547,"props":1149,"children":1151},{"class":549,"line":1150},23,[1152,1157,1161,1165,1169,1173],{"type":516,"tag":547,"props":1153,"children":1154},{"style":763},[1155],{"type":521,"value":1156},"    p0",{"type":516,"tag":547,"props":1158,"children":1159},{"style":735},[1160],{"type":521,"value":892},{"type":516,"tag":547,"props":1162,"children":1163},{"style":763},[1164],{"type":521,"value":1053},{"type":516,"tag":547,"props":1166,"children":1167},{"style":735},[1168],{"type":521,"value":983},{"type":516,"tag":547,"props":1170,"children":1171},{"style":763},[1172],{"type":521,"value":988},{"type":516,"tag":547,"props":1174,"children":1175},{"style":735},[1176],{"type":521,"value":1002},{"type":516,"tag":547,"props":1178,"children":1180},{"class":549,"line":1179},24,[1181],{"type":516,"tag":547,"props":1182,"children":1183},{"style":735},[1184],{"type":521,"value":1185},"  }\n",{"type":516,"tag":547,"props":1187,"children":1189},{"class":549,"line":1188},25,[1190],{"type":516,"tag":547,"props":1191,"children":1192},{"emptyLinePlaceholder":1009},[1193],{"type":521,"value":1012},{"type":516,"tag":547,"props":1195,"children":1197},{"class":549,"line":1196},26,[1198,1202,1207,1211,1216],{"type":516,"tag":547,"props":1199,"children":1200},{"style":878},[1201],{"type":521,"value":1048},{"type":516,"tag":547,"props":1203,"children":1204},{"style":763},[1205],{"type":521,"value":1206}," prev",{"type":516,"tag":547,"props":1208,"children":1209},{"style":735},[1210],{"type":521,"value":892},{"type":516,"tag":547,"props":1212,"children":1213},{"style":878},[1214],{"type":521,"value":1215}," null",{"type":516,"tag":547,"props":1217,"children":1218},{"style":735},[1219],{"type":521,"value":1002},{"type":516,"tag":547,"props":1221,"children":1223},{"class":549,"line":1222},27,[1224,1228,1233,1237,1241,1245,1249],{"type":516,"tag":547,"props":1225,"children":1226},{"style":878},[1227],{"type":521,"value":1048},{"type":516,"tag":547,"props":1229,"children":1230},{"style":763},[1231],{"type":521,"value":1232}," current",{"type":516,"tag":547,"props":1234,"children":1235},{"style":735},[1236],{"type":521,"value":892},{"type":516,"tag":547,"props":1238,"children":1239},{"style":763},[1240],{"type":521,"value":1053},{"type":516,"tag":547,"props":1242,"children":1243},{"style":735},[1244],{"type":521,"value":983},{"type":516,"tag":547,"props":1246,"children":1247},{"style":763},[1248],{"type":521,"value":988},{"type":516,"tag":547,"props":1250,"children":1251},{"style":735},[1252],{"type":521,"value":1002},{"type":516,"tag":547,"props":1254,"children":1256},{"class":549,"line":1255},28,[1257,1261,1265,1269,1273,1277,1281,1285,1289,1293,1297,1301,1305,1310,1314,1318,1322,1326,1330],{"type":516,"tag":547,"props":1258,"children":1259},{"style":741},[1260],{"type":521,"value":1074},{"type":516,"tag":547,"props":1262,"children":1263},{"style":735},[1264],{"type":521,"value":902},{"type":516,"tag":547,"props":1266,"children":1267},{"style":878},[1268],{"type":521,"value":1083},{"type":516,"tag":547,"props":1270,"children":1271},{"style":763},[1272],{"type":521,"value":1088},{"type":516,"tag":547,"props":1274,"children":1275},{"style":735},[1276],{"type":521,"value":892},{"type":516,"tag":547,"props":1278,"children":1279},{"style":1095},[1280],{"type":521,"value":1098},{"type":516,"tag":547,"props":1282,"children":1283},{"style":735},[1284],{"type":521,"value":1103},{"type":516,"tag":547,"props":1286,"children":1287},{"style":763},[1288],{"type":521,"value":1088},{"type":516,"tag":547,"props":1290,"children":1291},{"style":735},[1292],{"type":521,"value":1112},{"type":516,"tag":547,"props":1294,"children":1295},{"style":763},[1296],{"type":521,"value":926},{"type":516,"tag":547,"props":1298,"children":1299},{"style":878},[1300],{"type":521,"value":1121},{"type":516,"tag":547,"props":1302,"children":1303},{"style":763},[1304],{"type":521,"value":917},{"type":516,"tag":547,"props":1306,"children":1307},{"style":878},[1308],{"type":521,"value":1309}," +",{"type":516,"tag":547,"props":1311,"children":1312},{"style":1095},[1313],{"type":521,"value":1126},{"type":516,"tag":547,"props":1315,"children":1316},{"style":735},[1317],{"type":521,"value":1103},{"type":516,"tag":547,"props":1319,"children":1320},{"style":763},[1321],{"type":521,"value":1088},{"type":516,"tag":547,"props":1323,"children":1324},{"style":878},[1325],{"type":521,"value":1139},{"type":516,"tag":547,"props":1327,"children":1328},{"style":735},[1329],{"type":521,"value":931},{"type":516,"tag":547,"props":1331,"children":1332},{"style":735},[1333],{"type":521,"value":936},{"type":516,"tag":547,"props":1335,"children":1337},{"class":549,"line":1336},29,[1338,1343,1348,1352,1356,1360,1364],{"type":516,"tag":547,"props":1339,"children":1340},{"style":878},[1341],{"type":521,"value":1342},"    const",{"type":516,"tag":547,"props":1344,"children":1345},{"style":763},[1346],{"type":521,"value":1347}," next",{"type":516,"tag":547,"props":1349,"children":1350},{"style":735},[1351],{"type":521,"value":892},{"type":516,"tag":547,"props":1353,"children":1354},{"style":763},[1355],{"type":521,"value":1232},{"type":516,"tag":547,"props":1357,"children":1358},{"style":735},[1359],{"type":521,"value":983},{"type":516,"tag":547,"props":1361,"children":1362},{"style":763},[1363],{"type":521,"value":988},{"type":516,"tag":547,"props":1365,"children":1366},{"style":735},[1367],{"type":521,"value":1002},{"type":516,"tag":547,"props":1369,"children":1371},{"class":549,"line":1370},30,[1372,1377,1381,1385,1389,1393],{"type":516,"tag":547,"props":1373,"children":1374},{"style":763},[1375],{"type":521,"value":1376},"    current",{"type":516,"tag":547,"props":1378,"children":1379},{"style":735},[1380],{"type":521,"value":983},{"type":516,"tag":547,"props":1382,"children":1383},{"style":763},[1384],{"type":521,"value":988},{"type":516,"tag":547,"props":1386,"children":1387},{"style":735},[1388],{"type":521,"value":892},{"type":516,"tag":547,"props":1390,"children":1391},{"style":763},[1392],{"type":521,"value":1206},{"type":516,"tag":547,"props":1394,"children":1395},{"style":735},[1396],{"type":521,"value":1002},{"type":516,"tag":547,"props":1398,"children":1400},{"class":549,"line":1399},31,[1401,1406,1410,1414],{"type":516,"tag":547,"props":1402,"children":1403},{"style":763},[1404],{"type":521,"value":1405},"    prev",{"type":516,"tag":547,"props":1407,"children":1408},{"style":735},[1409],{"type":521,"value":892},{"type":516,"tag":547,"props":1411,"children":1412},{"style":763},[1413],{"type":521,"value":1232},{"type":516,"tag":547,"props":1415,"children":1416},{"style":735},[1417],{"type":521,"value":1002},{"type":516,"tag":547,"props":1419,"children":1421},{"class":549,"line":1420},32,[1422,1426,1430,1434],{"type":516,"tag":547,"props":1423,"children":1424},{"style":763},[1425],{"type":521,"value":1376},{"type":516,"tag":547,"props":1427,"children":1428},{"style":735},[1429],{"type":521,"value":892},{"type":516,"tag":547,"props":1431,"children":1432},{"style":763},[1433],{"type":521,"value":1347},{"type":516,"tag":547,"props":1435,"children":1436},{"style":735},[1437],{"type":521,"value":1002},{"type":516,"tag":547,"props":1439,"children":1441},{"class":549,"line":1440},33,[1442],{"type":516,"tag":547,"props":1443,"children":1444},{"style":735},[1445],{"type":521,"value":1185},{"type":516,"tag":547,"props":1447,"children":1449},{"class":549,"line":1448},34,[1450],{"type":516,"tag":547,"props":1451,"children":1452},{"emptyLinePlaceholder":1009},[1453],{"type":521,"value":1012},{"type":516,"tag":547,"props":1455,"children":1457},{"class":549,"line":1456},35,[1458],{"type":516,"tag":547,"props":1459,"children":1460},{"style":659},[1461],{"type":521,"value":1462},"  // p0 指向 prev\n",{"type":516,"tag":547,"props":1464,"children":1466},{"class":549,"line":1465},36,[1467],{"type":516,"tag":547,"props":1468,"children":1469},{"style":659},[1470],{"type":521,"value":1471},"  // p0 的 next 指向 current\n",{"type":516,"tag":547,"props":1473,"children":1475},{"class":549,"line":1474},37,[1476,1481,1485,1489,1493,1497,1501,1505],{"type":516,"tag":547,"props":1477,"children":1478},{"style":763},[1479],{"type":521,"value":1480},"  p0",{"type":516,"tag":547,"props":1482,"children":1483},{"style":735},[1484],{"type":521,"value":983},{"type":516,"tag":547,"props":1486,"children":1487},{"style":763},[1488],{"type":521,"value":988},{"type":516,"tag":547,"props":1490,"children":1491},{"style":735},[1492],{"type":521,"value":983},{"type":516,"tag":547,"props":1494,"children":1495},{"style":763},[1496],{"type":521,"value":988},{"type":516,"tag":547,"props":1498,"children":1499},{"style":735},[1500],{"type":521,"value":892},{"type":516,"tag":547,"props":1502,"children":1503},{"style":763},[1504],{"type":521,"value":1232},{"type":516,"tag":547,"props":1506,"children":1507},{"style":735},[1508],{"type":521,"value":1002},{"type":516,"tag":547,"props":1510,"children":1512},{"class":549,"line":1511},38,[1513,1517,1521,1525,1529,1533],{"type":516,"tag":547,"props":1514,"children":1515},{"style":763},[1516],{"type":521,"value":1480},{"type":516,"tag":547,"props":1518,"children":1519},{"style":735},[1520],{"type":521,"value":983},{"type":516,"tag":547,"props":1522,"children":1523},{"style":763},[1524],{"type":521,"value":988},{"type":516,"tag":547,"props":1526,"children":1527},{"style":735},[1528],{"type":521,"value":892},{"type":516,"tag":547,"props":1530,"children":1531},{"style":763},[1532],{"type":521,"value":1206},{"type":516,"tag":547,"props":1534,"children":1535},{"style":735},[1536],{"type":521,"value":1002},{"type":516,"tag":547,"props":1538,"children":1540},{"class":549,"line":1539},39,[1541],{"type":516,"tag":547,"props":1542,"children":1543},{"emptyLinePlaceholder":1009},[1544],{"type":521,"value":1012},{"type":516,"tag":547,"props":1546,"children":1548},{"class":549,"line":1547},40,[1549,1554,1558,1562,1566],{"type":516,"tag":547,"props":1550,"children":1551},{"style":741},[1552],{"type":521,"value":1553},"  return",{"type":516,"tag":547,"props":1555,"children":1556},{"style":763},[1557],{"type":521,"value":950},{"type":516,"tag":547,"props":1559,"children":1560},{"style":735},[1561],{"type":521,"value":983},{"type":516,"tag":547,"props":1563,"children":1564},{"style":763},[1565],{"type":521,"value":988},{"type":516,"tag":547,"props":1567,"children":1568},{"style":735},[1569],{"type":521,"value":1002},{"type":516,"tag":547,"props":1571,"children":1573},{"class":549,"line":1572},41,[1574],{"type":516,"tag":547,"props":1575,"children":1576},{"style":735},[1577],{"type":521,"value":1578},"};\n",{"type":516,"tag":1580,"props":1581,"children":1582},"style",{},[1583],{"type":521,"value":1584},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":691,"depth":691,"links":1586},[1587,1588],{"id":632,"depth":559,"text":632},{"id":642,"depth":559,"text":642},"markdown","content:1.algorithm:3.leetcode:3.major:92.reverse-linked-list-ii.md","content","1.algorithm/3.leetcode/3.major/92.reverse-linked-list-ii.md","md",[1595,1597],{"_path":141,"title":140,"description":1596},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":147,"title":146,"description":1598},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1714058126393]