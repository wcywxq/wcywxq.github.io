[{"data":1,"prerenderedAt":1636},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-linked-list-ii":543,"/algorithm/leetcode/major/reverse-linked-list-ii-surround":1631},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":144,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":143,"description":547,"url":548,"body":549,"_type":1626,"_id":1627,"_source":1628,"_file":1629,"_extension":1630},"major",false,"","给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。","https://leetcode.cn/problems/reverse-linked-list-ii",{"type":550,"children":551,"toc":1622},"root",[552,559,564,573,603,608,631,636,661,666,672,677,682,1616],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"示例 1：",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":553,"tag":568,"props":569,"children":572},"img",{"alt":570,"src":571},"rev2ex2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.92_rev2ex2.png",[],{"type":553,"tag":574,"props":575,"children":578},"pre",{"className":576,"code":577,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4,5], left = 2, right = 4\n输出：[1,4,3,2,5]\n",[579],{"type":553,"tag":580,"props":581,"children":582},"code",{"__ignoreMap":546},[583,594],{"type":553,"tag":584,"props":585,"children":588},"span",{"class":586,"line":587},"line",1,[589],{"type":553,"tag":584,"props":590,"children":591},{},[592],{"type":558,"value":593},"输入：head = [1,2,3,4,5], left = 2, right = 4\n",{"type":553,"tag":584,"props":595,"children":597},{"class":586,"line":596},2,[598],{"type":553,"tag":584,"props":599,"children":600},{},[601],{"type":558,"value":602},"输出：[1,4,3,2,5]\n",{"type":553,"tag":554,"props":604,"children":605},{},[606],{"type":558,"value":607},"示例 2：",{"type":553,"tag":574,"props":609,"children":611},{"className":576,"code":610,"language":558,"meta":546,"style":546},"输入：head = [5], left = 1, right = 1\n输出：[5]\n",[612],{"type":553,"tag":580,"props":613,"children":614},{"__ignoreMap":546},[615,623],{"type":553,"tag":584,"props":616,"children":617},{"class":586,"line":587},[618],{"type":553,"tag":584,"props":619,"children":620},{},[621],{"type":558,"value":622},"输入：head = [5], left = 1, right = 1\n",{"type":553,"tag":584,"props":624,"children":625},{"class":586,"line":596},[626],{"type":553,"tag":584,"props":627,"children":628},{},[629],{"type":558,"value":630},"输出：[5]\n",{"type":553,"tag":554,"props":632,"children":633},{},[634],{"type":558,"value":635},"提示：",{"type":553,"tag":637,"props":638,"children":639},"ul",{},[640,646,651,656],{"type":553,"tag":641,"props":642,"children":643},"li",{},[644],{"type":558,"value":645},"链表中节点数目为 n",{"type":553,"tag":641,"props":647,"children":648},{},[649],{"type":558,"value":650},"1 \u003C= n \u003C= 500",{"type":553,"tag":641,"props":652,"children":653},{},[654],{"type":558,"value":655},"-500 \u003C= Node.val \u003C= 500",{"type":553,"tag":641,"props":657,"children":658},{},[659],{"type":558,"value":660},"1 \u003C= left \u003C= right \u003C= n",{"type":553,"tag":554,"props":662,"children":663},{},[664],{"type":558,"value":665},"进阶： 你可以使用一趟扫描完成反转吗？",{"type":553,"tag":667,"props":668,"children":670},"h2",{"id":669},"解题思路",[671],{"type":558,"value":669},{"type":553,"tag":554,"props":673,"children":674},{},[675],{"type":558,"value":676},"性质：在反转结束后，从原链表上看，prev 指向反转这一段的末尾，current 指向反转这一段后续的下一个节点",{"type":553,"tag":667,"props":678,"children":680},{"id":679},"实现",[681],{"type":558,"value":679},{"type":553,"tag":574,"props":683,"children":687},{"className":684,"code":685,"language":686,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} left\n * @param {number} right\n * @return {ListNode}\n */\nvar reverseBetween = function (head, left, right) {\n  const dummy = new ListNode();\n  dummy.next = head;\n\n  // p0 代表反转中间段的上一个节点\n  // left = 1 时，构造哨兵节点\n  // 循环后，到达反转后的上一个节点\n  let p0 = dummy;\n  for (let i = 0; i \u003C left - 1; i++) {\n    p0 = p0.next;\n  }\n\n  let prev = null;\n  let current = p0.next;\n  for (let i = 0; i \u003C right - left + 1; i++) {\n    const next = current.next;\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n\n  // p0 指向 prev\n  // p0 的 next 指向 current\n  p0.next.next = current;\n  p0.next = prev;\n\n  return dummy.next;\n};\n","js",[688],{"type":553,"tag":580,"props":689,"children":690},{"__ignoreMap":546},[691,700,708,717,726,735,744,753,761,804,838,871,901,909,974,1007,1040,1050,1059,1068,1077,1103,1185,1214,1223,1231,1257,1290,1371,1405,1434,1455,1475,1483,1491,1500,1509,1546,1574,1582,1607],{"type":553,"tag":584,"props":692,"children":693},{"class":586,"line":587},[694],{"type":553,"tag":584,"props":695,"children":697},{"style":696},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[698],{"type":558,"value":699},"/**\n",{"type":553,"tag":584,"props":701,"children":702},{"class":586,"line":596},[703],{"type":553,"tag":584,"props":704,"children":705},{"style":696},[706],{"type":558,"value":707}," * Definition for singly-linked list.\n",{"type":553,"tag":584,"props":709,"children":711},{"class":586,"line":710},3,[712],{"type":553,"tag":584,"props":713,"children":714},{"style":696},[715],{"type":558,"value":716}," * function ListNode(val, next) {\n",{"type":553,"tag":584,"props":718,"children":720},{"class":586,"line":719},4,[721],{"type":553,"tag":584,"props":722,"children":723},{"style":696},[724],{"type":558,"value":725}," *     this.val = (val===undefined ? 0 : val)\n",{"type":553,"tag":584,"props":727,"children":729},{"class":586,"line":728},5,[730],{"type":553,"tag":584,"props":731,"children":732},{"style":696},[733],{"type":558,"value":734}," *     this.next = (next===undefined ? null : next)\n",{"type":553,"tag":584,"props":736,"children":738},{"class":586,"line":737},6,[739],{"type":553,"tag":584,"props":740,"children":741},{"style":696},[742],{"type":558,"value":743}," * }\n",{"type":553,"tag":584,"props":745,"children":747},{"class":586,"line":746},7,[748],{"type":553,"tag":584,"props":749,"children":750},{"style":696},[751],{"type":558,"value":752}," */\n",{"type":553,"tag":584,"props":754,"children":756},{"class":586,"line":755},8,[757],{"type":553,"tag":584,"props":758,"children":759},{"style":696},[760],{"type":558,"value":699},{"type":553,"tag":584,"props":762,"children":764},{"class":586,"line":763},9,[765,770,776,782,787,793,798],{"type":553,"tag":584,"props":766,"children":767},{"style":696},[768],{"type":558,"value":769}," * ",{"type":553,"tag":584,"props":771,"children":773},{"style":772},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[774],{"type":558,"value":775},"@",{"type":553,"tag":584,"props":777,"children":779},{"style":778},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[780],{"type":558,"value":781},"param",{"type":553,"tag":584,"props":783,"children":784},{"style":772},[785],{"type":558,"value":786}," {",{"type":553,"tag":584,"props":788,"children":790},{"style":789},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[791],{"type":558,"value":792},"ListNode",{"type":553,"tag":584,"props":794,"children":795},{"style":772},[796],{"type":558,"value":797},"}",{"type":553,"tag":584,"props":799,"children":801},{"style":800},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[802],{"type":558,"value":803}," head\n",{"type":553,"tag":584,"props":805,"children":807},{"class":586,"line":806},10,[808,812,816,820,824,829,833],{"type":553,"tag":584,"props":809,"children":810},{"style":696},[811],{"type":558,"value":769},{"type":553,"tag":584,"props":813,"children":814},{"style":772},[815],{"type":558,"value":775},{"type":553,"tag":584,"props":817,"children":818},{"style":778},[819],{"type":558,"value":781},{"type":553,"tag":584,"props":821,"children":822},{"style":772},[823],{"type":558,"value":786},{"type":553,"tag":584,"props":825,"children":826},{"style":789},[827],{"type":558,"value":828},"number",{"type":553,"tag":584,"props":830,"children":831},{"style":772},[832],{"type":558,"value":797},{"type":553,"tag":584,"props":834,"children":835},{"style":800},[836],{"type":558,"value":837}," left\n",{"type":553,"tag":584,"props":839,"children":841},{"class":586,"line":840},11,[842,846,850,854,858,862,866],{"type":553,"tag":584,"props":843,"children":844},{"style":696},[845],{"type":558,"value":769},{"type":553,"tag":584,"props":847,"children":848},{"style":772},[849],{"type":558,"value":775},{"type":553,"tag":584,"props":851,"children":852},{"style":778},[853],{"type":558,"value":781},{"type":553,"tag":584,"props":855,"children":856},{"style":772},[857],{"type":558,"value":786},{"type":553,"tag":584,"props":859,"children":860},{"style":789},[861],{"type":558,"value":828},{"type":553,"tag":584,"props":863,"children":864},{"style":772},[865],{"type":558,"value":797},{"type":553,"tag":584,"props":867,"children":868},{"style":800},[869],{"type":558,"value":870}," right\n",{"type":553,"tag":584,"props":872,"children":874},{"class":586,"line":873},12,[875,879,883,888,892,896],{"type":553,"tag":584,"props":876,"children":877},{"style":696},[878],{"type":558,"value":769},{"type":553,"tag":584,"props":880,"children":881},{"style":772},[882],{"type":558,"value":775},{"type":553,"tag":584,"props":884,"children":885},{"style":778},[886],{"type":558,"value":887},"return",{"type":553,"tag":584,"props":889,"children":890},{"style":772},[891],{"type":558,"value":786},{"type":553,"tag":584,"props":893,"children":894},{"style":789},[895],{"type":558,"value":792},{"type":553,"tag":584,"props":897,"children":898},{"style":772},[899],{"type":558,"value":900},"}\n",{"type":553,"tag":584,"props":902,"children":904},{"class":586,"line":903},13,[905],{"type":553,"tag":584,"props":906,"children":907},{"style":696},[908],{"type":558,"value":752},{"type":553,"tag":584,"props":910,"children":912},{"class":586,"line":911},14,[913,919,925,930,935,940,945,950,955,959,964,969],{"type":553,"tag":584,"props":914,"children":916},{"style":915},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[917],{"type":558,"value":918},"var",{"type":553,"tag":584,"props":920,"children":922},{"style":921},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[923],{"type":558,"value":924}," reverseBetween",{"type":553,"tag":584,"props":926,"children":927},{"style":772},[928],{"type":558,"value":929}," =",{"type":553,"tag":584,"props":931,"children":932},{"style":915},[933],{"type":558,"value":934}," function",{"type":553,"tag":584,"props":936,"children":937},{"style":772},[938],{"type":558,"value":939}," (",{"type":553,"tag":584,"props":941,"children":942},{"style":800},[943],{"type":558,"value":944},"head",{"type":553,"tag":584,"props":946,"children":947},{"style":772},[948],{"type":558,"value":949},",",{"type":553,"tag":584,"props":951,"children":952},{"style":800},[953],{"type":558,"value":954}," left",{"type":553,"tag":584,"props":956,"children":957},{"style":772},[958],{"type":558,"value":949},{"type":553,"tag":584,"props":960,"children":961},{"style":800},[962],{"type":558,"value":963}," right",{"type":553,"tag":584,"props":965,"children":966},{"style":772},[967],{"type":558,"value":968},")",{"type":553,"tag":584,"props":970,"children":971},{"style":772},[972],{"type":558,"value":973}," {\n",{"type":553,"tag":584,"props":975,"children":977},{"class":586,"line":976},15,[978,983,988,992,997,1002],{"type":553,"tag":584,"props":979,"children":980},{"style":915},[981],{"type":558,"value":982},"  const",{"type":553,"tag":584,"props":984,"children":985},{"style":800},[986],{"type":558,"value":987}," dummy",{"type":553,"tag":584,"props":989,"children":990},{"style":772},[991],{"type":558,"value":929},{"type":553,"tag":584,"props":993,"children":994},{"style":915},[995],{"type":558,"value":996}," new",{"type":553,"tag":584,"props":998,"children":999},{"style":921},[1000],{"type":558,"value":1001}," ListNode",{"type":553,"tag":584,"props":1003,"children":1004},{"style":772},[1005],{"type":558,"value":1006},"();\n",{"type":553,"tag":584,"props":1008,"children":1010},{"class":586,"line":1009},16,[1011,1016,1021,1026,1030,1035],{"type":553,"tag":584,"props":1012,"children":1013},{"style":800},[1014],{"type":558,"value":1015},"  dummy",{"type":553,"tag":584,"props":1017,"children":1018},{"style":772},[1019],{"type":558,"value":1020},".",{"type":553,"tag":584,"props":1022,"children":1023},{"style":800},[1024],{"type":558,"value":1025},"next",{"type":553,"tag":584,"props":1027,"children":1028},{"style":772},[1029],{"type":558,"value":929},{"type":553,"tag":584,"props":1031,"children":1032},{"style":800},[1033],{"type":558,"value":1034}," head",{"type":553,"tag":584,"props":1036,"children":1037},{"style":772},[1038],{"type":558,"value":1039},";\n",{"type":553,"tag":584,"props":1041,"children":1043},{"class":586,"line":1042},17,[1044],{"type":553,"tag":584,"props":1045,"children":1047},{"emptyLinePlaceholder":1046},true,[1048],{"type":558,"value":1049},"\n",{"type":553,"tag":584,"props":1051,"children":1053},{"class":586,"line":1052},18,[1054],{"type":553,"tag":584,"props":1055,"children":1056},{"style":696},[1057],{"type":558,"value":1058},"  // p0 代表反转中间段的上一个节点\n",{"type":553,"tag":584,"props":1060,"children":1062},{"class":586,"line":1061},19,[1063],{"type":553,"tag":584,"props":1064,"children":1065},{"style":696},[1066],{"type":558,"value":1067},"  // left = 1 时，构造哨兵节点\n",{"type":553,"tag":584,"props":1069,"children":1071},{"class":586,"line":1070},20,[1072],{"type":553,"tag":584,"props":1073,"children":1074},{"style":696},[1075],{"type":558,"value":1076},"  // 循环后，到达反转后的上一个节点\n",{"type":553,"tag":584,"props":1078,"children":1080},{"class":586,"line":1079},21,[1081,1086,1091,1095,1099],{"type":553,"tag":584,"props":1082,"children":1083},{"style":915},[1084],{"type":558,"value":1085},"  let",{"type":553,"tag":584,"props":1087,"children":1088},{"style":800},[1089],{"type":558,"value":1090}," p0",{"type":553,"tag":584,"props":1092,"children":1093},{"style":772},[1094],{"type":558,"value":929},{"type":553,"tag":584,"props":1096,"children":1097},{"style":800},[1098],{"type":558,"value":987},{"type":553,"tag":584,"props":1100,"children":1101},{"style":772},[1102],{"type":558,"value":1039},{"type":553,"tag":584,"props":1104,"children":1106},{"class":586,"line":1105},22,[1107,1112,1116,1121,1126,1130,1136,1141,1145,1150,1154,1159,1164,1168,1172,1177,1181],{"type":553,"tag":584,"props":1108,"children":1109},{"style":778},[1110],{"type":558,"value":1111},"  for",{"type":553,"tag":584,"props":1113,"children":1114},{"style":772},[1115],{"type":558,"value":939},{"type":553,"tag":584,"props":1117,"children":1118},{"style":915},[1119],{"type":558,"value":1120},"let",{"type":553,"tag":584,"props":1122,"children":1123},{"style":800},[1124],{"type":558,"value":1125}," i",{"type":553,"tag":584,"props":1127,"children":1128},{"style":772},[1129],{"type":558,"value":929},{"type":553,"tag":584,"props":1131,"children":1133},{"style":1132},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1134],{"type":558,"value":1135}," 0",{"type":553,"tag":584,"props":1137,"children":1138},{"style":772},[1139],{"type":558,"value":1140},";",{"type":553,"tag":584,"props":1142,"children":1143},{"style":800},[1144],{"type":558,"value":1125},{"type":553,"tag":584,"props":1146,"children":1147},{"style":772},[1148],{"type":558,"value":1149}," \u003C",{"type":553,"tag":584,"props":1151,"children":1152},{"style":800},[1153],{"type":558,"value":954},{"type":553,"tag":584,"props":1155,"children":1156},{"style":915},[1157],{"type":558,"value":1158}," -",{"type":553,"tag":584,"props":1160,"children":1161},{"style":1132},[1162],{"type":558,"value":1163}," 1",{"type":553,"tag":584,"props":1165,"children":1166},{"style":772},[1167],{"type":558,"value":1140},{"type":553,"tag":584,"props":1169,"children":1170},{"style":800},[1171],{"type":558,"value":1125},{"type":553,"tag":584,"props":1173,"children":1174},{"style":915},[1175],{"type":558,"value":1176},"++",{"type":553,"tag":584,"props":1178,"children":1179},{"style":772},[1180],{"type":558,"value":968},{"type":553,"tag":584,"props":1182,"children":1183},{"style":772},[1184],{"type":558,"value":973},{"type":553,"tag":584,"props":1186,"children":1188},{"class":586,"line":1187},23,[1189,1194,1198,1202,1206,1210],{"type":553,"tag":584,"props":1190,"children":1191},{"style":800},[1192],{"type":558,"value":1193},"    p0",{"type":553,"tag":584,"props":1195,"children":1196},{"style":772},[1197],{"type":558,"value":929},{"type":553,"tag":584,"props":1199,"children":1200},{"style":800},[1201],{"type":558,"value":1090},{"type":553,"tag":584,"props":1203,"children":1204},{"style":772},[1205],{"type":558,"value":1020},{"type":553,"tag":584,"props":1207,"children":1208},{"style":800},[1209],{"type":558,"value":1025},{"type":553,"tag":584,"props":1211,"children":1212},{"style":772},[1213],{"type":558,"value":1039},{"type":553,"tag":584,"props":1215,"children":1217},{"class":586,"line":1216},24,[1218],{"type":553,"tag":584,"props":1219,"children":1220},{"style":772},[1221],{"type":558,"value":1222},"  }\n",{"type":553,"tag":584,"props":1224,"children":1226},{"class":586,"line":1225},25,[1227],{"type":553,"tag":584,"props":1228,"children":1229},{"emptyLinePlaceholder":1046},[1230],{"type":558,"value":1049},{"type":553,"tag":584,"props":1232,"children":1234},{"class":586,"line":1233},26,[1235,1239,1244,1248,1253],{"type":553,"tag":584,"props":1236,"children":1237},{"style":915},[1238],{"type":558,"value":1085},{"type":553,"tag":584,"props":1240,"children":1241},{"style":800},[1242],{"type":558,"value":1243}," prev",{"type":553,"tag":584,"props":1245,"children":1246},{"style":772},[1247],{"type":558,"value":929},{"type":553,"tag":584,"props":1249,"children":1250},{"style":915},[1251],{"type":558,"value":1252}," null",{"type":553,"tag":584,"props":1254,"children":1255},{"style":772},[1256],{"type":558,"value":1039},{"type":553,"tag":584,"props":1258,"children":1260},{"class":586,"line":1259},27,[1261,1265,1270,1274,1278,1282,1286],{"type":553,"tag":584,"props":1262,"children":1263},{"style":915},[1264],{"type":558,"value":1085},{"type":553,"tag":584,"props":1266,"children":1267},{"style":800},[1268],{"type":558,"value":1269}," current",{"type":553,"tag":584,"props":1271,"children":1272},{"style":772},[1273],{"type":558,"value":929},{"type":553,"tag":584,"props":1275,"children":1276},{"style":800},[1277],{"type":558,"value":1090},{"type":553,"tag":584,"props":1279,"children":1280},{"style":772},[1281],{"type":558,"value":1020},{"type":553,"tag":584,"props":1283,"children":1284},{"style":800},[1285],{"type":558,"value":1025},{"type":553,"tag":584,"props":1287,"children":1288},{"style":772},[1289],{"type":558,"value":1039},{"type":553,"tag":584,"props":1291,"children":1293},{"class":586,"line":1292},28,[1294,1298,1302,1306,1310,1314,1318,1322,1326,1330,1334,1338,1342,1347,1351,1355,1359,1363,1367],{"type":553,"tag":584,"props":1295,"children":1296},{"style":778},[1297],{"type":558,"value":1111},{"type":553,"tag":584,"props":1299,"children":1300},{"style":772},[1301],{"type":558,"value":939},{"type":553,"tag":584,"props":1303,"children":1304},{"style":915},[1305],{"type":558,"value":1120},{"type":553,"tag":584,"props":1307,"children":1308},{"style":800},[1309],{"type":558,"value":1125},{"type":553,"tag":584,"props":1311,"children":1312},{"style":772},[1313],{"type":558,"value":929},{"type":553,"tag":584,"props":1315,"children":1316},{"style":1132},[1317],{"type":558,"value":1135},{"type":553,"tag":584,"props":1319,"children":1320},{"style":772},[1321],{"type":558,"value":1140},{"type":553,"tag":584,"props":1323,"children":1324},{"style":800},[1325],{"type":558,"value":1125},{"type":553,"tag":584,"props":1327,"children":1328},{"style":772},[1329],{"type":558,"value":1149},{"type":553,"tag":584,"props":1331,"children":1332},{"style":800},[1333],{"type":558,"value":963},{"type":553,"tag":584,"props":1335,"children":1336},{"style":915},[1337],{"type":558,"value":1158},{"type":553,"tag":584,"props":1339,"children":1340},{"style":800},[1341],{"type":558,"value":954},{"type":553,"tag":584,"props":1343,"children":1344},{"style":915},[1345],{"type":558,"value":1346}," +",{"type":553,"tag":584,"props":1348,"children":1349},{"style":1132},[1350],{"type":558,"value":1163},{"type":553,"tag":584,"props":1352,"children":1353},{"style":772},[1354],{"type":558,"value":1140},{"type":553,"tag":584,"props":1356,"children":1357},{"style":800},[1358],{"type":558,"value":1125},{"type":553,"tag":584,"props":1360,"children":1361},{"style":915},[1362],{"type":558,"value":1176},{"type":553,"tag":584,"props":1364,"children":1365},{"style":772},[1366],{"type":558,"value":968},{"type":553,"tag":584,"props":1368,"children":1369},{"style":772},[1370],{"type":558,"value":973},{"type":553,"tag":584,"props":1372,"children":1374},{"class":586,"line":1373},29,[1375,1380,1385,1389,1393,1397,1401],{"type":553,"tag":584,"props":1376,"children":1377},{"style":915},[1378],{"type":558,"value":1379},"    const",{"type":553,"tag":584,"props":1381,"children":1382},{"style":800},[1383],{"type":558,"value":1384}," next",{"type":553,"tag":584,"props":1386,"children":1387},{"style":772},[1388],{"type":558,"value":929},{"type":553,"tag":584,"props":1390,"children":1391},{"style":800},[1392],{"type":558,"value":1269},{"type":553,"tag":584,"props":1394,"children":1395},{"style":772},[1396],{"type":558,"value":1020},{"type":553,"tag":584,"props":1398,"children":1399},{"style":800},[1400],{"type":558,"value":1025},{"type":553,"tag":584,"props":1402,"children":1403},{"style":772},[1404],{"type":558,"value":1039},{"type":553,"tag":584,"props":1406,"children":1408},{"class":586,"line":1407},30,[1409,1414,1418,1422,1426,1430],{"type":553,"tag":584,"props":1410,"children":1411},{"style":800},[1412],{"type":558,"value":1413},"    current",{"type":553,"tag":584,"props":1415,"children":1416},{"style":772},[1417],{"type":558,"value":1020},{"type":553,"tag":584,"props":1419,"children":1420},{"style":800},[1421],{"type":558,"value":1025},{"type":553,"tag":584,"props":1423,"children":1424},{"style":772},[1425],{"type":558,"value":929},{"type":553,"tag":584,"props":1427,"children":1428},{"style":800},[1429],{"type":558,"value":1243},{"type":553,"tag":584,"props":1431,"children":1432},{"style":772},[1433],{"type":558,"value":1039},{"type":553,"tag":584,"props":1435,"children":1437},{"class":586,"line":1436},31,[1438,1443,1447,1451],{"type":553,"tag":584,"props":1439,"children":1440},{"style":800},[1441],{"type":558,"value":1442},"    prev",{"type":553,"tag":584,"props":1444,"children":1445},{"style":772},[1446],{"type":558,"value":929},{"type":553,"tag":584,"props":1448,"children":1449},{"style":800},[1450],{"type":558,"value":1269},{"type":553,"tag":584,"props":1452,"children":1453},{"style":772},[1454],{"type":558,"value":1039},{"type":553,"tag":584,"props":1456,"children":1458},{"class":586,"line":1457},32,[1459,1463,1467,1471],{"type":553,"tag":584,"props":1460,"children":1461},{"style":800},[1462],{"type":558,"value":1413},{"type":553,"tag":584,"props":1464,"children":1465},{"style":772},[1466],{"type":558,"value":929},{"type":553,"tag":584,"props":1468,"children":1469},{"style":800},[1470],{"type":558,"value":1384},{"type":553,"tag":584,"props":1472,"children":1473},{"style":772},[1474],{"type":558,"value":1039},{"type":553,"tag":584,"props":1476,"children":1478},{"class":586,"line":1477},33,[1479],{"type":553,"tag":584,"props":1480,"children":1481},{"style":772},[1482],{"type":558,"value":1222},{"type":553,"tag":584,"props":1484,"children":1486},{"class":586,"line":1485},34,[1487],{"type":553,"tag":584,"props":1488,"children":1489},{"emptyLinePlaceholder":1046},[1490],{"type":558,"value":1049},{"type":553,"tag":584,"props":1492,"children":1494},{"class":586,"line":1493},35,[1495],{"type":553,"tag":584,"props":1496,"children":1497},{"style":696},[1498],{"type":558,"value":1499},"  // p0 指向 prev\n",{"type":553,"tag":584,"props":1501,"children":1503},{"class":586,"line":1502},36,[1504],{"type":553,"tag":584,"props":1505,"children":1506},{"style":696},[1507],{"type":558,"value":1508},"  // p0 的 next 指向 current\n",{"type":553,"tag":584,"props":1510,"children":1512},{"class":586,"line":1511},37,[1513,1518,1522,1526,1530,1534,1538,1542],{"type":553,"tag":584,"props":1514,"children":1515},{"style":800},[1516],{"type":558,"value":1517},"  p0",{"type":553,"tag":584,"props":1519,"children":1520},{"style":772},[1521],{"type":558,"value":1020},{"type":553,"tag":584,"props":1523,"children":1524},{"style":800},[1525],{"type":558,"value":1025},{"type":553,"tag":584,"props":1527,"children":1528},{"style":772},[1529],{"type":558,"value":1020},{"type":553,"tag":584,"props":1531,"children":1532},{"style":800},[1533],{"type":558,"value":1025},{"type":553,"tag":584,"props":1535,"children":1536},{"style":772},[1537],{"type":558,"value":929},{"type":553,"tag":584,"props":1539,"children":1540},{"style":800},[1541],{"type":558,"value":1269},{"type":553,"tag":584,"props":1543,"children":1544},{"style":772},[1545],{"type":558,"value":1039},{"type":553,"tag":584,"props":1547,"children":1549},{"class":586,"line":1548},38,[1550,1554,1558,1562,1566,1570],{"type":553,"tag":584,"props":1551,"children":1552},{"style":800},[1553],{"type":558,"value":1517},{"type":553,"tag":584,"props":1555,"children":1556},{"style":772},[1557],{"type":558,"value":1020},{"type":553,"tag":584,"props":1559,"children":1560},{"style":800},[1561],{"type":558,"value":1025},{"type":553,"tag":584,"props":1563,"children":1564},{"style":772},[1565],{"type":558,"value":929},{"type":553,"tag":584,"props":1567,"children":1568},{"style":800},[1569],{"type":558,"value":1243},{"type":553,"tag":584,"props":1571,"children":1572},{"style":772},[1573],{"type":558,"value":1039},{"type":553,"tag":584,"props":1575,"children":1577},{"class":586,"line":1576},39,[1578],{"type":553,"tag":584,"props":1579,"children":1580},{"emptyLinePlaceholder":1046},[1581],{"type":558,"value":1049},{"type":553,"tag":584,"props":1583,"children":1585},{"class":586,"line":1584},40,[1586,1591,1595,1599,1603],{"type":553,"tag":584,"props":1587,"children":1588},{"style":778},[1589],{"type":558,"value":1590},"  return",{"type":553,"tag":584,"props":1592,"children":1593},{"style":800},[1594],{"type":558,"value":987},{"type":553,"tag":584,"props":1596,"children":1597},{"style":772},[1598],{"type":558,"value":1020},{"type":553,"tag":584,"props":1600,"children":1601},{"style":800},[1602],{"type":558,"value":1025},{"type":553,"tag":584,"props":1604,"children":1605},{"style":772},[1606],{"type":558,"value":1039},{"type":553,"tag":584,"props":1608,"children":1610},{"class":586,"line":1609},41,[1611],{"type":553,"tag":584,"props":1612,"children":1613},{"style":772},[1614],{"type":558,"value":1615},"};\n",{"type":553,"tag":1617,"props":1618,"children":1619},"style",{},[1620],{"type":558,"value":1621},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":728,"depth":728,"links":1623},[1624,1625],{"id":669,"depth":596,"text":669},{"id":679,"depth":596,"text":679},"markdown","content:1.algorithm:3.leetcode:3.major:92.reverse-linked-list-ii.md","content","1.algorithm/3.leetcode/3.major/92.reverse-linked-list-ii.md","md",[1632,1634],{"_path":141,"title":140,"description":1633},"给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。",{"_path":147,"title":146,"description":1635},"给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。",1714099677840]