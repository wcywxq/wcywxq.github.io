[{"data":1,"prerenderedAt":1311},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":466,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1306},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":98,"description":470,"url":471,"body":472,"_type":1301,"_id":1302,"_source":1303,"_file":1304,"_extension":1305},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":473,"children":474,"toc":1295},"root",[475,482,493,523,528,551,556,579,584,599,605,610,616,621,660,1289],{"type":476,"tag":477,"props":478,"children":479},"element","p",{},[480],{"type":481,"value":470},"text",{"type":476,"tag":477,"props":483,"children":484},{},[485,487],{"type":481,"value":486},"示例 1：\n",{"type":476,"tag":488,"props":489,"children":492},"img",{"alt":490,"src":491},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":476,"tag":494,"props":495,"children":498},"pre",{"className":496,"code":497,"language":481,"meta":469,"style":469},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[499],{"type":476,"tag":500,"props":501,"children":502},"code",{"__ignoreMap":469},[503,514],{"type":476,"tag":504,"props":505,"children":508},"span",{"class":506,"line":507},"line",1,[509],{"type":476,"tag":504,"props":510,"children":511},{},[512],{"type":481,"value":513},"输入：head = [1,2,3,4]\n",{"type":476,"tag":504,"props":515,"children":517},{"class":506,"line":516},2,[518],{"type":476,"tag":504,"props":519,"children":520},{},[521],{"type":481,"value":522},"输出：[2,1,4,3]\n",{"type":476,"tag":477,"props":524,"children":525},{},[526],{"type":481,"value":527},"示例 2：",{"type":476,"tag":494,"props":529,"children":531},{"className":496,"code":530,"language":481,"meta":469,"style":469},"输入：head = []\n输出：[]\n",[532],{"type":476,"tag":500,"props":533,"children":534},{"__ignoreMap":469},[535,543],{"type":476,"tag":504,"props":536,"children":537},{"class":506,"line":507},[538],{"type":476,"tag":504,"props":539,"children":540},{},[541],{"type":481,"value":542},"输入：head = []\n",{"type":476,"tag":504,"props":544,"children":545},{"class":506,"line":516},[546],{"type":476,"tag":504,"props":547,"children":548},{},[549],{"type":481,"value":550},"输出：[]\n",{"type":476,"tag":477,"props":552,"children":553},{},[554],{"type":481,"value":555},"示例 3：",{"type":476,"tag":494,"props":557,"children":559},{"className":496,"code":558,"language":481,"meta":469,"style":469},"输入：head = [1]\n输出：[1]\n",[560],{"type":476,"tag":500,"props":561,"children":562},{"__ignoreMap":469},[563,571],{"type":476,"tag":504,"props":564,"children":565},{"class":506,"line":507},[566],{"type":476,"tag":504,"props":567,"children":568},{},[569],{"type":481,"value":570},"输入：head = [1]\n",{"type":476,"tag":504,"props":572,"children":573},{"class":506,"line":516},[574],{"type":476,"tag":504,"props":575,"children":576},{},[577],{"type":481,"value":578},"输出：[1]\n",{"type":476,"tag":477,"props":580,"children":581},{},[582],{"type":481,"value":583},"提示：",{"type":476,"tag":585,"props":586,"children":587},"ul",{},[588,594],{"type":476,"tag":589,"props":590,"children":591},"li",{},[592],{"type":481,"value":593},"链表中节点的数目在范围 [0, 100] 内",{"type":476,"tag":589,"props":595,"children":596},{},[597],{"type":481,"value":598},"0 \u003C= Node.val \u003C= 100",{"type":476,"tag":600,"props":601,"children":603},"h2",{"id":602},"解题思路",[604],{"type":481,"value":602},{"type":476,"tag":600,"props":606,"children":608},{"id":607},"实现",[609],{"type":481,"value":607},{"type":476,"tag":611,"props":612,"children":614},"h3",{"id":613},"双指针",[615],{"type":481,"value":613},{"type":476,"tag":477,"props":617,"children":618},{},[619],{"type":481,"value":620},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":476,"tag":622,"props":623,"children":624},"ol",{},[625,630,635,640,645,650,655],{"type":476,"tag":589,"props":626,"children":627},{},[628],{"type":481,"value":629},"初始化 first 为第一个节点",{"type":476,"tag":589,"props":631,"children":632},{},[633],{"type":481,"value":634},"初始化 second 为第二个节点",{"type":476,"tag":589,"props":636,"children":637},{},[638],{"type":481,"value":639},"初始化 current 为 dummy",{"type":476,"tag":589,"props":641,"children":642},{},[643],{"type":481,"value":644},"first.next = second.next",{"type":476,"tag":589,"props":646,"children":647},{},[648],{"type":481,"value":649},"current.next = second",{"type":476,"tag":589,"props":651,"children":652},{},[653],{"type":481,"value":654},"current 移动 2 格",{"type":476,"tag":589,"props":656,"children":657},{},[658],{"type":481,"value":659},"重复执行",{"type":476,"tag":494,"props":661,"children":665},{"className":662,"code":663,"language":664,"meta":469,"style":469},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[666],{"type":476,"tag":500,"props":667,"children":668},{"__ignoreMap":469},[669,678,686,695,704,713,722,731,739,766,784,792,836,876,909,935,991,1000,1034,1075,1085,1094,1131,1160,1189,1197,1206,1242,1251,1276],{"type":476,"tag":504,"props":670,"children":671},{"class":506,"line":507},[672],{"type":476,"tag":504,"props":673,"children":675},{"style":674},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[676],{"type":481,"value":677},"/**\n",{"type":476,"tag":504,"props":679,"children":680},{"class":506,"line":516},[681],{"type":476,"tag":504,"props":682,"children":683},{"style":674},[684],{"type":481,"value":685}," * Definition for singly-linked list.\n",{"type":476,"tag":504,"props":687,"children":689},{"class":506,"line":688},3,[690],{"type":476,"tag":504,"props":691,"children":692},{"style":674},[693],{"type":481,"value":694}," * function ListNode(val, next) {\n",{"type":476,"tag":504,"props":696,"children":698},{"class":506,"line":697},4,[699],{"type":476,"tag":504,"props":700,"children":701},{"style":674},[702],{"type":481,"value":703}," *     this.val = (val===undefined ? 0 : val)\n",{"type":476,"tag":504,"props":705,"children":707},{"class":506,"line":706},5,[708],{"type":476,"tag":504,"props":709,"children":710},{"style":674},[711],{"type":481,"value":712}," *     this.next = (next===undefined ? null : next)\n",{"type":476,"tag":504,"props":714,"children":716},{"class":506,"line":715},6,[717],{"type":476,"tag":504,"props":718,"children":719},{"style":674},[720],{"type":481,"value":721}," * }\n",{"type":476,"tag":504,"props":723,"children":725},{"class":506,"line":724},7,[726],{"type":476,"tag":504,"props":727,"children":728},{"style":674},[729],{"type":481,"value":730}," */\n",{"type":476,"tag":504,"props":732,"children":734},{"class":506,"line":733},8,[735],{"type":476,"tag":504,"props":736,"children":737},{"style":674},[738],{"type":481,"value":677},{"type":476,"tag":504,"props":740,"children":742},{"class":506,"line":741},9,[743,748,754,760],{"type":476,"tag":504,"props":744,"children":745},{"style":674},[746],{"type":481,"value":747}," * ",{"type":476,"tag":504,"props":749,"children":751},{"style":750},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[752],{"type":481,"value":753},"@param",{"type":476,"tag":504,"props":755,"children":757},{"style":756},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[758],{"type":481,"value":759}," {ListNode}",{"type":476,"tag":504,"props":761,"children":763},{"style":762},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[764],{"type":481,"value":765}," head\n",{"type":476,"tag":504,"props":767,"children":769},{"class":506,"line":768},10,[770,774,779],{"type":476,"tag":504,"props":771,"children":772},{"style":674},[773],{"type":481,"value":747},{"type":476,"tag":504,"props":775,"children":776},{"style":750},[777],{"type":481,"value":778},"@return",{"type":476,"tag":504,"props":780,"children":781},{"style":756},[782],{"type":481,"value":783}," {ListNode}\n",{"type":476,"tag":504,"props":785,"children":787},{"class":506,"line":786},11,[788],{"type":476,"tag":504,"props":789,"children":790},{"style":674},[791],{"type":481,"value":730},{"type":476,"tag":504,"props":793,"children":795},{"class":506,"line":794},12,[796,802,808,814,819,825,831],{"type":476,"tag":504,"props":797,"children":799},{"style":798},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[800],{"type":481,"value":801},"var",{"type":476,"tag":504,"props":803,"children":805},{"style":804},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[806],{"type":481,"value":807}," swapPairs",{"type":476,"tag":504,"props":809,"children":811},{"style":810},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[812],{"type":481,"value":813}," =",{"type":476,"tag":504,"props":815,"children":816},{"style":798},[817],{"type":481,"value":818}," function",{"type":476,"tag":504,"props":820,"children":822},{"style":821},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[823],{"type":481,"value":824}," (",{"type":476,"tag":504,"props":826,"children":828},{"style":827},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[829],{"type":481,"value":830},"head",{"type":476,"tag":504,"props":832,"children":833},{"style":821},[834],{"type":481,"value":835},") {\n",{"type":476,"tag":504,"props":837,"children":839},{"class":506,"line":838},13,[840,845,851,855,860,865,870],{"type":476,"tag":504,"props":841,"children":842},{"style":798},[843],{"type":481,"value":844},"  const",{"type":476,"tag":504,"props":846,"children":848},{"style":847},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[849],{"type":481,"value":850}," dummy",{"type":476,"tag":504,"props":852,"children":853},{"style":810},[854],{"type":481,"value":813},{"type":476,"tag":504,"props":856,"children":857},{"style":810},[858],{"type":481,"value":859}," new",{"type":476,"tag":504,"props":861,"children":862},{"style":804},[863],{"type":481,"value":864}," ListNode",{"type":476,"tag":504,"props":866,"children":867},{"style":821},[868],{"type":481,"value":869},"()",{"type":476,"tag":504,"props":871,"children":873},{"style":872},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[874],{"type":481,"value":875},";\n",{"type":476,"tag":504,"props":877,"children":879},{"class":506,"line":878},14,[880,885,891,896,900,905],{"type":476,"tag":504,"props":881,"children":882},{"style":847},[883],{"type":481,"value":884},"  dummy",{"type":476,"tag":504,"props":886,"children":888},{"style":887},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[889],{"type":481,"value":890},".",{"type":476,"tag":504,"props":892,"children":893},{"style":847},[894],{"type":481,"value":895},"next",{"type":476,"tag":504,"props":897,"children":898},{"style":810},[899],{"type":481,"value":813},{"type":476,"tag":504,"props":901,"children":902},{"style":847},[903],{"type":481,"value":904}," head",{"type":476,"tag":504,"props":906,"children":907},{"style":872},[908],{"type":481,"value":875},{"type":476,"tag":504,"props":910,"children":912},{"class":506,"line":911},15,[913,918,923,927,931],{"type":476,"tag":504,"props":914,"children":915},{"style":798},[916],{"type":481,"value":917},"  let",{"type":476,"tag":504,"props":919,"children":920},{"style":847},[921],{"type":481,"value":922}," current",{"type":476,"tag":504,"props":924,"children":925},{"style":810},[926],{"type":481,"value":813},{"type":476,"tag":504,"props":928,"children":929},{"style":847},[930],{"type":481,"value":850},{"type":476,"tag":504,"props":932,"children":933},{"style":872},[934],{"type":481,"value":875},{"type":476,"tag":504,"props":936,"children":938},{"class":506,"line":937},16,[939,945,949,954,958,962,967,971,975,979,983,987],{"type":476,"tag":504,"props":940,"children":942},{"style":941},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[943],{"type":481,"value":944},"  while",{"type":476,"tag":504,"props":946,"children":947},{"style":821},[948],{"type":481,"value":824},{"type":476,"tag":504,"props":950,"children":951},{"style":847},[952],{"type":481,"value":953},"current",{"type":476,"tag":504,"props":955,"children":956},{"style":887},[957],{"type":481,"value":890},{"type":476,"tag":504,"props":959,"children":960},{"style":847},[961],{"type":481,"value":895},{"type":476,"tag":504,"props":963,"children":964},{"style":810},[965],{"type":481,"value":966}," &&",{"type":476,"tag":504,"props":968,"children":969},{"style":847},[970],{"type":481,"value":922},{"type":476,"tag":504,"props":972,"children":973},{"style":887},[974],{"type":481,"value":890},{"type":476,"tag":504,"props":976,"children":977},{"style":847},[978],{"type":481,"value":895},{"type":476,"tag":504,"props":980,"children":981},{"style":887},[982],{"type":481,"value":890},{"type":476,"tag":504,"props":984,"children":985},{"style":847},[986],{"type":481,"value":895},{"type":476,"tag":504,"props":988,"children":989},{"style":821},[990],{"type":481,"value":835},{"type":476,"tag":504,"props":992,"children":994},{"class":506,"line":993},17,[995],{"type":476,"tag":504,"props":996,"children":997},{"style":674},[998],{"type":481,"value":999},"    // 初始化双指针\n",{"type":476,"tag":504,"props":1001,"children":1003},{"class":506,"line":1002},18,[1004,1009,1014,1018,1022,1026,1030],{"type":476,"tag":504,"props":1005,"children":1006},{"style":798},[1007],{"type":481,"value":1008},"    const",{"type":476,"tag":504,"props":1010,"children":1011},{"style":847},[1012],{"type":481,"value":1013}," first",{"type":476,"tag":504,"props":1015,"children":1016},{"style":810},[1017],{"type":481,"value":813},{"type":476,"tag":504,"props":1019,"children":1020},{"style":847},[1021],{"type":481,"value":922},{"type":476,"tag":504,"props":1023,"children":1024},{"style":887},[1025],{"type":481,"value":890},{"type":476,"tag":504,"props":1027,"children":1028},{"style":847},[1029],{"type":481,"value":895},{"type":476,"tag":504,"props":1031,"children":1032},{"style":872},[1033],{"type":481,"value":875},{"type":476,"tag":504,"props":1035,"children":1037},{"class":506,"line":1036},19,[1038,1042,1047,1051,1055,1059,1063,1067,1071],{"type":476,"tag":504,"props":1039,"children":1040},{"style":798},[1041],{"type":481,"value":1008},{"type":476,"tag":504,"props":1043,"children":1044},{"style":847},[1045],{"type":481,"value":1046}," second",{"type":476,"tag":504,"props":1048,"children":1049},{"style":810},[1050],{"type":481,"value":813},{"type":476,"tag":504,"props":1052,"children":1053},{"style":847},[1054],{"type":481,"value":922},{"type":476,"tag":504,"props":1056,"children":1057},{"style":887},[1058],{"type":481,"value":890},{"type":476,"tag":504,"props":1060,"children":1061},{"style":847},[1062],{"type":481,"value":895},{"type":476,"tag":504,"props":1064,"children":1065},{"style":887},[1066],{"type":481,"value":890},{"type":476,"tag":504,"props":1068,"children":1069},{"style":847},[1070],{"type":481,"value":895},{"type":476,"tag":504,"props":1072,"children":1073},{"style":872},[1074],{"type":481,"value":875},{"type":476,"tag":504,"props":1076,"children":1078},{"class":506,"line":1077},20,[1079],{"type":476,"tag":504,"props":1080,"children":1082},{"emptyLinePlaceholder":1081},true,[1083],{"type":481,"value":1084},"\n",{"type":476,"tag":504,"props":1086,"children":1088},{"class":506,"line":1087},21,[1089],{"type":476,"tag":504,"props":1090,"children":1091},{"style":674},[1092],{"type":481,"value":1093},"    // 更新双指针和 current 指针\n",{"type":476,"tag":504,"props":1095,"children":1097},{"class":506,"line":1096},22,[1098,1103,1107,1111,1115,1119,1123,1127],{"type":476,"tag":504,"props":1099,"children":1100},{"style":847},[1101],{"type":481,"value":1102},"    first",{"type":476,"tag":504,"props":1104,"children":1105},{"style":887},[1106],{"type":481,"value":890},{"type":476,"tag":504,"props":1108,"children":1109},{"style":847},[1110],{"type":481,"value":895},{"type":476,"tag":504,"props":1112,"children":1113},{"style":810},[1114],{"type":481,"value":813},{"type":476,"tag":504,"props":1116,"children":1117},{"style":847},[1118],{"type":481,"value":1046},{"type":476,"tag":504,"props":1120,"children":1121},{"style":887},[1122],{"type":481,"value":890},{"type":476,"tag":504,"props":1124,"children":1125},{"style":847},[1126],{"type":481,"value":895},{"type":476,"tag":504,"props":1128,"children":1129},{"style":872},[1130],{"type":481,"value":875},{"type":476,"tag":504,"props":1132,"children":1134},{"class":506,"line":1133},23,[1135,1140,1144,1148,1152,1156],{"type":476,"tag":504,"props":1136,"children":1137},{"style":847},[1138],{"type":481,"value":1139},"    second",{"type":476,"tag":504,"props":1141,"children":1142},{"style":887},[1143],{"type":481,"value":890},{"type":476,"tag":504,"props":1145,"children":1146},{"style":847},[1147],{"type":481,"value":895},{"type":476,"tag":504,"props":1149,"children":1150},{"style":810},[1151],{"type":481,"value":813},{"type":476,"tag":504,"props":1153,"children":1154},{"style":847},[1155],{"type":481,"value":1013},{"type":476,"tag":504,"props":1157,"children":1158},{"style":872},[1159],{"type":481,"value":875},{"type":476,"tag":504,"props":1161,"children":1163},{"class":506,"line":1162},24,[1164,1169,1173,1177,1181,1185],{"type":476,"tag":504,"props":1165,"children":1166},{"style":847},[1167],{"type":481,"value":1168},"    current",{"type":476,"tag":504,"props":1170,"children":1171},{"style":887},[1172],{"type":481,"value":890},{"type":476,"tag":504,"props":1174,"children":1175},{"style":847},[1176],{"type":481,"value":895},{"type":476,"tag":504,"props":1178,"children":1179},{"style":810},[1180],{"type":481,"value":813},{"type":476,"tag":504,"props":1182,"children":1183},{"style":847},[1184],{"type":481,"value":1046},{"type":476,"tag":504,"props":1186,"children":1187},{"style":872},[1188],{"type":481,"value":875},{"type":476,"tag":504,"props":1190,"children":1192},{"class":506,"line":1191},25,[1193],{"type":476,"tag":504,"props":1194,"children":1195},{"emptyLinePlaceholder":1081},[1196],{"type":481,"value":1084},{"type":476,"tag":504,"props":1198,"children":1200},{"class":506,"line":1199},26,[1201],{"type":476,"tag":504,"props":1202,"children":1203},{"style":674},[1204],{"type":481,"value":1205},"    // 指针移动\n",{"type":476,"tag":504,"props":1207,"children":1209},{"class":506,"line":1208},27,[1210,1214,1218,1222,1226,1230,1234,1238],{"type":476,"tag":504,"props":1211,"children":1212},{"style":847},[1213],{"type":481,"value":1168},{"type":476,"tag":504,"props":1215,"children":1216},{"style":810},[1217],{"type":481,"value":813},{"type":476,"tag":504,"props":1219,"children":1220},{"style":847},[1221],{"type":481,"value":922},{"type":476,"tag":504,"props":1223,"children":1224},{"style":887},[1225],{"type":481,"value":890},{"type":476,"tag":504,"props":1227,"children":1228},{"style":847},[1229],{"type":481,"value":895},{"type":476,"tag":504,"props":1231,"children":1232},{"style":887},[1233],{"type":481,"value":890},{"type":476,"tag":504,"props":1235,"children":1236},{"style":847},[1237],{"type":481,"value":895},{"type":476,"tag":504,"props":1239,"children":1240},{"style":872},[1241],{"type":481,"value":875},{"type":476,"tag":504,"props":1243,"children":1245},{"class":506,"line":1244},28,[1246],{"type":476,"tag":504,"props":1247,"children":1248},{"style":821},[1249],{"type":481,"value":1250},"  }\n",{"type":476,"tag":504,"props":1252,"children":1254},{"class":506,"line":1253},29,[1255,1260,1264,1268,1272],{"type":476,"tag":504,"props":1256,"children":1257},{"style":941},[1258],{"type":481,"value":1259},"  return",{"type":476,"tag":504,"props":1261,"children":1262},{"style":847},[1263],{"type":481,"value":850},{"type":476,"tag":504,"props":1265,"children":1266},{"style":887},[1267],{"type":481,"value":890},{"type":476,"tag":504,"props":1269,"children":1270},{"style":847},[1271],{"type":481,"value":895},{"type":476,"tag":504,"props":1273,"children":1274},{"style":872},[1275],{"type":481,"value":875},{"type":476,"tag":504,"props":1277,"children":1279},{"class":506,"line":1278},30,[1280,1285],{"type":476,"tag":504,"props":1281,"children":1282},{"style":821},[1283],{"type":481,"value":1284},"}",{"type":476,"tag":504,"props":1286,"children":1287},{"style":872},[1288],{"type":481,"value":875},{"type":476,"tag":1290,"props":1291,"children":1292},"style",{},[1293],{"type":481,"value":1294},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":706,"depth":706,"links":1296},[1297,1298],{"id":602,"depth":516,"text":602},{"id":607,"depth":516,"text":607,"children":1299},[1300],{"id":613,"depth":688,"text":613},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1307,1309],{"_path":96,"title":95,"description":1308},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":102,"title":101,"description":1310},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1714007213055]