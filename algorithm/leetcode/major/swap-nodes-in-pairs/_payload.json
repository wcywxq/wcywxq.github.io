[{"data":1,"prerenderedAt":1376},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":509,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1371},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":98,"description":513,"url":514,"body":515,"_type":1366,"_id":1367,"_source":1368,"_file":1369,"_extension":1370},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":516,"children":517,"toc":1360},"root",[518,525,536,566,571,594,599,622,627,642,648,653,659,664,703,1354],{"type":519,"tag":520,"props":521,"children":522},"element","p",{},[523],{"type":524,"value":513},"text",{"type":519,"tag":520,"props":526,"children":527},{},[528,530],{"type":524,"value":529},"示例 1：\n",{"type":519,"tag":531,"props":532,"children":535},"img",{"alt":533,"src":534},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":519,"tag":537,"props":538,"children":541},"pre",{"className":539,"code":540,"language":524,"meta":512,"style":512},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[542],{"type":519,"tag":543,"props":544,"children":545},"code",{"__ignoreMap":512},[546,557],{"type":519,"tag":547,"props":548,"children":551},"span",{"class":549,"line":550},"line",1,[552],{"type":519,"tag":547,"props":553,"children":554},{},[555],{"type":524,"value":556},"输入：head = [1,2,3,4]\n",{"type":519,"tag":547,"props":558,"children":560},{"class":549,"line":559},2,[561],{"type":519,"tag":547,"props":562,"children":563},{},[564],{"type":524,"value":565},"输出：[2,1,4,3]\n",{"type":519,"tag":520,"props":567,"children":568},{},[569],{"type":524,"value":570},"示例 2：",{"type":519,"tag":537,"props":572,"children":574},{"className":539,"code":573,"language":524,"meta":512,"style":512},"输入：head = []\n输出：[]\n",[575],{"type":519,"tag":543,"props":576,"children":577},{"__ignoreMap":512},[578,586],{"type":519,"tag":547,"props":579,"children":580},{"class":549,"line":550},[581],{"type":519,"tag":547,"props":582,"children":583},{},[584],{"type":524,"value":585},"输入：head = []\n",{"type":519,"tag":547,"props":587,"children":588},{"class":549,"line":559},[589],{"type":519,"tag":547,"props":590,"children":591},{},[592],{"type":524,"value":593},"输出：[]\n",{"type":519,"tag":520,"props":595,"children":596},{},[597],{"type":524,"value":598},"示例 3：",{"type":519,"tag":537,"props":600,"children":602},{"className":539,"code":601,"language":524,"meta":512,"style":512},"输入：head = [1]\n输出：[1]\n",[603],{"type":519,"tag":543,"props":604,"children":605},{"__ignoreMap":512},[606,614],{"type":519,"tag":547,"props":607,"children":608},{"class":549,"line":550},[609],{"type":519,"tag":547,"props":610,"children":611},{},[612],{"type":524,"value":613},"输入：head = [1]\n",{"type":519,"tag":547,"props":615,"children":616},{"class":549,"line":559},[617],{"type":519,"tag":547,"props":618,"children":619},{},[620],{"type":524,"value":621},"输出：[1]\n",{"type":519,"tag":520,"props":623,"children":624},{},[625],{"type":524,"value":626},"提示：",{"type":519,"tag":628,"props":629,"children":630},"ul",{},[631,637],{"type":519,"tag":632,"props":633,"children":634},"li",{},[635],{"type":524,"value":636},"链表中节点的数目在范围 [0, 100] 内",{"type":519,"tag":632,"props":638,"children":639},{},[640],{"type":524,"value":641},"0 \u003C= Node.val \u003C= 100",{"type":519,"tag":643,"props":644,"children":646},"h2",{"id":645},"解题思路",[647],{"type":524,"value":645},{"type":519,"tag":643,"props":649,"children":651},{"id":650},"实现",[652],{"type":524,"value":650},{"type":519,"tag":654,"props":655,"children":657},"h3",{"id":656},"双指针",[658],{"type":524,"value":656},{"type":519,"tag":520,"props":660,"children":661},{},[662],{"type":524,"value":663},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":519,"tag":665,"props":666,"children":667},"ol",{},[668,673,678,683,688,693,698],{"type":519,"tag":632,"props":669,"children":670},{},[671],{"type":524,"value":672},"初始化 first 为第一个节点",{"type":519,"tag":632,"props":674,"children":675},{},[676],{"type":524,"value":677},"初始化 second 为第二个节点",{"type":519,"tag":632,"props":679,"children":680},{},[681],{"type":524,"value":682},"初始化 current 为 dummy",{"type":519,"tag":632,"props":684,"children":685},{},[686],{"type":524,"value":687},"first.next = second.next",{"type":519,"tag":632,"props":689,"children":690},{},[691],{"type":524,"value":692},"current.next = second",{"type":519,"tag":632,"props":694,"children":695},{},[696],{"type":524,"value":697},"current 移动 2 格",{"type":519,"tag":632,"props":699,"children":700},{},[701],{"type":524,"value":702},"重复执行",{"type":519,"tag":537,"props":704,"children":708},{"className":705,"code":706,"language":707,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[709],{"type":519,"tag":543,"props":710,"children":711},{"__ignoreMap":512},[712,721,729,738,747,756,765,774,782,825,855,863,909,942,975,1001,1060,1069,1103,1144,1154,1163,1200,1229,1258,1266,1275,1311,1320,1345],{"type":519,"tag":547,"props":713,"children":714},{"class":549,"line":550},[715],{"type":519,"tag":547,"props":716,"children":718},{"style":717},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[719],{"type":524,"value":720},"/**\n",{"type":519,"tag":547,"props":722,"children":723},{"class":549,"line":559},[724],{"type":519,"tag":547,"props":725,"children":726},{"style":717},[727],{"type":524,"value":728}," * Definition for singly-linked list.\n",{"type":519,"tag":547,"props":730,"children":732},{"class":549,"line":731},3,[733],{"type":519,"tag":547,"props":734,"children":735},{"style":717},[736],{"type":524,"value":737}," * function ListNode(val, next) {\n",{"type":519,"tag":547,"props":739,"children":741},{"class":549,"line":740},4,[742],{"type":519,"tag":547,"props":743,"children":744},{"style":717},[745],{"type":524,"value":746}," *     this.val = (val===undefined ? 0 : val)\n",{"type":519,"tag":547,"props":748,"children":750},{"class":549,"line":749},5,[751],{"type":519,"tag":547,"props":752,"children":753},{"style":717},[754],{"type":524,"value":755}," *     this.next = (next===undefined ? null : next)\n",{"type":519,"tag":547,"props":757,"children":759},{"class":549,"line":758},6,[760],{"type":519,"tag":547,"props":761,"children":762},{"style":717},[763],{"type":524,"value":764}," * }\n",{"type":519,"tag":547,"props":766,"children":768},{"class":549,"line":767},7,[769],{"type":519,"tag":547,"props":770,"children":771},{"style":717},[772],{"type":524,"value":773}," */\n",{"type":519,"tag":547,"props":775,"children":777},{"class":549,"line":776},8,[778],{"type":519,"tag":547,"props":779,"children":780},{"style":717},[781],{"type":524,"value":720},{"type":519,"tag":547,"props":783,"children":785},{"class":549,"line":784},9,[786,791,797,803,808,814,819],{"type":519,"tag":547,"props":787,"children":788},{"style":717},[789],{"type":524,"value":790}," * ",{"type":519,"tag":547,"props":792,"children":794},{"style":793},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[795],{"type":524,"value":796},"@",{"type":519,"tag":547,"props":798,"children":800},{"style":799},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[801],{"type":524,"value":802},"param",{"type":519,"tag":547,"props":804,"children":805},{"style":793},[806],{"type":524,"value":807}," {",{"type":519,"tag":547,"props":809,"children":811},{"style":810},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[812],{"type":524,"value":813},"ListNode",{"type":519,"tag":547,"props":815,"children":816},{"style":793},[817],{"type":524,"value":818},"}",{"type":519,"tag":547,"props":820,"children":822},{"style":821},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[823],{"type":524,"value":824}," head\n",{"type":519,"tag":547,"props":826,"children":828},{"class":549,"line":827},10,[829,833,837,842,846,850],{"type":519,"tag":547,"props":830,"children":831},{"style":717},[832],{"type":524,"value":790},{"type":519,"tag":547,"props":834,"children":835},{"style":793},[836],{"type":524,"value":796},{"type":519,"tag":547,"props":838,"children":839},{"style":799},[840],{"type":524,"value":841},"return",{"type":519,"tag":547,"props":843,"children":844},{"style":793},[845],{"type":524,"value":807},{"type":519,"tag":547,"props":847,"children":848},{"style":810},[849],{"type":524,"value":813},{"type":519,"tag":547,"props":851,"children":852},{"style":793},[853],{"type":524,"value":854},"}\n",{"type":519,"tag":547,"props":856,"children":858},{"class":549,"line":857},11,[859],{"type":519,"tag":547,"props":860,"children":861},{"style":717},[862],{"type":524,"value":773},{"type":519,"tag":547,"props":864,"children":866},{"class":549,"line":865},12,[867,873,879,884,889,894,899,904],{"type":519,"tag":547,"props":868,"children":870},{"style":869},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[871],{"type":524,"value":872},"var",{"type":519,"tag":547,"props":874,"children":876},{"style":875},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[877],{"type":524,"value":878}," swapPairs",{"type":519,"tag":547,"props":880,"children":881},{"style":793},[882],{"type":524,"value":883}," =",{"type":519,"tag":547,"props":885,"children":886},{"style":869},[887],{"type":524,"value":888}," function",{"type":519,"tag":547,"props":890,"children":891},{"style":793},[892],{"type":524,"value":893}," (",{"type":519,"tag":547,"props":895,"children":896},{"style":821},[897],{"type":524,"value":898},"head",{"type":519,"tag":547,"props":900,"children":901},{"style":793},[902],{"type":524,"value":903},")",{"type":519,"tag":547,"props":905,"children":906},{"style":793},[907],{"type":524,"value":908}," {\n",{"type":519,"tag":547,"props":910,"children":912},{"class":549,"line":911},13,[913,918,923,927,932,937],{"type":519,"tag":547,"props":914,"children":915},{"style":869},[916],{"type":524,"value":917},"  const",{"type":519,"tag":547,"props":919,"children":920},{"style":821},[921],{"type":524,"value":922}," dummy",{"type":519,"tag":547,"props":924,"children":925},{"style":793},[926],{"type":524,"value":883},{"type":519,"tag":547,"props":928,"children":929},{"style":869},[930],{"type":524,"value":931}," new",{"type":519,"tag":547,"props":933,"children":934},{"style":875},[935],{"type":524,"value":936}," ListNode",{"type":519,"tag":547,"props":938,"children":939},{"style":793},[940],{"type":524,"value":941},"();\n",{"type":519,"tag":547,"props":943,"children":945},{"class":549,"line":944},14,[946,951,956,961,965,970],{"type":519,"tag":547,"props":947,"children":948},{"style":821},[949],{"type":524,"value":950},"  dummy",{"type":519,"tag":547,"props":952,"children":953},{"style":793},[954],{"type":524,"value":955},".",{"type":519,"tag":547,"props":957,"children":958},{"style":821},[959],{"type":524,"value":960},"next",{"type":519,"tag":547,"props":962,"children":963},{"style":793},[964],{"type":524,"value":883},{"type":519,"tag":547,"props":966,"children":967},{"style":821},[968],{"type":524,"value":969}," head",{"type":519,"tag":547,"props":971,"children":972},{"style":793},[973],{"type":524,"value":974},";\n",{"type":519,"tag":547,"props":976,"children":978},{"class":549,"line":977},15,[979,984,989,993,997],{"type":519,"tag":547,"props":980,"children":981},{"style":869},[982],{"type":524,"value":983},"  let",{"type":519,"tag":547,"props":985,"children":986},{"style":821},[987],{"type":524,"value":988}," current",{"type":519,"tag":547,"props":990,"children":991},{"style":793},[992],{"type":524,"value":883},{"type":519,"tag":547,"props":994,"children":995},{"style":821},[996],{"type":524,"value":922},{"type":519,"tag":547,"props":998,"children":999},{"style":793},[1000],{"type":524,"value":974},{"type":519,"tag":547,"props":1002,"children":1004},{"class":549,"line":1003},16,[1005,1010,1014,1019,1023,1027,1032,1036,1040,1044,1048,1052,1056],{"type":519,"tag":547,"props":1006,"children":1007},{"style":799},[1008],{"type":524,"value":1009},"  while",{"type":519,"tag":547,"props":1011,"children":1012},{"style":793},[1013],{"type":524,"value":893},{"type":519,"tag":547,"props":1015,"children":1016},{"style":821},[1017],{"type":524,"value":1018},"current",{"type":519,"tag":547,"props":1020,"children":1021},{"style":793},[1022],{"type":524,"value":955},{"type":519,"tag":547,"props":1024,"children":1025},{"style":821},[1026],{"type":524,"value":960},{"type":519,"tag":547,"props":1028,"children":1029},{"style":869},[1030],{"type":524,"value":1031}," &&",{"type":519,"tag":547,"props":1033,"children":1034},{"style":821},[1035],{"type":524,"value":988},{"type":519,"tag":547,"props":1037,"children":1038},{"style":793},[1039],{"type":524,"value":955},{"type":519,"tag":547,"props":1041,"children":1042},{"style":821},[1043],{"type":524,"value":960},{"type":519,"tag":547,"props":1045,"children":1046},{"style":793},[1047],{"type":524,"value":955},{"type":519,"tag":547,"props":1049,"children":1050},{"style":821},[1051],{"type":524,"value":960},{"type":519,"tag":547,"props":1053,"children":1054},{"style":793},[1055],{"type":524,"value":903},{"type":519,"tag":547,"props":1057,"children":1058},{"style":793},[1059],{"type":524,"value":908},{"type":519,"tag":547,"props":1061,"children":1063},{"class":549,"line":1062},17,[1064],{"type":519,"tag":547,"props":1065,"children":1066},{"style":717},[1067],{"type":524,"value":1068},"    // 初始化双指针\n",{"type":519,"tag":547,"props":1070,"children":1072},{"class":549,"line":1071},18,[1073,1078,1083,1087,1091,1095,1099],{"type":519,"tag":547,"props":1074,"children":1075},{"style":869},[1076],{"type":524,"value":1077},"    const",{"type":519,"tag":547,"props":1079,"children":1080},{"style":821},[1081],{"type":524,"value":1082}," first",{"type":519,"tag":547,"props":1084,"children":1085},{"style":793},[1086],{"type":524,"value":883},{"type":519,"tag":547,"props":1088,"children":1089},{"style":821},[1090],{"type":524,"value":988},{"type":519,"tag":547,"props":1092,"children":1093},{"style":793},[1094],{"type":524,"value":955},{"type":519,"tag":547,"props":1096,"children":1097},{"style":821},[1098],{"type":524,"value":960},{"type":519,"tag":547,"props":1100,"children":1101},{"style":793},[1102],{"type":524,"value":974},{"type":519,"tag":547,"props":1104,"children":1106},{"class":549,"line":1105},19,[1107,1111,1116,1120,1124,1128,1132,1136,1140],{"type":519,"tag":547,"props":1108,"children":1109},{"style":869},[1110],{"type":524,"value":1077},{"type":519,"tag":547,"props":1112,"children":1113},{"style":821},[1114],{"type":524,"value":1115}," second",{"type":519,"tag":547,"props":1117,"children":1118},{"style":793},[1119],{"type":524,"value":883},{"type":519,"tag":547,"props":1121,"children":1122},{"style":821},[1123],{"type":524,"value":988},{"type":519,"tag":547,"props":1125,"children":1126},{"style":793},[1127],{"type":524,"value":955},{"type":519,"tag":547,"props":1129,"children":1130},{"style":821},[1131],{"type":524,"value":960},{"type":519,"tag":547,"props":1133,"children":1134},{"style":793},[1135],{"type":524,"value":955},{"type":519,"tag":547,"props":1137,"children":1138},{"style":821},[1139],{"type":524,"value":960},{"type":519,"tag":547,"props":1141,"children":1142},{"style":793},[1143],{"type":524,"value":974},{"type":519,"tag":547,"props":1145,"children":1147},{"class":549,"line":1146},20,[1148],{"type":519,"tag":547,"props":1149,"children":1151},{"emptyLinePlaceholder":1150},true,[1152],{"type":524,"value":1153},"\n",{"type":519,"tag":547,"props":1155,"children":1157},{"class":549,"line":1156},21,[1158],{"type":519,"tag":547,"props":1159,"children":1160},{"style":717},[1161],{"type":524,"value":1162},"    // 更新双指针和 current 指针\n",{"type":519,"tag":547,"props":1164,"children":1166},{"class":549,"line":1165},22,[1167,1172,1176,1180,1184,1188,1192,1196],{"type":519,"tag":547,"props":1168,"children":1169},{"style":821},[1170],{"type":524,"value":1171},"    first",{"type":519,"tag":547,"props":1173,"children":1174},{"style":793},[1175],{"type":524,"value":955},{"type":519,"tag":547,"props":1177,"children":1178},{"style":821},[1179],{"type":524,"value":960},{"type":519,"tag":547,"props":1181,"children":1182},{"style":793},[1183],{"type":524,"value":883},{"type":519,"tag":547,"props":1185,"children":1186},{"style":821},[1187],{"type":524,"value":1115},{"type":519,"tag":547,"props":1189,"children":1190},{"style":793},[1191],{"type":524,"value":955},{"type":519,"tag":547,"props":1193,"children":1194},{"style":821},[1195],{"type":524,"value":960},{"type":519,"tag":547,"props":1197,"children":1198},{"style":793},[1199],{"type":524,"value":974},{"type":519,"tag":547,"props":1201,"children":1203},{"class":549,"line":1202},23,[1204,1209,1213,1217,1221,1225],{"type":519,"tag":547,"props":1205,"children":1206},{"style":821},[1207],{"type":524,"value":1208},"    second",{"type":519,"tag":547,"props":1210,"children":1211},{"style":793},[1212],{"type":524,"value":955},{"type":519,"tag":547,"props":1214,"children":1215},{"style":821},[1216],{"type":524,"value":960},{"type":519,"tag":547,"props":1218,"children":1219},{"style":793},[1220],{"type":524,"value":883},{"type":519,"tag":547,"props":1222,"children":1223},{"style":821},[1224],{"type":524,"value":1082},{"type":519,"tag":547,"props":1226,"children":1227},{"style":793},[1228],{"type":524,"value":974},{"type":519,"tag":547,"props":1230,"children":1232},{"class":549,"line":1231},24,[1233,1238,1242,1246,1250,1254],{"type":519,"tag":547,"props":1234,"children":1235},{"style":821},[1236],{"type":524,"value":1237},"    current",{"type":519,"tag":547,"props":1239,"children":1240},{"style":793},[1241],{"type":524,"value":955},{"type":519,"tag":547,"props":1243,"children":1244},{"style":821},[1245],{"type":524,"value":960},{"type":519,"tag":547,"props":1247,"children":1248},{"style":793},[1249],{"type":524,"value":883},{"type":519,"tag":547,"props":1251,"children":1252},{"style":821},[1253],{"type":524,"value":1115},{"type":519,"tag":547,"props":1255,"children":1256},{"style":793},[1257],{"type":524,"value":974},{"type":519,"tag":547,"props":1259,"children":1261},{"class":549,"line":1260},25,[1262],{"type":519,"tag":547,"props":1263,"children":1264},{"emptyLinePlaceholder":1150},[1265],{"type":524,"value":1153},{"type":519,"tag":547,"props":1267,"children":1269},{"class":549,"line":1268},26,[1270],{"type":519,"tag":547,"props":1271,"children":1272},{"style":717},[1273],{"type":524,"value":1274},"    // 指针移动\n",{"type":519,"tag":547,"props":1276,"children":1278},{"class":549,"line":1277},27,[1279,1283,1287,1291,1295,1299,1303,1307],{"type":519,"tag":547,"props":1280,"children":1281},{"style":821},[1282],{"type":524,"value":1237},{"type":519,"tag":547,"props":1284,"children":1285},{"style":793},[1286],{"type":524,"value":883},{"type":519,"tag":547,"props":1288,"children":1289},{"style":821},[1290],{"type":524,"value":988},{"type":519,"tag":547,"props":1292,"children":1293},{"style":793},[1294],{"type":524,"value":955},{"type":519,"tag":547,"props":1296,"children":1297},{"style":821},[1298],{"type":524,"value":960},{"type":519,"tag":547,"props":1300,"children":1301},{"style":793},[1302],{"type":524,"value":955},{"type":519,"tag":547,"props":1304,"children":1305},{"style":821},[1306],{"type":524,"value":960},{"type":519,"tag":547,"props":1308,"children":1309},{"style":793},[1310],{"type":524,"value":974},{"type":519,"tag":547,"props":1312,"children":1314},{"class":549,"line":1313},28,[1315],{"type":519,"tag":547,"props":1316,"children":1317},{"style":793},[1318],{"type":524,"value":1319},"  }\n",{"type":519,"tag":547,"props":1321,"children":1323},{"class":549,"line":1322},29,[1324,1329,1333,1337,1341],{"type":519,"tag":547,"props":1325,"children":1326},{"style":799},[1327],{"type":524,"value":1328},"  return",{"type":519,"tag":547,"props":1330,"children":1331},{"style":821},[1332],{"type":524,"value":922},{"type":519,"tag":547,"props":1334,"children":1335},{"style":793},[1336],{"type":524,"value":955},{"type":519,"tag":547,"props":1338,"children":1339},{"style":821},[1340],{"type":524,"value":960},{"type":519,"tag":547,"props":1342,"children":1343},{"style":793},[1344],{"type":524,"value":974},{"type":519,"tag":547,"props":1346,"children":1348},{"class":549,"line":1347},30,[1349],{"type":519,"tag":547,"props":1350,"children":1351},{"style":793},[1352],{"type":524,"value":1353},"};\n",{"type":519,"tag":1355,"props":1356,"children":1357},"style",{},[1358],{"type":524,"value":1359},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":749,"depth":749,"links":1361},[1362,1363],{"id":645,"depth":559,"text":645},{"id":650,"depth":559,"text":650,"children":1364},[1365],{"id":656,"depth":731,"text":656},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1372,1374],{"_path":96,"title":95,"description":1373},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":102,"title":101,"description":1375},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1714059002929]