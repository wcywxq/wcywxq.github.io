[{"data":1,"prerenderedAt":1308},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":463,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1303},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":96,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":95,"description":467,"url":468,"body":469,"_type":1298,"_id":1299,"_source":1300,"_file":1301,"_extension":1302},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":470,"children":471,"toc":1292},"root",[472,479,490,520,525,548,553,576,581,596,602,607,613,618,657,1286],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482,484],{"type":478,"value":483},"示例 1：\n",{"type":473,"tag":485,"props":486,"children":489},"img",{"alt":487,"src":488},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":473,"tag":491,"props":492,"children":495},"pre",{"className":493,"code":494,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[496],{"type":473,"tag":497,"props":498,"children":499},"code",{"__ignoreMap":466},[500,511],{"type":473,"tag":501,"props":502,"children":505},"span",{"class":503,"line":504},"line",1,[506],{"type":473,"tag":501,"props":507,"children":508},{},[509],{"type":478,"value":510},"输入：head = [1,2,3,4]\n",{"type":473,"tag":501,"props":512,"children":514},{"class":503,"line":513},2,[515],{"type":473,"tag":501,"props":516,"children":517},{},[518],{"type":478,"value":519},"输出：[2,1,4,3]\n",{"type":473,"tag":474,"props":521,"children":522},{},[523],{"type":478,"value":524},"示例 2：",{"type":473,"tag":491,"props":526,"children":528},{"className":493,"code":527,"language":478,"meta":466,"style":466},"输入：head = []\n输出：[]\n",[529],{"type":473,"tag":497,"props":530,"children":531},{"__ignoreMap":466},[532,540],{"type":473,"tag":501,"props":533,"children":534},{"class":503,"line":504},[535],{"type":473,"tag":501,"props":536,"children":537},{},[538],{"type":478,"value":539},"输入：head = []\n",{"type":473,"tag":501,"props":541,"children":542},{"class":503,"line":513},[543],{"type":473,"tag":501,"props":544,"children":545},{},[546],{"type":478,"value":547},"输出：[]\n",{"type":473,"tag":474,"props":549,"children":550},{},[551],{"type":478,"value":552},"示例 3：",{"type":473,"tag":491,"props":554,"children":556},{"className":493,"code":555,"language":478,"meta":466,"style":466},"输入：head = [1]\n输出：[1]\n",[557],{"type":473,"tag":497,"props":558,"children":559},{"__ignoreMap":466},[560,568],{"type":473,"tag":501,"props":561,"children":562},{"class":503,"line":504},[563],{"type":473,"tag":501,"props":564,"children":565},{},[566],{"type":478,"value":567},"输入：head = [1]\n",{"type":473,"tag":501,"props":569,"children":570},{"class":503,"line":513},[571],{"type":473,"tag":501,"props":572,"children":573},{},[574],{"type":478,"value":575},"输出：[1]\n",{"type":473,"tag":474,"props":577,"children":578},{},[579],{"type":478,"value":580},"提示：",{"type":473,"tag":582,"props":583,"children":584},"ul",{},[585,591],{"type":473,"tag":586,"props":587,"children":588},"li",{},[589],{"type":478,"value":590},"链表中节点的数目在范围 [0, 100] 内",{"type":473,"tag":586,"props":592,"children":593},{},[594],{"type":478,"value":595},"0 \u003C= Node.val \u003C= 100",{"type":473,"tag":597,"props":598,"children":600},"h2",{"id":599},"解题思路",[601],{"type":478,"value":599},{"type":473,"tag":597,"props":603,"children":605},{"id":604},"实现",[606],{"type":478,"value":604},{"type":473,"tag":608,"props":609,"children":611},"h3",{"id":610},"双指针",[612],{"type":478,"value":610},{"type":473,"tag":474,"props":614,"children":615},{},[616],{"type":478,"value":617},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":473,"tag":619,"props":620,"children":621},"ol",{},[622,627,632,637,642,647,652],{"type":473,"tag":586,"props":623,"children":624},{},[625],{"type":478,"value":626},"初始化 first 为第一个节点",{"type":473,"tag":586,"props":628,"children":629},{},[630],{"type":478,"value":631},"初始化 second 为第二个节点",{"type":473,"tag":586,"props":633,"children":634},{},[635],{"type":478,"value":636},"初始化 current 为 dummy",{"type":473,"tag":586,"props":638,"children":639},{},[640],{"type":478,"value":641},"first.next = second.next",{"type":473,"tag":586,"props":643,"children":644},{},[645],{"type":478,"value":646},"current.next = second",{"type":473,"tag":586,"props":648,"children":649},{},[650],{"type":478,"value":651},"current 移动 2 格",{"type":473,"tag":586,"props":653,"children":654},{},[655],{"type":478,"value":656},"重复执行",{"type":473,"tag":491,"props":658,"children":662},{"className":659,"code":660,"language":661,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[663],{"type":473,"tag":497,"props":664,"children":665},{"__ignoreMap":466},[666,675,683,692,701,710,719,728,736,763,781,789,833,873,906,932,988,997,1031,1072,1082,1091,1128,1157,1186,1194,1203,1239,1248,1273],{"type":473,"tag":501,"props":667,"children":668},{"class":503,"line":504},[669],{"type":473,"tag":501,"props":670,"children":672},{"style":671},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[673],{"type":478,"value":674},"/**\n",{"type":473,"tag":501,"props":676,"children":677},{"class":503,"line":513},[678],{"type":473,"tag":501,"props":679,"children":680},{"style":671},[681],{"type":478,"value":682}," * Definition for singly-linked list.\n",{"type":473,"tag":501,"props":684,"children":686},{"class":503,"line":685},3,[687],{"type":473,"tag":501,"props":688,"children":689},{"style":671},[690],{"type":478,"value":691}," * function ListNode(val, next) {\n",{"type":473,"tag":501,"props":693,"children":695},{"class":503,"line":694},4,[696],{"type":473,"tag":501,"props":697,"children":698},{"style":671},[699],{"type":478,"value":700}," *     this.val = (val===undefined ? 0 : val)\n",{"type":473,"tag":501,"props":702,"children":704},{"class":503,"line":703},5,[705],{"type":473,"tag":501,"props":706,"children":707},{"style":671},[708],{"type":478,"value":709}," *     this.next = (next===undefined ? null : next)\n",{"type":473,"tag":501,"props":711,"children":713},{"class":503,"line":712},6,[714],{"type":473,"tag":501,"props":715,"children":716},{"style":671},[717],{"type":478,"value":718}," * }\n",{"type":473,"tag":501,"props":720,"children":722},{"class":503,"line":721},7,[723],{"type":473,"tag":501,"props":724,"children":725},{"style":671},[726],{"type":478,"value":727}," */\n",{"type":473,"tag":501,"props":729,"children":731},{"class":503,"line":730},8,[732],{"type":473,"tag":501,"props":733,"children":734},{"style":671},[735],{"type":478,"value":674},{"type":473,"tag":501,"props":737,"children":739},{"class":503,"line":738},9,[740,745,751,757],{"type":473,"tag":501,"props":741,"children":742},{"style":671},[743],{"type":478,"value":744}," * ",{"type":473,"tag":501,"props":746,"children":748},{"style":747},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[749],{"type":478,"value":750},"@param",{"type":473,"tag":501,"props":752,"children":754},{"style":753},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[755],{"type":478,"value":756}," {ListNode}",{"type":473,"tag":501,"props":758,"children":760},{"style":759},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[761],{"type":478,"value":762}," head\n",{"type":473,"tag":501,"props":764,"children":766},{"class":503,"line":765},10,[767,771,776],{"type":473,"tag":501,"props":768,"children":769},{"style":671},[770],{"type":478,"value":744},{"type":473,"tag":501,"props":772,"children":773},{"style":747},[774],{"type":478,"value":775},"@return",{"type":473,"tag":501,"props":777,"children":778},{"style":753},[779],{"type":478,"value":780}," {ListNode}\n",{"type":473,"tag":501,"props":782,"children":784},{"class":503,"line":783},11,[785],{"type":473,"tag":501,"props":786,"children":787},{"style":671},[788],{"type":478,"value":727},{"type":473,"tag":501,"props":790,"children":792},{"class":503,"line":791},12,[793,799,805,811,816,822,828],{"type":473,"tag":501,"props":794,"children":796},{"style":795},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[797],{"type":478,"value":798},"var",{"type":473,"tag":501,"props":800,"children":802},{"style":801},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[803],{"type":478,"value":804}," swapPairs",{"type":473,"tag":501,"props":806,"children":808},{"style":807},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[809],{"type":478,"value":810}," =",{"type":473,"tag":501,"props":812,"children":813},{"style":795},[814],{"type":478,"value":815}," function",{"type":473,"tag":501,"props":817,"children":819},{"style":818},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[820],{"type":478,"value":821}," (",{"type":473,"tag":501,"props":823,"children":825},{"style":824},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[826],{"type":478,"value":827},"head",{"type":473,"tag":501,"props":829,"children":830},{"style":818},[831],{"type":478,"value":832},") {\n",{"type":473,"tag":501,"props":834,"children":836},{"class":503,"line":835},13,[837,842,848,852,857,862,867],{"type":473,"tag":501,"props":838,"children":839},{"style":795},[840],{"type":478,"value":841},"  const",{"type":473,"tag":501,"props":843,"children":845},{"style":844},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[846],{"type":478,"value":847}," dummy",{"type":473,"tag":501,"props":849,"children":850},{"style":807},[851],{"type":478,"value":810},{"type":473,"tag":501,"props":853,"children":854},{"style":807},[855],{"type":478,"value":856}," new",{"type":473,"tag":501,"props":858,"children":859},{"style":801},[860],{"type":478,"value":861}," ListNode",{"type":473,"tag":501,"props":863,"children":864},{"style":818},[865],{"type":478,"value":866},"()",{"type":473,"tag":501,"props":868,"children":870},{"style":869},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[871],{"type":478,"value":872},";\n",{"type":473,"tag":501,"props":874,"children":876},{"class":503,"line":875},14,[877,882,888,893,897,902],{"type":473,"tag":501,"props":878,"children":879},{"style":844},[880],{"type":478,"value":881},"  dummy",{"type":473,"tag":501,"props":883,"children":885},{"style":884},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[886],{"type":478,"value":887},".",{"type":473,"tag":501,"props":889,"children":890},{"style":844},[891],{"type":478,"value":892},"next",{"type":473,"tag":501,"props":894,"children":895},{"style":807},[896],{"type":478,"value":810},{"type":473,"tag":501,"props":898,"children":899},{"style":844},[900],{"type":478,"value":901}," head",{"type":473,"tag":501,"props":903,"children":904},{"style":869},[905],{"type":478,"value":872},{"type":473,"tag":501,"props":907,"children":909},{"class":503,"line":908},15,[910,915,920,924,928],{"type":473,"tag":501,"props":911,"children":912},{"style":795},[913],{"type":478,"value":914},"  let",{"type":473,"tag":501,"props":916,"children":917},{"style":844},[918],{"type":478,"value":919}," current",{"type":473,"tag":501,"props":921,"children":922},{"style":807},[923],{"type":478,"value":810},{"type":473,"tag":501,"props":925,"children":926},{"style":844},[927],{"type":478,"value":847},{"type":473,"tag":501,"props":929,"children":930},{"style":869},[931],{"type":478,"value":872},{"type":473,"tag":501,"props":933,"children":935},{"class":503,"line":934},16,[936,942,946,951,955,959,964,968,972,976,980,984],{"type":473,"tag":501,"props":937,"children":939},{"style":938},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[940],{"type":478,"value":941},"  while",{"type":473,"tag":501,"props":943,"children":944},{"style":818},[945],{"type":478,"value":821},{"type":473,"tag":501,"props":947,"children":948},{"style":844},[949],{"type":478,"value":950},"current",{"type":473,"tag":501,"props":952,"children":953},{"style":884},[954],{"type":478,"value":887},{"type":473,"tag":501,"props":956,"children":957},{"style":844},[958],{"type":478,"value":892},{"type":473,"tag":501,"props":960,"children":961},{"style":807},[962],{"type":478,"value":963}," &&",{"type":473,"tag":501,"props":965,"children":966},{"style":844},[967],{"type":478,"value":919},{"type":473,"tag":501,"props":969,"children":970},{"style":884},[971],{"type":478,"value":887},{"type":473,"tag":501,"props":973,"children":974},{"style":844},[975],{"type":478,"value":892},{"type":473,"tag":501,"props":977,"children":978},{"style":884},[979],{"type":478,"value":887},{"type":473,"tag":501,"props":981,"children":982},{"style":844},[983],{"type":478,"value":892},{"type":473,"tag":501,"props":985,"children":986},{"style":818},[987],{"type":478,"value":832},{"type":473,"tag":501,"props":989,"children":991},{"class":503,"line":990},17,[992],{"type":473,"tag":501,"props":993,"children":994},{"style":671},[995],{"type":478,"value":996},"    // 初始化双指针\n",{"type":473,"tag":501,"props":998,"children":1000},{"class":503,"line":999},18,[1001,1006,1011,1015,1019,1023,1027],{"type":473,"tag":501,"props":1002,"children":1003},{"style":795},[1004],{"type":478,"value":1005},"    const",{"type":473,"tag":501,"props":1007,"children":1008},{"style":844},[1009],{"type":478,"value":1010}," first",{"type":473,"tag":501,"props":1012,"children":1013},{"style":807},[1014],{"type":478,"value":810},{"type":473,"tag":501,"props":1016,"children":1017},{"style":844},[1018],{"type":478,"value":919},{"type":473,"tag":501,"props":1020,"children":1021},{"style":884},[1022],{"type":478,"value":887},{"type":473,"tag":501,"props":1024,"children":1025},{"style":844},[1026],{"type":478,"value":892},{"type":473,"tag":501,"props":1028,"children":1029},{"style":869},[1030],{"type":478,"value":872},{"type":473,"tag":501,"props":1032,"children":1034},{"class":503,"line":1033},19,[1035,1039,1044,1048,1052,1056,1060,1064,1068],{"type":473,"tag":501,"props":1036,"children":1037},{"style":795},[1038],{"type":478,"value":1005},{"type":473,"tag":501,"props":1040,"children":1041},{"style":844},[1042],{"type":478,"value":1043}," second",{"type":473,"tag":501,"props":1045,"children":1046},{"style":807},[1047],{"type":478,"value":810},{"type":473,"tag":501,"props":1049,"children":1050},{"style":844},[1051],{"type":478,"value":919},{"type":473,"tag":501,"props":1053,"children":1054},{"style":884},[1055],{"type":478,"value":887},{"type":473,"tag":501,"props":1057,"children":1058},{"style":844},[1059],{"type":478,"value":892},{"type":473,"tag":501,"props":1061,"children":1062},{"style":884},[1063],{"type":478,"value":887},{"type":473,"tag":501,"props":1065,"children":1066},{"style":844},[1067],{"type":478,"value":892},{"type":473,"tag":501,"props":1069,"children":1070},{"style":869},[1071],{"type":478,"value":872},{"type":473,"tag":501,"props":1073,"children":1075},{"class":503,"line":1074},20,[1076],{"type":473,"tag":501,"props":1077,"children":1079},{"emptyLinePlaceholder":1078},true,[1080],{"type":478,"value":1081},"\n",{"type":473,"tag":501,"props":1083,"children":1085},{"class":503,"line":1084},21,[1086],{"type":473,"tag":501,"props":1087,"children":1088},{"style":671},[1089],{"type":478,"value":1090},"    // 更新双指针和 current 指针\n",{"type":473,"tag":501,"props":1092,"children":1094},{"class":503,"line":1093},22,[1095,1100,1104,1108,1112,1116,1120,1124],{"type":473,"tag":501,"props":1096,"children":1097},{"style":844},[1098],{"type":478,"value":1099},"    first",{"type":473,"tag":501,"props":1101,"children":1102},{"style":884},[1103],{"type":478,"value":887},{"type":473,"tag":501,"props":1105,"children":1106},{"style":844},[1107],{"type":478,"value":892},{"type":473,"tag":501,"props":1109,"children":1110},{"style":807},[1111],{"type":478,"value":810},{"type":473,"tag":501,"props":1113,"children":1114},{"style":844},[1115],{"type":478,"value":1043},{"type":473,"tag":501,"props":1117,"children":1118},{"style":884},[1119],{"type":478,"value":887},{"type":473,"tag":501,"props":1121,"children":1122},{"style":844},[1123],{"type":478,"value":892},{"type":473,"tag":501,"props":1125,"children":1126},{"style":869},[1127],{"type":478,"value":872},{"type":473,"tag":501,"props":1129,"children":1131},{"class":503,"line":1130},23,[1132,1137,1141,1145,1149,1153],{"type":473,"tag":501,"props":1133,"children":1134},{"style":844},[1135],{"type":478,"value":1136},"    second",{"type":473,"tag":501,"props":1138,"children":1139},{"style":884},[1140],{"type":478,"value":887},{"type":473,"tag":501,"props":1142,"children":1143},{"style":844},[1144],{"type":478,"value":892},{"type":473,"tag":501,"props":1146,"children":1147},{"style":807},[1148],{"type":478,"value":810},{"type":473,"tag":501,"props":1150,"children":1151},{"style":844},[1152],{"type":478,"value":1010},{"type":473,"tag":501,"props":1154,"children":1155},{"style":869},[1156],{"type":478,"value":872},{"type":473,"tag":501,"props":1158,"children":1160},{"class":503,"line":1159},24,[1161,1166,1170,1174,1178,1182],{"type":473,"tag":501,"props":1162,"children":1163},{"style":844},[1164],{"type":478,"value":1165},"    current",{"type":473,"tag":501,"props":1167,"children":1168},{"style":884},[1169],{"type":478,"value":887},{"type":473,"tag":501,"props":1171,"children":1172},{"style":844},[1173],{"type":478,"value":892},{"type":473,"tag":501,"props":1175,"children":1176},{"style":807},[1177],{"type":478,"value":810},{"type":473,"tag":501,"props":1179,"children":1180},{"style":844},[1181],{"type":478,"value":1043},{"type":473,"tag":501,"props":1183,"children":1184},{"style":869},[1185],{"type":478,"value":872},{"type":473,"tag":501,"props":1187,"children":1189},{"class":503,"line":1188},25,[1190],{"type":473,"tag":501,"props":1191,"children":1192},{"emptyLinePlaceholder":1078},[1193],{"type":478,"value":1081},{"type":473,"tag":501,"props":1195,"children":1197},{"class":503,"line":1196},26,[1198],{"type":473,"tag":501,"props":1199,"children":1200},{"style":671},[1201],{"type":478,"value":1202},"    // 指针移动\n",{"type":473,"tag":501,"props":1204,"children":1206},{"class":503,"line":1205},27,[1207,1211,1215,1219,1223,1227,1231,1235],{"type":473,"tag":501,"props":1208,"children":1209},{"style":844},[1210],{"type":478,"value":1165},{"type":473,"tag":501,"props":1212,"children":1213},{"style":807},[1214],{"type":478,"value":810},{"type":473,"tag":501,"props":1216,"children":1217},{"style":844},[1218],{"type":478,"value":919},{"type":473,"tag":501,"props":1220,"children":1221},{"style":884},[1222],{"type":478,"value":887},{"type":473,"tag":501,"props":1224,"children":1225},{"style":844},[1226],{"type":478,"value":892},{"type":473,"tag":501,"props":1228,"children":1229},{"style":884},[1230],{"type":478,"value":887},{"type":473,"tag":501,"props":1232,"children":1233},{"style":844},[1234],{"type":478,"value":892},{"type":473,"tag":501,"props":1236,"children":1237},{"style":869},[1238],{"type":478,"value":872},{"type":473,"tag":501,"props":1240,"children":1242},{"class":503,"line":1241},28,[1243],{"type":473,"tag":501,"props":1244,"children":1245},{"style":818},[1246],{"type":478,"value":1247},"  }\n",{"type":473,"tag":501,"props":1249,"children":1251},{"class":503,"line":1250},29,[1252,1257,1261,1265,1269],{"type":473,"tag":501,"props":1253,"children":1254},{"style":938},[1255],{"type":478,"value":1256},"  return",{"type":473,"tag":501,"props":1258,"children":1259},{"style":844},[1260],{"type":478,"value":847},{"type":473,"tag":501,"props":1262,"children":1263},{"style":884},[1264],{"type":478,"value":887},{"type":473,"tag":501,"props":1266,"children":1267},{"style":844},[1268],{"type":478,"value":892},{"type":473,"tag":501,"props":1270,"children":1271},{"style":869},[1272],{"type":478,"value":872},{"type":473,"tag":501,"props":1274,"children":1276},{"class":503,"line":1275},30,[1277,1282],{"type":473,"tag":501,"props":1278,"children":1279},{"style":818},[1280],{"type":478,"value":1281},"}",{"type":473,"tag":501,"props":1283,"children":1284},{"style":869},[1285],{"type":478,"value":872},{"type":473,"tag":1287,"props":1288,"children":1289},"style",{},[1290],{"type":478,"value":1291},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":703,"depth":703,"links":1293},[1294,1295],{"id":599,"depth":513,"text":599},{"id":604,"depth":513,"text":604,"children":1296},[1297],{"id":610,"depth":685,"text":610},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1304,1306],{"_path":93,"title":92,"description":1305},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":99,"title":98,"description":1307},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1713695845867]