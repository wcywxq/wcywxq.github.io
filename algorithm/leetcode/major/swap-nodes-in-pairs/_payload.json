[{"data":1,"prerenderedAt":1418},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":551,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1413},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":98,"description":555,"url":556,"body":557,"_type":1408,"_id":1409,"_source":1410,"_file":1411,"_extension":1412},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":558,"children":559,"toc":1402},"root",[560,567,578,608,613,636,641,664,669,684,690,695,701,706,745,1396],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570,572],{"type":566,"value":571},"示例 1：\n",{"type":561,"tag":573,"props":574,"children":577},"img",{"alt":575,"src":576},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":561,"tag":579,"props":580,"children":583},"pre",{"className":581,"code":582,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[584],{"type":561,"tag":585,"props":586,"children":587},"code",{"__ignoreMap":554},[588,599],{"type":561,"tag":589,"props":590,"children":593},"span",{"class":591,"line":592},"line",1,[594],{"type":561,"tag":589,"props":595,"children":596},{},[597],{"type":566,"value":598},"输入：head = [1,2,3,4]\n",{"type":561,"tag":589,"props":600,"children":602},{"class":591,"line":601},2,[603],{"type":561,"tag":589,"props":604,"children":605},{},[606],{"type":566,"value":607},"输出：[2,1,4,3]\n",{"type":561,"tag":562,"props":609,"children":610},{},[611],{"type":566,"value":612},"示例 2：",{"type":561,"tag":579,"props":614,"children":616},{"className":581,"code":615,"language":566,"meta":554,"style":554},"输入：head = []\n输出：[]\n",[617],{"type":561,"tag":585,"props":618,"children":619},{"__ignoreMap":554},[620,628],{"type":561,"tag":589,"props":621,"children":622},{"class":591,"line":592},[623],{"type":561,"tag":589,"props":624,"children":625},{},[626],{"type":566,"value":627},"输入：head = []\n",{"type":561,"tag":589,"props":629,"children":630},{"class":591,"line":601},[631],{"type":561,"tag":589,"props":632,"children":633},{},[634],{"type":566,"value":635},"输出：[]\n",{"type":561,"tag":562,"props":637,"children":638},{},[639],{"type":566,"value":640},"示例 3：",{"type":561,"tag":579,"props":642,"children":644},{"className":581,"code":643,"language":566,"meta":554,"style":554},"输入：head = [1]\n输出：[1]\n",[645],{"type":561,"tag":585,"props":646,"children":647},{"__ignoreMap":554},[648,656],{"type":561,"tag":589,"props":649,"children":650},{"class":591,"line":592},[651],{"type":561,"tag":589,"props":652,"children":653},{},[654],{"type":566,"value":655},"输入：head = [1]\n",{"type":561,"tag":589,"props":657,"children":658},{"class":591,"line":601},[659],{"type":561,"tag":589,"props":660,"children":661},{},[662],{"type":566,"value":663},"输出：[1]\n",{"type":561,"tag":562,"props":665,"children":666},{},[667],{"type":566,"value":668},"提示：",{"type":561,"tag":670,"props":671,"children":672},"ul",{},[673,679],{"type":561,"tag":674,"props":675,"children":676},"li",{},[677],{"type":566,"value":678},"链表中节点的数目在范围 [0, 100] 内",{"type":561,"tag":674,"props":680,"children":681},{},[682],{"type":566,"value":683},"0 \u003C= Node.val \u003C= 100",{"type":561,"tag":685,"props":686,"children":688},"h2",{"id":687},"解题思路",[689],{"type":566,"value":687},{"type":561,"tag":685,"props":691,"children":693},{"id":692},"实现",[694],{"type":566,"value":692},{"type":561,"tag":696,"props":697,"children":699},"h3",{"id":698},"双指针",[700],{"type":566,"value":698},{"type":561,"tag":562,"props":702,"children":703},{},[704],{"type":566,"value":705},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":561,"tag":707,"props":708,"children":709},"ol",{},[710,715,720,725,730,735,740],{"type":561,"tag":674,"props":711,"children":712},{},[713],{"type":566,"value":714},"初始化 first 为第一个节点",{"type":561,"tag":674,"props":716,"children":717},{},[718],{"type":566,"value":719},"初始化 second 为第二个节点",{"type":561,"tag":674,"props":721,"children":722},{},[723],{"type":566,"value":724},"初始化 current 为 dummy",{"type":561,"tag":674,"props":726,"children":727},{},[728],{"type":566,"value":729},"first.next = second.next",{"type":561,"tag":674,"props":731,"children":732},{},[733],{"type":566,"value":734},"current.next = second",{"type":561,"tag":674,"props":736,"children":737},{},[738],{"type":566,"value":739},"current 移动 2 格",{"type":561,"tag":674,"props":741,"children":742},{},[743],{"type":566,"value":744},"重复执行",{"type":561,"tag":579,"props":746,"children":750},{"className":747,"code":748,"language":749,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[751],{"type":561,"tag":585,"props":752,"children":753},{"__ignoreMap":554},[754,763,771,780,789,798,807,816,824,867,897,905,951,984,1017,1043,1102,1111,1145,1186,1196,1205,1242,1271,1300,1308,1317,1353,1362,1387],{"type":561,"tag":589,"props":755,"children":756},{"class":591,"line":592},[757],{"type":561,"tag":589,"props":758,"children":760},{"style":759},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[761],{"type":566,"value":762},"/**\n",{"type":561,"tag":589,"props":764,"children":765},{"class":591,"line":601},[766],{"type":561,"tag":589,"props":767,"children":768},{"style":759},[769],{"type":566,"value":770}," * Definition for singly-linked list.\n",{"type":561,"tag":589,"props":772,"children":774},{"class":591,"line":773},3,[775],{"type":561,"tag":589,"props":776,"children":777},{"style":759},[778],{"type":566,"value":779}," * function ListNode(val, next) {\n",{"type":561,"tag":589,"props":781,"children":783},{"class":591,"line":782},4,[784],{"type":561,"tag":589,"props":785,"children":786},{"style":759},[787],{"type":566,"value":788}," *     this.val = (val===undefined ? 0 : val)\n",{"type":561,"tag":589,"props":790,"children":792},{"class":591,"line":791},5,[793],{"type":561,"tag":589,"props":794,"children":795},{"style":759},[796],{"type":566,"value":797}," *     this.next = (next===undefined ? null : next)\n",{"type":561,"tag":589,"props":799,"children":801},{"class":591,"line":800},6,[802],{"type":561,"tag":589,"props":803,"children":804},{"style":759},[805],{"type":566,"value":806}," * }\n",{"type":561,"tag":589,"props":808,"children":810},{"class":591,"line":809},7,[811],{"type":561,"tag":589,"props":812,"children":813},{"style":759},[814],{"type":566,"value":815}," */\n",{"type":561,"tag":589,"props":817,"children":819},{"class":591,"line":818},8,[820],{"type":561,"tag":589,"props":821,"children":822},{"style":759},[823],{"type":566,"value":762},{"type":561,"tag":589,"props":825,"children":827},{"class":591,"line":826},9,[828,833,839,845,850,856,861],{"type":561,"tag":589,"props":829,"children":830},{"style":759},[831],{"type":566,"value":832}," * ",{"type":561,"tag":589,"props":834,"children":836},{"style":835},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[837],{"type":566,"value":838},"@",{"type":561,"tag":589,"props":840,"children":842},{"style":841},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[843],{"type":566,"value":844},"param",{"type":561,"tag":589,"props":846,"children":847},{"style":835},[848],{"type":566,"value":849}," {",{"type":561,"tag":589,"props":851,"children":853},{"style":852},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[854],{"type":566,"value":855},"ListNode",{"type":561,"tag":589,"props":857,"children":858},{"style":835},[859],{"type":566,"value":860},"}",{"type":561,"tag":589,"props":862,"children":864},{"style":863},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[865],{"type":566,"value":866}," head\n",{"type":561,"tag":589,"props":868,"children":870},{"class":591,"line":869},10,[871,875,879,884,888,892],{"type":561,"tag":589,"props":872,"children":873},{"style":759},[874],{"type":566,"value":832},{"type":561,"tag":589,"props":876,"children":877},{"style":835},[878],{"type":566,"value":838},{"type":561,"tag":589,"props":880,"children":881},{"style":841},[882],{"type":566,"value":883},"return",{"type":561,"tag":589,"props":885,"children":886},{"style":835},[887],{"type":566,"value":849},{"type":561,"tag":589,"props":889,"children":890},{"style":852},[891],{"type":566,"value":855},{"type":561,"tag":589,"props":893,"children":894},{"style":835},[895],{"type":566,"value":896},"}\n",{"type":561,"tag":589,"props":898,"children":900},{"class":591,"line":899},11,[901],{"type":561,"tag":589,"props":902,"children":903},{"style":759},[904],{"type":566,"value":815},{"type":561,"tag":589,"props":906,"children":908},{"class":591,"line":907},12,[909,915,921,926,931,936,941,946],{"type":561,"tag":589,"props":910,"children":912},{"style":911},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[913],{"type":566,"value":914},"var",{"type":561,"tag":589,"props":916,"children":918},{"style":917},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[919],{"type":566,"value":920}," swapPairs",{"type":561,"tag":589,"props":922,"children":923},{"style":835},[924],{"type":566,"value":925}," =",{"type":561,"tag":589,"props":927,"children":928},{"style":911},[929],{"type":566,"value":930}," function",{"type":561,"tag":589,"props":932,"children":933},{"style":835},[934],{"type":566,"value":935}," (",{"type":561,"tag":589,"props":937,"children":938},{"style":863},[939],{"type":566,"value":940},"head",{"type":561,"tag":589,"props":942,"children":943},{"style":835},[944],{"type":566,"value":945},")",{"type":561,"tag":589,"props":947,"children":948},{"style":835},[949],{"type":566,"value":950}," {\n",{"type":561,"tag":589,"props":952,"children":954},{"class":591,"line":953},13,[955,960,965,969,974,979],{"type":561,"tag":589,"props":956,"children":957},{"style":911},[958],{"type":566,"value":959},"  const",{"type":561,"tag":589,"props":961,"children":962},{"style":863},[963],{"type":566,"value":964}," dummy",{"type":561,"tag":589,"props":966,"children":967},{"style":835},[968],{"type":566,"value":925},{"type":561,"tag":589,"props":970,"children":971},{"style":911},[972],{"type":566,"value":973}," new",{"type":561,"tag":589,"props":975,"children":976},{"style":917},[977],{"type":566,"value":978}," ListNode",{"type":561,"tag":589,"props":980,"children":981},{"style":835},[982],{"type":566,"value":983},"();\n",{"type":561,"tag":589,"props":985,"children":987},{"class":591,"line":986},14,[988,993,998,1003,1007,1012],{"type":561,"tag":589,"props":989,"children":990},{"style":863},[991],{"type":566,"value":992},"  dummy",{"type":561,"tag":589,"props":994,"children":995},{"style":835},[996],{"type":566,"value":997},".",{"type":561,"tag":589,"props":999,"children":1000},{"style":863},[1001],{"type":566,"value":1002},"next",{"type":561,"tag":589,"props":1004,"children":1005},{"style":835},[1006],{"type":566,"value":925},{"type":561,"tag":589,"props":1008,"children":1009},{"style":863},[1010],{"type":566,"value":1011}," head",{"type":561,"tag":589,"props":1013,"children":1014},{"style":835},[1015],{"type":566,"value":1016},";\n",{"type":561,"tag":589,"props":1018,"children":1020},{"class":591,"line":1019},15,[1021,1026,1031,1035,1039],{"type":561,"tag":589,"props":1022,"children":1023},{"style":911},[1024],{"type":566,"value":1025},"  let",{"type":561,"tag":589,"props":1027,"children":1028},{"style":863},[1029],{"type":566,"value":1030}," current",{"type":561,"tag":589,"props":1032,"children":1033},{"style":835},[1034],{"type":566,"value":925},{"type":561,"tag":589,"props":1036,"children":1037},{"style":863},[1038],{"type":566,"value":964},{"type":561,"tag":589,"props":1040,"children":1041},{"style":835},[1042],{"type":566,"value":1016},{"type":561,"tag":589,"props":1044,"children":1046},{"class":591,"line":1045},16,[1047,1052,1056,1061,1065,1069,1074,1078,1082,1086,1090,1094,1098],{"type":561,"tag":589,"props":1048,"children":1049},{"style":841},[1050],{"type":566,"value":1051},"  while",{"type":561,"tag":589,"props":1053,"children":1054},{"style":835},[1055],{"type":566,"value":935},{"type":561,"tag":589,"props":1057,"children":1058},{"style":863},[1059],{"type":566,"value":1060},"current",{"type":561,"tag":589,"props":1062,"children":1063},{"style":835},[1064],{"type":566,"value":997},{"type":561,"tag":589,"props":1066,"children":1067},{"style":863},[1068],{"type":566,"value":1002},{"type":561,"tag":589,"props":1070,"children":1071},{"style":911},[1072],{"type":566,"value":1073}," &&",{"type":561,"tag":589,"props":1075,"children":1076},{"style":863},[1077],{"type":566,"value":1030},{"type":561,"tag":589,"props":1079,"children":1080},{"style":835},[1081],{"type":566,"value":997},{"type":561,"tag":589,"props":1083,"children":1084},{"style":863},[1085],{"type":566,"value":1002},{"type":561,"tag":589,"props":1087,"children":1088},{"style":835},[1089],{"type":566,"value":997},{"type":561,"tag":589,"props":1091,"children":1092},{"style":863},[1093],{"type":566,"value":1002},{"type":561,"tag":589,"props":1095,"children":1096},{"style":835},[1097],{"type":566,"value":945},{"type":561,"tag":589,"props":1099,"children":1100},{"style":835},[1101],{"type":566,"value":950},{"type":561,"tag":589,"props":1103,"children":1105},{"class":591,"line":1104},17,[1106],{"type":561,"tag":589,"props":1107,"children":1108},{"style":759},[1109],{"type":566,"value":1110},"    // 初始化双指针\n",{"type":561,"tag":589,"props":1112,"children":1114},{"class":591,"line":1113},18,[1115,1120,1125,1129,1133,1137,1141],{"type":561,"tag":589,"props":1116,"children":1117},{"style":911},[1118],{"type":566,"value":1119},"    const",{"type":561,"tag":589,"props":1121,"children":1122},{"style":863},[1123],{"type":566,"value":1124}," first",{"type":561,"tag":589,"props":1126,"children":1127},{"style":835},[1128],{"type":566,"value":925},{"type":561,"tag":589,"props":1130,"children":1131},{"style":863},[1132],{"type":566,"value":1030},{"type":561,"tag":589,"props":1134,"children":1135},{"style":835},[1136],{"type":566,"value":997},{"type":561,"tag":589,"props":1138,"children":1139},{"style":863},[1140],{"type":566,"value":1002},{"type":561,"tag":589,"props":1142,"children":1143},{"style":835},[1144],{"type":566,"value":1016},{"type":561,"tag":589,"props":1146,"children":1148},{"class":591,"line":1147},19,[1149,1153,1158,1162,1166,1170,1174,1178,1182],{"type":561,"tag":589,"props":1150,"children":1151},{"style":911},[1152],{"type":566,"value":1119},{"type":561,"tag":589,"props":1154,"children":1155},{"style":863},[1156],{"type":566,"value":1157}," second",{"type":561,"tag":589,"props":1159,"children":1160},{"style":835},[1161],{"type":566,"value":925},{"type":561,"tag":589,"props":1163,"children":1164},{"style":863},[1165],{"type":566,"value":1030},{"type":561,"tag":589,"props":1167,"children":1168},{"style":835},[1169],{"type":566,"value":997},{"type":561,"tag":589,"props":1171,"children":1172},{"style":863},[1173],{"type":566,"value":1002},{"type":561,"tag":589,"props":1175,"children":1176},{"style":835},[1177],{"type":566,"value":997},{"type":561,"tag":589,"props":1179,"children":1180},{"style":863},[1181],{"type":566,"value":1002},{"type":561,"tag":589,"props":1183,"children":1184},{"style":835},[1185],{"type":566,"value":1016},{"type":561,"tag":589,"props":1187,"children":1189},{"class":591,"line":1188},20,[1190],{"type":561,"tag":589,"props":1191,"children":1193},{"emptyLinePlaceholder":1192},true,[1194],{"type":566,"value":1195},"\n",{"type":561,"tag":589,"props":1197,"children":1199},{"class":591,"line":1198},21,[1200],{"type":561,"tag":589,"props":1201,"children":1202},{"style":759},[1203],{"type":566,"value":1204},"    // 更新双指针和 current 指针\n",{"type":561,"tag":589,"props":1206,"children":1208},{"class":591,"line":1207},22,[1209,1214,1218,1222,1226,1230,1234,1238],{"type":561,"tag":589,"props":1210,"children":1211},{"style":863},[1212],{"type":566,"value":1213},"    first",{"type":561,"tag":589,"props":1215,"children":1216},{"style":835},[1217],{"type":566,"value":997},{"type":561,"tag":589,"props":1219,"children":1220},{"style":863},[1221],{"type":566,"value":1002},{"type":561,"tag":589,"props":1223,"children":1224},{"style":835},[1225],{"type":566,"value":925},{"type":561,"tag":589,"props":1227,"children":1228},{"style":863},[1229],{"type":566,"value":1157},{"type":561,"tag":589,"props":1231,"children":1232},{"style":835},[1233],{"type":566,"value":997},{"type":561,"tag":589,"props":1235,"children":1236},{"style":863},[1237],{"type":566,"value":1002},{"type":561,"tag":589,"props":1239,"children":1240},{"style":835},[1241],{"type":566,"value":1016},{"type":561,"tag":589,"props":1243,"children":1245},{"class":591,"line":1244},23,[1246,1251,1255,1259,1263,1267],{"type":561,"tag":589,"props":1247,"children":1248},{"style":863},[1249],{"type":566,"value":1250},"    second",{"type":561,"tag":589,"props":1252,"children":1253},{"style":835},[1254],{"type":566,"value":997},{"type":561,"tag":589,"props":1256,"children":1257},{"style":863},[1258],{"type":566,"value":1002},{"type":561,"tag":589,"props":1260,"children":1261},{"style":835},[1262],{"type":566,"value":925},{"type":561,"tag":589,"props":1264,"children":1265},{"style":863},[1266],{"type":566,"value":1124},{"type":561,"tag":589,"props":1268,"children":1269},{"style":835},[1270],{"type":566,"value":1016},{"type":561,"tag":589,"props":1272,"children":1274},{"class":591,"line":1273},24,[1275,1280,1284,1288,1292,1296],{"type":561,"tag":589,"props":1276,"children":1277},{"style":863},[1278],{"type":566,"value":1279},"    current",{"type":561,"tag":589,"props":1281,"children":1282},{"style":835},[1283],{"type":566,"value":997},{"type":561,"tag":589,"props":1285,"children":1286},{"style":863},[1287],{"type":566,"value":1002},{"type":561,"tag":589,"props":1289,"children":1290},{"style":835},[1291],{"type":566,"value":925},{"type":561,"tag":589,"props":1293,"children":1294},{"style":863},[1295],{"type":566,"value":1157},{"type":561,"tag":589,"props":1297,"children":1298},{"style":835},[1299],{"type":566,"value":1016},{"type":561,"tag":589,"props":1301,"children":1303},{"class":591,"line":1302},25,[1304],{"type":561,"tag":589,"props":1305,"children":1306},{"emptyLinePlaceholder":1192},[1307],{"type":566,"value":1195},{"type":561,"tag":589,"props":1309,"children":1311},{"class":591,"line":1310},26,[1312],{"type":561,"tag":589,"props":1313,"children":1314},{"style":759},[1315],{"type":566,"value":1316},"    // 指针移动\n",{"type":561,"tag":589,"props":1318,"children":1320},{"class":591,"line":1319},27,[1321,1325,1329,1333,1337,1341,1345,1349],{"type":561,"tag":589,"props":1322,"children":1323},{"style":863},[1324],{"type":566,"value":1279},{"type":561,"tag":589,"props":1326,"children":1327},{"style":835},[1328],{"type":566,"value":925},{"type":561,"tag":589,"props":1330,"children":1331},{"style":863},[1332],{"type":566,"value":1030},{"type":561,"tag":589,"props":1334,"children":1335},{"style":835},[1336],{"type":566,"value":997},{"type":561,"tag":589,"props":1338,"children":1339},{"style":863},[1340],{"type":566,"value":1002},{"type":561,"tag":589,"props":1342,"children":1343},{"style":835},[1344],{"type":566,"value":997},{"type":561,"tag":589,"props":1346,"children":1347},{"style":863},[1348],{"type":566,"value":1002},{"type":561,"tag":589,"props":1350,"children":1351},{"style":835},[1352],{"type":566,"value":1016},{"type":561,"tag":589,"props":1354,"children":1356},{"class":591,"line":1355},28,[1357],{"type":561,"tag":589,"props":1358,"children":1359},{"style":835},[1360],{"type":566,"value":1361},"  }\n",{"type":561,"tag":589,"props":1363,"children":1365},{"class":591,"line":1364},29,[1366,1371,1375,1379,1383],{"type":561,"tag":589,"props":1367,"children":1368},{"style":841},[1369],{"type":566,"value":1370},"  return",{"type":561,"tag":589,"props":1372,"children":1373},{"style":863},[1374],{"type":566,"value":964},{"type":561,"tag":589,"props":1376,"children":1377},{"style":835},[1378],{"type":566,"value":997},{"type":561,"tag":589,"props":1380,"children":1381},{"style":863},[1382],{"type":566,"value":1002},{"type":561,"tag":589,"props":1384,"children":1385},{"style":835},[1386],{"type":566,"value":1016},{"type":561,"tag":589,"props":1388,"children":1390},{"class":591,"line":1389},30,[1391],{"type":561,"tag":589,"props":1392,"children":1393},{"style":835},[1394],{"type":566,"value":1395},"};\n",{"type":561,"tag":1397,"props":1398,"children":1399},"style",{},[1400],{"type":566,"value":1401},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":791,"depth":791,"links":1403},[1404,1405],{"id":687,"depth":601,"text":687},{"id":692,"depth":601,"text":692,"children":1406},[1407],{"id":698,"depth":773,"text":698},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1414,1416],{"_path":96,"title":95,"description":1415},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":102,"title":101,"description":1417},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1715092154004]