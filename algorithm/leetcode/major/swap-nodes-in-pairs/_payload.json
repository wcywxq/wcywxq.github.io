[{"data":1,"prerenderedAt":1367},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":500,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1362},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":98,"description":504,"url":505,"body":506,"_type":1357,"_id":1358,"_source":1359,"_file":1360,"_extension":1361},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":507,"children":508,"toc":1351},"root",[509,516,527,557,562,585,590,613,618,633,639,644,650,655,694,1345],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519,521],{"type":515,"value":520},"示例 1：\n",{"type":510,"tag":522,"props":523,"children":526},"img",{"alt":524,"src":525},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":510,"tag":528,"props":529,"children":532},"pre",{"className":530,"code":531,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[533],{"type":510,"tag":534,"props":535,"children":536},"code",{"__ignoreMap":503},[537,548],{"type":510,"tag":538,"props":539,"children":542},"span",{"class":540,"line":541},"line",1,[543],{"type":510,"tag":538,"props":544,"children":545},{},[546],{"type":515,"value":547},"输入：head = [1,2,3,4]\n",{"type":510,"tag":538,"props":549,"children":551},{"class":540,"line":550},2,[552],{"type":510,"tag":538,"props":553,"children":554},{},[555],{"type":515,"value":556},"输出：[2,1,4,3]\n",{"type":510,"tag":511,"props":558,"children":559},{},[560],{"type":515,"value":561},"示例 2：",{"type":510,"tag":528,"props":563,"children":565},{"className":530,"code":564,"language":515,"meta":503,"style":503},"输入：head = []\n输出：[]\n",[566],{"type":510,"tag":534,"props":567,"children":568},{"__ignoreMap":503},[569,577],{"type":510,"tag":538,"props":570,"children":571},{"class":540,"line":541},[572],{"type":510,"tag":538,"props":573,"children":574},{},[575],{"type":515,"value":576},"输入：head = []\n",{"type":510,"tag":538,"props":578,"children":579},{"class":540,"line":550},[580],{"type":510,"tag":538,"props":581,"children":582},{},[583],{"type":515,"value":584},"输出：[]\n",{"type":510,"tag":511,"props":586,"children":587},{},[588],{"type":515,"value":589},"示例 3：",{"type":510,"tag":528,"props":591,"children":593},{"className":530,"code":592,"language":515,"meta":503,"style":503},"输入：head = [1]\n输出：[1]\n",[594],{"type":510,"tag":534,"props":595,"children":596},{"__ignoreMap":503},[597,605],{"type":510,"tag":538,"props":598,"children":599},{"class":540,"line":541},[600],{"type":510,"tag":538,"props":601,"children":602},{},[603],{"type":515,"value":604},"输入：head = [1]\n",{"type":510,"tag":538,"props":606,"children":607},{"class":540,"line":550},[608],{"type":510,"tag":538,"props":609,"children":610},{},[611],{"type":515,"value":612},"输出：[1]\n",{"type":510,"tag":511,"props":614,"children":615},{},[616],{"type":515,"value":617},"提示：",{"type":510,"tag":619,"props":620,"children":621},"ul",{},[622,628],{"type":510,"tag":623,"props":624,"children":625},"li",{},[626],{"type":515,"value":627},"链表中节点的数目在范围 [0, 100] 内",{"type":510,"tag":623,"props":629,"children":630},{},[631],{"type":515,"value":632},"0 \u003C= Node.val \u003C= 100",{"type":510,"tag":634,"props":635,"children":637},"h2",{"id":636},"解题思路",[638],{"type":515,"value":636},{"type":510,"tag":634,"props":640,"children":642},{"id":641},"实现",[643],{"type":515,"value":641},{"type":510,"tag":645,"props":646,"children":648},"h3",{"id":647},"双指针",[649],{"type":515,"value":647},{"type":510,"tag":511,"props":651,"children":652},{},[653],{"type":515,"value":654},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":510,"tag":656,"props":657,"children":658},"ol",{},[659,664,669,674,679,684,689],{"type":510,"tag":623,"props":660,"children":661},{},[662],{"type":515,"value":663},"初始化 first 为第一个节点",{"type":510,"tag":623,"props":665,"children":666},{},[667],{"type":515,"value":668},"初始化 second 为第二个节点",{"type":510,"tag":623,"props":670,"children":671},{},[672],{"type":515,"value":673},"初始化 current 为 dummy",{"type":510,"tag":623,"props":675,"children":676},{},[677],{"type":515,"value":678},"first.next = second.next",{"type":510,"tag":623,"props":680,"children":681},{},[682],{"type":515,"value":683},"current.next = second",{"type":510,"tag":623,"props":685,"children":686},{},[687],{"type":515,"value":688},"current 移动 2 格",{"type":510,"tag":623,"props":690,"children":691},{},[692],{"type":515,"value":693},"重复执行",{"type":510,"tag":528,"props":695,"children":699},{"className":696,"code":697,"language":698,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[700],{"type":510,"tag":534,"props":701,"children":702},{"__ignoreMap":503},[703,712,720,729,738,747,756,765,773,816,846,854,900,933,966,992,1051,1060,1094,1135,1145,1154,1191,1220,1249,1257,1266,1302,1311,1336],{"type":510,"tag":538,"props":704,"children":705},{"class":540,"line":541},[706],{"type":510,"tag":538,"props":707,"children":709},{"style":708},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[710],{"type":515,"value":711},"/**\n",{"type":510,"tag":538,"props":713,"children":714},{"class":540,"line":550},[715],{"type":510,"tag":538,"props":716,"children":717},{"style":708},[718],{"type":515,"value":719}," * Definition for singly-linked list.\n",{"type":510,"tag":538,"props":721,"children":723},{"class":540,"line":722},3,[724],{"type":510,"tag":538,"props":725,"children":726},{"style":708},[727],{"type":515,"value":728}," * function ListNode(val, next) {\n",{"type":510,"tag":538,"props":730,"children":732},{"class":540,"line":731},4,[733],{"type":510,"tag":538,"props":734,"children":735},{"style":708},[736],{"type":515,"value":737}," *     this.val = (val===undefined ? 0 : val)\n",{"type":510,"tag":538,"props":739,"children":741},{"class":540,"line":740},5,[742],{"type":510,"tag":538,"props":743,"children":744},{"style":708},[745],{"type":515,"value":746}," *     this.next = (next===undefined ? null : next)\n",{"type":510,"tag":538,"props":748,"children":750},{"class":540,"line":749},6,[751],{"type":510,"tag":538,"props":752,"children":753},{"style":708},[754],{"type":515,"value":755}," * }\n",{"type":510,"tag":538,"props":757,"children":759},{"class":540,"line":758},7,[760],{"type":510,"tag":538,"props":761,"children":762},{"style":708},[763],{"type":515,"value":764}," */\n",{"type":510,"tag":538,"props":766,"children":768},{"class":540,"line":767},8,[769],{"type":510,"tag":538,"props":770,"children":771},{"style":708},[772],{"type":515,"value":711},{"type":510,"tag":538,"props":774,"children":776},{"class":540,"line":775},9,[777,782,788,794,799,805,810],{"type":510,"tag":538,"props":778,"children":779},{"style":708},[780],{"type":515,"value":781}," * ",{"type":510,"tag":538,"props":783,"children":785},{"style":784},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[786],{"type":515,"value":787},"@",{"type":510,"tag":538,"props":789,"children":791},{"style":790},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[792],{"type":515,"value":793},"param",{"type":510,"tag":538,"props":795,"children":796},{"style":784},[797],{"type":515,"value":798}," {",{"type":510,"tag":538,"props":800,"children":802},{"style":801},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[803],{"type":515,"value":804},"ListNode",{"type":510,"tag":538,"props":806,"children":807},{"style":784},[808],{"type":515,"value":809},"}",{"type":510,"tag":538,"props":811,"children":813},{"style":812},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[814],{"type":515,"value":815}," head\n",{"type":510,"tag":538,"props":817,"children":819},{"class":540,"line":818},10,[820,824,828,833,837,841],{"type":510,"tag":538,"props":821,"children":822},{"style":708},[823],{"type":515,"value":781},{"type":510,"tag":538,"props":825,"children":826},{"style":784},[827],{"type":515,"value":787},{"type":510,"tag":538,"props":829,"children":830},{"style":790},[831],{"type":515,"value":832},"return",{"type":510,"tag":538,"props":834,"children":835},{"style":784},[836],{"type":515,"value":798},{"type":510,"tag":538,"props":838,"children":839},{"style":801},[840],{"type":515,"value":804},{"type":510,"tag":538,"props":842,"children":843},{"style":784},[844],{"type":515,"value":845},"}\n",{"type":510,"tag":538,"props":847,"children":849},{"class":540,"line":848},11,[850],{"type":510,"tag":538,"props":851,"children":852},{"style":708},[853],{"type":515,"value":764},{"type":510,"tag":538,"props":855,"children":857},{"class":540,"line":856},12,[858,864,870,875,880,885,890,895],{"type":510,"tag":538,"props":859,"children":861},{"style":860},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[862],{"type":515,"value":863},"var",{"type":510,"tag":538,"props":865,"children":867},{"style":866},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[868],{"type":515,"value":869}," swapPairs",{"type":510,"tag":538,"props":871,"children":872},{"style":784},[873],{"type":515,"value":874}," =",{"type":510,"tag":538,"props":876,"children":877},{"style":860},[878],{"type":515,"value":879}," function",{"type":510,"tag":538,"props":881,"children":882},{"style":784},[883],{"type":515,"value":884}," (",{"type":510,"tag":538,"props":886,"children":887},{"style":812},[888],{"type":515,"value":889},"head",{"type":510,"tag":538,"props":891,"children":892},{"style":784},[893],{"type":515,"value":894},")",{"type":510,"tag":538,"props":896,"children":897},{"style":784},[898],{"type":515,"value":899}," {\n",{"type":510,"tag":538,"props":901,"children":903},{"class":540,"line":902},13,[904,909,914,918,923,928],{"type":510,"tag":538,"props":905,"children":906},{"style":860},[907],{"type":515,"value":908},"  const",{"type":510,"tag":538,"props":910,"children":911},{"style":812},[912],{"type":515,"value":913}," dummy",{"type":510,"tag":538,"props":915,"children":916},{"style":784},[917],{"type":515,"value":874},{"type":510,"tag":538,"props":919,"children":920},{"style":860},[921],{"type":515,"value":922}," new",{"type":510,"tag":538,"props":924,"children":925},{"style":866},[926],{"type":515,"value":927}," ListNode",{"type":510,"tag":538,"props":929,"children":930},{"style":784},[931],{"type":515,"value":932},"();\n",{"type":510,"tag":538,"props":934,"children":936},{"class":540,"line":935},14,[937,942,947,952,956,961],{"type":510,"tag":538,"props":938,"children":939},{"style":812},[940],{"type":515,"value":941},"  dummy",{"type":510,"tag":538,"props":943,"children":944},{"style":784},[945],{"type":515,"value":946},".",{"type":510,"tag":538,"props":948,"children":949},{"style":812},[950],{"type":515,"value":951},"next",{"type":510,"tag":538,"props":953,"children":954},{"style":784},[955],{"type":515,"value":874},{"type":510,"tag":538,"props":957,"children":958},{"style":812},[959],{"type":515,"value":960}," head",{"type":510,"tag":538,"props":962,"children":963},{"style":784},[964],{"type":515,"value":965},";\n",{"type":510,"tag":538,"props":967,"children":969},{"class":540,"line":968},15,[970,975,980,984,988],{"type":510,"tag":538,"props":971,"children":972},{"style":860},[973],{"type":515,"value":974},"  let",{"type":510,"tag":538,"props":976,"children":977},{"style":812},[978],{"type":515,"value":979}," current",{"type":510,"tag":538,"props":981,"children":982},{"style":784},[983],{"type":515,"value":874},{"type":510,"tag":538,"props":985,"children":986},{"style":812},[987],{"type":515,"value":913},{"type":510,"tag":538,"props":989,"children":990},{"style":784},[991],{"type":515,"value":965},{"type":510,"tag":538,"props":993,"children":995},{"class":540,"line":994},16,[996,1001,1005,1010,1014,1018,1023,1027,1031,1035,1039,1043,1047],{"type":510,"tag":538,"props":997,"children":998},{"style":790},[999],{"type":515,"value":1000},"  while",{"type":510,"tag":538,"props":1002,"children":1003},{"style":784},[1004],{"type":515,"value":884},{"type":510,"tag":538,"props":1006,"children":1007},{"style":812},[1008],{"type":515,"value":1009},"current",{"type":510,"tag":538,"props":1011,"children":1012},{"style":784},[1013],{"type":515,"value":946},{"type":510,"tag":538,"props":1015,"children":1016},{"style":812},[1017],{"type":515,"value":951},{"type":510,"tag":538,"props":1019,"children":1020},{"style":860},[1021],{"type":515,"value":1022}," &&",{"type":510,"tag":538,"props":1024,"children":1025},{"style":812},[1026],{"type":515,"value":979},{"type":510,"tag":538,"props":1028,"children":1029},{"style":784},[1030],{"type":515,"value":946},{"type":510,"tag":538,"props":1032,"children":1033},{"style":812},[1034],{"type":515,"value":951},{"type":510,"tag":538,"props":1036,"children":1037},{"style":784},[1038],{"type":515,"value":946},{"type":510,"tag":538,"props":1040,"children":1041},{"style":812},[1042],{"type":515,"value":951},{"type":510,"tag":538,"props":1044,"children":1045},{"style":784},[1046],{"type":515,"value":894},{"type":510,"tag":538,"props":1048,"children":1049},{"style":784},[1050],{"type":515,"value":899},{"type":510,"tag":538,"props":1052,"children":1054},{"class":540,"line":1053},17,[1055],{"type":510,"tag":538,"props":1056,"children":1057},{"style":708},[1058],{"type":515,"value":1059},"    // 初始化双指针\n",{"type":510,"tag":538,"props":1061,"children":1063},{"class":540,"line":1062},18,[1064,1069,1074,1078,1082,1086,1090],{"type":510,"tag":538,"props":1065,"children":1066},{"style":860},[1067],{"type":515,"value":1068},"    const",{"type":510,"tag":538,"props":1070,"children":1071},{"style":812},[1072],{"type":515,"value":1073}," first",{"type":510,"tag":538,"props":1075,"children":1076},{"style":784},[1077],{"type":515,"value":874},{"type":510,"tag":538,"props":1079,"children":1080},{"style":812},[1081],{"type":515,"value":979},{"type":510,"tag":538,"props":1083,"children":1084},{"style":784},[1085],{"type":515,"value":946},{"type":510,"tag":538,"props":1087,"children":1088},{"style":812},[1089],{"type":515,"value":951},{"type":510,"tag":538,"props":1091,"children":1092},{"style":784},[1093],{"type":515,"value":965},{"type":510,"tag":538,"props":1095,"children":1097},{"class":540,"line":1096},19,[1098,1102,1107,1111,1115,1119,1123,1127,1131],{"type":510,"tag":538,"props":1099,"children":1100},{"style":860},[1101],{"type":515,"value":1068},{"type":510,"tag":538,"props":1103,"children":1104},{"style":812},[1105],{"type":515,"value":1106}," second",{"type":510,"tag":538,"props":1108,"children":1109},{"style":784},[1110],{"type":515,"value":874},{"type":510,"tag":538,"props":1112,"children":1113},{"style":812},[1114],{"type":515,"value":979},{"type":510,"tag":538,"props":1116,"children":1117},{"style":784},[1118],{"type":515,"value":946},{"type":510,"tag":538,"props":1120,"children":1121},{"style":812},[1122],{"type":515,"value":951},{"type":510,"tag":538,"props":1124,"children":1125},{"style":784},[1126],{"type":515,"value":946},{"type":510,"tag":538,"props":1128,"children":1129},{"style":812},[1130],{"type":515,"value":951},{"type":510,"tag":538,"props":1132,"children":1133},{"style":784},[1134],{"type":515,"value":965},{"type":510,"tag":538,"props":1136,"children":1138},{"class":540,"line":1137},20,[1139],{"type":510,"tag":538,"props":1140,"children":1142},{"emptyLinePlaceholder":1141},true,[1143],{"type":515,"value":1144},"\n",{"type":510,"tag":538,"props":1146,"children":1148},{"class":540,"line":1147},21,[1149],{"type":510,"tag":538,"props":1150,"children":1151},{"style":708},[1152],{"type":515,"value":1153},"    // 更新双指针和 current 指针\n",{"type":510,"tag":538,"props":1155,"children":1157},{"class":540,"line":1156},22,[1158,1163,1167,1171,1175,1179,1183,1187],{"type":510,"tag":538,"props":1159,"children":1160},{"style":812},[1161],{"type":515,"value":1162},"    first",{"type":510,"tag":538,"props":1164,"children":1165},{"style":784},[1166],{"type":515,"value":946},{"type":510,"tag":538,"props":1168,"children":1169},{"style":812},[1170],{"type":515,"value":951},{"type":510,"tag":538,"props":1172,"children":1173},{"style":784},[1174],{"type":515,"value":874},{"type":510,"tag":538,"props":1176,"children":1177},{"style":812},[1178],{"type":515,"value":1106},{"type":510,"tag":538,"props":1180,"children":1181},{"style":784},[1182],{"type":515,"value":946},{"type":510,"tag":538,"props":1184,"children":1185},{"style":812},[1186],{"type":515,"value":951},{"type":510,"tag":538,"props":1188,"children":1189},{"style":784},[1190],{"type":515,"value":965},{"type":510,"tag":538,"props":1192,"children":1194},{"class":540,"line":1193},23,[1195,1200,1204,1208,1212,1216],{"type":510,"tag":538,"props":1196,"children":1197},{"style":812},[1198],{"type":515,"value":1199},"    second",{"type":510,"tag":538,"props":1201,"children":1202},{"style":784},[1203],{"type":515,"value":946},{"type":510,"tag":538,"props":1205,"children":1206},{"style":812},[1207],{"type":515,"value":951},{"type":510,"tag":538,"props":1209,"children":1210},{"style":784},[1211],{"type":515,"value":874},{"type":510,"tag":538,"props":1213,"children":1214},{"style":812},[1215],{"type":515,"value":1073},{"type":510,"tag":538,"props":1217,"children":1218},{"style":784},[1219],{"type":515,"value":965},{"type":510,"tag":538,"props":1221,"children":1223},{"class":540,"line":1222},24,[1224,1229,1233,1237,1241,1245],{"type":510,"tag":538,"props":1225,"children":1226},{"style":812},[1227],{"type":515,"value":1228},"    current",{"type":510,"tag":538,"props":1230,"children":1231},{"style":784},[1232],{"type":515,"value":946},{"type":510,"tag":538,"props":1234,"children":1235},{"style":812},[1236],{"type":515,"value":951},{"type":510,"tag":538,"props":1238,"children":1239},{"style":784},[1240],{"type":515,"value":874},{"type":510,"tag":538,"props":1242,"children":1243},{"style":812},[1244],{"type":515,"value":1106},{"type":510,"tag":538,"props":1246,"children":1247},{"style":784},[1248],{"type":515,"value":965},{"type":510,"tag":538,"props":1250,"children":1252},{"class":540,"line":1251},25,[1253],{"type":510,"tag":538,"props":1254,"children":1255},{"emptyLinePlaceholder":1141},[1256],{"type":515,"value":1144},{"type":510,"tag":538,"props":1258,"children":1260},{"class":540,"line":1259},26,[1261],{"type":510,"tag":538,"props":1262,"children":1263},{"style":708},[1264],{"type":515,"value":1265},"    // 指针移动\n",{"type":510,"tag":538,"props":1267,"children":1269},{"class":540,"line":1268},27,[1270,1274,1278,1282,1286,1290,1294,1298],{"type":510,"tag":538,"props":1271,"children":1272},{"style":812},[1273],{"type":515,"value":1228},{"type":510,"tag":538,"props":1275,"children":1276},{"style":784},[1277],{"type":515,"value":874},{"type":510,"tag":538,"props":1279,"children":1280},{"style":812},[1281],{"type":515,"value":979},{"type":510,"tag":538,"props":1283,"children":1284},{"style":784},[1285],{"type":515,"value":946},{"type":510,"tag":538,"props":1287,"children":1288},{"style":812},[1289],{"type":515,"value":951},{"type":510,"tag":538,"props":1291,"children":1292},{"style":784},[1293],{"type":515,"value":946},{"type":510,"tag":538,"props":1295,"children":1296},{"style":812},[1297],{"type":515,"value":951},{"type":510,"tag":538,"props":1299,"children":1300},{"style":784},[1301],{"type":515,"value":965},{"type":510,"tag":538,"props":1303,"children":1305},{"class":540,"line":1304},28,[1306],{"type":510,"tag":538,"props":1307,"children":1308},{"style":784},[1309],{"type":515,"value":1310},"  }\n",{"type":510,"tag":538,"props":1312,"children":1314},{"class":540,"line":1313},29,[1315,1320,1324,1328,1332],{"type":510,"tag":538,"props":1316,"children":1317},{"style":790},[1318],{"type":515,"value":1319},"  return",{"type":510,"tag":538,"props":1321,"children":1322},{"style":812},[1323],{"type":515,"value":913},{"type":510,"tag":538,"props":1325,"children":1326},{"style":784},[1327],{"type":515,"value":946},{"type":510,"tag":538,"props":1329,"children":1330},{"style":812},[1331],{"type":515,"value":951},{"type":510,"tag":538,"props":1333,"children":1334},{"style":784},[1335],{"type":515,"value":965},{"type":510,"tag":538,"props":1337,"children":1339},{"class":540,"line":1338},30,[1340],{"type":510,"tag":538,"props":1341,"children":1342},{"style":784},[1343],{"type":515,"value":1344},"};\n",{"type":510,"tag":1346,"props":1347,"children":1348},"style",{},[1349],{"type":515,"value":1350},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":740,"depth":740,"links":1352},[1353,1354],{"id":636,"depth":550,"text":636},{"id":641,"depth":550,"text":641,"children":1355},[1356],{"id":647,"depth":722,"text":647},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1363,1365],{"_path":96,"title":95,"description":1364},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":102,"title":101,"description":1366},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1714054335724]