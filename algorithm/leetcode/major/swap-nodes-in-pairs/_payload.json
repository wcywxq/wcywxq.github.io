[{"data":1,"prerenderedAt":1410},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":543,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1405},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":98,"description":547,"url":548,"body":549,"_type":1400,"_id":1401,"_source":1402,"_file":1403,"_extension":1404},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":550,"children":551,"toc":1394},"root",[552,559,570,600,605,628,633,656,661,676,682,687,693,698,737,1388],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562,564],{"type":558,"value":563},"示例 1：\n",{"type":553,"tag":565,"props":566,"children":569},"img",{"alt":567,"src":568},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":553,"tag":571,"props":572,"children":575},"pre",{"className":573,"code":574,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[576],{"type":553,"tag":577,"props":578,"children":579},"code",{"__ignoreMap":546},[580,591],{"type":553,"tag":581,"props":582,"children":585},"span",{"class":583,"line":584},"line",1,[586],{"type":553,"tag":581,"props":587,"children":588},{},[589],{"type":558,"value":590},"输入：head = [1,2,3,4]\n",{"type":553,"tag":581,"props":592,"children":594},{"class":583,"line":593},2,[595],{"type":553,"tag":581,"props":596,"children":597},{},[598],{"type":558,"value":599},"输出：[2,1,4,3]\n",{"type":553,"tag":554,"props":601,"children":602},{},[603],{"type":558,"value":604},"示例 2：",{"type":553,"tag":571,"props":606,"children":608},{"className":573,"code":607,"language":558,"meta":546,"style":546},"输入：head = []\n输出：[]\n",[609],{"type":553,"tag":577,"props":610,"children":611},{"__ignoreMap":546},[612,620],{"type":553,"tag":581,"props":613,"children":614},{"class":583,"line":584},[615],{"type":553,"tag":581,"props":616,"children":617},{},[618],{"type":558,"value":619},"输入：head = []\n",{"type":553,"tag":581,"props":621,"children":622},{"class":583,"line":593},[623],{"type":553,"tag":581,"props":624,"children":625},{},[626],{"type":558,"value":627},"输出：[]\n",{"type":553,"tag":554,"props":629,"children":630},{},[631],{"type":558,"value":632},"示例 3：",{"type":553,"tag":571,"props":634,"children":636},{"className":573,"code":635,"language":558,"meta":546,"style":546},"输入：head = [1]\n输出：[1]\n",[637],{"type":553,"tag":577,"props":638,"children":639},{"__ignoreMap":546},[640,648],{"type":553,"tag":581,"props":641,"children":642},{"class":583,"line":584},[643],{"type":553,"tag":581,"props":644,"children":645},{},[646],{"type":558,"value":647},"输入：head = [1]\n",{"type":553,"tag":581,"props":649,"children":650},{"class":583,"line":593},[651],{"type":553,"tag":581,"props":652,"children":653},{},[654],{"type":558,"value":655},"输出：[1]\n",{"type":553,"tag":554,"props":657,"children":658},{},[659],{"type":558,"value":660},"提示：",{"type":553,"tag":662,"props":663,"children":664},"ul",{},[665,671],{"type":553,"tag":666,"props":667,"children":668},"li",{},[669],{"type":558,"value":670},"链表中节点的数目在范围 [0, 100] 内",{"type":553,"tag":666,"props":672,"children":673},{},[674],{"type":558,"value":675},"0 \u003C= Node.val \u003C= 100",{"type":553,"tag":677,"props":678,"children":680},"h2",{"id":679},"解题思路",[681],{"type":558,"value":679},{"type":553,"tag":677,"props":683,"children":685},{"id":684},"实现",[686],{"type":558,"value":684},{"type":553,"tag":688,"props":689,"children":691},"h3",{"id":690},"双指针",[692],{"type":558,"value":690},{"type":553,"tag":554,"props":694,"children":695},{},[696],{"type":558,"value":697},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":553,"tag":699,"props":700,"children":701},"ol",{},[702,707,712,717,722,727,732],{"type":553,"tag":666,"props":703,"children":704},{},[705],{"type":558,"value":706},"初始化 first 为第一个节点",{"type":553,"tag":666,"props":708,"children":709},{},[710],{"type":558,"value":711},"初始化 second 为第二个节点",{"type":553,"tag":666,"props":713,"children":714},{},[715],{"type":558,"value":716},"初始化 current 为 dummy",{"type":553,"tag":666,"props":718,"children":719},{},[720],{"type":558,"value":721},"first.next = second.next",{"type":553,"tag":666,"props":723,"children":724},{},[725],{"type":558,"value":726},"current.next = second",{"type":553,"tag":666,"props":728,"children":729},{},[730],{"type":558,"value":731},"current 移动 2 格",{"type":553,"tag":666,"props":733,"children":734},{},[735],{"type":558,"value":736},"重复执行",{"type":553,"tag":571,"props":738,"children":742},{"className":739,"code":740,"language":741,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[743],{"type":553,"tag":577,"props":744,"children":745},{"__ignoreMap":546},[746,755,763,772,781,790,799,808,816,859,889,897,943,976,1009,1035,1094,1103,1137,1178,1188,1197,1234,1263,1292,1300,1309,1345,1354,1379],{"type":553,"tag":581,"props":747,"children":748},{"class":583,"line":584},[749],{"type":553,"tag":581,"props":750,"children":752},{"style":751},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[753],{"type":558,"value":754},"/**\n",{"type":553,"tag":581,"props":756,"children":757},{"class":583,"line":593},[758],{"type":553,"tag":581,"props":759,"children":760},{"style":751},[761],{"type":558,"value":762}," * Definition for singly-linked list.\n",{"type":553,"tag":581,"props":764,"children":766},{"class":583,"line":765},3,[767],{"type":553,"tag":581,"props":768,"children":769},{"style":751},[770],{"type":558,"value":771}," * function ListNode(val, next) {\n",{"type":553,"tag":581,"props":773,"children":775},{"class":583,"line":774},4,[776],{"type":553,"tag":581,"props":777,"children":778},{"style":751},[779],{"type":558,"value":780}," *     this.val = (val===undefined ? 0 : val)\n",{"type":553,"tag":581,"props":782,"children":784},{"class":583,"line":783},5,[785],{"type":553,"tag":581,"props":786,"children":787},{"style":751},[788],{"type":558,"value":789}," *     this.next = (next===undefined ? null : next)\n",{"type":553,"tag":581,"props":791,"children":793},{"class":583,"line":792},6,[794],{"type":553,"tag":581,"props":795,"children":796},{"style":751},[797],{"type":558,"value":798}," * }\n",{"type":553,"tag":581,"props":800,"children":802},{"class":583,"line":801},7,[803],{"type":553,"tag":581,"props":804,"children":805},{"style":751},[806],{"type":558,"value":807}," */\n",{"type":553,"tag":581,"props":809,"children":811},{"class":583,"line":810},8,[812],{"type":553,"tag":581,"props":813,"children":814},{"style":751},[815],{"type":558,"value":754},{"type":553,"tag":581,"props":817,"children":819},{"class":583,"line":818},9,[820,825,831,837,842,848,853],{"type":553,"tag":581,"props":821,"children":822},{"style":751},[823],{"type":558,"value":824}," * ",{"type":553,"tag":581,"props":826,"children":828},{"style":827},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[829],{"type":558,"value":830},"@",{"type":553,"tag":581,"props":832,"children":834},{"style":833},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[835],{"type":558,"value":836},"param",{"type":553,"tag":581,"props":838,"children":839},{"style":827},[840],{"type":558,"value":841}," {",{"type":553,"tag":581,"props":843,"children":845},{"style":844},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[846],{"type":558,"value":847},"ListNode",{"type":553,"tag":581,"props":849,"children":850},{"style":827},[851],{"type":558,"value":852},"}",{"type":553,"tag":581,"props":854,"children":856},{"style":855},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[857],{"type":558,"value":858}," head\n",{"type":553,"tag":581,"props":860,"children":862},{"class":583,"line":861},10,[863,867,871,876,880,884],{"type":553,"tag":581,"props":864,"children":865},{"style":751},[866],{"type":558,"value":824},{"type":553,"tag":581,"props":868,"children":869},{"style":827},[870],{"type":558,"value":830},{"type":553,"tag":581,"props":872,"children":873},{"style":833},[874],{"type":558,"value":875},"return",{"type":553,"tag":581,"props":877,"children":878},{"style":827},[879],{"type":558,"value":841},{"type":553,"tag":581,"props":881,"children":882},{"style":844},[883],{"type":558,"value":847},{"type":553,"tag":581,"props":885,"children":886},{"style":827},[887],{"type":558,"value":888},"}\n",{"type":553,"tag":581,"props":890,"children":892},{"class":583,"line":891},11,[893],{"type":553,"tag":581,"props":894,"children":895},{"style":751},[896],{"type":558,"value":807},{"type":553,"tag":581,"props":898,"children":900},{"class":583,"line":899},12,[901,907,913,918,923,928,933,938],{"type":553,"tag":581,"props":902,"children":904},{"style":903},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[905],{"type":558,"value":906},"var",{"type":553,"tag":581,"props":908,"children":910},{"style":909},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[911],{"type":558,"value":912}," swapPairs",{"type":553,"tag":581,"props":914,"children":915},{"style":827},[916],{"type":558,"value":917}," =",{"type":553,"tag":581,"props":919,"children":920},{"style":903},[921],{"type":558,"value":922}," function",{"type":553,"tag":581,"props":924,"children":925},{"style":827},[926],{"type":558,"value":927}," (",{"type":553,"tag":581,"props":929,"children":930},{"style":855},[931],{"type":558,"value":932},"head",{"type":553,"tag":581,"props":934,"children":935},{"style":827},[936],{"type":558,"value":937},")",{"type":553,"tag":581,"props":939,"children":940},{"style":827},[941],{"type":558,"value":942}," {\n",{"type":553,"tag":581,"props":944,"children":946},{"class":583,"line":945},13,[947,952,957,961,966,971],{"type":553,"tag":581,"props":948,"children":949},{"style":903},[950],{"type":558,"value":951},"  const",{"type":553,"tag":581,"props":953,"children":954},{"style":855},[955],{"type":558,"value":956}," dummy",{"type":553,"tag":581,"props":958,"children":959},{"style":827},[960],{"type":558,"value":917},{"type":553,"tag":581,"props":962,"children":963},{"style":903},[964],{"type":558,"value":965}," new",{"type":553,"tag":581,"props":967,"children":968},{"style":909},[969],{"type":558,"value":970}," ListNode",{"type":553,"tag":581,"props":972,"children":973},{"style":827},[974],{"type":558,"value":975},"();\n",{"type":553,"tag":581,"props":977,"children":979},{"class":583,"line":978},14,[980,985,990,995,999,1004],{"type":553,"tag":581,"props":981,"children":982},{"style":855},[983],{"type":558,"value":984},"  dummy",{"type":553,"tag":581,"props":986,"children":987},{"style":827},[988],{"type":558,"value":989},".",{"type":553,"tag":581,"props":991,"children":992},{"style":855},[993],{"type":558,"value":994},"next",{"type":553,"tag":581,"props":996,"children":997},{"style":827},[998],{"type":558,"value":917},{"type":553,"tag":581,"props":1000,"children":1001},{"style":855},[1002],{"type":558,"value":1003}," head",{"type":553,"tag":581,"props":1005,"children":1006},{"style":827},[1007],{"type":558,"value":1008},";\n",{"type":553,"tag":581,"props":1010,"children":1012},{"class":583,"line":1011},15,[1013,1018,1023,1027,1031],{"type":553,"tag":581,"props":1014,"children":1015},{"style":903},[1016],{"type":558,"value":1017},"  let",{"type":553,"tag":581,"props":1019,"children":1020},{"style":855},[1021],{"type":558,"value":1022}," current",{"type":553,"tag":581,"props":1024,"children":1025},{"style":827},[1026],{"type":558,"value":917},{"type":553,"tag":581,"props":1028,"children":1029},{"style":855},[1030],{"type":558,"value":956},{"type":553,"tag":581,"props":1032,"children":1033},{"style":827},[1034],{"type":558,"value":1008},{"type":553,"tag":581,"props":1036,"children":1038},{"class":583,"line":1037},16,[1039,1044,1048,1053,1057,1061,1066,1070,1074,1078,1082,1086,1090],{"type":553,"tag":581,"props":1040,"children":1041},{"style":833},[1042],{"type":558,"value":1043},"  while",{"type":553,"tag":581,"props":1045,"children":1046},{"style":827},[1047],{"type":558,"value":927},{"type":553,"tag":581,"props":1049,"children":1050},{"style":855},[1051],{"type":558,"value":1052},"current",{"type":553,"tag":581,"props":1054,"children":1055},{"style":827},[1056],{"type":558,"value":989},{"type":553,"tag":581,"props":1058,"children":1059},{"style":855},[1060],{"type":558,"value":994},{"type":553,"tag":581,"props":1062,"children":1063},{"style":903},[1064],{"type":558,"value":1065}," &&",{"type":553,"tag":581,"props":1067,"children":1068},{"style":855},[1069],{"type":558,"value":1022},{"type":553,"tag":581,"props":1071,"children":1072},{"style":827},[1073],{"type":558,"value":989},{"type":553,"tag":581,"props":1075,"children":1076},{"style":855},[1077],{"type":558,"value":994},{"type":553,"tag":581,"props":1079,"children":1080},{"style":827},[1081],{"type":558,"value":989},{"type":553,"tag":581,"props":1083,"children":1084},{"style":855},[1085],{"type":558,"value":994},{"type":553,"tag":581,"props":1087,"children":1088},{"style":827},[1089],{"type":558,"value":937},{"type":553,"tag":581,"props":1091,"children":1092},{"style":827},[1093],{"type":558,"value":942},{"type":553,"tag":581,"props":1095,"children":1097},{"class":583,"line":1096},17,[1098],{"type":553,"tag":581,"props":1099,"children":1100},{"style":751},[1101],{"type":558,"value":1102},"    // 初始化双指针\n",{"type":553,"tag":581,"props":1104,"children":1106},{"class":583,"line":1105},18,[1107,1112,1117,1121,1125,1129,1133],{"type":553,"tag":581,"props":1108,"children":1109},{"style":903},[1110],{"type":558,"value":1111},"    const",{"type":553,"tag":581,"props":1113,"children":1114},{"style":855},[1115],{"type":558,"value":1116}," first",{"type":553,"tag":581,"props":1118,"children":1119},{"style":827},[1120],{"type":558,"value":917},{"type":553,"tag":581,"props":1122,"children":1123},{"style":855},[1124],{"type":558,"value":1022},{"type":553,"tag":581,"props":1126,"children":1127},{"style":827},[1128],{"type":558,"value":989},{"type":553,"tag":581,"props":1130,"children":1131},{"style":855},[1132],{"type":558,"value":994},{"type":553,"tag":581,"props":1134,"children":1135},{"style":827},[1136],{"type":558,"value":1008},{"type":553,"tag":581,"props":1138,"children":1140},{"class":583,"line":1139},19,[1141,1145,1150,1154,1158,1162,1166,1170,1174],{"type":553,"tag":581,"props":1142,"children":1143},{"style":903},[1144],{"type":558,"value":1111},{"type":553,"tag":581,"props":1146,"children":1147},{"style":855},[1148],{"type":558,"value":1149}," second",{"type":553,"tag":581,"props":1151,"children":1152},{"style":827},[1153],{"type":558,"value":917},{"type":553,"tag":581,"props":1155,"children":1156},{"style":855},[1157],{"type":558,"value":1022},{"type":553,"tag":581,"props":1159,"children":1160},{"style":827},[1161],{"type":558,"value":989},{"type":553,"tag":581,"props":1163,"children":1164},{"style":855},[1165],{"type":558,"value":994},{"type":553,"tag":581,"props":1167,"children":1168},{"style":827},[1169],{"type":558,"value":989},{"type":553,"tag":581,"props":1171,"children":1172},{"style":855},[1173],{"type":558,"value":994},{"type":553,"tag":581,"props":1175,"children":1176},{"style":827},[1177],{"type":558,"value":1008},{"type":553,"tag":581,"props":1179,"children":1181},{"class":583,"line":1180},20,[1182],{"type":553,"tag":581,"props":1183,"children":1185},{"emptyLinePlaceholder":1184},true,[1186],{"type":558,"value":1187},"\n",{"type":553,"tag":581,"props":1189,"children":1191},{"class":583,"line":1190},21,[1192],{"type":553,"tag":581,"props":1193,"children":1194},{"style":751},[1195],{"type":558,"value":1196},"    // 更新双指针和 current 指针\n",{"type":553,"tag":581,"props":1198,"children":1200},{"class":583,"line":1199},22,[1201,1206,1210,1214,1218,1222,1226,1230],{"type":553,"tag":581,"props":1202,"children":1203},{"style":855},[1204],{"type":558,"value":1205},"    first",{"type":553,"tag":581,"props":1207,"children":1208},{"style":827},[1209],{"type":558,"value":989},{"type":553,"tag":581,"props":1211,"children":1212},{"style":855},[1213],{"type":558,"value":994},{"type":553,"tag":581,"props":1215,"children":1216},{"style":827},[1217],{"type":558,"value":917},{"type":553,"tag":581,"props":1219,"children":1220},{"style":855},[1221],{"type":558,"value":1149},{"type":553,"tag":581,"props":1223,"children":1224},{"style":827},[1225],{"type":558,"value":989},{"type":553,"tag":581,"props":1227,"children":1228},{"style":855},[1229],{"type":558,"value":994},{"type":553,"tag":581,"props":1231,"children":1232},{"style":827},[1233],{"type":558,"value":1008},{"type":553,"tag":581,"props":1235,"children":1237},{"class":583,"line":1236},23,[1238,1243,1247,1251,1255,1259],{"type":553,"tag":581,"props":1239,"children":1240},{"style":855},[1241],{"type":558,"value":1242},"    second",{"type":553,"tag":581,"props":1244,"children":1245},{"style":827},[1246],{"type":558,"value":989},{"type":553,"tag":581,"props":1248,"children":1249},{"style":855},[1250],{"type":558,"value":994},{"type":553,"tag":581,"props":1252,"children":1253},{"style":827},[1254],{"type":558,"value":917},{"type":553,"tag":581,"props":1256,"children":1257},{"style":855},[1258],{"type":558,"value":1116},{"type":553,"tag":581,"props":1260,"children":1261},{"style":827},[1262],{"type":558,"value":1008},{"type":553,"tag":581,"props":1264,"children":1266},{"class":583,"line":1265},24,[1267,1272,1276,1280,1284,1288],{"type":553,"tag":581,"props":1268,"children":1269},{"style":855},[1270],{"type":558,"value":1271},"    current",{"type":553,"tag":581,"props":1273,"children":1274},{"style":827},[1275],{"type":558,"value":989},{"type":553,"tag":581,"props":1277,"children":1278},{"style":855},[1279],{"type":558,"value":994},{"type":553,"tag":581,"props":1281,"children":1282},{"style":827},[1283],{"type":558,"value":917},{"type":553,"tag":581,"props":1285,"children":1286},{"style":855},[1287],{"type":558,"value":1149},{"type":553,"tag":581,"props":1289,"children":1290},{"style":827},[1291],{"type":558,"value":1008},{"type":553,"tag":581,"props":1293,"children":1295},{"class":583,"line":1294},25,[1296],{"type":553,"tag":581,"props":1297,"children":1298},{"emptyLinePlaceholder":1184},[1299],{"type":558,"value":1187},{"type":553,"tag":581,"props":1301,"children":1303},{"class":583,"line":1302},26,[1304],{"type":553,"tag":581,"props":1305,"children":1306},{"style":751},[1307],{"type":558,"value":1308},"    // 指针移动\n",{"type":553,"tag":581,"props":1310,"children":1312},{"class":583,"line":1311},27,[1313,1317,1321,1325,1329,1333,1337,1341],{"type":553,"tag":581,"props":1314,"children":1315},{"style":855},[1316],{"type":558,"value":1271},{"type":553,"tag":581,"props":1318,"children":1319},{"style":827},[1320],{"type":558,"value":917},{"type":553,"tag":581,"props":1322,"children":1323},{"style":855},[1324],{"type":558,"value":1022},{"type":553,"tag":581,"props":1326,"children":1327},{"style":827},[1328],{"type":558,"value":989},{"type":553,"tag":581,"props":1330,"children":1331},{"style":855},[1332],{"type":558,"value":994},{"type":553,"tag":581,"props":1334,"children":1335},{"style":827},[1336],{"type":558,"value":989},{"type":553,"tag":581,"props":1338,"children":1339},{"style":855},[1340],{"type":558,"value":994},{"type":553,"tag":581,"props":1342,"children":1343},{"style":827},[1344],{"type":558,"value":1008},{"type":553,"tag":581,"props":1346,"children":1348},{"class":583,"line":1347},28,[1349],{"type":553,"tag":581,"props":1350,"children":1351},{"style":827},[1352],{"type":558,"value":1353},"  }\n",{"type":553,"tag":581,"props":1355,"children":1357},{"class":583,"line":1356},29,[1358,1363,1367,1371,1375],{"type":553,"tag":581,"props":1359,"children":1360},{"style":833},[1361],{"type":558,"value":1362},"  return",{"type":553,"tag":581,"props":1364,"children":1365},{"style":855},[1366],{"type":558,"value":956},{"type":553,"tag":581,"props":1368,"children":1369},{"style":827},[1370],{"type":558,"value":989},{"type":553,"tag":581,"props":1372,"children":1373},{"style":855},[1374],{"type":558,"value":994},{"type":553,"tag":581,"props":1376,"children":1377},{"style":827},[1378],{"type":558,"value":1008},{"type":553,"tag":581,"props":1380,"children":1382},{"class":583,"line":1381},30,[1383],{"type":553,"tag":581,"props":1384,"children":1385},{"style":827},[1386],{"type":558,"value":1387},"};\n",{"type":553,"tag":1389,"props":1390,"children":1391},"style",{},[1392],{"type":558,"value":1393},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":783,"depth":783,"links":1395},[1396,1397],{"id":679,"depth":593,"text":679},{"id":684,"depth":593,"text":684,"children":1398},[1399],{"id":690,"depth":765,"text":690},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1406,1408],{"_path":96,"title":95,"description":1407},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":102,"title":101,"description":1409},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1714099676674]