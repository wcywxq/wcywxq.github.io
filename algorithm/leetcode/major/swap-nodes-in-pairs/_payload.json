[{"data":1,"prerenderedAt":1416},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":549,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1411},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":98,"description":553,"url":554,"body":555,"_type":1406,"_id":1407,"_source":1408,"_file":1409,"_extension":1410},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":556,"children":557,"toc":1400},"root",[558,565,576,606,611,634,639,662,667,682,688,693,699,704,743,1394],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568,570],{"type":564,"value":569},"示例 1：\n",{"type":559,"tag":571,"props":572,"children":575},"img",{"alt":573,"src":574},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":559,"tag":577,"props":578,"children":581},"pre",{"className":579,"code":580,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[582],{"type":559,"tag":583,"props":584,"children":585},"code",{"__ignoreMap":552},[586,597],{"type":559,"tag":587,"props":588,"children":591},"span",{"class":589,"line":590},"line",1,[592],{"type":559,"tag":587,"props":593,"children":594},{},[595],{"type":564,"value":596},"输入：head = [1,2,3,4]\n",{"type":559,"tag":587,"props":598,"children":600},{"class":589,"line":599},2,[601],{"type":559,"tag":587,"props":602,"children":603},{},[604],{"type":564,"value":605},"输出：[2,1,4,3]\n",{"type":559,"tag":560,"props":607,"children":608},{},[609],{"type":564,"value":610},"示例 2：",{"type":559,"tag":577,"props":612,"children":614},{"className":579,"code":613,"language":564,"meta":552,"style":552},"输入：head = []\n输出：[]\n",[615],{"type":559,"tag":583,"props":616,"children":617},{"__ignoreMap":552},[618,626],{"type":559,"tag":587,"props":619,"children":620},{"class":589,"line":590},[621],{"type":559,"tag":587,"props":622,"children":623},{},[624],{"type":564,"value":625},"输入：head = []\n",{"type":559,"tag":587,"props":627,"children":628},{"class":589,"line":599},[629],{"type":559,"tag":587,"props":630,"children":631},{},[632],{"type":564,"value":633},"输出：[]\n",{"type":559,"tag":560,"props":635,"children":636},{},[637],{"type":564,"value":638},"示例 3：",{"type":559,"tag":577,"props":640,"children":642},{"className":579,"code":641,"language":564,"meta":552,"style":552},"输入：head = [1]\n输出：[1]\n",[643],{"type":559,"tag":583,"props":644,"children":645},{"__ignoreMap":552},[646,654],{"type":559,"tag":587,"props":647,"children":648},{"class":589,"line":590},[649],{"type":559,"tag":587,"props":650,"children":651},{},[652],{"type":564,"value":653},"输入：head = [1]\n",{"type":559,"tag":587,"props":655,"children":656},{"class":589,"line":599},[657],{"type":559,"tag":587,"props":658,"children":659},{},[660],{"type":564,"value":661},"输出：[1]\n",{"type":559,"tag":560,"props":663,"children":664},{},[665],{"type":564,"value":666},"提示：",{"type":559,"tag":668,"props":669,"children":670},"ul",{},[671,677],{"type":559,"tag":672,"props":673,"children":674},"li",{},[675],{"type":564,"value":676},"链表中节点的数目在范围 [0, 100] 内",{"type":559,"tag":672,"props":678,"children":679},{},[680],{"type":564,"value":681},"0 \u003C= Node.val \u003C= 100",{"type":559,"tag":683,"props":684,"children":686},"h2",{"id":685},"解题思路",[687],{"type":564,"value":685},{"type":559,"tag":683,"props":689,"children":691},{"id":690},"实现",[692],{"type":564,"value":690},{"type":559,"tag":694,"props":695,"children":697},"h3",{"id":696},"双指针",[698],{"type":564,"value":696},{"type":559,"tag":560,"props":700,"children":701},{},[702],{"type":564,"value":703},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":559,"tag":705,"props":706,"children":707},"ol",{},[708,713,718,723,728,733,738],{"type":559,"tag":672,"props":709,"children":710},{},[711],{"type":564,"value":712},"初始化 first 为第一个节点",{"type":559,"tag":672,"props":714,"children":715},{},[716],{"type":564,"value":717},"初始化 second 为第二个节点",{"type":559,"tag":672,"props":719,"children":720},{},[721],{"type":564,"value":722},"初始化 current 为 dummy",{"type":559,"tag":672,"props":724,"children":725},{},[726],{"type":564,"value":727},"first.next = second.next",{"type":559,"tag":672,"props":729,"children":730},{},[731],{"type":564,"value":732},"current.next = second",{"type":559,"tag":672,"props":734,"children":735},{},[736],{"type":564,"value":737},"current 移动 2 格",{"type":559,"tag":672,"props":739,"children":740},{},[741],{"type":564,"value":742},"重复执行",{"type":559,"tag":577,"props":744,"children":748},{"className":745,"code":746,"language":747,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[749],{"type":559,"tag":583,"props":750,"children":751},{"__ignoreMap":552},[752,761,769,778,787,796,805,814,822,865,895,903,949,982,1015,1041,1100,1109,1143,1184,1194,1203,1240,1269,1298,1306,1315,1351,1360,1385],{"type":559,"tag":587,"props":753,"children":754},{"class":589,"line":590},[755],{"type":559,"tag":587,"props":756,"children":758},{"style":757},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[759],{"type":564,"value":760},"/**\n",{"type":559,"tag":587,"props":762,"children":763},{"class":589,"line":599},[764],{"type":559,"tag":587,"props":765,"children":766},{"style":757},[767],{"type":564,"value":768}," * Definition for singly-linked list.\n",{"type":559,"tag":587,"props":770,"children":772},{"class":589,"line":771},3,[773],{"type":559,"tag":587,"props":774,"children":775},{"style":757},[776],{"type":564,"value":777}," * function ListNode(val, next) {\n",{"type":559,"tag":587,"props":779,"children":781},{"class":589,"line":780},4,[782],{"type":559,"tag":587,"props":783,"children":784},{"style":757},[785],{"type":564,"value":786}," *     this.val = (val===undefined ? 0 : val)\n",{"type":559,"tag":587,"props":788,"children":790},{"class":589,"line":789},5,[791],{"type":559,"tag":587,"props":792,"children":793},{"style":757},[794],{"type":564,"value":795}," *     this.next = (next===undefined ? null : next)\n",{"type":559,"tag":587,"props":797,"children":799},{"class":589,"line":798},6,[800],{"type":559,"tag":587,"props":801,"children":802},{"style":757},[803],{"type":564,"value":804}," * }\n",{"type":559,"tag":587,"props":806,"children":808},{"class":589,"line":807},7,[809],{"type":559,"tag":587,"props":810,"children":811},{"style":757},[812],{"type":564,"value":813}," */\n",{"type":559,"tag":587,"props":815,"children":817},{"class":589,"line":816},8,[818],{"type":559,"tag":587,"props":819,"children":820},{"style":757},[821],{"type":564,"value":760},{"type":559,"tag":587,"props":823,"children":825},{"class":589,"line":824},9,[826,831,837,843,848,854,859],{"type":559,"tag":587,"props":827,"children":828},{"style":757},[829],{"type":564,"value":830}," * ",{"type":559,"tag":587,"props":832,"children":834},{"style":833},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[835],{"type":564,"value":836},"@",{"type":559,"tag":587,"props":838,"children":840},{"style":839},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[841],{"type":564,"value":842},"param",{"type":559,"tag":587,"props":844,"children":845},{"style":833},[846],{"type":564,"value":847}," {",{"type":559,"tag":587,"props":849,"children":851},{"style":850},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[852],{"type":564,"value":853},"ListNode",{"type":559,"tag":587,"props":855,"children":856},{"style":833},[857],{"type":564,"value":858},"}",{"type":559,"tag":587,"props":860,"children":862},{"style":861},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[863],{"type":564,"value":864}," head\n",{"type":559,"tag":587,"props":866,"children":868},{"class":589,"line":867},10,[869,873,877,882,886,890],{"type":559,"tag":587,"props":870,"children":871},{"style":757},[872],{"type":564,"value":830},{"type":559,"tag":587,"props":874,"children":875},{"style":833},[876],{"type":564,"value":836},{"type":559,"tag":587,"props":878,"children":879},{"style":839},[880],{"type":564,"value":881},"return",{"type":559,"tag":587,"props":883,"children":884},{"style":833},[885],{"type":564,"value":847},{"type":559,"tag":587,"props":887,"children":888},{"style":850},[889],{"type":564,"value":853},{"type":559,"tag":587,"props":891,"children":892},{"style":833},[893],{"type":564,"value":894},"}\n",{"type":559,"tag":587,"props":896,"children":898},{"class":589,"line":897},11,[899],{"type":559,"tag":587,"props":900,"children":901},{"style":757},[902],{"type":564,"value":813},{"type":559,"tag":587,"props":904,"children":906},{"class":589,"line":905},12,[907,913,919,924,929,934,939,944],{"type":559,"tag":587,"props":908,"children":910},{"style":909},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[911],{"type":564,"value":912},"var",{"type":559,"tag":587,"props":914,"children":916},{"style":915},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[917],{"type":564,"value":918}," swapPairs",{"type":559,"tag":587,"props":920,"children":921},{"style":833},[922],{"type":564,"value":923}," =",{"type":559,"tag":587,"props":925,"children":926},{"style":909},[927],{"type":564,"value":928}," function",{"type":559,"tag":587,"props":930,"children":931},{"style":833},[932],{"type":564,"value":933}," (",{"type":559,"tag":587,"props":935,"children":936},{"style":861},[937],{"type":564,"value":938},"head",{"type":559,"tag":587,"props":940,"children":941},{"style":833},[942],{"type":564,"value":943},")",{"type":559,"tag":587,"props":945,"children":946},{"style":833},[947],{"type":564,"value":948}," {\n",{"type":559,"tag":587,"props":950,"children":952},{"class":589,"line":951},13,[953,958,963,967,972,977],{"type":559,"tag":587,"props":954,"children":955},{"style":909},[956],{"type":564,"value":957},"  const",{"type":559,"tag":587,"props":959,"children":960},{"style":861},[961],{"type":564,"value":962}," dummy",{"type":559,"tag":587,"props":964,"children":965},{"style":833},[966],{"type":564,"value":923},{"type":559,"tag":587,"props":968,"children":969},{"style":909},[970],{"type":564,"value":971}," new",{"type":559,"tag":587,"props":973,"children":974},{"style":915},[975],{"type":564,"value":976}," ListNode",{"type":559,"tag":587,"props":978,"children":979},{"style":833},[980],{"type":564,"value":981},"();\n",{"type":559,"tag":587,"props":983,"children":985},{"class":589,"line":984},14,[986,991,996,1001,1005,1010],{"type":559,"tag":587,"props":987,"children":988},{"style":861},[989],{"type":564,"value":990},"  dummy",{"type":559,"tag":587,"props":992,"children":993},{"style":833},[994],{"type":564,"value":995},".",{"type":559,"tag":587,"props":997,"children":998},{"style":861},[999],{"type":564,"value":1000},"next",{"type":559,"tag":587,"props":1002,"children":1003},{"style":833},[1004],{"type":564,"value":923},{"type":559,"tag":587,"props":1006,"children":1007},{"style":861},[1008],{"type":564,"value":1009}," head",{"type":559,"tag":587,"props":1011,"children":1012},{"style":833},[1013],{"type":564,"value":1014},";\n",{"type":559,"tag":587,"props":1016,"children":1018},{"class":589,"line":1017},15,[1019,1024,1029,1033,1037],{"type":559,"tag":587,"props":1020,"children":1021},{"style":909},[1022],{"type":564,"value":1023},"  let",{"type":559,"tag":587,"props":1025,"children":1026},{"style":861},[1027],{"type":564,"value":1028}," current",{"type":559,"tag":587,"props":1030,"children":1031},{"style":833},[1032],{"type":564,"value":923},{"type":559,"tag":587,"props":1034,"children":1035},{"style":861},[1036],{"type":564,"value":962},{"type":559,"tag":587,"props":1038,"children":1039},{"style":833},[1040],{"type":564,"value":1014},{"type":559,"tag":587,"props":1042,"children":1044},{"class":589,"line":1043},16,[1045,1050,1054,1059,1063,1067,1072,1076,1080,1084,1088,1092,1096],{"type":559,"tag":587,"props":1046,"children":1047},{"style":839},[1048],{"type":564,"value":1049},"  while",{"type":559,"tag":587,"props":1051,"children":1052},{"style":833},[1053],{"type":564,"value":933},{"type":559,"tag":587,"props":1055,"children":1056},{"style":861},[1057],{"type":564,"value":1058},"current",{"type":559,"tag":587,"props":1060,"children":1061},{"style":833},[1062],{"type":564,"value":995},{"type":559,"tag":587,"props":1064,"children":1065},{"style":861},[1066],{"type":564,"value":1000},{"type":559,"tag":587,"props":1068,"children":1069},{"style":909},[1070],{"type":564,"value":1071}," &&",{"type":559,"tag":587,"props":1073,"children":1074},{"style":861},[1075],{"type":564,"value":1028},{"type":559,"tag":587,"props":1077,"children":1078},{"style":833},[1079],{"type":564,"value":995},{"type":559,"tag":587,"props":1081,"children":1082},{"style":861},[1083],{"type":564,"value":1000},{"type":559,"tag":587,"props":1085,"children":1086},{"style":833},[1087],{"type":564,"value":995},{"type":559,"tag":587,"props":1089,"children":1090},{"style":861},[1091],{"type":564,"value":1000},{"type":559,"tag":587,"props":1093,"children":1094},{"style":833},[1095],{"type":564,"value":943},{"type":559,"tag":587,"props":1097,"children":1098},{"style":833},[1099],{"type":564,"value":948},{"type":559,"tag":587,"props":1101,"children":1103},{"class":589,"line":1102},17,[1104],{"type":559,"tag":587,"props":1105,"children":1106},{"style":757},[1107],{"type":564,"value":1108},"    // 初始化双指针\n",{"type":559,"tag":587,"props":1110,"children":1112},{"class":589,"line":1111},18,[1113,1118,1123,1127,1131,1135,1139],{"type":559,"tag":587,"props":1114,"children":1115},{"style":909},[1116],{"type":564,"value":1117},"    const",{"type":559,"tag":587,"props":1119,"children":1120},{"style":861},[1121],{"type":564,"value":1122}," first",{"type":559,"tag":587,"props":1124,"children":1125},{"style":833},[1126],{"type":564,"value":923},{"type":559,"tag":587,"props":1128,"children":1129},{"style":861},[1130],{"type":564,"value":1028},{"type":559,"tag":587,"props":1132,"children":1133},{"style":833},[1134],{"type":564,"value":995},{"type":559,"tag":587,"props":1136,"children":1137},{"style":861},[1138],{"type":564,"value":1000},{"type":559,"tag":587,"props":1140,"children":1141},{"style":833},[1142],{"type":564,"value":1014},{"type":559,"tag":587,"props":1144,"children":1146},{"class":589,"line":1145},19,[1147,1151,1156,1160,1164,1168,1172,1176,1180],{"type":559,"tag":587,"props":1148,"children":1149},{"style":909},[1150],{"type":564,"value":1117},{"type":559,"tag":587,"props":1152,"children":1153},{"style":861},[1154],{"type":564,"value":1155}," second",{"type":559,"tag":587,"props":1157,"children":1158},{"style":833},[1159],{"type":564,"value":923},{"type":559,"tag":587,"props":1161,"children":1162},{"style":861},[1163],{"type":564,"value":1028},{"type":559,"tag":587,"props":1165,"children":1166},{"style":833},[1167],{"type":564,"value":995},{"type":559,"tag":587,"props":1169,"children":1170},{"style":861},[1171],{"type":564,"value":1000},{"type":559,"tag":587,"props":1173,"children":1174},{"style":833},[1175],{"type":564,"value":995},{"type":559,"tag":587,"props":1177,"children":1178},{"style":861},[1179],{"type":564,"value":1000},{"type":559,"tag":587,"props":1181,"children":1182},{"style":833},[1183],{"type":564,"value":1014},{"type":559,"tag":587,"props":1185,"children":1187},{"class":589,"line":1186},20,[1188],{"type":559,"tag":587,"props":1189,"children":1191},{"emptyLinePlaceholder":1190},true,[1192],{"type":564,"value":1193},"\n",{"type":559,"tag":587,"props":1195,"children":1197},{"class":589,"line":1196},21,[1198],{"type":559,"tag":587,"props":1199,"children":1200},{"style":757},[1201],{"type":564,"value":1202},"    // 更新双指针和 current 指针\n",{"type":559,"tag":587,"props":1204,"children":1206},{"class":589,"line":1205},22,[1207,1212,1216,1220,1224,1228,1232,1236],{"type":559,"tag":587,"props":1208,"children":1209},{"style":861},[1210],{"type":564,"value":1211},"    first",{"type":559,"tag":587,"props":1213,"children":1214},{"style":833},[1215],{"type":564,"value":995},{"type":559,"tag":587,"props":1217,"children":1218},{"style":861},[1219],{"type":564,"value":1000},{"type":559,"tag":587,"props":1221,"children":1222},{"style":833},[1223],{"type":564,"value":923},{"type":559,"tag":587,"props":1225,"children":1226},{"style":861},[1227],{"type":564,"value":1155},{"type":559,"tag":587,"props":1229,"children":1230},{"style":833},[1231],{"type":564,"value":995},{"type":559,"tag":587,"props":1233,"children":1234},{"style":861},[1235],{"type":564,"value":1000},{"type":559,"tag":587,"props":1237,"children":1238},{"style":833},[1239],{"type":564,"value":1014},{"type":559,"tag":587,"props":1241,"children":1243},{"class":589,"line":1242},23,[1244,1249,1253,1257,1261,1265],{"type":559,"tag":587,"props":1245,"children":1246},{"style":861},[1247],{"type":564,"value":1248},"    second",{"type":559,"tag":587,"props":1250,"children":1251},{"style":833},[1252],{"type":564,"value":995},{"type":559,"tag":587,"props":1254,"children":1255},{"style":861},[1256],{"type":564,"value":1000},{"type":559,"tag":587,"props":1258,"children":1259},{"style":833},[1260],{"type":564,"value":923},{"type":559,"tag":587,"props":1262,"children":1263},{"style":861},[1264],{"type":564,"value":1122},{"type":559,"tag":587,"props":1266,"children":1267},{"style":833},[1268],{"type":564,"value":1014},{"type":559,"tag":587,"props":1270,"children":1272},{"class":589,"line":1271},24,[1273,1278,1282,1286,1290,1294],{"type":559,"tag":587,"props":1274,"children":1275},{"style":861},[1276],{"type":564,"value":1277},"    current",{"type":559,"tag":587,"props":1279,"children":1280},{"style":833},[1281],{"type":564,"value":995},{"type":559,"tag":587,"props":1283,"children":1284},{"style":861},[1285],{"type":564,"value":1000},{"type":559,"tag":587,"props":1287,"children":1288},{"style":833},[1289],{"type":564,"value":923},{"type":559,"tag":587,"props":1291,"children":1292},{"style":861},[1293],{"type":564,"value":1155},{"type":559,"tag":587,"props":1295,"children":1296},{"style":833},[1297],{"type":564,"value":1014},{"type":559,"tag":587,"props":1299,"children":1301},{"class":589,"line":1300},25,[1302],{"type":559,"tag":587,"props":1303,"children":1304},{"emptyLinePlaceholder":1190},[1305],{"type":564,"value":1193},{"type":559,"tag":587,"props":1307,"children":1309},{"class":589,"line":1308},26,[1310],{"type":559,"tag":587,"props":1311,"children":1312},{"style":757},[1313],{"type":564,"value":1314},"    // 指针移动\n",{"type":559,"tag":587,"props":1316,"children":1318},{"class":589,"line":1317},27,[1319,1323,1327,1331,1335,1339,1343,1347],{"type":559,"tag":587,"props":1320,"children":1321},{"style":861},[1322],{"type":564,"value":1277},{"type":559,"tag":587,"props":1324,"children":1325},{"style":833},[1326],{"type":564,"value":923},{"type":559,"tag":587,"props":1328,"children":1329},{"style":861},[1330],{"type":564,"value":1028},{"type":559,"tag":587,"props":1332,"children":1333},{"style":833},[1334],{"type":564,"value":995},{"type":559,"tag":587,"props":1336,"children":1337},{"style":861},[1338],{"type":564,"value":1000},{"type":559,"tag":587,"props":1340,"children":1341},{"style":833},[1342],{"type":564,"value":995},{"type":559,"tag":587,"props":1344,"children":1345},{"style":861},[1346],{"type":564,"value":1000},{"type":559,"tag":587,"props":1348,"children":1349},{"style":833},[1350],{"type":564,"value":1014},{"type":559,"tag":587,"props":1352,"children":1354},{"class":589,"line":1353},28,[1355],{"type":559,"tag":587,"props":1356,"children":1357},{"style":833},[1358],{"type":564,"value":1359},"  }\n",{"type":559,"tag":587,"props":1361,"children":1363},{"class":589,"line":1362},29,[1364,1369,1373,1377,1381],{"type":559,"tag":587,"props":1365,"children":1366},{"style":839},[1367],{"type":564,"value":1368},"  return",{"type":559,"tag":587,"props":1370,"children":1371},{"style":861},[1372],{"type":564,"value":962},{"type":559,"tag":587,"props":1374,"children":1375},{"style":833},[1376],{"type":564,"value":995},{"type":559,"tag":587,"props":1378,"children":1379},{"style":861},[1380],{"type":564,"value":1000},{"type":559,"tag":587,"props":1382,"children":1383},{"style":833},[1384],{"type":564,"value":1014},{"type":559,"tag":587,"props":1386,"children":1388},{"class":589,"line":1387},30,[1389],{"type":559,"tag":587,"props":1390,"children":1391},{"style":833},[1392],{"type":564,"value":1393},"};\n",{"type":559,"tag":1395,"props":1396,"children":1397},"style",{},[1398],{"type":564,"value":1399},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":789,"depth":789,"links":1401},[1402,1403],{"id":685,"depth":599,"text":685},{"id":690,"depth":599,"text":690,"children":1404},[1405],{"id":696,"depth":771,"text":696},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1412,1414],{"_path":96,"title":95,"description":1413},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":102,"title":101,"description":1415},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1715008123579]