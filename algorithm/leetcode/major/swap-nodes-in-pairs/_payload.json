[{"data":1,"prerenderedAt":1391},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":524,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1386},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":98,"description":528,"url":529,"body":530,"_type":1381,"_id":1382,"_source":1383,"_file":1384,"_extension":1385},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":531,"children":532,"toc":1375},"root",[533,540,551,581,586,609,614,637,642,657,663,668,674,679,718,1369],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543,545],{"type":539,"value":544},"示例 1：\n",{"type":534,"tag":546,"props":547,"children":550},"img",{"alt":548,"src":549},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":534,"tag":552,"props":553,"children":556},"pre",{"className":554,"code":555,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[557],{"type":534,"tag":558,"props":559,"children":560},"code",{"__ignoreMap":527},[561,572],{"type":534,"tag":562,"props":563,"children":566},"span",{"class":564,"line":565},"line",1,[567],{"type":534,"tag":562,"props":568,"children":569},{},[570],{"type":539,"value":571},"输入：head = [1,2,3,4]\n",{"type":534,"tag":562,"props":573,"children":575},{"class":564,"line":574},2,[576],{"type":534,"tag":562,"props":577,"children":578},{},[579],{"type":539,"value":580},"输出：[2,1,4,3]\n",{"type":534,"tag":535,"props":582,"children":583},{},[584],{"type":539,"value":585},"示例 2：",{"type":534,"tag":552,"props":587,"children":589},{"className":554,"code":588,"language":539,"meta":527,"style":527},"输入：head = []\n输出：[]\n",[590],{"type":534,"tag":558,"props":591,"children":592},{"__ignoreMap":527},[593,601],{"type":534,"tag":562,"props":594,"children":595},{"class":564,"line":565},[596],{"type":534,"tag":562,"props":597,"children":598},{},[599],{"type":539,"value":600},"输入：head = []\n",{"type":534,"tag":562,"props":602,"children":603},{"class":564,"line":574},[604],{"type":534,"tag":562,"props":605,"children":606},{},[607],{"type":539,"value":608},"输出：[]\n",{"type":534,"tag":535,"props":610,"children":611},{},[612],{"type":539,"value":613},"示例 3：",{"type":534,"tag":552,"props":615,"children":617},{"className":554,"code":616,"language":539,"meta":527,"style":527},"输入：head = [1]\n输出：[1]\n",[618],{"type":534,"tag":558,"props":619,"children":620},{"__ignoreMap":527},[621,629],{"type":534,"tag":562,"props":622,"children":623},{"class":564,"line":565},[624],{"type":534,"tag":562,"props":625,"children":626},{},[627],{"type":539,"value":628},"输入：head = [1]\n",{"type":534,"tag":562,"props":630,"children":631},{"class":564,"line":574},[632],{"type":534,"tag":562,"props":633,"children":634},{},[635],{"type":539,"value":636},"输出：[1]\n",{"type":534,"tag":535,"props":638,"children":639},{},[640],{"type":539,"value":641},"提示：",{"type":534,"tag":643,"props":644,"children":645},"ul",{},[646,652],{"type":534,"tag":647,"props":648,"children":649},"li",{},[650],{"type":539,"value":651},"链表中节点的数目在范围 [0, 100] 内",{"type":534,"tag":647,"props":653,"children":654},{},[655],{"type":539,"value":656},"0 \u003C= Node.val \u003C= 100",{"type":534,"tag":658,"props":659,"children":661},"h2",{"id":660},"解题思路",[662],{"type":539,"value":660},{"type":534,"tag":658,"props":664,"children":666},{"id":665},"实现",[667],{"type":539,"value":665},{"type":534,"tag":669,"props":670,"children":672},"h3",{"id":671},"双指针",[673],{"type":539,"value":671},{"type":534,"tag":535,"props":675,"children":676},{},[677],{"type":539,"value":678},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":534,"tag":680,"props":681,"children":682},"ol",{},[683,688,693,698,703,708,713],{"type":534,"tag":647,"props":684,"children":685},{},[686],{"type":539,"value":687},"初始化 first 为第一个节点",{"type":534,"tag":647,"props":689,"children":690},{},[691],{"type":539,"value":692},"初始化 second 为第二个节点",{"type":534,"tag":647,"props":694,"children":695},{},[696],{"type":539,"value":697},"初始化 current 为 dummy",{"type":534,"tag":647,"props":699,"children":700},{},[701],{"type":539,"value":702},"first.next = second.next",{"type":534,"tag":647,"props":704,"children":705},{},[706],{"type":539,"value":707},"current.next = second",{"type":534,"tag":647,"props":709,"children":710},{},[711],{"type":539,"value":712},"current 移动 2 格",{"type":534,"tag":647,"props":714,"children":715},{},[716],{"type":539,"value":717},"重复执行",{"type":534,"tag":552,"props":719,"children":723},{"className":720,"code":721,"language":722,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[724],{"type":534,"tag":558,"props":725,"children":726},{"__ignoreMap":527},[727,736,744,753,762,771,780,789,797,840,870,878,924,957,990,1016,1075,1084,1118,1159,1169,1178,1215,1244,1273,1281,1290,1326,1335,1360],{"type":534,"tag":562,"props":728,"children":729},{"class":564,"line":565},[730],{"type":534,"tag":562,"props":731,"children":733},{"style":732},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[734],{"type":539,"value":735},"/**\n",{"type":534,"tag":562,"props":737,"children":738},{"class":564,"line":574},[739],{"type":534,"tag":562,"props":740,"children":741},{"style":732},[742],{"type":539,"value":743}," * Definition for singly-linked list.\n",{"type":534,"tag":562,"props":745,"children":747},{"class":564,"line":746},3,[748],{"type":534,"tag":562,"props":749,"children":750},{"style":732},[751],{"type":539,"value":752}," * function ListNode(val, next) {\n",{"type":534,"tag":562,"props":754,"children":756},{"class":564,"line":755},4,[757],{"type":534,"tag":562,"props":758,"children":759},{"style":732},[760],{"type":539,"value":761}," *     this.val = (val===undefined ? 0 : val)\n",{"type":534,"tag":562,"props":763,"children":765},{"class":564,"line":764},5,[766],{"type":534,"tag":562,"props":767,"children":768},{"style":732},[769],{"type":539,"value":770}," *     this.next = (next===undefined ? null : next)\n",{"type":534,"tag":562,"props":772,"children":774},{"class":564,"line":773},6,[775],{"type":534,"tag":562,"props":776,"children":777},{"style":732},[778],{"type":539,"value":779}," * }\n",{"type":534,"tag":562,"props":781,"children":783},{"class":564,"line":782},7,[784],{"type":534,"tag":562,"props":785,"children":786},{"style":732},[787],{"type":539,"value":788}," */\n",{"type":534,"tag":562,"props":790,"children":792},{"class":564,"line":791},8,[793],{"type":534,"tag":562,"props":794,"children":795},{"style":732},[796],{"type":539,"value":735},{"type":534,"tag":562,"props":798,"children":800},{"class":564,"line":799},9,[801,806,812,818,823,829,834],{"type":534,"tag":562,"props":802,"children":803},{"style":732},[804],{"type":539,"value":805}," * ",{"type":534,"tag":562,"props":807,"children":809},{"style":808},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[810],{"type":539,"value":811},"@",{"type":534,"tag":562,"props":813,"children":815},{"style":814},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[816],{"type":539,"value":817},"param",{"type":534,"tag":562,"props":819,"children":820},{"style":808},[821],{"type":539,"value":822}," {",{"type":534,"tag":562,"props":824,"children":826},{"style":825},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[827],{"type":539,"value":828},"ListNode",{"type":534,"tag":562,"props":830,"children":831},{"style":808},[832],{"type":539,"value":833},"}",{"type":534,"tag":562,"props":835,"children":837},{"style":836},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[838],{"type":539,"value":839}," head\n",{"type":534,"tag":562,"props":841,"children":843},{"class":564,"line":842},10,[844,848,852,857,861,865],{"type":534,"tag":562,"props":845,"children":846},{"style":732},[847],{"type":539,"value":805},{"type":534,"tag":562,"props":849,"children":850},{"style":808},[851],{"type":539,"value":811},{"type":534,"tag":562,"props":853,"children":854},{"style":814},[855],{"type":539,"value":856},"return",{"type":534,"tag":562,"props":858,"children":859},{"style":808},[860],{"type":539,"value":822},{"type":534,"tag":562,"props":862,"children":863},{"style":825},[864],{"type":539,"value":828},{"type":534,"tag":562,"props":866,"children":867},{"style":808},[868],{"type":539,"value":869},"}\n",{"type":534,"tag":562,"props":871,"children":873},{"class":564,"line":872},11,[874],{"type":534,"tag":562,"props":875,"children":876},{"style":732},[877],{"type":539,"value":788},{"type":534,"tag":562,"props":879,"children":881},{"class":564,"line":880},12,[882,888,894,899,904,909,914,919],{"type":534,"tag":562,"props":883,"children":885},{"style":884},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[886],{"type":539,"value":887},"var",{"type":534,"tag":562,"props":889,"children":891},{"style":890},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[892],{"type":539,"value":893}," swapPairs",{"type":534,"tag":562,"props":895,"children":896},{"style":808},[897],{"type":539,"value":898}," =",{"type":534,"tag":562,"props":900,"children":901},{"style":884},[902],{"type":539,"value":903}," function",{"type":534,"tag":562,"props":905,"children":906},{"style":808},[907],{"type":539,"value":908}," (",{"type":534,"tag":562,"props":910,"children":911},{"style":836},[912],{"type":539,"value":913},"head",{"type":534,"tag":562,"props":915,"children":916},{"style":808},[917],{"type":539,"value":918},")",{"type":534,"tag":562,"props":920,"children":921},{"style":808},[922],{"type":539,"value":923}," {\n",{"type":534,"tag":562,"props":925,"children":927},{"class":564,"line":926},13,[928,933,938,942,947,952],{"type":534,"tag":562,"props":929,"children":930},{"style":884},[931],{"type":539,"value":932},"  const",{"type":534,"tag":562,"props":934,"children":935},{"style":836},[936],{"type":539,"value":937}," dummy",{"type":534,"tag":562,"props":939,"children":940},{"style":808},[941],{"type":539,"value":898},{"type":534,"tag":562,"props":943,"children":944},{"style":884},[945],{"type":539,"value":946}," new",{"type":534,"tag":562,"props":948,"children":949},{"style":890},[950],{"type":539,"value":951}," ListNode",{"type":534,"tag":562,"props":953,"children":954},{"style":808},[955],{"type":539,"value":956},"();\n",{"type":534,"tag":562,"props":958,"children":960},{"class":564,"line":959},14,[961,966,971,976,980,985],{"type":534,"tag":562,"props":962,"children":963},{"style":836},[964],{"type":539,"value":965},"  dummy",{"type":534,"tag":562,"props":967,"children":968},{"style":808},[969],{"type":539,"value":970},".",{"type":534,"tag":562,"props":972,"children":973},{"style":836},[974],{"type":539,"value":975},"next",{"type":534,"tag":562,"props":977,"children":978},{"style":808},[979],{"type":539,"value":898},{"type":534,"tag":562,"props":981,"children":982},{"style":836},[983],{"type":539,"value":984}," head",{"type":534,"tag":562,"props":986,"children":987},{"style":808},[988],{"type":539,"value":989},";\n",{"type":534,"tag":562,"props":991,"children":993},{"class":564,"line":992},15,[994,999,1004,1008,1012],{"type":534,"tag":562,"props":995,"children":996},{"style":884},[997],{"type":539,"value":998},"  let",{"type":534,"tag":562,"props":1000,"children":1001},{"style":836},[1002],{"type":539,"value":1003}," current",{"type":534,"tag":562,"props":1005,"children":1006},{"style":808},[1007],{"type":539,"value":898},{"type":534,"tag":562,"props":1009,"children":1010},{"style":836},[1011],{"type":539,"value":937},{"type":534,"tag":562,"props":1013,"children":1014},{"style":808},[1015],{"type":539,"value":989},{"type":534,"tag":562,"props":1017,"children":1019},{"class":564,"line":1018},16,[1020,1025,1029,1034,1038,1042,1047,1051,1055,1059,1063,1067,1071],{"type":534,"tag":562,"props":1021,"children":1022},{"style":814},[1023],{"type":539,"value":1024},"  while",{"type":534,"tag":562,"props":1026,"children":1027},{"style":808},[1028],{"type":539,"value":908},{"type":534,"tag":562,"props":1030,"children":1031},{"style":836},[1032],{"type":539,"value":1033},"current",{"type":534,"tag":562,"props":1035,"children":1036},{"style":808},[1037],{"type":539,"value":970},{"type":534,"tag":562,"props":1039,"children":1040},{"style":836},[1041],{"type":539,"value":975},{"type":534,"tag":562,"props":1043,"children":1044},{"style":884},[1045],{"type":539,"value":1046}," &&",{"type":534,"tag":562,"props":1048,"children":1049},{"style":836},[1050],{"type":539,"value":1003},{"type":534,"tag":562,"props":1052,"children":1053},{"style":808},[1054],{"type":539,"value":970},{"type":534,"tag":562,"props":1056,"children":1057},{"style":836},[1058],{"type":539,"value":975},{"type":534,"tag":562,"props":1060,"children":1061},{"style":808},[1062],{"type":539,"value":970},{"type":534,"tag":562,"props":1064,"children":1065},{"style":836},[1066],{"type":539,"value":975},{"type":534,"tag":562,"props":1068,"children":1069},{"style":808},[1070],{"type":539,"value":918},{"type":534,"tag":562,"props":1072,"children":1073},{"style":808},[1074],{"type":539,"value":923},{"type":534,"tag":562,"props":1076,"children":1078},{"class":564,"line":1077},17,[1079],{"type":534,"tag":562,"props":1080,"children":1081},{"style":732},[1082],{"type":539,"value":1083},"    // 初始化双指针\n",{"type":534,"tag":562,"props":1085,"children":1087},{"class":564,"line":1086},18,[1088,1093,1098,1102,1106,1110,1114],{"type":534,"tag":562,"props":1089,"children":1090},{"style":884},[1091],{"type":539,"value":1092},"    const",{"type":534,"tag":562,"props":1094,"children":1095},{"style":836},[1096],{"type":539,"value":1097}," first",{"type":534,"tag":562,"props":1099,"children":1100},{"style":808},[1101],{"type":539,"value":898},{"type":534,"tag":562,"props":1103,"children":1104},{"style":836},[1105],{"type":539,"value":1003},{"type":534,"tag":562,"props":1107,"children":1108},{"style":808},[1109],{"type":539,"value":970},{"type":534,"tag":562,"props":1111,"children":1112},{"style":836},[1113],{"type":539,"value":975},{"type":534,"tag":562,"props":1115,"children":1116},{"style":808},[1117],{"type":539,"value":989},{"type":534,"tag":562,"props":1119,"children":1121},{"class":564,"line":1120},19,[1122,1126,1131,1135,1139,1143,1147,1151,1155],{"type":534,"tag":562,"props":1123,"children":1124},{"style":884},[1125],{"type":539,"value":1092},{"type":534,"tag":562,"props":1127,"children":1128},{"style":836},[1129],{"type":539,"value":1130}," second",{"type":534,"tag":562,"props":1132,"children":1133},{"style":808},[1134],{"type":539,"value":898},{"type":534,"tag":562,"props":1136,"children":1137},{"style":836},[1138],{"type":539,"value":1003},{"type":534,"tag":562,"props":1140,"children":1141},{"style":808},[1142],{"type":539,"value":970},{"type":534,"tag":562,"props":1144,"children":1145},{"style":836},[1146],{"type":539,"value":975},{"type":534,"tag":562,"props":1148,"children":1149},{"style":808},[1150],{"type":539,"value":970},{"type":534,"tag":562,"props":1152,"children":1153},{"style":836},[1154],{"type":539,"value":975},{"type":534,"tag":562,"props":1156,"children":1157},{"style":808},[1158],{"type":539,"value":989},{"type":534,"tag":562,"props":1160,"children":1162},{"class":564,"line":1161},20,[1163],{"type":534,"tag":562,"props":1164,"children":1166},{"emptyLinePlaceholder":1165},true,[1167],{"type":539,"value":1168},"\n",{"type":534,"tag":562,"props":1170,"children":1172},{"class":564,"line":1171},21,[1173],{"type":534,"tag":562,"props":1174,"children":1175},{"style":732},[1176],{"type":539,"value":1177},"    // 更新双指针和 current 指针\n",{"type":534,"tag":562,"props":1179,"children":1181},{"class":564,"line":1180},22,[1182,1187,1191,1195,1199,1203,1207,1211],{"type":534,"tag":562,"props":1183,"children":1184},{"style":836},[1185],{"type":539,"value":1186},"    first",{"type":534,"tag":562,"props":1188,"children":1189},{"style":808},[1190],{"type":539,"value":970},{"type":534,"tag":562,"props":1192,"children":1193},{"style":836},[1194],{"type":539,"value":975},{"type":534,"tag":562,"props":1196,"children":1197},{"style":808},[1198],{"type":539,"value":898},{"type":534,"tag":562,"props":1200,"children":1201},{"style":836},[1202],{"type":539,"value":1130},{"type":534,"tag":562,"props":1204,"children":1205},{"style":808},[1206],{"type":539,"value":970},{"type":534,"tag":562,"props":1208,"children":1209},{"style":836},[1210],{"type":539,"value":975},{"type":534,"tag":562,"props":1212,"children":1213},{"style":808},[1214],{"type":539,"value":989},{"type":534,"tag":562,"props":1216,"children":1218},{"class":564,"line":1217},23,[1219,1224,1228,1232,1236,1240],{"type":534,"tag":562,"props":1220,"children":1221},{"style":836},[1222],{"type":539,"value":1223},"    second",{"type":534,"tag":562,"props":1225,"children":1226},{"style":808},[1227],{"type":539,"value":970},{"type":534,"tag":562,"props":1229,"children":1230},{"style":836},[1231],{"type":539,"value":975},{"type":534,"tag":562,"props":1233,"children":1234},{"style":808},[1235],{"type":539,"value":898},{"type":534,"tag":562,"props":1237,"children":1238},{"style":836},[1239],{"type":539,"value":1097},{"type":534,"tag":562,"props":1241,"children":1242},{"style":808},[1243],{"type":539,"value":989},{"type":534,"tag":562,"props":1245,"children":1247},{"class":564,"line":1246},24,[1248,1253,1257,1261,1265,1269],{"type":534,"tag":562,"props":1249,"children":1250},{"style":836},[1251],{"type":539,"value":1252},"    current",{"type":534,"tag":562,"props":1254,"children":1255},{"style":808},[1256],{"type":539,"value":970},{"type":534,"tag":562,"props":1258,"children":1259},{"style":836},[1260],{"type":539,"value":975},{"type":534,"tag":562,"props":1262,"children":1263},{"style":808},[1264],{"type":539,"value":898},{"type":534,"tag":562,"props":1266,"children":1267},{"style":836},[1268],{"type":539,"value":1130},{"type":534,"tag":562,"props":1270,"children":1271},{"style":808},[1272],{"type":539,"value":989},{"type":534,"tag":562,"props":1274,"children":1276},{"class":564,"line":1275},25,[1277],{"type":534,"tag":562,"props":1278,"children":1279},{"emptyLinePlaceholder":1165},[1280],{"type":539,"value":1168},{"type":534,"tag":562,"props":1282,"children":1284},{"class":564,"line":1283},26,[1285],{"type":534,"tag":562,"props":1286,"children":1287},{"style":732},[1288],{"type":539,"value":1289},"    // 指针移动\n",{"type":534,"tag":562,"props":1291,"children":1293},{"class":564,"line":1292},27,[1294,1298,1302,1306,1310,1314,1318,1322],{"type":534,"tag":562,"props":1295,"children":1296},{"style":836},[1297],{"type":539,"value":1252},{"type":534,"tag":562,"props":1299,"children":1300},{"style":808},[1301],{"type":539,"value":898},{"type":534,"tag":562,"props":1303,"children":1304},{"style":836},[1305],{"type":539,"value":1003},{"type":534,"tag":562,"props":1307,"children":1308},{"style":808},[1309],{"type":539,"value":970},{"type":534,"tag":562,"props":1311,"children":1312},{"style":836},[1313],{"type":539,"value":975},{"type":534,"tag":562,"props":1315,"children":1316},{"style":808},[1317],{"type":539,"value":970},{"type":534,"tag":562,"props":1319,"children":1320},{"style":836},[1321],{"type":539,"value":975},{"type":534,"tag":562,"props":1323,"children":1324},{"style":808},[1325],{"type":539,"value":989},{"type":534,"tag":562,"props":1327,"children":1329},{"class":564,"line":1328},28,[1330],{"type":534,"tag":562,"props":1331,"children":1332},{"style":808},[1333],{"type":539,"value":1334},"  }\n",{"type":534,"tag":562,"props":1336,"children":1338},{"class":564,"line":1337},29,[1339,1344,1348,1352,1356],{"type":534,"tag":562,"props":1340,"children":1341},{"style":814},[1342],{"type":539,"value":1343},"  return",{"type":534,"tag":562,"props":1345,"children":1346},{"style":836},[1347],{"type":539,"value":937},{"type":534,"tag":562,"props":1349,"children":1350},{"style":808},[1351],{"type":539,"value":970},{"type":534,"tag":562,"props":1353,"children":1354},{"style":836},[1355],{"type":539,"value":975},{"type":534,"tag":562,"props":1357,"children":1358},{"style":808},[1359],{"type":539,"value":989},{"type":534,"tag":562,"props":1361,"children":1363},{"class":564,"line":1362},30,[1364],{"type":534,"tag":562,"props":1365,"children":1366},{"style":808},[1367],{"type":539,"value":1368},"};\n",{"type":534,"tag":1370,"props":1371,"children":1372},"style",{},[1373],{"type":539,"value":1374},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":764,"depth":764,"links":1376},[1377,1378],{"id":660,"depth":574,"text":660},{"id":665,"depth":574,"text":665,"children":1379},[1380],{"id":671,"depth":746,"text":671},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1387,1389],{"_path":96,"title":95,"description":1388},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":102,"title":101,"description":1390},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1714096141833]