[{"data":1,"prerenderedAt":1345},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":478,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1340},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":98,"description":482,"url":483,"body":484,"_type":1335,"_id":1336,"_source":1337,"_file":1338,"_extension":1339},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":485,"children":486,"toc":1329},"root",[487,494,505,535,540,563,568,591,596,611,617,622,628,633,672,1323],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497,499],{"type":493,"value":498},"示例 1：\n",{"type":488,"tag":500,"props":501,"children":504},"img",{"alt":502,"src":503},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":488,"tag":506,"props":507,"children":510},"pre",{"className":508,"code":509,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[511],{"type":488,"tag":512,"props":513,"children":514},"code",{"__ignoreMap":481},[515,526],{"type":488,"tag":516,"props":517,"children":520},"span",{"class":518,"line":519},"line",1,[521],{"type":488,"tag":516,"props":522,"children":523},{},[524],{"type":493,"value":525},"输入：head = [1,2,3,4]\n",{"type":488,"tag":516,"props":527,"children":529},{"class":518,"line":528},2,[530],{"type":488,"tag":516,"props":531,"children":532},{},[533],{"type":493,"value":534},"输出：[2,1,4,3]\n",{"type":488,"tag":489,"props":536,"children":537},{},[538],{"type":493,"value":539},"示例 2：",{"type":488,"tag":506,"props":541,"children":543},{"className":508,"code":542,"language":493,"meta":481,"style":481},"输入：head = []\n输出：[]\n",[544],{"type":488,"tag":512,"props":545,"children":546},{"__ignoreMap":481},[547,555],{"type":488,"tag":516,"props":548,"children":549},{"class":518,"line":519},[550],{"type":488,"tag":516,"props":551,"children":552},{},[553],{"type":493,"value":554},"输入：head = []\n",{"type":488,"tag":516,"props":556,"children":557},{"class":518,"line":528},[558],{"type":488,"tag":516,"props":559,"children":560},{},[561],{"type":493,"value":562},"输出：[]\n",{"type":488,"tag":489,"props":564,"children":565},{},[566],{"type":493,"value":567},"示例 3：",{"type":488,"tag":506,"props":569,"children":571},{"className":508,"code":570,"language":493,"meta":481,"style":481},"输入：head = [1]\n输出：[1]\n",[572],{"type":488,"tag":512,"props":573,"children":574},{"__ignoreMap":481},[575,583],{"type":488,"tag":516,"props":576,"children":577},{"class":518,"line":519},[578],{"type":488,"tag":516,"props":579,"children":580},{},[581],{"type":493,"value":582},"输入：head = [1]\n",{"type":488,"tag":516,"props":584,"children":585},{"class":518,"line":528},[586],{"type":488,"tag":516,"props":587,"children":588},{},[589],{"type":493,"value":590},"输出：[1]\n",{"type":488,"tag":489,"props":592,"children":593},{},[594],{"type":493,"value":595},"提示：",{"type":488,"tag":597,"props":598,"children":599},"ul",{},[600,606],{"type":488,"tag":601,"props":602,"children":603},"li",{},[604],{"type":493,"value":605},"链表中节点的数目在范围 [0, 100] 内",{"type":488,"tag":601,"props":607,"children":608},{},[609],{"type":493,"value":610},"0 \u003C= Node.val \u003C= 100",{"type":488,"tag":612,"props":613,"children":615},"h2",{"id":614},"解题思路",[616],{"type":493,"value":614},{"type":488,"tag":612,"props":618,"children":620},{"id":619},"实现",[621],{"type":493,"value":619},{"type":488,"tag":623,"props":624,"children":626},"h3",{"id":625},"双指针",[627],{"type":493,"value":625},{"type":488,"tag":489,"props":629,"children":630},{},[631],{"type":493,"value":632},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":488,"tag":634,"props":635,"children":636},"ol",{},[637,642,647,652,657,662,667],{"type":488,"tag":601,"props":638,"children":639},{},[640],{"type":493,"value":641},"初始化 first 为第一个节点",{"type":488,"tag":601,"props":643,"children":644},{},[645],{"type":493,"value":646},"初始化 second 为第二个节点",{"type":488,"tag":601,"props":648,"children":649},{},[650],{"type":493,"value":651},"初始化 current 为 dummy",{"type":488,"tag":601,"props":653,"children":654},{},[655],{"type":493,"value":656},"first.next = second.next",{"type":488,"tag":601,"props":658,"children":659},{},[660],{"type":493,"value":661},"current.next = second",{"type":488,"tag":601,"props":663,"children":664},{},[665],{"type":493,"value":666},"current 移动 2 格",{"type":488,"tag":601,"props":668,"children":669},{},[670],{"type":493,"value":671},"重复执行",{"type":488,"tag":506,"props":673,"children":677},{"className":674,"code":675,"language":676,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[678],{"type":488,"tag":512,"props":679,"children":680},{"__ignoreMap":481},[681,690,698,707,716,725,734,743,751,794,824,832,878,911,944,970,1029,1038,1072,1113,1123,1132,1169,1198,1227,1235,1244,1280,1289,1314],{"type":488,"tag":516,"props":682,"children":683},{"class":518,"line":519},[684],{"type":488,"tag":516,"props":685,"children":687},{"style":686},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[688],{"type":493,"value":689},"/**\n",{"type":488,"tag":516,"props":691,"children":692},{"class":518,"line":528},[693],{"type":488,"tag":516,"props":694,"children":695},{"style":686},[696],{"type":493,"value":697}," * Definition for singly-linked list.\n",{"type":488,"tag":516,"props":699,"children":701},{"class":518,"line":700},3,[702],{"type":488,"tag":516,"props":703,"children":704},{"style":686},[705],{"type":493,"value":706}," * function ListNode(val, next) {\n",{"type":488,"tag":516,"props":708,"children":710},{"class":518,"line":709},4,[711],{"type":488,"tag":516,"props":712,"children":713},{"style":686},[714],{"type":493,"value":715}," *     this.val = (val===undefined ? 0 : val)\n",{"type":488,"tag":516,"props":717,"children":719},{"class":518,"line":718},5,[720],{"type":488,"tag":516,"props":721,"children":722},{"style":686},[723],{"type":493,"value":724}," *     this.next = (next===undefined ? null : next)\n",{"type":488,"tag":516,"props":726,"children":728},{"class":518,"line":727},6,[729],{"type":488,"tag":516,"props":730,"children":731},{"style":686},[732],{"type":493,"value":733}," * }\n",{"type":488,"tag":516,"props":735,"children":737},{"class":518,"line":736},7,[738],{"type":488,"tag":516,"props":739,"children":740},{"style":686},[741],{"type":493,"value":742}," */\n",{"type":488,"tag":516,"props":744,"children":746},{"class":518,"line":745},8,[747],{"type":488,"tag":516,"props":748,"children":749},{"style":686},[750],{"type":493,"value":689},{"type":488,"tag":516,"props":752,"children":754},{"class":518,"line":753},9,[755,760,766,772,777,783,788],{"type":488,"tag":516,"props":756,"children":757},{"style":686},[758],{"type":493,"value":759}," * ",{"type":488,"tag":516,"props":761,"children":763},{"style":762},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[764],{"type":493,"value":765},"@",{"type":488,"tag":516,"props":767,"children":769},{"style":768},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[770],{"type":493,"value":771},"param",{"type":488,"tag":516,"props":773,"children":774},{"style":762},[775],{"type":493,"value":776}," {",{"type":488,"tag":516,"props":778,"children":780},{"style":779},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[781],{"type":493,"value":782},"ListNode",{"type":488,"tag":516,"props":784,"children":785},{"style":762},[786],{"type":493,"value":787},"}",{"type":488,"tag":516,"props":789,"children":791},{"style":790},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[792],{"type":493,"value":793}," head\n",{"type":488,"tag":516,"props":795,"children":797},{"class":518,"line":796},10,[798,802,806,811,815,819],{"type":488,"tag":516,"props":799,"children":800},{"style":686},[801],{"type":493,"value":759},{"type":488,"tag":516,"props":803,"children":804},{"style":762},[805],{"type":493,"value":765},{"type":488,"tag":516,"props":807,"children":808},{"style":768},[809],{"type":493,"value":810},"return",{"type":488,"tag":516,"props":812,"children":813},{"style":762},[814],{"type":493,"value":776},{"type":488,"tag":516,"props":816,"children":817},{"style":779},[818],{"type":493,"value":782},{"type":488,"tag":516,"props":820,"children":821},{"style":762},[822],{"type":493,"value":823},"}\n",{"type":488,"tag":516,"props":825,"children":827},{"class":518,"line":826},11,[828],{"type":488,"tag":516,"props":829,"children":830},{"style":686},[831],{"type":493,"value":742},{"type":488,"tag":516,"props":833,"children":835},{"class":518,"line":834},12,[836,842,848,853,858,863,868,873],{"type":488,"tag":516,"props":837,"children":839},{"style":838},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[840],{"type":493,"value":841},"var",{"type":488,"tag":516,"props":843,"children":845},{"style":844},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[846],{"type":493,"value":847}," swapPairs",{"type":488,"tag":516,"props":849,"children":850},{"style":762},[851],{"type":493,"value":852}," =",{"type":488,"tag":516,"props":854,"children":855},{"style":838},[856],{"type":493,"value":857}," function",{"type":488,"tag":516,"props":859,"children":860},{"style":762},[861],{"type":493,"value":862}," (",{"type":488,"tag":516,"props":864,"children":865},{"style":790},[866],{"type":493,"value":867},"head",{"type":488,"tag":516,"props":869,"children":870},{"style":762},[871],{"type":493,"value":872},")",{"type":488,"tag":516,"props":874,"children":875},{"style":762},[876],{"type":493,"value":877}," {\n",{"type":488,"tag":516,"props":879,"children":881},{"class":518,"line":880},13,[882,887,892,896,901,906],{"type":488,"tag":516,"props":883,"children":884},{"style":838},[885],{"type":493,"value":886},"  const",{"type":488,"tag":516,"props":888,"children":889},{"style":790},[890],{"type":493,"value":891}," dummy",{"type":488,"tag":516,"props":893,"children":894},{"style":762},[895],{"type":493,"value":852},{"type":488,"tag":516,"props":897,"children":898},{"style":838},[899],{"type":493,"value":900}," new",{"type":488,"tag":516,"props":902,"children":903},{"style":844},[904],{"type":493,"value":905}," ListNode",{"type":488,"tag":516,"props":907,"children":908},{"style":762},[909],{"type":493,"value":910},"();\n",{"type":488,"tag":516,"props":912,"children":914},{"class":518,"line":913},14,[915,920,925,930,934,939],{"type":488,"tag":516,"props":916,"children":917},{"style":790},[918],{"type":493,"value":919},"  dummy",{"type":488,"tag":516,"props":921,"children":922},{"style":762},[923],{"type":493,"value":924},".",{"type":488,"tag":516,"props":926,"children":927},{"style":790},[928],{"type":493,"value":929},"next",{"type":488,"tag":516,"props":931,"children":932},{"style":762},[933],{"type":493,"value":852},{"type":488,"tag":516,"props":935,"children":936},{"style":790},[937],{"type":493,"value":938}," head",{"type":488,"tag":516,"props":940,"children":941},{"style":762},[942],{"type":493,"value":943},";\n",{"type":488,"tag":516,"props":945,"children":947},{"class":518,"line":946},15,[948,953,958,962,966],{"type":488,"tag":516,"props":949,"children":950},{"style":838},[951],{"type":493,"value":952},"  let",{"type":488,"tag":516,"props":954,"children":955},{"style":790},[956],{"type":493,"value":957}," current",{"type":488,"tag":516,"props":959,"children":960},{"style":762},[961],{"type":493,"value":852},{"type":488,"tag":516,"props":963,"children":964},{"style":790},[965],{"type":493,"value":891},{"type":488,"tag":516,"props":967,"children":968},{"style":762},[969],{"type":493,"value":943},{"type":488,"tag":516,"props":971,"children":973},{"class":518,"line":972},16,[974,979,983,988,992,996,1001,1005,1009,1013,1017,1021,1025],{"type":488,"tag":516,"props":975,"children":976},{"style":768},[977],{"type":493,"value":978},"  while",{"type":488,"tag":516,"props":980,"children":981},{"style":762},[982],{"type":493,"value":862},{"type":488,"tag":516,"props":984,"children":985},{"style":790},[986],{"type":493,"value":987},"current",{"type":488,"tag":516,"props":989,"children":990},{"style":762},[991],{"type":493,"value":924},{"type":488,"tag":516,"props":993,"children":994},{"style":790},[995],{"type":493,"value":929},{"type":488,"tag":516,"props":997,"children":998},{"style":838},[999],{"type":493,"value":1000}," &&",{"type":488,"tag":516,"props":1002,"children":1003},{"style":790},[1004],{"type":493,"value":957},{"type":488,"tag":516,"props":1006,"children":1007},{"style":762},[1008],{"type":493,"value":924},{"type":488,"tag":516,"props":1010,"children":1011},{"style":790},[1012],{"type":493,"value":929},{"type":488,"tag":516,"props":1014,"children":1015},{"style":762},[1016],{"type":493,"value":924},{"type":488,"tag":516,"props":1018,"children":1019},{"style":790},[1020],{"type":493,"value":929},{"type":488,"tag":516,"props":1022,"children":1023},{"style":762},[1024],{"type":493,"value":872},{"type":488,"tag":516,"props":1026,"children":1027},{"style":762},[1028],{"type":493,"value":877},{"type":488,"tag":516,"props":1030,"children":1032},{"class":518,"line":1031},17,[1033],{"type":488,"tag":516,"props":1034,"children":1035},{"style":686},[1036],{"type":493,"value":1037},"    // 初始化双指针\n",{"type":488,"tag":516,"props":1039,"children":1041},{"class":518,"line":1040},18,[1042,1047,1052,1056,1060,1064,1068],{"type":488,"tag":516,"props":1043,"children":1044},{"style":838},[1045],{"type":493,"value":1046},"    const",{"type":488,"tag":516,"props":1048,"children":1049},{"style":790},[1050],{"type":493,"value":1051}," first",{"type":488,"tag":516,"props":1053,"children":1054},{"style":762},[1055],{"type":493,"value":852},{"type":488,"tag":516,"props":1057,"children":1058},{"style":790},[1059],{"type":493,"value":957},{"type":488,"tag":516,"props":1061,"children":1062},{"style":762},[1063],{"type":493,"value":924},{"type":488,"tag":516,"props":1065,"children":1066},{"style":790},[1067],{"type":493,"value":929},{"type":488,"tag":516,"props":1069,"children":1070},{"style":762},[1071],{"type":493,"value":943},{"type":488,"tag":516,"props":1073,"children":1075},{"class":518,"line":1074},19,[1076,1080,1085,1089,1093,1097,1101,1105,1109],{"type":488,"tag":516,"props":1077,"children":1078},{"style":838},[1079],{"type":493,"value":1046},{"type":488,"tag":516,"props":1081,"children":1082},{"style":790},[1083],{"type":493,"value":1084}," second",{"type":488,"tag":516,"props":1086,"children":1087},{"style":762},[1088],{"type":493,"value":852},{"type":488,"tag":516,"props":1090,"children":1091},{"style":790},[1092],{"type":493,"value":957},{"type":488,"tag":516,"props":1094,"children":1095},{"style":762},[1096],{"type":493,"value":924},{"type":488,"tag":516,"props":1098,"children":1099},{"style":790},[1100],{"type":493,"value":929},{"type":488,"tag":516,"props":1102,"children":1103},{"style":762},[1104],{"type":493,"value":924},{"type":488,"tag":516,"props":1106,"children":1107},{"style":790},[1108],{"type":493,"value":929},{"type":488,"tag":516,"props":1110,"children":1111},{"style":762},[1112],{"type":493,"value":943},{"type":488,"tag":516,"props":1114,"children":1116},{"class":518,"line":1115},20,[1117],{"type":488,"tag":516,"props":1118,"children":1120},{"emptyLinePlaceholder":1119},true,[1121],{"type":493,"value":1122},"\n",{"type":488,"tag":516,"props":1124,"children":1126},{"class":518,"line":1125},21,[1127],{"type":488,"tag":516,"props":1128,"children":1129},{"style":686},[1130],{"type":493,"value":1131},"    // 更新双指针和 current 指针\n",{"type":488,"tag":516,"props":1133,"children":1135},{"class":518,"line":1134},22,[1136,1141,1145,1149,1153,1157,1161,1165],{"type":488,"tag":516,"props":1137,"children":1138},{"style":790},[1139],{"type":493,"value":1140},"    first",{"type":488,"tag":516,"props":1142,"children":1143},{"style":762},[1144],{"type":493,"value":924},{"type":488,"tag":516,"props":1146,"children":1147},{"style":790},[1148],{"type":493,"value":929},{"type":488,"tag":516,"props":1150,"children":1151},{"style":762},[1152],{"type":493,"value":852},{"type":488,"tag":516,"props":1154,"children":1155},{"style":790},[1156],{"type":493,"value":1084},{"type":488,"tag":516,"props":1158,"children":1159},{"style":762},[1160],{"type":493,"value":924},{"type":488,"tag":516,"props":1162,"children":1163},{"style":790},[1164],{"type":493,"value":929},{"type":488,"tag":516,"props":1166,"children":1167},{"style":762},[1168],{"type":493,"value":943},{"type":488,"tag":516,"props":1170,"children":1172},{"class":518,"line":1171},23,[1173,1178,1182,1186,1190,1194],{"type":488,"tag":516,"props":1174,"children":1175},{"style":790},[1176],{"type":493,"value":1177},"    second",{"type":488,"tag":516,"props":1179,"children":1180},{"style":762},[1181],{"type":493,"value":924},{"type":488,"tag":516,"props":1183,"children":1184},{"style":790},[1185],{"type":493,"value":929},{"type":488,"tag":516,"props":1187,"children":1188},{"style":762},[1189],{"type":493,"value":852},{"type":488,"tag":516,"props":1191,"children":1192},{"style":790},[1193],{"type":493,"value":1051},{"type":488,"tag":516,"props":1195,"children":1196},{"style":762},[1197],{"type":493,"value":943},{"type":488,"tag":516,"props":1199,"children":1201},{"class":518,"line":1200},24,[1202,1207,1211,1215,1219,1223],{"type":488,"tag":516,"props":1203,"children":1204},{"style":790},[1205],{"type":493,"value":1206},"    current",{"type":488,"tag":516,"props":1208,"children":1209},{"style":762},[1210],{"type":493,"value":924},{"type":488,"tag":516,"props":1212,"children":1213},{"style":790},[1214],{"type":493,"value":929},{"type":488,"tag":516,"props":1216,"children":1217},{"style":762},[1218],{"type":493,"value":852},{"type":488,"tag":516,"props":1220,"children":1221},{"style":790},[1222],{"type":493,"value":1084},{"type":488,"tag":516,"props":1224,"children":1225},{"style":762},[1226],{"type":493,"value":943},{"type":488,"tag":516,"props":1228,"children":1230},{"class":518,"line":1229},25,[1231],{"type":488,"tag":516,"props":1232,"children":1233},{"emptyLinePlaceholder":1119},[1234],{"type":493,"value":1122},{"type":488,"tag":516,"props":1236,"children":1238},{"class":518,"line":1237},26,[1239],{"type":488,"tag":516,"props":1240,"children":1241},{"style":686},[1242],{"type":493,"value":1243},"    // 指针移动\n",{"type":488,"tag":516,"props":1245,"children":1247},{"class":518,"line":1246},27,[1248,1252,1256,1260,1264,1268,1272,1276],{"type":488,"tag":516,"props":1249,"children":1250},{"style":790},[1251],{"type":493,"value":1206},{"type":488,"tag":516,"props":1253,"children":1254},{"style":762},[1255],{"type":493,"value":852},{"type":488,"tag":516,"props":1257,"children":1258},{"style":790},[1259],{"type":493,"value":957},{"type":488,"tag":516,"props":1261,"children":1262},{"style":762},[1263],{"type":493,"value":924},{"type":488,"tag":516,"props":1265,"children":1266},{"style":790},[1267],{"type":493,"value":929},{"type":488,"tag":516,"props":1269,"children":1270},{"style":762},[1271],{"type":493,"value":924},{"type":488,"tag":516,"props":1273,"children":1274},{"style":790},[1275],{"type":493,"value":929},{"type":488,"tag":516,"props":1277,"children":1278},{"style":762},[1279],{"type":493,"value":943},{"type":488,"tag":516,"props":1281,"children":1283},{"class":518,"line":1282},28,[1284],{"type":488,"tag":516,"props":1285,"children":1286},{"style":762},[1287],{"type":493,"value":1288},"  }\n",{"type":488,"tag":516,"props":1290,"children":1292},{"class":518,"line":1291},29,[1293,1298,1302,1306,1310],{"type":488,"tag":516,"props":1294,"children":1295},{"style":768},[1296],{"type":493,"value":1297},"  return",{"type":488,"tag":516,"props":1299,"children":1300},{"style":790},[1301],{"type":493,"value":891},{"type":488,"tag":516,"props":1303,"children":1304},{"style":762},[1305],{"type":493,"value":924},{"type":488,"tag":516,"props":1307,"children":1308},{"style":790},[1309],{"type":493,"value":929},{"type":488,"tag":516,"props":1311,"children":1312},{"style":762},[1313],{"type":493,"value":943},{"type":488,"tag":516,"props":1315,"children":1317},{"class":518,"line":1316},30,[1318],{"type":488,"tag":516,"props":1319,"children":1320},{"style":762},[1321],{"type":493,"value":1322},"};\n",{"type":488,"tag":1324,"props":1325,"children":1326},"style",{},[1327],{"type":493,"value":1328},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":718,"depth":718,"links":1330},[1331,1332],{"id":614,"depth":528,"text":614},{"id":619,"depth":528,"text":619,"children":1333},[1334],{"id":625,"depth":700,"text":625},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1341,1343],{"_path":96,"title":95,"description":1342},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":102,"title":101,"description":1344},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1714046223872]