[{"data":1,"prerenderedAt":1370},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":503,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1365},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":98,"description":507,"url":508,"body":509,"_type":1360,"_id":1361,"_source":1362,"_file":1363,"_extension":1364},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":510,"children":511,"toc":1354},"root",[512,519,530,560,565,588,593,616,621,636,642,647,653,658,697,1348],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522,524],{"type":518,"value":523},"示例 1：\n",{"type":513,"tag":525,"props":526,"children":529},"img",{"alt":527,"src":528},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":513,"tag":531,"props":532,"children":535},"pre",{"className":533,"code":534,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[536],{"type":513,"tag":537,"props":538,"children":539},"code",{"__ignoreMap":506},[540,551],{"type":513,"tag":541,"props":542,"children":545},"span",{"class":543,"line":544},"line",1,[546],{"type":513,"tag":541,"props":547,"children":548},{},[549],{"type":518,"value":550},"输入：head = [1,2,3,4]\n",{"type":513,"tag":541,"props":552,"children":554},{"class":543,"line":553},2,[555],{"type":513,"tag":541,"props":556,"children":557},{},[558],{"type":518,"value":559},"输出：[2,1,4,3]\n",{"type":513,"tag":514,"props":561,"children":562},{},[563],{"type":518,"value":564},"示例 2：",{"type":513,"tag":531,"props":566,"children":568},{"className":533,"code":567,"language":518,"meta":506,"style":506},"输入：head = []\n输出：[]\n",[569],{"type":513,"tag":537,"props":570,"children":571},{"__ignoreMap":506},[572,580],{"type":513,"tag":541,"props":573,"children":574},{"class":543,"line":544},[575],{"type":513,"tag":541,"props":576,"children":577},{},[578],{"type":518,"value":579},"输入：head = []\n",{"type":513,"tag":541,"props":581,"children":582},{"class":543,"line":553},[583],{"type":513,"tag":541,"props":584,"children":585},{},[586],{"type":518,"value":587},"输出：[]\n",{"type":513,"tag":514,"props":589,"children":590},{},[591],{"type":518,"value":592},"示例 3：",{"type":513,"tag":531,"props":594,"children":596},{"className":533,"code":595,"language":518,"meta":506,"style":506},"输入：head = [1]\n输出：[1]\n",[597],{"type":513,"tag":537,"props":598,"children":599},{"__ignoreMap":506},[600,608],{"type":513,"tag":541,"props":601,"children":602},{"class":543,"line":544},[603],{"type":513,"tag":541,"props":604,"children":605},{},[606],{"type":518,"value":607},"输入：head = [1]\n",{"type":513,"tag":541,"props":609,"children":610},{"class":543,"line":553},[611],{"type":513,"tag":541,"props":612,"children":613},{},[614],{"type":518,"value":615},"输出：[1]\n",{"type":513,"tag":514,"props":617,"children":618},{},[619],{"type":518,"value":620},"提示：",{"type":513,"tag":622,"props":623,"children":624},"ul",{},[625,631],{"type":513,"tag":626,"props":627,"children":628},"li",{},[629],{"type":518,"value":630},"链表中节点的数目在范围 [0, 100] 内",{"type":513,"tag":626,"props":632,"children":633},{},[634],{"type":518,"value":635},"0 \u003C= Node.val \u003C= 100",{"type":513,"tag":637,"props":638,"children":640},"h2",{"id":639},"解题思路",[641],{"type":518,"value":639},{"type":513,"tag":637,"props":643,"children":645},{"id":644},"实现",[646],{"type":518,"value":644},{"type":513,"tag":648,"props":649,"children":651},"h3",{"id":650},"双指针",[652],{"type":518,"value":650},{"type":513,"tag":514,"props":654,"children":655},{},[656],{"type":518,"value":657},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":513,"tag":659,"props":660,"children":661},"ol",{},[662,667,672,677,682,687,692],{"type":513,"tag":626,"props":663,"children":664},{},[665],{"type":518,"value":666},"初始化 first 为第一个节点",{"type":513,"tag":626,"props":668,"children":669},{},[670],{"type":518,"value":671},"初始化 second 为第二个节点",{"type":513,"tag":626,"props":673,"children":674},{},[675],{"type":518,"value":676},"初始化 current 为 dummy",{"type":513,"tag":626,"props":678,"children":679},{},[680],{"type":518,"value":681},"first.next = second.next",{"type":513,"tag":626,"props":683,"children":684},{},[685],{"type":518,"value":686},"current.next = second",{"type":513,"tag":626,"props":688,"children":689},{},[690],{"type":518,"value":691},"current 移动 2 格",{"type":513,"tag":626,"props":693,"children":694},{},[695],{"type":518,"value":696},"重复执行",{"type":513,"tag":531,"props":698,"children":702},{"className":699,"code":700,"language":701,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[703],{"type":513,"tag":537,"props":704,"children":705},{"__ignoreMap":506},[706,715,723,732,741,750,759,768,776,819,849,857,903,936,969,995,1054,1063,1097,1138,1148,1157,1194,1223,1252,1260,1269,1305,1314,1339],{"type":513,"tag":541,"props":707,"children":708},{"class":543,"line":544},[709],{"type":513,"tag":541,"props":710,"children":712},{"style":711},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[713],{"type":518,"value":714},"/**\n",{"type":513,"tag":541,"props":716,"children":717},{"class":543,"line":553},[718],{"type":513,"tag":541,"props":719,"children":720},{"style":711},[721],{"type":518,"value":722}," * Definition for singly-linked list.\n",{"type":513,"tag":541,"props":724,"children":726},{"class":543,"line":725},3,[727],{"type":513,"tag":541,"props":728,"children":729},{"style":711},[730],{"type":518,"value":731}," * function ListNode(val, next) {\n",{"type":513,"tag":541,"props":733,"children":735},{"class":543,"line":734},4,[736],{"type":513,"tag":541,"props":737,"children":738},{"style":711},[739],{"type":518,"value":740}," *     this.val = (val===undefined ? 0 : val)\n",{"type":513,"tag":541,"props":742,"children":744},{"class":543,"line":743},5,[745],{"type":513,"tag":541,"props":746,"children":747},{"style":711},[748],{"type":518,"value":749}," *     this.next = (next===undefined ? null : next)\n",{"type":513,"tag":541,"props":751,"children":753},{"class":543,"line":752},6,[754],{"type":513,"tag":541,"props":755,"children":756},{"style":711},[757],{"type":518,"value":758}," * }\n",{"type":513,"tag":541,"props":760,"children":762},{"class":543,"line":761},7,[763],{"type":513,"tag":541,"props":764,"children":765},{"style":711},[766],{"type":518,"value":767}," */\n",{"type":513,"tag":541,"props":769,"children":771},{"class":543,"line":770},8,[772],{"type":513,"tag":541,"props":773,"children":774},{"style":711},[775],{"type":518,"value":714},{"type":513,"tag":541,"props":777,"children":779},{"class":543,"line":778},9,[780,785,791,797,802,808,813],{"type":513,"tag":541,"props":781,"children":782},{"style":711},[783],{"type":518,"value":784}," * ",{"type":513,"tag":541,"props":786,"children":788},{"style":787},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[789],{"type":518,"value":790},"@",{"type":513,"tag":541,"props":792,"children":794},{"style":793},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[795],{"type":518,"value":796},"param",{"type":513,"tag":541,"props":798,"children":799},{"style":787},[800],{"type":518,"value":801}," {",{"type":513,"tag":541,"props":803,"children":805},{"style":804},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[806],{"type":518,"value":807},"ListNode",{"type":513,"tag":541,"props":809,"children":810},{"style":787},[811],{"type":518,"value":812},"}",{"type":513,"tag":541,"props":814,"children":816},{"style":815},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[817],{"type":518,"value":818}," head\n",{"type":513,"tag":541,"props":820,"children":822},{"class":543,"line":821},10,[823,827,831,836,840,844],{"type":513,"tag":541,"props":824,"children":825},{"style":711},[826],{"type":518,"value":784},{"type":513,"tag":541,"props":828,"children":829},{"style":787},[830],{"type":518,"value":790},{"type":513,"tag":541,"props":832,"children":833},{"style":793},[834],{"type":518,"value":835},"return",{"type":513,"tag":541,"props":837,"children":838},{"style":787},[839],{"type":518,"value":801},{"type":513,"tag":541,"props":841,"children":842},{"style":804},[843],{"type":518,"value":807},{"type":513,"tag":541,"props":845,"children":846},{"style":787},[847],{"type":518,"value":848},"}\n",{"type":513,"tag":541,"props":850,"children":852},{"class":543,"line":851},11,[853],{"type":513,"tag":541,"props":854,"children":855},{"style":711},[856],{"type":518,"value":767},{"type":513,"tag":541,"props":858,"children":860},{"class":543,"line":859},12,[861,867,873,878,883,888,893,898],{"type":513,"tag":541,"props":862,"children":864},{"style":863},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[865],{"type":518,"value":866},"var",{"type":513,"tag":541,"props":868,"children":870},{"style":869},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[871],{"type":518,"value":872}," swapPairs",{"type":513,"tag":541,"props":874,"children":875},{"style":787},[876],{"type":518,"value":877}," =",{"type":513,"tag":541,"props":879,"children":880},{"style":863},[881],{"type":518,"value":882}," function",{"type":513,"tag":541,"props":884,"children":885},{"style":787},[886],{"type":518,"value":887}," (",{"type":513,"tag":541,"props":889,"children":890},{"style":815},[891],{"type":518,"value":892},"head",{"type":513,"tag":541,"props":894,"children":895},{"style":787},[896],{"type":518,"value":897},")",{"type":513,"tag":541,"props":899,"children":900},{"style":787},[901],{"type":518,"value":902}," {\n",{"type":513,"tag":541,"props":904,"children":906},{"class":543,"line":905},13,[907,912,917,921,926,931],{"type":513,"tag":541,"props":908,"children":909},{"style":863},[910],{"type":518,"value":911},"  const",{"type":513,"tag":541,"props":913,"children":914},{"style":815},[915],{"type":518,"value":916}," dummy",{"type":513,"tag":541,"props":918,"children":919},{"style":787},[920],{"type":518,"value":877},{"type":513,"tag":541,"props":922,"children":923},{"style":863},[924],{"type":518,"value":925}," new",{"type":513,"tag":541,"props":927,"children":928},{"style":869},[929],{"type":518,"value":930}," ListNode",{"type":513,"tag":541,"props":932,"children":933},{"style":787},[934],{"type":518,"value":935},"();\n",{"type":513,"tag":541,"props":937,"children":939},{"class":543,"line":938},14,[940,945,950,955,959,964],{"type":513,"tag":541,"props":941,"children":942},{"style":815},[943],{"type":518,"value":944},"  dummy",{"type":513,"tag":541,"props":946,"children":947},{"style":787},[948],{"type":518,"value":949},".",{"type":513,"tag":541,"props":951,"children":952},{"style":815},[953],{"type":518,"value":954},"next",{"type":513,"tag":541,"props":956,"children":957},{"style":787},[958],{"type":518,"value":877},{"type":513,"tag":541,"props":960,"children":961},{"style":815},[962],{"type":518,"value":963}," head",{"type":513,"tag":541,"props":965,"children":966},{"style":787},[967],{"type":518,"value":968},";\n",{"type":513,"tag":541,"props":970,"children":972},{"class":543,"line":971},15,[973,978,983,987,991],{"type":513,"tag":541,"props":974,"children":975},{"style":863},[976],{"type":518,"value":977},"  let",{"type":513,"tag":541,"props":979,"children":980},{"style":815},[981],{"type":518,"value":982}," current",{"type":513,"tag":541,"props":984,"children":985},{"style":787},[986],{"type":518,"value":877},{"type":513,"tag":541,"props":988,"children":989},{"style":815},[990],{"type":518,"value":916},{"type":513,"tag":541,"props":992,"children":993},{"style":787},[994],{"type":518,"value":968},{"type":513,"tag":541,"props":996,"children":998},{"class":543,"line":997},16,[999,1004,1008,1013,1017,1021,1026,1030,1034,1038,1042,1046,1050],{"type":513,"tag":541,"props":1000,"children":1001},{"style":793},[1002],{"type":518,"value":1003},"  while",{"type":513,"tag":541,"props":1005,"children":1006},{"style":787},[1007],{"type":518,"value":887},{"type":513,"tag":541,"props":1009,"children":1010},{"style":815},[1011],{"type":518,"value":1012},"current",{"type":513,"tag":541,"props":1014,"children":1015},{"style":787},[1016],{"type":518,"value":949},{"type":513,"tag":541,"props":1018,"children":1019},{"style":815},[1020],{"type":518,"value":954},{"type":513,"tag":541,"props":1022,"children":1023},{"style":863},[1024],{"type":518,"value":1025}," &&",{"type":513,"tag":541,"props":1027,"children":1028},{"style":815},[1029],{"type":518,"value":982},{"type":513,"tag":541,"props":1031,"children":1032},{"style":787},[1033],{"type":518,"value":949},{"type":513,"tag":541,"props":1035,"children":1036},{"style":815},[1037],{"type":518,"value":954},{"type":513,"tag":541,"props":1039,"children":1040},{"style":787},[1041],{"type":518,"value":949},{"type":513,"tag":541,"props":1043,"children":1044},{"style":815},[1045],{"type":518,"value":954},{"type":513,"tag":541,"props":1047,"children":1048},{"style":787},[1049],{"type":518,"value":897},{"type":513,"tag":541,"props":1051,"children":1052},{"style":787},[1053],{"type":518,"value":902},{"type":513,"tag":541,"props":1055,"children":1057},{"class":543,"line":1056},17,[1058],{"type":513,"tag":541,"props":1059,"children":1060},{"style":711},[1061],{"type":518,"value":1062},"    // 初始化双指针\n",{"type":513,"tag":541,"props":1064,"children":1066},{"class":543,"line":1065},18,[1067,1072,1077,1081,1085,1089,1093],{"type":513,"tag":541,"props":1068,"children":1069},{"style":863},[1070],{"type":518,"value":1071},"    const",{"type":513,"tag":541,"props":1073,"children":1074},{"style":815},[1075],{"type":518,"value":1076}," first",{"type":513,"tag":541,"props":1078,"children":1079},{"style":787},[1080],{"type":518,"value":877},{"type":513,"tag":541,"props":1082,"children":1083},{"style":815},[1084],{"type":518,"value":982},{"type":513,"tag":541,"props":1086,"children":1087},{"style":787},[1088],{"type":518,"value":949},{"type":513,"tag":541,"props":1090,"children":1091},{"style":815},[1092],{"type":518,"value":954},{"type":513,"tag":541,"props":1094,"children":1095},{"style":787},[1096],{"type":518,"value":968},{"type":513,"tag":541,"props":1098,"children":1100},{"class":543,"line":1099},19,[1101,1105,1110,1114,1118,1122,1126,1130,1134],{"type":513,"tag":541,"props":1102,"children":1103},{"style":863},[1104],{"type":518,"value":1071},{"type":513,"tag":541,"props":1106,"children":1107},{"style":815},[1108],{"type":518,"value":1109}," second",{"type":513,"tag":541,"props":1111,"children":1112},{"style":787},[1113],{"type":518,"value":877},{"type":513,"tag":541,"props":1115,"children":1116},{"style":815},[1117],{"type":518,"value":982},{"type":513,"tag":541,"props":1119,"children":1120},{"style":787},[1121],{"type":518,"value":949},{"type":513,"tag":541,"props":1123,"children":1124},{"style":815},[1125],{"type":518,"value":954},{"type":513,"tag":541,"props":1127,"children":1128},{"style":787},[1129],{"type":518,"value":949},{"type":513,"tag":541,"props":1131,"children":1132},{"style":815},[1133],{"type":518,"value":954},{"type":513,"tag":541,"props":1135,"children":1136},{"style":787},[1137],{"type":518,"value":968},{"type":513,"tag":541,"props":1139,"children":1141},{"class":543,"line":1140},20,[1142],{"type":513,"tag":541,"props":1143,"children":1145},{"emptyLinePlaceholder":1144},true,[1146],{"type":518,"value":1147},"\n",{"type":513,"tag":541,"props":1149,"children":1151},{"class":543,"line":1150},21,[1152],{"type":513,"tag":541,"props":1153,"children":1154},{"style":711},[1155],{"type":518,"value":1156},"    // 更新双指针和 current 指针\n",{"type":513,"tag":541,"props":1158,"children":1160},{"class":543,"line":1159},22,[1161,1166,1170,1174,1178,1182,1186,1190],{"type":513,"tag":541,"props":1162,"children":1163},{"style":815},[1164],{"type":518,"value":1165},"    first",{"type":513,"tag":541,"props":1167,"children":1168},{"style":787},[1169],{"type":518,"value":949},{"type":513,"tag":541,"props":1171,"children":1172},{"style":815},[1173],{"type":518,"value":954},{"type":513,"tag":541,"props":1175,"children":1176},{"style":787},[1177],{"type":518,"value":877},{"type":513,"tag":541,"props":1179,"children":1180},{"style":815},[1181],{"type":518,"value":1109},{"type":513,"tag":541,"props":1183,"children":1184},{"style":787},[1185],{"type":518,"value":949},{"type":513,"tag":541,"props":1187,"children":1188},{"style":815},[1189],{"type":518,"value":954},{"type":513,"tag":541,"props":1191,"children":1192},{"style":787},[1193],{"type":518,"value":968},{"type":513,"tag":541,"props":1195,"children":1197},{"class":543,"line":1196},23,[1198,1203,1207,1211,1215,1219],{"type":513,"tag":541,"props":1199,"children":1200},{"style":815},[1201],{"type":518,"value":1202},"    second",{"type":513,"tag":541,"props":1204,"children":1205},{"style":787},[1206],{"type":518,"value":949},{"type":513,"tag":541,"props":1208,"children":1209},{"style":815},[1210],{"type":518,"value":954},{"type":513,"tag":541,"props":1212,"children":1213},{"style":787},[1214],{"type":518,"value":877},{"type":513,"tag":541,"props":1216,"children":1217},{"style":815},[1218],{"type":518,"value":1076},{"type":513,"tag":541,"props":1220,"children":1221},{"style":787},[1222],{"type":518,"value":968},{"type":513,"tag":541,"props":1224,"children":1226},{"class":543,"line":1225},24,[1227,1232,1236,1240,1244,1248],{"type":513,"tag":541,"props":1228,"children":1229},{"style":815},[1230],{"type":518,"value":1231},"    current",{"type":513,"tag":541,"props":1233,"children":1234},{"style":787},[1235],{"type":518,"value":949},{"type":513,"tag":541,"props":1237,"children":1238},{"style":815},[1239],{"type":518,"value":954},{"type":513,"tag":541,"props":1241,"children":1242},{"style":787},[1243],{"type":518,"value":877},{"type":513,"tag":541,"props":1245,"children":1246},{"style":815},[1247],{"type":518,"value":1109},{"type":513,"tag":541,"props":1249,"children":1250},{"style":787},[1251],{"type":518,"value":968},{"type":513,"tag":541,"props":1253,"children":1255},{"class":543,"line":1254},25,[1256],{"type":513,"tag":541,"props":1257,"children":1258},{"emptyLinePlaceholder":1144},[1259],{"type":518,"value":1147},{"type":513,"tag":541,"props":1261,"children":1263},{"class":543,"line":1262},26,[1264],{"type":513,"tag":541,"props":1265,"children":1266},{"style":711},[1267],{"type":518,"value":1268},"    // 指针移动\n",{"type":513,"tag":541,"props":1270,"children":1272},{"class":543,"line":1271},27,[1273,1277,1281,1285,1289,1293,1297,1301],{"type":513,"tag":541,"props":1274,"children":1275},{"style":815},[1276],{"type":518,"value":1231},{"type":513,"tag":541,"props":1278,"children":1279},{"style":787},[1280],{"type":518,"value":877},{"type":513,"tag":541,"props":1282,"children":1283},{"style":815},[1284],{"type":518,"value":982},{"type":513,"tag":541,"props":1286,"children":1287},{"style":787},[1288],{"type":518,"value":949},{"type":513,"tag":541,"props":1290,"children":1291},{"style":815},[1292],{"type":518,"value":954},{"type":513,"tag":541,"props":1294,"children":1295},{"style":787},[1296],{"type":518,"value":949},{"type":513,"tag":541,"props":1298,"children":1299},{"style":815},[1300],{"type":518,"value":954},{"type":513,"tag":541,"props":1302,"children":1303},{"style":787},[1304],{"type":518,"value":968},{"type":513,"tag":541,"props":1306,"children":1308},{"class":543,"line":1307},28,[1309],{"type":513,"tag":541,"props":1310,"children":1311},{"style":787},[1312],{"type":518,"value":1313},"  }\n",{"type":513,"tag":541,"props":1315,"children":1317},{"class":543,"line":1316},29,[1318,1323,1327,1331,1335],{"type":513,"tag":541,"props":1319,"children":1320},{"style":793},[1321],{"type":518,"value":1322},"  return",{"type":513,"tag":541,"props":1324,"children":1325},{"style":815},[1326],{"type":518,"value":916},{"type":513,"tag":541,"props":1328,"children":1329},{"style":787},[1330],{"type":518,"value":949},{"type":513,"tag":541,"props":1332,"children":1333},{"style":815},[1334],{"type":518,"value":954},{"type":513,"tag":541,"props":1336,"children":1337},{"style":787},[1338],{"type":518,"value":968},{"type":513,"tag":541,"props":1340,"children":1342},{"class":543,"line":1341},30,[1343],{"type":513,"tag":541,"props":1344,"children":1345},{"style":787},[1346],{"type":518,"value":1347},"};\n",{"type":513,"tag":1349,"props":1350,"children":1351},"style",{},[1352],{"type":518,"value":1353},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":743,"depth":743,"links":1355},[1356,1357],{"id":639,"depth":553,"text":639},{"id":644,"depth":553,"text":644,"children":1358},[1359],{"id":650,"depth":725,"text":650},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1366,1368],{"_path":96,"title":95,"description":1367},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":102,"title":101,"description":1369},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1714056092638]