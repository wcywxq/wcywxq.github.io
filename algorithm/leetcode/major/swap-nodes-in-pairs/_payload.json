[{"data":1,"prerenderedAt":1419},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":552,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1414},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":98,"description":556,"url":557,"body":558,"_type":1409,"_id":1410,"_source":1411,"_file":1412,"_extension":1413},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":559,"children":560,"toc":1403},"root",[561,568,579,609,614,637,642,665,670,685,691,696,702,707,746,1397],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571,573],{"type":567,"value":572},"示例 1：\n",{"type":562,"tag":574,"props":575,"children":578},"img",{"alt":576,"src":577},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":562,"tag":580,"props":581,"children":584},"pre",{"className":582,"code":583,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[585],{"type":562,"tag":586,"props":587,"children":588},"code",{"__ignoreMap":555},[589,600],{"type":562,"tag":590,"props":591,"children":594},"span",{"class":592,"line":593},"line",1,[595],{"type":562,"tag":590,"props":596,"children":597},{},[598],{"type":567,"value":599},"输入：head = [1,2,3,4]\n",{"type":562,"tag":590,"props":601,"children":603},{"class":592,"line":602},2,[604],{"type":562,"tag":590,"props":605,"children":606},{},[607],{"type":567,"value":608},"输出：[2,1,4,3]\n",{"type":562,"tag":563,"props":610,"children":611},{},[612],{"type":567,"value":613},"示例 2：",{"type":562,"tag":580,"props":615,"children":617},{"className":582,"code":616,"language":567,"meta":555,"style":555},"输入：head = []\n输出：[]\n",[618],{"type":562,"tag":586,"props":619,"children":620},{"__ignoreMap":555},[621,629],{"type":562,"tag":590,"props":622,"children":623},{"class":592,"line":593},[624],{"type":562,"tag":590,"props":625,"children":626},{},[627],{"type":567,"value":628},"输入：head = []\n",{"type":562,"tag":590,"props":630,"children":631},{"class":592,"line":602},[632],{"type":562,"tag":590,"props":633,"children":634},{},[635],{"type":567,"value":636},"输出：[]\n",{"type":562,"tag":563,"props":638,"children":639},{},[640],{"type":567,"value":641},"示例 3：",{"type":562,"tag":580,"props":643,"children":645},{"className":582,"code":644,"language":567,"meta":555,"style":555},"输入：head = [1]\n输出：[1]\n",[646],{"type":562,"tag":586,"props":647,"children":648},{"__ignoreMap":555},[649,657],{"type":562,"tag":590,"props":650,"children":651},{"class":592,"line":593},[652],{"type":562,"tag":590,"props":653,"children":654},{},[655],{"type":567,"value":656},"输入：head = [1]\n",{"type":562,"tag":590,"props":658,"children":659},{"class":592,"line":602},[660],{"type":562,"tag":590,"props":661,"children":662},{},[663],{"type":567,"value":664},"输出：[1]\n",{"type":562,"tag":563,"props":666,"children":667},{},[668],{"type":567,"value":669},"提示：",{"type":562,"tag":671,"props":672,"children":673},"ul",{},[674,680],{"type":562,"tag":675,"props":676,"children":677},"li",{},[678],{"type":567,"value":679},"链表中节点的数目在范围 [0, 100] 内",{"type":562,"tag":675,"props":681,"children":682},{},[683],{"type":567,"value":684},"0 \u003C= Node.val \u003C= 100",{"type":562,"tag":686,"props":687,"children":689},"h2",{"id":688},"解题思路",[690],{"type":567,"value":688},{"type":562,"tag":686,"props":692,"children":694},{"id":693},"实现",[695],{"type":567,"value":693},{"type":562,"tag":697,"props":698,"children":700},"h3",{"id":699},"双指针",[701],{"type":567,"value":699},{"type":562,"tag":563,"props":703,"children":704},{},[705],{"type":567,"value":706},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":562,"tag":708,"props":709,"children":710},"ol",{},[711,716,721,726,731,736,741],{"type":562,"tag":675,"props":712,"children":713},{},[714],{"type":567,"value":715},"初始化 first 为第一个节点",{"type":562,"tag":675,"props":717,"children":718},{},[719],{"type":567,"value":720},"初始化 second 为第二个节点",{"type":562,"tag":675,"props":722,"children":723},{},[724],{"type":567,"value":725},"初始化 current 为 dummy",{"type":562,"tag":675,"props":727,"children":728},{},[729],{"type":567,"value":730},"first.next = second.next",{"type":562,"tag":675,"props":732,"children":733},{},[734],{"type":567,"value":735},"current.next = second",{"type":562,"tag":675,"props":737,"children":738},{},[739],{"type":567,"value":740},"current 移动 2 格",{"type":562,"tag":675,"props":742,"children":743},{},[744],{"type":567,"value":745},"重复执行",{"type":562,"tag":580,"props":747,"children":751},{"className":748,"code":749,"language":750,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[752],{"type":562,"tag":586,"props":753,"children":754},{"__ignoreMap":555},[755,764,772,781,790,799,808,817,825,868,898,906,952,985,1018,1044,1103,1112,1146,1187,1197,1206,1243,1272,1301,1309,1318,1354,1363,1388],{"type":562,"tag":590,"props":756,"children":757},{"class":592,"line":593},[758],{"type":562,"tag":590,"props":759,"children":761},{"style":760},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[762],{"type":567,"value":763},"/**\n",{"type":562,"tag":590,"props":765,"children":766},{"class":592,"line":602},[767],{"type":562,"tag":590,"props":768,"children":769},{"style":760},[770],{"type":567,"value":771}," * Definition for singly-linked list.\n",{"type":562,"tag":590,"props":773,"children":775},{"class":592,"line":774},3,[776],{"type":562,"tag":590,"props":777,"children":778},{"style":760},[779],{"type":567,"value":780}," * function ListNode(val, next) {\n",{"type":562,"tag":590,"props":782,"children":784},{"class":592,"line":783},4,[785],{"type":562,"tag":590,"props":786,"children":787},{"style":760},[788],{"type":567,"value":789}," *     this.val = (val===undefined ? 0 : val)\n",{"type":562,"tag":590,"props":791,"children":793},{"class":592,"line":792},5,[794],{"type":562,"tag":590,"props":795,"children":796},{"style":760},[797],{"type":567,"value":798}," *     this.next = (next===undefined ? null : next)\n",{"type":562,"tag":590,"props":800,"children":802},{"class":592,"line":801},6,[803],{"type":562,"tag":590,"props":804,"children":805},{"style":760},[806],{"type":567,"value":807}," * }\n",{"type":562,"tag":590,"props":809,"children":811},{"class":592,"line":810},7,[812],{"type":562,"tag":590,"props":813,"children":814},{"style":760},[815],{"type":567,"value":816}," */\n",{"type":562,"tag":590,"props":818,"children":820},{"class":592,"line":819},8,[821],{"type":562,"tag":590,"props":822,"children":823},{"style":760},[824],{"type":567,"value":763},{"type":562,"tag":590,"props":826,"children":828},{"class":592,"line":827},9,[829,834,840,846,851,857,862],{"type":562,"tag":590,"props":830,"children":831},{"style":760},[832],{"type":567,"value":833}," * ",{"type":562,"tag":590,"props":835,"children":837},{"style":836},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[838],{"type":567,"value":839},"@",{"type":562,"tag":590,"props":841,"children":843},{"style":842},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[844],{"type":567,"value":845},"param",{"type":562,"tag":590,"props":847,"children":848},{"style":836},[849],{"type":567,"value":850}," {",{"type":562,"tag":590,"props":852,"children":854},{"style":853},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[855],{"type":567,"value":856},"ListNode",{"type":562,"tag":590,"props":858,"children":859},{"style":836},[860],{"type":567,"value":861},"}",{"type":562,"tag":590,"props":863,"children":865},{"style":864},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[866],{"type":567,"value":867}," head\n",{"type":562,"tag":590,"props":869,"children":871},{"class":592,"line":870},10,[872,876,880,885,889,893],{"type":562,"tag":590,"props":873,"children":874},{"style":760},[875],{"type":567,"value":833},{"type":562,"tag":590,"props":877,"children":878},{"style":836},[879],{"type":567,"value":839},{"type":562,"tag":590,"props":881,"children":882},{"style":842},[883],{"type":567,"value":884},"return",{"type":562,"tag":590,"props":886,"children":887},{"style":836},[888],{"type":567,"value":850},{"type":562,"tag":590,"props":890,"children":891},{"style":853},[892],{"type":567,"value":856},{"type":562,"tag":590,"props":894,"children":895},{"style":836},[896],{"type":567,"value":897},"}\n",{"type":562,"tag":590,"props":899,"children":901},{"class":592,"line":900},11,[902],{"type":562,"tag":590,"props":903,"children":904},{"style":760},[905],{"type":567,"value":816},{"type":562,"tag":590,"props":907,"children":909},{"class":592,"line":908},12,[910,916,922,927,932,937,942,947],{"type":562,"tag":590,"props":911,"children":913},{"style":912},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[914],{"type":567,"value":915},"var",{"type":562,"tag":590,"props":917,"children":919},{"style":918},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[920],{"type":567,"value":921}," swapPairs",{"type":562,"tag":590,"props":923,"children":924},{"style":836},[925],{"type":567,"value":926}," =",{"type":562,"tag":590,"props":928,"children":929},{"style":912},[930],{"type":567,"value":931}," function",{"type":562,"tag":590,"props":933,"children":934},{"style":836},[935],{"type":567,"value":936}," (",{"type":562,"tag":590,"props":938,"children":939},{"style":864},[940],{"type":567,"value":941},"head",{"type":562,"tag":590,"props":943,"children":944},{"style":836},[945],{"type":567,"value":946},")",{"type":562,"tag":590,"props":948,"children":949},{"style":836},[950],{"type":567,"value":951}," {\n",{"type":562,"tag":590,"props":953,"children":955},{"class":592,"line":954},13,[956,961,966,970,975,980],{"type":562,"tag":590,"props":957,"children":958},{"style":912},[959],{"type":567,"value":960},"  const",{"type":562,"tag":590,"props":962,"children":963},{"style":864},[964],{"type":567,"value":965}," dummy",{"type":562,"tag":590,"props":967,"children":968},{"style":836},[969],{"type":567,"value":926},{"type":562,"tag":590,"props":971,"children":972},{"style":912},[973],{"type":567,"value":974}," new",{"type":562,"tag":590,"props":976,"children":977},{"style":918},[978],{"type":567,"value":979}," ListNode",{"type":562,"tag":590,"props":981,"children":982},{"style":836},[983],{"type":567,"value":984},"();\n",{"type":562,"tag":590,"props":986,"children":988},{"class":592,"line":987},14,[989,994,999,1004,1008,1013],{"type":562,"tag":590,"props":990,"children":991},{"style":864},[992],{"type":567,"value":993},"  dummy",{"type":562,"tag":590,"props":995,"children":996},{"style":836},[997],{"type":567,"value":998},".",{"type":562,"tag":590,"props":1000,"children":1001},{"style":864},[1002],{"type":567,"value":1003},"next",{"type":562,"tag":590,"props":1005,"children":1006},{"style":836},[1007],{"type":567,"value":926},{"type":562,"tag":590,"props":1009,"children":1010},{"style":864},[1011],{"type":567,"value":1012}," head",{"type":562,"tag":590,"props":1014,"children":1015},{"style":836},[1016],{"type":567,"value":1017},";\n",{"type":562,"tag":590,"props":1019,"children":1021},{"class":592,"line":1020},15,[1022,1027,1032,1036,1040],{"type":562,"tag":590,"props":1023,"children":1024},{"style":912},[1025],{"type":567,"value":1026},"  let",{"type":562,"tag":590,"props":1028,"children":1029},{"style":864},[1030],{"type":567,"value":1031}," current",{"type":562,"tag":590,"props":1033,"children":1034},{"style":836},[1035],{"type":567,"value":926},{"type":562,"tag":590,"props":1037,"children":1038},{"style":864},[1039],{"type":567,"value":965},{"type":562,"tag":590,"props":1041,"children":1042},{"style":836},[1043],{"type":567,"value":1017},{"type":562,"tag":590,"props":1045,"children":1047},{"class":592,"line":1046},16,[1048,1053,1057,1062,1066,1070,1075,1079,1083,1087,1091,1095,1099],{"type":562,"tag":590,"props":1049,"children":1050},{"style":842},[1051],{"type":567,"value":1052},"  while",{"type":562,"tag":590,"props":1054,"children":1055},{"style":836},[1056],{"type":567,"value":936},{"type":562,"tag":590,"props":1058,"children":1059},{"style":864},[1060],{"type":567,"value":1061},"current",{"type":562,"tag":590,"props":1063,"children":1064},{"style":836},[1065],{"type":567,"value":998},{"type":562,"tag":590,"props":1067,"children":1068},{"style":864},[1069],{"type":567,"value":1003},{"type":562,"tag":590,"props":1071,"children":1072},{"style":912},[1073],{"type":567,"value":1074}," &&",{"type":562,"tag":590,"props":1076,"children":1077},{"style":864},[1078],{"type":567,"value":1031},{"type":562,"tag":590,"props":1080,"children":1081},{"style":836},[1082],{"type":567,"value":998},{"type":562,"tag":590,"props":1084,"children":1085},{"style":864},[1086],{"type":567,"value":1003},{"type":562,"tag":590,"props":1088,"children":1089},{"style":836},[1090],{"type":567,"value":998},{"type":562,"tag":590,"props":1092,"children":1093},{"style":864},[1094],{"type":567,"value":1003},{"type":562,"tag":590,"props":1096,"children":1097},{"style":836},[1098],{"type":567,"value":946},{"type":562,"tag":590,"props":1100,"children":1101},{"style":836},[1102],{"type":567,"value":951},{"type":562,"tag":590,"props":1104,"children":1106},{"class":592,"line":1105},17,[1107],{"type":562,"tag":590,"props":1108,"children":1109},{"style":760},[1110],{"type":567,"value":1111},"    // 初始化双指针\n",{"type":562,"tag":590,"props":1113,"children":1115},{"class":592,"line":1114},18,[1116,1121,1126,1130,1134,1138,1142],{"type":562,"tag":590,"props":1117,"children":1118},{"style":912},[1119],{"type":567,"value":1120},"    const",{"type":562,"tag":590,"props":1122,"children":1123},{"style":864},[1124],{"type":567,"value":1125}," first",{"type":562,"tag":590,"props":1127,"children":1128},{"style":836},[1129],{"type":567,"value":926},{"type":562,"tag":590,"props":1131,"children":1132},{"style":864},[1133],{"type":567,"value":1031},{"type":562,"tag":590,"props":1135,"children":1136},{"style":836},[1137],{"type":567,"value":998},{"type":562,"tag":590,"props":1139,"children":1140},{"style":864},[1141],{"type":567,"value":1003},{"type":562,"tag":590,"props":1143,"children":1144},{"style":836},[1145],{"type":567,"value":1017},{"type":562,"tag":590,"props":1147,"children":1149},{"class":592,"line":1148},19,[1150,1154,1159,1163,1167,1171,1175,1179,1183],{"type":562,"tag":590,"props":1151,"children":1152},{"style":912},[1153],{"type":567,"value":1120},{"type":562,"tag":590,"props":1155,"children":1156},{"style":864},[1157],{"type":567,"value":1158}," second",{"type":562,"tag":590,"props":1160,"children":1161},{"style":836},[1162],{"type":567,"value":926},{"type":562,"tag":590,"props":1164,"children":1165},{"style":864},[1166],{"type":567,"value":1031},{"type":562,"tag":590,"props":1168,"children":1169},{"style":836},[1170],{"type":567,"value":998},{"type":562,"tag":590,"props":1172,"children":1173},{"style":864},[1174],{"type":567,"value":1003},{"type":562,"tag":590,"props":1176,"children":1177},{"style":836},[1178],{"type":567,"value":998},{"type":562,"tag":590,"props":1180,"children":1181},{"style":864},[1182],{"type":567,"value":1003},{"type":562,"tag":590,"props":1184,"children":1185},{"style":836},[1186],{"type":567,"value":1017},{"type":562,"tag":590,"props":1188,"children":1190},{"class":592,"line":1189},20,[1191],{"type":562,"tag":590,"props":1192,"children":1194},{"emptyLinePlaceholder":1193},true,[1195],{"type":567,"value":1196},"\n",{"type":562,"tag":590,"props":1198,"children":1200},{"class":592,"line":1199},21,[1201],{"type":562,"tag":590,"props":1202,"children":1203},{"style":760},[1204],{"type":567,"value":1205},"    // 更新双指针和 current 指针\n",{"type":562,"tag":590,"props":1207,"children":1209},{"class":592,"line":1208},22,[1210,1215,1219,1223,1227,1231,1235,1239],{"type":562,"tag":590,"props":1211,"children":1212},{"style":864},[1213],{"type":567,"value":1214},"    first",{"type":562,"tag":590,"props":1216,"children":1217},{"style":836},[1218],{"type":567,"value":998},{"type":562,"tag":590,"props":1220,"children":1221},{"style":864},[1222],{"type":567,"value":1003},{"type":562,"tag":590,"props":1224,"children":1225},{"style":836},[1226],{"type":567,"value":926},{"type":562,"tag":590,"props":1228,"children":1229},{"style":864},[1230],{"type":567,"value":1158},{"type":562,"tag":590,"props":1232,"children":1233},{"style":836},[1234],{"type":567,"value":998},{"type":562,"tag":590,"props":1236,"children":1237},{"style":864},[1238],{"type":567,"value":1003},{"type":562,"tag":590,"props":1240,"children":1241},{"style":836},[1242],{"type":567,"value":1017},{"type":562,"tag":590,"props":1244,"children":1246},{"class":592,"line":1245},23,[1247,1252,1256,1260,1264,1268],{"type":562,"tag":590,"props":1248,"children":1249},{"style":864},[1250],{"type":567,"value":1251},"    second",{"type":562,"tag":590,"props":1253,"children":1254},{"style":836},[1255],{"type":567,"value":998},{"type":562,"tag":590,"props":1257,"children":1258},{"style":864},[1259],{"type":567,"value":1003},{"type":562,"tag":590,"props":1261,"children":1262},{"style":836},[1263],{"type":567,"value":926},{"type":562,"tag":590,"props":1265,"children":1266},{"style":864},[1267],{"type":567,"value":1125},{"type":562,"tag":590,"props":1269,"children":1270},{"style":836},[1271],{"type":567,"value":1017},{"type":562,"tag":590,"props":1273,"children":1275},{"class":592,"line":1274},24,[1276,1281,1285,1289,1293,1297],{"type":562,"tag":590,"props":1277,"children":1278},{"style":864},[1279],{"type":567,"value":1280},"    current",{"type":562,"tag":590,"props":1282,"children":1283},{"style":836},[1284],{"type":567,"value":998},{"type":562,"tag":590,"props":1286,"children":1287},{"style":864},[1288],{"type":567,"value":1003},{"type":562,"tag":590,"props":1290,"children":1291},{"style":836},[1292],{"type":567,"value":926},{"type":562,"tag":590,"props":1294,"children":1295},{"style":864},[1296],{"type":567,"value":1158},{"type":562,"tag":590,"props":1298,"children":1299},{"style":836},[1300],{"type":567,"value":1017},{"type":562,"tag":590,"props":1302,"children":1304},{"class":592,"line":1303},25,[1305],{"type":562,"tag":590,"props":1306,"children":1307},{"emptyLinePlaceholder":1193},[1308],{"type":567,"value":1196},{"type":562,"tag":590,"props":1310,"children":1312},{"class":592,"line":1311},26,[1313],{"type":562,"tag":590,"props":1314,"children":1315},{"style":760},[1316],{"type":567,"value":1317},"    // 指针移动\n",{"type":562,"tag":590,"props":1319,"children":1321},{"class":592,"line":1320},27,[1322,1326,1330,1334,1338,1342,1346,1350],{"type":562,"tag":590,"props":1323,"children":1324},{"style":864},[1325],{"type":567,"value":1280},{"type":562,"tag":590,"props":1327,"children":1328},{"style":836},[1329],{"type":567,"value":926},{"type":562,"tag":590,"props":1331,"children":1332},{"style":864},[1333],{"type":567,"value":1031},{"type":562,"tag":590,"props":1335,"children":1336},{"style":836},[1337],{"type":567,"value":998},{"type":562,"tag":590,"props":1339,"children":1340},{"style":864},[1341],{"type":567,"value":1003},{"type":562,"tag":590,"props":1343,"children":1344},{"style":836},[1345],{"type":567,"value":998},{"type":562,"tag":590,"props":1347,"children":1348},{"style":864},[1349],{"type":567,"value":1003},{"type":562,"tag":590,"props":1351,"children":1352},{"style":836},[1353],{"type":567,"value":1017},{"type":562,"tag":590,"props":1355,"children":1357},{"class":592,"line":1356},28,[1358],{"type":562,"tag":590,"props":1359,"children":1360},{"style":836},[1361],{"type":567,"value":1362},"  }\n",{"type":562,"tag":590,"props":1364,"children":1366},{"class":592,"line":1365},29,[1367,1372,1376,1380,1384],{"type":562,"tag":590,"props":1368,"children":1369},{"style":842},[1370],{"type":567,"value":1371},"  return",{"type":562,"tag":590,"props":1373,"children":1374},{"style":864},[1375],{"type":567,"value":965},{"type":562,"tag":590,"props":1377,"children":1378},{"style":836},[1379],{"type":567,"value":998},{"type":562,"tag":590,"props":1381,"children":1382},{"style":864},[1383],{"type":567,"value":1003},{"type":562,"tag":590,"props":1385,"children":1386},{"style":836},[1387],{"type":567,"value":1017},{"type":562,"tag":590,"props":1389,"children":1391},{"class":592,"line":1390},30,[1392],{"type":562,"tag":590,"props":1393,"children":1394},{"style":836},[1395],{"type":567,"value":1396},"};\n",{"type":562,"tag":1398,"props":1399,"children":1400},"style",{},[1401],{"type":567,"value":1402},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":792,"depth":792,"links":1404},[1405,1406],{"id":688,"depth":602,"text":688},{"id":693,"depth":602,"text":693,"children":1407},[1408],{"id":699,"depth":774,"text":699},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1415,1417],{"_path":96,"title":95,"description":1416},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":102,"title":101,"description":1418},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1715137597550]