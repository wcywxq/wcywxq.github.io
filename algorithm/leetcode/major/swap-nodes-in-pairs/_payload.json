[{"data":1,"prerenderedAt":1413},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":546,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1408},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":98,"description":550,"url":551,"body":552,"_type":1403,"_id":1404,"_source":1405,"_file":1406,"_extension":1407},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":553,"children":554,"toc":1397},"root",[555,562,573,603,608,631,636,659,664,679,685,690,696,701,740,1391],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565,567],{"type":561,"value":566},"示例 1：\n",{"type":556,"tag":568,"props":569,"children":572},"img",{"alt":570,"src":571},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":556,"tag":574,"props":575,"children":578},"pre",{"className":576,"code":577,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[579],{"type":556,"tag":580,"props":581,"children":582},"code",{"__ignoreMap":549},[583,594],{"type":556,"tag":584,"props":585,"children":588},"span",{"class":586,"line":587},"line",1,[589],{"type":556,"tag":584,"props":590,"children":591},{},[592],{"type":561,"value":593},"输入：head = [1,2,3,4]\n",{"type":556,"tag":584,"props":595,"children":597},{"class":586,"line":596},2,[598],{"type":556,"tag":584,"props":599,"children":600},{},[601],{"type":561,"value":602},"输出：[2,1,4,3]\n",{"type":556,"tag":557,"props":604,"children":605},{},[606],{"type":561,"value":607},"示例 2：",{"type":556,"tag":574,"props":609,"children":611},{"className":576,"code":610,"language":561,"meta":549,"style":549},"输入：head = []\n输出：[]\n",[612],{"type":556,"tag":580,"props":613,"children":614},{"__ignoreMap":549},[615,623],{"type":556,"tag":584,"props":616,"children":617},{"class":586,"line":587},[618],{"type":556,"tag":584,"props":619,"children":620},{},[621],{"type":561,"value":622},"输入：head = []\n",{"type":556,"tag":584,"props":624,"children":625},{"class":586,"line":596},[626],{"type":556,"tag":584,"props":627,"children":628},{},[629],{"type":561,"value":630},"输出：[]\n",{"type":556,"tag":557,"props":632,"children":633},{},[634],{"type":561,"value":635},"示例 3：",{"type":556,"tag":574,"props":637,"children":639},{"className":576,"code":638,"language":561,"meta":549,"style":549},"输入：head = [1]\n输出：[1]\n",[640],{"type":556,"tag":580,"props":641,"children":642},{"__ignoreMap":549},[643,651],{"type":556,"tag":584,"props":644,"children":645},{"class":586,"line":587},[646],{"type":556,"tag":584,"props":647,"children":648},{},[649],{"type":561,"value":650},"输入：head = [1]\n",{"type":556,"tag":584,"props":652,"children":653},{"class":586,"line":596},[654],{"type":556,"tag":584,"props":655,"children":656},{},[657],{"type":561,"value":658},"输出：[1]\n",{"type":556,"tag":557,"props":660,"children":661},{},[662],{"type":561,"value":663},"提示：",{"type":556,"tag":665,"props":666,"children":667},"ul",{},[668,674],{"type":556,"tag":669,"props":670,"children":671},"li",{},[672],{"type":561,"value":673},"链表中节点的数目在范围 [0, 100] 内",{"type":556,"tag":669,"props":675,"children":676},{},[677],{"type":561,"value":678},"0 \u003C= Node.val \u003C= 100",{"type":556,"tag":680,"props":681,"children":683},"h2",{"id":682},"解题思路",[684],{"type":561,"value":682},{"type":556,"tag":680,"props":686,"children":688},{"id":687},"实现",[689],{"type":561,"value":687},{"type":556,"tag":691,"props":692,"children":694},"h3",{"id":693},"双指针",[695],{"type":561,"value":693},{"type":556,"tag":557,"props":697,"children":698},{},[699],{"type":561,"value":700},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":556,"tag":702,"props":703,"children":704},"ol",{},[705,710,715,720,725,730,735],{"type":556,"tag":669,"props":706,"children":707},{},[708],{"type":561,"value":709},"初始化 first 为第一个节点",{"type":556,"tag":669,"props":711,"children":712},{},[713],{"type":561,"value":714},"初始化 second 为第二个节点",{"type":556,"tag":669,"props":716,"children":717},{},[718],{"type":561,"value":719},"初始化 current 为 dummy",{"type":556,"tag":669,"props":721,"children":722},{},[723],{"type":561,"value":724},"first.next = second.next",{"type":556,"tag":669,"props":726,"children":727},{},[728],{"type":561,"value":729},"current.next = second",{"type":556,"tag":669,"props":731,"children":732},{},[733],{"type":561,"value":734},"current 移动 2 格",{"type":556,"tag":669,"props":736,"children":737},{},[738],{"type":561,"value":739},"重复执行",{"type":556,"tag":574,"props":741,"children":745},{"className":742,"code":743,"language":744,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[746],{"type":556,"tag":580,"props":747,"children":748},{"__ignoreMap":549},[749,758,766,775,784,793,802,811,819,862,892,900,946,979,1012,1038,1097,1106,1140,1181,1191,1200,1237,1266,1295,1303,1312,1348,1357,1382],{"type":556,"tag":584,"props":750,"children":751},{"class":586,"line":587},[752],{"type":556,"tag":584,"props":753,"children":755},{"style":754},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[756],{"type":561,"value":757},"/**\n",{"type":556,"tag":584,"props":759,"children":760},{"class":586,"line":596},[761],{"type":556,"tag":584,"props":762,"children":763},{"style":754},[764],{"type":561,"value":765}," * Definition for singly-linked list.\n",{"type":556,"tag":584,"props":767,"children":769},{"class":586,"line":768},3,[770],{"type":556,"tag":584,"props":771,"children":772},{"style":754},[773],{"type":561,"value":774}," * function ListNode(val, next) {\n",{"type":556,"tag":584,"props":776,"children":778},{"class":586,"line":777},4,[779],{"type":556,"tag":584,"props":780,"children":781},{"style":754},[782],{"type":561,"value":783}," *     this.val = (val===undefined ? 0 : val)\n",{"type":556,"tag":584,"props":785,"children":787},{"class":586,"line":786},5,[788],{"type":556,"tag":584,"props":789,"children":790},{"style":754},[791],{"type":561,"value":792}," *     this.next = (next===undefined ? null : next)\n",{"type":556,"tag":584,"props":794,"children":796},{"class":586,"line":795},6,[797],{"type":556,"tag":584,"props":798,"children":799},{"style":754},[800],{"type":561,"value":801}," * }\n",{"type":556,"tag":584,"props":803,"children":805},{"class":586,"line":804},7,[806],{"type":556,"tag":584,"props":807,"children":808},{"style":754},[809],{"type":561,"value":810}," */\n",{"type":556,"tag":584,"props":812,"children":814},{"class":586,"line":813},8,[815],{"type":556,"tag":584,"props":816,"children":817},{"style":754},[818],{"type":561,"value":757},{"type":556,"tag":584,"props":820,"children":822},{"class":586,"line":821},9,[823,828,834,840,845,851,856],{"type":556,"tag":584,"props":824,"children":825},{"style":754},[826],{"type":561,"value":827}," * ",{"type":556,"tag":584,"props":829,"children":831},{"style":830},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[832],{"type":561,"value":833},"@",{"type":556,"tag":584,"props":835,"children":837},{"style":836},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[838],{"type":561,"value":839},"param",{"type":556,"tag":584,"props":841,"children":842},{"style":830},[843],{"type":561,"value":844}," {",{"type":556,"tag":584,"props":846,"children":848},{"style":847},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[849],{"type":561,"value":850},"ListNode",{"type":556,"tag":584,"props":852,"children":853},{"style":830},[854],{"type":561,"value":855},"}",{"type":556,"tag":584,"props":857,"children":859},{"style":858},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[860],{"type":561,"value":861}," head\n",{"type":556,"tag":584,"props":863,"children":865},{"class":586,"line":864},10,[866,870,874,879,883,887],{"type":556,"tag":584,"props":867,"children":868},{"style":754},[869],{"type":561,"value":827},{"type":556,"tag":584,"props":871,"children":872},{"style":830},[873],{"type":561,"value":833},{"type":556,"tag":584,"props":875,"children":876},{"style":836},[877],{"type":561,"value":878},"return",{"type":556,"tag":584,"props":880,"children":881},{"style":830},[882],{"type":561,"value":844},{"type":556,"tag":584,"props":884,"children":885},{"style":847},[886],{"type":561,"value":850},{"type":556,"tag":584,"props":888,"children":889},{"style":830},[890],{"type":561,"value":891},"}\n",{"type":556,"tag":584,"props":893,"children":895},{"class":586,"line":894},11,[896],{"type":556,"tag":584,"props":897,"children":898},{"style":754},[899],{"type":561,"value":810},{"type":556,"tag":584,"props":901,"children":903},{"class":586,"line":902},12,[904,910,916,921,926,931,936,941],{"type":556,"tag":584,"props":905,"children":907},{"style":906},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[908],{"type":561,"value":909},"var",{"type":556,"tag":584,"props":911,"children":913},{"style":912},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[914],{"type":561,"value":915}," swapPairs",{"type":556,"tag":584,"props":917,"children":918},{"style":830},[919],{"type":561,"value":920}," =",{"type":556,"tag":584,"props":922,"children":923},{"style":906},[924],{"type":561,"value":925}," function",{"type":556,"tag":584,"props":927,"children":928},{"style":830},[929],{"type":561,"value":930}," (",{"type":556,"tag":584,"props":932,"children":933},{"style":858},[934],{"type":561,"value":935},"head",{"type":556,"tag":584,"props":937,"children":938},{"style":830},[939],{"type":561,"value":940},")",{"type":556,"tag":584,"props":942,"children":943},{"style":830},[944],{"type":561,"value":945}," {\n",{"type":556,"tag":584,"props":947,"children":949},{"class":586,"line":948},13,[950,955,960,964,969,974],{"type":556,"tag":584,"props":951,"children":952},{"style":906},[953],{"type":561,"value":954},"  const",{"type":556,"tag":584,"props":956,"children":957},{"style":858},[958],{"type":561,"value":959}," dummy",{"type":556,"tag":584,"props":961,"children":962},{"style":830},[963],{"type":561,"value":920},{"type":556,"tag":584,"props":965,"children":966},{"style":906},[967],{"type":561,"value":968}," new",{"type":556,"tag":584,"props":970,"children":971},{"style":912},[972],{"type":561,"value":973}," ListNode",{"type":556,"tag":584,"props":975,"children":976},{"style":830},[977],{"type":561,"value":978},"();\n",{"type":556,"tag":584,"props":980,"children":982},{"class":586,"line":981},14,[983,988,993,998,1002,1007],{"type":556,"tag":584,"props":984,"children":985},{"style":858},[986],{"type":561,"value":987},"  dummy",{"type":556,"tag":584,"props":989,"children":990},{"style":830},[991],{"type":561,"value":992},".",{"type":556,"tag":584,"props":994,"children":995},{"style":858},[996],{"type":561,"value":997},"next",{"type":556,"tag":584,"props":999,"children":1000},{"style":830},[1001],{"type":561,"value":920},{"type":556,"tag":584,"props":1003,"children":1004},{"style":858},[1005],{"type":561,"value":1006}," head",{"type":556,"tag":584,"props":1008,"children":1009},{"style":830},[1010],{"type":561,"value":1011},";\n",{"type":556,"tag":584,"props":1013,"children":1015},{"class":586,"line":1014},15,[1016,1021,1026,1030,1034],{"type":556,"tag":584,"props":1017,"children":1018},{"style":906},[1019],{"type":561,"value":1020},"  let",{"type":556,"tag":584,"props":1022,"children":1023},{"style":858},[1024],{"type":561,"value":1025}," current",{"type":556,"tag":584,"props":1027,"children":1028},{"style":830},[1029],{"type":561,"value":920},{"type":556,"tag":584,"props":1031,"children":1032},{"style":858},[1033],{"type":561,"value":959},{"type":556,"tag":584,"props":1035,"children":1036},{"style":830},[1037],{"type":561,"value":1011},{"type":556,"tag":584,"props":1039,"children":1041},{"class":586,"line":1040},16,[1042,1047,1051,1056,1060,1064,1069,1073,1077,1081,1085,1089,1093],{"type":556,"tag":584,"props":1043,"children":1044},{"style":836},[1045],{"type":561,"value":1046},"  while",{"type":556,"tag":584,"props":1048,"children":1049},{"style":830},[1050],{"type":561,"value":930},{"type":556,"tag":584,"props":1052,"children":1053},{"style":858},[1054],{"type":561,"value":1055},"current",{"type":556,"tag":584,"props":1057,"children":1058},{"style":830},[1059],{"type":561,"value":992},{"type":556,"tag":584,"props":1061,"children":1062},{"style":858},[1063],{"type":561,"value":997},{"type":556,"tag":584,"props":1065,"children":1066},{"style":906},[1067],{"type":561,"value":1068}," &&",{"type":556,"tag":584,"props":1070,"children":1071},{"style":858},[1072],{"type":561,"value":1025},{"type":556,"tag":584,"props":1074,"children":1075},{"style":830},[1076],{"type":561,"value":992},{"type":556,"tag":584,"props":1078,"children":1079},{"style":858},[1080],{"type":561,"value":997},{"type":556,"tag":584,"props":1082,"children":1083},{"style":830},[1084],{"type":561,"value":992},{"type":556,"tag":584,"props":1086,"children":1087},{"style":858},[1088],{"type":561,"value":997},{"type":556,"tag":584,"props":1090,"children":1091},{"style":830},[1092],{"type":561,"value":940},{"type":556,"tag":584,"props":1094,"children":1095},{"style":830},[1096],{"type":561,"value":945},{"type":556,"tag":584,"props":1098,"children":1100},{"class":586,"line":1099},17,[1101],{"type":556,"tag":584,"props":1102,"children":1103},{"style":754},[1104],{"type":561,"value":1105},"    // 初始化双指针\n",{"type":556,"tag":584,"props":1107,"children":1109},{"class":586,"line":1108},18,[1110,1115,1120,1124,1128,1132,1136],{"type":556,"tag":584,"props":1111,"children":1112},{"style":906},[1113],{"type":561,"value":1114},"    const",{"type":556,"tag":584,"props":1116,"children":1117},{"style":858},[1118],{"type":561,"value":1119}," first",{"type":556,"tag":584,"props":1121,"children":1122},{"style":830},[1123],{"type":561,"value":920},{"type":556,"tag":584,"props":1125,"children":1126},{"style":858},[1127],{"type":561,"value":1025},{"type":556,"tag":584,"props":1129,"children":1130},{"style":830},[1131],{"type":561,"value":992},{"type":556,"tag":584,"props":1133,"children":1134},{"style":858},[1135],{"type":561,"value":997},{"type":556,"tag":584,"props":1137,"children":1138},{"style":830},[1139],{"type":561,"value":1011},{"type":556,"tag":584,"props":1141,"children":1143},{"class":586,"line":1142},19,[1144,1148,1153,1157,1161,1165,1169,1173,1177],{"type":556,"tag":584,"props":1145,"children":1146},{"style":906},[1147],{"type":561,"value":1114},{"type":556,"tag":584,"props":1149,"children":1150},{"style":858},[1151],{"type":561,"value":1152}," second",{"type":556,"tag":584,"props":1154,"children":1155},{"style":830},[1156],{"type":561,"value":920},{"type":556,"tag":584,"props":1158,"children":1159},{"style":858},[1160],{"type":561,"value":1025},{"type":556,"tag":584,"props":1162,"children":1163},{"style":830},[1164],{"type":561,"value":992},{"type":556,"tag":584,"props":1166,"children":1167},{"style":858},[1168],{"type":561,"value":997},{"type":556,"tag":584,"props":1170,"children":1171},{"style":830},[1172],{"type":561,"value":992},{"type":556,"tag":584,"props":1174,"children":1175},{"style":858},[1176],{"type":561,"value":997},{"type":556,"tag":584,"props":1178,"children":1179},{"style":830},[1180],{"type":561,"value":1011},{"type":556,"tag":584,"props":1182,"children":1184},{"class":586,"line":1183},20,[1185],{"type":556,"tag":584,"props":1186,"children":1188},{"emptyLinePlaceholder":1187},true,[1189],{"type":561,"value":1190},"\n",{"type":556,"tag":584,"props":1192,"children":1194},{"class":586,"line":1193},21,[1195],{"type":556,"tag":584,"props":1196,"children":1197},{"style":754},[1198],{"type":561,"value":1199},"    // 更新双指针和 current 指针\n",{"type":556,"tag":584,"props":1201,"children":1203},{"class":586,"line":1202},22,[1204,1209,1213,1217,1221,1225,1229,1233],{"type":556,"tag":584,"props":1205,"children":1206},{"style":858},[1207],{"type":561,"value":1208},"    first",{"type":556,"tag":584,"props":1210,"children":1211},{"style":830},[1212],{"type":561,"value":992},{"type":556,"tag":584,"props":1214,"children":1215},{"style":858},[1216],{"type":561,"value":997},{"type":556,"tag":584,"props":1218,"children":1219},{"style":830},[1220],{"type":561,"value":920},{"type":556,"tag":584,"props":1222,"children":1223},{"style":858},[1224],{"type":561,"value":1152},{"type":556,"tag":584,"props":1226,"children":1227},{"style":830},[1228],{"type":561,"value":992},{"type":556,"tag":584,"props":1230,"children":1231},{"style":858},[1232],{"type":561,"value":997},{"type":556,"tag":584,"props":1234,"children":1235},{"style":830},[1236],{"type":561,"value":1011},{"type":556,"tag":584,"props":1238,"children":1240},{"class":586,"line":1239},23,[1241,1246,1250,1254,1258,1262],{"type":556,"tag":584,"props":1242,"children":1243},{"style":858},[1244],{"type":561,"value":1245},"    second",{"type":556,"tag":584,"props":1247,"children":1248},{"style":830},[1249],{"type":561,"value":992},{"type":556,"tag":584,"props":1251,"children":1252},{"style":858},[1253],{"type":561,"value":997},{"type":556,"tag":584,"props":1255,"children":1256},{"style":830},[1257],{"type":561,"value":920},{"type":556,"tag":584,"props":1259,"children":1260},{"style":858},[1261],{"type":561,"value":1119},{"type":556,"tag":584,"props":1263,"children":1264},{"style":830},[1265],{"type":561,"value":1011},{"type":556,"tag":584,"props":1267,"children":1269},{"class":586,"line":1268},24,[1270,1275,1279,1283,1287,1291],{"type":556,"tag":584,"props":1271,"children":1272},{"style":858},[1273],{"type":561,"value":1274},"    current",{"type":556,"tag":584,"props":1276,"children":1277},{"style":830},[1278],{"type":561,"value":992},{"type":556,"tag":584,"props":1280,"children":1281},{"style":858},[1282],{"type":561,"value":997},{"type":556,"tag":584,"props":1284,"children":1285},{"style":830},[1286],{"type":561,"value":920},{"type":556,"tag":584,"props":1288,"children":1289},{"style":858},[1290],{"type":561,"value":1152},{"type":556,"tag":584,"props":1292,"children":1293},{"style":830},[1294],{"type":561,"value":1011},{"type":556,"tag":584,"props":1296,"children":1298},{"class":586,"line":1297},25,[1299],{"type":556,"tag":584,"props":1300,"children":1301},{"emptyLinePlaceholder":1187},[1302],{"type":561,"value":1190},{"type":556,"tag":584,"props":1304,"children":1306},{"class":586,"line":1305},26,[1307],{"type":556,"tag":584,"props":1308,"children":1309},{"style":754},[1310],{"type":561,"value":1311},"    // 指针移动\n",{"type":556,"tag":584,"props":1313,"children":1315},{"class":586,"line":1314},27,[1316,1320,1324,1328,1332,1336,1340,1344],{"type":556,"tag":584,"props":1317,"children":1318},{"style":858},[1319],{"type":561,"value":1274},{"type":556,"tag":584,"props":1321,"children":1322},{"style":830},[1323],{"type":561,"value":920},{"type":556,"tag":584,"props":1325,"children":1326},{"style":858},[1327],{"type":561,"value":1025},{"type":556,"tag":584,"props":1329,"children":1330},{"style":830},[1331],{"type":561,"value":992},{"type":556,"tag":584,"props":1333,"children":1334},{"style":858},[1335],{"type":561,"value":997},{"type":556,"tag":584,"props":1337,"children":1338},{"style":830},[1339],{"type":561,"value":992},{"type":556,"tag":584,"props":1341,"children":1342},{"style":858},[1343],{"type":561,"value":997},{"type":556,"tag":584,"props":1345,"children":1346},{"style":830},[1347],{"type":561,"value":1011},{"type":556,"tag":584,"props":1349,"children":1351},{"class":586,"line":1350},28,[1352],{"type":556,"tag":584,"props":1353,"children":1354},{"style":830},[1355],{"type":561,"value":1356},"  }\n",{"type":556,"tag":584,"props":1358,"children":1360},{"class":586,"line":1359},29,[1361,1366,1370,1374,1378],{"type":556,"tag":584,"props":1362,"children":1363},{"style":836},[1364],{"type":561,"value":1365},"  return",{"type":556,"tag":584,"props":1367,"children":1368},{"style":858},[1369],{"type":561,"value":959},{"type":556,"tag":584,"props":1371,"children":1372},{"style":830},[1373],{"type":561,"value":992},{"type":556,"tag":584,"props":1375,"children":1376},{"style":858},[1377],{"type":561,"value":997},{"type":556,"tag":584,"props":1379,"children":1380},{"style":830},[1381],{"type":561,"value":1011},{"type":556,"tag":584,"props":1383,"children":1385},{"class":586,"line":1384},30,[1386],{"type":556,"tag":584,"props":1387,"children":1388},{"style":830},[1389],{"type":561,"value":1390},"};\n",{"type":556,"tag":1392,"props":1393,"children":1394},"style",{},[1395],{"type":561,"value":1396},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":786,"depth":786,"links":1398},[1399,1400],{"id":682,"depth":596,"text":682},{"id":687,"depth":596,"text":687,"children":1401},[1402],{"id":693,"depth":768,"text":693},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1409,1411],{"_path":96,"title":95,"description":1410},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":102,"title":101,"description":1412},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1714279832250]