[{"data":1,"prerenderedAt":1373},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":506,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1368},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":98,"description":510,"url":511,"body":512,"_type":1363,"_id":1364,"_source":1365,"_file":1366,"_extension":1367},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":513,"children":514,"toc":1357},"root",[515,522,533,563,568,591,596,619,624,639,645,650,656,661,700,1351],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525,527],{"type":521,"value":526},"示例 1：\n",{"type":516,"tag":528,"props":529,"children":532},"img",{"alt":530,"src":531},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":516,"tag":534,"props":535,"children":538},"pre",{"className":536,"code":537,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[539],{"type":516,"tag":540,"props":541,"children":542},"code",{"__ignoreMap":509},[543,554],{"type":516,"tag":544,"props":545,"children":548},"span",{"class":546,"line":547},"line",1,[549],{"type":516,"tag":544,"props":550,"children":551},{},[552],{"type":521,"value":553},"输入：head = [1,2,3,4]\n",{"type":516,"tag":544,"props":555,"children":557},{"class":546,"line":556},2,[558],{"type":516,"tag":544,"props":559,"children":560},{},[561],{"type":521,"value":562},"输出：[2,1,4,3]\n",{"type":516,"tag":517,"props":564,"children":565},{},[566],{"type":521,"value":567},"示例 2：",{"type":516,"tag":534,"props":569,"children":571},{"className":536,"code":570,"language":521,"meta":509,"style":509},"输入：head = []\n输出：[]\n",[572],{"type":516,"tag":540,"props":573,"children":574},{"__ignoreMap":509},[575,583],{"type":516,"tag":544,"props":576,"children":577},{"class":546,"line":547},[578],{"type":516,"tag":544,"props":579,"children":580},{},[581],{"type":521,"value":582},"输入：head = []\n",{"type":516,"tag":544,"props":584,"children":585},{"class":546,"line":556},[586],{"type":516,"tag":544,"props":587,"children":588},{},[589],{"type":521,"value":590},"输出：[]\n",{"type":516,"tag":517,"props":592,"children":593},{},[594],{"type":521,"value":595},"示例 3：",{"type":516,"tag":534,"props":597,"children":599},{"className":536,"code":598,"language":521,"meta":509,"style":509},"输入：head = [1]\n输出：[1]\n",[600],{"type":516,"tag":540,"props":601,"children":602},{"__ignoreMap":509},[603,611],{"type":516,"tag":544,"props":604,"children":605},{"class":546,"line":547},[606],{"type":516,"tag":544,"props":607,"children":608},{},[609],{"type":521,"value":610},"输入：head = [1]\n",{"type":516,"tag":544,"props":612,"children":613},{"class":546,"line":556},[614],{"type":516,"tag":544,"props":615,"children":616},{},[617],{"type":521,"value":618},"输出：[1]\n",{"type":516,"tag":517,"props":620,"children":621},{},[622],{"type":521,"value":623},"提示：",{"type":516,"tag":625,"props":626,"children":627},"ul",{},[628,634],{"type":516,"tag":629,"props":630,"children":631},"li",{},[632],{"type":521,"value":633},"链表中节点的数目在范围 [0, 100] 内",{"type":516,"tag":629,"props":635,"children":636},{},[637],{"type":521,"value":638},"0 \u003C= Node.val \u003C= 100",{"type":516,"tag":640,"props":641,"children":643},"h2",{"id":642},"解题思路",[644],{"type":521,"value":642},{"type":516,"tag":640,"props":646,"children":648},{"id":647},"实现",[649],{"type":521,"value":647},{"type":516,"tag":651,"props":652,"children":654},"h3",{"id":653},"双指针",[655],{"type":521,"value":653},{"type":516,"tag":517,"props":657,"children":658},{},[659],{"type":521,"value":660},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":516,"tag":662,"props":663,"children":664},"ol",{},[665,670,675,680,685,690,695],{"type":516,"tag":629,"props":666,"children":667},{},[668],{"type":521,"value":669},"初始化 first 为第一个节点",{"type":516,"tag":629,"props":671,"children":672},{},[673],{"type":521,"value":674},"初始化 second 为第二个节点",{"type":516,"tag":629,"props":676,"children":677},{},[678],{"type":521,"value":679},"初始化 current 为 dummy",{"type":516,"tag":629,"props":681,"children":682},{},[683],{"type":521,"value":684},"first.next = second.next",{"type":516,"tag":629,"props":686,"children":687},{},[688],{"type":521,"value":689},"current.next = second",{"type":516,"tag":629,"props":691,"children":692},{},[693],{"type":521,"value":694},"current 移动 2 格",{"type":516,"tag":629,"props":696,"children":697},{},[698],{"type":521,"value":699},"重复执行",{"type":516,"tag":534,"props":701,"children":705},{"className":702,"code":703,"language":704,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[706],{"type":516,"tag":540,"props":707,"children":708},{"__ignoreMap":509},[709,718,726,735,744,753,762,771,779,822,852,860,906,939,972,998,1057,1066,1100,1141,1151,1160,1197,1226,1255,1263,1272,1308,1317,1342],{"type":516,"tag":544,"props":710,"children":711},{"class":546,"line":547},[712],{"type":516,"tag":544,"props":713,"children":715},{"style":714},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[716],{"type":521,"value":717},"/**\n",{"type":516,"tag":544,"props":719,"children":720},{"class":546,"line":556},[721],{"type":516,"tag":544,"props":722,"children":723},{"style":714},[724],{"type":521,"value":725}," * Definition for singly-linked list.\n",{"type":516,"tag":544,"props":727,"children":729},{"class":546,"line":728},3,[730],{"type":516,"tag":544,"props":731,"children":732},{"style":714},[733],{"type":521,"value":734}," * function ListNode(val, next) {\n",{"type":516,"tag":544,"props":736,"children":738},{"class":546,"line":737},4,[739],{"type":516,"tag":544,"props":740,"children":741},{"style":714},[742],{"type":521,"value":743}," *     this.val = (val===undefined ? 0 : val)\n",{"type":516,"tag":544,"props":745,"children":747},{"class":546,"line":746},5,[748],{"type":516,"tag":544,"props":749,"children":750},{"style":714},[751],{"type":521,"value":752}," *     this.next = (next===undefined ? null : next)\n",{"type":516,"tag":544,"props":754,"children":756},{"class":546,"line":755},6,[757],{"type":516,"tag":544,"props":758,"children":759},{"style":714},[760],{"type":521,"value":761}," * }\n",{"type":516,"tag":544,"props":763,"children":765},{"class":546,"line":764},7,[766],{"type":516,"tag":544,"props":767,"children":768},{"style":714},[769],{"type":521,"value":770}," */\n",{"type":516,"tag":544,"props":772,"children":774},{"class":546,"line":773},8,[775],{"type":516,"tag":544,"props":776,"children":777},{"style":714},[778],{"type":521,"value":717},{"type":516,"tag":544,"props":780,"children":782},{"class":546,"line":781},9,[783,788,794,800,805,811,816],{"type":516,"tag":544,"props":784,"children":785},{"style":714},[786],{"type":521,"value":787}," * ",{"type":516,"tag":544,"props":789,"children":791},{"style":790},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[792],{"type":521,"value":793},"@",{"type":516,"tag":544,"props":795,"children":797},{"style":796},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[798],{"type":521,"value":799},"param",{"type":516,"tag":544,"props":801,"children":802},{"style":790},[803],{"type":521,"value":804}," {",{"type":516,"tag":544,"props":806,"children":808},{"style":807},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[809],{"type":521,"value":810},"ListNode",{"type":516,"tag":544,"props":812,"children":813},{"style":790},[814],{"type":521,"value":815},"}",{"type":516,"tag":544,"props":817,"children":819},{"style":818},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[820],{"type":521,"value":821}," head\n",{"type":516,"tag":544,"props":823,"children":825},{"class":546,"line":824},10,[826,830,834,839,843,847],{"type":516,"tag":544,"props":827,"children":828},{"style":714},[829],{"type":521,"value":787},{"type":516,"tag":544,"props":831,"children":832},{"style":790},[833],{"type":521,"value":793},{"type":516,"tag":544,"props":835,"children":836},{"style":796},[837],{"type":521,"value":838},"return",{"type":516,"tag":544,"props":840,"children":841},{"style":790},[842],{"type":521,"value":804},{"type":516,"tag":544,"props":844,"children":845},{"style":807},[846],{"type":521,"value":810},{"type":516,"tag":544,"props":848,"children":849},{"style":790},[850],{"type":521,"value":851},"}\n",{"type":516,"tag":544,"props":853,"children":855},{"class":546,"line":854},11,[856],{"type":516,"tag":544,"props":857,"children":858},{"style":714},[859],{"type":521,"value":770},{"type":516,"tag":544,"props":861,"children":863},{"class":546,"line":862},12,[864,870,876,881,886,891,896,901],{"type":516,"tag":544,"props":865,"children":867},{"style":866},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[868],{"type":521,"value":869},"var",{"type":516,"tag":544,"props":871,"children":873},{"style":872},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[874],{"type":521,"value":875}," swapPairs",{"type":516,"tag":544,"props":877,"children":878},{"style":790},[879],{"type":521,"value":880}," =",{"type":516,"tag":544,"props":882,"children":883},{"style":866},[884],{"type":521,"value":885}," function",{"type":516,"tag":544,"props":887,"children":888},{"style":790},[889],{"type":521,"value":890}," (",{"type":516,"tag":544,"props":892,"children":893},{"style":818},[894],{"type":521,"value":895},"head",{"type":516,"tag":544,"props":897,"children":898},{"style":790},[899],{"type":521,"value":900},")",{"type":516,"tag":544,"props":902,"children":903},{"style":790},[904],{"type":521,"value":905}," {\n",{"type":516,"tag":544,"props":907,"children":909},{"class":546,"line":908},13,[910,915,920,924,929,934],{"type":516,"tag":544,"props":911,"children":912},{"style":866},[913],{"type":521,"value":914},"  const",{"type":516,"tag":544,"props":916,"children":917},{"style":818},[918],{"type":521,"value":919}," dummy",{"type":516,"tag":544,"props":921,"children":922},{"style":790},[923],{"type":521,"value":880},{"type":516,"tag":544,"props":925,"children":926},{"style":866},[927],{"type":521,"value":928}," new",{"type":516,"tag":544,"props":930,"children":931},{"style":872},[932],{"type":521,"value":933}," ListNode",{"type":516,"tag":544,"props":935,"children":936},{"style":790},[937],{"type":521,"value":938},"();\n",{"type":516,"tag":544,"props":940,"children":942},{"class":546,"line":941},14,[943,948,953,958,962,967],{"type":516,"tag":544,"props":944,"children":945},{"style":818},[946],{"type":521,"value":947},"  dummy",{"type":516,"tag":544,"props":949,"children":950},{"style":790},[951],{"type":521,"value":952},".",{"type":516,"tag":544,"props":954,"children":955},{"style":818},[956],{"type":521,"value":957},"next",{"type":516,"tag":544,"props":959,"children":960},{"style":790},[961],{"type":521,"value":880},{"type":516,"tag":544,"props":963,"children":964},{"style":818},[965],{"type":521,"value":966}," head",{"type":516,"tag":544,"props":968,"children":969},{"style":790},[970],{"type":521,"value":971},";\n",{"type":516,"tag":544,"props":973,"children":975},{"class":546,"line":974},15,[976,981,986,990,994],{"type":516,"tag":544,"props":977,"children":978},{"style":866},[979],{"type":521,"value":980},"  let",{"type":516,"tag":544,"props":982,"children":983},{"style":818},[984],{"type":521,"value":985}," current",{"type":516,"tag":544,"props":987,"children":988},{"style":790},[989],{"type":521,"value":880},{"type":516,"tag":544,"props":991,"children":992},{"style":818},[993],{"type":521,"value":919},{"type":516,"tag":544,"props":995,"children":996},{"style":790},[997],{"type":521,"value":971},{"type":516,"tag":544,"props":999,"children":1001},{"class":546,"line":1000},16,[1002,1007,1011,1016,1020,1024,1029,1033,1037,1041,1045,1049,1053],{"type":516,"tag":544,"props":1003,"children":1004},{"style":796},[1005],{"type":521,"value":1006},"  while",{"type":516,"tag":544,"props":1008,"children":1009},{"style":790},[1010],{"type":521,"value":890},{"type":516,"tag":544,"props":1012,"children":1013},{"style":818},[1014],{"type":521,"value":1015},"current",{"type":516,"tag":544,"props":1017,"children":1018},{"style":790},[1019],{"type":521,"value":952},{"type":516,"tag":544,"props":1021,"children":1022},{"style":818},[1023],{"type":521,"value":957},{"type":516,"tag":544,"props":1025,"children":1026},{"style":866},[1027],{"type":521,"value":1028}," &&",{"type":516,"tag":544,"props":1030,"children":1031},{"style":818},[1032],{"type":521,"value":985},{"type":516,"tag":544,"props":1034,"children":1035},{"style":790},[1036],{"type":521,"value":952},{"type":516,"tag":544,"props":1038,"children":1039},{"style":818},[1040],{"type":521,"value":957},{"type":516,"tag":544,"props":1042,"children":1043},{"style":790},[1044],{"type":521,"value":952},{"type":516,"tag":544,"props":1046,"children":1047},{"style":818},[1048],{"type":521,"value":957},{"type":516,"tag":544,"props":1050,"children":1051},{"style":790},[1052],{"type":521,"value":900},{"type":516,"tag":544,"props":1054,"children":1055},{"style":790},[1056],{"type":521,"value":905},{"type":516,"tag":544,"props":1058,"children":1060},{"class":546,"line":1059},17,[1061],{"type":516,"tag":544,"props":1062,"children":1063},{"style":714},[1064],{"type":521,"value":1065},"    // 初始化双指针\n",{"type":516,"tag":544,"props":1067,"children":1069},{"class":546,"line":1068},18,[1070,1075,1080,1084,1088,1092,1096],{"type":516,"tag":544,"props":1071,"children":1072},{"style":866},[1073],{"type":521,"value":1074},"    const",{"type":516,"tag":544,"props":1076,"children":1077},{"style":818},[1078],{"type":521,"value":1079}," first",{"type":516,"tag":544,"props":1081,"children":1082},{"style":790},[1083],{"type":521,"value":880},{"type":516,"tag":544,"props":1085,"children":1086},{"style":818},[1087],{"type":521,"value":985},{"type":516,"tag":544,"props":1089,"children":1090},{"style":790},[1091],{"type":521,"value":952},{"type":516,"tag":544,"props":1093,"children":1094},{"style":818},[1095],{"type":521,"value":957},{"type":516,"tag":544,"props":1097,"children":1098},{"style":790},[1099],{"type":521,"value":971},{"type":516,"tag":544,"props":1101,"children":1103},{"class":546,"line":1102},19,[1104,1108,1113,1117,1121,1125,1129,1133,1137],{"type":516,"tag":544,"props":1105,"children":1106},{"style":866},[1107],{"type":521,"value":1074},{"type":516,"tag":544,"props":1109,"children":1110},{"style":818},[1111],{"type":521,"value":1112}," second",{"type":516,"tag":544,"props":1114,"children":1115},{"style":790},[1116],{"type":521,"value":880},{"type":516,"tag":544,"props":1118,"children":1119},{"style":818},[1120],{"type":521,"value":985},{"type":516,"tag":544,"props":1122,"children":1123},{"style":790},[1124],{"type":521,"value":952},{"type":516,"tag":544,"props":1126,"children":1127},{"style":818},[1128],{"type":521,"value":957},{"type":516,"tag":544,"props":1130,"children":1131},{"style":790},[1132],{"type":521,"value":952},{"type":516,"tag":544,"props":1134,"children":1135},{"style":818},[1136],{"type":521,"value":957},{"type":516,"tag":544,"props":1138,"children":1139},{"style":790},[1140],{"type":521,"value":971},{"type":516,"tag":544,"props":1142,"children":1144},{"class":546,"line":1143},20,[1145],{"type":516,"tag":544,"props":1146,"children":1148},{"emptyLinePlaceholder":1147},true,[1149],{"type":521,"value":1150},"\n",{"type":516,"tag":544,"props":1152,"children":1154},{"class":546,"line":1153},21,[1155],{"type":516,"tag":544,"props":1156,"children":1157},{"style":714},[1158],{"type":521,"value":1159},"    // 更新双指针和 current 指针\n",{"type":516,"tag":544,"props":1161,"children":1163},{"class":546,"line":1162},22,[1164,1169,1173,1177,1181,1185,1189,1193],{"type":516,"tag":544,"props":1165,"children":1166},{"style":818},[1167],{"type":521,"value":1168},"    first",{"type":516,"tag":544,"props":1170,"children":1171},{"style":790},[1172],{"type":521,"value":952},{"type":516,"tag":544,"props":1174,"children":1175},{"style":818},[1176],{"type":521,"value":957},{"type":516,"tag":544,"props":1178,"children":1179},{"style":790},[1180],{"type":521,"value":880},{"type":516,"tag":544,"props":1182,"children":1183},{"style":818},[1184],{"type":521,"value":1112},{"type":516,"tag":544,"props":1186,"children":1187},{"style":790},[1188],{"type":521,"value":952},{"type":516,"tag":544,"props":1190,"children":1191},{"style":818},[1192],{"type":521,"value":957},{"type":516,"tag":544,"props":1194,"children":1195},{"style":790},[1196],{"type":521,"value":971},{"type":516,"tag":544,"props":1198,"children":1200},{"class":546,"line":1199},23,[1201,1206,1210,1214,1218,1222],{"type":516,"tag":544,"props":1202,"children":1203},{"style":818},[1204],{"type":521,"value":1205},"    second",{"type":516,"tag":544,"props":1207,"children":1208},{"style":790},[1209],{"type":521,"value":952},{"type":516,"tag":544,"props":1211,"children":1212},{"style":818},[1213],{"type":521,"value":957},{"type":516,"tag":544,"props":1215,"children":1216},{"style":790},[1217],{"type":521,"value":880},{"type":516,"tag":544,"props":1219,"children":1220},{"style":818},[1221],{"type":521,"value":1079},{"type":516,"tag":544,"props":1223,"children":1224},{"style":790},[1225],{"type":521,"value":971},{"type":516,"tag":544,"props":1227,"children":1229},{"class":546,"line":1228},24,[1230,1235,1239,1243,1247,1251],{"type":516,"tag":544,"props":1231,"children":1232},{"style":818},[1233],{"type":521,"value":1234},"    current",{"type":516,"tag":544,"props":1236,"children":1237},{"style":790},[1238],{"type":521,"value":952},{"type":516,"tag":544,"props":1240,"children":1241},{"style":818},[1242],{"type":521,"value":957},{"type":516,"tag":544,"props":1244,"children":1245},{"style":790},[1246],{"type":521,"value":880},{"type":516,"tag":544,"props":1248,"children":1249},{"style":818},[1250],{"type":521,"value":1112},{"type":516,"tag":544,"props":1252,"children":1253},{"style":790},[1254],{"type":521,"value":971},{"type":516,"tag":544,"props":1256,"children":1258},{"class":546,"line":1257},25,[1259],{"type":516,"tag":544,"props":1260,"children":1261},{"emptyLinePlaceholder":1147},[1262],{"type":521,"value":1150},{"type":516,"tag":544,"props":1264,"children":1266},{"class":546,"line":1265},26,[1267],{"type":516,"tag":544,"props":1268,"children":1269},{"style":714},[1270],{"type":521,"value":1271},"    // 指针移动\n",{"type":516,"tag":544,"props":1273,"children":1275},{"class":546,"line":1274},27,[1276,1280,1284,1288,1292,1296,1300,1304],{"type":516,"tag":544,"props":1277,"children":1278},{"style":818},[1279],{"type":521,"value":1234},{"type":516,"tag":544,"props":1281,"children":1282},{"style":790},[1283],{"type":521,"value":880},{"type":516,"tag":544,"props":1285,"children":1286},{"style":818},[1287],{"type":521,"value":985},{"type":516,"tag":544,"props":1289,"children":1290},{"style":790},[1291],{"type":521,"value":952},{"type":516,"tag":544,"props":1293,"children":1294},{"style":818},[1295],{"type":521,"value":957},{"type":516,"tag":544,"props":1297,"children":1298},{"style":790},[1299],{"type":521,"value":952},{"type":516,"tag":544,"props":1301,"children":1302},{"style":818},[1303],{"type":521,"value":957},{"type":516,"tag":544,"props":1305,"children":1306},{"style":790},[1307],{"type":521,"value":971},{"type":516,"tag":544,"props":1309,"children":1311},{"class":546,"line":1310},28,[1312],{"type":516,"tag":544,"props":1313,"children":1314},{"style":790},[1315],{"type":521,"value":1316},"  }\n",{"type":516,"tag":544,"props":1318,"children":1320},{"class":546,"line":1319},29,[1321,1326,1330,1334,1338],{"type":516,"tag":544,"props":1322,"children":1323},{"style":796},[1324],{"type":521,"value":1325},"  return",{"type":516,"tag":544,"props":1327,"children":1328},{"style":818},[1329],{"type":521,"value":919},{"type":516,"tag":544,"props":1331,"children":1332},{"style":790},[1333],{"type":521,"value":952},{"type":516,"tag":544,"props":1335,"children":1336},{"style":818},[1337],{"type":521,"value":957},{"type":516,"tag":544,"props":1339,"children":1340},{"style":790},[1341],{"type":521,"value":971},{"type":516,"tag":544,"props":1343,"children":1345},{"class":546,"line":1344},30,[1346],{"type":516,"tag":544,"props":1347,"children":1348},{"style":790},[1349],{"type":521,"value":1350},"};\n",{"type":516,"tag":1352,"props":1353,"children":1354},"style",{},[1355],{"type":521,"value":1356},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":746,"depth":746,"links":1358},[1359,1360],{"id":642,"depth":556,"text":642},{"id":647,"depth":556,"text":647,"children":1361},[1362],{"id":653,"depth":728,"text":653},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1369,1371],{"_path":96,"title":95,"description":1370},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":102,"title":101,"description":1372},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1714058125176]