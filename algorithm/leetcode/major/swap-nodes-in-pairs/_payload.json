[{"data":1,"prerenderedAt":1305},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/swap-nodes-in-pairs":460,"/algorithm/leetcode/major/swap-nodes-in-pairs-surround":1300},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":93,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":92,"description":464,"url":465,"body":466,"_type":1295,"_id":1296,"_source":1297,"_file":1298,"_extension":1299},"major",false,"","给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。","https://leetcode.cn/problems/swap-nodes-in-pairs",{"type":467,"children":468,"toc":1289},"root",[469,476,487,517,522,545,550,573,578,593,599,604,610,615,654,1283],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479,481],{"type":475,"value":480},"示例 1：\n",{"type":470,"tag":482,"props":483,"children":486},"img",{"alt":484,"src":485},"swap_ex1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.24_swap_ex1.png",[],{"type":470,"tag":488,"props":489,"children":492},"pre",{"className":490,"code":491,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：head = [1,2,3,4]\n输出：[2,1,4,3]\n",[493],{"type":470,"tag":494,"props":495,"children":496},"code",{"__ignoreMap":463},[497,508],{"type":470,"tag":498,"props":499,"children":502},"span",{"class":500,"line":501},"line",1,[503],{"type":470,"tag":498,"props":504,"children":505},{},[506],{"type":475,"value":507},"输入：head = [1,2,3,4]\n",{"type":470,"tag":498,"props":509,"children":511},{"class":500,"line":510},2,[512],{"type":470,"tag":498,"props":513,"children":514},{},[515],{"type":475,"value":516},"输出：[2,1,4,3]\n",{"type":470,"tag":471,"props":518,"children":519},{},[520],{"type":475,"value":521},"示例 2：",{"type":470,"tag":488,"props":523,"children":525},{"className":490,"code":524,"language":475,"meta":463,"style":463},"输入：head = []\n输出：[]\n",[526],{"type":470,"tag":494,"props":527,"children":528},{"__ignoreMap":463},[529,537],{"type":470,"tag":498,"props":530,"children":531},{"class":500,"line":501},[532],{"type":470,"tag":498,"props":533,"children":534},{},[535],{"type":475,"value":536},"输入：head = []\n",{"type":470,"tag":498,"props":538,"children":539},{"class":500,"line":510},[540],{"type":470,"tag":498,"props":541,"children":542},{},[543],{"type":475,"value":544},"输出：[]\n",{"type":470,"tag":471,"props":546,"children":547},{},[548],{"type":475,"value":549},"示例 3：",{"type":470,"tag":488,"props":551,"children":553},{"className":490,"code":552,"language":475,"meta":463,"style":463},"输入：head = [1]\n输出：[1]\n",[554],{"type":470,"tag":494,"props":555,"children":556},{"__ignoreMap":463},[557,565],{"type":470,"tag":498,"props":558,"children":559},{"class":500,"line":501},[560],{"type":470,"tag":498,"props":561,"children":562},{},[563],{"type":475,"value":564},"输入：head = [1]\n",{"type":470,"tag":498,"props":566,"children":567},{"class":500,"line":510},[568],{"type":470,"tag":498,"props":569,"children":570},{},[571],{"type":475,"value":572},"输出：[1]\n",{"type":470,"tag":471,"props":574,"children":575},{},[576],{"type":475,"value":577},"提示：",{"type":470,"tag":579,"props":580,"children":581},"ul",{},[582,588],{"type":470,"tag":583,"props":584,"children":585},"li",{},[586],{"type":475,"value":587},"链表中节点的数目在范围 [0, 100] 内",{"type":470,"tag":583,"props":589,"children":590},{},[591],{"type":475,"value":592},"0 \u003C= Node.val \u003C= 100",{"type":470,"tag":594,"props":595,"children":597},"h2",{"id":596},"解题思路",[598],{"type":475,"value":596},{"type":470,"tag":594,"props":600,"children":602},{"id":601},"实现",[603],{"type":475,"value":601},{"type":470,"tag":605,"props":606,"children":608},"h3",{"id":607},"双指针",[609],{"type":475,"value":607},{"type":470,"tag":471,"props":611,"children":612},{},[613],{"type":475,"value":614},"设置一个 dummy 节点简化操作，dummy.next 指向 head",{"type":470,"tag":616,"props":617,"children":618},"ol",{},[619,624,629,634,639,644,649],{"type":470,"tag":583,"props":620,"children":621},{},[622],{"type":475,"value":623},"初始化 first 为第一个节点",{"type":470,"tag":583,"props":625,"children":626},{},[627],{"type":475,"value":628},"初始化 second 为第二个节点",{"type":470,"tag":583,"props":630,"children":631},{},[632],{"type":475,"value":633},"初始化 current 为 dummy",{"type":470,"tag":583,"props":635,"children":636},{},[637],{"type":475,"value":638},"first.next = second.next",{"type":470,"tag":583,"props":640,"children":641},{},[642],{"type":475,"value":643},"current.next = second",{"type":470,"tag":583,"props":645,"children":646},{},[647],{"type":475,"value":648},"current 移动 2 格",{"type":470,"tag":583,"props":650,"children":651},{},[652],{"type":475,"value":653},"重复执行",{"type":470,"tag":488,"props":655,"children":659},{"className":656,"code":657,"language":658,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function (head) {\n  const dummy = new ListNode();\n  dummy.next = head;\n  let current = dummy;\n  while (current.next && current.next.next) {\n    // 初始化双指针\n    const first = current.next;\n    const second = current.next.next;\n\n    // 更新双指针和 current 指针\n    first.next = second.next;\n    second.next = first;\n    current.next = second;\n\n    // 指针移动\n    current = current.next.next;\n  }\n  return dummy.next;\n};\n","js",[660],{"type":470,"tag":494,"props":661,"children":662},{"__ignoreMap":463},[663,672,680,689,698,707,716,725,733,760,778,786,830,870,903,929,985,994,1028,1069,1079,1088,1125,1154,1183,1191,1200,1236,1245,1270],{"type":470,"tag":498,"props":664,"children":665},{"class":500,"line":501},[666],{"type":470,"tag":498,"props":667,"children":669},{"style":668},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[670],{"type":475,"value":671},"/**\n",{"type":470,"tag":498,"props":673,"children":674},{"class":500,"line":510},[675],{"type":470,"tag":498,"props":676,"children":677},{"style":668},[678],{"type":475,"value":679}," * Definition for singly-linked list.\n",{"type":470,"tag":498,"props":681,"children":683},{"class":500,"line":682},3,[684],{"type":470,"tag":498,"props":685,"children":686},{"style":668},[687],{"type":475,"value":688}," * function ListNode(val, next) {\n",{"type":470,"tag":498,"props":690,"children":692},{"class":500,"line":691},4,[693],{"type":470,"tag":498,"props":694,"children":695},{"style":668},[696],{"type":475,"value":697}," *     this.val = (val===undefined ? 0 : val)\n",{"type":470,"tag":498,"props":699,"children":701},{"class":500,"line":700},5,[702],{"type":470,"tag":498,"props":703,"children":704},{"style":668},[705],{"type":475,"value":706}," *     this.next = (next===undefined ? null : next)\n",{"type":470,"tag":498,"props":708,"children":710},{"class":500,"line":709},6,[711],{"type":470,"tag":498,"props":712,"children":713},{"style":668},[714],{"type":475,"value":715}," * }\n",{"type":470,"tag":498,"props":717,"children":719},{"class":500,"line":718},7,[720],{"type":470,"tag":498,"props":721,"children":722},{"style":668},[723],{"type":475,"value":724}," */\n",{"type":470,"tag":498,"props":726,"children":728},{"class":500,"line":727},8,[729],{"type":470,"tag":498,"props":730,"children":731},{"style":668},[732],{"type":475,"value":671},{"type":470,"tag":498,"props":734,"children":736},{"class":500,"line":735},9,[737,742,748,754],{"type":470,"tag":498,"props":738,"children":739},{"style":668},[740],{"type":475,"value":741}," * ",{"type":470,"tag":498,"props":743,"children":745},{"style":744},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[746],{"type":475,"value":747},"@param",{"type":470,"tag":498,"props":749,"children":751},{"style":750},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[752],{"type":475,"value":753}," {ListNode}",{"type":470,"tag":498,"props":755,"children":757},{"style":756},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[758],{"type":475,"value":759}," head\n",{"type":470,"tag":498,"props":761,"children":763},{"class":500,"line":762},10,[764,768,773],{"type":470,"tag":498,"props":765,"children":766},{"style":668},[767],{"type":475,"value":741},{"type":470,"tag":498,"props":769,"children":770},{"style":744},[771],{"type":475,"value":772},"@return",{"type":470,"tag":498,"props":774,"children":775},{"style":750},[776],{"type":475,"value":777}," {ListNode}\n",{"type":470,"tag":498,"props":779,"children":781},{"class":500,"line":780},11,[782],{"type":470,"tag":498,"props":783,"children":784},{"style":668},[785],{"type":475,"value":724},{"type":470,"tag":498,"props":787,"children":789},{"class":500,"line":788},12,[790,796,802,808,813,819,825],{"type":470,"tag":498,"props":791,"children":793},{"style":792},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[794],{"type":475,"value":795},"var",{"type":470,"tag":498,"props":797,"children":799},{"style":798},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[800],{"type":475,"value":801}," swapPairs",{"type":470,"tag":498,"props":803,"children":805},{"style":804},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[806],{"type":475,"value":807}," =",{"type":470,"tag":498,"props":809,"children":810},{"style":792},[811],{"type":475,"value":812}," function",{"type":470,"tag":498,"props":814,"children":816},{"style":815},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[817],{"type":475,"value":818}," (",{"type":470,"tag":498,"props":820,"children":822},{"style":821},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[823],{"type":475,"value":824},"head",{"type":470,"tag":498,"props":826,"children":827},{"style":815},[828],{"type":475,"value":829},") {\n",{"type":470,"tag":498,"props":831,"children":833},{"class":500,"line":832},13,[834,839,845,849,854,859,864],{"type":470,"tag":498,"props":835,"children":836},{"style":792},[837],{"type":475,"value":838},"  const",{"type":470,"tag":498,"props":840,"children":842},{"style":841},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[843],{"type":475,"value":844}," dummy",{"type":470,"tag":498,"props":846,"children":847},{"style":804},[848],{"type":475,"value":807},{"type":470,"tag":498,"props":850,"children":851},{"style":804},[852],{"type":475,"value":853}," new",{"type":470,"tag":498,"props":855,"children":856},{"style":798},[857],{"type":475,"value":858}," ListNode",{"type":470,"tag":498,"props":860,"children":861},{"style":815},[862],{"type":475,"value":863},"()",{"type":470,"tag":498,"props":865,"children":867},{"style":866},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[868],{"type":475,"value":869},";\n",{"type":470,"tag":498,"props":871,"children":873},{"class":500,"line":872},14,[874,879,885,890,894,899],{"type":470,"tag":498,"props":875,"children":876},{"style":841},[877],{"type":475,"value":878},"  dummy",{"type":470,"tag":498,"props":880,"children":882},{"style":881},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[883],{"type":475,"value":884},".",{"type":470,"tag":498,"props":886,"children":887},{"style":841},[888],{"type":475,"value":889},"next",{"type":470,"tag":498,"props":891,"children":892},{"style":804},[893],{"type":475,"value":807},{"type":470,"tag":498,"props":895,"children":896},{"style":841},[897],{"type":475,"value":898}," head",{"type":470,"tag":498,"props":900,"children":901},{"style":866},[902],{"type":475,"value":869},{"type":470,"tag":498,"props":904,"children":906},{"class":500,"line":905},15,[907,912,917,921,925],{"type":470,"tag":498,"props":908,"children":909},{"style":792},[910],{"type":475,"value":911},"  let",{"type":470,"tag":498,"props":913,"children":914},{"style":841},[915],{"type":475,"value":916}," current",{"type":470,"tag":498,"props":918,"children":919},{"style":804},[920],{"type":475,"value":807},{"type":470,"tag":498,"props":922,"children":923},{"style":841},[924],{"type":475,"value":844},{"type":470,"tag":498,"props":926,"children":927},{"style":866},[928],{"type":475,"value":869},{"type":470,"tag":498,"props":930,"children":932},{"class":500,"line":931},16,[933,939,943,948,952,956,961,965,969,973,977,981],{"type":470,"tag":498,"props":934,"children":936},{"style":935},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[937],{"type":475,"value":938},"  while",{"type":470,"tag":498,"props":940,"children":941},{"style":815},[942],{"type":475,"value":818},{"type":470,"tag":498,"props":944,"children":945},{"style":841},[946],{"type":475,"value":947},"current",{"type":470,"tag":498,"props":949,"children":950},{"style":881},[951],{"type":475,"value":884},{"type":470,"tag":498,"props":953,"children":954},{"style":841},[955],{"type":475,"value":889},{"type":470,"tag":498,"props":957,"children":958},{"style":804},[959],{"type":475,"value":960}," &&",{"type":470,"tag":498,"props":962,"children":963},{"style":841},[964],{"type":475,"value":916},{"type":470,"tag":498,"props":966,"children":967},{"style":881},[968],{"type":475,"value":884},{"type":470,"tag":498,"props":970,"children":971},{"style":841},[972],{"type":475,"value":889},{"type":470,"tag":498,"props":974,"children":975},{"style":881},[976],{"type":475,"value":884},{"type":470,"tag":498,"props":978,"children":979},{"style":841},[980],{"type":475,"value":889},{"type":470,"tag":498,"props":982,"children":983},{"style":815},[984],{"type":475,"value":829},{"type":470,"tag":498,"props":986,"children":988},{"class":500,"line":987},17,[989],{"type":470,"tag":498,"props":990,"children":991},{"style":668},[992],{"type":475,"value":993},"    // 初始化双指针\n",{"type":470,"tag":498,"props":995,"children":997},{"class":500,"line":996},18,[998,1003,1008,1012,1016,1020,1024],{"type":470,"tag":498,"props":999,"children":1000},{"style":792},[1001],{"type":475,"value":1002},"    const",{"type":470,"tag":498,"props":1004,"children":1005},{"style":841},[1006],{"type":475,"value":1007}," first",{"type":470,"tag":498,"props":1009,"children":1010},{"style":804},[1011],{"type":475,"value":807},{"type":470,"tag":498,"props":1013,"children":1014},{"style":841},[1015],{"type":475,"value":916},{"type":470,"tag":498,"props":1017,"children":1018},{"style":881},[1019],{"type":475,"value":884},{"type":470,"tag":498,"props":1021,"children":1022},{"style":841},[1023],{"type":475,"value":889},{"type":470,"tag":498,"props":1025,"children":1026},{"style":866},[1027],{"type":475,"value":869},{"type":470,"tag":498,"props":1029,"children":1031},{"class":500,"line":1030},19,[1032,1036,1041,1045,1049,1053,1057,1061,1065],{"type":470,"tag":498,"props":1033,"children":1034},{"style":792},[1035],{"type":475,"value":1002},{"type":470,"tag":498,"props":1037,"children":1038},{"style":841},[1039],{"type":475,"value":1040}," second",{"type":470,"tag":498,"props":1042,"children":1043},{"style":804},[1044],{"type":475,"value":807},{"type":470,"tag":498,"props":1046,"children":1047},{"style":841},[1048],{"type":475,"value":916},{"type":470,"tag":498,"props":1050,"children":1051},{"style":881},[1052],{"type":475,"value":884},{"type":470,"tag":498,"props":1054,"children":1055},{"style":841},[1056],{"type":475,"value":889},{"type":470,"tag":498,"props":1058,"children":1059},{"style":881},[1060],{"type":475,"value":884},{"type":470,"tag":498,"props":1062,"children":1063},{"style":841},[1064],{"type":475,"value":889},{"type":470,"tag":498,"props":1066,"children":1067},{"style":866},[1068],{"type":475,"value":869},{"type":470,"tag":498,"props":1070,"children":1072},{"class":500,"line":1071},20,[1073],{"type":470,"tag":498,"props":1074,"children":1076},{"emptyLinePlaceholder":1075},true,[1077],{"type":475,"value":1078},"\n",{"type":470,"tag":498,"props":1080,"children":1082},{"class":500,"line":1081},21,[1083],{"type":470,"tag":498,"props":1084,"children":1085},{"style":668},[1086],{"type":475,"value":1087},"    // 更新双指针和 current 指针\n",{"type":470,"tag":498,"props":1089,"children":1091},{"class":500,"line":1090},22,[1092,1097,1101,1105,1109,1113,1117,1121],{"type":470,"tag":498,"props":1093,"children":1094},{"style":841},[1095],{"type":475,"value":1096},"    first",{"type":470,"tag":498,"props":1098,"children":1099},{"style":881},[1100],{"type":475,"value":884},{"type":470,"tag":498,"props":1102,"children":1103},{"style":841},[1104],{"type":475,"value":889},{"type":470,"tag":498,"props":1106,"children":1107},{"style":804},[1108],{"type":475,"value":807},{"type":470,"tag":498,"props":1110,"children":1111},{"style":841},[1112],{"type":475,"value":1040},{"type":470,"tag":498,"props":1114,"children":1115},{"style":881},[1116],{"type":475,"value":884},{"type":470,"tag":498,"props":1118,"children":1119},{"style":841},[1120],{"type":475,"value":889},{"type":470,"tag":498,"props":1122,"children":1123},{"style":866},[1124],{"type":475,"value":869},{"type":470,"tag":498,"props":1126,"children":1128},{"class":500,"line":1127},23,[1129,1134,1138,1142,1146,1150],{"type":470,"tag":498,"props":1130,"children":1131},{"style":841},[1132],{"type":475,"value":1133},"    second",{"type":470,"tag":498,"props":1135,"children":1136},{"style":881},[1137],{"type":475,"value":884},{"type":470,"tag":498,"props":1139,"children":1140},{"style":841},[1141],{"type":475,"value":889},{"type":470,"tag":498,"props":1143,"children":1144},{"style":804},[1145],{"type":475,"value":807},{"type":470,"tag":498,"props":1147,"children":1148},{"style":841},[1149],{"type":475,"value":1007},{"type":470,"tag":498,"props":1151,"children":1152},{"style":866},[1153],{"type":475,"value":869},{"type":470,"tag":498,"props":1155,"children":1157},{"class":500,"line":1156},24,[1158,1163,1167,1171,1175,1179],{"type":470,"tag":498,"props":1159,"children":1160},{"style":841},[1161],{"type":475,"value":1162},"    current",{"type":470,"tag":498,"props":1164,"children":1165},{"style":881},[1166],{"type":475,"value":884},{"type":470,"tag":498,"props":1168,"children":1169},{"style":841},[1170],{"type":475,"value":889},{"type":470,"tag":498,"props":1172,"children":1173},{"style":804},[1174],{"type":475,"value":807},{"type":470,"tag":498,"props":1176,"children":1177},{"style":841},[1178],{"type":475,"value":1040},{"type":470,"tag":498,"props":1180,"children":1181},{"style":866},[1182],{"type":475,"value":869},{"type":470,"tag":498,"props":1184,"children":1186},{"class":500,"line":1185},25,[1187],{"type":470,"tag":498,"props":1188,"children":1189},{"emptyLinePlaceholder":1075},[1190],{"type":475,"value":1078},{"type":470,"tag":498,"props":1192,"children":1194},{"class":500,"line":1193},26,[1195],{"type":470,"tag":498,"props":1196,"children":1197},{"style":668},[1198],{"type":475,"value":1199},"    // 指针移动\n",{"type":470,"tag":498,"props":1201,"children":1203},{"class":500,"line":1202},27,[1204,1208,1212,1216,1220,1224,1228,1232],{"type":470,"tag":498,"props":1205,"children":1206},{"style":841},[1207],{"type":475,"value":1162},{"type":470,"tag":498,"props":1209,"children":1210},{"style":804},[1211],{"type":475,"value":807},{"type":470,"tag":498,"props":1213,"children":1214},{"style":841},[1215],{"type":475,"value":916},{"type":470,"tag":498,"props":1217,"children":1218},{"style":881},[1219],{"type":475,"value":884},{"type":470,"tag":498,"props":1221,"children":1222},{"style":841},[1223],{"type":475,"value":889},{"type":470,"tag":498,"props":1225,"children":1226},{"style":881},[1227],{"type":475,"value":884},{"type":470,"tag":498,"props":1229,"children":1230},{"style":841},[1231],{"type":475,"value":889},{"type":470,"tag":498,"props":1233,"children":1234},{"style":866},[1235],{"type":475,"value":869},{"type":470,"tag":498,"props":1237,"children":1239},{"class":500,"line":1238},28,[1240],{"type":470,"tag":498,"props":1241,"children":1242},{"style":815},[1243],{"type":475,"value":1244},"  }\n",{"type":470,"tag":498,"props":1246,"children":1248},{"class":500,"line":1247},29,[1249,1254,1258,1262,1266],{"type":470,"tag":498,"props":1250,"children":1251},{"style":935},[1252],{"type":475,"value":1253},"  return",{"type":470,"tag":498,"props":1255,"children":1256},{"style":841},[1257],{"type":475,"value":844},{"type":470,"tag":498,"props":1259,"children":1260},{"style":881},[1261],{"type":475,"value":884},{"type":470,"tag":498,"props":1263,"children":1264},{"style":841},[1265],{"type":475,"value":889},{"type":470,"tag":498,"props":1267,"children":1268},{"style":866},[1269],{"type":475,"value":869},{"type":470,"tag":498,"props":1271,"children":1273},{"class":500,"line":1272},30,[1274,1279],{"type":470,"tag":498,"props":1275,"children":1276},{"style":815},[1277],{"type":475,"value":1278},"}",{"type":470,"tag":498,"props":1280,"children":1281},{"style":866},[1282],{"type":475,"value":869},{"type":470,"tag":1284,"props":1285,"children":1286},"style",{},[1287],{"type":475,"value":1288},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":700,"depth":700,"links":1290},[1291,1292],{"id":596,"depth":510,"text":596},{"id":601,"depth":510,"text":601,"children":1293},[1294],{"id":607,"depth":682,"text":607},"markdown","content:1.algorithm:3.leetcode:3.major:24.swap-nodes-in-pairs.md","content","1.algorithm/3.leetcode/3.major/24.swap-nodes-in-pairs.md","md",[1301,1303],{"_path":90,"title":89,"description":1302},"给你一个链表数组，每个链表都已经按升序排列。",{"_path":96,"title":95,"description":1304},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",1713626402374]