[{"data":1,"prerenderedAt":1983},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/lru-cache":540,"/algorithm/leetcode/major/lru-cache-surround":1978},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":177,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":176,"description":544,"url":545,"body":546,"_type":1973,"_id":1974,"_source":1975,"_file":1976,"_extension":1977},"major",false,"","请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：","https://leetcode.cn/problems/lru-cache",{"type":547,"children":548,"toc":1967},"root",[549,556,576,581,586,752,757,780,786,791,796,803,1961],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":557,"props":558,"children":559},"ul",{},[560,566,571],{"type":550,"tag":561,"props":562,"children":563},"li",{},[564],{"type":555,"value":565},"LRUCache(int capacity) 以 正整数 作为容量 capacity 初始化 LRU 缓存",{"type":550,"tag":561,"props":567,"children":568},{},[569],{"type":555,"value":570},"int get(int key) 如果关键字 key 存在于缓存中，则返回关键字的值，否则返回 -1 。",{"type":550,"tag":561,"props":572,"children":573},{},[574],{"type":555,"value":575},"void put(int key, int value) 如果关键字 key 已经存在，则变更其数据值 value ；如果不存在，则向缓存中插入该组 key-value 。如果插入操作导致关键字数量超过 capacity ，则应该 逐出 最久未使用的关键字。",{"type":550,"tag":551,"props":577,"children":578},{},[579],{"type":555,"value":580},"函数 get 和 put 必须以 O(1) 的平均时间复杂度运行。",{"type":550,"tag":551,"props":582,"children":583},{},[584],{"type":555,"value":585},"示例：",{"type":550,"tag":587,"props":588,"children":591},"pre",{"className":589,"code":590,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n输出\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n解释\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // 缓存是 {1=1}\nlRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\nlRUCache.get(1); // 返回 1\nlRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\nlRUCache.get(2); // 返回 -1 (未找到)\nlRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\nlRUCache.get(1); // 返回 -1 (未找到)\nlRUCache.get(3); // 返回 3\nlRUCache.get(4); // 返回 4\n",[592],{"type":550,"tag":593,"props":594,"children":595},"code",{"__ignoreMap":543},[596,607,616,625,634,643,653,662,671,680,689,698,707,716,725,734,743],{"type":550,"tag":597,"props":598,"children":601},"span",{"class":599,"line":600},"line",1,[602],{"type":550,"tag":597,"props":603,"children":604},{},[605],{"type":555,"value":606},"输入\n",{"type":550,"tag":597,"props":608,"children":610},{"class":599,"line":609},2,[611],{"type":550,"tag":597,"props":612,"children":613},{},[614],{"type":555,"value":615},"[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n",{"type":550,"tag":597,"props":617,"children":619},{"class":599,"line":618},3,[620],{"type":550,"tag":597,"props":621,"children":622},{},[623],{"type":555,"value":624},"[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n",{"type":550,"tag":597,"props":626,"children":628},{"class":599,"line":627},4,[629],{"type":550,"tag":597,"props":630,"children":631},{},[632],{"type":555,"value":633},"输出\n",{"type":550,"tag":597,"props":635,"children":637},{"class":599,"line":636},5,[638],{"type":550,"tag":597,"props":639,"children":640},{},[641],{"type":555,"value":642},"[null, null, null, 1, null, -1, null, -1, 3, 4]\n",{"type":550,"tag":597,"props":644,"children":646},{"class":599,"line":645},6,[647],{"type":550,"tag":597,"props":648,"children":650},{"emptyLinePlaceholder":649},true,[651],{"type":555,"value":652},"\n",{"type":550,"tag":597,"props":654,"children":656},{"class":599,"line":655},7,[657],{"type":550,"tag":597,"props":658,"children":659},{},[660],{"type":555,"value":661},"解释\n",{"type":550,"tag":597,"props":663,"children":665},{"class":599,"line":664},8,[666],{"type":550,"tag":597,"props":667,"children":668},{},[669],{"type":555,"value":670},"LRUCache lRUCache = new LRUCache(2);\n",{"type":550,"tag":597,"props":672,"children":674},{"class":599,"line":673},9,[675],{"type":550,"tag":597,"props":676,"children":677},{},[678],{"type":555,"value":679},"lRUCache.put(1, 1); // 缓存是 {1=1}\n",{"type":550,"tag":597,"props":681,"children":683},{"class":599,"line":682},10,[684],{"type":550,"tag":597,"props":685,"children":686},{},[687],{"type":555,"value":688},"lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\n",{"type":550,"tag":597,"props":690,"children":692},{"class":599,"line":691},11,[693],{"type":550,"tag":597,"props":694,"children":695},{},[696],{"type":555,"value":697},"lRUCache.get(1); // 返回 1\n",{"type":550,"tag":597,"props":699,"children":701},{"class":599,"line":700},12,[702],{"type":550,"tag":597,"props":703,"children":704},{},[705],{"type":555,"value":706},"lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\n",{"type":550,"tag":597,"props":708,"children":710},{"class":599,"line":709},13,[711],{"type":550,"tag":597,"props":712,"children":713},{},[714],{"type":555,"value":715},"lRUCache.get(2); // 返回 -1 (未找到)\n",{"type":550,"tag":597,"props":717,"children":719},{"class":599,"line":718},14,[720],{"type":550,"tag":597,"props":721,"children":722},{},[723],{"type":555,"value":724},"lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\n",{"type":550,"tag":597,"props":726,"children":728},{"class":599,"line":727},15,[729],{"type":550,"tag":597,"props":730,"children":731},{},[732],{"type":555,"value":733},"lRUCache.get(1); // 返回 -1 (未找到)\n",{"type":550,"tag":597,"props":735,"children":737},{"class":599,"line":736},16,[738],{"type":550,"tag":597,"props":739,"children":740},{},[741],{"type":555,"value":742},"lRUCache.get(3); // 返回 3\n",{"type":550,"tag":597,"props":744,"children":746},{"class":599,"line":745},17,[747],{"type":550,"tag":597,"props":748,"children":749},{},[750],{"type":555,"value":751},"lRUCache.get(4); // 返回 4\n",{"type":550,"tag":551,"props":753,"children":754},{},[755],{"type":555,"value":756},"提示：",{"type":550,"tag":557,"props":758,"children":759},{},[760,765,770,775],{"type":550,"tag":561,"props":761,"children":762},{},[763],{"type":555,"value":764},"1 \u003C= capacity \u003C= 3000",{"type":550,"tag":561,"props":766,"children":767},{},[768],{"type":555,"value":769},"0 \u003C= key \u003C= 10000",{"type":550,"tag":561,"props":771,"children":772},{},[773],{"type":555,"value":774},"0 \u003C= value \u003C= 105",{"type":550,"tag":561,"props":776,"children":777},{},[778],{"type":555,"value":779},"最多调用 2 * 10^5 次 get 和 put",{"type":550,"tag":781,"props":782,"children":784},"h2",{"id":783},"解题思路",[785],{"type":555,"value":783},{"type":550,"tag":551,"props":787,"children":788},{},[789],{"type":555,"value":790},"题目要求的 1 和 2 相对简单，主要是条件 3，当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值",{"type":550,"tag":781,"props":792,"children":794},{"id":793},"实现",[795],{"type":555,"value":793},{"type":550,"tag":797,"props":798,"children":800},"h3",{"id":799},"map-方案",[801],{"type":555,"value":802},"Map 方案",{"type":550,"tag":587,"props":804,"children":808},{"className":805,"code":806,"language":807,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} capacity\n */\nvar LRUCache = function (capacity) {\n  this.cache = new Map();\n  this.capacity = capacity;\n};\n\n/**\n * @param {number} key\n * @return {number}\n */\nLRUCache.prototype.get = function (key) {\n  if (this.cache.has(key)) {\n    const val = this.cache.get(key);\n    // 更新位置\n    this.cache.delete(key);\n    this.cache.set(key, val);\n    return val;\n  }\n  return -1;\n};\n\n/**\n * @param {number} key\n * @param {number} value\n * @return {void}\n */\nLRUCache.prototype.put = function (key, value) {\n  // 已经存在的情况下，更新其位置到”最新“即可\n  // 先删除，后插入\n  if (this.cache.has(key)) {\n    this.cache.delete(key);\n  } else {\n    // 插入数据前先判断，size 是否符合 capacity\n    // 已经 >= capacity，需要把最开始插入的数据删除掉\n    // keys() 方法得到一个可遍历对象,执行 next( )拿到一个形如 { value: 'xxx', done: false } 的对象\n    if (this.cache.size >= this.capacity) {\n      this.cache.delete(this.cache.keys().next().value);\n    }\n  }\n  this.cache.set(key, value);\n};\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * var obj = new LRUCache(capacity)\n * var param_1 = obj.get(key)\n * obj.put(key,value)\n */\n","js",[809],{"type":550,"tag":593,"props":810,"children":811},{"__ignoreMap":543},[812,821,863,871,916,954,983,991,998,1005,1037,1066,1073,1125,1177,1228,1236,1273,1319,1336,1345,1369,1377,1385,1393,1425,1458,1487,1495,1553,1562,1571,1619,1655,1673,1682,1691,1700,1759,1832,1841,1849,1893,1901,1909,1917,1926,1935,1944,1953],{"type":550,"tag":597,"props":813,"children":814},{"class":599,"line":600},[815],{"type":550,"tag":597,"props":816,"children":818},{"style":817},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[819],{"type":555,"value":820},"/**\n",{"type":550,"tag":597,"props":822,"children":823},{"class":599,"line":609},[824,829,835,841,846,852,857],{"type":550,"tag":597,"props":825,"children":826},{"style":817},[827],{"type":555,"value":828}," * ",{"type":550,"tag":597,"props":830,"children":832},{"style":831},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[833],{"type":555,"value":834},"@",{"type":550,"tag":597,"props":836,"children":838},{"style":837},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[839],{"type":555,"value":840},"param",{"type":550,"tag":597,"props":842,"children":843},{"style":831},[844],{"type":555,"value":845}," {",{"type":550,"tag":597,"props":847,"children":849},{"style":848},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[850],{"type":555,"value":851},"number",{"type":550,"tag":597,"props":853,"children":854},{"style":831},[855],{"type":555,"value":856},"}",{"type":550,"tag":597,"props":858,"children":860},{"style":859},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[861],{"type":555,"value":862}," capacity\n",{"type":550,"tag":597,"props":864,"children":865},{"class":599,"line":618},[866],{"type":550,"tag":597,"props":867,"children":868},{"style":817},[869],{"type":555,"value":870}," */\n",{"type":550,"tag":597,"props":872,"children":873},{"class":599,"line":627},[874,880,886,891,896,901,906,911],{"type":550,"tag":597,"props":875,"children":877},{"style":876},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[878],{"type":555,"value":879},"var",{"type":550,"tag":597,"props":881,"children":883},{"style":882},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[884],{"type":555,"value":885}," LRUCache",{"type":550,"tag":597,"props":887,"children":888},{"style":831},[889],{"type":555,"value":890}," =",{"type":550,"tag":597,"props":892,"children":893},{"style":876},[894],{"type":555,"value":895}," function",{"type":550,"tag":597,"props":897,"children":898},{"style":831},[899],{"type":555,"value":900}," (",{"type":550,"tag":597,"props":902,"children":903},{"style":859},[904],{"type":555,"value":905},"capacity",{"type":550,"tag":597,"props":907,"children":908},{"style":831},[909],{"type":555,"value":910},")",{"type":550,"tag":597,"props":912,"children":913},{"style":831},[914],{"type":555,"value":915}," {\n",{"type":550,"tag":597,"props":917,"children":918},{"class":599,"line":636},[919,925,930,935,939,944,949],{"type":550,"tag":597,"props":920,"children":922},{"style":921},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[923],{"type":555,"value":924},"  this",{"type":550,"tag":597,"props":926,"children":927},{"style":831},[928],{"type":555,"value":929},".",{"type":550,"tag":597,"props":931,"children":932},{"style":859},[933],{"type":555,"value":934},"cache",{"type":550,"tag":597,"props":936,"children":937},{"style":831},[938],{"type":555,"value":890},{"type":550,"tag":597,"props":940,"children":941},{"style":876},[942],{"type":555,"value":943}," new",{"type":550,"tag":597,"props":945,"children":946},{"style":882},[947],{"type":555,"value":948}," Map",{"type":550,"tag":597,"props":950,"children":951},{"style":831},[952],{"type":555,"value":953},"();\n",{"type":550,"tag":597,"props":955,"children":956},{"class":599,"line":645},[957,961,965,969,973,978],{"type":550,"tag":597,"props":958,"children":959},{"style":921},[960],{"type":555,"value":924},{"type":550,"tag":597,"props":962,"children":963},{"style":831},[964],{"type":555,"value":929},{"type":550,"tag":597,"props":966,"children":967},{"style":859},[968],{"type":555,"value":905},{"type":550,"tag":597,"props":970,"children":971},{"style":831},[972],{"type":555,"value":890},{"type":550,"tag":597,"props":974,"children":975},{"style":859},[976],{"type":555,"value":977}," capacity",{"type":550,"tag":597,"props":979,"children":980},{"style":831},[981],{"type":555,"value":982},";\n",{"type":550,"tag":597,"props":984,"children":985},{"class":599,"line":655},[986],{"type":550,"tag":597,"props":987,"children":988},{"style":831},[989],{"type":555,"value":990},"};\n",{"type":550,"tag":597,"props":992,"children":993},{"class":599,"line":664},[994],{"type":550,"tag":597,"props":995,"children":996},{"emptyLinePlaceholder":649},[997],{"type":555,"value":652},{"type":550,"tag":597,"props":999,"children":1000},{"class":599,"line":673},[1001],{"type":550,"tag":597,"props":1002,"children":1003},{"style":817},[1004],{"type":555,"value":820},{"type":550,"tag":597,"props":1006,"children":1007},{"class":599,"line":682},[1008,1012,1016,1020,1024,1028,1032],{"type":550,"tag":597,"props":1009,"children":1010},{"style":817},[1011],{"type":555,"value":828},{"type":550,"tag":597,"props":1013,"children":1014},{"style":831},[1015],{"type":555,"value":834},{"type":550,"tag":597,"props":1017,"children":1018},{"style":837},[1019],{"type":555,"value":840},{"type":550,"tag":597,"props":1021,"children":1022},{"style":831},[1023],{"type":555,"value":845},{"type":550,"tag":597,"props":1025,"children":1026},{"style":848},[1027],{"type":555,"value":851},{"type":550,"tag":597,"props":1029,"children":1030},{"style":831},[1031],{"type":555,"value":856},{"type":550,"tag":597,"props":1033,"children":1034},{"style":859},[1035],{"type":555,"value":1036}," key\n",{"type":550,"tag":597,"props":1038,"children":1039},{"class":599,"line":691},[1040,1044,1048,1053,1057,1061],{"type":550,"tag":597,"props":1041,"children":1042},{"style":817},[1043],{"type":555,"value":828},{"type":550,"tag":597,"props":1045,"children":1046},{"style":831},[1047],{"type":555,"value":834},{"type":550,"tag":597,"props":1049,"children":1050},{"style":837},[1051],{"type":555,"value":1052},"return",{"type":550,"tag":597,"props":1054,"children":1055},{"style":831},[1056],{"type":555,"value":845},{"type":550,"tag":597,"props":1058,"children":1059},{"style":848},[1060],{"type":555,"value":851},{"type":550,"tag":597,"props":1062,"children":1063},{"style":831},[1064],{"type":555,"value":1065},"}\n",{"type":550,"tag":597,"props":1067,"children":1068},{"class":599,"line":700},[1069],{"type":550,"tag":597,"props":1070,"children":1071},{"style":817},[1072],{"type":555,"value":870},{"type":550,"tag":597,"props":1074,"children":1075},{"class":599,"line":709},[1076,1082,1086,1091,1095,1100,1104,1108,1112,1117,1121],{"type":550,"tag":597,"props":1077,"children":1079},{"style":1078},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1080],{"type":555,"value":1081},"LRUCache",{"type":550,"tag":597,"props":1083,"children":1084},{"style":831},[1085],{"type":555,"value":929},{"type":550,"tag":597,"props":1087,"children":1088},{"style":1078},[1089],{"type":555,"value":1090},"prototype",{"type":550,"tag":597,"props":1092,"children":1093},{"style":831},[1094],{"type":555,"value":929},{"type":550,"tag":597,"props":1096,"children":1097},{"style":882},[1098],{"type":555,"value":1099},"get",{"type":550,"tag":597,"props":1101,"children":1102},{"style":831},[1103],{"type":555,"value":890},{"type":550,"tag":597,"props":1105,"children":1106},{"style":876},[1107],{"type":555,"value":895},{"type":550,"tag":597,"props":1109,"children":1110},{"style":831},[1111],{"type":555,"value":900},{"type":550,"tag":597,"props":1113,"children":1114},{"style":859},[1115],{"type":555,"value":1116},"key",{"type":550,"tag":597,"props":1118,"children":1119},{"style":831},[1120],{"type":555,"value":910},{"type":550,"tag":597,"props":1122,"children":1123},{"style":831},[1124],{"type":555,"value":915},{"type":550,"tag":597,"props":1126,"children":1127},{"class":599,"line":718},[1128,1133,1137,1142,1146,1150,1154,1159,1164,1168,1173],{"type":550,"tag":597,"props":1129,"children":1130},{"style":837},[1131],{"type":555,"value":1132},"  if",{"type":550,"tag":597,"props":1134,"children":1135},{"style":831},[1136],{"type":555,"value":900},{"type":550,"tag":597,"props":1138,"children":1139},{"style":921},[1140],{"type":555,"value":1141},"this",{"type":550,"tag":597,"props":1143,"children":1144},{"style":831},[1145],{"type":555,"value":929},{"type":550,"tag":597,"props":1147,"children":1148},{"style":859},[1149],{"type":555,"value":934},{"type":550,"tag":597,"props":1151,"children":1152},{"style":831},[1153],{"type":555,"value":929},{"type":550,"tag":597,"props":1155,"children":1156},{"style":882},[1157],{"type":555,"value":1158},"has",{"type":550,"tag":597,"props":1160,"children":1161},{"style":831},[1162],{"type":555,"value":1163},"(",{"type":550,"tag":597,"props":1165,"children":1166},{"style":859},[1167],{"type":555,"value":1116},{"type":550,"tag":597,"props":1169,"children":1170},{"style":831},[1171],{"type":555,"value":1172},"))",{"type":550,"tag":597,"props":1174,"children":1175},{"style":831},[1176],{"type":555,"value":915},{"type":550,"tag":597,"props":1178,"children":1179},{"class":599,"line":727},[1180,1185,1190,1194,1199,1203,1207,1211,1215,1219,1223],{"type":550,"tag":597,"props":1181,"children":1182},{"style":876},[1183],{"type":555,"value":1184},"    const",{"type":550,"tag":597,"props":1186,"children":1187},{"style":859},[1188],{"type":555,"value":1189}," val",{"type":550,"tag":597,"props":1191,"children":1192},{"style":831},[1193],{"type":555,"value":890},{"type":550,"tag":597,"props":1195,"children":1196},{"style":921},[1197],{"type":555,"value":1198}," this",{"type":550,"tag":597,"props":1200,"children":1201},{"style":831},[1202],{"type":555,"value":929},{"type":550,"tag":597,"props":1204,"children":1205},{"style":859},[1206],{"type":555,"value":934},{"type":550,"tag":597,"props":1208,"children":1209},{"style":831},[1210],{"type":555,"value":929},{"type":550,"tag":597,"props":1212,"children":1213},{"style":882},[1214],{"type":555,"value":1099},{"type":550,"tag":597,"props":1216,"children":1217},{"style":831},[1218],{"type":555,"value":1163},{"type":550,"tag":597,"props":1220,"children":1221},{"style":859},[1222],{"type":555,"value":1116},{"type":550,"tag":597,"props":1224,"children":1225},{"style":831},[1226],{"type":555,"value":1227},");\n",{"type":550,"tag":597,"props":1229,"children":1230},{"class":599,"line":736},[1231],{"type":550,"tag":597,"props":1232,"children":1233},{"style":817},[1234],{"type":555,"value":1235},"    // 更新位置\n",{"type":550,"tag":597,"props":1237,"children":1238},{"class":599,"line":745},[1239,1244,1248,1252,1256,1261,1265,1269],{"type":550,"tag":597,"props":1240,"children":1241},{"style":921},[1242],{"type":555,"value":1243},"    this",{"type":550,"tag":597,"props":1245,"children":1246},{"style":831},[1247],{"type":555,"value":929},{"type":550,"tag":597,"props":1249,"children":1250},{"style":859},[1251],{"type":555,"value":934},{"type":550,"tag":597,"props":1253,"children":1254},{"style":831},[1255],{"type":555,"value":929},{"type":550,"tag":597,"props":1257,"children":1258},{"style":882},[1259],{"type":555,"value":1260},"delete",{"type":550,"tag":597,"props":1262,"children":1263},{"style":831},[1264],{"type":555,"value":1163},{"type":550,"tag":597,"props":1266,"children":1267},{"style":859},[1268],{"type":555,"value":1116},{"type":550,"tag":597,"props":1270,"children":1271},{"style":831},[1272],{"type":555,"value":1227},{"type":550,"tag":597,"props":1274,"children":1276},{"class":599,"line":1275},18,[1277,1281,1285,1289,1293,1298,1302,1306,1311,1315],{"type":550,"tag":597,"props":1278,"children":1279},{"style":921},[1280],{"type":555,"value":1243},{"type":550,"tag":597,"props":1282,"children":1283},{"style":831},[1284],{"type":555,"value":929},{"type":550,"tag":597,"props":1286,"children":1287},{"style":859},[1288],{"type":555,"value":934},{"type":550,"tag":597,"props":1290,"children":1291},{"style":831},[1292],{"type":555,"value":929},{"type":550,"tag":597,"props":1294,"children":1295},{"style":882},[1296],{"type":555,"value":1297},"set",{"type":550,"tag":597,"props":1299,"children":1300},{"style":831},[1301],{"type":555,"value":1163},{"type":550,"tag":597,"props":1303,"children":1304},{"style":859},[1305],{"type":555,"value":1116},{"type":550,"tag":597,"props":1307,"children":1308},{"style":831},[1309],{"type":555,"value":1310},",",{"type":550,"tag":597,"props":1312,"children":1313},{"style":859},[1314],{"type":555,"value":1189},{"type":550,"tag":597,"props":1316,"children":1317},{"style":831},[1318],{"type":555,"value":1227},{"type":550,"tag":597,"props":1320,"children":1322},{"class":599,"line":1321},19,[1323,1328,1332],{"type":550,"tag":597,"props":1324,"children":1325},{"style":837},[1326],{"type":555,"value":1327},"    return",{"type":550,"tag":597,"props":1329,"children":1330},{"style":859},[1331],{"type":555,"value":1189},{"type":550,"tag":597,"props":1333,"children":1334},{"style":831},[1335],{"type":555,"value":982},{"type":550,"tag":597,"props":1337,"children":1339},{"class":599,"line":1338},20,[1340],{"type":550,"tag":597,"props":1341,"children":1342},{"style":831},[1343],{"type":555,"value":1344},"  }\n",{"type":550,"tag":597,"props":1346,"children":1348},{"class":599,"line":1347},21,[1349,1354,1359,1365],{"type":550,"tag":597,"props":1350,"children":1351},{"style":837},[1352],{"type":555,"value":1353},"  return",{"type":550,"tag":597,"props":1355,"children":1356},{"style":876},[1357],{"type":555,"value":1358}," -",{"type":550,"tag":597,"props":1360,"children":1362},{"style":1361},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1363],{"type":555,"value":1364},"1",{"type":550,"tag":597,"props":1366,"children":1367},{"style":831},[1368],{"type":555,"value":982},{"type":550,"tag":597,"props":1370,"children":1372},{"class":599,"line":1371},22,[1373],{"type":550,"tag":597,"props":1374,"children":1375},{"style":831},[1376],{"type":555,"value":990},{"type":550,"tag":597,"props":1378,"children":1380},{"class":599,"line":1379},23,[1381],{"type":550,"tag":597,"props":1382,"children":1383},{"emptyLinePlaceholder":649},[1384],{"type":555,"value":652},{"type":550,"tag":597,"props":1386,"children":1388},{"class":599,"line":1387},24,[1389],{"type":550,"tag":597,"props":1390,"children":1391},{"style":817},[1392],{"type":555,"value":820},{"type":550,"tag":597,"props":1394,"children":1396},{"class":599,"line":1395},25,[1397,1401,1405,1409,1413,1417,1421],{"type":550,"tag":597,"props":1398,"children":1399},{"style":817},[1400],{"type":555,"value":828},{"type":550,"tag":597,"props":1402,"children":1403},{"style":831},[1404],{"type":555,"value":834},{"type":550,"tag":597,"props":1406,"children":1407},{"style":837},[1408],{"type":555,"value":840},{"type":550,"tag":597,"props":1410,"children":1411},{"style":831},[1412],{"type":555,"value":845},{"type":550,"tag":597,"props":1414,"children":1415},{"style":848},[1416],{"type":555,"value":851},{"type":550,"tag":597,"props":1418,"children":1419},{"style":831},[1420],{"type":555,"value":856},{"type":550,"tag":597,"props":1422,"children":1423},{"style":859},[1424],{"type":555,"value":1036},{"type":550,"tag":597,"props":1426,"children":1428},{"class":599,"line":1427},26,[1429,1433,1437,1441,1445,1449,1453],{"type":550,"tag":597,"props":1430,"children":1431},{"style":817},[1432],{"type":555,"value":828},{"type":550,"tag":597,"props":1434,"children":1435},{"style":831},[1436],{"type":555,"value":834},{"type":550,"tag":597,"props":1438,"children":1439},{"style":837},[1440],{"type":555,"value":840},{"type":550,"tag":597,"props":1442,"children":1443},{"style":831},[1444],{"type":555,"value":845},{"type":550,"tag":597,"props":1446,"children":1447},{"style":848},[1448],{"type":555,"value":851},{"type":550,"tag":597,"props":1450,"children":1451},{"style":831},[1452],{"type":555,"value":856},{"type":550,"tag":597,"props":1454,"children":1455},{"style":859},[1456],{"type":555,"value":1457}," value\n",{"type":550,"tag":597,"props":1459,"children":1461},{"class":599,"line":1460},27,[1462,1466,1470,1474,1478,1483],{"type":550,"tag":597,"props":1463,"children":1464},{"style":817},[1465],{"type":555,"value":828},{"type":550,"tag":597,"props":1467,"children":1468},{"style":831},[1469],{"type":555,"value":834},{"type":550,"tag":597,"props":1471,"children":1472},{"style":837},[1473],{"type":555,"value":1052},{"type":550,"tag":597,"props":1475,"children":1476},{"style":831},[1477],{"type":555,"value":845},{"type":550,"tag":597,"props":1479,"children":1480},{"style":848},[1481],{"type":555,"value":1482},"void",{"type":550,"tag":597,"props":1484,"children":1485},{"style":831},[1486],{"type":555,"value":1065},{"type":550,"tag":597,"props":1488,"children":1490},{"class":599,"line":1489},28,[1491],{"type":550,"tag":597,"props":1492,"children":1493},{"style":817},[1494],{"type":555,"value":870},{"type":550,"tag":597,"props":1496,"children":1498},{"class":599,"line":1497},29,[1499,1503,1507,1511,1515,1520,1524,1528,1532,1536,1540,1545,1549],{"type":550,"tag":597,"props":1500,"children":1501},{"style":1078},[1502],{"type":555,"value":1081},{"type":550,"tag":597,"props":1504,"children":1505},{"style":831},[1506],{"type":555,"value":929},{"type":550,"tag":597,"props":1508,"children":1509},{"style":1078},[1510],{"type":555,"value":1090},{"type":550,"tag":597,"props":1512,"children":1513},{"style":831},[1514],{"type":555,"value":929},{"type":550,"tag":597,"props":1516,"children":1517},{"style":882},[1518],{"type":555,"value":1519},"put",{"type":550,"tag":597,"props":1521,"children":1522},{"style":831},[1523],{"type":555,"value":890},{"type":550,"tag":597,"props":1525,"children":1526},{"style":876},[1527],{"type":555,"value":895},{"type":550,"tag":597,"props":1529,"children":1530},{"style":831},[1531],{"type":555,"value":900},{"type":550,"tag":597,"props":1533,"children":1534},{"style":859},[1535],{"type":555,"value":1116},{"type":550,"tag":597,"props":1537,"children":1538},{"style":831},[1539],{"type":555,"value":1310},{"type":550,"tag":597,"props":1541,"children":1542},{"style":859},[1543],{"type":555,"value":1544}," value",{"type":550,"tag":597,"props":1546,"children":1547},{"style":831},[1548],{"type":555,"value":910},{"type":550,"tag":597,"props":1550,"children":1551},{"style":831},[1552],{"type":555,"value":915},{"type":550,"tag":597,"props":1554,"children":1556},{"class":599,"line":1555},30,[1557],{"type":550,"tag":597,"props":1558,"children":1559},{"style":817},[1560],{"type":555,"value":1561},"  // 已经存在的情况下，更新其位置到”最新“即可\n",{"type":550,"tag":597,"props":1563,"children":1565},{"class":599,"line":1564},31,[1566],{"type":550,"tag":597,"props":1567,"children":1568},{"style":817},[1569],{"type":555,"value":1570},"  // 先删除，后插入\n",{"type":550,"tag":597,"props":1572,"children":1574},{"class":599,"line":1573},32,[1575,1579,1583,1587,1591,1595,1599,1603,1607,1611,1615],{"type":550,"tag":597,"props":1576,"children":1577},{"style":837},[1578],{"type":555,"value":1132},{"type":550,"tag":597,"props":1580,"children":1581},{"style":831},[1582],{"type":555,"value":900},{"type":550,"tag":597,"props":1584,"children":1585},{"style":921},[1586],{"type":555,"value":1141},{"type":550,"tag":597,"props":1588,"children":1589},{"style":831},[1590],{"type":555,"value":929},{"type":550,"tag":597,"props":1592,"children":1593},{"style":859},[1594],{"type":555,"value":934},{"type":550,"tag":597,"props":1596,"children":1597},{"style":831},[1598],{"type":555,"value":929},{"type":550,"tag":597,"props":1600,"children":1601},{"style":882},[1602],{"type":555,"value":1158},{"type":550,"tag":597,"props":1604,"children":1605},{"style":831},[1606],{"type":555,"value":1163},{"type":550,"tag":597,"props":1608,"children":1609},{"style":859},[1610],{"type":555,"value":1116},{"type":550,"tag":597,"props":1612,"children":1613},{"style":831},[1614],{"type":555,"value":1172},{"type":550,"tag":597,"props":1616,"children":1617},{"style":831},[1618],{"type":555,"value":915},{"type":550,"tag":597,"props":1620,"children":1622},{"class":599,"line":1621},33,[1623,1627,1631,1635,1639,1643,1647,1651],{"type":550,"tag":597,"props":1624,"children":1625},{"style":921},[1626],{"type":555,"value":1243},{"type":550,"tag":597,"props":1628,"children":1629},{"style":831},[1630],{"type":555,"value":929},{"type":550,"tag":597,"props":1632,"children":1633},{"style":859},[1634],{"type":555,"value":934},{"type":550,"tag":597,"props":1636,"children":1637},{"style":831},[1638],{"type":555,"value":929},{"type":550,"tag":597,"props":1640,"children":1641},{"style":882},[1642],{"type":555,"value":1260},{"type":550,"tag":597,"props":1644,"children":1645},{"style":831},[1646],{"type":555,"value":1163},{"type":550,"tag":597,"props":1648,"children":1649},{"style":859},[1650],{"type":555,"value":1116},{"type":550,"tag":597,"props":1652,"children":1653},{"style":831},[1654],{"type":555,"value":1227},{"type":550,"tag":597,"props":1656,"children":1658},{"class":599,"line":1657},34,[1659,1664,1669],{"type":550,"tag":597,"props":1660,"children":1661},{"style":831},[1662],{"type":555,"value":1663},"  }",{"type":550,"tag":597,"props":1665,"children":1666},{"style":837},[1667],{"type":555,"value":1668}," else",{"type":550,"tag":597,"props":1670,"children":1671},{"style":831},[1672],{"type":555,"value":915},{"type":550,"tag":597,"props":1674,"children":1676},{"class":599,"line":1675},35,[1677],{"type":550,"tag":597,"props":1678,"children":1679},{"style":817},[1680],{"type":555,"value":1681},"    // 插入数据前先判断，size 是否符合 capacity\n",{"type":550,"tag":597,"props":1683,"children":1685},{"class":599,"line":1684},36,[1686],{"type":550,"tag":597,"props":1687,"children":1688},{"style":817},[1689],{"type":555,"value":1690},"    // 已经 >= capacity，需要把最开始插入的数据删除掉\n",{"type":550,"tag":597,"props":1692,"children":1694},{"class":599,"line":1693},37,[1695],{"type":550,"tag":597,"props":1696,"children":1697},{"style":817},[1698],{"type":555,"value":1699},"    // keys() 方法得到一个可遍历对象,执行 next( )拿到一个形如 { value: 'xxx', done: false } 的对象\n",{"type":550,"tag":597,"props":1701,"children":1703},{"class":599,"line":1702},38,[1704,1709,1713,1717,1721,1725,1729,1734,1739,1743,1747,1751,1755],{"type":550,"tag":597,"props":1705,"children":1706},{"style":837},[1707],{"type":555,"value":1708},"    if",{"type":550,"tag":597,"props":1710,"children":1711},{"style":831},[1712],{"type":555,"value":900},{"type":550,"tag":597,"props":1714,"children":1715},{"style":921},[1716],{"type":555,"value":1141},{"type":550,"tag":597,"props":1718,"children":1719},{"style":831},[1720],{"type":555,"value":929},{"type":550,"tag":597,"props":1722,"children":1723},{"style":859},[1724],{"type":555,"value":934},{"type":550,"tag":597,"props":1726,"children":1727},{"style":831},[1728],{"type":555,"value":929},{"type":550,"tag":597,"props":1730,"children":1731},{"style":859},[1732],{"type":555,"value":1733},"size",{"type":550,"tag":597,"props":1735,"children":1736},{"style":831},[1737],{"type":555,"value":1738}," >=",{"type":550,"tag":597,"props":1740,"children":1741},{"style":921},[1742],{"type":555,"value":1198},{"type":550,"tag":597,"props":1744,"children":1745},{"style":831},[1746],{"type":555,"value":929},{"type":550,"tag":597,"props":1748,"children":1749},{"style":859},[1750],{"type":555,"value":905},{"type":550,"tag":597,"props":1752,"children":1753},{"style":831},[1754],{"type":555,"value":910},{"type":550,"tag":597,"props":1756,"children":1757},{"style":831},[1758],{"type":555,"value":915},{"type":550,"tag":597,"props":1760,"children":1762},{"class":599,"line":1761},39,[1763,1768,1772,1776,1780,1784,1788,1792,1796,1800,1804,1809,1814,1819,1823,1828],{"type":550,"tag":597,"props":1764,"children":1765},{"style":921},[1766],{"type":555,"value":1767},"      this",{"type":550,"tag":597,"props":1769,"children":1770},{"style":831},[1771],{"type":555,"value":929},{"type":550,"tag":597,"props":1773,"children":1774},{"style":859},[1775],{"type":555,"value":934},{"type":550,"tag":597,"props":1777,"children":1778},{"style":831},[1779],{"type":555,"value":929},{"type":550,"tag":597,"props":1781,"children":1782},{"style":882},[1783],{"type":555,"value":1260},{"type":550,"tag":597,"props":1785,"children":1786},{"style":831},[1787],{"type":555,"value":1163},{"type":550,"tag":597,"props":1789,"children":1790},{"style":921},[1791],{"type":555,"value":1141},{"type":550,"tag":597,"props":1793,"children":1794},{"style":831},[1795],{"type":555,"value":929},{"type":550,"tag":597,"props":1797,"children":1798},{"style":859},[1799],{"type":555,"value":934},{"type":550,"tag":597,"props":1801,"children":1802},{"style":831},[1803],{"type":555,"value":929},{"type":550,"tag":597,"props":1805,"children":1806},{"style":882},[1807],{"type":555,"value":1808},"keys",{"type":550,"tag":597,"props":1810,"children":1811},{"style":831},[1812],{"type":555,"value":1813},"().",{"type":550,"tag":597,"props":1815,"children":1816},{"style":882},[1817],{"type":555,"value":1818},"next",{"type":550,"tag":597,"props":1820,"children":1821},{"style":831},[1822],{"type":555,"value":1813},{"type":550,"tag":597,"props":1824,"children":1825},{"style":859},[1826],{"type":555,"value":1827},"value",{"type":550,"tag":597,"props":1829,"children":1830},{"style":831},[1831],{"type":555,"value":1227},{"type":550,"tag":597,"props":1833,"children":1835},{"class":599,"line":1834},40,[1836],{"type":550,"tag":597,"props":1837,"children":1838},{"style":831},[1839],{"type":555,"value":1840},"    }\n",{"type":550,"tag":597,"props":1842,"children":1844},{"class":599,"line":1843},41,[1845],{"type":550,"tag":597,"props":1846,"children":1847},{"style":831},[1848],{"type":555,"value":1344},{"type":550,"tag":597,"props":1850,"children":1852},{"class":599,"line":1851},42,[1853,1857,1861,1865,1869,1873,1877,1881,1885,1889],{"type":550,"tag":597,"props":1854,"children":1855},{"style":921},[1856],{"type":555,"value":924},{"type":550,"tag":597,"props":1858,"children":1859},{"style":831},[1860],{"type":555,"value":929},{"type":550,"tag":597,"props":1862,"children":1863},{"style":859},[1864],{"type":555,"value":934},{"type":550,"tag":597,"props":1866,"children":1867},{"style":831},[1868],{"type":555,"value":929},{"type":550,"tag":597,"props":1870,"children":1871},{"style":882},[1872],{"type":555,"value":1297},{"type":550,"tag":597,"props":1874,"children":1875},{"style":831},[1876],{"type":555,"value":1163},{"type":550,"tag":597,"props":1878,"children":1879},{"style":859},[1880],{"type":555,"value":1116},{"type":550,"tag":597,"props":1882,"children":1883},{"style":831},[1884],{"type":555,"value":1310},{"type":550,"tag":597,"props":1886,"children":1887},{"style":859},[1888],{"type":555,"value":1544},{"type":550,"tag":597,"props":1890,"children":1891},{"style":831},[1892],{"type":555,"value":1227},{"type":550,"tag":597,"props":1894,"children":1896},{"class":599,"line":1895},43,[1897],{"type":550,"tag":597,"props":1898,"children":1899},{"style":831},[1900],{"type":555,"value":990},{"type":550,"tag":597,"props":1902,"children":1904},{"class":599,"line":1903},44,[1905],{"type":550,"tag":597,"props":1906,"children":1907},{"emptyLinePlaceholder":649},[1908],{"type":555,"value":652},{"type":550,"tag":597,"props":1910,"children":1912},{"class":599,"line":1911},45,[1913],{"type":550,"tag":597,"props":1914,"children":1915},{"style":817},[1916],{"type":555,"value":820},{"type":550,"tag":597,"props":1918,"children":1920},{"class":599,"line":1919},46,[1921],{"type":550,"tag":597,"props":1922,"children":1923},{"style":817},[1924],{"type":555,"value":1925}," * Your LRUCache object will be instantiated and called as such:\n",{"type":550,"tag":597,"props":1927,"children":1929},{"class":599,"line":1928},47,[1930],{"type":550,"tag":597,"props":1931,"children":1932},{"style":817},[1933],{"type":555,"value":1934}," * var obj = new LRUCache(capacity)\n",{"type":550,"tag":597,"props":1936,"children":1938},{"class":599,"line":1937},48,[1939],{"type":550,"tag":597,"props":1940,"children":1941},{"style":817},[1942],{"type":555,"value":1943}," * var param_1 = obj.get(key)\n",{"type":550,"tag":597,"props":1945,"children":1947},{"class":599,"line":1946},49,[1948],{"type":550,"tag":597,"props":1949,"children":1950},{"style":817},[1951],{"type":555,"value":1952}," * obj.put(key,value)\n",{"type":550,"tag":597,"props":1954,"children":1956},{"class":599,"line":1955},50,[1957],{"type":550,"tag":597,"props":1958,"children":1959},{"style":817},[1960],{"type":555,"value":870},{"type":550,"tag":1962,"props":1963,"children":1964},"style",{},[1965],{"type":555,"value":1966},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":636,"depth":636,"links":1968},[1969,1970],{"id":783,"depth":609,"text":783},{"id":793,"depth":609,"text":793,"children":1971},[1972],{"id":799,"depth":618,"text":802},"markdown","content:1.algorithm:3.leetcode:3.major:146.lru-cache.md","content","1.algorithm/3.leetcode/3.major/146.lru-cache.md","md",[1979,1981],{"_path":174,"title":173,"description":1980},"给你一个链表的头节点 head ，判断链表中是否有环。",{"_path":180,"title":179,"description":1982},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",1714099275980]