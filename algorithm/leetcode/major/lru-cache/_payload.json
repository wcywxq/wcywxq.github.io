[{"data":1,"prerenderedAt":1979},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/lru-cache":549,"/algorithm/leetcode/major/lru-cache-surround":1974},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":177,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":176,"description":553,"url":554,"body":555,"_type":1969,"_id":1970,"_source":1971,"_file":1972,"_extension":1973},"major",false,"","请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：","https://leetcode.cn/problems/lru-cache",{"type":556,"children":557,"toc":1963},"root",[558,565,585,590,595,761,766,789,795,800,805,812,1957],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":566,"props":567,"children":568},"ul",{},[569,575,580],{"type":559,"tag":570,"props":571,"children":572},"li",{},[573],{"type":564,"value":574},"LRUCache(int capacity) 以 正整数 作为容量 capacity 初始化 LRU 缓存",{"type":559,"tag":570,"props":576,"children":577},{},[578],{"type":564,"value":579},"int get(int key) 如果关键字 key 存在于缓存中，则返回关键字的值，否则返回 -1 。",{"type":559,"tag":570,"props":581,"children":582},{},[583],{"type":564,"value":584},"void put(int key, int value) 如果关键字 key 已经存在，则变更其数据值 value ；如果不存在，则向缓存中插入该组 key-value 。如果插入操作导致关键字数量超过 capacity ，则应该 逐出 最久未使用的关键字。",{"type":559,"tag":560,"props":586,"children":587},{},[588],{"type":564,"value":589},"函数 get 和 put 必须以 O(1) 的平均时间复杂度运行。",{"type":559,"tag":560,"props":591,"children":592},{},[593],{"type":564,"value":594},"示例：",{"type":559,"tag":596,"props":597,"children":600},"pre",{"className":598,"code":599,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n输出\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n解释\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // 缓存是 {1=1}\nlRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\nlRUCache.get(1); // 返回 1\nlRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\nlRUCache.get(2); // 返回 -1 (未找到)\nlRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\nlRUCache.get(1); // 返回 -1 (未找到)\nlRUCache.get(3); // 返回 3\nlRUCache.get(4); // 返回 4\n",[601],{"type":559,"tag":602,"props":603,"children":604},"code",{"__ignoreMap":552},[605,616,625,634,643,652,662,671,680,689,698,707,716,725,734,743,752],{"type":559,"tag":606,"props":607,"children":610},"span",{"class":608,"line":609},"line",1,[611],{"type":559,"tag":606,"props":612,"children":613},{},[614],{"type":564,"value":615},"输入\n",{"type":559,"tag":606,"props":617,"children":619},{"class":608,"line":618},2,[620],{"type":559,"tag":606,"props":621,"children":622},{},[623],{"type":564,"value":624},"[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n",{"type":559,"tag":606,"props":626,"children":628},{"class":608,"line":627},3,[629],{"type":559,"tag":606,"props":630,"children":631},{},[632],{"type":564,"value":633},"[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n",{"type":559,"tag":606,"props":635,"children":637},{"class":608,"line":636},4,[638],{"type":559,"tag":606,"props":639,"children":640},{},[641],{"type":564,"value":642},"输出\n",{"type":559,"tag":606,"props":644,"children":646},{"class":608,"line":645},5,[647],{"type":559,"tag":606,"props":648,"children":649},{},[650],{"type":564,"value":651},"[null, null, null, 1, null, -1, null, -1, 3, 4]\n",{"type":559,"tag":606,"props":653,"children":655},{"class":608,"line":654},6,[656],{"type":559,"tag":606,"props":657,"children":659},{"emptyLinePlaceholder":658},true,[660],{"type":564,"value":661},"\n",{"type":559,"tag":606,"props":663,"children":665},{"class":608,"line":664},7,[666],{"type":559,"tag":606,"props":667,"children":668},{},[669],{"type":564,"value":670},"解释\n",{"type":559,"tag":606,"props":672,"children":674},{"class":608,"line":673},8,[675],{"type":559,"tag":606,"props":676,"children":677},{},[678],{"type":564,"value":679},"LRUCache lRUCache = new LRUCache(2);\n",{"type":559,"tag":606,"props":681,"children":683},{"class":608,"line":682},9,[684],{"type":559,"tag":606,"props":685,"children":686},{},[687],{"type":564,"value":688},"lRUCache.put(1, 1); // 缓存是 {1=1}\n",{"type":559,"tag":606,"props":690,"children":692},{"class":608,"line":691},10,[693],{"type":559,"tag":606,"props":694,"children":695},{},[696],{"type":564,"value":697},"lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\n",{"type":559,"tag":606,"props":699,"children":701},{"class":608,"line":700},11,[702],{"type":559,"tag":606,"props":703,"children":704},{},[705],{"type":564,"value":706},"lRUCache.get(1); // 返回 1\n",{"type":559,"tag":606,"props":708,"children":710},{"class":608,"line":709},12,[711],{"type":559,"tag":606,"props":712,"children":713},{},[714],{"type":564,"value":715},"lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\n",{"type":559,"tag":606,"props":717,"children":719},{"class":608,"line":718},13,[720],{"type":559,"tag":606,"props":721,"children":722},{},[723],{"type":564,"value":724},"lRUCache.get(2); // 返回 -1 (未找到)\n",{"type":559,"tag":606,"props":726,"children":728},{"class":608,"line":727},14,[729],{"type":559,"tag":606,"props":730,"children":731},{},[732],{"type":564,"value":733},"lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\n",{"type":559,"tag":606,"props":735,"children":737},{"class":608,"line":736},15,[738],{"type":559,"tag":606,"props":739,"children":740},{},[741],{"type":564,"value":742},"lRUCache.get(1); // 返回 -1 (未找到)\n",{"type":559,"tag":606,"props":744,"children":746},{"class":608,"line":745},16,[747],{"type":559,"tag":606,"props":748,"children":749},{},[750],{"type":564,"value":751},"lRUCache.get(3); // 返回 3\n",{"type":559,"tag":606,"props":753,"children":755},{"class":608,"line":754},17,[756],{"type":559,"tag":606,"props":757,"children":758},{},[759],{"type":564,"value":760},"lRUCache.get(4); // 返回 4\n",{"type":559,"tag":560,"props":762,"children":763},{},[764],{"type":564,"value":765},"提示：",{"type":559,"tag":566,"props":767,"children":768},{},[769,774,779,784],{"type":559,"tag":570,"props":770,"children":771},{},[772],{"type":564,"value":773},"1 \u003C= capacity \u003C= 3000",{"type":559,"tag":570,"props":775,"children":776},{},[777],{"type":564,"value":778},"0 \u003C= key \u003C= 10000",{"type":559,"tag":570,"props":780,"children":781},{},[782],{"type":564,"value":783},"0 \u003C= value \u003C= 105",{"type":559,"tag":570,"props":785,"children":786},{},[787],{"type":564,"value":788},"最多调用 2 * 10^5 次 get 和 put",{"type":559,"tag":790,"props":791,"children":793},"h2",{"id":792},"解题思路",[794],{"type":564,"value":792},{"type":559,"tag":560,"props":796,"children":797},{},[798],{"type":564,"value":799},"题目要求的 1 和 2 相对简单，主要是条件 3，当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值",{"type":559,"tag":790,"props":801,"children":803},{"id":802},"实现",[804],{"type":564,"value":802},{"type":559,"tag":806,"props":807,"children":809},"h3",{"id":808},"map-方案",[810],{"type":564,"value":811},"Map 方案",{"type":559,"tag":596,"props":813,"children":817},{"className":814,"code":815,"language":816,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} capacity\n */\nvar LRUCache = function (capacity) {\n  this.cache = new Map();\n  this.capacity = capacity;\n};\n\n/**\n* @param {number} key\n* @return {number}\n*/\nLRUCache.prototype.get = function (key) {\n  if (!this.cache.has(key)) return -1;\n  const val = this.cache.get(key);\n  // 更新位置 => 先删除后添加\n  this.cache.delete(key);\n  this.cache.set(key, val);\n  return val;\n};\n\n/**\n* @param {number} key\n* @param {number} value\n* @return {void}\n*/\nLRUCache.prototype.put = function (key, value) {\n  // 已经存在的情况下，更新其位置到\"最新\"即可 => 先删除，后插入\n  if (this.cache.has(key)) {\n    this.cache.delete(key);\n  }\n  this.cache.set(key, value);\n\n  if (this.cache.size > this.capacity) {\n    // 如果超出 map 最大范围，找到第一个删除\n    // keys() 得到一个迭代器对象\n    const firstKey = this.cache.keys().next().value;\n    this.cache.delete(firstKey);\n  }\n}\n\n/**\n* Your LRUCache object will be instantiated and called as such:\n* var obj = new LRUCache(capacity)\n* var param_1 = obj.get(key)\n* obj.put(key,value)\n*/\n","js",[818],{"type":559,"tag":602,"props":819,"children":820},{"__ignoreMap":552},[821,830,872,880,925,963,992,1000,1007,1014,1047,1076,1084,1136,1209,1260,1268,1304,1350,1367,1375,1383,1391,1423,1456,1485,1493,1551,1560,1608,1645,1654,1698,1706,1764,1773,1782,1844,1881,1889,1897,1905,1913,1922,1931,1940,1949],{"type":559,"tag":606,"props":822,"children":823},{"class":608,"line":609},[824],{"type":559,"tag":606,"props":825,"children":827},{"style":826},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[828],{"type":564,"value":829},"/**\n",{"type":559,"tag":606,"props":831,"children":832},{"class":608,"line":618},[833,838,844,850,855,861,866],{"type":559,"tag":606,"props":834,"children":835},{"style":826},[836],{"type":564,"value":837}," * ",{"type":559,"tag":606,"props":839,"children":841},{"style":840},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[842],{"type":564,"value":843},"@",{"type":559,"tag":606,"props":845,"children":847},{"style":846},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[848],{"type":564,"value":849},"param",{"type":559,"tag":606,"props":851,"children":852},{"style":840},[853],{"type":564,"value":854}," {",{"type":559,"tag":606,"props":856,"children":858},{"style":857},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[859],{"type":564,"value":860},"number",{"type":559,"tag":606,"props":862,"children":863},{"style":840},[864],{"type":564,"value":865},"}",{"type":559,"tag":606,"props":867,"children":869},{"style":868},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[870],{"type":564,"value":871}," capacity\n",{"type":559,"tag":606,"props":873,"children":874},{"class":608,"line":627},[875],{"type":559,"tag":606,"props":876,"children":877},{"style":826},[878],{"type":564,"value":879}," */\n",{"type":559,"tag":606,"props":881,"children":882},{"class":608,"line":636},[883,889,895,900,905,910,915,920],{"type":559,"tag":606,"props":884,"children":886},{"style":885},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[887],{"type":564,"value":888},"var",{"type":559,"tag":606,"props":890,"children":892},{"style":891},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[893],{"type":564,"value":894}," LRUCache",{"type":559,"tag":606,"props":896,"children":897},{"style":840},[898],{"type":564,"value":899}," =",{"type":559,"tag":606,"props":901,"children":902},{"style":885},[903],{"type":564,"value":904}," function",{"type":559,"tag":606,"props":906,"children":907},{"style":840},[908],{"type":564,"value":909}," (",{"type":559,"tag":606,"props":911,"children":912},{"style":868},[913],{"type":564,"value":914},"capacity",{"type":559,"tag":606,"props":916,"children":917},{"style":840},[918],{"type":564,"value":919},")",{"type":559,"tag":606,"props":921,"children":922},{"style":840},[923],{"type":564,"value":924}," {\n",{"type":559,"tag":606,"props":926,"children":927},{"class":608,"line":645},[928,934,939,944,948,953,958],{"type":559,"tag":606,"props":929,"children":931},{"style":930},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[932],{"type":564,"value":933},"  this",{"type":559,"tag":606,"props":935,"children":936},{"style":840},[937],{"type":564,"value":938},".",{"type":559,"tag":606,"props":940,"children":941},{"style":868},[942],{"type":564,"value":943},"cache",{"type":559,"tag":606,"props":945,"children":946},{"style":840},[947],{"type":564,"value":899},{"type":559,"tag":606,"props":949,"children":950},{"style":885},[951],{"type":564,"value":952}," new",{"type":559,"tag":606,"props":954,"children":955},{"style":891},[956],{"type":564,"value":957}," Map",{"type":559,"tag":606,"props":959,"children":960},{"style":840},[961],{"type":564,"value":962},"();\n",{"type":559,"tag":606,"props":964,"children":965},{"class":608,"line":654},[966,970,974,978,982,987],{"type":559,"tag":606,"props":967,"children":968},{"style":930},[969],{"type":564,"value":933},{"type":559,"tag":606,"props":971,"children":972},{"style":840},[973],{"type":564,"value":938},{"type":559,"tag":606,"props":975,"children":976},{"style":868},[977],{"type":564,"value":914},{"type":559,"tag":606,"props":979,"children":980},{"style":840},[981],{"type":564,"value":899},{"type":559,"tag":606,"props":983,"children":984},{"style":868},[985],{"type":564,"value":986}," capacity",{"type":559,"tag":606,"props":988,"children":989},{"style":840},[990],{"type":564,"value":991},";\n",{"type":559,"tag":606,"props":993,"children":994},{"class":608,"line":664},[995],{"type":559,"tag":606,"props":996,"children":997},{"style":840},[998],{"type":564,"value":999},"};\n",{"type":559,"tag":606,"props":1001,"children":1002},{"class":608,"line":673},[1003],{"type":559,"tag":606,"props":1004,"children":1005},{"emptyLinePlaceholder":658},[1006],{"type":564,"value":661},{"type":559,"tag":606,"props":1008,"children":1009},{"class":608,"line":682},[1010],{"type":559,"tag":606,"props":1011,"children":1012},{"style":826},[1013],{"type":564,"value":829},{"type":559,"tag":606,"props":1015,"children":1016},{"class":608,"line":691},[1017,1022,1026,1030,1034,1038,1042],{"type":559,"tag":606,"props":1018,"children":1019},{"style":826},[1020],{"type":564,"value":1021},"* ",{"type":559,"tag":606,"props":1023,"children":1024},{"style":840},[1025],{"type":564,"value":843},{"type":559,"tag":606,"props":1027,"children":1028},{"style":846},[1029],{"type":564,"value":849},{"type":559,"tag":606,"props":1031,"children":1032},{"style":840},[1033],{"type":564,"value":854},{"type":559,"tag":606,"props":1035,"children":1036},{"style":857},[1037],{"type":564,"value":860},{"type":559,"tag":606,"props":1039,"children":1040},{"style":840},[1041],{"type":564,"value":865},{"type":559,"tag":606,"props":1043,"children":1044},{"style":868},[1045],{"type":564,"value":1046}," key\n",{"type":559,"tag":606,"props":1048,"children":1049},{"class":608,"line":700},[1050,1054,1058,1063,1067,1071],{"type":559,"tag":606,"props":1051,"children":1052},{"style":826},[1053],{"type":564,"value":1021},{"type":559,"tag":606,"props":1055,"children":1056},{"style":840},[1057],{"type":564,"value":843},{"type":559,"tag":606,"props":1059,"children":1060},{"style":846},[1061],{"type":564,"value":1062},"return",{"type":559,"tag":606,"props":1064,"children":1065},{"style":840},[1066],{"type":564,"value":854},{"type":559,"tag":606,"props":1068,"children":1069},{"style":857},[1070],{"type":564,"value":860},{"type":559,"tag":606,"props":1072,"children":1073},{"style":840},[1074],{"type":564,"value":1075},"}\n",{"type":559,"tag":606,"props":1077,"children":1078},{"class":608,"line":709},[1079],{"type":559,"tag":606,"props":1080,"children":1081},{"style":826},[1082],{"type":564,"value":1083},"*/\n",{"type":559,"tag":606,"props":1085,"children":1086},{"class":608,"line":718},[1087,1093,1097,1102,1106,1111,1115,1119,1123,1128,1132],{"type":559,"tag":606,"props":1088,"children":1090},{"style":1089},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1091],{"type":564,"value":1092},"LRUCache",{"type":559,"tag":606,"props":1094,"children":1095},{"style":840},[1096],{"type":564,"value":938},{"type":559,"tag":606,"props":1098,"children":1099},{"style":1089},[1100],{"type":564,"value":1101},"prototype",{"type":559,"tag":606,"props":1103,"children":1104},{"style":840},[1105],{"type":564,"value":938},{"type":559,"tag":606,"props":1107,"children":1108},{"style":891},[1109],{"type":564,"value":1110},"get",{"type":559,"tag":606,"props":1112,"children":1113},{"style":840},[1114],{"type":564,"value":899},{"type":559,"tag":606,"props":1116,"children":1117},{"style":885},[1118],{"type":564,"value":904},{"type":559,"tag":606,"props":1120,"children":1121},{"style":840},[1122],{"type":564,"value":909},{"type":559,"tag":606,"props":1124,"children":1125},{"style":868},[1126],{"type":564,"value":1127},"key",{"type":559,"tag":606,"props":1129,"children":1130},{"style":840},[1131],{"type":564,"value":919},{"type":559,"tag":606,"props":1133,"children":1134},{"style":840},[1135],{"type":564,"value":924},{"type":559,"tag":606,"props":1137,"children":1138},{"class":608,"line":727},[1139,1144,1148,1153,1158,1162,1166,1170,1175,1180,1184,1189,1194,1199,1205],{"type":559,"tag":606,"props":1140,"children":1141},{"style":846},[1142],{"type":564,"value":1143},"  if",{"type":559,"tag":606,"props":1145,"children":1146},{"style":840},[1147],{"type":564,"value":909},{"type":559,"tag":606,"props":1149,"children":1150},{"style":885},[1151],{"type":564,"value":1152},"!",{"type":559,"tag":606,"props":1154,"children":1155},{"style":930},[1156],{"type":564,"value":1157},"this",{"type":559,"tag":606,"props":1159,"children":1160},{"style":840},[1161],{"type":564,"value":938},{"type":559,"tag":606,"props":1163,"children":1164},{"style":868},[1165],{"type":564,"value":943},{"type":559,"tag":606,"props":1167,"children":1168},{"style":840},[1169],{"type":564,"value":938},{"type":559,"tag":606,"props":1171,"children":1172},{"style":891},[1173],{"type":564,"value":1174},"has",{"type":559,"tag":606,"props":1176,"children":1177},{"style":840},[1178],{"type":564,"value":1179},"(",{"type":559,"tag":606,"props":1181,"children":1182},{"style":868},[1183],{"type":564,"value":1127},{"type":559,"tag":606,"props":1185,"children":1186},{"style":840},[1187],{"type":564,"value":1188},"))",{"type":559,"tag":606,"props":1190,"children":1191},{"style":846},[1192],{"type":564,"value":1193}," return",{"type":559,"tag":606,"props":1195,"children":1196},{"style":885},[1197],{"type":564,"value":1198}," -",{"type":559,"tag":606,"props":1200,"children":1202},{"style":1201},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1203],{"type":564,"value":1204},"1",{"type":559,"tag":606,"props":1206,"children":1207},{"style":840},[1208],{"type":564,"value":991},{"type":559,"tag":606,"props":1210,"children":1211},{"class":608,"line":736},[1212,1217,1222,1226,1231,1235,1239,1243,1247,1251,1255],{"type":559,"tag":606,"props":1213,"children":1214},{"style":885},[1215],{"type":564,"value":1216},"  const",{"type":559,"tag":606,"props":1218,"children":1219},{"style":868},[1220],{"type":564,"value":1221}," val",{"type":559,"tag":606,"props":1223,"children":1224},{"style":840},[1225],{"type":564,"value":899},{"type":559,"tag":606,"props":1227,"children":1228},{"style":930},[1229],{"type":564,"value":1230}," this",{"type":559,"tag":606,"props":1232,"children":1233},{"style":840},[1234],{"type":564,"value":938},{"type":559,"tag":606,"props":1236,"children":1237},{"style":868},[1238],{"type":564,"value":943},{"type":559,"tag":606,"props":1240,"children":1241},{"style":840},[1242],{"type":564,"value":938},{"type":559,"tag":606,"props":1244,"children":1245},{"style":891},[1246],{"type":564,"value":1110},{"type":559,"tag":606,"props":1248,"children":1249},{"style":840},[1250],{"type":564,"value":1179},{"type":559,"tag":606,"props":1252,"children":1253},{"style":868},[1254],{"type":564,"value":1127},{"type":559,"tag":606,"props":1256,"children":1257},{"style":840},[1258],{"type":564,"value":1259},");\n",{"type":559,"tag":606,"props":1261,"children":1262},{"class":608,"line":745},[1263],{"type":559,"tag":606,"props":1264,"children":1265},{"style":826},[1266],{"type":564,"value":1267},"  // 更新位置 => 先删除后添加\n",{"type":559,"tag":606,"props":1269,"children":1270},{"class":608,"line":754},[1271,1275,1279,1283,1287,1292,1296,1300],{"type":559,"tag":606,"props":1272,"children":1273},{"style":930},[1274],{"type":564,"value":933},{"type":559,"tag":606,"props":1276,"children":1277},{"style":840},[1278],{"type":564,"value":938},{"type":559,"tag":606,"props":1280,"children":1281},{"style":868},[1282],{"type":564,"value":943},{"type":559,"tag":606,"props":1284,"children":1285},{"style":840},[1286],{"type":564,"value":938},{"type":559,"tag":606,"props":1288,"children":1289},{"style":891},[1290],{"type":564,"value":1291},"delete",{"type":559,"tag":606,"props":1293,"children":1294},{"style":840},[1295],{"type":564,"value":1179},{"type":559,"tag":606,"props":1297,"children":1298},{"style":868},[1299],{"type":564,"value":1127},{"type":559,"tag":606,"props":1301,"children":1302},{"style":840},[1303],{"type":564,"value":1259},{"type":559,"tag":606,"props":1305,"children":1307},{"class":608,"line":1306},18,[1308,1312,1316,1320,1324,1329,1333,1337,1342,1346],{"type":559,"tag":606,"props":1309,"children":1310},{"style":930},[1311],{"type":564,"value":933},{"type":559,"tag":606,"props":1313,"children":1314},{"style":840},[1315],{"type":564,"value":938},{"type":559,"tag":606,"props":1317,"children":1318},{"style":868},[1319],{"type":564,"value":943},{"type":559,"tag":606,"props":1321,"children":1322},{"style":840},[1323],{"type":564,"value":938},{"type":559,"tag":606,"props":1325,"children":1326},{"style":891},[1327],{"type":564,"value":1328},"set",{"type":559,"tag":606,"props":1330,"children":1331},{"style":840},[1332],{"type":564,"value":1179},{"type":559,"tag":606,"props":1334,"children":1335},{"style":868},[1336],{"type":564,"value":1127},{"type":559,"tag":606,"props":1338,"children":1339},{"style":840},[1340],{"type":564,"value":1341},",",{"type":559,"tag":606,"props":1343,"children":1344},{"style":868},[1345],{"type":564,"value":1221},{"type":559,"tag":606,"props":1347,"children":1348},{"style":840},[1349],{"type":564,"value":1259},{"type":559,"tag":606,"props":1351,"children":1353},{"class":608,"line":1352},19,[1354,1359,1363],{"type":559,"tag":606,"props":1355,"children":1356},{"style":846},[1357],{"type":564,"value":1358},"  return",{"type":559,"tag":606,"props":1360,"children":1361},{"style":868},[1362],{"type":564,"value":1221},{"type":559,"tag":606,"props":1364,"children":1365},{"style":840},[1366],{"type":564,"value":991},{"type":559,"tag":606,"props":1368,"children":1370},{"class":608,"line":1369},20,[1371],{"type":559,"tag":606,"props":1372,"children":1373},{"style":840},[1374],{"type":564,"value":999},{"type":559,"tag":606,"props":1376,"children":1378},{"class":608,"line":1377},21,[1379],{"type":559,"tag":606,"props":1380,"children":1381},{"emptyLinePlaceholder":658},[1382],{"type":564,"value":661},{"type":559,"tag":606,"props":1384,"children":1386},{"class":608,"line":1385},22,[1387],{"type":559,"tag":606,"props":1388,"children":1389},{"style":826},[1390],{"type":564,"value":829},{"type":559,"tag":606,"props":1392,"children":1394},{"class":608,"line":1393},23,[1395,1399,1403,1407,1411,1415,1419],{"type":559,"tag":606,"props":1396,"children":1397},{"style":826},[1398],{"type":564,"value":1021},{"type":559,"tag":606,"props":1400,"children":1401},{"style":840},[1402],{"type":564,"value":843},{"type":559,"tag":606,"props":1404,"children":1405},{"style":846},[1406],{"type":564,"value":849},{"type":559,"tag":606,"props":1408,"children":1409},{"style":840},[1410],{"type":564,"value":854},{"type":559,"tag":606,"props":1412,"children":1413},{"style":857},[1414],{"type":564,"value":860},{"type":559,"tag":606,"props":1416,"children":1417},{"style":840},[1418],{"type":564,"value":865},{"type":559,"tag":606,"props":1420,"children":1421},{"style":868},[1422],{"type":564,"value":1046},{"type":559,"tag":606,"props":1424,"children":1426},{"class":608,"line":1425},24,[1427,1431,1435,1439,1443,1447,1451],{"type":559,"tag":606,"props":1428,"children":1429},{"style":826},[1430],{"type":564,"value":1021},{"type":559,"tag":606,"props":1432,"children":1433},{"style":840},[1434],{"type":564,"value":843},{"type":559,"tag":606,"props":1436,"children":1437},{"style":846},[1438],{"type":564,"value":849},{"type":559,"tag":606,"props":1440,"children":1441},{"style":840},[1442],{"type":564,"value":854},{"type":559,"tag":606,"props":1444,"children":1445},{"style":857},[1446],{"type":564,"value":860},{"type":559,"tag":606,"props":1448,"children":1449},{"style":840},[1450],{"type":564,"value":865},{"type":559,"tag":606,"props":1452,"children":1453},{"style":868},[1454],{"type":564,"value":1455}," value\n",{"type":559,"tag":606,"props":1457,"children":1459},{"class":608,"line":1458},25,[1460,1464,1468,1472,1476,1481],{"type":559,"tag":606,"props":1461,"children":1462},{"style":826},[1463],{"type":564,"value":1021},{"type":559,"tag":606,"props":1465,"children":1466},{"style":840},[1467],{"type":564,"value":843},{"type":559,"tag":606,"props":1469,"children":1470},{"style":846},[1471],{"type":564,"value":1062},{"type":559,"tag":606,"props":1473,"children":1474},{"style":840},[1475],{"type":564,"value":854},{"type":559,"tag":606,"props":1477,"children":1478},{"style":857},[1479],{"type":564,"value":1480},"void",{"type":559,"tag":606,"props":1482,"children":1483},{"style":840},[1484],{"type":564,"value":1075},{"type":559,"tag":606,"props":1486,"children":1488},{"class":608,"line":1487},26,[1489],{"type":559,"tag":606,"props":1490,"children":1491},{"style":826},[1492],{"type":564,"value":1083},{"type":559,"tag":606,"props":1494,"children":1496},{"class":608,"line":1495},27,[1497,1501,1505,1509,1513,1518,1522,1526,1530,1534,1538,1543,1547],{"type":559,"tag":606,"props":1498,"children":1499},{"style":1089},[1500],{"type":564,"value":1092},{"type":559,"tag":606,"props":1502,"children":1503},{"style":840},[1504],{"type":564,"value":938},{"type":559,"tag":606,"props":1506,"children":1507},{"style":1089},[1508],{"type":564,"value":1101},{"type":559,"tag":606,"props":1510,"children":1511},{"style":840},[1512],{"type":564,"value":938},{"type":559,"tag":606,"props":1514,"children":1515},{"style":891},[1516],{"type":564,"value":1517},"put",{"type":559,"tag":606,"props":1519,"children":1520},{"style":840},[1521],{"type":564,"value":899},{"type":559,"tag":606,"props":1523,"children":1524},{"style":885},[1525],{"type":564,"value":904},{"type":559,"tag":606,"props":1527,"children":1528},{"style":840},[1529],{"type":564,"value":909},{"type":559,"tag":606,"props":1531,"children":1532},{"style":868},[1533],{"type":564,"value":1127},{"type":559,"tag":606,"props":1535,"children":1536},{"style":840},[1537],{"type":564,"value":1341},{"type":559,"tag":606,"props":1539,"children":1540},{"style":868},[1541],{"type":564,"value":1542}," value",{"type":559,"tag":606,"props":1544,"children":1545},{"style":840},[1546],{"type":564,"value":919},{"type":559,"tag":606,"props":1548,"children":1549},{"style":840},[1550],{"type":564,"value":924},{"type":559,"tag":606,"props":1552,"children":1554},{"class":608,"line":1553},28,[1555],{"type":559,"tag":606,"props":1556,"children":1557},{"style":826},[1558],{"type":564,"value":1559},"  // 已经存在的情况下，更新其位置到\"最新\"即可 => 先删除，后插入\n",{"type":559,"tag":606,"props":1561,"children":1563},{"class":608,"line":1562},29,[1564,1568,1572,1576,1580,1584,1588,1592,1596,1600,1604],{"type":559,"tag":606,"props":1565,"children":1566},{"style":846},[1567],{"type":564,"value":1143},{"type":559,"tag":606,"props":1569,"children":1570},{"style":840},[1571],{"type":564,"value":909},{"type":559,"tag":606,"props":1573,"children":1574},{"style":930},[1575],{"type":564,"value":1157},{"type":559,"tag":606,"props":1577,"children":1578},{"style":840},[1579],{"type":564,"value":938},{"type":559,"tag":606,"props":1581,"children":1582},{"style":868},[1583],{"type":564,"value":943},{"type":559,"tag":606,"props":1585,"children":1586},{"style":840},[1587],{"type":564,"value":938},{"type":559,"tag":606,"props":1589,"children":1590},{"style":891},[1591],{"type":564,"value":1174},{"type":559,"tag":606,"props":1593,"children":1594},{"style":840},[1595],{"type":564,"value":1179},{"type":559,"tag":606,"props":1597,"children":1598},{"style":868},[1599],{"type":564,"value":1127},{"type":559,"tag":606,"props":1601,"children":1602},{"style":840},[1603],{"type":564,"value":1188},{"type":559,"tag":606,"props":1605,"children":1606},{"style":840},[1607],{"type":564,"value":924},{"type":559,"tag":606,"props":1609,"children":1611},{"class":608,"line":1610},30,[1612,1617,1621,1625,1629,1633,1637,1641],{"type":559,"tag":606,"props":1613,"children":1614},{"style":930},[1615],{"type":564,"value":1616},"    this",{"type":559,"tag":606,"props":1618,"children":1619},{"style":840},[1620],{"type":564,"value":938},{"type":559,"tag":606,"props":1622,"children":1623},{"style":868},[1624],{"type":564,"value":943},{"type":559,"tag":606,"props":1626,"children":1627},{"style":840},[1628],{"type":564,"value":938},{"type":559,"tag":606,"props":1630,"children":1631},{"style":891},[1632],{"type":564,"value":1291},{"type":559,"tag":606,"props":1634,"children":1635},{"style":840},[1636],{"type":564,"value":1179},{"type":559,"tag":606,"props":1638,"children":1639},{"style":868},[1640],{"type":564,"value":1127},{"type":559,"tag":606,"props":1642,"children":1643},{"style":840},[1644],{"type":564,"value":1259},{"type":559,"tag":606,"props":1646,"children":1648},{"class":608,"line":1647},31,[1649],{"type":559,"tag":606,"props":1650,"children":1651},{"style":840},[1652],{"type":564,"value":1653},"  }\n",{"type":559,"tag":606,"props":1655,"children":1657},{"class":608,"line":1656},32,[1658,1662,1666,1670,1674,1678,1682,1686,1690,1694],{"type":559,"tag":606,"props":1659,"children":1660},{"style":930},[1661],{"type":564,"value":933},{"type":559,"tag":606,"props":1663,"children":1664},{"style":840},[1665],{"type":564,"value":938},{"type":559,"tag":606,"props":1667,"children":1668},{"style":868},[1669],{"type":564,"value":943},{"type":559,"tag":606,"props":1671,"children":1672},{"style":840},[1673],{"type":564,"value":938},{"type":559,"tag":606,"props":1675,"children":1676},{"style":891},[1677],{"type":564,"value":1328},{"type":559,"tag":606,"props":1679,"children":1680},{"style":840},[1681],{"type":564,"value":1179},{"type":559,"tag":606,"props":1683,"children":1684},{"style":868},[1685],{"type":564,"value":1127},{"type":559,"tag":606,"props":1687,"children":1688},{"style":840},[1689],{"type":564,"value":1341},{"type":559,"tag":606,"props":1691,"children":1692},{"style":868},[1693],{"type":564,"value":1542},{"type":559,"tag":606,"props":1695,"children":1696},{"style":840},[1697],{"type":564,"value":1259},{"type":559,"tag":606,"props":1699,"children":1701},{"class":608,"line":1700},33,[1702],{"type":559,"tag":606,"props":1703,"children":1704},{"emptyLinePlaceholder":658},[1705],{"type":564,"value":661},{"type":559,"tag":606,"props":1707,"children":1709},{"class":608,"line":1708},34,[1710,1714,1718,1722,1726,1730,1734,1739,1744,1748,1752,1756,1760],{"type":559,"tag":606,"props":1711,"children":1712},{"style":846},[1713],{"type":564,"value":1143},{"type":559,"tag":606,"props":1715,"children":1716},{"style":840},[1717],{"type":564,"value":909},{"type":559,"tag":606,"props":1719,"children":1720},{"style":930},[1721],{"type":564,"value":1157},{"type":559,"tag":606,"props":1723,"children":1724},{"style":840},[1725],{"type":564,"value":938},{"type":559,"tag":606,"props":1727,"children":1728},{"style":868},[1729],{"type":564,"value":943},{"type":559,"tag":606,"props":1731,"children":1732},{"style":840},[1733],{"type":564,"value":938},{"type":559,"tag":606,"props":1735,"children":1736},{"style":868},[1737],{"type":564,"value":1738},"size",{"type":559,"tag":606,"props":1740,"children":1741},{"style":840},[1742],{"type":564,"value":1743}," >",{"type":559,"tag":606,"props":1745,"children":1746},{"style":930},[1747],{"type":564,"value":1230},{"type":559,"tag":606,"props":1749,"children":1750},{"style":840},[1751],{"type":564,"value":938},{"type":559,"tag":606,"props":1753,"children":1754},{"style":868},[1755],{"type":564,"value":914},{"type":559,"tag":606,"props":1757,"children":1758},{"style":840},[1759],{"type":564,"value":919},{"type":559,"tag":606,"props":1761,"children":1762},{"style":840},[1763],{"type":564,"value":924},{"type":559,"tag":606,"props":1765,"children":1767},{"class":608,"line":1766},35,[1768],{"type":559,"tag":606,"props":1769,"children":1770},{"style":826},[1771],{"type":564,"value":1772},"    // 如果超出 map 最大范围，找到第一个删除\n",{"type":559,"tag":606,"props":1774,"children":1776},{"class":608,"line":1775},36,[1777],{"type":559,"tag":606,"props":1778,"children":1779},{"style":826},[1780],{"type":564,"value":1781},"    // keys() 得到一个迭代器对象\n",{"type":559,"tag":606,"props":1783,"children":1785},{"class":608,"line":1784},37,[1786,1791,1796,1800,1804,1808,1812,1816,1821,1826,1831,1835,1840],{"type":559,"tag":606,"props":1787,"children":1788},{"style":885},[1789],{"type":564,"value":1790},"    const",{"type":559,"tag":606,"props":1792,"children":1793},{"style":868},[1794],{"type":564,"value":1795}," firstKey",{"type":559,"tag":606,"props":1797,"children":1798},{"style":840},[1799],{"type":564,"value":899},{"type":559,"tag":606,"props":1801,"children":1802},{"style":930},[1803],{"type":564,"value":1230},{"type":559,"tag":606,"props":1805,"children":1806},{"style":840},[1807],{"type":564,"value":938},{"type":559,"tag":606,"props":1809,"children":1810},{"style":868},[1811],{"type":564,"value":943},{"type":559,"tag":606,"props":1813,"children":1814},{"style":840},[1815],{"type":564,"value":938},{"type":559,"tag":606,"props":1817,"children":1818},{"style":891},[1819],{"type":564,"value":1820},"keys",{"type":559,"tag":606,"props":1822,"children":1823},{"style":840},[1824],{"type":564,"value":1825},"().",{"type":559,"tag":606,"props":1827,"children":1828},{"style":891},[1829],{"type":564,"value":1830},"next",{"type":559,"tag":606,"props":1832,"children":1833},{"style":840},[1834],{"type":564,"value":1825},{"type":559,"tag":606,"props":1836,"children":1837},{"style":868},[1838],{"type":564,"value":1839},"value",{"type":559,"tag":606,"props":1841,"children":1842},{"style":840},[1843],{"type":564,"value":991},{"type":559,"tag":606,"props":1845,"children":1847},{"class":608,"line":1846},38,[1848,1852,1856,1860,1864,1868,1872,1877],{"type":559,"tag":606,"props":1849,"children":1850},{"style":930},[1851],{"type":564,"value":1616},{"type":559,"tag":606,"props":1853,"children":1854},{"style":840},[1855],{"type":564,"value":938},{"type":559,"tag":606,"props":1857,"children":1858},{"style":868},[1859],{"type":564,"value":943},{"type":559,"tag":606,"props":1861,"children":1862},{"style":840},[1863],{"type":564,"value":938},{"type":559,"tag":606,"props":1865,"children":1866},{"style":891},[1867],{"type":564,"value":1291},{"type":559,"tag":606,"props":1869,"children":1870},{"style":840},[1871],{"type":564,"value":1179},{"type":559,"tag":606,"props":1873,"children":1874},{"style":868},[1875],{"type":564,"value":1876},"firstKey",{"type":559,"tag":606,"props":1878,"children":1879},{"style":840},[1880],{"type":564,"value":1259},{"type":559,"tag":606,"props":1882,"children":1884},{"class":608,"line":1883},39,[1885],{"type":559,"tag":606,"props":1886,"children":1887},{"style":840},[1888],{"type":564,"value":1653},{"type":559,"tag":606,"props":1890,"children":1892},{"class":608,"line":1891},40,[1893],{"type":559,"tag":606,"props":1894,"children":1895},{"style":840},[1896],{"type":564,"value":1075},{"type":559,"tag":606,"props":1898,"children":1900},{"class":608,"line":1899},41,[1901],{"type":559,"tag":606,"props":1902,"children":1903},{"emptyLinePlaceholder":658},[1904],{"type":564,"value":661},{"type":559,"tag":606,"props":1906,"children":1908},{"class":608,"line":1907},42,[1909],{"type":559,"tag":606,"props":1910,"children":1911},{"style":826},[1912],{"type":564,"value":829},{"type":559,"tag":606,"props":1914,"children":1916},{"class":608,"line":1915},43,[1917],{"type":559,"tag":606,"props":1918,"children":1919},{"style":826},[1920],{"type":564,"value":1921},"* Your LRUCache object will be instantiated and called as such:\n",{"type":559,"tag":606,"props":1923,"children":1925},{"class":608,"line":1924},44,[1926],{"type":559,"tag":606,"props":1927,"children":1928},{"style":826},[1929],{"type":564,"value":1930},"* var obj = new LRUCache(capacity)\n",{"type":559,"tag":606,"props":1932,"children":1934},{"class":608,"line":1933},45,[1935],{"type":559,"tag":606,"props":1936,"children":1937},{"style":826},[1938],{"type":564,"value":1939},"* var param_1 = obj.get(key)\n",{"type":559,"tag":606,"props":1941,"children":1943},{"class":608,"line":1942},46,[1944],{"type":559,"tag":606,"props":1945,"children":1946},{"style":826},[1947],{"type":564,"value":1948},"* obj.put(key,value)\n",{"type":559,"tag":606,"props":1950,"children":1952},{"class":608,"line":1951},47,[1953],{"type":559,"tag":606,"props":1954,"children":1955},{"style":826},[1956],{"type":564,"value":1083},{"type":559,"tag":1958,"props":1959,"children":1960},"style",{},[1961],{"type":564,"value":1962},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":645,"depth":645,"links":1964},[1965,1966],{"id":792,"depth":618,"text":792},{"id":802,"depth":618,"text":802,"children":1967},[1968],{"id":808,"depth":627,"text":811},"markdown","content:1.algorithm:3.leetcode:3.major:146.lru-cache.md","content","1.algorithm/3.leetcode/3.major/146.lru-cache.md","md",[1975,1977],{"_path":174,"title":173,"description":1976},"给你一个链表的头节点 head ，判断链表中是否有环。",{"_path":180,"title":179,"description":1978},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",1715007653298]