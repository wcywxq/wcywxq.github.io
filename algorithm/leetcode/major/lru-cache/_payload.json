[{"data":1,"prerenderedAt":1989},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/lru-cache":559,"/algorithm/leetcode/major/lru-cache-surround":1984},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":177,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":176,"description":563,"url":564,"body":565,"_type":1979,"_id":1980,"_source":1981,"_file":1982,"_extension":1983},"major",false,"","请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：","https://leetcode.cn/problems/lru-cache",{"type":566,"children":567,"toc":1973},"root",[568,575,595,600,605,771,776,799,805,810,815,822,1967],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":576,"props":577,"children":578},"ul",{},[579,585,590],{"type":569,"tag":580,"props":581,"children":582},"li",{},[583],{"type":574,"value":584},"LRUCache(int capacity) 以 正整数 作为容量 capacity 初始化 LRU 缓存",{"type":569,"tag":580,"props":586,"children":587},{},[588],{"type":574,"value":589},"int get(int key) 如果关键字 key 存在于缓存中，则返回关键字的值，否则返回 -1 。",{"type":569,"tag":580,"props":591,"children":592},{},[593],{"type":574,"value":594},"void put(int key, int value) 如果关键字 key 已经存在，则变更其数据值 value ；如果不存在，则向缓存中插入该组 key-value 。如果插入操作导致关键字数量超过 capacity ，则应该 逐出 最久未使用的关键字。",{"type":569,"tag":570,"props":596,"children":597},{},[598],{"type":574,"value":599},"函数 get 和 put 必须以 O(1) 的平均时间复杂度运行。",{"type":569,"tag":570,"props":601,"children":602},{},[603],{"type":574,"value":604},"示例：",{"type":569,"tag":606,"props":607,"children":610},"pre",{"className":608,"code":609,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n输出\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n解释\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // 缓存是 {1=1}\nlRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\nlRUCache.get(1); // 返回 1\nlRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\nlRUCache.get(2); // 返回 -1 (未找到)\nlRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\nlRUCache.get(1); // 返回 -1 (未找到)\nlRUCache.get(3); // 返回 3\nlRUCache.get(4); // 返回 4\n",[611],{"type":569,"tag":612,"props":613,"children":614},"code",{"__ignoreMap":562},[615,626,635,644,653,662,672,681,690,699,708,717,726,735,744,753,762],{"type":569,"tag":616,"props":617,"children":620},"span",{"class":618,"line":619},"line",1,[621],{"type":569,"tag":616,"props":622,"children":623},{},[624],{"type":574,"value":625},"输入\n",{"type":569,"tag":616,"props":627,"children":629},{"class":618,"line":628},2,[630],{"type":569,"tag":616,"props":631,"children":632},{},[633],{"type":574,"value":634},"[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n",{"type":569,"tag":616,"props":636,"children":638},{"class":618,"line":637},3,[639],{"type":569,"tag":616,"props":640,"children":641},{},[642],{"type":574,"value":643},"[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n",{"type":569,"tag":616,"props":645,"children":647},{"class":618,"line":646},4,[648],{"type":569,"tag":616,"props":649,"children":650},{},[651],{"type":574,"value":652},"输出\n",{"type":569,"tag":616,"props":654,"children":656},{"class":618,"line":655},5,[657],{"type":569,"tag":616,"props":658,"children":659},{},[660],{"type":574,"value":661},"[null, null, null, 1, null, -1, null, -1, 3, 4]\n",{"type":569,"tag":616,"props":663,"children":665},{"class":618,"line":664},6,[666],{"type":569,"tag":616,"props":667,"children":669},{"emptyLinePlaceholder":668},true,[670],{"type":574,"value":671},"\n",{"type":569,"tag":616,"props":673,"children":675},{"class":618,"line":674},7,[676],{"type":569,"tag":616,"props":677,"children":678},{},[679],{"type":574,"value":680},"解释\n",{"type":569,"tag":616,"props":682,"children":684},{"class":618,"line":683},8,[685],{"type":569,"tag":616,"props":686,"children":687},{},[688],{"type":574,"value":689},"LRUCache lRUCache = new LRUCache(2);\n",{"type":569,"tag":616,"props":691,"children":693},{"class":618,"line":692},9,[694],{"type":569,"tag":616,"props":695,"children":696},{},[697],{"type":574,"value":698},"lRUCache.put(1, 1); // 缓存是 {1=1}\n",{"type":569,"tag":616,"props":700,"children":702},{"class":618,"line":701},10,[703],{"type":569,"tag":616,"props":704,"children":705},{},[706],{"type":574,"value":707},"lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\n",{"type":569,"tag":616,"props":709,"children":711},{"class":618,"line":710},11,[712],{"type":569,"tag":616,"props":713,"children":714},{},[715],{"type":574,"value":716},"lRUCache.get(1); // 返回 1\n",{"type":569,"tag":616,"props":718,"children":720},{"class":618,"line":719},12,[721],{"type":569,"tag":616,"props":722,"children":723},{},[724],{"type":574,"value":725},"lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\n",{"type":569,"tag":616,"props":727,"children":729},{"class":618,"line":728},13,[730],{"type":569,"tag":616,"props":731,"children":732},{},[733],{"type":574,"value":734},"lRUCache.get(2); // 返回 -1 (未找到)\n",{"type":569,"tag":616,"props":736,"children":738},{"class":618,"line":737},14,[739],{"type":569,"tag":616,"props":740,"children":741},{},[742],{"type":574,"value":743},"lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\n",{"type":569,"tag":616,"props":745,"children":747},{"class":618,"line":746},15,[748],{"type":569,"tag":616,"props":749,"children":750},{},[751],{"type":574,"value":752},"lRUCache.get(1); // 返回 -1 (未找到)\n",{"type":569,"tag":616,"props":754,"children":756},{"class":618,"line":755},16,[757],{"type":569,"tag":616,"props":758,"children":759},{},[760],{"type":574,"value":761},"lRUCache.get(3); // 返回 3\n",{"type":569,"tag":616,"props":763,"children":765},{"class":618,"line":764},17,[766],{"type":569,"tag":616,"props":767,"children":768},{},[769],{"type":574,"value":770},"lRUCache.get(4); // 返回 4\n",{"type":569,"tag":570,"props":772,"children":773},{},[774],{"type":574,"value":775},"提示：",{"type":569,"tag":576,"props":777,"children":778},{},[779,784,789,794],{"type":569,"tag":580,"props":780,"children":781},{},[782],{"type":574,"value":783},"1 \u003C= capacity \u003C= 3000",{"type":569,"tag":580,"props":785,"children":786},{},[787],{"type":574,"value":788},"0 \u003C= key \u003C= 10000",{"type":569,"tag":580,"props":790,"children":791},{},[792],{"type":574,"value":793},"0 \u003C= value \u003C= 105",{"type":569,"tag":580,"props":795,"children":796},{},[797],{"type":574,"value":798},"最多调用 2 * 10^5 次 get 和 put",{"type":569,"tag":800,"props":801,"children":803},"h2",{"id":802},"解题思路",[804],{"type":574,"value":802},{"type":569,"tag":570,"props":806,"children":807},{},[808],{"type":574,"value":809},"题目要求的 1 和 2 相对简单，主要是条件 3，当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值",{"type":569,"tag":800,"props":811,"children":813},{"id":812},"实现",[814],{"type":574,"value":812},{"type":569,"tag":816,"props":817,"children":819},"h3",{"id":818},"map-方案",[820],{"type":574,"value":821},"Map 方案",{"type":569,"tag":606,"props":823,"children":827},{"className":824,"code":825,"language":826,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} capacity\n */\nvar LRUCache = function (capacity) {\n  this.cache = new Map();\n  this.capacity = capacity;\n};\n\n/**\n* @param {number} key\n* @return {number}\n*/\nLRUCache.prototype.get = function (key) {\n  if (!this.cache.has(key)) return -1;\n  const val = this.cache.get(key);\n  // 更新位置 => 先删除后添加\n  this.cache.delete(key);\n  this.cache.set(key, val);\n  return val;\n};\n\n/**\n* @param {number} key\n* @param {number} value\n* @return {void}\n*/\nLRUCache.prototype.put = function (key, value) {\n  // 已经存在的情况下，更新其位置到\"最新\"即可 => 先删除，后插入\n  if (this.cache.has(key)) {\n    this.cache.delete(key);\n  }\n  this.cache.set(key, value);\n\n  if (this.cache.size > this.capacity) {\n    // 如果超出 map 最大范围，找到第一个删除\n    // keys() 得到一个迭代器对象\n    const firstKey = this.cache.keys().next().value;\n    this.cache.delete(firstKey);\n  }\n}\n\n/**\n* Your LRUCache object will be instantiated and called as such:\n* var obj = new LRUCache(capacity)\n* var param_1 = obj.get(key)\n* obj.put(key,value)\n*/\n","js",[828],{"type":569,"tag":612,"props":829,"children":830},{"__ignoreMap":562},[831,840,882,890,935,973,1002,1010,1017,1024,1057,1086,1094,1146,1219,1270,1278,1314,1360,1377,1385,1393,1401,1433,1466,1495,1503,1561,1570,1618,1655,1664,1708,1716,1774,1783,1792,1854,1891,1899,1907,1915,1923,1932,1941,1950,1959],{"type":569,"tag":616,"props":832,"children":833},{"class":618,"line":619},[834],{"type":569,"tag":616,"props":835,"children":837},{"style":836},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[838],{"type":574,"value":839},"/**\n",{"type":569,"tag":616,"props":841,"children":842},{"class":618,"line":628},[843,848,854,860,865,871,876],{"type":569,"tag":616,"props":844,"children":845},{"style":836},[846],{"type":574,"value":847}," * ",{"type":569,"tag":616,"props":849,"children":851},{"style":850},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[852],{"type":574,"value":853},"@",{"type":569,"tag":616,"props":855,"children":857},{"style":856},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[858],{"type":574,"value":859},"param",{"type":569,"tag":616,"props":861,"children":862},{"style":850},[863],{"type":574,"value":864}," {",{"type":569,"tag":616,"props":866,"children":868},{"style":867},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[869],{"type":574,"value":870},"number",{"type":569,"tag":616,"props":872,"children":873},{"style":850},[874],{"type":574,"value":875},"}",{"type":569,"tag":616,"props":877,"children":879},{"style":878},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[880],{"type":574,"value":881}," capacity\n",{"type":569,"tag":616,"props":883,"children":884},{"class":618,"line":637},[885],{"type":569,"tag":616,"props":886,"children":887},{"style":836},[888],{"type":574,"value":889}," */\n",{"type":569,"tag":616,"props":891,"children":892},{"class":618,"line":646},[893,899,905,910,915,920,925,930],{"type":569,"tag":616,"props":894,"children":896},{"style":895},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[897],{"type":574,"value":898},"var",{"type":569,"tag":616,"props":900,"children":902},{"style":901},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[903],{"type":574,"value":904}," LRUCache",{"type":569,"tag":616,"props":906,"children":907},{"style":850},[908],{"type":574,"value":909}," =",{"type":569,"tag":616,"props":911,"children":912},{"style":895},[913],{"type":574,"value":914}," function",{"type":569,"tag":616,"props":916,"children":917},{"style":850},[918],{"type":574,"value":919}," (",{"type":569,"tag":616,"props":921,"children":922},{"style":878},[923],{"type":574,"value":924},"capacity",{"type":569,"tag":616,"props":926,"children":927},{"style":850},[928],{"type":574,"value":929},")",{"type":569,"tag":616,"props":931,"children":932},{"style":850},[933],{"type":574,"value":934}," {\n",{"type":569,"tag":616,"props":936,"children":937},{"class":618,"line":655},[938,944,949,954,958,963,968],{"type":569,"tag":616,"props":939,"children":941},{"style":940},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[942],{"type":574,"value":943},"  this",{"type":569,"tag":616,"props":945,"children":946},{"style":850},[947],{"type":574,"value":948},".",{"type":569,"tag":616,"props":950,"children":951},{"style":878},[952],{"type":574,"value":953},"cache",{"type":569,"tag":616,"props":955,"children":956},{"style":850},[957],{"type":574,"value":909},{"type":569,"tag":616,"props":959,"children":960},{"style":895},[961],{"type":574,"value":962}," new",{"type":569,"tag":616,"props":964,"children":965},{"style":901},[966],{"type":574,"value":967}," Map",{"type":569,"tag":616,"props":969,"children":970},{"style":850},[971],{"type":574,"value":972},"();\n",{"type":569,"tag":616,"props":974,"children":975},{"class":618,"line":664},[976,980,984,988,992,997],{"type":569,"tag":616,"props":977,"children":978},{"style":940},[979],{"type":574,"value":943},{"type":569,"tag":616,"props":981,"children":982},{"style":850},[983],{"type":574,"value":948},{"type":569,"tag":616,"props":985,"children":986},{"style":878},[987],{"type":574,"value":924},{"type":569,"tag":616,"props":989,"children":990},{"style":850},[991],{"type":574,"value":909},{"type":569,"tag":616,"props":993,"children":994},{"style":878},[995],{"type":574,"value":996}," capacity",{"type":569,"tag":616,"props":998,"children":999},{"style":850},[1000],{"type":574,"value":1001},";\n",{"type":569,"tag":616,"props":1003,"children":1004},{"class":618,"line":674},[1005],{"type":569,"tag":616,"props":1006,"children":1007},{"style":850},[1008],{"type":574,"value":1009},"};\n",{"type":569,"tag":616,"props":1011,"children":1012},{"class":618,"line":683},[1013],{"type":569,"tag":616,"props":1014,"children":1015},{"emptyLinePlaceholder":668},[1016],{"type":574,"value":671},{"type":569,"tag":616,"props":1018,"children":1019},{"class":618,"line":692},[1020],{"type":569,"tag":616,"props":1021,"children":1022},{"style":836},[1023],{"type":574,"value":839},{"type":569,"tag":616,"props":1025,"children":1026},{"class":618,"line":701},[1027,1032,1036,1040,1044,1048,1052],{"type":569,"tag":616,"props":1028,"children":1029},{"style":836},[1030],{"type":574,"value":1031},"* ",{"type":569,"tag":616,"props":1033,"children":1034},{"style":850},[1035],{"type":574,"value":853},{"type":569,"tag":616,"props":1037,"children":1038},{"style":856},[1039],{"type":574,"value":859},{"type":569,"tag":616,"props":1041,"children":1042},{"style":850},[1043],{"type":574,"value":864},{"type":569,"tag":616,"props":1045,"children":1046},{"style":867},[1047],{"type":574,"value":870},{"type":569,"tag":616,"props":1049,"children":1050},{"style":850},[1051],{"type":574,"value":875},{"type":569,"tag":616,"props":1053,"children":1054},{"style":878},[1055],{"type":574,"value":1056}," key\n",{"type":569,"tag":616,"props":1058,"children":1059},{"class":618,"line":710},[1060,1064,1068,1073,1077,1081],{"type":569,"tag":616,"props":1061,"children":1062},{"style":836},[1063],{"type":574,"value":1031},{"type":569,"tag":616,"props":1065,"children":1066},{"style":850},[1067],{"type":574,"value":853},{"type":569,"tag":616,"props":1069,"children":1070},{"style":856},[1071],{"type":574,"value":1072},"return",{"type":569,"tag":616,"props":1074,"children":1075},{"style":850},[1076],{"type":574,"value":864},{"type":569,"tag":616,"props":1078,"children":1079},{"style":867},[1080],{"type":574,"value":870},{"type":569,"tag":616,"props":1082,"children":1083},{"style":850},[1084],{"type":574,"value":1085},"}\n",{"type":569,"tag":616,"props":1087,"children":1088},{"class":618,"line":719},[1089],{"type":569,"tag":616,"props":1090,"children":1091},{"style":836},[1092],{"type":574,"value":1093},"*/\n",{"type":569,"tag":616,"props":1095,"children":1096},{"class":618,"line":728},[1097,1103,1107,1112,1116,1121,1125,1129,1133,1138,1142],{"type":569,"tag":616,"props":1098,"children":1100},{"style":1099},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1101],{"type":574,"value":1102},"LRUCache",{"type":569,"tag":616,"props":1104,"children":1105},{"style":850},[1106],{"type":574,"value":948},{"type":569,"tag":616,"props":1108,"children":1109},{"style":1099},[1110],{"type":574,"value":1111},"prototype",{"type":569,"tag":616,"props":1113,"children":1114},{"style":850},[1115],{"type":574,"value":948},{"type":569,"tag":616,"props":1117,"children":1118},{"style":901},[1119],{"type":574,"value":1120},"get",{"type":569,"tag":616,"props":1122,"children":1123},{"style":850},[1124],{"type":574,"value":909},{"type":569,"tag":616,"props":1126,"children":1127},{"style":895},[1128],{"type":574,"value":914},{"type":569,"tag":616,"props":1130,"children":1131},{"style":850},[1132],{"type":574,"value":919},{"type":569,"tag":616,"props":1134,"children":1135},{"style":878},[1136],{"type":574,"value":1137},"key",{"type":569,"tag":616,"props":1139,"children":1140},{"style":850},[1141],{"type":574,"value":929},{"type":569,"tag":616,"props":1143,"children":1144},{"style":850},[1145],{"type":574,"value":934},{"type":569,"tag":616,"props":1147,"children":1148},{"class":618,"line":737},[1149,1154,1158,1163,1168,1172,1176,1180,1185,1190,1194,1199,1204,1209,1215],{"type":569,"tag":616,"props":1150,"children":1151},{"style":856},[1152],{"type":574,"value":1153},"  if",{"type":569,"tag":616,"props":1155,"children":1156},{"style":850},[1157],{"type":574,"value":919},{"type":569,"tag":616,"props":1159,"children":1160},{"style":895},[1161],{"type":574,"value":1162},"!",{"type":569,"tag":616,"props":1164,"children":1165},{"style":940},[1166],{"type":574,"value":1167},"this",{"type":569,"tag":616,"props":1169,"children":1170},{"style":850},[1171],{"type":574,"value":948},{"type":569,"tag":616,"props":1173,"children":1174},{"style":878},[1175],{"type":574,"value":953},{"type":569,"tag":616,"props":1177,"children":1178},{"style":850},[1179],{"type":574,"value":948},{"type":569,"tag":616,"props":1181,"children":1182},{"style":901},[1183],{"type":574,"value":1184},"has",{"type":569,"tag":616,"props":1186,"children":1187},{"style":850},[1188],{"type":574,"value":1189},"(",{"type":569,"tag":616,"props":1191,"children":1192},{"style":878},[1193],{"type":574,"value":1137},{"type":569,"tag":616,"props":1195,"children":1196},{"style":850},[1197],{"type":574,"value":1198},"))",{"type":569,"tag":616,"props":1200,"children":1201},{"style":856},[1202],{"type":574,"value":1203}," return",{"type":569,"tag":616,"props":1205,"children":1206},{"style":895},[1207],{"type":574,"value":1208}," -",{"type":569,"tag":616,"props":1210,"children":1212},{"style":1211},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1213],{"type":574,"value":1214},"1",{"type":569,"tag":616,"props":1216,"children":1217},{"style":850},[1218],{"type":574,"value":1001},{"type":569,"tag":616,"props":1220,"children":1221},{"class":618,"line":746},[1222,1227,1232,1236,1241,1245,1249,1253,1257,1261,1265],{"type":569,"tag":616,"props":1223,"children":1224},{"style":895},[1225],{"type":574,"value":1226},"  const",{"type":569,"tag":616,"props":1228,"children":1229},{"style":878},[1230],{"type":574,"value":1231}," val",{"type":569,"tag":616,"props":1233,"children":1234},{"style":850},[1235],{"type":574,"value":909},{"type":569,"tag":616,"props":1237,"children":1238},{"style":940},[1239],{"type":574,"value":1240}," this",{"type":569,"tag":616,"props":1242,"children":1243},{"style":850},[1244],{"type":574,"value":948},{"type":569,"tag":616,"props":1246,"children":1247},{"style":878},[1248],{"type":574,"value":953},{"type":569,"tag":616,"props":1250,"children":1251},{"style":850},[1252],{"type":574,"value":948},{"type":569,"tag":616,"props":1254,"children":1255},{"style":901},[1256],{"type":574,"value":1120},{"type":569,"tag":616,"props":1258,"children":1259},{"style":850},[1260],{"type":574,"value":1189},{"type":569,"tag":616,"props":1262,"children":1263},{"style":878},[1264],{"type":574,"value":1137},{"type":569,"tag":616,"props":1266,"children":1267},{"style":850},[1268],{"type":574,"value":1269},");\n",{"type":569,"tag":616,"props":1271,"children":1272},{"class":618,"line":755},[1273],{"type":569,"tag":616,"props":1274,"children":1275},{"style":836},[1276],{"type":574,"value":1277},"  // 更新位置 => 先删除后添加\n",{"type":569,"tag":616,"props":1279,"children":1280},{"class":618,"line":764},[1281,1285,1289,1293,1297,1302,1306,1310],{"type":569,"tag":616,"props":1282,"children":1283},{"style":940},[1284],{"type":574,"value":943},{"type":569,"tag":616,"props":1286,"children":1287},{"style":850},[1288],{"type":574,"value":948},{"type":569,"tag":616,"props":1290,"children":1291},{"style":878},[1292],{"type":574,"value":953},{"type":569,"tag":616,"props":1294,"children":1295},{"style":850},[1296],{"type":574,"value":948},{"type":569,"tag":616,"props":1298,"children":1299},{"style":901},[1300],{"type":574,"value":1301},"delete",{"type":569,"tag":616,"props":1303,"children":1304},{"style":850},[1305],{"type":574,"value":1189},{"type":569,"tag":616,"props":1307,"children":1308},{"style":878},[1309],{"type":574,"value":1137},{"type":569,"tag":616,"props":1311,"children":1312},{"style":850},[1313],{"type":574,"value":1269},{"type":569,"tag":616,"props":1315,"children":1317},{"class":618,"line":1316},18,[1318,1322,1326,1330,1334,1339,1343,1347,1352,1356],{"type":569,"tag":616,"props":1319,"children":1320},{"style":940},[1321],{"type":574,"value":943},{"type":569,"tag":616,"props":1323,"children":1324},{"style":850},[1325],{"type":574,"value":948},{"type":569,"tag":616,"props":1327,"children":1328},{"style":878},[1329],{"type":574,"value":953},{"type":569,"tag":616,"props":1331,"children":1332},{"style":850},[1333],{"type":574,"value":948},{"type":569,"tag":616,"props":1335,"children":1336},{"style":901},[1337],{"type":574,"value":1338},"set",{"type":569,"tag":616,"props":1340,"children":1341},{"style":850},[1342],{"type":574,"value":1189},{"type":569,"tag":616,"props":1344,"children":1345},{"style":878},[1346],{"type":574,"value":1137},{"type":569,"tag":616,"props":1348,"children":1349},{"style":850},[1350],{"type":574,"value":1351},",",{"type":569,"tag":616,"props":1353,"children":1354},{"style":878},[1355],{"type":574,"value":1231},{"type":569,"tag":616,"props":1357,"children":1358},{"style":850},[1359],{"type":574,"value":1269},{"type":569,"tag":616,"props":1361,"children":1363},{"class":618,"line":1362},19,[1364,1369,1373],{"type":569,"tag":616,"props":1365,"children":1366},{"style":856},[1367],{"type":574,"value":1368},"  return",{"type":569,"tag":616,"props":1370,"children":1371},{"style":878},[1372],{"type":574,"value":1231},{"type":569,"tag":616,"props":1374,"children":1375},{"style":850},[1376],{"type":574,"value":1001},{"type":569,"tag":616,"props":1378,"children":1380},{"class":618,"line":1379},20,[1381],{"type":569,"tag":616,"props":1382,"children":1383},{"style":850},[1384],{"type":574,"value":1009},{"type":569,"tag":616,"props":1386,"children":1388},{"class":618,"line":1387},21,[1389],{"type":569,"tag":616,"props":1390,"children":1391},{"emptyLinePlaceholder":668},[1392],{"type":574,"value":671},{"type":569,"tag":616,"props":1394,"children":1396},{"class":618,"line":1395},22,[1397],{"type":569,"tag":616,"props":1398,"children":1399},{"style":836},[1400],{"type":574,"value":839},{"type":569,"tag":616,"props":1402,"children":1404},{"class":618,"line":1403},23,[1405,1409,1413,1417,1421,1425,1429],{"type":569,"tag":616,"props":1406,"children":1407},{"style":836},[1408],{"type":574,"value":1031},{"type":569,"tag":616,"props":1410,"children":1411},{"style":850},[1412],{"type":574,"value":853},{"type":569,"tag":616,"props":1414,"children":1415},{"style":856},[1416],{"type":574,"value":859},{"type":569,"tag":616,"props":1418,"children":1419},{"style":850},[1420],{"type":574,"value":864},{"type":569,"tag":616,"props":1422,"children":1423},{"style":867},[1424],{"type":574,"value":870},{"type":569,"tag":616,"props":1426,"children":1427},{"style":850},[1428],{"type":574,"value":875},{"type":569,"tag":616,"props":1430,"children":1431},{"style":878},[1432],{"type":574,"value":1056},{"type":569,"tag":616,"props":1434,"children":1436},{"class":618,"line":1435},24,[1437,1441,1445,1449,1453,1457,1461],{"type":569,"tag":616,"props":1438,"children":1439},{"style":836},[1440],{"type":574,"value":1031},{"type":569,"tag":616,"props":1442,"children":1443},{"style":850},[1444],{"type":574,"value":853},{"type":569,"tag":616,"props":1446,"children":1447},{"style":856},[1448],{"type":574,"value":859},{"type":569,"tag":616,"props":1450,"children":1451},{"style":850},[1452],{"type":574,"value":864},{"type":569,"tag":616,"props":1454,"children":1455},{"style":867},[1456],{"type":574,"value":870},{"type":569,"tag":616,"props":1458,"children":1459},{"style":850},[1460],{"type":574,"value":875},{"type":569,"tag":616,"props":1462,"children":1463},{"style":878},[1464],{"type":574,"value":1465}," value\n",{"type":569,"tag":616,"props":1467,"children":1469},{"class":618,"line":1468},25,[1470,1474,1478,1482,1486,1491],{"type":569,"tag":616,"props":1471,"children":1472},{"style":836},[1473],{"type":574,"value":1031},{"type":569,"tag":616,"props":1475,"children":1476},{"style":850},[1477],{"type":574,"value":853},{"type":569,"tag":616,"props":1479,"children":1480},{"style":856},[1481],{"type":574,"value":1072},{"type":569,"tag":616,"props":1483,"children":1484},{"style":850},[1485],{"type":574,"value":864},{"type":569,"tag":616,"props":1487,"children":1488},{"style":867},[1489],{"type":574,"value":1490},"void",{"type":569,"tag":616,"props":1492,"children":1493},{"style":850},[1494],{"type":574,"value":1085},{"type":569,"tag":616,"props":1496,"children":1498},{"class":618,"line":1497},26,[1499],{"type":569,"tag":616,"props":1500,"children":1501},{"style":836},[1502],{"type":574,"value":1093},{"type":569,"tag":616,"props":1504,"children":1506},{"class":618,"line":1505},27,[1507,1511,1515,1519,1523,1528,1532,1536,1540,1544,1548,1553,1557],{"type":569,"tag":616,"props":1508,"children":1509},{"style":1099},[1510],{"type":574,"value":1102},{"type":569,"tag":616,"props":1512,"children":1513},{"style":850},[1514],{"type":574,"value":948},{"type":569,"tag":616,"props":1516,"children":1517},{"style":1099},[1518],{"type":574,"value":1111},{"type":569,"tag":616,"props":1520,"children":1521},{"style":850},[1522],{"type":574,"value":948},{"type":569,"tag":616,"props":1524,"children":1525},{"style":901},[1526],{"type":574,"value":1527},"put",{"type":569,"tag":616,"props":1529,"children":1530},{"style":850},[1531],{"type":574,"value":909},{"type":569,"tag":616,"props":1533,"children":1534},{"style":895},[1535],{"type":574,"value":914},{"type":569,"tag":616,"props":1537,"children":1538},{"style":850},[1539],{"type":574,"value":919},{"type":569,"tag":616,"props":1541,"children":1542},{"style":878},[1543],{"type":574,"value":1137},{"type":569,"tag":616,"props":1545,"children":1546},{"style":850},[1547],{"type":574,"value":1351},{"type":569,"tag":616,"props":1549,"children":1550},{"style":878},[1551],{"type":574,"value":1552}," value",{"type":569,"tag":616,"props":1554,"children":1555},{"style":850},[1556],{"type":574,"value":929},{"type":569,"tag":616,"props":1558,"children":1559},{"style":850},[1560],{"type":574,"value":934},{"type":569,"tag":616,"props":1562,"children":1564},{"class":618,"line":1563},28,[1565],{"type":569,"tag":616,"props":1566,"children":1567},{"style":836},[1568],{"type":574,"value":1569},"  // 已经存在的情况下，更新其位置到\"最新\"即可 => 先删除，后插入\n",{"type":569,"tag":616,"props":1571,"children":1573},{"class":618,"line":1572},29,[1574,1578,1582,1586,1590,1594,1598,1602,1606,1610,1614],{"type":569,"tag":616,"props":1575,"children":1576},{"style":856},[1577],{"type":574,"value":1153},{"type":569,"tag":616,"props":1579,"children":1580},{"style":850},[1581],{"type":574,"value":919},{"type":569,"tag":616,"props":1583,"children":1584},{"style":940},[1585],{"type":574,"value":1167},{"type":569,"tag":616,"props":1587,"children":1588},{"style":850},[1589],{"type":574,"value":948},{"type":569,"tag":616,"props":1591,"children":1592},{"style":878},[1593],{"type":574,"value":953},{"type":569,"tag":616,"props":1595,"children":1596},{"style":850},[1597],{"type":574,"value":948},{"type":569,"tag":616,"props":1599,"children":1600},{"style":901},[1601],{"type":574,"value":1184},{"type":569,"tag":616,"props":1603,"children":1604},{"style":850},[1605],{"type":574,"value":1189},{"type":569,"tag":616,"props":1607,"children":1608},{"style":878},[1609],{"type":574,"value":1137},{"type":569,"tag":616,"props":1611,"children":1612},{"style":850},[1613],{"type":574,"value":1198},{"type":569,"tag":616,"props":1615,"children":1616},{"style":850},[1617],{"type":574,"value":934},{"type":569,"tag":616,"props":1619,"children":1621},{"class":618,"line":1620},30,[1622,1627,1631,1635,1639,1643,1647,1651],{"type":569,"tag":616,"props":1623,"children":1624},{"style":940},[1625],{"type":574,"value":1626},"    this",{"type":569,"tag":616,"props":1628,"children":1629},{"style":850},[1630],{"type":574,"value":948},{"type":569,"tag":616,"props":1632,"children":1633},{"style":878},[1634],{"type":574,"value":953},{"type":569,"tag":616,"props":1636,"children":1637},{"style":850},[1638],{"type":574,"value":948},{"type":569,"tag":616,"props":1640,"children":1641},{"style":901},[1642],{"type":574,"value":1301},{"type":569,"tag":616,"props":1644,"children":1645},{"style":850},[1646],{"type":574,"value":1189},{"type":569,"tag":616,"props":1648,"children":1649},{"style":878},[1650],{"type":574,"value":1137},{"type":569,"tag":616,"props":1652,"children":1653},{"style":850},[1654],{"type":574,"value":1269},{"type":569,"tag":616,"props":1656,"children":1658},{"class":618,"line":1657},31,[1659],{"type":569,"tag":616,"props":1660,"children":1661},{"style":850},[1662],{"type":574,"value":1663},"  }\n",{"type":569,"tag":616,"props":1665,"children":1667},{"class":618,"line":1666},32,[1668,1672,1676,1680,1684,1688,1692,1696,1700,1704],{"type":569,"tag":616,"props":1669,"children":1670},{"style":940},[1671],{"type":574,"value":943},{"type":569,"tag":616,"props":1673,"children":1674},{"style":850},[1675],{"type":574,"value":948},{"type":569,"tag":616,"props":1677,"children":1678},{"style":878},[1679],{"type":574,"value":953},{"type":569,"tag":616,"props":1681,"children":1682},{"style":850},[1683],{"type":574,"value":948},{"type":569,"tag":616,"props":1685,"children":1686},{"style":901},[1687],{"type":574,"value":1338},{"type":569,"tag":616,"props":1689,"children":1690},{"style":850},[1691],{"type":574,"value":1189},{"type":569,"tag":616,"props":1693,"children":1694},{"style":878},[1695],{"type":574,"value":1137},{"type":569,"tag":616,"props":1697,"children":1698},{"style":850},[1699],{"type":574,"value":1351},{"type":569,"tag":616,"props":1701,"children":1702},{"style":878},[1703],{"type":574,"value":1552},{"type":569,"tag":616,"props":1705,"children":1706},{"style":850},[1707],{"type":574,"value":1269},{"type":569,"tag":616,"props":1709,"children":1711},{"class":618,"line":1710},33,[1712],{"type":569,"tag":616,"props":1713,"children":1714},{"emptyLinePlaceholder":668},[1715],{"type":574,"value":671},{"type":569,"tag":616,"props":1717,"children":1719},{"class":618,"line":1718},34,[1720,1724,1728,1732,1736,1740,1744,1749,1754,1758,1762,1766,1770],{"type":569,"tag":616,"props":1721,"children":1722},{"style":856},[1723],{"type":574,"value":1153},{"type":569,"tag":616,"props":1725,"children":1726},{"style":850},[1727],{"type":574,"value":919},{"type":569,"tag":616,"props":1729,"children":1730},{"style":940},[1731],{"type":574,"value":1167},{"type":569,"tag":616,"props":1733,"children":1734},{"style":850},[1735],{"type":574,"value":948},{"type":569,"tag":616,"props":1737,"children":1738},{"style":878},[1739],{"type":574,"value":953},{"type":569,"tag":616,"props":1741,"children":1742},{"style":850},[1743],{"type":574,"value":948},{"type":569,"tag":616,"props":1745,"children":1746},{"style":878},[1747],{"type":574,"value":1748},"size",{"type":569,"tag":616,"props":1750,"children":1751},{"style":850},[1752],{"type":574,"value":1753}," >",{"type":569,"tag":616,"props":1755,"children":1756},{"style":940},[1757],{"type":574,"value":1240},{"type":569,"tag":616,"props":1759,"children":1760},{"style":850},[1761],{"type":574,"value":948},{"type":569,"tag":616,"props":1763,"children":1764},{"style":878},[1765],{"type":574,"value":924},{"type":569,"tag":616,"props":1767,"children":1768},{"style":850},[1769],{"type":574,"value":929},{"type":569,"tag":616,"props":1771,"children":1772},{"style":850},[1773],{"type":574,"value":934},{"type":569,"tag":616,"props":1775,"children":1777},{"class":618,"line":1776},35,[1778],{"type":569,"tag":616,"props":1779,"children":1780},{"style":836},[1781],{"type":574,"value":1782},"    // 如果超出 map 最大范围，找到第一个删除\n",{"type":569,"tag":616,"props":1784,"children":1786},{"class":618,"line":1785},36,[1787],{"type":569,"tag":616,"props":1788,"children":1789},{"style":836},[1790],{"type":574,"value":1791},"    // keys() 得到一个迭代器对象\n",{"type":569,"tag":616,"props":1793,"children":1795},{"class":618,"line":1794},37,[1796,1801,1806,1810,1814,1818,1822,1826,1831,1836,1841,1845,1850],{"type":569,"tag":616,"props":1797,"children":1798},{"style":895},[1799],{"type":574,"value":1800},"    const",{"type":569,"tag":616,"props":1802,"children":1803},{"style":878},[1804],{"type":574,"value":1805}," firstKey",{"type":569,"tag":616,"props":1807,"children":1808},{"style":850},[1809],{"type":574,"value":909},{"type":569,"tag":616,"props":1811,"children":1812},{"style":940},[1813],{"type":574,"value":1240},{"type":569,"tag":616,"props":1815,"children":1816},{"style":850},[1817],{"type":574,"value":948},{"type":569,"tag":616,"props":1819,"children":1820},{"style":878},[1821],{"type":574,"value":953},{"type":569,"tag":616,"props":1823,"children":1824},{"style":850},[1825],{"type":574,"value":948},{"type":569,"tag":616,"props":1827,"children":1828},{"style":901},[1829],{"type":574,"value":1830},"keys",{"type":569,"tag":616,"props":1832,"children":1833},{"style":850},[1834],{"type":574,"value":1835},"().",{"type":569,"tag":616,"props":1837,"children":1838},{"style":901},[1839],{"type":574,"value":1840},"next",{"type":569,"tag":616,"props":1842,"children":1843},{"style":850},[1844],{"type":574,"value":1835},{"type":569,"tag":616,"props":1846,"children":1847},{"style":878},[1848],{"type":574,"value":1849},"value",{"type":569,"tag":616,"props":1851,"children":1852},{"style":850},[1853],{"type":574,"value":1001},{"type":569,"tag":616,"props":1855,"children":1857},{"class":618,"line":1856},38,[1858,1862,1866,1870,1874,1878,1882,1887],{"type":569,"tag":616,"props":1859,"children":1860},{"style":940},[1861],{"type":574,"value":1626},{"type":569,"tag":616,"props":1863,"children":1864},{"style":850},[1865],{"type":574,"value":948},{"type":569,"tag":616,"props":1867,"children":1868},{"style":878},[1869],{"type":574,"value":953},{"type":569,"tag":616,"props":1871,"children":1872},{"style":850},[1873],{"type":574,"value":948},{"type":569,"tag":616,"props":1875,"children":1876},{"style":901},[1877],{"type":574,"value":1301},{"type":569,"tag":616,"props":1879,"children":1880},{"style":850},[1881],{"type":574,"value":1189},{"type":569,"tag":616,"props":1883,"children":1884},{"style":878},[1885],{"type":574,"value":1886},"firstKey",{"type":569,"tag":616,"props":1888,"children":1889},{"style":850},[1890],{"type":574,"value":1269},{"type":569,"tag":616,"props":1892,"children":1894},{"class":618,"line":1893},39,[1895],{"type":569,"tag":616,"props":1896,"children":1897},{"style":850},[1898],{"type":574,"value":1663},{"type":569,"tag":616,"props":1900,"children":1902},{"class":618,"line":1901},40,[1903],{"type":569,"tag":616,"props":1904,"children":1905},{"style":850},[1906],{"type":574,"value":1085},{"type":569,"tag":616,"props":1908,"children":1910},{"class":618,"line":1909},41,[1911],{"type":569,"tag":616,"props":1912,"children":1913},{"emptyLinePlaceholder":668},[1914],{"type":574,"value":671},{"type":569,"tag":616,"props":1916,"children":1918},{"class":618,"line":1917},42,[1919],{"type":569,"tag":616,"props":1920,"children":1921},{"style":836},[1922],{"type":574,"value":839},{"type":569,"tag":616,"props":1924,"children":1926},{"class":618,"line":1925},43,[1927],{"type":569,"tag":616,"props":1928,"children":1929},{"style":836},[1930],{"type":574,"value":1931},"* Your LRUCache object will be instantiated and called as such:\n",{"type":569,"tag":616,"props":1933,"children":1935},{"class":618,"line":1934},44,[1936],{"type":569,"tag":616,"props":1937,"children":1938},{"style":836},[1939],{"type":574,"value":1940},"* var obj = new LRUCache(capacity)\n",{"type":569,"tag":616,"props":1942,"children":1944},{"class":618,"line":1943},45,[1945],{"type":569,"tag":616,"props":1946,"children":1947},{"style":836},[1948],{"type":574,"value":1949},"* var param_1 = obj.get(key)\n",{"type":569,"tag":616,"props":1951,"children":1953},{"class":618,"line":1952},46,[1954],{"type":569,"tag":616,"props":1955,"children":1956},{"style":836},[1957],{"type":574,"value":1958},"* obj.put(key,value)\n",{"type":569,"tag":616,"props":1960,"children":1962},{"class":618,"line":1961},47,[1963],{"type":569,"tag":616,"props":1964,"children":1965},{"style":836},[1966],{"type":574,"value":1093},{"type":569,"tag":1968,"props":1969,"children":1970},"style",{},[1971],{"type":574,"value":1972},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":655,"depth":655,"links":1974},[1975,1976],{"id":802,"depth":628,"text":802},{"id":812,"depth":628,"text":812,"children":1977},[1978],{"id":818,"depth":637,"text":821},"markdown","content:1.algorithm:3.leetcode:3.major:146.lru-cache.md","content","1.algorithm/3.leetcode/3.major/146.lru-cache.md","md",[1985,1987],{"_path":174,"title":173,"description":1986},"给你一个链表的头节点 head ，判断链表中是否有环。",{"_path":180,"title":179,"description":1988},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",1717735570869]