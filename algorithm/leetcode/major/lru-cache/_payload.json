[{"data":1,"prerenderedAt":1982},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/lru-cache":552,"/algorithm/leetcode/major/lru-cache-surround":1977},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":177,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":176,"description":556,"url":557,"body":558,"_type":1972,"_id":1973,"_source":1974,"_file":1975,"_extension":1976},"major",false,"","请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：","https://leetcode.cn/problems/lru-cache",{"type":559,"children":560,"toc":1966},"root",[561,568,588,593,598,764,769,792,798,803,808,815,1960],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":569,"props":570,"children":571},"ul",{},[572,578,583],{"type":562,"tag":573,"props":574,"children":575},"li",{},[576],{"type":567,"value":577},"LRUCache(int capacity) 以 正整数 作为容量 capacity 初始化 LRU 缓存",{"type":562,"tag":573,"props":579,"children":580},{},[581],{"type":567,"value":582},"int get(int key) 如果关键字 key 存在于缓存中，则返回关键字的值，否则返回 -1 。",{"type":562,"tag":573,"props":584,"children":585},{},[586],{"type":567,"value":587},"void put(int key, int value) 如果关键字 key 已经存在，则变更其数据值 value ；如果不存在，则向缓存中插入该组 key-value 。如果插入操作导致关键字数量超过 capacity ，则应该 逐出 最久未使用的关键字。",{"type":562,"tag":563,"props":589,"children":590},{},[591],{"type":567,"value":592},"函数 get 和 put 必须以 O(1) 的平均时间复杂度运行。",{"type":562,"tag":563,"props":594,"children":595},{},[596],{"type":567,"value":597},"示例：",{"type":562,"tag":599,"props":600,"children":603},"pre",{"className":601,"code":602,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n输出\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n解释\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // 缓存是 {1=1}\nlRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\nlRUCache.get(1); // 返回 1\nlRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\nlRUCache.get(2); // 返回 -1 (未找到)\nlRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\nlRUCache.get(1); // 返回 -1 (未找到)\nlRUCache.get(3); // 返回 3\nlRUCache.get(4); // 返回 4\n",[604],{"type":562,"tag":605,"props":606,"children":607},"code",{"__ignoreMap":555},[608,619,628,637,646,655,665,674,683,692,701,710,719,728,737,746,755],{"type":562,"tag":609,"props":610,"children":613},"span",{"class":611,"line":612},"line",1,[614],{"type":562,"tag":609,"props":615,"children":616},{},[617],{"type":567,"value":618},"输入\n",{"type":562,"tag":609,"props":620,"children":622},{"class":611,"line":621},2,[623],{"type":562,"tag":609,"props":624,"children":625},{},[626],{"type":567,"value":627},"[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n",{"type":562,"tag":609,"props":629,"children":631},{"class":611,"line":630},3,[632],{"type":562,"tag":609,"props":633,"children":634},{},[635],{"type":567,"value":636},"[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n",{"type":562,"tag":609,"props":638,"children":640},{"class":611,"line":639},4,[641],{"type":562,"tag":609,"props":642,"children":643},{},[644],{"type":567,"value":645},"输出\n",{"type":562,"tag":609,"props":647,"children":649},{"class":611,"line":648},5,[650],{"type":562,"tag":609,"props":651,"children":652},{},[653],{"type":567,"value":654},"[null, null, null, 1, null, -1, null, -1, 3, 4]\n",{"type":562,"tag":609,"props":656,"children":658},{"class":611,"line":657},6,[659],{"type":562,"tag":609,"props":660,"children":662},{"emptyLinePlaceholder":661},true,[663],{"type":567,"value":664},"\n",{"type":562,"tag":609,"props":666,"children":668},{"class":611,"line":667},7,[669],{"type":562,"tag":609,"props":670,"children":671},{},[672],{"type":567,"value":673},"解释\n",{"type":562,"tag":609,"props":675,"children":677},{"class":611,"line":676},8,[678],{"type":562,"tag":609,"props":679,"children":680},{},[681],{"type":567,"value":682},"LRUCache lRUCache = new LRUCache(2);\n",{"type":562,"tag":609,"props":684,"children":686},{"class":611,"line":685},9,[687],{"type":562,"tag":609,"props":688,"children":689},{},[690],{"type":567,"value":691},"lRUCache.put(1, 1); // 缓存是 {1=1}\n",{"type":562,"tag":609,"props":693,"children":695},{"class":611,"line":694},10,[696],{"type":562,"tag":609,"props":697,"children":698},{},[699],{"type":567,"value":700},"lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\n",{"type":562,"tag":609,"props":702,"children":704},{"class":611,"line":703},11,[705],{"type":562,"tag":609,"props":706,"children":707},{},[708],{"type":567,"value":709},"lRUCache.get(1); // 返回 1\n",{"type":562,"tag":609,"props":711,"children":713},{"class":611,"line":712},12,[714],{"type":562,"tag":609,"props":715,"children":716},{},[717],{"type":567,"value":718},"lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\n",{"type":562,"tag":609,"props":720,"children":722},{"class":611,"line":721},13,[723],{"type":562,"tag":609,"props":724,"children":725},{},[726],{"type":567,"value":727},"lRUCache.get(2); // 返回 -1 (未找到)\n",{"type":562,"tag":609,"props":729,"children":731},{"class":611,"line":730},14,[732],{"type":562,"tag":609,"props":733,"children":734},{},[735],{"type":567,"value":736},"lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\n",{"type":562,"tag":609,"props":738,"children":740},{"class":611,"line":739},15,[741],{"type":562,"tag":609,"props":742,"children":743},{},[744],{"type":567,"value":745},"lRUCache.get(1); // 返回 -1 (未找到)\n",{"type":562,"tag":609,"props":747,"children":749},{"class":611,"line":748},16,[750],{"type":562,"tag":609,"props":751,"children":752},{},[753],{"type":567,"value":754},"lRUCache.get(3); // 返回 3\n",{"type":562,"tag":609,"props":756,"children":758},{"class":611,"line":757},17,[759],{"type":562,"tag":609,"props":760,"children":761},{},[762],{"type":567,"value":763},"lRUCache.get(4); // 返回 4\n",{"type":562,"tag":563,"props":765,"children":766},{},[767],{"type":567,"value":768},"提示：",{"type":562,"tag":569,"props":770,"children":771},{},[772,777,782,787],{"type":562,"tag":573,"props":773,"children":774},{},[775],{"type":567,"value":776},"1 \u003C= capacity \u003C= 3000",{"type":562,"tag":573,"props":778,"children":779},{},[780],{"type":567,"value":781},"0 \u003C= key \u003C= 10000",{"type":562,"tag":573,"props":783,"children":784},{},[785],{"type":567,"value":786},"0 \u003C= value \u003C= 105",{"type":562,"tag":573,"props":788,"children":789},{},[790],{"type":567,"value":791},"最多调用 2 * 10^5 次 get 和 put",{"type":562,"tag":793,"props":794,"children":796},"h2",{"id":795},"解题思路",[797],{"type":567,"value":795},{"type":562,"tag":563,"props":799,"children":800},{},[801],{"type":567,"value":802},"题目要求的 1 和 2 相对简单，主要是条件 3，当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值",{"type":562,"tag":793,"props":804,"children":806},{"id":805},"实现",[807],{"type":567,"value":805},{"type":562,"tag":809,"props":810,"children":812},"h3",{"id":811},"map-方案",[813],{"type":567,"value":814},"Map 方案",{"type":562,"tag":599,"props":816,"children":820},{"className":817,"code":818,"language":819,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} capacity\n */\nvar LRUCache = function (capacity) {\n  this.cache = new Map();\n  this.capacity = capacity;\n};\n\n/**\n* @param {number} key\n* @return {number}\n*/\nLRUCache.prototype.get = function (key) {\n  if (!this.cache.has(key)) return -1;\n  const val = this.cache.get(key);\n  // 更新位置 => 先删除后添加\n  this.cache.delete(key);\n  this.cache.set(key, val);\n  return val;\n};\n\n/**\n* @param {number} key\n* @param {number} value\n* @return {void}\n*/\nLRUCache.prototype.put = function (key, value) {\n  // 已经存在的情况下，更新其位置到\"最新\"即可 => 先删除，后插入\n  if (this.cache.has(key)) {\n    this.cache.delete(key);\n  }\n  this.cache.set(key, value);\n\n  if (this.cache.size > this.capacity) {\n    // 如果超出 map 最大范围，找到第一个删除\n    // keys() 得到一个迭代器对象\n    const firstKey = this.cache.keys().next().value;\n    this.cache.delete(firstKey);\n  }\n}\n\n/**\n* Your LRUCache object will be instantiated and called as such:\n* var obj = new LRUCache(capacity)\n* var param_1 = obj.get(key)\n* obj.put(key,value)\n*/\n","js",[821],{"type":562,"tag":605,"props":822,"children":823},{"__ignoreMap":555},[824,833,875,883,928,966,995,1003,1010,1017,1050,1079,1087,1139,1212,1263,1271,1307,1353,1370,1378,1386,1394,1426,1459,1488,1496,1554,1563,1611,1648,1657,1701,1709,1767,1776,1785,1847,1884,1892,1900,1908,1916,1925,1934,1943,1952],{"type":562,"tag":609,"props":825,"children":826},{"class":611,"line":612},[827],{"type":562,"tag":609,"props":828,"children":830},{"style":829},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[831],{"type":567,"value":832},"/**\n",{"type":562,"tag":609,"props":834,"children":835},{"class":611,"line":621},[836,841,847,853,858,864,869],{"type":562,"tag":609,"props":837,"children":838},{"style":829},[839],{"type":567,"value":840}," * ",{"type":562,"tag":609,"props":842,"children":844},{"style":843},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[845],{"type":567,"value":846},"@",{"type":562,"tag":609,"props":848,"children":850},{"style":849},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[851],{"type":567,"value":852},"param",{"type":562,"tag":609,"props":854,"children":855},{"style":843},[856],{"type":567,"value":857}," {",{"type":562,"tag":609,"props":859,"children":861},{"style":860},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[862],{"type":567,"value":863},"number",{"type":562,"tag":609,"props":865,"children":866},{"style":843},[867],{"type":567,"value":868},"}",{"type":562,"tag":609,"props":870,"children":872},{"style":871},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[873],{"type":567,"value":874}," capacity\n",{"type":562,"tag":609,"props":876,"children":877},{"class":611,"line":630},[878],{"type":562,"tag":609,"props":879,"children":880},{"style":829},[881],{"type":567,"value":882}," */\n",{"type":562,"tag":609,"props":884,"children":885},{"class":611,"line":639},[886,892,898,903,908,913,918,923],{"type":562,"tag":609,"props":887,"children":889},{"style":888},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[890],{"type":567,"value":891},"var",{"type":562,"tag":609,"props":893,"children":895},{"style":894},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[896],{"type":567,"value":897}," LRUCache",{"type":562,"tag":609,"props":899,"children":900},{"style":843},[901],{"type":567,"value":902}," =",{"type":562,"tag":609,"props":904,"children":905},{"style":888},[906],{"type":567,"value":907}," function",{"type":562,"tag":609,"props":909,"children":910},{"style":843},[911],{"type":567,"value":912}," (",{"type":562,"tag":609,"props":914,"children":915},{"style":871},[916],{"type":567,"value":917},"capacity",{"type":562,"tag":609,"props":919,"children":920},{"style":843},[921],{"type":567,"value":922},")",{"type":562,"tag":609,"props":924,"children":925},{"style":843},[926],{"type":567,"value":927}," {\n",{"type":562,"tag":609,"props":929,"children":930},{"class":611,"line":648},[931,937,942,947,951,956,961],{"type":562,"tag":609,"props":932,"children":934},{"style":933},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[935],{"type":567,"value":936},"  this",{"type":562,"tag":609,"props":938,"children":939},{"style":843},[940],{"type":567,"value":941},".",{"type":562,"tag":609,"props":943,"children":944},{"style":871},[945],{"type":567,"value":946},"cache",{"type":562,"tag":609,"props":948,"children":949},{"style":843},[950],{"type":567,"value":902},{"type":562,"tag":609,"props":952,"children":953},{"style":888},[954],{"type":567,"value":955}," new",{"type":562,"tag":609,"props":957,"children":958},{"style":894},[959],{"type":567,"value":960}," Map",{"type":562,"tag":609,"props":962,"children":963},{"style":843},[964],{"type":567,"value":965},"();\n",{"type":562,"tag":609,"props":967,"children":968},{"class":611,"line":657},[969,973,977,981,985,990],{"type":562,"tag":609,"props":970,"children":971},{"style":933},[972],{"type":567,"value":936},{"type":562,"tag":609,"props":974,"children":975},{"style":843},[976],{"type":567,"value":941},{"type":562,"tag":609,"props":978,"children":979},{"style":871},[980],{"type":567,"value":917},{"type":562,"tag":609,"props":982,"children":983},{"style":843},[984],{"type":567,"value":902},{"type":562,"tag":609,"props":986,"children":987},{"style":871},[988],{"type":567,"value":989}," capacity",{"type":562,"tag":609,"props":991,"children":992},{"style":843},[993],{"type":567,"value":994},";\n",{"type":562,"tag":609,"props":996,"children":997},{"class":611,"line":667},[998],{"type":562,"tag":609,"props":999,"children":1000},{"style":843},[1001],{"type":567,"value":1002},"};\n",{"type":562,"tag":609,"props":1004,"children":1005},{"class":611,"line":676},[1006],{"type":562,"tag":609,"props":1007,"children":1008},{"emptyLinePlaceholder":661},[1009],{"type":567,"value":664},{"type":562,"tag":609,"props":1011,"children":1012},{"class":611,"line":685},[1013],{"type":562,"tag":609,"props":1014,"children":1015},{"style":829},[1016],{"type":567,"value":832},{"type":562,"tag":609,"props":1018,"children":1019},{"class":611,"line":694},[1020,1025,1029,1033,1037,1041,1045],{"type":562,"tag":609,"props":1021,"children":1022},{"style":829},[1023],{"type":567,"value":1024},"* ",{"type":562,"tag":609,"props":1026,"children":1027},{"style":843},[1028],{"type":567,"value":846},{"type":562,"tag":609,"props":1030,"children":1031},{"style":849},[1032],{"type":567,"value":852},{"type":562,"tag":609,"props":1034,"children":1035},{"style":843},[1036],{"type":567,"value":857},{"type":562,"tag":609,"props":1038,"children":1039},{"style":860},[1040],{"type":567,"value":863},{"type":562,"tag":609,"props":1042,"children":1043},{"style":843},[1044],{"type":567,"value":868},{"type":562,"tag":609,"props":1046,"children":1047},{"style":871},[1048],{"type":567,"value":1049}," key\n",{"type":562,"tag":609,"props":1051,"children":1052},{"class":611,"line":703},[1053,1057,1061,1066,1070,1074],{"type":562,"tag":609,"props":1054,"children":1055},{"style":829},[1056],{"type":567,"value":1024},{"type":562,"tag":609,"props":1058,"children":1059},{"style":843},[1060],{"type":567,"value":846},{"type":562,"tag":609,"props":1062,"children":1063},{"style":849},[1064],{"type":567,"value":1065},"return",{"type":562,"tag":609,"props":1067,"children":1068},{"style":843},[1069],{"type":567,"value":857},{"type":562,"tag":609,"props":1071,"children":1072},{"style":860},[1073],{"type":567,"value":863},{"type":562,"tag":609,"props":1075,"children":1076},{"style":843},[1077],{"type":567,"value":1078},"}\n",{"type":562,"tag":609,"props":1080,"children":1081},{"class":611,"line":712},[1082],{"type":562,"tag":609,"props":1083,"children":1084},{"style":829},[1085],{"type":567,"value":1086},"*/\n",{"type":562,"tag":609,"props":1088,"children":1089},{"class":611,"line":721},[1090,1096,1100,1105,1109,1114,1118,1122,1126,1131,1135],{"type":562,"tag":609,"props":1091,"children":1093},{"style":1092},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1094],{"type":567,"value":1095},"LRUCache",{"type":562,"tag":609,"props":1097,"children":1098},{"style":843},[1099],{"type":567,"value":941},{"type":562,"tag":609,"props":1101,"children":1102},{"style":1092},[1103],{"type":567,"value":1104},"prototype",{"type":562,"tag":609,"props":1106,"children":1107},{"style":843},[1108],{"type":567,"value":941},{"type":562,"tag":609,"props":1110,"children":1111},{"style":894},[1112],{"type":567,"value":1113},"get",{"type":562,"tag":609,"props":1115,"children":1116},{"style":843},[1117],{"type":567,"value":902},{"type":562,"tag":609,"props":1119,"children":1120},{"style":888},[1121],{"type":567,"value":907},{"type":562,"tag":609,"props":1123,"children":1124},{"style":843},[1125],{"type":567,"value":912},{"type":562,"tag":609,"props":1127,"children":1128},{"style":871},[1129],{"type":567,"value":1130},"key",{"type":562,"tag":609,"props":1132,"children":1133},{"style":843},[1134],{"type":567,"value":922},{"type":562,"tag":609,"props":1136,"children":1137},{"style":843},[1138],{"type":567,"value":927},{"type":562,"tag":609,"props":1140,"children":1141},{"class":611,"line":730},[1142,1147,1151,1156,1161,1165,1169,1173,1178,1183,1187,1192,1197,1202,1208],{"type":562,"tag":609,"props":1143,"children":1144},{"style":849},[1145],{"type":567,"value":1146},"  if",{"type":562,"tag":609,"props":1148,"children":1149},{"style":843},[1150],{"type":567,"value":912},{"type":562,"tag":609,"props":1152,"children":1153},{"style":888},[1154],{"type":567,"value":1155},"!",{"type":562,"tag":609,"props":1157,"children":1158},{"style":933},[1159],{"type":567,"value":1160},"this",{"type":562,"tag":609,"props":1162,"children":1163},{"style":843},[1164],{"type":567,"value":941},{"type":562,"tag":609,"props":1166,"children":1167},{"style":871},[1168],{"type":567,"value":946},{"type":562,"tag":609,"props":1170,"children":1171},{"style":843},[1172],{"type":567,"value":941},{"type":562,"tag":609,"props":1174,"children":1175},{"style":894},[1176],{"type":567,"value":1177},"has",{"type":562,"tag":609,"props":1179,"children":1180},{"style":843},[1181],{"type":567,"value":1182},"(",{"type":562,"tag":609,"props":1184,"children":1185},{"style":871},[1186],{"type":567,"value":1130},{"type":562,"tag":609,"props":1188,"children":1189},{"style":843},[1190],{"type":567,"value":1191},"))",{"type":562,"tag":609,"props":1193,"children":1194},{"style":849},[1195],{"type":567,"value":1196}," return",{"type":562,"tag":609,"props":1198,"children":1199},{"style":888},[1200],{"type":567,"value":1201}," -",{"type":562,"tag":609,"props":1203,"children":1205},{"style":1204},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1206],{"type":567,"value":1207},"1",{"type":562,"tag":609,"props":1209,"children":1210},{"style":843},[1211],{"type":567,"value":994},{"type":562,"tag":609,"props":1213,"children":1214},{"class":611,"line":739},[1215,1220,1225,1229,1234,1238,1242,1246,1250,1254,1258],{"type":562,"tag":609,"props":1216,"children":1217},{"style":888},[1218],{"type":567,"value":1219},"  const",{"type":562,"tag":609,"props":1221,"children":1222},{"style":871},[1223],{"type":567,"value":1224}," val",{"type":562,"tag":609,"props":1226,"children":1227},{"style":843},[1228],{"type":567,"value":902},{"type":562,"tag":609,"props":1230,"children":1231},{"style":933},[1232],{"type":567,"value":1233}," this",{"type":562,"tag":609,"props":1235,"children":1236},{"style":843},[1237],{"type":567,"value":941},{"type":562,"tag":609,"props":1239,"children":1240},{"style":871},[1241],{"type":567,"value":946},{"type":562,"tag":609,"props":1243,"children":1244},{"style":843},[1245],{"type":567,"value":941},{"type":562,"tag":609,"props":1247,"children":1248},{"style":894},[1249],{"type":567,"value":1113},{"type":562,"tag":609,"props":1251,"children":1252},{"style":843},[1253],{"type":567,"value":1182},{"type":562,"tag":609,"props":1255,"children":1256},{"style":871},[1257],{"type":567,"value":1130},{"type":562,"tag":609,"props":1259,"children":1260},{"style":843},[1261],{"type":567,"value":1262},");\n",{"type":562,"tag":609,"props":1264,"children":1265},{"class":611,"line":748},[1266],{"type":562,"tag":609,"props":1267,"children":1268},{"style":829},[1269],{"type":567,"value":1270},"  // 更新位置 => 先删除后添加\n",{"type":562,"tag":609,"props":1272,"children":1273},{"class":611,"line":757},[1274,1278,1282,1286,1290,1295,1299,1303],{"type":562,"tag":609,"props":1275,"children":1276},{"style":933},[1277],{"type":567,"value":936},{"type":562,"tag":609,"props":1279,"children":1280},{"style":843},[1281],{"type":567,"value":941},{"type":562,"tag":609,"props":1283,"children":1284},{"style":871},[1285],{"type":567,"value":946},{"type":562,"tag":609,"props":1287,"children":1288},{"style":843},[1289],{"type":567,"value":941},{"type":562,"tag":609,"props":1291,"children":1292},{"style":894},[1293],{"type":567,"value":1294},"delete",{"type":562,"tag":609,"props":1296,"children":1297},{"style":843},[1298],{"type":567,"value":1182},{"type":562,"tag":609,"props":1300,"children":1301},{"style":871},[1302],{"type":567,"value":1130},{"type":562,"tag":609,"props":1304,"children":1305},{"style":843},[1306],{"type":567,"value":1262},{"type":562,"tag":609,"props":1308,"children":1310},{"class":611,"line":1309},18,[1311,1315,1319,1323,1327,1332,1336,1340,1345,1349],{"type":562,"tag":609,"props":1312,"children":1313},{"style":933},[1314],{"type":567,"value":936},{"type":562,"tag":609,"props":1316,"children":1317},{"style":843},[1318],{"type":567,"value":941},{"type":562,"tag":609,"props":1320,"children":1321},{"style":871},[1322],{"type":567,"value":946},{"type":562,"tag":609,"props":1324,"children":1325},{"style":843},[1326],{"type":567,"value":941},{"type":562,"tag":609,"props":1328,"children":1329},{"style":894},[1330],{"type":567,"value":1331},"set",{"type":562,"tag":609,"props":1333,"children":1334},{"style":843},[1335],{"type":567,"value":1182},{"type":562,"tag":609,"props":1337,"children":1338},{"style":871},[1339],{"type":567,"value":1130},{"type":562,"tag":609,"props":1341,"children":1342},{"style":843},[1343],{"type":567,"value":1344},",",{"type":562,"tag":609,"props":1346,"children":1347},{"style":871},[1348],{"type":567,"value":1224},{"type":562,"tag":609,"props":1350,"children":1351},{"style":843},[1352],{"type":567,"value":1262},{"type":562,"tag":609,"props":1354,"children":1356},{"class":611,"line":1355},19,[1357,1362,1366],{"type":562,"tag":609,"props":1358,"children":1359},{"style":849},[1360],{"type":567,"value":1361},"  return",{"type":562,"tag":609,"props":1363,"children":1364},{"style":871},[1365],{"type":567,"value":1224},{"type":562,"tag":609,"props":1367,"children":1368},{"style":843},[1369],{"type":567,"value":994},{"type":562,"tag":609,"props":1371,"children":1373},{"class":611,"line":1372},20,[1374],{"type":562,"tag":609,"props":1375,"children":1376},{"style":843},[1377],{"type":567,"value":1002},{"type":562,"tag":609,"props":1379,"children":1381},{"class":611,"line":1380},21,[1382],{"type":562,"tag":609,"props":1383,"children":1384},{"emptyLinePlaceholder":661},[1385],{"type":567,"value":664},{"type":562,"tag":609,"props":1387,"children":1389},{"class":611,"line":1388},22,[1390],{"type":562,"tag":609,"props":1391,"children":1392},{"style":829},[1393],{"type":567,"value":832},{"type":562,"tag":609,"props":1395,"children":1397},{"class":611,"line":1396},23,[1398,1402,1406,1410,1414,1418,1422],{"type":562,"tag":609,"props":1399,"children":1400},{"style":829},[1401],{"type":567,"value":1024},{"type":562,"tag":609,"props":1403,"children":1404},{"style":843},[1405],{"type":567,"value":846},{"type":562,"tag":609,"props":1407,"children":1408},{"style":849},[1409],{"type":567,"value":852},{"type":562,"tag":609,"props":1411,"children":1412},{"style":843},[1413],{"type":567,"value":857},{"type":562,"tag":609,"props":1415,"children":1416},{"style":860},[1417],{"type":567,"value":863},{"type":562,"tag":609,"props":1419,"children":1420},{"style":843},[1421],{"type":567,"value":868},{"type":562,"tag":609,"props":1423,"children":1424},{"style":871},[1425],{"type":567,"value":1049},{"type":562,"tag":609,"props":1427,"children":1429},{"class":611,"line":1428},24,[1430,1434,1438,1442,1446,1450,1454],{"type":562,"tag":609,"props":1431,"children":1432},{"style":829},[1433],{"type":567,"value":1024},{"type":562,"tag":609,"props":1435,"children":1436},{"style":843},[1437],{"type":567,"value":846},{"type":562,"tag":609,"props":1439,"children":1440},{"style":849},[1441],{"type":567,"value":852},{"type":562,"tag":609,"props":1443,"children":1444},{"style":843},[1445],{"type":567,"value":857},{"type":562,"tag":609,"props":1447,"children":1448},{"style":860},[1449],{"type":567,"value":863},{"type":562,"tag":609,"props":1451,"children":1452},{"style":843},[1453],{"type":567,"value":868},{"type":562,"tag":609,"props":1455,"children":1456},{"style":871},[1457],{"type":567,"value":1458}," value\n",{"type":562,"tag":609,"props":1460,"children":1462},{"class":611,"line":1461},25,[1463,1467,1471,1475,1479,1484],{"type":562,"tag":609,"props":1464,"children":1465},{"style":829},[1466],{"type":567,"value":1024},{"type":562,"tag":609,"props":1468,"children":1469},{"style":843},[1470],{"type":567,"value":846},{"type":562,"tag":609,"props":1472,"children":1473},{"style":849},[1474],{"type":567,"value":1065},{"type":562,"tag":609,"props":1476,"children":1477},{"style":843},[1478],{"type":567,"value":857},{"type":562,"tag":609,"props":1480,"children":1481},{"style":860},[1482],{"type":567,"value":1483},"void",{"type":562,"tag":609,"props":1485,"children":1486},{"style":843},[1487],{"type":567,"value":1078},{"type":562,"tag":609,"props":1489,"children":1491},{"class":611,"line":1490},26,[1492],{"type":562,"tag":609,"props":1493,"children":1494},{"style":829},[1495],{"type":567,"value":1086},{"type":562,"tag":609,"props":1497,"children":1499},{"class":611,"line":1498},27,[1500,1504,1508,1512,1516,1521,1525,1529,1533,1537,1541,1546,1550],{"type":562,"tag":609,"props":1501,"children":1502},{"style":1092},[1503],{"type":567,"value":1095},{"type":562,"tag":609,"props":1505,"children":1506},{"style":843},[1507],{"type":567,"value":941},{"type":562,"tag":609,"props":1509,"children":1510},{"style":1092},[1511],{"type":567,"value":1104},{"type":562,"tag":609,"props":1513,"children":1514},{"style":843},[1515],{"type":567,"value":941},{"type":562,"tag":609,"props":1517,"children":1518},{"style":894},[1519],{"type":567,"value":1520},"put",{"type":562,"tag":609,"props":1522,"children":1523},{"style":843},[1524],{"type":567,"value":902},{"type":562,"tag":609,"props":1526,"children":1527},{"style":888},[1528],{"type":567,"value":907},{"type":562,"tag":609,"props":1530,"children":1531},{"style":843},[1532],{"type":567,"value":912},{"type":562,"tag":609,"props":1534,"children":1535},{"style":871},[1536],{"type":567,"value":1130},{"type":562,"tag":609,"props":1538,"children":1539},{"style":843},[1540],{"type":567,"value":1344},{"type":562,"tag":609,"props":1542,"children":1543},{"style":871},[1544],{"type":567,"value":1545}," value",{"type":562,"tag":609,"props":1547,"children":1548},{"style":843},[1549],{"type":567,"value":922},{"type":562,"tag":609,"props":1551,"children":1552},{"style":843},[1553],{"type":567,"value":927},{"type":562,"tag":609,"props":1555,"children":1557},{"class":611,"line":1556},28,[1558],{"type":562,"tag":609,"props":1559,"children":1560},{"style":829},[1561],{"type":567,"value":1562},"  // 已经存在的情况下，更新其位置到\"最新\"即可 => 先删除，后插入\n",{"type":562,"tag":609,"props":1564,"children":1566},{"class":611,"line":1565},29,[1567,1571,1575,1579,1583,1587,1591,1595,1599,1603,1607],{"type":562,"tag":609,"props":1568,"children":1569},{"style":849},[1570],{"type":567,"value":1146},{"type":562,"tag":609,"props":1572,"children":1573},{"style":843},[1574],{"type":567,"value":912},{"type":562,"tag":609,"props":1576,"children":1577},{"style":933},[1578],{"type":567,"value":1160},{"type":562,"tag":609,"props":1580,"children":1581},{"style":843},[1582],{"type":567,"value":941},{"type":562,"tag":609,"props":1584,"children":1585},{"style":871},[1586],{"type":567,"value":946},{"type":562,"tag":609,"props":1588,"children":1589},{"style":843},[1590],{"type":567,"value":941},{"type":562,"tag":609,"props":1592,"children":1593},{"style":894},[1594],{"type":567,"value":1177},{"type":562,"tag":609,"props":1596,"children":1597},{"style":843},[1598],{"type":567,"value":1182},{"type":562,"tag":609,"props":1600,"children":1601},{"style":871},[1602],{"type":567,"value":1130},{"type":562,"tag":609,"props":1604,"children":1605},{"style":843},[1606],{"type":567,"value":1191},{"type":562,"tag":609,"props":1608,"children":1609},{"style":843},[1610],{"type":567,"value":927},{"type":562,"tag":609,"props":1612,"children":1614},{"class":611,"line":1613},30,[1615,1620,1624,1628,1632,1636,1640,1644],{"type":562,"tag":609,"props":1616,"children":1617},{"style":933},[1618],{"type":567,"value":1619},"    this",{"type":562,"tag":609,"props":1621,"children":1622},{"style":843},[1623],{"type":567,"value":941},{"type":562,"tag":609,"props":1625,"children":1626},{"style":871},[1627],{"type":567,"value":946},{"type":562,"tag":609,"props":1629,"children":1630},{"style":843},[1631],{"type":567,"value":941},{"type":562,"tag":609,"props":1633,"children":1634},{"style":894},[1635],{"type":567,"value":1294},{"type":562,"tag":609,"props":1637,"children":1638},{"style":843},[1639],{"type":567,"value":1182},{"type":562,"tag":609,"props":1641,"children":1642},{"style":871},[1643],{"type":567,"value":1130},{"type":562,"tag":609,"props":1645,"children":1646},{"style":843},[1647],{"type":567,"value":1262},{"type":562,"tag":609,"props":1649,"children":1651},{"class":611,"line":1650},31,[1652],{"type":562,"tag":609,"props":1653,"children":1654},{"style":843},[1655],{"type":567,"value":1656},"  }\n",{"type":562,"tag":609,"props":1658,"children":1660},{"class":611,"line":1659},32,[1661,1665,1669,1673,1677,1681,1685,1689,1693,1697],{"type":562,"tag":609,"props":1662,"children":1663},{"style":933},[1664],{"type":567,"value":936},{"type":562,"tag":609,"props":1666,"children":1667},{"style":843},[1668],{"type":567,"value":941},{"type":562,"tag":609,"props":1670,"children":1671},{"style":871},[1672],{"type":567,"value":946},{"type":562,"tag":609,"props":1674,"children":1675},{"style":843},[1676],{"type":567,"value":941},{"type":562,"tag":609,"props":1678,"children":1679},{"style":894},[1680],{"type":567,"value":1331},{"type":562,"tag":609,"props":1682,"children":1683},{"style":843},[1684],{"type":567,"value":1182},{"type":562,"tag":609,"props":1686,"children":1687},{"style":871},[1688],{"type":567,"value":1130},{"type":562,"tag":609,"props":1690,"children":1691},{"style":843},[1692],{"type":567,"value":1344},{"type":562,"tag":609,"props":1694,"children":1695},{"style":871},[1696],{"type":567,"value":1545},{"type":562,"tag":609,"props":1698,"children":1699},{"style":843},[1700],{"type":567,"value":1262},{"type":562,"tag":609,"props":1702,"children":1704},{"class":611,"line":1703},33,[1705],{"type":562,"tag":609,"props":1706,"children":1707},{"emptyLinePlaceholder":661},[1708],{"type":567,"value":664},{"type":562,"tag":609,"props":1710,"children":1712},{"class":611,"line":1711},34,[1713,1717,1721,1725,1729,1733,1737,1742,1747,1751,1755,1759,1763],{"type":562,"tag":609,"props":1714,"children":1715},{"style":849},[1716],{"type":567,"value":1146},{"type":562,"tag":609,"props":1718,"children":1719},{"style":843},[1720],{"type":567,"value":912},{"type":562,"tag":609,"props":1722,"children":1723},{"style":933},[1724],{"type":567,"value":1160},{"type":562,"tag":609,"props":1726,"children":1727},{"style":843},[1728],{"type":567,"value":941},{"type":562,"tag":609,"props":1730,"children":1731},{"style":871},[1732],{"type":567,"value":946},{"type":562,"tag":609,"props":1734,"children":1735},{"style":843},[1736],{"type":567,"value":941},{"type":562,"tag":609,"props":1738,"children":1739},{"style":871},[1740],{"type":567,"value":1741},"size",{"type":562,"tag":609,"props":1743,"children":1744},{"style":843},[1745],{"type":567,"value":1746}," >",{"type":562,"tag":609,"props":1748,"children":1749},{"style":933},[1750],{"type":567,"value":1233},{"type":562,"tag":609,"props":1752,"children":1753},{"style":843},[1754],{"type":567,"value":941},{"type":562,"tag":609,"props":1756,"children":1757},{"style":871},[1758],{"type":567,"value":917},{"type":562,"tag":609,"props":1760,"children":1761},{"style":843},[1762],{"type":567,"value":922},{"type":562,"tag":609,"props":1764,"children":1765},{"style":843},[1766],{"type":567,"value":927},{"type":562,"tag":609,"props":1768,"children":1770},{"class":611,"line":1769},35,[1771],{"type":562,"tag":609,"props":1772,"children":1773},{"style":829},[1774],{"type":567,"value":1775},"    // 如果超出 map 最大范围，找到第一个删除\n",{"type":562,"tag":609,"props":1777,"children":1779},{"class":611,"line":1778},36,[1780],{"type":562,"tag":609,"props":1781,"children":1782},{"style":829},[1783],{"type":567,"value":1784},"    // keys() 得到一个迭代器对象\n",{"type":562,"tag":609,"props":1786,"children":1788},{"class":611,"line":1787},37,[1789,1794,1799,1803,1807,1811,1815,1819,1824,1829,1834,1838,1843],{"type":562,"tag":609,"props":1790,"children":1791},{"style":888},[1792],{"type":567,"value":1793},"    const",{"type":562,"tag":609,"props":1795,"children":1796},{"style":871},[1797],{"type":567,"value":1798}," firstKey",{"type":562,"tag":609,"props":1800,"children":1801},{"style":843},[1802],{"type":567,"value":902},{"type":562,"tag":609,"props":1804,"children":1805},{"style":933},[1806],{"type":567,"value":1233},{"type":562,"tag":609,"props":1808,"children":1809},{"style":843},[1810],{"type":567,"value":941},{"type":562,"tag":609,"props":1812,"children":1813},{"style":871},[1814],{"type":567,"value":946},{"type":562,"tag":609,"props":1816,"children":1817},{"style":843},[1818],{"type":567,"value":941},{"type":562,"tag":609,"props":1820,"children":1821},{"style":894},[1822],{"type":567,"value":1823},"keys",{"type":562,"tag":609,"props":1825,"children":1826},{"style":843},[1827],{"type":567,"value":1828},"().",{"type":562,"tag":609,"props":1830,"children":1831},{"style":894},[1832],{"type":567,"value":1833},"next",{"type":562,"tag":609,"props":1835,"children":1836},{"style":843},[1837],{"type":567,"value":1828},{"type":562,"tag":609,"props":1839,"children":1840},{"style":871},[1841],{"type":567,"value":1842},"value",{"type":562,"tag":609,"props":1844,"children":1845},{"style":843},[1846],{"type":567,"value":994},{"type":562,"tag":609,"props":1848,"children":1850},{"class":611,"line":1849},38,[1851,1855,1859,1863,1867,1871,1875,1880],{"type":562,"tag":609,"props":1852,"children":1853},{"style":933},[1854],{"type":567,"value":1619},{"type":562,"tag":609,"props":1856,"children":1857},{"style":843},[1858],{"type":567,"value":941},{"type":562,"tag":609,"props":1860,"children":1861},{"style":871},[1862],{"type":567,"value":946},{"type":562,"tag":609,"props":1864,"children":1865},{"style":843},[1866],{"type":567,"value":941},{"type":562,"tag":609,"props":1868,"children":1869},{"style":894},[1870],{"type":567,"value":1294},{"type":562,"tag":609,"props":1872,"children":1873},{"style":843},[1874],{"type":567,"value":1182},{"type":562,"tag":609,"props":1876,"children":1877},{"style":871},[1878],{"type":567,"value":1879},"firstKey",{"type":562,"tag":609,"props":1881,"children":1882},{"style":843},[1883],{"type":567,"value":1262},{"type":562,"tag":609,"props":1885,"children":1887},{"class":611,"line":1886},39,[1888],{"type":562,"tag":609,"props":1889,"children":1890},{"style":843},[1891],{"type":567,"value":1656},{"type":562,"tag":609,"props":1893,"children":1895},{"class":611,"line":1894},40,[1896],{"type":562,"tag":609,"props":1897,"children":1898},{"style":843},[1899],{"type":567,"value":1078},{"type":562,"tag":609,"props":1901,"children":1903},{"class":611,"line":1902},41,[1904],{"type":562,"tag":609,"props":1905,"children":1906},{"emptyLinePlaceholder":661},[1907],{"type":567,"value":664},{"type":562,"tag":609,"props":1909,"children":1911},{"class":611,"line":1910},42,[1912],{"type":562,"tag":609,"props":1913,"children":1914},{"style":829},[1915],{"type":567,"value":832},{"type":562,"tag":609,"props":1917,"children":1919},{"class":611,"line":1918},43,[1920],{"type":562,"tag":609,"props":1921,"children":1922},{"style":829},[1923],{"type":567,"value":1924},"* Your LRUCache object will be instantiated and called as such:\n",{"type":562,"tag":609,"props":1926,"children":1928},{"class":611,"line":1927},44,[1929],{"type":562,"tag":609,"props":1930,"children":1931},{"style":829},[1932],{"type":567,"value":1933},"* var obj = new LRUCache(capacity)\n",{"type":562,"tag":609,"props":1935,"children":1937},{"class":611,"line":1936},45,[1938],{"type":562,"tag":609,"props":1939,"children":1940},{"style":829},[1941],{"type":567,"value":1942},"* var param_1 = obj.get(key)\n",{"type":562,"tag":609,"props":1944,"children":1946},{"class":611,"line":1945},46,[1947],{"type":562,"tag":609,"props":1948,"children":1949},{"style":829},[1950],{"type":567,"value":1951},"* obj.put(key,value)\n",{"type":562,"tag":609,"props":1953,"children":1955},{"class":611,"line":1954},47,[1956],{"type":562,"tag":609,"props":1957,"children":1958},{"style":829},[1959],{"type":567,"value":1086},{"type":562,"tag":1961,"props":1962,"children":1963},"style",{},[1964],{"type":567,"value":1965},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":648,"depth":648,"links":1967},[1968,1969],{"id":795,"depth":621,"text":795},{"id":805,"depth":621,"text":805,"children":1970},[1971],{"id":811,"depth":630,"text":814},"markdown","content:1.algorithm:3.leetcode:3.major:146.lru-cache.md","content","1.algorithm/3.leetcode/3.major/146.lru-cache.md","md",[1978,1980],{"_path":174,"title":173,"description":1979},"给你一个链表的头节点 head ，判断链表中是否有环。",{"_path":180,"title":179,"description":1981},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",1716810726359]