[{"data":1,"prerenderedAt":1989},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/lru-cache":546,"/algorithm/leetcode/major/lru-cache-surround":1984},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":177,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":176,"description":550,"url":551,"body":552,"_type":1979,"_id":1980,"_source":1981,"_file":1982,"_extension":1983},"major",false,"","请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：","https://leetcode.cn/problems/lru-cache",{"type":553,"children":554,"toc":1973},"root",[555,562,582,587,592,758,763,786,792,797,802,809,1967],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":563,"props":564,"children":565},"ul",{},[566,572,577],{"type":556,"tag":567,"props":568,"children":569},"li",{},[570],{"type":561,"value":571},"LRUCache(int capacity) 以 正整数 作为容量 capacity 初始化 LRU 缓存",{"type":556,"tag":567,"props":573,"children":574},{},[575],{"type":561,"value":576},"int get(int key) 如果关键字 key 存在于缓存中，则返回关键字的值，否则返回 -1 。",{"type":556,"tag":567,"props":578,"children":579},{},[580],{"type":561,"value":581},"void put(int key, int value) 如果关键字 key 已经存在，则变更其数据值 value ；如果不存在，则向缓存中插入该组 key-value 。如果插入操作导致关键字数量超过 capacity ，则应该 逐出 最久未使用的关键字。",{"type":556,"tag":557,"props":583,"children":584},{},[585],{"type":561,"value":586},"函数 get 和 put 必须以 O(1) 的平均时间复杂度运行。",{"type":556,"tag":557,"props":588,"children":589},{},[590],{"type":561,"value":591},"示例：",{"type":556,"tag":593,"props":594,"children":597},"pre",{"className":595,"code":596,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n输出\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n解释\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // 缓存是 {1=1}\nlRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\nlRUCache.get(1); // 返回 1\nlRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\nlRUCache.get(2); // 返回 -1 (未找到)\nlRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\nlRUCache.get(1); // 返回 -1 (未找到)\nlRUCache.get(3); // 返回 3\nlRUCache.get(4); // 返回 4\n",[598],{"type":556,"tag":599,"props":600,"children":601},"code",{"__ignoreMap":549},[602,613,622,631,640,649,659,668,677,686,695,704,713,722,731,740,749],{"type":556,"tag":603,"props":604,"children":607},"span",{"class":605,"line":606},"line",1,[608],{"type":556,"tag":603,"props":609,"children":610},{},[611],{"type":561,"value":612},"输入\n",{"type":556,"tag":603,"props":614,"children":616},{"class":605,"line":615},2,[617],{"type":556,"tag":603,"props":618,"children":619},{},[620],{"type":561,"value":621},"[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n",{"type":556,"tag":603,"props":623,"children":625},{"class":605,"line":624},3,[626],{"type":556,"tag":603,"props":627,"children":628},{},[629],{"type":561,"value":630},"[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n",{"type":556,"tag":603,"props":632,"children":634},{"class":605,"line":633},4,[635],{"type":556,"tag":603,"props":636,"children":637},{},[638],{"type":561,"value":639},"输出\n",{"type":556,"tag":603,"props":641,"children":643},{"class":605,"line":642},5,[644],{"type":556,"tag":603,"props":645,"children":646},{},[647],{"type":561,"value":648},"[null, null, null, 1, null, -1, null, -1, 3, 4]\n",{"type":556,"tag":603,"props":650,"children":652},{"class":605,"line":651},6,[653],{"type":556,"tag":603,"props":654,"children":656},{"emptyLinePlaceholder":655},true,[657],{"type":561,"value":658},"\n",{"type":556,"tag":603,"props":660,"children":662},{"class":605,"line":661},7,[663],{"type":556,"tag":603,"props":664,"children":665},{},[666],{"type":561,"value":667},"解释\n",{"type":556,"tag":603,"props":669,"children":671},{"class":605,"line":670},8,[672],{"type":556,"tag":603,"props":673,"children":674},{},[675],{"type":561,"value":676},"LRUCache lRUCache = new LRUCache(2);\n",{"type":556,"tag":603,"props":678,"children":680},{"class":605,"line":679},9,[681],{"type":556,"tag":603,"props":682,"children":683},{},[684],{"type":561,"value":685},"lRUCache.put(1, 1); // 缓存是 {1=1}\n",{"type":556,"tag":603,"props":687,"children":689},{"class":605,"line":688},10,[690],{"type":556,"tag":603,"props":691,"children":692},{},[693],{"type":561,"value":694},"lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\n",{"type":556,"tag":603,"props":696,"children":698},{"class":605,"line":697},11,[699],{"type":556,"tag":603,"props":700,"children":701},{},[702],{"type":561,"value":703},"lRUCache.get(1); // 返回 1\n",{"type":556,"tag":603,"props":705,"children":707},{"class":605,"line":706},12,[708],{"type":556,"tag":603,"props":709,"children":710},{},[711],{"type":561,"value":712},"lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\n",{"type":556,"tag":603,"props":714,"children":716},{"class":605,"line":715},13,[717],{"type":556,"tag":603,"props":718,"children":719},{},[720],{"type":561,"value":721},"lRUCache.get(2); // 返回 -1 (未找到)\n",{"type":556,"tag":603,"props":723,"children":725},{"class":605,"line":724},14,[726],{"type":556,"tag":603,"props":727,"children":728},{},[729],{"type":561,"value":730},"lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\n",{"type":556,"tag":603,"props":732,"children":734},{"class":605,"line":733},15,[735],{"type":556,"tag":603,"props":736,"children":737},{},[738],{"type":561,"value":739},"lRUCache.get(1); // 返回 -1 (未找到)\n",{"type":556,"tag":603,"props":741,"children":743},{"class":605,"line":742},16,[744],{"type":556,"tag":603,"props":745,"children":746},{},[747],{"type":561,"value":748},"lRUCache.get(3); // 返回 3\n",{"type":556,"tag":603,"props":750,"children":752},{"class":605,"line":751},17,[753],{"type":556,"tag":603,"props":754,"children":755},{},[756],{"type":561,"value":757},"lRUCache.get(4); // 返回 4\n",{"type":556,"tag":557,"props":759,"children":760},{},[761],{"type":561,"value":762},"提示：",{"type":556,"tag":563,"props":764,"children":765},{},[766,771,776,781],{"type":556,"tag":567,"props":767,"children":768},{},[769],{"type":561,"value":770},"1 \u003C= capacity \u003C= 3000",{"type":556,"tag":567,"props":772,"children":773},{},[774],{"type":561,"value":775},"0 \u003C= key \u003C= 10000",{"type":556,"tag":567,"props":777,"children":778},{},[779],{"type":561,"value":780},"0 \u003C= value \u003C= 105",{"type":556,"tag":567,"props":782,"children":783},{},[784],{"type":561,"value":785},"最多调用 2 * 10^5 次 get 和 put",{"type":556,"tag":787,"props":788,"children":790},"h2",{"id":789},"解题思路",[791],{"type":561,"value":789},{"type":556,"tag":557,"props":793,"children":794},{},[795],{"type":561,"value":796},"题目要求的 1 和 2 相对简单，主要是条件 3，当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值",{"type":556,"tag":787,"props":798,"children":800},{"id":799},"实现",[801],{"type":561,"value":799},{"type":556,"tag":803,"props":804,"children":806},"h3",{"id":805},"map-方案",[807],{"type":561,"value":808},"Map 方案",{"type":556,"tag":593,"props":810,"children":814},{"className":811,"code":812,"language":813,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} capacity\n */\nvar LRUCache = function (capacity) {\n  this.cache = new Map();\n  this.capacity = capacity;\n};\n\n/**\n * @param {number} key\n * @return {number}\n */\nLRUCache.prototype.get = function (key) {\n  if (this.cache.has(key)) {\n    const val = this.cache.get(key);\n    // 更新位置\n    this.cache.delete(key);\n    this.cache.set(key, val);\n    return val;\n  }\n  return -1;\n};\n\n/**\n * @param {number} key\n * @param {number} value\n * @return {void}\n */\nLRUCache.prototype.put = function (key, value) {\n  // 已经存在的情况下，更新其位置到”最新“即可\n  // 先删除，后插入\n  if (this.cache.has(key)) {\n    this.cache.delete(key);\n  } else {\n    // 插入数据前先判断，size 是否符合 capacity\n    // 已经 >= capacity，需要把最开始插入的数据删除掉\n    // keys() 方法得到一个可遍历对象,执行 next( )拿到一个形如 { value: 'xxx', done: false } 的对象\n    if (this.cache.size >= this.capacity) {\n      this.cache.delete(this.cache.keys().next().value);\n    }\n  }\n  this.cache.set(key, value);\n};\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * var obj = new LRUCache(capacity)\n * var param_1 = obj.get(key)\n * obj.put(key,value)\n */\n","js",[815],{"type":556,"tag":599,"props":816,"children":817},{"__ignoreMap":549},[818,827,869,877,922,960,989,997,1004,1011,1043,1072,1079,1131,1183,1234,1242,1279,1325,1342,1351,1375,1383,1391,1399,1431,1464,1493,1501,1559,1568,1577,1625,1661,1679,1688,1697,1706,1765,1838,1847,1855,1899,1907,1915,1923,1932,1941,1950,1959],{"type":556,"tag":603,"props":819,"children":820},{"class":605,"line":606},[821],{"type":556,"tag":603,"props":822,"children":824},{"style":823},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[825],{"type":561,"value":826},"/**\n",{"type":556,"tag":603,"props":828,"children":829},{"class":605,"line":615},[830,835,841,847,852,858,863],{"type":556,"tag":603,"props":831,"children":832},{"style":823},[833],{"type":561,"value":834}," * ",{"type":556,"tag":603,"props":836,"children":838},{"style":837},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[839],{"type":561,"value":840},"@",{"type":556,"tag":603,"props":842,"children":844},{"style":843},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[845],{"type":561,"value":846},"param",{"type":556,"tag":603,"props":848,"children":849},{"style":837},[850],{"type":561,"value":851}," {",{"type":556,"tag":603,"props":853,"children":855},{"style":854},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[856],{"type":561,"value":857},"number",{"type":556,"tag":603,"props":859,"children":860},{"style":837},[861],{"type":561,"value":862},"}",{"type":556,"tag":603,"props":864,"children":866},{"style":865},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[867],{"type":561,"value":868}," capacity\n",{"type":556,"tag":603,"props":870,"children":871},{"class":605,"line":624},[872],{"type":556,"tag":603,"props":873,"children":874},{"style":823},[875],{"type":561,"value":876}," */\n",{"type":556,"tag":603,"props":878,"children":879},{"class":605,"line":633},[880,886,892,897,902,907,912,917],{"type":556,"tag":603,"props":881,"children":883},{"style":882},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[884],{"type":561,"value":885},"var",{"type":556,"tag":603,"props":887,"children":889},{"style":888},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[890],{"type":561,"value":891}," LRUCache",{"type":556,"tag":603,"props":893,"children":894},{"style":837},[895],{"type":561,"value":896}," =",{"type":556,"tag":603,"props":898,"children":899},{"style":882},[900],{"type":561,"value":901}," function",{"type":556,"tag":603,"props":903,"children":904},{"style":837},[905],{"type":561,"value":906}," (",{"type":556,"tag":603,"props":908,"children":909},{"style":865},[910],{"type":561,"value":911},"capacity",{"type":556,"tag":603,"props":913,"children":914},{"style":837},[915],{"type":561,"value":916},")",{"type":556,"tag":603,"props":918,"children":919},{"style":837},[920],{"type":561,"value":921}," {\n",{"type":556,"tag":603,"props":923,"children":924},{"class":605,"line":642},[925,931,936,941,945,950,955],{"type":556,"tag":603,"props":926,"children":928},{"style":927},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[929],{"type":561,"value":930},"  this",{"type":556,"tag":603,"props":932,"children":933},{"style":837},[934],{"type":561,"value":935},".",{"type":556,"tag":603,"props":937,"children":938},{"style":865},[939],{"type":561,"value":940},"cache",{"type":556,"tag":603,"props":942,"children":943},{"style":837},[944],{"type":561,"value":896},{"type":556,"tag":603,"props":946,"children":947},{"style":882},[948],{"type":561,"value":949}," new",{"type":556,"tag":603,"props":951,"children":952},{"style":888},[953],{"type":561,"value":954}," Map",{"type":556,"tag":603,"props":956,"children":957},{"style":837},[958],{"type":561,"value":959},"();\n",{"type":556,"tag":603,"props":961,"children":962},{"class":605,"line":651},[963,967,971,975,979,984],{"type":556,"tag":603,"props":964,"children":965},{"style":927},[966],{"type":561,"value":930},{"type":556,"tag":603,"props":968,"children":969},{"style":837},[970],{"type":561,"value":935},{"type":556,"tag":603,"props":972,"children":973},{"style":865},[974],{"type":561,"value":911},{"type":556,"tag":603,"props":976,"children":977},{"style":837},[978],{"type":561,"value":896},{"type":556,"tag":603,"props":980,"children":981},{"style":865},[982],{"type":561,"value":983}," capacity",{"type":556,"tag":603,"props":985,"children":986},{"style":837},[987],{"type":561,"value":988},";\n",{"type":556,"tag":603,"props":990,"children":991},{"class":605,"line":661},[992],{"type":556,"tag":603,"props":993,"children":994},{"style":837},[995],{"type":561,"value":996},"};\n",{"type":556,"tag":603,"props":998,"children":999},{"class":605,"line":670},[1000],{"type":556,"tag":603,"props":1001,"children":1002},{"emptyLinePlaceholder":655},[1003],{"type":561,"value":658},{"type":556,"tag":603,"props":1005,"children":1006},{"class":605,"line":679},[1007],{"type":556,"tag":603,"props":1008,"children":1009},{"style":823},[1010],{"type":561,"value":826},{"type":556,"tag":603,"props":1012,"children":1013},{"class":605,"line":688},[1014,1018,1022,1026,1030,1034,1038],{"type":556,"tag":603,"props":1015,"children":1016},{"style":823},[1017],{"type":561,"value":834},{"type":556,"tag":603,"props":1019,"children":1020},{"style":837},[1021],{"type":561,"value":840},{"type":556,"tag":603,"props":1023,"children":1024},{"style":843},[1025],{"type":561,"value":846},{"type":556,"tag":603,"props":1027,"children":1028},{"style":837},[1029],{"type":561,"value":851},{"type":556,"tag":603,"props":1031,"children":1032},{"style":854},[1033],{"type":561,"value":857},{"type":556,"tag":603,"props":1035,"children":1036},{"style":837},[1037],{"type":561,"value":862},{"type":556,"tag":603,"props":1039,"children":1040},{"style":865},[1041],{"type":561,"value":1042}," key\n",{"type":556,"tag":603,"props":1044,"children":1045},{"class":605,"line":697},[1046,1050,1054,1059,1063,1067],{"type":556,"tag":603,"props":1047,"children":1048},{"style":823},[1049],{"type":561,"value":834},{"type":556,"tag":603,"props":1051,"children":1052},{"style":837},[1053],{"type":561,"value":840},{"type":556,"tag":603,"props":1055,"children":1056},{"style":843},[1057],{"type":561,"value":1058},"return",{"type":556,"tag":603,"props":1060,"children":1061},{"style":837},[1062],{"type":561,"value":851},{"type":556,"tag":603,"props":1064,"children":1065},{"style":854},[1066],{"type":561,"value":857},{"type":556,"tag":603,"props":1068,"children":1069},{"style":837},[1070],{"type":561,"value":1071},"}\n",{"type":556,"tag":603,"props":1073,"children":1074},{"class":605,"line":706},[1075],{"type":556,"tag":603,"props":1076,"children":1077},{"style":823},[1078],{"type":561,"value":876},{"type":556,"tag":603,"props":1080,"children":1081},{"class":605,"line":715},[1082,1088,1092,1097,1101,1106,1110,1114,1118,1123,1127],{"type":556,"tag":603,"props":1083,"children":1085},{"style":1084},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1086],{"type":561,"value":1087},"LRUCache",{"type":556,"tag":603,"props":1089,"children":1090},{"style":837},[1091],{"type":561,"value":935},{"type":556,"tag":603,"props":1093,"children":1094},{"style":1084},[1095],{"type":561,"value":1096},"prototype",{"type":556,"tag":603,"props":1098,"children":1099},{"style":837},[1100],{"type":561,"value":935},{"type":556,"tag":603,"props":1102,"children":1103},{"style":888},[1104],{"type":561,"value":1105},"get",{"type":556,"tag":603,"props":1107,"children":1108},{"style":837},[1109],{"type":561,"value":896},{"type":556,"tag":603,"props":1111,"children":1112},{"style":882},[1113],{"type":561,"value":901},{"type":556,"tag":603,"props":1115,"children":1116},{"style":837},[1117],{"type":561,"value":906},{"type":556,"tag":603,"props":1119,"children":1120},{"style":865},[1121],{"type":561,"value":1122},"key",{"type":556,"tag":603,"props":1124,"children":1125},{"style":837},[1126],{"type":561,"value":916},{"type":556,"tag":603,"props":1128,"children":1129},{"style":837},[1130],{"type":561,"value":921},{"type":556,"tag":603,"props":1132,"children":1133},{"class":605,"line":724},[1134,1139,1143,1148,1152,1156,1160,1165,1170,1174,1179],{"type":556,"tag":603,"props":1135,"children":1136},{"style":843},[1137],{"type":561,"value":1138},"  if",{"type":556,"tag":603,"props":1140,"children":1141},{"style":837},[1142],{"type":561,"value":906},{"type":556,"tag":603,"props":1144,"children":1145},{"style":927},[1146],{"type":561,"value":1147},"this",{"type":556,"tag":603,"props":1149,"children":1150},{"style":837},[1151],{"type":561,"value":935},{"type":556,"tag":603,"props":1153,"children":1154},{"style":865},[1155],{"type":561,"value":940},{"type":556,"tag":603,"props":1157,"children":1158},{"style":837},[1159],{"type":561,"value":935},{"type":556,"tag":603,"props":1161,"children":1162},{"style":888},[1163],{"type":561,"value":1164},"has",{"type":556,"tag":603,"props":1166,"children":1167},{"style":837},[1168],{"type":561,"value":1169},"(",{"type":556,"tag":603,"props":1171,"children":1172},{"style":865},[1173],{"type":561,"value":1122},{"type":556,"tag":603,"props":1175,"children":1176},{"style":837},[1177],{"type":561,"value":1178},"))",{"type":556,"tag":603,"props":1180,"children":1181},{"style":837},[1182],{"type":561,"value":921},{"type":556,"tag":603,"props":1184,"children":1185},{"class":605,"line":733},[1186,1191,1196,1200,1205,1209,1213,1217,1221,1225,1229],{"type":556,"tag":603,"props":1187,"children":1188},{"style":882},[1189],{"type":561,"value":1190},"    const",{"type":556,"tag":603,"props":1192,"children":1193},{"style":865},[1194],{"type":561,"value":1195}," val",{"type":556,"tag":603,"props":1197,"children":1198},{"style":837},[1199],{"type":561,"value":896},{"type":556,"tag":603,"props":1201,"children":1202},{"style":927},[1203],{"type":561,"value":1204}," this",{"type":556,"tag":603,"props":1206,"children":1207},{"style":837},[1208],{"type":561,"value":935},{"type":556,"tag":603,"props":1210,"children":1211},{"style":865},[1212],{"type":561,"value":940},{"type":556,"tag":603,"props":1214,"children":1215},{"style":837},[1216],{"type":561,"value":935},{"type":556,"tag":603,"props":1218,"children":1219},{"style":888},[1220],{"type":561,"value":1105},{"type":556,"tag":603,"props":1222,"children":1223},{"style":837},[1224],{"type":561,"value":1169},{"type":556,"tag":603,"props":1226,"children":1227},{"style":865},[1228],{"type":561,"value":1122},{"type":556,"tag":603,"props":1230,"children":1231},{"style":837},[1232],{"type":561,"value":1233},");\n",{"type":556,"tag":603,"props":1235,"children":1236},{"class":605,"line":742},[1237],{"type":556,"tag":603,"props":1238,"children":1239},{"style":823},[1240],{"type":561,"value":1241},"    // 更新位置\n",{"type":556,"tag":603,"props":1243,"children":1244},{"class":605,"line":751},[1245,1250,1254,1258,1262,1267,1271,1275],{"type":556,"tag":603,"props":1246,"children":1247},{"style":927},[1248],{"type":561,"value":1249},"    this",{"type":556,"tag":603,"props":1251,"children":1252},{"style":837},[1253],{"type":561,"value":935},{"type":556,"tag":603,"props":1255,"children":1256},{"style":865},[1257],{"type":561,"value":940},{"type":556,"tag":603,"props":1259,"children":1260},{"style":837},[1261],{"type":561,"value":935},{"type":556,"tag":603,"props":1263,"children":1264},{"style":888},[1265],{"type":561,"value":1266},"delete",{"type":556,"tag":603,"props":1268,"children":1269},{"style":837},[1270],{"type":561,"value":1169},{"type":556,"tag":603,"props":1272,"children":1273},{"style":865},[1274],{"type":561,"value":1122},{"type":556,"tag":603,"props":1276,"children":1277},{"style":837},[1278],{"type":561,"value":1233},{"type":556,"tag":603,"props":1280,"children":1282},{"class":605,"line":1281},18,[1283,1287,1291,1295,1299,1304,1308,1312,1317,1321],{"type":556,"tag":603,"props":1284,"children":1285},{"style":927},[1286],{"type":561,"value":1249},{"type":556,"tag":603,"props":1288,"children":1289},{"style":837},[1290],{"type":561,"value":935},{"type":556,"tag":603,"props":1292,"children":1293},{"style":865},[1294],{"type":561,"value":940},{"type":556,"tag":603,"props":1296,"children":1297},{"style":837},[1298],{"type":561,"value":935},{"type":556,"tag":603,"props":1300,"children":1301},{"style":888},[1302],{"type":561,"value":1303},"set",{"type":556,"tag":603,"props":1305,"children":1306},{"style":837},[1307],{"type":561,"value":1169},{"type":556,"tag":603,"props":1309,"children":1310},{"style":865},[1311],{"type":561,"value":1122},{"type":556,"tag":603,"props":1313,"children":1314},{"style":837},[1315],{"type":561,"value":1316},",",{"type":556,"tag":603,"props":1318,"children":1319},{"style":865},[1320],{"type":561,"value":1195},{"type":556,"tag":603,"props":1322,"children":1323},{"style":837},[1324],{"type":561,"value":1233},{"type":556,"tag":603,"props":1326,"children":1328},{"class":605,"line":1327},19,[1329,1334,1338],{"type":556,"tag":603,"props":1330,"children":1331},{"style":843},[1332],{"type":561,"value":1333},"    return",{"type":556,"tag":603,"props":1335,"children":1336},{"style":865},[1337],{"type":561,"value":1195},{"type":556,"tag":603,"props":1339,"children":1340},{"style":837},[1341],{"type":561,"value":988},{"type":556,"tag":603,"props":1343,"children":1345},{"class":605,"line":1344},20,[1346],{"type":556,"tag":603,"props":1347,"children":1348},{"style":837},[1349],{"type":561,"value":1350},"  }\n",{"type":556,"tag":603,"props":1352,"children":1354},{"class":605,"line":1353},21,[1355,1360,1365,1371],{"type":556,"tag":603,"props":1356,"children":1357},{"style":843},[1358],{"type":561,"value":1359},"  return",{"type":556,"tag":603,"props":1361,"children":1362},{"style":882},[1363],{"type":561,"value":1364}," -",{"type":556,"tag":603,"props":1366,"children":1368},{"style":1367},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1369],{"type":561,"value":1370},"1",{"type":556,"tag":603,"props":1372,"children":1373},{"style":837},[1374],{"type":561,"value":988},{"type":556,"tag":603,"props":1376,"children":1378},{"class":605,"line":1377},22,[1379],{"type":556,"tag":603,"props":1380,"children":1381},{"style":837},[1382],{"type":561,"value":996},{"type":556,"tag":603,"props":1384,"children":1386},{"class":605,"line":1385},23,[1387],{"type":556,"tag":603,"props":1388,"children":1389},{"emptyLinePlaceholder":655},[1390],{"type":561,"value":658},{"type":556,"tag":603,"props":1392,"children":1394},{"class":605,"line":1393},24,[1395],{"type":556,"tag":603,"props":1396,"children":1397},{"style":823},[1398],{"type":561,"value":826},{"type":556,"tag":603,"props":1400,"children":1402},{"class":605,"line":1401},25,[1403,1407,1411,1415,1419,1423,1427],{"type":556,"tag":603,"props":1404,"children":1405},{"style":823},[1406],{"type":561,"value":834},{"type":556,"tag":603,"props":1408,"children":1409},{"style":837},[1410],{"type":561,"value":840},{"type":556,"tag":603,"props":1412,"children":1413},{"style":843},[1414],{"type":561,"value":846},{"type":556,"tag":603,"props":1416,"children":1417},{"style":837},[1418],{"type":561,"value":851},{"type":556,"tag":603,"props":1420,"children":1421},{"style":854},[1422],{"type":561,"value":857},{"type":556,"tag":603,"props":1424,"children":1425},{"style":837},[1426],{"type":561,"value":862},{"type":556,"tag":603,"props":1428,"children":1429},{"style":865},[1430],{"type":561,"value":1042},{"type":556,"tag":603,"props":1432,"children":1434},{"class":605,"line":1433},26,[1435,1439,1443,1447,1451,1455,1459],{"type":556,"tag":603,"props":1436,"children":1437},{"style":823},[1438],{"type":561,"value":834},{"type":556,"tag":603,"props":1440,"children":1441},{"style":837},[1442],{"type":561,"value":840},{"type":556,"tag":603,"props":1444,"children":1445},{"style":843},[1446],{"type":561,"value":846},{"type":556,"tag":603,"props":1448,"children":1449},{"style":837},[1450],{"type":561,"value":851},{"type":556,"tag":603,"props":1452,"children":1453},{"style":854},[1454],{"type":561,"value":857},{"type":556,"tag":603,"props":1456,"children":1457},{"style":837},[1458],{"type":561,"value":862},{"type":556,"tag":603,"props":1460,"children":1461},{"style":865},[1462],{"type":561,"value":1463}," value\n",{"type":556,"tag":603,"props":1465,"children":1467},{"class":605,"line":1466},27,[1468,1472,1476,1480,1484,1489],{"type":556,"tag":603,"props":1469,"children":1470},{"style":823},[1471],{"type":561,"value":834},{"type":556,"tag":603,"props":1473,"children":1474},{"style":837},[1475],{"type":561,"value":840},{"type":556,"tag":603,"props":1477,"children":1478},{"style":843},[1479],{"type":561,"value":1058},{"type":556,"tag":603,"props":1481,"children":1482},{"style":837},[1483],{"type":561,"value":851},{"type":556,"tag":603,"props":1485,"children":1486},{"style":854},[1487],{"type":561,"value":1488},"void",{"type":556,"tag":603,"props":1490,"children":1491},{"style":837},[1492],{"type":561,"value":1071},{"type":556,"tag":603,"props":1494,"children":1496},{"class":605,"line":1495},28,[1497],{"type":556,"tag":603,"props":1498,"children":1499},{"style":823},[1500],{"type":561,"value":876},{"type":556,"tag":603,"props":1502,"children":1504},{"class":605,"line":1503},29,[1505,1509,1513,1517,1521,1526,1530,1534,1538,1542,1546,1551,1555],{"type":556,"tag":603,"props":1506,"children":1507},{"style":1084},[1508],{"type":561,"value":1087},{"type":556,"tag":603,"props":1510,"children":1511},{"style":837},[1512],{"type":561,"value":935},{"type":556,"tag":603,"props":1514,"children":1515},{"style":1084},[1516],{"type":561,"value":1096},{"type":556,"tag":603,"props":1518,"children":1519},{"style":837},[1520],{"type":561,"value":935},{"type":556,"tag":603,"props":1522,"children":1523},{"style":888},[1524],{"type":561,"value":1525},"put",{"type":556,"tag":603,"props":1527,"children":1528},{"style":837},[1529],{"type":561,"value":896},{"type":556,"tag":603,"props":1531,"children":1532},{"style":882},[1533],{"type":561,"value":901},{"type":556,"tag":603,"props":1535,"children":1536},{"style":837},[1537],{"type":561,"value":906},{"type":556,"tag":603,"props":1539,"children":1540},{"style":865},[1541],{"type":561,"value":1122},{"type":556,"tag":603,"props":1543,"children":1544},{"style":837},[1545],{"type":561,"value":1316},{"type":556,"tag":603,"props":1547,"children":1548},{"style":865},[1549],{"type":561,"value":1550}," value",{"type":556,"tag":603,"props":1552,"children":1553},{"style":837},[1554],{"type":561,"value":916},{"type":556,"tag":603,"props":1556,"children":1557},{"style":837},[1558],{"type":561,"value":921},{"type":556,"tag":603,"props":1560,"children":1562},{"class":605,"line":1561},30,[1563],{"type":556,"tag":603,"props":1564,"children":1565},{"style":823},[1566],{"type":561,"value":1567},"  // 已经存在的情况下，更新其位置到”最新“即可\n",{"type":556,"tag":603,"props":1569,"children":1571},{"class":605,"line":1570},31,[1572],{"type":556,"tag":603,"props":1573,"children":1574},{"style":823},[1575],{"type":561,"value":1576},"  // 先删除，后插入\n",{"type":556,"tag":603,"props":1578,"children":1580},{"class":605,"line":1579},32,[1581,1585,1589,1593,1597,1601,1605,1609,1613,1617,1621],{"type":556,"tag":603,"props":1582,"children":1583},{"style":843},[1584],{"type":561,"value":1138},{"type":556,"tag":603,"props":1586,"children":1587},{"style":837},[1588],{"type":561,"value":906},{"type":556,"tag":603,"props":1590,"children":1591},{"style":927},[1592],{"type":561,"value":1147},{"type":556,"tag":603,"props":1594,"children":1595},{"style":837},[1596],{"type":561,"value":935},{"type":556,"tag":603,"props":1598,"children":1599},{"style":865},[1600],{"type":561,"value":940},{"type":556,"tag":603,"props":1602,"children":1603},{"style":837},[1604],{"type":561,"value":935},{"type":556,"tag":603,"props":1606,"children":1607},{"style":888},[1608],{"type":561,"value":1164},{"type":556,"tag":603,"props":1610,"children":1611},{"style":837},[1612],{"type":561,"value":1169},{"type":556,"tag":603,"props":1614,"children":1615},{"style":865},[1616],{"type":561,"value":1122},{"type":556,"tag":603,"props":1618,"children":1619},{"style":837},[1620],{"type":561,"value":1178},{"type":556,"tag":603,"props":1622,"children":1623},{"style":837},[1624],{"type":561,"value":921},{"type":556,"tag":603,"props":1626,"children":1628},{"class":605,"line":1627},33,[1629,1633,1637,1641,1645,1649,1653,1657],{"type":556,"tag":603,"props":1630,"children":1631},{"style":927},[1632],{"type":561,"value":1249},{"type":556,"tag":603,"props":1634,"children":1635},{"style":837},[1636],{"type":561,"value":935},{"type":556,"tag":603,"props":1638,"children":1639},{"style":865},[1640],{"type":561,"value":940},{"type":556,"tag":603,"props":1642,"children":1643},{"style":837},[1644],{"type":561,"value":935},{"type":556,"tag":603,"props":1646,"children":1647},{"style":888},[1648],{"type":561,"value":1266},{"type":556,"tag":603,"props":1650,"children":1651},{"style":837},[1652],{"type":561,"value":1169},{"type":556,"tag":603,"props":1654,"children":1655},{"style":865},[1656],{"type":561,"value":1122},{"type":556,"tag":603,"props":1658,"children":1659},{"style":837},[1660],{"type":561,"value":1233},{"type":556,"tag":603,"props":1662,"children":1664},{"class":605,"line":1663},34,[1665,1670,1675],{"type":556,"tag":603,"props":1666,"children":1667},{"style":837},[1668],{"type":561,"value":1669},"  }",{"type":556,"tag":603,"props":1671,"children":1672},{"style":843},[1673],{"type":561,"value":1674}," else",{"type":556,"tag":603,"props":1676,"children":1677},{"style":837},[1678],{"type":561,"value":921},{"type":556,"tag":603,"props":1680,"children":1682},{"class":605,"line":1681},35,[1683],{"type":556,"tag":603,"props":1684,"children":1685},{"style":823},[1686],{"type":561,"value":1687},"    // 插入数据前先判断，size 是否符合 capacity\n",{"type":556,"tag":603,"props":1689,"children":1691},{"class":605,"line":1690},36,[1692],{"type":556,"tag":603,"props":1693,"children":1694},{"style":823},[1695],{"type":561,"value":1696},"    // 已经 >= capacity，需要把最开始插入的数据删除掉\n",{"type":556,"tag":603,"props":1698,"children":1700},{"class":605,"line":1699},37,[1701],{"type":556,"tag":603,"props":1702,"children":1703},{"style":823},[1704],{"type":561,"value":1705},"    // keys() 方法得到一个可遍历对象,执行 next( )拿到一个形如 { value: 'xxx', done: false } 的对象\n",{"type":556,"tag":603,"props":1707,"children":1709},{"class":605,"line":1708},38,[1710,1715,1719,1723,1727,1731,1735,1740,1745,1749,1753,1757,1761],{"type":556,"tag":603,"props":1711,"children":1712},{"style":843},[1713],{"type":561,"value":1714},"    if",{"type":556,"tag":603,"props":1716,"children":1717},{"style":837},[1718],{"type":561,"value":906},{"type":556,"tag":603,"props":1720,"children":1721},{"style":927},[1722],{"type":561,"value":1147},{"type":556,"tag":603,"props":1724,"children":1725},{"style":837},[1726],{"type":561,"value":935},{"type":556,"tag":603,"props":1728,"children":1729},{"style":865},[1730],{"type":561,"value":940},{"type":556,"tag":603,"props":1732,"children":1733},{"style":837},[1734],{"type":561,"value":935},{"type":556,"tag":603,"props":1736,"children":1737},{"style":865},[1738],{"type":561,"value":1739},"size",{"type":556,"tag":603,"props":1741,"children":1742},{"style":837},[1743],{"type":561,"value":1744}," >=",{"type":556,"tag":603,"props":1746,"children":1747},{"style":927},[1748],{"type":561,"value":1204},{"type":556,"tag":603,"props":1750,"children":1751},{"style":837},[1752],{"type":561,"value":935},{"type":556,"tag":603,"props":1754,"children":1755},{"style":865},[1756],{"type":561,"value":911},{"type":556,"tag":603,"props":1758,"children":1759},{"style":837},[1760],{"type":561,"value":916},{"type":556,"tag":603,"props":1762,"children":1763},{"style":837},[1764],{"type":561,"value":921},{"type":556,"tag":603,"props":1766,"children":1768},{"class":605,"line":1767},39,[1769,1774,1778,1782,1786,1790,1794,1798,1802,1806,1810,1815,1820,1825,1829,1834],{"type":556,"tag":603,"props":1770,"children":1771},{"style":927},[1772],{"type":561,"value":1773},"      this",{"type":556,"tag":603,"props":1775,"children":1776},{"style":837},[1777],{"type":561,"value":935},{"type":556,"tag":603,"props":1779,"children":1780},{"style":865},[1781],{"type":561,"value":940},{"type":556,"tag":603,"props":1783,"children":1784},{"style":837},[1785],{"type":561,"value":935},{"type":556,"tag":603,"props":1787,"children":1788},{"style":888},[1789],{"type":561,"value":1266},{"type":556,"tag":603,"props":1791,"children":1792},{"style":837},[1793],{"type":561,"value":1169},{"type":556,"tag":603,"props":1795,"children":1796},{"style":927},[1797],{"type":561,"value":1147},{"type":556,"tag":603,"props":1799,"children":1800},{"style":837},[1801],{"type":561,"value":935},{"type":556,"tag":603,"props":1803,"children":1804},{"style":865},[1805],{"type":561,"value":940},{"type":556,"tag":603,"props":1807,"children":1808},{"style":837},[1809],{"type":561,"value":935},{"type":556,"tag":603,"props":1811,"children":1812},{"style":888},[1813],{"type":561,"value":1814},"keys",{"type":556,"tag":603,"props":1816,"children":1817},{"style":837},[1818],{"type":561,"value":1819},"().",{"type":556,"tag":603,"props":1821,"children":1822},{"style":888},[1823],{"type":561,"value":1824},"next",{"type":556,"tag":603,"props":1826,"children":1827},{"style":837},[1828],{"type":561,"value":1819},{"type":556,"tag":603,"props":1830,"children":1831},{"style":865},[1832],{"type":561,"value":1833},"value",{"type":556,"tag":603,"props":1835,"children":1836},{"style":837},[1837],{"type":561,"value":1233},{"type":556,"tag":603,"props":1839,"children":1841},{"class":605,"line":1840},40,[1842],{"type":556,"tag":603,"props":1843,"children":1844},{"style":837},[1845],{"type":561,"value":1846},"    }\n",{"type":556,"tag":603,"props":1848,"children":1850},{"class":605,"line":1849},41,[1851],{"type":556,"tag":603,"props":1852,"children":1853},{"style":837},[1854],{"type":561,"value":1350},{"type":556,"tag":603,"props":1856,"children":1858},{"class":605,"line":1857},42,[1859,1863,1867,1871,1875,1879,1883,1887,1891,1895],{"type":556,"tag":603,"props":1860,"children":1861},{"style":927},[1862],{"type":561,"value":930},{"type":556,"tag":603,"props":1864,"children":1865},{"style":837},[1866],{"type":561,"value":935},{"type":556,"tag":603,"props":1868,"children":1869},{"style":865},[1870],{"type":561,"value":940},{"type":556,"tag":603,"props":1872,"children":1873},{"style":837},[1874],{"type":561,"value":935},{"type":556,"tag":603,"props":1876,"children":1877},{"style":888},[1878],{"type":561,"value":1303},{"type":556,"tag":603,"props":1880,"children":1881},{"style":837},[1882],{"type":561,"value":1169},{"type":556,"tag":603,"props":1884,"children":1885},{"style":865},[1886],{"type":561,"value":1122},{"type":556,"tag":603,"props":1888,"children":1889},{"style":837},[1890],{"type":561,"value":1316},{"type":556,"tag":603,"props":1892,"children":1893},{"style":865},[1894],{"type":561,"value":1550},{"type":556,"tag":603,"props":1896,"children":1897},{"style":837},[1898],{"type":561,"value":1233},{"type":556,"tag":603,"props":1900,"children":1902},{"class":605,"line":1901},43,[1903],{"type":556,"tag":603,"props":1904,"children":1905},{"style":837},[1906],{"type":561,"value":996},{"type":556,"tag":603,"props":1908,"children":1910},{"class":605,"line":1909},44,[1911],{"type":556,"tag":603,"props":1912,"children":1913},{"emptyLinePlaceholder":655},[1914],{"type":561,"value":658},{"type":556,"tag":603,"props":1916,"children":1918},{"class":605,"line":1917},45,[1919],{"type":556,"tag":603,"props":1920,"children":1921},{"style":823},[1922],{"type":561,"value":826},{"type":556,"tag":603,"props":1924,"children":1926},{"class":605,"line":1925},46,[1927],{"type":556,"tag":603,"props":1928,"children":1929},{"style":823},[1930],{"type":561,"value":1931}," * Your LRUCache object will be instantiated and called as such:\n",{"type":556,"tag":603,"props":1933,"children":1935},{"class":605,"line":1934},47,[1936],{"type":556,"tag":603,"props":1937,"children":1938},{"style":823},[1939],{"type":561,"value":1940}," * var obj = new LRUCache(capacity)\n",{"type":556,"tag":603,"props":1942,"children":1944},{"class":605,"line":1943},48,[1945],{"type":556,"tag":603,"props":1946,"children":1947},{"style":823},[1948],{"type":561,"value":1949}," * var param_1 = obj.get(key)\n",{"type":556,"tag":603,"props":1951,"children":1953},{"class":605,"line":1952},49,[1954],{"type":556,"tag":603,"props":1955,"children":1956},{"style":823},[1957],{"type":561,"value":1958}," * obj.put(key,value)\n",{"type":556,"tag":603,"props":1960,"children":1962},{"class":605,"line":1961},50,[1963],{"type":556,"tag":603,"props":1964,"children":1965},{"style":823},[1966],{"type":561,"value":876},{"type":556,"tag":1968,"props":1969,"children":1970},"style",{},[1971],{"type":561,"value":1972},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":642,"depth":642,"links":1974},[1975,1976],{"id":789,"depth":615,"text":789},{"id":799,"depth":615,"text":799,"children":1977},[1978],{"id":805,"depth":624,"text":808},"markdown","content:1.algorithm:3.leetcode:3.major:146.lru-cache.md","content","1.algorithm/3.leetcode/3.major/146.lru-cache.md","md",[1985,1987],{"_path":174,"title":173,"description":1986},"给你一个链表的头节点 head ，判断链表中是否有环。",{"_path":180,"title":179,"description":1988},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",1714279834625]