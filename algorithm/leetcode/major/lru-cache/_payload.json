[{"data":1,"prerenderedAt":1986},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/lru-cache":543,"/algorithm/leetcode/major/lru-cache-surround":1981},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":177,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":176,"description":547,"url":548,"body":549,"_type":1976,"_id":1977,"_source":1978,"_file":1979,"_extension":1980},"major",false,"","请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：","https://leetcode.cn/problems/lru-cache",{"type":550,"children":551,"toc":1970},"root",[552,559,579,584,589,755,760,783,789,794,799,806,1964],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":560,"props":561,"children":562},"ul",{},[563,569,574],{"type":553,"tag":564,"props":565,"children":566},"li",{},[567],{"type":558,"value":568},"LRUCache(int capacity) 以 正整数 作为容量 capacity 初始化 LRU 缓存",{"type":553,"tag":564,"props":570,"children":571},{},[572],{"type":558,"value":573},"int get(int key) 如果关键字 key 存在于缓存中，则返回关键字的值，否则返回 -1 。",{"type":553,"tag":564,"props":575,"children":576},{},[577],{"type":558,"value":578},"void put(int key, int value) 如果关键字 key 已经存在，则变更其数据值 value ；如果不存在，则向缓存中插入该组 key-value 。如果插入操作导致关键字数量超过 capacity ，则应该 逐出 最久未使用的关键字。",{"type":553,"tag":554,"props":580,"children":581},{},[582],{"type":558,"value":583},"函数 get 和 put 必须以 O(1) 的平均时间复杂度运行。",{"type":553,"tag":554,"props":585,"children":586},{},[587],{"type":558,"value":588},"示例：",{"type":553,"tag":590,"props":591,"children":594},"pre",{"className":592,"code":593,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n输出\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n解释\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // 缓存是 {1=1}\nlRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\nlRUCache.get(1); // 返回 1\nlRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\nlRUCache.get(2); // 返回 -1 (未找到)\nlRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\nlRUCache.get(1); // 返回 -1 (未找到)\nlRUCache.get(3); // 返回 3\nlRUCache.get(4); // 返回 4\n",[595],{"type":553,"tag":596,"props":597,"children":598},"code",{"__ignoreMap":546},[599,610,619,628,637,646,656,665,674,683,692,701,710,719,728,737,746],{"type":553,"tag":600,"props":601,"children":604},"span",{"class":602,"line":603},"line",1,[605],{"type":553,"tag":600,"props":606,"children":607},{},[608],{"type":558,"value":609},"输入\n",{"type":553,"tag":600,"props":611,"children":613},{"class":602,"line":612},2,[614],{"type":553,"tag":600,"props":615,"children":616},{},[617],{"type":558,"value":618},"[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n",{"type":553,"tag":600,"props":620,"children":622},{"class":602,"line":621},3,[623],{"type":553,"tag":600,"props":624,"children":625},{},[626],{"type":558,"value":627},"[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n",{"type":553,"tag":600,"props":629,"children":631},{"class":602,"line":630},4,[632],{"type":553,"tag":600,"props":633,"children":634},{},[635],{"type":558,"value":636},"输出\n",{"type":553,"tag":600,"props":638,"children":640},{"class":602,"line":639},5,[641],{"type":553,"tag":600,"props":642,"children":643},{},[644],{"type":558,"value":645},"[null, null, null, 1, null, -1, null, -1, 3, 4]\n",{"type":553,"tag":600,"props":647,"children":649},{"class":602,"line":648},6,[650],{"type":553,"tag":600,"props":651,"children":653},{"emptyLinePlaceholder":652},true,[654],{"type":558,"value":655},"\n",{"type":553,"tag":600,"props":657,"children":659},{"class":602,"line":658},7,[660],{"type":553,"tag":600,"props":661,"children":662},{},[663],{"type":558,"value":664},"解释\n",{"type":553,"tag":600,"props":666,"children":668},{"class":602,"line":667},8,[669],{"type":553,"tag":600,"props":670,"children":671},{},[672],{"type":558,"value":673},"LRUCache lRUCache = new LRUCache(2);\n",{"type":553,"tag":600,"props":675,"children":677},{"class":602,"line":676},9,[678],{"type":553,"tag":600,"props":679,"children":680},{},[681],{"type":558,"value":682},"lRUCache.put(1, 1); // 缓存是 {1=1}\n",{"type":553,"tag":600,"props":684,"children":686},{"class":602,"line":685},10,[687],{"type":553,"tag":600,"props":688,"children":689},{},[690],{"type":558,"value":691},"lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\n",{"type":553,"tag":600,"props":693,"children":695},{"class":602,"line":694},11,[696],{"type":553,"tag":600,"props":697,"children":698},{},[699],{"type":558,"value":700},"lRUCache.get(1); // 返回 1\n",{"type":553,"tag":600,"props":702,"children":704},{"class":602,"line":703},12,[705],{"type":553,"tag":600,"props":706,"children":707},{},[708],{"type":558,"value":709},"lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\n",{"type":553,"tag":600,"props":711,"children":713},{"class":602,"line":712},13,[714],{"type":553,"tag":600,"props":715,"children":716},{},[717],{"type":558,"value":718},"lRUCache.get(2); // 返回 -1 (未找到)\n",{"type":553,"tag":600,"props":720,"children":722},{"class":602,"line":721},14,[723],{"type":553,"tag":600,"props":724,"children":725},{},[726],{"type":558,"value":727},"lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\n",{"type":553,"tag":600,"props":729,"children":731},{"class":602,"line":730},15,[732],{"type":553,"tag":600,"props":733,"children":734},{},[735],{"type":558,"value":736},"lRUCache.get(1); // 返回 -1 (未找到)\n",{"type":553,"tag":600,"props":738,"children":740},{"class":602,"line":739},16,[741],{"type":553,"tag":600,"props":742,"children":743},{},[744],{"type":558,"value":745},"lRUCache.get(3); // 返回 3\n",{"type":553,"tag":600,"props":747,"children":749},{"class":602,"line":748},17,[750],{"type":553,"tag":600,"props":751,"children":752},{},[753],{"type":558,"value":754},"lRUCache.get(4); // 返回 4\n",{"type":553,"tag":554,"props":756,"children":757},{},[758],{"type":558,"value":759},"提示：",{"type":553,"tag":560,"props":761,"children":762},{},[763,768,773,778],{"type":553,"tag":564,"props":764,"children":765},{},[766],{"type":558,"value":767},"1 \u003C= capacity \u003C= 3000",{"type":553,"tag":564,"props":769,"children":770},{},[771],{"type":558,"value":772},"0 \u003C= key \u003C= 10000",{"type":553,"tag":564,"props":774,"children":775},{},[776],{"type":558,"value":777},"0 \u003C= value \u003C= 105",{"type":553,"tag":564,"props":779,"children":780},{},[781],{"type":558,"value":782},"最多调用 2 * 10^5 次 get 和 put",{"type":553,"tag":784,"props":785,"children":787},"h2",{"id":786},"解题思路",[788],{"type":558,"value":786},{"type":553,"tag":554,"props":790,"children":791},{},[792],{"type":558,"value":793},"题目要求的 1 和 2 相对简单，主要是条件 3，当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值",{"type":553,"tag":784,"props":795,"children":797},{"id":796},"实现",[798],{"type":558,"value":796},{"type":553,"tag":800,"props":801,"children":803},"h3",{"id":802},"map-方案",[804],{"type":558,"value":805},"Map 方案",{"type":553,"tag":590,"props":807,"children":811},{"className":808,"code":809,"language":810,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} capacity\n */\nvar LRUCache = function (capacity) {\n  this.cache = new Map();\n  this.capacity = capacity;\n};\n\n/**\n * @param {number} key\n * @return {number}\n */\nLRUCache.prototype.get = function (key) {\n  if (this.cache.has(key)) {\n    const val = this.cache.get(key);\n    // 更新位置\n    this.cache.delete(key);\n    this.cache.set(key, val);\n    return val;\n  }\n  return -1;\n};\n\n/**\n * @param {number} key\n * @param {number} value\n * @return {void}\n */\nLRUCache.prototype.put = function (key, value) {\n  // 已经存在的情况下，更新其位置到”最新“即可\n  // 先删除，后插入\n  if (this.cache.has(key)) {\n    this.cache.delete(key);\n  } else {\n    // 插入数据前先判断，size 是否符合 capacity\n    // 已经 >= capacity，需要把最开始插入的数据删除掉\n    // keys() 方法得到一个可遍历对象,执行 next( )拿到一个形如 { value: 'xxx', done: false } 的对象\n    if (this.cache.size >= this.capacity) {\n      this.cache.delete(this.cache.keys().next().value);\n    }\n  }\n  this.cache.set(key, value);\n};\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * var obj = new LRUCache(capacity)\n * var param_1 = obj.get(key)\n * obj.put(key,value)\n */\n","js",[812],{"type":553,"tag":596,"props":813,"children":814},{"__ignoreMap":546},[815,824,866,874,919,957,986,994,1001,1008,1040,1069,1076,1128,1180,1231,1239,1276,1322,1339,1348,1372,1380,1388,1396,1428,1461,1490,1498,1556,1565,1574,1622,1658,1676,1685,1694,1703,1762,1835,1844,1852,1896,1904,1912,1920,1929,1938,1947,1956],{"type":553,"tag":600,"props":816,"children":817},{"class":602,"line":603},[818],{"type":553,"tag":600,"props":819,"children":821},{"style":820},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[822],{"type":558,"value":823},"/**\n",{"type":553,"tag":600,"props":825,"children":826},{"class":602,"line":612},[827,832,838,844,849,855,860],{"type":553,"tag":600,"props":828,"children":829},{"style":820},[830],{"type":558,"value":831}," * ",{"type":553,"tag":600,"props":833,"children":835},{"style":834},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[836],{"type":558,"value":837},"@",{"type":553,"tag":600,"props":839,"children":841},{"style":840},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[842],{"type":558,"value":843},"param",{"type":553,"tag":600,"props":845,"children":846},{"style":834},[847],{"type":558,"value":848}," {",{"type":553,"tag":600,"props":850,"children":852},{"style":851},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[853],{"type":558,"value":854},"number",{"type":553,"tag":600,"props":856,"children":857},{"style":834},[858],{"type":558,"value":859},"}",{"type":553,"tag":600,"props":861,"children":863},{"style":862},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[864],{"type":558,"value":865}," capacity\n",{"type":553,"tag":600,"props":867,"children":868},{"class":602,"line":621},[869],{"type":553,"tag":600,"props":870,"children":871},{"style":820},[872],{"type":558,"value":873}," */\n",{"type":553,"tag":600,"props":875,"children":876},{"class":602,"line":630},[877,883,889,894,899,904,909,914],{"type":553,"tag":600,"props":878,"children":880},{"style":879},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[881],{"type":558,"value":882},"var",{"type":553,"tag":600,"props":884,"children":886},{"style":885},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[887],{"type":558,"value":888}," LRUCache",{"type":553,"tag":600,"props":890,"children":891},{"style":834},[892],{"type":558,"value":893}," =",{"type":553,"tag":600,"props":895,"children":896},{"style":879},[897],{"type":558,"value":898}," function",{"type":553,"tag":600,"props":900,"children":901},{"style":834},[902],{"type":558,"value":903}," (",{"type":553,"tag":600,"props":905,"children":906},{"style":862},[907],{"type":558,"value":908},"capacity",{"type":553,"tag":600,"props":910,"children":911},{"style":834},[912],{"type":558,"value":913},")",{"type":553,"tag":600,"props":915,"children":916},{"style":834},[917],{"type":558,"value":918}," {\n",{"type":553,"tag":600,"props":920,"children":921},{"class":602,"line":639},[922,928,933,938,942,947,952],{"type":553,"tag":600,"props":923,"children":925},{"style":924},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[926],{"type":558,"value":927},"  this",{"type":553,"tag":600,"props":929,"children":930},{"style":834},[931],{"type":558,"value":932},".",{"type":553,"tag":600,"props":934,"children":935},{"style":862},[936],{"type":558,"value":937},"cache",{"type":553,"tag":600,"props":939,"children":940},{"style":834},[941],{"type":558,"value":893},{"type":553,"tag":600,"props":943,"children":944},{"style":879},[945],{"type":558,"value":946}," new",{"type":553,"tag":600,"props":948,"children":949},{"style":885},[950],{"type":558,"value":951}," Map",{"type":553,"tag":600,"props":953,"children":954},{"style":834},[955],{"type":558,"value":956},"();\n",{"type":553,"tag":600,"props":958,"children":959},{"class":602,"line":648},[960,964,968,972,976,981],{"type":553,"tag":600,"props":961,"children":962},{"style":924},[963],{"type":558,"value":927},{"type":553,"tag":600,"props":965,"children":966},{"style":834},[967],{"type":558,"value":932},{"type":553,"tag":600,"props":969,"children":970},{"style":862},[971],{"type":558,"value":908},{"type":553,"tag":600,"props":973,"children":974},{"style":834},[975],{"type":558,"value":893},{"type":553,"tag":600,"props":977,"children":978},{"style":862},[979],{"type":558,"value":980}," capacity",{"type":553,"tag":600,"props":982,"children":983},{"style":834},[984],{"type":558,"value":985},";\n",{"type":553,"tag":600,"props":987,"children":988},{"class":602,"line":658},[989],{"type":553,"tag":600,"props":990,"children":991},{"style":834},[992],{"type":558,"value":993},"};\n",{"type":553,"tag":600,"props":995,"children":996},{"class":602,"line":667},[997],{"type":553,"tag":600,"props":998,"children":999},{"emptyLinePlaceholder":652},[1000],{"type":558,"value":655},{"type":553,"tag":600,"props":1002,"children":1003},{"class":602,"line":676},[1004],{"type":553,"tag":600,"props":1005,"children":1006},{"style":820},[1007],{"type":558,"value":823},{"type":553,"tag":600,"props":1009,"children":1010},{"class":602,"line":685},[1011,1015,1019,1023,1027,1031,1035],{"type":553,"tag":600,"props":1012,"children":1013},{"style":820},[1014],{"type":558,"value":831},{"type":553,"tag":600,"props":1016,"children":1017},{"style":834},[1018],{"type":558,"value":837},{"type":553,"tag":600,"props":1020,"children":1021},{"style":840},[1022],{"type":558,"value":843},{"type":553,"tag":600,"props":1024,"children":1025},{"style":834},[1026],{"type":558,"value":848},{"type":553,"tag":600,"props":1028,"children":1029},{"style":851},[1030],{"type":558,"value":854},{"type":553,"tag":600,"props":1032,"children":1033},{"style":834},[1034],{"type":558,"value":859},{"type":553,"tag":600,"props":1036,"children":1037},{"style":862},[1038],{"type":558,"value":1039}," key\n",{"type":553,"tag":600,"props":1041,"children":1042},{"class":602,"line":694},[1043,1047,1051,1056,1060,1064],{"type":553,"tag":600,"props":1044,"children":1045},{"style":820},[1046],{"type":558,"value":831},{"type":553,"tag":600,"props":1048,"children":1049},{"style":834},[1050],{"type":558,"value":837},{"type":553,"tag":600,"props":1052,"children":1053},{"style":840},[1054],{"type":558,"value":1055},"return",{"type":553,"tag":600,"props":1057,"children":1058},{"style":834},[1059],{"type":558,"value":848},{"type":553,"tag":600,"props":1061,"children":1062},{"style":851},[1063],{"type":558,"value":854},{"type":553,"tag":600,"props":1065,"children":1066},{"style":834},[1067],{"type":558,"value":1068},"}\n",{"type":553,"tag":600,"props":1070,"children":1071},{"class":602,"line":703},[1072],{"type":553,"tag":600,"props":1073,"children":1074},{"style":820},[1075],{"type":558,"value":873},{"type":553,"tag":600,"props":1077,"children":1078},{"class":602,"line":712},[1079,1085,1089,1094,1098,1103,1107,1111,1115,1120,1124],{"type":553,"tag":600,"props":1080,"children":1082},{"style":1081},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1083],{"type":558,"value":1084},"LRUCache",{"type":553,"tag":600,"props":1086,"children":1087},{"style":834},[1088],{"type":558,"value":932},{"type":553,"tag":600,"props":1090,"children":1091},{"style":1081},[1092],{"type":558,"value":1093},"prototype",{"type":553,"tag":600,"props":1095,"children":1096},{"style":834},[1097],{"type":558,"value":932},{"type":553,"tag":600,"props":1099,"children":1100},{"style":885},[1101],{"type":558,"value":1102},"get",{"type":553,"tag":600,"props":1104,"children":1105},{"style":834},[1106],{"type":558,"value":893},{"type":553,"tag":600,"props":1108,"children":1109},{"style":879},[1110],{"type":558,"value":898},{"type":553,"tag":600,"props":1112,"children":1113},{"style":834},[1114],{"type":558,"value":903},{"type":553,"tag":600,"props":1116,"children":1117},{"style":862},[1118],{"type":558,"value":1119},"key",{"type":553,"tag":600,"props":1121,"children":1122},{"style":834},[1123],{"type":558,"value":913},{"type":553,"tag":600,"props":1125,"children":1126},{"style":834},[1127],{"type":558,"value":918},{"type":553,"tag":600,"props":1129,"children":1130},{"class":602,"line":721},[1131,1136,1140,1145,1149,1153,1157,1162,1167,1171,1176],{"type":553,"tag":600,"props":1132,"children":1133},{"style":840},[1134],{"type":558,"value":1135},"  if",{"type":553,"tag":600,"props":1137,"children":1138},{"style":834},[1139],{"type":558,"value":903},{"type":553,"tag":600,"props":1141,"children":1142},{"style":924},[1143],{"type":558,"value":1144},"this",{"type":553,"tag":600,"props":1146,"children":1147},{"style":834},[1148],{"type":558,"value":932},{"type":553,"tag":600,"props":1150,"children":1151},{"style":862},[1152],{"type":558,"value":937},{"type":553,"tag":600,"props":1154,"children":1155},{"style":834},[1156],{"type":558,"value":932},{"type":553,"tag":600,"props":1158,"children":1159},{"style":885},[1160],{"type":558,"value":1161},"has",{"type":553,"tag":600,"props":1163,"children":1164},{"style":834},[1165],{"type":558,"value":1166},"(",{"type":553,"tag":600,"props":1168,"children":1169},{"style":862},[1170],{"type":558,"value":1119},{"type":553,"tag":600,"props":1172,"children":1173},{"style":834},[1174],{"type":558,"value":1175},"))",{"type":553,"tag":600,"props":1177,"children":1178},{"style":834},[1179],{"type":558,"value":918},{"type":553,"tag":600,"props":1181,"children":1182},{"class":602,"line":730},[1183,1188,1193,1197,1202,1206,1210,1214,1218,1222,1226],{"type":553,"tag":600,"props":1184,"children":1185},{"style":879},[1186],{"type":558,"value":1187},"    const",{"type":553,"tag":600,"props":1189,"children":1190},{"style":862},[1191],{"type":558,"value":1192}," val",{"type":553,"tag":600,"props":1194,"children":1195},{"style":834},[1196],{"type":558,"value":893},{"type":553,"tag":600,"props":1198,"children":1199},{"style":924},[1200],{"type":558,"value":1201}," this",{"type":553,"tag":600,"props":1203,"children":1204},{"style":834},[1205],{"type":558,"value":932},{"type":553,"tag":600,"props":1207,"children":1208},{"style":862},[1209],{"type":558,"value":937},{"type":553,"tag":600,"props":1211,"children":1212},{"style":834},[1213],{"type":558,"value":932},{"type":553,"tag":600,"props":1215,"children":1216},{"style":885},[1217],{"type":558,"value":1102},{"type":553,"tag":600,"props":1219,"children":1220},{"style":834},[1221],{"type":558,"value":1166},{"type":553,"tag":600,"props":1223,"children":1224},{"style":862},[1225],{"type":558,"value":1119},{"type":553,"tag":600,"props":1227,"children":1228},{"style":834},[1229],{"type":558,"value":1230},");\n",{"type":553,"tag":600,"props":1232,"children":1233},{"class":602,"line":739},[1234],{"type":553,"tag":600,"props":1235,"children":1236},{"style":820},[1237],{"type":558,"value":1238},"    // 更新位置\n",{"type":553,"tag":600,"props":1240,"children":1241},{"class":602,"line":748},[1242,1247,1251,1255,1259,1264,1268,1272],{"type":553,"tag":600,"props":1243,"children":1244},{"style":924},[1245],{"type":558,"value":1246},"    this",{"type":553,"tag":600,"props":1248,"children":1249},{"style":834},[1250],{"type":558,"value":932},{"type":553,"tag":600,"props":1252,"children":1253},{"style":862},[1254],{"type":558,"value":937},{"type":553,"tag":600,"props":1256,"children":1257},{"style":834},[1258],{"type":558,"value":932},{"type":553,"tag":600,"props":1260,"children":1261},{"style":885},[1262],{"type":558,"value":1263},"delete",{"type":553,"tag":600,"props":1265,"children":1266},{"style":834},[1267],{"type":558,"value":1166},{"type":553,"tag":600,"props":1269,"children":1270},{"style":862},[1271],{"type":558,"value":1119},{"type":553,"tag":600,"props":1273,"children":1274},{"style":834},[1275],{"type":558,"value":1230},{"type":553,"tag":600,"props":1277,"children":1279},{"class":602,"line":1278},18,[1280,1284,1288,1292,1296,1301,1305,1309,1314,1318],{"type":553,"tag":600,"props":1281,"children":1282},{"style":924},[1283],{"type":558,"value":1246},{"type":553,"tag":600,"props":1285,"children":1286},{"style":834},[1287],{"type":558,"value":932},{"type":553,"tag":600,"props":1289,"children":1290},{"style":862},[1291],{"type":558,"value":937},{"type":553,"tag":600,"props":1293,"children":1294},{"style":834},[1295],{"type":558,"value":932},{"type":553,"tag":600,"props":1297,"children":1298},{"style":885},[1299],{"type":558,"value":1300},"set",{"type":553,"tag":600,"props":1302,"children":1303},{"style":834},[1304],{"type":558,"value":1166},{"type":553,"tag":600,"props":1306,"children":1307},{"style":862},[1308],{"type":558,"value":1119},{"type":553,"tag":600,"props":1310,"children":1311},{"style":834},[1312],{"type":558,"value":1313},",",{"type":553,"tag":600,"props":1315,"children":1316},{"style":862},[1317],{"type":558,"value":1192},{"type":553,"tag":600,"props":1319,"children":1320},{"style":834},[1321],{"type":558,"value":1230},{"type":553,"tag":600,"props":1323,"children":1325},{"class":602,"line":1324},19,[1326,1331,1335],{"type":553,"tag":600,"props":1327,"children":1328},{"style":840},[1329],{"type":558,"value":1330},"    return",{"type":553,"tag":600,"props":1332,"children":1333},{"style":862},[1334],{"type":558,"value":1192},{"type":553,"tag":600,"props":1336,"children":1337},{"style":834},[1338],{"type":558,"value":985},{"type":553,"tag":600,"props":1340,"children":1342},{"class":602,"line":1341},20,[1343],{"type":553,"tag":600,"props":1344,"children":1345},{"style":834},[1346],{"type":558,"value":1347},"  }\n",{"type":553,"tag":600,"props":1349,"children":1351},{"class":602,"line":1350},21,[1352,1357,1362,1368],{"type":553,"tag":600,"props":1353,"children":1354},{"style":840},[1355],{"type":558,"value":1356},"  return",{"type":553,"tag":600,"props":1358,"children":1359},{"style":879},[1360],{"type":558,"value":1361}," -",{"type":553,"tag":600,"props":1363,"children":1365},{"style":1364},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1366],{"type":558,"value":1367},"1",{"type":553,"tag":600,"props":1369,"children":1370},{"style":834},[1371],{"type":558,"value":985},{"type":553,"tag":600,"props":1373,"children":1375},{"class":602,"line":1374},22,[1376],{"type":553,"tag":600,"props":1377,"children":1378},{"style":834},[1379],{"type":558,"value":993},{"type":553,"tag":600,"props":1381,"children":1383},{"class":602,"line":1382},23,[1384],{"type":553,"tag":600,"props":1385,"children":1386},{"emptyLinePlaceholder":652},[1387],{"type":558,"value":655},{"type":553,"tag":600,"props":1389,"children":1391},{"class":602,"line":1390},24,[1392],{"type":553,"tag":600,"props":1393,"children":1394},{"style":820},[1395],{"type":558,"value":823},{"type":553,"tag":600,"props":1397,"children":1399},{"class":602,"line":1398},25,[1400,1404,1408,1412,1416,1420,1424],{"type":553,"tag":600,"props":1401,"children":1402},{"style":820},[1403],{"type":558,"value":831},{"type":553,"tag":600,"props":1405,"children":1406},{"style":834},[1407],{"type":558,"value":837},{"type":553,"tag":600,"props":1409,"children":1410},{"style":840},[1411],{"type":558,"value":843},{"type":553,"tag":600,"props":1413,"children":1414},{"style":834},[1415],{"type":558,"value":848},{"type":553,"tag":600,"props":1417,"children":1418},{"style":851},[1419],{"type":558,"value":854},{"type":553,"tag":600,"props":1421,"children":1422},{"style":834},[1423],{"type":558,"value":859},{"type":553,"tag":600,"props":1425,"children":1426},{"style":862},[1427],{"type":558,"value":1039},{"type":553,"tag":600,"props":1429,"children":1431},{"class":602,"line":1430},26,[1432,1436,1440,1444,1448,1452,1456],{"type":553,"tag":600,"props":1433,"children":1434},{"style":820},[1435],{"type":558,"value":831},{"type":553,"tag":600,"props":1437,"children":1438},{"style":834},[1439],{"type":558,"value":837},{"type":553,"tag":600,"props":1441,"children":1442},{"style":840},[1443],{"type":558,"value":843},{"type":553,"tag":600,"props":1445,"children":1446},{"style":834},[1447],{"type":558,"value":848},{"type":553,"tag":600,"props":1449,"children":1450},{"style":851},[1451],{"type":558,"value":854},{"type":553,"tag":600,"props":1453,"children":1454},{"style":834},[1455],{"type":558,"value":859},{"type":553,"tag":600,"props":1457,"children":1458},{"style":862},[1459],{"type":558,"value":1460}," value\n",{"type":553,"tag":600,"props":1462,"children":1464},{"class":602,"line":1463},27,[1465,1469,1473,1477,1481,1486],{"type":553,"tag":600,"props":1466,"children":1467},{"style":820},[1468],{"type":558,"value":831},{"type":553,"tag":600,"props":1470,"children":1471},{"style":834},[1472],{"type":558,"value":837},{"type":553,"tag":600,"props":1474,"children":1475},{"style":840},[1476],{"type":558,"value":1055},{"type":553,"tag":600,"props":1478,"children":1479},{"style":834},[1480],{"type":558,"value":848},{"type":553,"tag":600,"props":1482,"children":1483},{"style":851},[1484],{"type":558,"value":1485},"void",{"type":553,"tag":600,"props":1487,"children":1488},{"style":834},[1489],{"type":558,"value":1068},{"type":553,"tag":600,"props":1491,"children":1493},{"class":602,"line":1492},28,[1494],{"type":553,"tag":600,"props":1495,"children":1496},{"style":820},[1497],{"type":558,"value":873},{"type":553,"tag":600,"props":1499,"children":1501},{"class":602,"line":1500},29,[1502,1506,1510,1514,1518,1523,1527,1531,1535,1539,1543,1548,1552],{"type":553,"tag":600,"props":1503,"children":1504},{"style":1081},[1505],{"type":558,"value":1084},{"type":553,"tag":600,"props":1507,"children":1508},{"style":834},[1509],{"type":558,"value":932},{"type":553,"tag":600,"props":1511,"children":1512},{"style":1081},[1513],{"type":558,"value":1093},{"type":553,"tag":600,"props":1515,"children":1516},{"style":834},[1517],{"type":558,"value":932},{"type":553,"tag":600,"props":1519,"children":1520},{"style":885},[1521],{"type":558,"value":1522},"put",{"type":553,"tag":600,"props":1524,"children":1525},{"style":834},[1526],{"type":558,"value":893},{"type":553,"tag":600,"props":1528,"children":1529},{"style":879},[1530],{"type":558,"value":898},{"type":553,"tag":600,"props":1532,"children":1533},{"style":834},[1534],{"type":558,"value":903},{"type":553,"tag":600,"props":1536,"children":1537},{"style":862},[1538],{"type":558,"value":1119},{"type":553,"tag":600,"props":1540,"children":1541},{"style":834},[1542],{"type":558,"value":1313},{"type":553,"tag":600,"props":1544,"children":1545},{"style":862},[1546],{"type":558,"value":1547}," value",{"type":553,"tag":600,"props":1549,"children":1550},{"style":834},[1551],{"type":558,"value":913},{"type":553,"tag":600,"props":1553,"children":1554},{"style":834},[1555],{"type":558,"value":918},{"type":553,"tag":600,"props":1557,"children":1559},{"class":602,"line":1558},30,[1560],{"type":553,"tag":600,"props":1561,"children":1562},{"style":820},[1563],{"type":558,"value":1564},"  // 已经存在的情况下，更新其位置到”最新“即可\n",{"type":553,"tag":600,"props":1566,"children":1568},{"class":602,"line":1567},31,[1569],{"type":553,"tag":600,"props":1570,"children":1571},{"style":820},[1572],{"type":558,"value":1573},"  // 先删除，后插入\n",{"type":553,"tag":600,"props":1575,"children":1577},{"class":602,"line":1576},32,[1578,1582,1586,1590,1594,1598,1602,1606,1610,1614,1618],{"type":553,"tag":600,"props":1579,"children":1580},{"style":840},[1581],{"type":558,"value":1135},{"type":553,"tag":600,"props":1583,"children":1584},{"style":834},[1585],{"type":558,"value":903},{"type":553,"tag":600,"props":1587,"children":1588},{"style":924},[1589],{"type":558,"value":1144},{"type":553,"tag":600,"props":1591,"children":1592},{"style":834},[1593],{"type":558,"value":932},{"type":553,"tag":600,"props":1595,"children":1596},{"style":862},[1597],{"type":558,"value":937},{"type":553,"tag":600,"props":1599,"children":1600},{"style":834},[1601],{"type":558,"value":932},{"type":553,"tag":600,"props":1603,"children":1604},{"style":885},[1605],{"type":558,"value":1161},{"type":553,"tag":600,"props":1607,"children":1608},{"style":834},[1609],{"type":558,"value":1166},{"type":553,"tag":600,"props":1611,"children":1612},{"style":862},[1613],{"type":558,"value":1119},{"type":553,"tag":600,"props":1615,"children":1616},{"style":834},[1617],{"type":558,"value":1175},{"type":553,"tag":600,"props":1619,"children":1620},{"style":834},[1621],{"type":558,"value":918},{"type":553,"tag":600,"props":1623,"children":1625},{"class":602,"line":1624},33,[1626,1630,1634,1638,1642,1646,1650,1654],{"type":553,"tag":600,"props":1627,"children":1628},{"style":924},[1629],{"type":558,"value":1246},{"type":553,"tag":600,"props":1631,"children":1632},{"style":834},[1633],{"type":558,"value":932},{"type":553,"tag":600,"props":1635,"children":1636},{"style":862},[1637],{"type":558,"value":937},{"type":553,"tag":600,"props":1639,"children":1640},{"style":834},[1641],{"type":558,"value":932},{"type":553,"tag":600,"props":1643,"children":1644},{"style":885},[1645],{"type":558,"value":1263},{"type":553,"tag":600,"props":1647,"children":1648},{"style":834},[1649],{"type":558,"value":1166},{"type":553,"tag":600,"props":1651,"children":1652},{"style":862},[1653],{"type":558,"value":1119},{"type":553,"tag":600,"props":1655,"children":1656},{"style":834},[1657],{"type":558,"value":1230},{"type":553,"tag":600,"props":1659,"children":1661},{"class":602,"line":1660},34,[1662,1667,1672],{"type":553,"tag":600,"props":1663,"children":1664},{"style":834},[1665],{"type":558,"value":1666},"  }",{"type":553,"tag":600,"props":1668,"children":1669},{"style":840},[1670],{"type":558,"value":1671}," else",{"type":553,"tag":600,"props":1673,"children":1674},{"style":834},[1675],{"type":558,"value":918},{"type":553,"tag":600,"props":1677,"children":1679},{"class":602,"line":1678},35,[1680],{"type":553,"tag":600,"props":1681,"children":1682},{"style":820},[1683],{"type":558,"value":1684},"    // 插入数据前先判断，size 是否符合 capacity\n",{"type":553,"tag":600,"props":1686,"children":1688},{"class":602,"line":1687},36,[1689],{"type":553,"tag":600,"props":1690,"children":1691},{"style":820},[1692],{"type":558,"value":1693},"    // 已经 >= capacity，需要把最开始插入的数据删除掉\n",{"type":553,"tag":600,"props":1695,"children":1697},{"class":602,"line":1696},37,[1698],{"type":553,"tag":600,"props":1699,"children":1700},{"style":820},[1701],{"type":558,"value":1702},"    // keys() 方法得到一个可遍历对象,执行 next( )拿到一个形如 { value: 'xxx', done: false } 的对象\n",{"type":553,"tag":600,"props":1704,"children":1706},{"class":602,"line":1705},38,[1707,1712,1716,1720,1724,1728,1732,1737,1742,1746,1750,1754,1758],{"type":553,"tag":600,"props":1708,"children":1709},{"style":840},[1710],{"type":558,"value":1711},"    if",{"type":553,"tag":600,"props":1713,"children":1714},{"style":834},[1715],{"type":558,"value":903},{"type":553,"tag":600,"props":1717,"children":1718},{"style":924},[1719],{"type":558,"value":1144},{"type":553,"tag":600,"props":1721,"children":1722},{"style":834},[1723],{"type":558,"value":932},{"type":553,"tag":600,"props":1725,"children":1726},{"style":862},[1727],{"type":558,"value":937},{"type":553,"tag":600,"props":1729,"children":1730},{"style":834},[1731],{"type":558,"value":932},{"type":553,"tag":600,"props":1733,"children":1734},{"style":862},[1735],{"type":558,"value":1736},"size",{"type":553,"tag":600,"props":1738,"children":1739},{"style":834},[1740],{"type":558,"value":1741}," >=",{"type":553,"tag":600,"props":1743,"children":1744},{"style":924},[1745],{"type":558,"value":1201},{"type":553,"tag":600,"props":1747,"children":1748},{"style":834},[1749],{"type":558,"value":932},{"type":553,"tag":600,"props":1751,"children":1752},{"style":862},[1753],{"type":558,"value":908},{"type":553,"tag":600,"props":1755,"children":1756},{"style":834},[1757],{"type":558,"value":913},{"type":553,"tag":600,"props":1759,"children":1760},{"style":834},[1761],{"type":558,"value":918},{"type":553,"tag":600,"props":1763,"children":1765},{"class":602,"line":1764},39,[1766,1771,1775,1779,1783,1787,1791,1795,1799,1803,1807,1812,1817,1822,1826,1831],{"type":553,"tag":600,"props":1767,"children":1768},{"style":924},[1769],{"type":558,"value":1770},"      this",{"type":553,"tag":600,"props":1772,"children":1773},{"style":834},[1774],{"type":558,"value":932},{"type":553,"tag":600,"props":1776,"children":1777},{"style":862},[1778],{"type":558,"value":937},{"type":553,"tag":600,"props":1780,"children":1781},{"style":834},[1782],{"type":558,"value":932},{"type":553,"tag":600,"props":1784,"children":1785},{"style":885},[1786],{"type":558,"value":1263},{"type":553,"tag":600,"props":1788,"children":1789},{"style":834},[1790],{"type":558,"value":1166},{"type":553,"tag":600,"props":1792,"children":1793},{"style":924},[1794],{"type":558,"value":1144},{"type":553,"tag":600,"props":1796,"children":1797},{"style":834},[1798],{"type":558,"value":932},{"type":553,"tag":600,"props":1800,"children":1801},{"style":862},[1802],{"type":558,"value":937},{"type":553,"tag":600,"props":1804,"children":1805},{"style":834},[1806],{"type":558,"value":932},{"type":553,"tag":600,"props":1808,"children":1809},{"style":885},[1810],{"type":558,"value":1811},"keys",{"type":553,"tag":600,"props":1813,"children":1814},{"style":834},[1815],{"type":558,"value":1816},"().",{"type":553,"tag":600,"props":1818,"children":1819},{"style":885},[1820],{"type":558,"value":1821},"next",{"type":553,"tag":600,"props":1823,"children":1824},{"style":834},[1825],{"type":558,"value":1816},{"type":553,"tag":600,"props":1827,"children":1828},{"style":862},[1829],{"type":558,"value":1830},"value",{"type":553,"tag":600,"props":1832,"children":1833},{"style":834},[1834],{"type":558,"value":1230},{"type":553,"tag":600,"props":1836,"children":1838},{"class":602,"line":1837},40,[1839],{"type":553,"tag":600,"props":1840,"children":1841},{"style":834},[1842],{"type":558,"value":1843},"    }\n",{"type":553,"tag":600,"props":1845,"children":1847},{"class":602,"line":1846},41,[1848],{"type":553,"tag":600,"props":1849,"children":1850},{"style":834},[1851],{"type":558,"value":1347},{"type":553,"tag":600,"props":1853,"children":1855},{"class":602,"line":1854},42,[1856,1860,1864,1868,1872,1876,1880,1884,1888,1892],{"type":553,"tag":600,"props":1857,"children":1858},{"style":924},[1859],{"type":558,"value":927},{"type":553,"tag":600,"props":1861,"children":1862},{"style":834},[1863],{"type":558,"value":932},{"type":553,"tag":600,"props":1865,"children":1866},{"style":862},[1867],{"type":558,"value":937},{"type":553,"tag":600,"props":1869,"children":1870},{"style":834},[1871],{"type":558,"value":932},{"type":553,"tag":600,"props":1873,"children":1874},{"style":885},[1875],{"type":558,"value":1300},{"type":553,"tag":600,"props":1877,"children":1878},{"style":834},[1879],{"type":558,"value":1166},{"type":553,"tag":600,"props":1881,"children":1882},{"style":862},[1883],{"type":558,"value":1119},{"type":553,"tag":600,"props":1885,"children":1886},{"style":834},[1887],{"type":558,"value":1313},{"type":553,"tag":600,"props":1889,"children":1890},{"style":862},[1891],{"type":558,"value":1547},{"type":553,"tag":600,"props":1893,"children":1894},{"style":834},[1895],{"type":558,"value":1230},{"type":553,"tag":600,"props":1897,"children":1899},{"class":602,"line":1898},43,[1900],{"type":553,"tag":600,"props":1901,"children":1902},{"style":834},[1903],{"type":558,"value":993},{"type":553,"tag":600,"props":1905,"children":1907},{"class":602,"line":1906},44,[1908],{"type":553,"tag":600,"props":1909,"children":1910},{"emptyLinePlaceholder":652},[1911],{"type":558,"value":655},{"type":553,"tag":600,"props":1913,"children":1915},{"class":602,"line":1914},45,[1916],{"type":553,"tag":600,"props":1917,"children":1918},{"style":820},[1919],{"type":558,"value":823},{"type":553,"tag":600,"props":1921,"children":1923},{"class":602,"line":1922},46,[1924],{"type":553,"tag":600,"props":1925,"children":1926},{"style":820},[1927],{"type":558,"value":1928}," * Your LRUCache object will be instantiated and called as such:\n",{"type":553,"tag":600,"props":1930,"children":1932},{"class":602,"line":1931},47,[1933],{"type":553,"tag":600,"props":1934,"children":1935},{"style":820},[1936],{"type":558,"value":1937}," * var obj = new LRUCache(capacity)\n",{"type":553,"tag":600,"props":1939,"children":1941},{"class":602,"line":1940},48,[1942],{"type":553,"tag":600,"props":1943,"children":1944},{"style":820},[1945],{"type":558,"value":1946}," * var param_1 = obj.get(key)\n",{"type":553,"tag":600,"props":1948,"children":1950},{"class":602,"line":1949},49,[1951],{"type":553,"tag":600,"props":1952,"children":1953},{"style":820},[1954],{"type":558,"value":1955}," * obj.put(key,value)\n",{"type":553,"tag":600,"props":1957,"children":1959},{"class":602,"line":1958},50,[1960],{"type":553,"tag":600,"props":1961,"children":1962},{"style":820},[1963],{"type":558,"value":873},{"type":553,"tag":1965,"props":1966,"children":1967},"style",{},[1968],{"type":558,"value":1969},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":639,"depth":639,"links":1971},[1972,1973],{"id":786,"depth":612,"text":786},{"id":796,"depth":612,"text":796,"children":1974},[1975],{"id":802,"depth":621,"text":805},"markdown","content:1.algorithm:3.leetcode:3.major:146.lru-cache.md","content","1.algorithm/3.leetcode/3.major/146.lru-cache.md","md",[1982,1984],{"_path":174,"title":173,"description":1983},"给你一个链表的头节点 head ，判断链表中是否有环。",{"_path":180,"title":179,"description":1985},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",1714099679028]