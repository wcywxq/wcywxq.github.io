[{"data":1,"prerenderedAt":1976},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/lru-cache":546,"/algorithm/leetcode/major/lru-cache-surround":1971},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":177,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":176,"description":550,"url":551,"body":552,"_type":1966,"_id":1967,"_source":1968,"_file":1969,"_extension":1970},"major",false,"","请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：","https://leetcode.cn/problems/lru-cache",{"type":553,"children":554,"toc":1960},"root",[555,562,582,587,592,758,763,786,792,797,802,809,1954],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":563,"props":564,"children":565},"ul",{},[566,572,577],{"type":556,"tag":567,"props":568,"children":569},"li",{},[570],{"type":561,"value":571},"LRUCache(int capacity) 以 正整数 作为容量 capacity 初始化 LRU 缓存",{"type":556,"tag":567,"props":573,"children":574},{},[575],{"type":561,"value":576},"int get(int key) 如果关键字 key 存在于缓存中，则返回关键字的值，否则返回 -1 。",{"type":556,"tag":567,"props":578,"children":579},{},[580],{"type":561,"value":581},"void put(int key, int value) 如果关键字 key 已经存在，则变更其数据值 value ；如果不存在，则向缓存中插入该组 key-value 。如果插入操作导致关键字数量超过 capacity ，则应该 逐出 最久未使用的关键字。",{"type":556,"tag":557,"props":583,"children":584},{},[585],{"type":561,"value":586},"函数 get 和 put 必须以 O(1) 的平均时间复杂度运行。",{"type":556,"tag":557,"props":588,"children":589},{},[590],{"type":561,"value":591},"示例：",{"type":556,"tag":593,"props":594,"children":597},"pre",{"className":595,"code":596,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n输出\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n解释\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // 缓存是 {1=1}\nlRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\nlRUCache.get(1); // 返回 1\nlRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\nlRUCache.get(2); // 返回 -1 (未找到)\nlRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\nlRUCache.get(1); // 返回 -1 (未找到)\nlRUCache.get(3); // 返回 3\nlRUCache.get(4); // 返回 4\n",[598],{"type":556,"tag":599,"props":600,"children":601},"code",{"__ignoreMap":549},[602,613,622,631,640,649,659,668,677,686,695,704,713,722,731,740,749],{"type":556,"tag":603,"props":604,"children":607},"span",{"class":605,"line":606},"line",1,[608],{"type":556,"tag":603,"props":609,"children":610},{},[611],{"type":561,"value":612},"输入\n",{"type":556,"tag":603,"props":614,"children":616},{"class":605,"line":615},2,[617],{"type":556,"tag":603,"props":618,"children":619},{},[620],{"type":561,"value":621},"[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n",{"type":556,"tag":603,"props":623,"children":625},{"class":605,"line":624},3,[626],{"type":556,"tag":603,"props":627,"children":628},{},[629],{"type":561,"value":630},"[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n",{"type":556,"tag":603,"props":632,"children":634},{"class":605,"line":633},4,[635],{"type":556,"tag":603,"props":636,"children":637},{},[638],{"type":561,"value":639},"输出\n",{"type":556,"tag":603,"props":641,"children":643},{"class":605,"line":642},5,[644],{"type":556,"tag":603,"props":645,"children":646},{},[647],{"type":561,"value":648},"[null, null, null, 1, null, -1, null, -1, 3, 4]\n",{"type":556,"tag":603,"props":650,"children":652},{"class":605,"line":651},6,[653],{"type":556,"tag":603,"props":654,"children":656},{"emptyLinePlaceholder":655},true,[657],{"type":561,"value":658},"\n",{"type":556,"tag":603,"props":660,"children":662},{"class":605,"line":661},7,[663],{"type":556,"tag":603,"props":664,"children":665},{},[666],{"type":561,"value":667},"解释\n",{"type":556,"tag":603,"props":669,"children":671},{"class":605,"line":670},8,[672],{"type":556,"tag":603,"props":673,"children":674},{},[675],{"type":561,"value":676},"LRUCache lRUCache = new LRUCache(2);\n",{"type":556,"tag":603,"props":678,"children":680},{"class":605,"line":679},9,[681],{"type":556,"tag":603,"props":682,"children":683},{},[684],{"type":561,"value":685},"lRUCache.put(1, 1); // 缓存是 {1=1}\n",{"type":556,"tag":603,"props":687,"children":689},{"class":605,"line":688},10,[690],{"type":556,"tag":603,"props":691,"children":692},{},[693],{"type":561,"value":694},"lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\n",{"type":556,"tag":603,"props":696,"children":698},{"class":605,"line":697},11,[699],{"type":556,"tag":603,"props":700,"children":701},{},[702],{"type":561,"value":703},"lRUCache.get(1); // 返回 1\n",{"type":556,"tag":603,"props":705,"children":707},{"class":605,"line":706},12,[708],{"type":556,"tag":603,"props":709,"children":710},{},[711],{"type":561,"value":712},"lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\n",{"type":556,"tag":603,"props":714,"children":716},{"class":605,"line":715},13,[717],{"type":556,"tag":603,"props":718,"children":719},{},[720],{"type":561,"value":721},"lRUCache.get(2); // 返回 -1 (未找到)\n",{"type":556,"tag":603,"props":723,"children":725},{"class":605,"line":724},14,[726],{"type":556,"tag":603,"props":727,"children":728},{},[729],{"type":561,"value":730},"lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\n",{"type":556,"tag":603,"props":732,"children":734},{"class":605,"line":733},15,[735],{"type":556,"tag":603,"props":736,"children":737},{},[738],{"type":561,"value":739},"lRUCache.get(1); // 返回 -1 (未找到)\n",{"type":556,"tag":603,"props":741,"children":743},{"class":605,"line":742},16,[744],{"type":556,"tag":603,"props":745,"children":746},{},[747],{"type":561,"value":748},"lRUCache.get(3); // 返回 3\n",{"type":556,"tag":603,"props":750,"children":752},{"class":605,"line":751},17,[753],{"type":556,"tag":603,"props":754,"children":755},{},[756],{"type":561,"value":757},"lRUCache.get(4); // 返回 4\n",{"type":556,"tag":557,"props":759,"children":760},{},[761],{"type":561,"value":762},"提示：",{"type":556,"tag":563,"props":764,"children":765},{},[766,771,776,781],{"type":556,"tag":567,"props":767,"children":768},{},[769],{"type":561,"value":770},"1 \u003C= capacity \u003C= 3000",{"type":556,"tag":567,"props":772,"children":773},{},[774],{"type":561,"value":775},"0 \u003C= key \u003C= 10000",{"type":556,"tag":567,"props":777,"children":778},{},[779],{"type":561,"value":780},"0 \u003C= value \u003C= 105",{"type":556,"tag":567,"props":782,"children":783},{},[784],{"type":561,"value":785},"最多调用 2 * 10^5 次 get 和 put",{"type":556,"tag":787,"props":788,"children":790},"h2",{"id":789},"解题思路",[791],{"type":561,"value":789},{"type":556,"tag":557,"props":793,"children":794},{},[795],{"type":561,"value":796},"题目要求的 1 和 2 相对简单，主要是条件 3，当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值",{"type":556,"tag":787,"props":798,"children":800},{"id":799},"实现",[801],{"type":561,"value":799},{"type":556,"tag":803,"props":804,"children":806},"h3",{"id":805},"map-方案",[807],{"type":561,"value":808},"Map 方案",{"type":556,"tag":593,"props":810,"children":814},{"className":811,"code":812,"language":813,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} capacity\n */\nvar LRUCache = function (capacity) {\n  this.cache = new Map();\n  this.capacity = capacity;\n};\n\n/**\n* @param {number} key\n* @return {number}\n*/\nLRUCache.prototype.get = function (key) {\n  if (!this.cache.has(key)) return -1;\n  const val = this.cache.get(key);\n  // 更新位置 => 先删除后添加\n  this.cache.delete(key);\n  this.cache.set(key, val);\n  return val;\n};\n\n/**\n* @param {number} key\n* @param {number} value\n* @return {void}\n*/\nLRUCache.prototype.put = function (key, value) {\n  // 已经存在的情况下，更新其位置到\"最新\"即可 => 先删除，后插入\n  if (this.cache.has(key)) {\n    this.cache.delete(key);\n  }\n  this.cache.set(key, value);\n\n  if (this.cache.size > this.capacity) {\n    // 如果超出 map 最大范围，找到第一个删除\n    // keys() 得到一个迭代器对象\n    const firstKey = this.cache.keys().next().value;\n    this.cache.delete(firstKey);\n  }\n}\n\n/**\n* Your LRUCache object will be instantiated and called as such:\n* var obj = new LRUCache(capacity)\n* var param_1 = obj.get(key)\n* obj.put(key,value)\n*/\n","js",[815],{"type":556,"tag":599,"props":816,"children":817},{"__ignoreMap":549},[818,827,869,877,922,960,989,997,1004,1011,1044,1073,1081,1133,1206,1257,1265,1301,1347,1364,1372,1380,1388,1420,1453,1482,1490,1548,1557,1605,1642,1651,1695,1703,1761,1770,1779,1841,1878,1886,1894,1902,1910,1919,1928,1937,1946],{"type":556,"tag":603,"props":819,"children":820},{"class":605,"line":606},[821],{"type":556,"tag":603,"props":822,"children":824},{"style":823},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[825],{"type":561,"value":826},"/**\n",{"type":556,"tag":603,"props":828,"children":829},{"class":605,"line":615},[830,835,841,847,852,858,863],{"type":556,"tag":603,"props":831,"children":832},{"style":823},[833],{"type":561,"value":834}," * ",{"type":556,"tag":603,"props":836,"children":838},{"style":837},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[839],{"type":561,"value":840},"@",{"type":556,"tag":603,"props":842,"children":844},{"style":843},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[845],{"type":561,"value":846},"param",{"type":556,"tag":603,"props":848,"children":849},{"style":837},[850],{"type":561,"value":851}," {",{"type":556,"tag":603,"props":853,"children":855},{"style":854},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[856],{"type":561,"value":857},"number",{"type":556,"tag":603,"props":859,"children":860},{"style":837},[861],{"type":561,"value":862},"}",{"type":556,"tag":603,"props":864,"children":866},{"style":865},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[867],{"type":561,"value":868}," capacity\n",{"type":556,"tag":603,"props":870,"children":871},{"class":605,"line":624},[872],{"type":556,"tag":603,"props":873,"children":874},{"style":823},[875],{"type":561,"value":876}," */\n",{"type":556,"tag":603,"props":878,"children":879},{"class":605,"line":633},[880,886,892,897,902,907,912,917],{"type":556,"tag":603,"props":881,"children":883},{"style":882},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[884],{"type":561,"value":885},"var",{"type":556,"tag":603,"props":887,"children":889},{"style":888},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[890],{"type":561,"value":891}," LRUCache",{"type":556,"tag":603,"props":893,"children":894},{"style":837},[895],{"type":561,"value":896}," =",{"type":556,"tag":603,"props":898,"children":899},{"style":882},[900],{"type":561,"value":901}," function",{"type":556,"tag":603,"props":903,"children":904},{"style":837},[905],{"type":561,"value":906}," (",{"type":556,"tag":603,"props":908,"children":909},{"style":865},[910],{"type":561,"value":911},"capacity",{"type":556,"tag":603,"props":913,"children":914},{"style":837},[915],{"type":561,"value":916},")",{"type":556,"tag":603,"props":918,"children":919},{"style":837},[920],{"type":561,"value":921}," {\n",{"type":556,"tag":603,"props":923,"children":924},{"class":605,"line":642},[925,931,936,941,945,950,955],{"type":556,"tag":603,"props":926,"children":928},{"style":927},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[929],{"type":561,"value":930},"  this",{"type":556,"tag":603,"props":932,"children":933},{"style":837},[934],{"type":561,"value":935},".",{"type":556,"tag":603,"props":937,"children":938},{"style":865},[939],{"type":561,"value":940},"cache",{"type":556,"tag":603,"props":942,"children":943},{"style":837},[944],{"type":561,"value":896},{"type":556,"tag":603,"props":946,"children":947},{"style":882},[948],{"type":561,"value":949}," new",{"type":556,"tag":603,"props":951,"children":952},{"style":888},[953],{"type":561,"value":954}," Map",{"type":556,"tag":603,"props":956,"children":957},{"style":837},[958],{"type":561,"value":959},"();\n",{"type":556,"tag":603,"props":961,"children":962},{"class":605,"line":651},[963,967,971,975,979,984],{"type":556,"tag":603,"props":964,"children":965},{"style":927},[966],{"type":561,"value":930},{"type":556,"tag":603,"props":968,"children":969},{"style":837},[970],{"type":561,"value":935},{"type":556,"tag":603,"props":972,"children":973},{"style":865},[974],{"type":561,"value":911},{"type":556,"tag":603,"props":976,"children":977},{"style":837},[978],{"type":561,"value":896},{"type":556,"tag":603,"props":980,"children":981},{"style":865},[982],{"type":561,"value":983}," capacity",{"type":556,"tag":603,"props":985,"children":986},{"style":837},[987],{"type":561,"value":988},";\n",{"type":556,"tag":603,"props":990,"children":991},{"class":605,"line":661},[992],{"type":556,"tag":603,"props":993,"children":994},{"style":837},[995],{"type":561,"value":996},"};\n",{"type":556,"tag":603,"props":998,"children":999},{"class":605,"line":670},[1000],{"type":556,"tag":603,"props":1001,"children":1002},{"emptyLinePlaceholder":655},[1003],{"type":561,"value":658},{"type":556,"tag":603,"props":1005,"children":1006},{"class":605,"line":679},[1007],{"type":556,"tag":603,"props":1008,"children":1009},{"style":823},[1010],{"type":561,"value":826},{"type":556,"tag":603,"props":1012,"children":1013},{"class":605,"line":688},[1014,1019,1023,1027,1031,1035,1039],{"type":556,"tag":603,"props":1015,"children":1016},{"style":823},[1017],{"type":561,"value":1018},"* ",{"type":556,"tag":603,"props":1020,"children":1021},{"style":837},[1022],{"type":561,"value":840},{"type":556,"tag":603,"props":1024,"children":1025},{"style":843},[1026],{"type":561,"value":846},{"type":556,"tag":603,"props":1028,"children":1029},{"style":837},[1030],{"type":561,"value":851},{"type":556,"tag":603,"props":1032,"children":1033},{"style":854},[1034],{"type":561,"value":857},{"type":556,"tag":603,"props":1036,"children":1037},{"style":837},[1038],{"type":561,"value":862},{"type":556,"tag":603,"props":1040,"children":1041},{"style":865},[1042],{"type":561,"value":1043}," key\n",{"type":556,"tag":603,"props":1045,"children":1046},{"class":605,"line":697},[1047,1051,1055,1060,1064,1068],{"type":556,"tag":603,"props":1048,"children":1049},{"style":823},[1050],{"type":561,"value":1018},{"type":556,"tag":603,"props":1052,"children":1053},{"style":837},[1054],{"type":561,"value":840},{"type":556,"tag":603,"props":1056,"children":1057},{"style":843},[1058],{"type":561,"value":1059},"return",{"type":556,"tag":603,"props":1061,"children":1062},{"style":837},[1063],{"type":561,"value":851},{"type":556,"tag":603,"props":1065,"children":1066},{"style":854},[1067],{"type":561,"value":857},{"type":556,"tag":603,"props":1069,"children":1070},{"style":837},[1071],{"type":561,"value":1072},"}\n",{"type":556,"tag":603,"props":1074,"children":1075},{"class":605,"line":706},[1076],{"type":556,"tag":603,"props":1077,"children":1078},{"style":823},[1079],{"type":561,"value":1080},"*/\n",{"type":556,"tag":603,"props":1082,"children":1083},{"class":605,"line":715},[1084,1090,1094,1099,1103,1108,1112,1116,1120,1125,1129],{"type":556,"tag":603,"props":1085,"children":1087},{"style":1086},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1088],{"type":561,"value":1089},"LRUCache",{"type":556,"tag":603,"props":1091,"children":1092},{"style":837},[1093],{"type":561,"value":935},{"type":556,"tag":603,"props":1095,"children":1096},{"style":1086},[1097],{"type":561,"value":1098},"prototype",{"type":556,"tag":603,"props":1100,"children":1101},{"style":837},[1102],{"type":561,"value":935},{"type":556,"tag":603,"props":1104,"children":1105},{"style":888},[1106],{"type":561,"value":1107},"get",{"type":556,"tag":603,"props":1109,"children":1110},{"style":837},[1111],{"type":561,"value":896},{"type":556,"tag":603,"props":1113,"children":1114},{"style":882},[1115],{"type":561,"value":901},{"type":556,"tag":603,"props":1117,"children":1118},{"style":837},[1119],{"type":561,"value":906},{"type":556,"tag":603,"props":1121,"children":1122},{"style":865},[1123],{"type":561,"value":1124},"key",{"type":556,"tag":603,"props":1126,"children":1127},{"style":837},[1128],{"type":561,"value":916},{"type":556,"tag":603,"props":1130,"children":1131},{"style":837},[1132],{"type":561,"value":921},{"type":556,"tag":603,"props":1134,"children":1135},{"class":605,"line":724},[1136,1141,1145,1150,1155,1159,1163,1167,1172,1177,1181,1186,1191,1196,1202],{"type":556,"tag":603,"props":1137,"children":1138},{"style":843},[1139],{"type":561,"value":1140},"  if",{"type":556,"tag":603,"props":1142,"children":1143},{"style":837},[1144],{"type":561,"value":906},{"type":556,"tag":603,"props":1146,"children":1147},{"style":882},[1148],{"type":561,"value":1149},"!",{"type":556,"tag":603,"props":1151,"children":1152},{"style":927},[1153],{"type":561,"value":1154},"this",{"type":556,"tag":603,"props":1156,"children":1157},{"style":837},[1158],{"type":561,"value":935},{"type":556,"tag":603,"props":1160,"children":1161},{"style":865},[1162],{"type":561,"value":940},{"type":556,"tag":603,"props":1164,"children":1165},{"style":837},[1166],{"type":561,"value":935},{"type":556,"tag":603,"props":1168,"children":1169},{"style":888},[1170],{"type":561,"value":1171},"has",{"type":556,"tag":603,"props":1173,"children":1174},{"style":837},[1175],{"type":561,"value":1176},"(",{"type":556,"tag":603,"props":1178,"children":1179},{"style":865},[1180],{"type":561,"value":1124},{"type":556,"tag":603,"props":1182,"children":1183},{"style":837},[1184],{"type":561,"value":1185},"))",{"type":556,"tag":603,"props":1187,"children":1188},{"style":843},[1189],{"type":561,"value":1190}," return",{"type":556,"tag":603,"props":1192,"children":1193},{"style":882},[1194],{"type":561,"value":1195}," -",{"type":556,"tag":603,"props":1197,"children":1199},{"style":1198},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1200],{"type":561,"value":1201},"1",{"type":556,"tag":603,"props":1203,"children":1204},{"style":837},[1205],{"type":561,"value":988},{"type":556,"tag":603,"props":1207,"children":1208},{"class":605,"line":733},[1209,1214,1219,1223,1228,1232,1236,1240,1244,1248,1252],{"type":556,"tag":603,"props":1210,"children":1211},{"style":882},[1212],{"type":561,"value":1213},"  const",{"type":556,"tag":603,"props":1215,"children":1216},{"style":865},[1217],{"type":561,"value":1218}," val",{"type":556,"tag":603,"props":1220,"children":1221},{"style":837},[1222],{"type":561,"value":896},{"type":556,"tag":603,"props":1224,"children":1225},{"style":927},[1226],{"type":561,"value":1227}," this",{"type":556,"tag":603,"props":1229,"children":1230},{"style":837},[1231],{"type":561,"value":935},{"type":556,"tag":603,"props":1233,"children":1234},{"style":865},[1235],{"type":561,"value":940},{"type":556,"tag":603,"props":1237,"children":1238},{"style":837},[1239],{"type":561,"value":935},{"type":556,"tag":603,"props":1241,"children":1242},{"style":888},[1243],{"type":561,"value":1107},{"type":556,"tag":603,"props":1245,"children":1246},{"style":837},[1247],{"type":561,"value":1176},{"type":556,"tag":603,"props":1249,"children":1250},{"style":865},[1251],{"type":561,"value":1124},{"type":556,"tag":603,"props":1253,"children":1254},{"style":837},[1255],{"type":561,"value":1256},");\n",{"type":556,"tag":603,"props":1258,"children":1259},{"class":605,"line":742},[1260],{"type":556,"tag":603,"props":1261,"children":1262},{"style":823},[1263],{"type":561,"value":1264},"  // 更新位置 => 先删除后添加\n",{"type":556,"tag":603,"props":1266,"children":1267},{"class":605,"line":751},[1268,1272,1276,1280,1284,1289,1293,1297],{"type":556,"tag":603,"props":1269,"children":1270},{"style":927},[1271],{"type":561,"value":930},{"type":556,"tag":603,"props":1273,"children":1274},{"style":837},[1275],{"type":561,"value":935},{"type":556,"tag":603,"props":1277,"children":1278},{"style":865},[1279],{"type":561,"value":940},{"type":556,"tag":603,"props":1281,"children":1282},{"style":837},[1283],{"type":561,"value":935},{"type":556,"tag":603,"props":1285,"children":1286},{"style":888},[1287],{"type":561,"value":1288},"delete",{"type":556,"tag":603,"props":1290,"children":1291},{"style":837},[1292],{"type":561,"value":1176},{"type":556,"tag":603,"props":1294,"children":1295},{"style":865},[1296],{"type":561,"value":1124},{"type":556,"tag":603,"props":1298,"children":1299},{"style":837},[1300],{"type":561,"value":1256},{"type":556,"tag":603,"props":1302,"children":1304},{"class":605,"line":1303},18,[1305,1309,1313,1317,1321,1326,1330,1334,1339,1343],{"type":556,"tag":603,"props":1306,"children":1307},{"style":927},[1308],{"type":561,"value":930},{"type":556,"tag":603,"props":1310,"children":1311},{"style":837},[1312],{"type":561,"value":935},{"type":556,"tag":603,"props":1314,"children":1315},{"style":865},[1316],{"type":561,"value":940},{"type":556,"tag":603,"props":1318,"children":1319},{"style":837},[1320],{"type":561,"value":935},{"type":556,"tag":603,"props":1322,"children":1323},{"style":888},[1324],{"type":561,"value":1325},"set",{"type":556,"tag":603,"props":1327,"children":1328},{"style":837},[1329],{"type":561,"value":1176},{"type":556,"tag":603,"props":1331,"children":1332},{"style":865},[1333],{"type":561,"value":1124},{"type":556,"tag":603,"props":1335,"children":1336},{"style":837},[1337],{"type":561,"value":1338},",",{"type":556,"tag":603,"props":1340,"children":1341},{"style":865},[1342],{"type":561,"value":1218},{"type":556,"tag":603,"props":1344,"children":1345},{"style":837},[1346],{"type":561,"value":1256},{"type":556,"tag":603,"props":1348,"children":1350},{"class":605,"line":1349},19,[1351,1356,1360],{"type":556,"tag":603,"props":1352,"children":1353},{"style":843},[1354],{"type":561,"value":1355},"  return",{"type":556,"tag":603,"props":1357,"children":1358},{"style":865},[1359],{"type":561,"value":1218},{"type":556,"tag":603,"props":1361,"children":1362},{"style":837},[1363],{"type":561,"value":988},{"type":556,"tag":603,"props":1365,"children":1367},{"class":605,"line":1366},20,[1368],{"type":556,"tag":603,"props":1369,"children":1370},{"style":837},[1371],{"type":561,"value":996},{"type":556,"tag":603,"props":1373,"children":1375},{"class":605,"line":1374},21,[1376],{"type":556,"tag":603,"props":1377,"children":1378},{"emptyLinePlaceholder":655},[1379],{"type":561,"value":658},{"type":556,"tag":603,"props":1381,"children":1383},{"class":605,"line":1382},22,[1384],{"type":556,"tag":603,"props":1385,"children":1386},{"style":823},[1387],{"type":561,"value":826},{"type":556,"tag":603,"props":1389,"children":1391},{"class":605,"line":1390},23,[1392,1396,1400,1404,1408,1412,1416],{"type":556,"tag":603,"props":1393,"children":1394},{"style":823},[1395],{"type":561,"value":1018},{"type":556,"tag":603,"props":1397,"children":1398},{"style":837},[1399],{"type":561,"value":840},{"type":556,"tag":603,"props":1401,"children":1402},{"style":843},[1403],{"type":561,"value":846},{"type":556,"tag":603,"props":1405,"children":1406},{"style":837},[1407],{"type":561,"value":851},{"type":556,"tag":603,"props":1409,"children":1410},{"style":854},[1411],{"type":561,"value":857},{"type":556,"tag":603,"props":1413,"children":1414},{"style":837},[1415],{"type":561,"value":862},{"type":556,"tag":603,"props":1417,"children":1418},{"style":865},[1419],{"type":561,"value":1043},{"type":556,"tag":603,"props":1421,"children":1423},{"class":605,"line":1422},24,[1424,1428,1432,1436,1440,1444,1448],{"type":556,"tag":603,"props":1425,"children":1426},{"style":823},[1427],{"type":561,"value":1018},{"type":556,"tag":603,"props":1429,"children":1430},{"style":837},[1431],{"type":561,"value":840},{"type":556,"tag":603,"props":1433,"children":1434},{"style":843},[1435],{"type":561,"value":846},{"type":556,"tag":603,"props":1437,"children":1438},{"style":837},[1439],{"type":561,"value":851},{"type":556,"tag":603,"props":1441,"children":1442},{"style":854},[1443],{"type":561,"value":857},{"type":556,"tag":603,"props":1445,"children":1446},{"style":837},[1447],{"type":561,"value":862},{"type":556,"tag":603,"props":1449,"children":1450},{"style":865},[1451],{"type":561,"value":1452}," value\n",{"type":556,"tag":603,"props":1454,"children":1456},{"class":605,"line":1455},25,[1457,1461,1465,1469,1473,1478],{"type":556,"tag":603,"props":1458,"children":1459},{"style":823},[1460],{"type":561,"value":1018},{"type":556,"tag":603,"props":1462,"children":1463},{"style":837},[1464],{"type":561,"value":840},{"type":556,"tag":603,"props":1466,"children":1467},{"style":843},[1468],{"type":561,"value":1059},{"type":556,"tag":603,"props":1470,"children":1471},{"style":837},[1472],{"type":561,"value":851},{"type":556,"tag":603,"props":1474,"children":1475},{"style":854},[1476],{"type":561,"value":1477},"void",{"type":556,"tag":603,"props":1479,"children":1480},{"style":837},[1481],{"type":561,"value":1072},{"type":556,"tag":603,"props":1483,"children":1485},{"class":605,"line":1484},26,[1486],{"type":556,"tag":603,"props":1487,"children":1488},{"style":823},[1489],{"type":561,"value":1080},{"type":556,"tag":603,"props":1491,"children":1493},{"class":605,"line":1492},27,[1494,1498,1502,1506,1510,1515,1519,1523,1527,1531,1535,1540,1544],{"type":556,"tag":603,"props":1495,"children":1496},{"style":1086},[1497],{"type":561,"value":1089},{"type":556,"tag":603,"props":1499,"children":1500},{"style":837},[1501],{"type":561,"value":935},{"type":556,"tag":603,"props":1503,"children":1504},{"style":1086},[1505],{"type":561,"value":1098},{"type":556,"tag":603,"props":1507,"children":1508},{"style":837},[1509],{"type":561,"value":935},{"type":556,"tag":603,"props":1511,"children":1512},{"style":888},[1513],{"type":561,"value":1514},"put",{"type":556,"tag":603,"props":1516,"children":1517},{"style":837},[1518],{"type":561,"value":896},{"type":556,"tag":603,"props":1520,"children":1521},{"style":882},[1522],{"type":561,"value":901},{"type":556,"tag":603,"props":1524,"children":1525},{"style":837},[1526],{"type":561,"value":906},{"type":556,"tag":603,"props":1528,"children":1529},{"style":865},[1530],{"type":561,"value":1124},{"type":556,"tag":603,"props":1532,"children":1533},{"style":837},[1534],{"type":561,"value":1338},{"type":556,"tag":603,"props":1536,"children":1537},{"style":865},[1538],{"type":561,"value":1539}," value",{"type":556,"tag":603,"props":1541,"children":1542},{"style":837},[1543],{"type":561,"value":916},{"type":556,"tag":603,"props":1545,"children":1546},{"style":837},[1547],{"type":561,"value":921},{"type":556,"tag":603,"props":1549,"children":1551},{"class":605,"line":1550},28,[1552],{"type":556,"tag":603,"props":1553,"children":1554},{"style":823},[1555],{"type":561,"value":1556},"  // 已经存在的情况下，更新其位置到\"最新\"即可 => 先删除，后插入\n",{"type":556,"tag":603,"props":1558,"children":1560},{"class":605,"line":1559},29,[1561,1565,1569,1573,1577,1581,1585,1589,1593,1597,1601],{"type":556,"tag":603,"props":1562,"children":1563},{"style":843},[1564],{"type":561,"value":1140},{"type":556,"tag":603,"props":1566,"children":1567},{"style":837},[1568],{"type":561,"value":906},{"type":556,"tag":603,"props":1570,"children":1571},{"style":927},[1572],{"type":561,"value":1154},{"type":556,"tag":603,"props":1574,"children":1575},{"style":837},[1576],{"type":561,"value":935},{"type":556,"tag":603,"props":1578,"children":1579},{"style":865},[1580],{"type":561,"value":940},{"type":556,"tag":603,"props":1582,"children":1583},{"style":837},[1584],{"type":561,"value":935},{"type":556,"tag":603,"props":1586,"children":1587},{"style":888},[1588],{"type":561,"value":1171},{"type":556,"tag":603,"props":1590,"children":1591},{"style":837},[1592],{"type":561,"value":1176},{"type":556,"tag":603,"props":1594,"children":1595},{"style":865},[1596],{"type":561,"value":1124},{"type":556,"tag":603,"props":1598,"children":1599},{"style":837},[1600],{"type":561,"value":1185},{"type":556,"tag":603,"props":1602,"children":1603},{"style":837},[1604],{"type":561,"value":921},{"type":556,"tag":603,"props":1606,"children":1608},{"class":605,"line":1607},30,[1609,1614,1618,1622,1626,1630,1634,1638],{"type":556,"tag":603,"props":1610,"children":1611},{"style":927},[1612],{"type":561,"value":1613},"    this",{"type":556,"tag":603,"props":1615,"children":1616},{"style":837},[1617],{"type":561,"value":935},{"type":556,"tag":603,"props":1619,"children":1620},{"style":865},[1621],{"type":561,"value":940},{"type":556,"tag":603,"props":1623,"children":1624},{"style":837},[1625],{"type":561,"value":935},{"type":556,"tag":603,"props":1627,"children":1628},{"style":888},[1629],{"type":561,"value":1288},{"type":556,"tag":603,"props":1631,"children":1632},{"style":837},[1633],{"type":561,"value":1176},{"type":556,"tag":603,"props":1635,"children":1636},{"style":865},[1637],{"type":561,"value":1124},{"type":556,"tag":603,"props":1639,"children":1640},{"style":837},[1641],{"type":561,"value":1256},{"type":556,"tag":603,"props":1643,"children":1645},{"class":605,"line":1644},31,[1646],{"type":556,"tag":603,"props":1647,"children":1648},{"style":837},[1649],{"type":561,"value":1650},"  }\n",{"type":556,"tag":603,"props":1652,"children":1654},{"class":605,"line":1653},32,[1655,1659,1663,1667,1671,1675,1679,1683,1687,1691],{"type":556,"tag":603,"props":1656,"children":1657},{"style":927},[1658],{"type":561,"value":930},{"type":556,"tag":603,"props":1660,"children":1661},{"style":837},[1662],{"type":561,"value":935},{"type":556,"tag":603,"props":1664,"children":1665},{"style":865},[1666],{"type":561,"value":940},{"type":556,"tag":603,"props":1668,"children":1669},{"style":837},[1670],{"type":561,"value":935},{"type":556,"tag":603,"props":1672,"children":1673},{"style":888},[1674],{"type":561,"value":1325},{"type":556,"tag":603,"props":1676,"children":1677},{"style":837},[1678],{"type":561,"value":1176},{"type":556,"tag":603,"props":1680,"children":1681},{"style":865},[1682],{"type":561,"value":1124},{"type":556,"tag":603,"props":1684,"children":1685},{"style":837},[1686],{"type":561,"value":1338},{"type":556,"tag":603,"props":1688,"children":1689},{"style":865},[1690],{"type":561,"value":1539},{"type":556,"tag":603,"props":1692,"children":1693},{"style":837},[1694],{"type":561,"value":1256},{"type":556,"tag":603,"props":1696,"children":1698},{"class":605,"line":1697},33,[1699],{"type":556,"tag":603,"props":1700,"children":1701},{"emptyLinePlaceholder":655},[1702],{"type":561,"value":658},{"type":556,"tag":603,"props":1704,"children":1706},{"class":605,"line":1705},34,[1707,1711,1715,1719,1723,1727,1731,1736,1741,1745,1749,1753,1757],{"type":556,"tag":603,"props":1708,"children":1709},{"style":843},[1710],{"type":561,"value":1140},{"type":556,"tag":603,"props":1712,"children":1713},{"style":837},[1714],{"type":561,"value":906},{"type":556,"tag":603,"props":1716,"children":1717},{"style":927},[1718],{"type":561,"value":1154},{"type":556,"tag":603,"props":1720,"children":1721},{"style":837},[1722],{"type":561,"value":935},{"type":556,"tag":603,"props":1724,"children":1725},{"style":865},[1726],{"type":561,"value":940},{"type":556,"tag":603,"props":1728,"children":1729},{"style":837},[1730],{"type":561,"value":935},{"type":556,"tag":603,"props":1732,"children":1733},{"style":865},[1734],{"type":561,"value":1735},"size",{"type":556,"tag":603,"props":1737,"children":1738},{"style":837},[1739],{"type":561,"value":1740}," >",{"type":556,"tag":603,"props":1742,"children":1743},{"style":927},[1744],{"type":561,"value":1227},{"type":556,"tag":603,"props":1746,"children":1747},{"style":837},[1748],{"type":561,"value":935},{"type":556,"tag":603,"props":1750,"children":1751},{"style":865},[1752],{"type":561,"value":911},{"type":556,"tag":603,"props":1754,"children":1755},{"style":837},[1756],{"type":561,"value":916},{"type":556,"tag":603,"props":1758,"children":1759},{"style":837},[1760],{"type":561,"value":921},{"type":556,"tag":603,"props":1762,"children":1764},{"class":605,"line":1763},35,[1765],{"type":556,"tag":603,"props":1766,"children":1767},{"style":823},[1768],{"type":561,"value":1769},"    // 如果超出 map 最大范围，找到第一个删除\n",{"type":556,"tag":603,"props":1771,"children":1773},{"class":605,"line":1772},36,[1774],{"type":556,"tag":603,"props":1775,"children":1776},{"style":823},[1777],{"type":561,"value":1778},"    // keys() 得到一个迭代器对象\n",{"type":556,"tag":603,"props":1780,"children":1782},{"class":605,"line":1781},37,[1783,1788,1793,1797,1801,1805,1809,1813,1818,1823,1828,1832,1837],{"type":556,"tag":603,"props":1784,"children":1785},{"style":882},[1786],{"type":561,"value":1787},"    const",{"type":556,"tag":603,"props":1789,"children":1790},{"style":865},[1791],{"type":561,"value":1792}," firstKey",{"type":556,"tag":603,"props":1794,"children":1795},{"style":837},[1796],{"type":561,"value":896},{"type":556,"tag":603,"props":1798,"children":1799},{"style":927},[1800],{"type":561,"value":1227},{"type":556,"tag":603,"props":1802,"children":1803},{"style":837},[1804],{"type":561,"value":935},{"type":556,"tag":603,"props":1806,"children":1807},{"style":865},[1808],{"type":561,"value":940},{"type":556,"tag":603,"props":1810,"children":1811},{"style":837},[1812],{"type":561,"value":935},{"type":556,"tag":603,"props":1814,"children":1815},{"style":888},[1816],{"type":561,"value":1817},"keys",{"type":556,"tag":603,"props":1819,"children":1820},{"style":837},[1821],{"type":561,"value":1822},"().",{"type":556,"tag":603,"props":1824,"children":1825},{"style":888},[1826],{"type":561,"value":1827},"next",{"type":556,"tag":603,"props":1829,"children":1830},{"style":837},[1831],{"type":561,"value":1822},{"type":556,"tag":603,"props":1833,"children":1834},{"style":865},[1835],{"type":561,"value":1836},"value",{"type":556,"tag":603,"props":1838,"children":1839},{"style":837},[1840],{"type":561,"value":988},{"type":556,"tag":603,"props":1842,"children":1844},{"class":605,"line":1843},38,[1845,1849,1853,1857,1861,1865,1869,1874],{"type":556,"tag":603,"props":1846,"children":1847},{"style":927},[1848],{"type":561,"value":1613},{"type":556,"tag":603,"props":1850,"children":1851},{"style":837},[1852],{"type":561,"value":935},{"type":556,"tag":603,"props":1854,"children":1855},{"style":865},[1856],{"type":561,"value":940},{"type":556,"tag":603,"props":1858,"children":1859},{"style":837},[1860],{"type":561,"value":935},{"type":556,"tag":603,"props":1862,"children":1863},{"style":888},[1864],{"type":561,"value":1288},{"type":556,"tag":603,"props":1866,"children":1867},{"style":837},[1868],{"type":561,"value":1176},{"type":556,"tag":603,"props":1870,"children":1871},{"style":865},[1872],{"type":561,"value":1873},"firstKey",{"type":556,"tag":603,"props":1875,"children":1876},{"style":837},[1877],{"type":561,"value":1256},{"type":556,"tag":603,"props":1879,"children":1881},{"class":605,"line":1880},39,[1882],{"type":556,"tag":603,"props":1883,"children":1884},{"style":837},[1885],{"type":561,"value":1650},{"type":556,"tag":603,"props":1887,"children":1889},{"class":605,"line":1888},40,[1890],{"type":556,"tag":603,"props":1891,"children":1892},{"style":837},[1893],{"type":561,"value":1072},{"type":556,"tag":603,"props":1895,"children":1897},{"class":605,"line":1896},41,[1898],{"type":556,"tag":603,"props":1899,"children":1900},{"emptyLinePlaceholder":655},[1901],{"type":561,"value":658},{"type":556,"tag":603,"props":1903,"children":1905},{"class":605,"line":1904},42,[1906],{"type":556,"tag":603,"props":1907,"children":1908},{"style":823},[1909],{"type":561,"value":826},{"type":556,"tag":603,"props":1911,"children":1913},{"class":605,"line":1912},43,[1914],{"type":556,"tag":603,"props":1915,"children":1916},{"style":823},[1917],{"type":561,"value":1918},"* Your LRUCache object will be instantiated and called as such:\n",{"type":556,"tag":603,"props":1920,"children":1922},{"class":605,"line":1921},44,[1923],{"type":556,"tag":603,"props":1924,"children":1925},{"style":823},[1926],{"type":561,"value":1927},"* var obj = new LRUCache(capacity)\n",{"type":556,"tag":603,"props":1929,"children":1931},{"class":605,"line":1930},45,[1932],{"type":556,"tag":603,"props":1933,"children":1934},{"style":823},[1935],{"type":561,"value":1936},"* var param_1 = obj.get(key)\n",{"type":556,"tag":603,"props":1938,"children":1940},{"class":605,"line":1939},46,[1941],{"type":556,"tag":603,"props":1942,"children":1943},{"style":823},[1944],{"type":561,"value":1945},"* obj.put(key,value)\n",{"type":556,"tag":603,"props":1947,"children":1949},{"class":605,"line":1948},47,[1950],{"type":556,"tag":603,"props":1951,"children":1952},{"style":823},[1953],{"type":561,"value":1080},{"type":556,"tag":1955,"props":1956,"children":1957},"style",{},[1958],{"type":561,"value":1959},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":642,"depth":642,"links":1961},[1962,1963],{"id":789,"depth":615,"text":789},{"id":799,"depth":615,"text":799,"children":1964},[1965],{"id":805,"depth":624,"text":808},"markdown","content:1.algorithm:3.leetcode:3.major:146.lru-cache.md","content","1.algorithm/3.leetcode/3.major/146.lru-cache.md","md",[1972,1974],{"_path":174,"title":173,"description":1973},"给你一个链表的头节点 head ，判断链表中是否有环。",{"_path":180,"title":179,"description":1975},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",1715002844389]