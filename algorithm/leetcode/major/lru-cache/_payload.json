[{"data":1,"prerenderedAt":1921},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/lru-cache":478,"/algorithm/leetcode/major/lru-cache-surround":1916},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":177,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":176,"description":482,"url":483,"body":484,"_type":1911,"_id":1912,"_source":1913,"_file":1914,"_extension":1915},"major",false,"","请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：","https://leetcode.cn/problems/lru-cache",{"type":485,"children":486,"toc":1905},"root",[487,494,514,519,524,690,695,718,724,729,734,741,1899],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":495,"props":496,"children":497},"ul",{},[498,504,509],{"type":488,"tag":499,"props":500,"children":501},"li",{},[502],{"type":493,"value":503},"LRUCache(int capacity) 以 正整数 作为容量 capacity 初始化 LRU 缓存",{"type":488,"tag":499,"props":505,"children":506},{},[507],{"type":493,"value":508},"int get(int key) 如果关键字 key 存在于缓存中，则返回关键字的值，否则返回 -1 。",{"type":488,"tag":499,"props":510,"children":511},{},[512],{"type":493,"value":513},"void put(int key, int value) 如果关键字 key 已经存在，则变更其数据值 value ；如果不存在，则向缓存中插入该组 key-value 。如果插入操作导致关键字数量超过 capacity ，则应该 逐出 最久未使用的关键字。",{"type":488,"tag":489,"props":515,"children":516},{},[517],{"type":493,"value":518},"函数 get 和 put 必须以 O(1) 的平均时间复杂度运行。",{"type":488,"tag":489,"props":520,"children":521},{},[522],{"type":493,"value":523},"示例：",{"type":488,"tag":525,"props":526,"children":529},"pre",{"className":527,"code":528,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n输出\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n解释\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // 缓存是 {1=1}\nlRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\nlRUCache.get(1); // 返回 1\nlRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\nlRUCache.get(2); // 返回 -1 (未找到)\nlRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\nlRUCache.get(1); // 返回 -1 (未找到)\nlRUCache.get(3); // 返回 3\nlRUCache.get(4); // 返回 4\n",[530],{"type":488,"tag":531,"props":532,"children":533},"code",{"__ignoreMap":481},[534,545,554,563,572,581,591,600,609,618,627,636,645,654,663,672,681],{"type":488,"tag":535,"props":536,"children":539},"span",{"class":537,"line":538},"line",1,[540],{"type":488,"tag":535,"props":541,"children":542},{},[543],{"type":493,"value":544},"输入\n",{"type":488,"tag":535,"props":546,"children":548},{"class":537,"line":547},2,[549],{"type":488,"tag":535,"props":550,"children":551},{},[552],{"type":493,"value":553},"[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n",{"type":488,"tag":535,"props":555,"children":557},{"class":537,"line":556},3,[558],{"type":488,"tag":535,"props":559,"children":560},{},[561],{"type":493,"value":562},"[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n",{"type":488,"tag":535,"props":564,"children":566},{"class":537,"line":565},4,[567],{"type":488,"tag":535,"props":568,"children":569},{},[570],{"type":493,"value":571},"输出\n",{"type":488,"tag":535,"props":573,"children":575},{"class":537,"line":574},5,[576],{"type":488,"tag":535,"props":577,"children":578},{},[579],{"type":493,"value":580},"[null, null, null, 1, null, -1, null, -1, 3, 4]\n",{"type":488,"tag":535,"props":582,"children":584},{"class":537,"line":583},6,[585],{"type":488,"tag":535,"props":586,"children":588},{"emptyLinePlaceholder":587},true,[589],{"type":493,"value":590},"\n",{"type":488,"tag":535,"props":592,"children":594},{"class":537,"line":593},7,[595],{"type":488,"tag":535,"props":596,"children":597},{},[598],{"type":493,"value":599},"解释\n",{"type":488,"tag":535,"props":601,"children":603},{"class":537,"line":602},8,[604],{"type":488,"tag":535,"props":605,"children":606},{},[607],{"type":493,"value":608},"LRUCache lRUCache = new LRUCache(2);\n",{"type":488,"tag":535,"props":610,"children":612},{"class":537,"line":611},9,[613],{"type":488,"tag":535,"props":614,"children":615},{},[616],{"type":493,"value":617},"lRUCache.put(1, 1); // 缓存是 {1=1}\n",{"type":488,"tag":535,"props":619,"children":621},{"class":537,"line":620},10,[622],{"type":488,"tag":535,"props":623,"children":624},{},[625],{"type":493,"value":626},"lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\n",{"type":488,"tag":535,"props":628,"children":630},{"class":537,"line":629},11,[631],{"type":488,"tag":535,"props":632,"children":633},{},[634],{"type":493,"value":635},"lRUCache.get(1); // 返回 1\n",{"type":488,"tag":535,"props":637,"children":639},{"class":537,"line":638},12,[640],{"type":488,"tag":535,"props":641,"children":642},{},[643],{"type":493,"value":644},"lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\n",{"type":488,"tag":535,"props":646,"children":648},{"class":537,"line":647},13,[649],{"type":488,"tag":535,"props":650,"children":651},{},[652],{"type":493,"value":653},"lRUCache.get(2); // 返回 -1 (未找到)\n",{"type":488,"tag":535,"props":655,"children":657},{"class":537,"line":656},14,[658],{"type":488,"tag":535,"props":659,"children":660},{},[661],{"type":493,"value":662},"lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\n",{"type":488,"tag":535,"props":664,"children":666},{"class":537,"line":665},15,[667],{"type":488,"tag":535,"props":668,"children":669},{},[670],{"type":493,"value":671},"lRUCache.get(1); // 返回 -1 (未找到)\n",{"type":488,"tag":535,"props":673,"children":675},{"class":537,"line":674},16,[676],{"type":488,"tag":535,"props":677,"children":678},{},[679],{"type":493,"value":680},"lRUCache.get(3); // 返回 3\n",{"type":488,"tag":535,"props":682,"children":684},{"class":537,"line":683},17,[685],{"type":488,"tag":535,"props":686,"children":687},{},[688],{"type":493,"value":689},"lRUCache.get(4); // 返回 4\n",{"type":488,"tag":489,"props":691,"children":692},{},[693],{"type":493,"value":694},"提示：",{"type":488,"tag":495,"props":696,"children":697},{},[698,703,708,713],{"type":488,"tag":499,"props":699,"children":700},{},[701],{"type":493,"value":702},"1 \u003C= capacity \u003C= 3000",{"type":488,"tag":499,"props":704,"children":705},{},[706],{"type":493,"value":707},"0 \u003C= key \u003C= 10000",{"type":488,"tag":499,"props":709,"children":710},{},[711],{"type":493,"value":712},"0 \u003C= value \u003C= 105",{"type":488,"tag":499,"props":714,"children":715},{},[716],{"type":493,"value":717},"最多调用 2 * 10^5 次 get 和 put",{"type":488,"tag":719,"props":720,"children":722},"h2",{"id":721},"解题思路",[723],{"type":493,"value":721},{"type":488,"tag":489,"props":725,"children":726},{},[727],{"type":493,"value":728},"题目要求的 1 和 2 相对简单，主要是条件 3，当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值",{"type":488,"tag":719,"props":730,"children":732},{"id":731},"实现",[733],{"type":493,"value":731},{"type":488,"tag":735,"props":736,"children":738},"h3",{"id":737},"map-方案",[739],{"type":493,"value":740},"Map 方案",{"type":488,"tag":525,"props":742,"children":746},{"className":743,"code":744,"language":745,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} capacity\n */\nvar LRUCache = function (capacity) {\n  this.cache = new Map();\n  this.capacity = capacity;\n};\n\n/**\n * @param {number} key\n * @return {number}\n */\nLRUCache.prototype.get = function (key) {\n  if (this.cache.has(key)) {\n    const val = this.cache.get(key);\n    // 更新位置\n    this.cache.delete(key);\n    this.cache.set(key, val);\n    return val;\n  }\n  return -1;\n};\n\n/**\n * @param {number} key\n * @param {number} value\n * @return {void}\n */\nLRUCache.prototype.put = function (key, value) {\n  // 已经存在的情况下，更新其位置到”最新“即可\n  // 先删除，后插入\n  if (this.cache.has(key)) {\n    this.cache.delete(key);\n  } else {\n    // 插入数据前先判断，size 是否符合 capacity\n    // 已经 >= capacity，需要把最开始插入的数据删除掉\n    // keys() 方法得到一个可遍历对象,执行 next( )拿到一个形如 { value: 'xxx', done: false } 的对象\n    if (this.cache.size >= this.capacity) {\n      this.cache.delete(this.cache.keys().next().value);\n    }\n  }\n  this.cache.set(key, value);\n};\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * var obj = new LRUCache(capacity)\n * var param_1 = obj.get(key)\n * obj.put(key,value)\n */\n","js",[747],{"type":488,"tag":531,"props":748,"children":749},{"__ignoreMap":481},[750,759,801,809,854,892,921,929,936,943,975,1004,1011,1063,1115,1166,1174,1211,1257,1274,1283,1307,1315,1323,1331,1363,1396,1425,1433,1491,1500,1509,1557,1593,1611,1620,1629,1638,1697,1770,1779,1787,1831,1839,1847,1855,1864,1873,1882,1891],{"type":488,"tag":535,"props":751,"children":752},{"class":537,"line":538},[753],{"type":488,"tag":535,"props":754,"children":756},{"style":755},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[757],{"type":493,"value":758},"/**\n",{"type":488,"tag":535,"props":760,"children":761},{"class":537,"line":547},[762,767,773,779,784,790,795],{"type":488,"tag":535,"props":763,"children":764},{"style":755},[765],{"type":493,"value":766}," * ",{"type":488,"tag":535,"props":768,"children":770},{"style":769},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[771],{"type":493,"value":772},"@",{"type":488,"tag":535,"props":774,"children":776},{"style":775},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[777],{"type":493,"value":778},"param",{"type":488,"tag":535,"props":780,"children":781},{"style":769},[782],{"type":493,"value":783}," {",{"type":488,"tag":535,"props":785,"children":787},{"style":786},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[788],{"type":493,"value":789},"number",{"type":488,"tag":535,"props":791,"children":792},{"style":769},[793],{"type":493,"value":794},"}",{"type":488,"tag":535,"props":796,"children":798},{"style":797},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[799],{"type":493,"value":800}," capacity\n",{"type":488,"tag":535,"props":802,"children":803},{"class":537,"line":556},[804],{"type":488,"tag":535,"props":805,"children":806},{"style":755},[807],{"type":493,"value":808}," */\n",{"type":488,"tag":535,"props":810,"children":811},{"class":537,"line":565},[812,818,824,829,834,839,844,849],{"type":488,"tag":535,"props":813,"children":815},{"style":814},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[816],{"type":493,"value":817},"var",{"type":488,"tag":535,"props":819,"children":821},{"style":820},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[822],{"type":493,"value":823}," LRUCache",{"type":488,"tag":535,"props":825,"children":826},{"style":769},[827],{"type":493,"value":828}," =",{"type":488,"tag":535,"props":830,"children":831},{"style":814},[832],{"type":493,"value":833}," function",{"type":488,"tag":535,"props":835,"children":836},{"style":769},[837],{"type":493,"value":838}," (",{"type":488,"tag":535,"props":840,"children":841},{"style":797},[842],{"type":493,"value":843},"capacity",{"type":488,"tag":535,"props":845,"children":846},{"style":769},[847],{"type":493,"value":848},")",{"type":488,"tag":535,"props":850,"children":851},{"style":769},[852],{"type":493,"value":853}," {\n",{"type":488,"tag":535,"props":855,"children":856},{"class":537,"line":574},[857,863,868,873,877,882,887],{"type":488,"tag":535,"props":858,"children":860},{"style":859},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[861],{"type":493,"value":862},"  this",{"type":488,"tag":535,"props":864,"children":865},{"style":769},[866],{"type":493,"value":867},".",{"type":488,"tag":535,"props":869,"children":870},{"style":797},[871],{"type":493,"value":872},"cache",{"type":488,"tag":535,"props":874,"children":875},{"style":769},[876],{"type":493,"value":828},{"type":488,"tag":535,"props":878,"children":879},{"style":814},[880],{"type":493,"value":881}," new",{"type":488,"tag":535,"props":883,"children":884},{"style":820},[885],{"type":493,"value":886}," Map",{"type":488,"tag":535,"props":888,"children":889},{"style":769},[890],{"type":493,"value":891},"();\n",{"type":488,"tag":535,"props":893,"children":894},{"class":537,"line":583},[895,899,903,907,911,916],{"type":488,"tag":535,"props":896,"children":897},{"style":859},[898],{"type":493,"value":862},{"type":488,"tag":535,"props":900,"children":901},{"style":769},[902],{"type":493,"value":867},{"type":488,"tag":535,"props":904,"children":905},{"style":797},[906],{"type":493,"value":843},{"type":488,"tag":535,"props":908,"children":909},{"style":769},[910],{"type":493,"value":828},{"type":488,"tag":535,"props":912,"children":913},{"style":797},[914],{"type":493,"value":915}," capacity",{"type":488,"tag":535,"props":917,"children":918},{"style":769},[919],{"type":493,"value":920},";\n",{"type":488,"tag":535,"props":922,"children":923},{"class":537,"line":593},[924],{"type":488,"tag":535,"props":925,"children":926},{"style":769},[927],{"type":493,"value":928},"};\n",{"type":488,"tag":535,"props":930,"children":931},{"class":537,"line":602},[932],{"type":488,"tag":535,"props":933,"children":934},{"emptyLinePlaceholder":587},[935],{"type":493,"value":590},{"type":488,"tag":535,"props":937,"children":938},{"class":537,"line":611},[939],{"type":488,"tag":535,"props":940,"children":941},{"style":755},[942],{"type":493,"value":758},{"type":488,"tag":535,"props":944,"children":945},{"class":537,"line":620},[946,950,954,958,962,966,970],{"type":488,"tag":535,"props":947,"children":948},{"style":755},[949],{"type":493,"value":766},{"type":488,"tag":535,"props":951,"children":952},{"style":769},[953],{"type":493,"value":772},{"type":488,"tag":535,"props":955,"children":956},{"style":775},[957],{"type":493,"value":778},{"type":488,"tag":535,"props":959,"children":960},{"style":769},[961],{"type":493,"value":783},{"type":488,"tag":535,"props":963,"children":964},{"style":786},[965],{"type":493,"value":789},{"type":488,"tag":535,"props":967,"children":968},{"style":769},[969],{"type":493,"value":794},{"type":488,"tag":535,"props":971,"children":972},{"style":797},[973],{"type":493,"value":974}," key\n",{"type":488,"tag":535,"props":976,"children":977},{"class":537,"line":629},[978,982,986,991,995,999],{"type":488,"tag":535,"props":979,"children":980},{"style":755},[981],{"type":493,"value":766},{"type":488,"tag":535,"props":983,"children":984},{"style":769},[985],{"type":493,"value":772},{"type":488,"tag":535,"props":987,"children":988},{"style":775},[989],{"type":493,"value":990},"return",{"type":488,"tag":535,"props":992,"children":993},{"style":769},[994],{"type":493,"value":783},{"type":488,"tag":535,"props":996,"children":997},{"style":786},[998],{"type":493,"value":789},{"type":488,"tag":535,"props":1000,"children":1001},{"style":769},[1002],{"type":493,"value":1003},"}\n",{"type":488,"tag":535,"props":1005,"children":1006},{"class":537,"line":638},[1007],{"type":488,"tag":535,"props":1008,"children":1009},{"style":755},[1010],{"type":493,"value":808},{"type":488,"tag":535,"props":1012,"children":1013},{"class":537,"line":647},[1014,1020,1024,1029,1033,1038,1042,1046,1050,1055,1059],{"type":488,"tag":535,"props":1015,"children":1017},{"style":1016},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1018],{"type":493,"value":1019},"LRUCache",{"type":488,"tag":535,"props":1021,"children":1022},{"style":769},[1023],{"type":493,"value":867},{"type":488,"tag":535,"props":1025,"children":1026},{"style":1016},[1027],{"type":493,"value":1028},"prototype",{"type":488,"tag":535,"props":1030,"children":1031},{"style":769},[1032],{"type":493,"value":867},{"type":488,"tag":535,"props":1034,"children":1035},{"style":820},[1036],{"type":493,"value":1037},"get",{"type":488,"tag":535,"props":1039,"children":1040},{"style":769},[1041],{"type":493,"value":828},{"type":488,"tag":535,"props":1043,"children":1044},{"style":814},[1045],{"type":493,"value":833},{"type":488,"tag":535,"props":1047,"children":1048},{"style":769},[1049],{"type":493,"value":838},{"type":488,"tag":535,"props":1051,"children":1052},{"style":797},[1053],{"type":493,"value":1054},"key",{"type":488,"tag":535,"props":1056,"children":1057},{"style":769},[1058],{"type":493,"value":848},{"type":488,"tag":535,"props":1060,"children":1061},{"style":769},[1062],{"type":493,"value":853},{"type":488,"tag":535,"props":1064,"children":1065},{"class":537,"line":656},[1066,1071,1075,1080,1084,1088,1092,1097,1102,1106,1111],{"type":488,"tag":535,"props":1067,"children":1068},{"style":775},[1069],{"type":493,"value":1070},"  if",{"type":488,"tag":535,"props":1072,"children":1073},{"style":769},[1074],{"type":493,"value":838},{"type":488,"tag":535,"props":1076,"children":1077},{"style":859},[1078],{"type":493,"value":1079},"this",{"type":488,"tag":535,"props":1081,"children":1082},{"style":769},[1083],{"type":493,"value":867},{"type":488,"tag":535,"props":1085,"children":1086},{"style":797},[1087],{"type":493,"value":872},{"type":488,"tag":535,"props":1089,"children":1090},{"style":769},[1091],{"type":493,"value":867},{"type":488,"tag":535,"props":1093,"children":1094},{"style":820},[1095],{"type":493,"value":1096},"has",{"type":488,"tag":535,"props":1098,"children":1099},{"style":769},[1100],{"type":493,"value":1101},"(",{"type":488,"tag":535,"props":1103,"children":1104},{"style":797},[1105],{"type":493,"value":1054},{"type":488,"tag":535,"props":1107,"children":1108},{"style":769},[1109],{"type":493,"value":1110},"))",{"type":488,"tag":535,"props":1112,"children":1113},{"style":769},[1114],{"type":493,"value":853},{"type":488,"tag":535,"props":1116,"children":1117},{"class":537,"line":665},[1118,1123,1128,1132,1137,1141,1145,1149,1153,1157,1161],{"type":488,"tag":535,"props":1119,"children":1120},{"style":814},[1121],{"type":493,"value":1122},"    const",{"type":488,"tag":535,"props":1124,"children":1125},{"style":797},[1126],{"type":493,"value":1127}," val",{"type":488,"tag":535,"props":1129,"children":1130},{"style":769},[1131],{"type":493,"value":828},{"type":488,"tag":535,"props":1133,"children":1134},{"style":859},[1135],{"type":493,"value":1136}," this",{"type":488,"tag":535,"props":1138,"children":1139},{"style":769},[1140],{"type":493,"value":867},{"type":488,"tag":535,"props":1142,"children":1143},{"style":797},[1144],{"type":493,"value":872},{"type":488,"tag":535,"props":1146,"children":1147},{"style":769},[1148],{"type":493,"value":867},{"type":488,"tag":535,"props":1150,"children":1151},{"style":820},[1152],{"type":493,"value":1037},{"type":488,"tag":535,"props":1154,"children":1155},{"style":769},[1156],{"type":493,"value":1101},{"type":488,"tag":535,"props":1158,"children":1159},{"style":797},[1160],{"type":493,"value":1054},{"type":488,"tag":535,"props":1162,"children":1163},{"style":769},[1164],{"type":493,"value":1165},");\n",{"type":488,"tag":535,"props":1167,"children":1168},{"class":537,"line":674},[1169],{"type":488,"tag":535,"props":1170,"children":1171},{"style":755},[1172],{"type":493,"value":1173},"    // 更新位置\n",{"type":488,"tag":535,"props":1175,"children":1176},{"class":537,"line":683},[1177,1182,1186,1190,1194,1199,1203,1207],{"type":488,"tag":535,"props":1178,"children":1179},{"style":859},[1180],{"type":493,"value":1181},"    this",{"type":488,"tag":535,"props":1183,"children":1184},{"style":769},[1185],{"type":493,"value":867},{"type":488,"tag":535,"props":1187,"children":1188},{"style":797},[1189],{"type":493,"value":872},{"type":488,"tag":535,"props":1191,"children":1192},{"style":769},[1193],{"type":493,"value":867},{"type":488,"tag":535,"props":1195,"children":1196},{"style":820},[1197],{"type":493,"value":1198},"delete",{"type":488,"tag":535,"props":1200,"children":1201},{"style":769},[1202],{"type":493,"value":1101},{"type":488,"tag":535,"props":1204,"children":1205},{"style":797},[1206],{"type":493,"value":1054},{"type":488,"tag":535,"props":1208,"children":1209},{"style":769},[1210],{"type":493,"value":1165},{"type":488,"tag":535,"props":1212,"children":1214},{"class":537,"line":1213},18,[1215,1219,1223,1227,1231,1236,1240,1244,1249,1253],{"type":488,"tag":535,"props":1216,"children":1217},{"style":859},[1218],{"type":493,"value":1181},{"type":488,"tag":535,"props":1220,"children":1221},{"style":769},[1222],{"type":493,"value":867},{"type":488,"tag":535,"props":1224,"children":1225},{"style":797},[1226],{"type":493,"value":872},{"type":488,"tag":535,"props":1228,"children":1229},{"style":769},[1230],{"type":493,"value":867},{"type":488,"tag":535,"props":1232,"children":1233},{"style":820},[1234],{"type":493,"value":1235},"set",{"type":488,"tag":535,"props":1237,"children":1238},{"style":769},[1239],{"type":493,"value":1101},{"type":488,"tag":535,"props":1241,"children":1242},{"style":797},[1243],{"type":493,"value":1054},{"type":488,"tag":535,"props":1245,"children":1246},{"style":769},[1247],{"type":493,"value":1248},",",{"type":488,"tag":535,"props":1250,"children":1251},{"style":797},[1252],{"type":493,"value":1127},{"type":488,"tag":535,"props":1254,"children":1255},{"style":769},[1256],{"type":493,"value":1165},{"type":488,"tag":535,"props":1258,"children":1260},{"class":537,"line":1259},19,[1261,1266,1270],{"type":488,"tag":535,"props":1262,"children":1263},{"style":775},[1264],{"type":493,"value":1265},"    return",{"type":488,"tag":535,"props":1267,"children":1268},{"style":797},[1269],{"type":493,"value":1127},{"type":488,"tag":535,"props":1271,"children":1272},{"style":769},[1273],{"type":493,"value":920},{"type":488,"tag":535,"props":1275,"children":1277},{"class":537,"line":1276},20,[1278],{"type":488,"tag":535,"props":1279,"children":1280},{"style":769},[1281],{"type":493,"value":1282},"  }\n",{"type":488,"tag":535,"props":1284,"children":1286},{"class":537,"line":1285},21,[1287,1292,1297,1303],{"type":488,"tag":535,"props":1288,"children":1289},{"style":775},[1290],{"type":493,"value":1291},"  return",{"type":488,"tag":535,"props":1293,"children":1294},{"style":814},[1295],{"type":493,"value":1296}," -",{"type":488,"tag":535,"props":1298,"children":1300},{"style":1299},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1301],{"type":493,"value":1302},"1",{"type":488,"tag":535,"props":1304,"children":1305},{"style":769},[1306],{"type":493,"value":920},{"type":488,"tag":535,"props":1308,"children":1310},{"class":537,"line":1309},22,[1311],{"type":488,"tag":535,"props":1312,"children":1313},{"style":769},[1314],{"type":493,"value":928},{"type":488,"tag":535,"props":1316,"children":1318},{"class":537,"line":1317},23,[1319],{"type":488,"tag":535,"props":1320,"children":1321},{"emptyLinePlaceholder":587},[1322],{"type":493,"value":590},{"type":488,"tag":535,"props":1324,"children":1326},{"class":537,"line":1325},24,[1327],{"type":488,"tag":535,"props":1328,"children":1329},{"style":755},[1330],{"type":493,"value":758},{"type":488,"tag":535,"props":1332,"children":1334},{"class":537,"line":1333},25,[1335,1339,1343,1347,1351,1355,1359],{"type":488,"tag":535,"props":1336,"children":1337},{"style":755},[1338],{"type":493,"value":766},{"type":488,"tag":535,"props":1340,"children":1341},{"style":769},[1342],{"type":493,"value":772},{"type":488,"tag":535,"props":1344,"children":1345},{"style":775},[1346],{"type":493,"value":778},{"type":488,"tag":535,"props":1348,"children":1349},{"style":769},[1350],{"type":493,"value":783},{"type":488,"tag":535,"props":1352,"children":1353},{"style":786},[1354],{"type":493,"value":789},{"type":488,"tag":535,"props":1356,"children":1357},{"style":769},[1358],{"type":493,"value":794},{"type":488,"tag":535,"props":1360,"children":1361},{"style":797},[1362],{"type":493,"value":974},{"type":488,"tag":535,"props":1364,"children":1366},{"class":537,"line":1365},26,[1367,1371,1375,1379,1383,1387,1391],{"type":488,"tag":535,"props":1368,"children":1369},{"style":755},[1370],{"type":493,"value":766},{"type":488,"tag":535,"props":1372,"children":1373},{"style":769},[1374],{"type":493,"value":772},{"type":488,"tag":535,"props":1376,"children":1377},{"style":775},[1378],{"type":493,"value":778},{"type":488,"tag":535,"props":1380,"children":1381},{"style":769},[1382],{"type":493,"value":783},{"type":488,"tag":535,"props":1384,"children":1385},{"style":786},[1386],{"type":493,"value":789},{"type":488,"tag":535,"props":1388,"children":1389},{"style":769},[1390],{"type":493,"value":794},{"type":488,"tag":535,"props":1392,"children":1393},{"style":797},[1394],{"type":493,"value":1395}," value\n",{"type":488,"tag":535,"props":1397,"children":1399},{"class":537,"line":1398},27,[1400,1404,1408,1412,1416,1421],{"type":488,"tag":535,"props":1401,"children":1402},{"style":755},[1403],{"type":493,"value":766},{"type":488,"tag":535,"props":1405,"children":1406},{"style":769},[1407],{"type":493,"value":772},{"type":488,"tag":535,"props":1409,"children":1410},{"style":775},[1411],{"type":493,"value":990},{"type":488,"tag":535,"props":1413,"children":1414},{"style":769},[1415],{"type":493,"value":783},{"type":488,"tag":535,"props":1417,"children":1418},{"style":786},[1419],{"type":493,"value":1420},"void",{"type":488,"tag":535,"props":1422,"children":1423},{"style":769},[1424],{"type":493,"value":1003},{"type":488,"tag":535,"props":1426,"children":1428},{"class":537,"line":1427},28,[1429],{"type":488,"tag":535,"props":1430,"children":1431},{"style":755},[1432],{"type":493,"value":808},{"type":488,"tag":535,"props":1434,"children":1436},{"class":537,"line":1435},29,[1437,1441,1445,1449,1453,1458,1462,1466,1470,1474,1478,1483,1487],{"type":488,"tag":535,"props":1438,"children":1439},{"style":1016},[1440],{"type":493,"value":1019},{"type":488,"tag":535,"props":1442,"children":1443},{"style":769},[1444],{"type":493,"value":867},{"type":488,"tag":535,"props":1446,"children":1447},{"style":1016},[1448],{"type":493,"value":1028},{"type":488,"tag":535,"props":1450,"children":1451},{"style":769},[1452],{"type":493,"value":867},{"type":488,"tag":535,"props":1454,"children":1455},{"style":820},[1456],{"type":493,"value":1457},"put",{"type":488,"tag":535,"props":1459,"children":1460},{"style":769},[1461],{"type":493,"value":828},{"type":488,"tag":535,"props":1463,"children":1464},{"style":814},[1465],{"type":493,"value":833},{"type":488,"tag":535,"props":1467,"children":1468},{"style":769},[1469],{"type":493,"value":838},{"type":488,"tag":535,"props":1471,"children":1472},{"style":797},[1473],{"type":493,"value":1054},{"type":488,"tag":535,"props":1475,"children":1476},{"style":769},[1477],{"type":493,"value":1248},{"type":488,"tag":535,"props":1479,"children":1480},{"style":797},[1481],{"type":493,"value":1482}," value",{"type":488,"tag":535,"props":1484,"children":1485},{"style":769},[1486],{"type":493,"value":848},{"type":488,"tag":535,"props":1488,"children":1489},{"style":769},[1490],{"type":493,"value":853},{"type":488,"tag":535,"props":1492,"children":1494},{"class":537,"line":1493},30,[1495],{"type":488,"tag":535,"props":1496,"children":1497},{"style":755},[1498],{"type":493,"value":1499},"  // 已经存在的情况下，更新其位置到”最新“即可\n",{"type":488,"tag":535,"props":1501,"children":1503},{"class":537,"line":1502},31,[1504],{"type":488,"tag":535,"props":1505,"children":1506},{"style":755},[1507],{"type":493,"value":1508},"  // 先删除，后插入\n",{"type":488,"tag":535,"props":1510,"children":1512},{"class":537,"line":1511},32,[1513,1517,1521,1525,1529,1533,1537,1541,1545,1549,1553],{"type":488,"tag":535,"props":1514,"children":1515},{"style":775},[1516],{"type":493,"value":1070},{"type":488,"tag":535,"props":1518,"children":1519},{"style":769},[1520],{"type":493,"value":838},{"type":488,"tag":535,"props":1522,"children":1523},{"style":859},[1524],{"type":493,"value":1079},{"type":488,"tag":535,"props":1526,"children":1527},{"style":769},[1528],{"type":493,"value":867},{"type":488,"tag":535,"props":1530,"children":1531},{"style":797},[1532],{"type":493,"value":872},{"type":488,"tag":535,"props":1534,"children":1535},{"style":769},[1536],{"type":493,"value":867},{"type":488,"tag":535,"props":1538,"children":1539},{"style":820},[1540],{"type":493,"value":1096},{"type":488,"tag":535,"props":1542,"children":1543},{"style":769},[1544],{"type":493,"value":1101},{"type":488,"tag":535,"props":1546,"children":1547},{"style":797},[1548],{"type":493,"value":1054},{"type":488,"tag":535,"props":1550,"children":1551},{"style":769},[1552],{"type":493,"value":1110},{"type":488,"tag":535,"props":1554,"children":1555},{"style":769},[1556],{"type":493,"value":853},{"type":488,"tag":535,"props":1558,"children":1560},{"class":537,"line":1559},33,[1561,1565,1569,1573,1577,1581,1585,1589],{"type":488,"tag":535,"props":1562,"children":1563},{"style":859},[1564],{"type":493,"value":1181},{"type":488,"tag":535,"props":1566,"children":1567},{"style":769},[1568],{"type":493,"value":867},{"type":488,"tag":535,"props":1570,"children":1571},{"style":797},[1572],{"type":493,"value":872},{"type":488,"tag":535,"props":1574,"children":1575},{"style":769},[1576],{"type":493,"value":867},{"type":488,"tag":535,"props":1578,"children":1579},{"style":820},[1580],{"type":493,"value":1198},{"type":488,"tag":535,"props":1582,"children":1583},{"style":769},[1584],{"type":493,"value":1101},{"type":488,"tag":535,"props":1586,"children":1587},{"style":797},[1588],{"type":493,"value":1054},{"type":488,"tag":535,"props":1590,"children":1591},{"style":769},[1592],{"type":493,"value":1165},{"type":488,"tag":535,"props":1594,"children":1596},{"class":537,"line":1595},34,[1597,1602,1607],{"type":488,"tag":535,"props":1598,"children":1599},{"style":769},[1600],{"type":493,"value":1601},"  }",{"type":488,"tag":535,"props":1603,"children":1604},{"style":775},[1605],{"type":493,"value":1606}," else",{"type":488,"tag":535,"props":1608,"children":1609},{"style":769},[1610],{"type":493,"value":853},{"type":488,"tag":535,"props":1612,"children":1614},{"class":537,"line":1613},35,[1615],{"type":488,"tag":535,"props":1616,"children":1617},{"style":755},[1618],{"type":493,"value":1619},"    // 插入数据前先判断，size 是否符合 capacity\n",{"type":488,"tag":535,"props":1621,"children":1623},{"class":537,"line":1622},36,[1624],{"type":488,"tag":535,"props":1625,"children":1626},{"style":755},[1627],{"type":493,"value":1628},"    // 已经 >= capacity，需要把最开始插入的数据删除掉\n",{"type":488,"tag":535,"props":1630,"children":1632},{"class":537,"line":1631},37,[1633],{"type":488,"tag":535,"props":1634,"children":1635},{"style":755},[1636],{"type":493,"value":1637},"    // keys() 方法得到一个可遍历对象,执行 next( )拿到一个形如 { value: 'xxx', done: false } 的对象\n",{"type":488,"tag":535,"props":1639,"children":1641},{"class":537,"line":1640},38,[1642,1647,1651,1655,1659,1663,1667,1672,1677,1681,1685,1689,1693],{"type":488,"tag":535,"props":1643,"children":1644},{"style":775},[1645],{"type":493,"value":1646},"    if",{"type":488,"tag":535,"props":1648,"children":1649},{"style":769},[1650],{"type":493,"value":838},{"type":488,"tag":535,"props":1652,"children":1653},{"style":859},[1654],{"type":493,"value":1079},{"type":488,"tag":535,"props":1656,"children":1657},{"style":769},[1658],{"type":493,"value":867},{"type":488,"tag":535,"props":1660,"children":1661},{"style":797},[1662],{"type":493,"value":872},{"type":488,"tag":535,"props":1664,"children":1665},{"style":769},[1666],{"type":493,"value":867},{"type":488,"tag":535,"props":1668,"children":1669},{"style":797},[1670],{"type":493,"value":1671},"size",{"type":488,"tag":535,"props":1673,"children":1674},{"style":769},[1675],{"type":493,"value":1676}," >=",{"type":488,"tag":535,"props":1678,"children":1679},{"style":859},[1680],{"type":493,"value":1136},{"type":488,"tag":535,"props":1682,"children":1683},{"style":769},[1684],{"type":493,"value":867},{"type":488,"tag":535,"props":1686,"children":1687},{"style":797},[1688],{"type":493,"value":843},{"type":488,"tag":535,"props":1690,"children":1691},{"style":769},[1692],{"type":493,"value":848},{"type":488,"tag":535,"props":1694,"children":1695},{"style":769},[1696],{"type":493,"value":853},{"type":488,"tag":535,"props":1698,"children":1700},{"class":537,"line":1699},39,[1701,1706,1710,1714,1718,1722,1726,1730,1734,1738,1742,1747,1752,1757,1761,1766],{"type":488,"tag":535,"props":1702,"children":1703},{"style":859},[1704],{"type":493,"value":1705},"      this",{"type":488,"tag":535,"props":1707,"children":1708},{"style":769},[1709],{"type":493,"value":867},{"type":488,"tag":535,"props":1711,"children":1712},{"style":797},[1713],{"type":493,"value":872},{"type":488,"tag":535,"props":1715,"children":1716},{"style":769},[1717],{"type":493,"value":867},{"type":488,"tag":535,"props":1719,"children":1720},{"style":820},[1721],{"type":493,"value":1198},{"type":488,"tag":535,"props":1723,"children":1724},{"style":769},[1725],{"type":493,"value":1101},{"type":488,"tag":535,"props":1727,"children":1728},{"style":859},[1729],{"type":493,"value":1079},{"type":488,"tag":535,"props":1731,"children":1732},{"style":769},[1733],{"type":493,"value":867},{"type":488,"tag":535,"props":1735,"children":1736},{"style":797},[1737],{"type":493,"value":872},{"type":488,"tag":535,"props":1739,"children":1740},{"style":769},[1741],{"type":493,"value":867},{"type":488,"tag":535,"props":1743,"children":1744},{"style":820},[1745],{"type":493,"value":1746},"keys",{"type":488,"tag":535,"props":1748,"children":1749},{"style":769},[1750],{"type":493,"value":1751},"().",{"type":488,"tag":535,"props":1753,"children":1754},{"style":820},[1755],{"type":493,"value":1756},"next",{"type":488,"tag":535,"props":1758,"children":1759},{"style":769},[1760],{"type":493,"value":1751},{"type":488,"tag":535,"props":1762,"children":1763},{"style":797},[1764],{"type":493,"value":1765},"value",{"type":488,"tag":535,"props":1767,"children":1768},{"style":769},[1769],{"type":493,"value":1165},{"type":488,"tag":535,"props":1771,"children":1773},{"class":537,"line":1772},40,[1774],{"type":488,"tag":535,"props":1775,"children":1776},{"style":769},[1777],{"type":493,"value":1778},"    }\n",{"type":488,"tag":535,"props":1780,"children":1782},{"class":537,"line":1781},41,[1783],{"type":488,"tag":535,"props":1784,"children":1785},{"style":769},[1786],{"type":493,"value":1282},{"type":488,"tag":535,"props":1788,"children":1790},{"class":537,"line":1789},42,[1791,1795,1799,1803,1807,1811,1815,1819,1823,1827],{"type":488,"tag":535,"props":1792,"children":1793},{"style":859},[1794],{"type":493,"value":862},{"type":488,"tag":535,"props":1796,"children":1797},{"style":769},[1798],{"type":493,"value":867},{"type":488,"tag":535,"props":1800,"children":1801},{"style":797},[1802],{"type":493,"value":872},{"type":488,"tag":535,"props":1804,"children":1805},{"style":769},[1806],{"type":493,"value":867},{"type":488,"tag":535,"props":1808,"children":1809},{"style":820},[1810],{"type":493,"value":1235},{"type":488,"tag":535,"props":1812,"children":1813},{"style":769},[1814],{"type":493,"value":1101},{"type":488,"tag":535,"props":1816,"children":1817},{"style":797},[1818],{"type":493,"value":1054},{"type":488,"tag":535,"props":1820,"children":1821},{"style":769},[1822],{"type":493,"value":1248},{"type":488,"tag":535,"props":1824,"children":1825},{"style":797},[1826],{"type":493,"value":1482},{"type":488,"tag":535,"props":1828,"children":1829},{"style":769},[1830],{"type":493,"value":1165},{"type":488,"tag":535,"props":1832,"children":1834},{"class":537,"line":1833},43,[1835],{"type":488,"tag":535,"props":1836,"children":1837},{"style":769},[1838],{"type":493,"value":928},{"type":488,"tag":535,"props":1840,"children":1842},{"class":537,"line":1841},44,[1843],{"type":488,"tag":535,"props":1844,"children":1845},{"emptyLinePlaceholder":587},[1846],{"type":493,"value":590},{"type":488,"tag":535,"props":1848,"children":1850},{"class":537,"line":1849},45,[1851],{"type":488,"tag":535,"props":1852,"children":1853},{"style":755},[1854],{"type":493,"value":758},{"type":488,"tag":535,"props":1856,"children":1858},{"class":537,"line":1857},46,[1859],{"type":488,"tag":535,"props":1860,"children":1861},{"style":755},[1862],{"type":493,"value":1863}," * Your LRUCache object will be instantiated and called as such:\n",{"type":488,"tag":535,"props":1865,"children":1867},{"class":537,"line":1866},47,[1868],{"type":488,"tag":535,"props":1869,"children":1870},{"style":755},[1871],{"type":493,"value":1872}," * var obj = new LRUCache(capacity)\n",{"type":488,"tag":535,"props":1874,"children":1876},{"class":537,"line":1875},48,[1877],{"type":488,"tag":535,"props":1878,"children":1879},{"style":755},[1880],{"type":493,"value":1881}," * var param_1 = obj.get(key)\n",{"type":488,"tag":535,"props":1883,"children":1885},{"class":537,"line":1884},49,[1886],{"type":488,"tag":535,"props":1887,"children":1888},{"style":755},[1889],{"type":493,"value":1890}," * obj.put(key,value)\n",{"type":488,"tag":535,"props":1892,"children":1894},{"class":537,"line":1893},50,[1895],{"type":488,"tag":535,"props":1896,"children":1897},{"style":755},[1898],{"type":493,"value":808},{"type":488,"tag":1900,"props":1901,"children":1902},"style",{},[1903],{"type":493,"value":1904},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":574,"depth":574,"links":1906},[1907,1908],{"id":721,"depth":547,"text":721},{"id":731,"depth":547,"text":731,"children":1909},[1910],{"id":737,"depth":556,"text":740},"markdown","content:1.algorithm:3.leetcode:3.major:146.lru-cache.md","content","1.algorithm/3.leetcode/3.major/146.lru-cache.md","md",[1917,1919],{"_path":174,"title":173,"description":1918},"给你一个链表的头节点 head ，判断链表中是否有环。",{"_path":180,"title":179,"description":1920},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",1714046226128]