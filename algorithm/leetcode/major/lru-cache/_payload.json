[{"data":1,"prerenderedAt":1981},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/lru-cache":551,"/algorithm/leetcode/major/lru-cache-surround":1976},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":177,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":176,"description":555,"url":556,"body":557,"_type":1971,"_id":1972,"_source":1973,"_file":1974,"_extension":1975},"major",false,"","请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：","https://leetcode.cn/problems/lru-cache",{"type":558,"children":559,"toc":1965},"root",[560,567,587,592,597,763,768,791,797,802,807,814,1959],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":568,"props":569,"children":570},"ul",{},[571,577,582],{"type":561,"tag":572,"props":573,"children":574},"li",{},[575],{"type":566,"value":576},"LRUCache(int capacity) 以 正整数 作为容量 capacity 初始化 LRU 缓存",{"type":561,"tag":572,"props":578,"children":579},{},[580],{"type":566,"value":581},"int get(int key) 如果关键字 key 存在于缓存中，则返回关键字的值，否则返回 -1 。",{"type":561,"tag":572,"props":583,"children":584},{},[585],{"type":566,"value":586},"void put(int key, int value) 如果关键字 key 已经存在，则变更其数据值 value ；如果不存在，则向缓存中插入该组 key-value 。如果插入操作导致关键字数量超过 capacity ，则应该 逐出 最久未使用的关键字。",{"type":561,"tag":562,"props":588,"children":589},{},[590],{"type":566,"value":591},"函数 get 和 put 必须以 O(1) 的平均时间复杂度运行。",{"type":561,"tag":562,"props":593,"children":594},{},[595],{"type":566,"value":596},"示例：",{"type":561,"tag":598,"props":599,"children":602},"pre",{"className":600,"code":601,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n输出\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n解释\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // 缓存是 {1=1}\nlRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\nlRUCache.get(1); // 返回 1\nlRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\nlRUCache.get(2); // 返回 -1 (未找到)\nlRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\nlRUCache.get(1); // 返回 -1 (未找到)\nlRUCache.get(3); // 返回 3\nlRUCache.get(4); // 返回 4\n",[603],{"type":561,"tag":604,"props":605,"children":606},"code",{"__ignoreMap":554},[607,618,627,636,645,654,664,673,682,691,700,709,718,727,736,745,754],{"type":561,"tag":608,"props":609,"children":612},"span",{"class":610,"line":611},"line",1,[613],{"type":561,"tag":608,"props":614,"children":615},{},[616],{"type":566,"value":617},"输入\n",{"type":561,"tag":608,"props":619,"children":621},{"class":610,"line":620},2,[622],{"type":561,"tag":608,"props":623,"children":624},{},[625],{"type":566,"value":626},"[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n",{"type":561,"tag":608,"props":628,"children":630},{"class":610,"line":629},3,[631],{"type":561,"tag":608,"props":632,"children":633},{},[634],{"type":566,"value":635},"[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n",{"type":561,"tag":608,"props":637,"children":639},{"class":610,"line":638},4,[640],{"type":561,"tag":608,"props":641,"children":642},{},[643],{"type":566,"value":644},"输出\n",{"type":561,"tag":608,"props":646,"children":648},{"class":610,"line":647},5,[649],{"type":561,"tag":608,"props":650,"children":651},{},[652],{"type":566,"value":653},"[null, null, null, 1, null, -1, null, -1, 3, 4]\n",{"type":561,"tag":608,"props":655,"children":657},{"class":610,"line":656},6,[658],{"type":561,"tag":608,"props":659,"children":661},{"emptyLinePlaceholder":660},true,[662],{"type":566,"value":663},"\n",{"type":561,"tag":608,"props":665,"children":667},{"class":610,"line":666},7,[668],{"type":561,"tag":608,"props":669,"children":670},{},[671],{"type":566,"value":672},"解释\n",{"type":561,"tag":608,"props":674,"children":676},{"class":610,"line":675},8,[677],{"type":561,"tag":608,"props":678,"children":679},{},[680],{"type":566,"value":681},"LRUCache lRUCache = new LRUCache(2);\n",{"type":561,"tag":608,"props":683,"children":685},{"class":610,"line":684},9,[686],{"type":561,"tag":608,"props":687,"children":688},{},[689],{"type":566,"value":690},"lRUCache.put(1, 1); // 缓存是 {1=1}\n",{"type":561,"tag":608,"props":692,"children":694},{"class":610,"line":693},10,[695],{"type":561,"tag":608,"props":696,"children":697},{},[698],{"type":566,"value":699},"lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}\n",{"type":561,"tag":608,"props":701,"children":703},{"class":610,"line":702},11,[704],{"type":561,"tag":608,"props":705,"children":706},{},[707],{"type":566,"value":708},"lRUCache.get(1); // 返回 1\n",{"type":561,"tag":608,"props":710,"children":712},{"class":610,"line":711},12,[713],{"type":561,"tag":608,"props":714,"children":715},{},[716],{"type":566,"value":717},"lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}\n",{"type":561,"tag":608,"props":719,"children":721},{"class":610,"line":720},13,[722],{"type":561,"tag":608,"props":723,"children":724},{},[725],{"type":566,"value":726},"lRUCache.get(2); // 返回 -1 (未找到)\n",{"type":561,"tag":608,"props":728,"children":730},{"class":610,"line":729},14,[731],{"type":561,"tag":608,"props":732,"children":733},{},[734],{"type":566,"value":735},"lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}\n",{"type":561,"tag":608,"props":737,"children":739},{"class":610,"line":738},15,[740],{"type":561,"tag":608,"props":741,"children":742},{},[743],{"type":566,"value":744},"lRUCache.get(1); // 返回 -1 (未找到)\n",{"type":561,"tag":608,"props":746,"children":748},{"class":610,"line":747},16,[749],{"type":561,"tag":608,"props":750,"children":751},{},[752],{"type":566,"value":753},"lRUCache.get(3); // 返回 3\n",{"type":561,"tag":608,"props":755,"children":757},{"class":610,"line":756},17,[758],{"type":561,"tag":608,"props":759,"children":760},{},[761],{"type":566,"value":762},"lRUCache.get(4); // 返回 4\n",{"type":561,"tag":562,"props":764,"children":765},{},[766],{"type":566,"value":767},"提示：",{"type":561,"tag":568,"props":769,"children":770},{},[771,776,781,786],{"type":561,"tag":572,"props":772,"children":773},{},[774],{"type":566,"value":775},"1 \u003C= capacity \u003C= 3000",{"type":561,"tag":572,"props":777,"children":778},{},[779],{"type":566,"value":780},"0 \u003C= key \u003C= 10000",{"type":561,"tag":572,"props":782,"children":783},{},[784],{"type":566,"value":785},"0 \u003C= value \u003C= 105",{"type":561,"tag":572,"props":787,"children":788},{},[789],{"type":566,"value":790},"最多调用 2 * 10^5 次 get 和 put",{"type":561,"tag":792,"props":793,"children":795},"h2",{"id":794},"解题思路",[796],{"type":566,"value":794},{"type":561,"tag":562,"props":798,"children":799},{},[800],{"type":566,"value":801},"题目要求的 1 和 2 相对简单，主要是条件 3，当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值",{"type":561,"tag":792,"props":803,"children":805},{"id":804},"实现",[806],{"type":566,"value":804},{"type":561,"tag":808,"props":809,"children":811},"h3",{"id":810},"map-方案",[812],{"type":566,"value":813},"Map 方案",{"type":561,"tag":598,"props":815,"children":819},{"className":816,"code":817,"language":818,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} capacity\n */\nvar LRUCache = function (capacity) {\n  this.cache = new Map();\n  this.capacity = capacity;\n};\n\n/**\n* @param {number} key\n* @return {number}\n*/\nLRUCache.prototype.get = function (key) {\n  if (!this.cache.has(key)) return -1;\n  const val = this.cache.get(key);\n  // 更新位置 => 先删除后添加\n  this.cache.delete(key);\n  this.cache.set(key, val);\n  return val;\n};\n\n/**\n* @param {number} key\n* @param {number} value\n* @return {void}\n*/\nLRUCache.prototype.put = function (key, value) {\n  // 已经存在的情况下，更新其位置到\"最新\"即可 => 先删除，后插入\n  if (this.cache.has(key)) {\n    this.cache.delete(key);\n  }\n  this.cache.set(key, value);\n\n  if (this.cache.size > this.capacity) {\n    // 如果超出 map 最大范围，找到第一个删除\n    // keys() 得到一个迭代器对象\n    const firstKey = this.cache.keys().next().value;\n    this.cache.delete(firstKey);\n  }\n}\n\n/**\n* Your LRUCache object will be instantiated and called as such:\n* var obj = new LRUCache(capacity)\n* var param_1 = obj.get(key)\n* obj.put(key,value)\n*/\n","js",[820],{"type":561,"tag":604,"props":821,"children":822},{"__ignoreMap":554},[823,832,874,882,927,965,994,1002,1009,1016,1049,1078,1086,1138,1211,1262,1270,1306,1352,1369,1377,1385,1393,1425,1458,1487,1495,1553,1562,1610,1647,1656,1700,1708,1766,1775,1784,1846,1883,1891,1899,1907,1915,1924,1933,1942,1951],{"type":561,"tag":608,"props":824,"children":825},{"class":610,"line":611},[826],{"type":561,"tag":608,"props":827,"children":829},{"style":828},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[830],{"type":566,"value":831},"/**\n",{"type":561,"tag":608,"props":833,"children":834},{"class":610,"line":620},[835,840,846,852,857,863,868],{"type":561,"tag":608,"props":836,"children":837},{"style":828},[838],{"type":566,"value":839}," * ",{"type":561,"tag":608,"props":841,"children":843},{"style":842},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[844],{"type":566,"value":845},"@",{"type":561,"tag":608,"props":847,"children":849},{"style":848},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[850],{"type":566,"value":851},"param",{"type":561,"tag":608,"props":853,"children":854},{"style":842},[855],{"type":566,"value":856}," {",{"type":561,"tag":608,"props":858,"children":860},{"style":859},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[861],{"type":566,"value":862},"number",{"type":561,"tag":608,"props":864,"children":865},{"style":842},[866],{"type":566,"value":867},"}",{"type":561,"tag":608,"props":869,"children":871},{"style":870},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[872],{"type":566,"value":873}," capacity\n",{"type":561,"tag":608,"props":875,"children":876},{"class":610,"line":629},[877],{"type":561,"tag":608,"props":878,"children":879},{"style":828},[880],{"type":566,"value":881}," */\n",{"type":561,"tag":608,"props":883,"children":884},{"class":610,"line":638},[885,891,897,902,907,912,917,922],{"type":561,"tag":608,"props":886,"children":888},{"style":887},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[889],{"type":566,"value":890},"var",{"type":561,"tag":608,"props":892,"children":894},{"style":893},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[895],{"type":566,"value":896}," LRUCache",{"type":561,"tag":608,"props":898,"children":899},{"style":842},[900],{"type":566,"value":901}," =",{"type":561,"tag":608,"props":903,"children":904},{"style":887},[905],{"type":566,"value":906}," function",{"type":561,"tag":608,"props":908,"children":909},{"style":842},[910],{"type":566,"value":911}," (",{"type":561,"tag":608,"props":913,"children":914},{"style":870},[915],{"type":566,"value":916},"capacity",{"type":561,"tag":608,"props":918,"children":919},{"style":842},[920],{"type":566,"value":921},")",{"type":561,"tag":608,"props":923,"children":924},{"style":842},[925],{"type":566,"value":926}," {\n",{"type":561,"tag":608,"props":928,"children":929},{"class":610,"line":647},[930,936,941,946,950,955,960],{"type":561,"tag":608,"props":931,"children":933},{"style":932},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[934],{"type":566,"value":935},"  this",{"type":561,"tag":608,"props":937,"children":938},{"style":842},[939],{"type":566,"value":940},".",{"type":561,"tag":608,"props":942,"children":943},{"style":870},[944],{"type":566,"value":945},"cache",{"type":561,"tag":608,"props":947,"children":948},{"style":842},[949],{"type":566,"value":901},{"type":561,"tag":608,"props":951,"children":952},{"style":887},[953],{"type":566,"value":954}," new",{"type":561,"tag":608,"props":956,"children":957},{"style":893},[958],{"type":566,"value":959}," Map",{"type":561,"tag":608,"props":961,"children":962},{"style":842},[963],{"type":566,"value":964},"();\n",{"type":561,"tag":608,"props":966,"children":967},{"class":610,"line":656},[968,972,976,980,984,989],{"type":561,"tag":608,"props":969,"children":970},{"style":932},[971],{"type":566,"value":935},{"type":561,"tag":608,"props":973,"children":974},{"style":842},[975],{"type":566,"value":940},{"type":561,"tag":608,"props":977,"children":978},{"style":870},[979],{"type":566,"value":916},{"type":561,"tag":608,"props":981,"children":982},{"style":842},[983],{"type":566,"value":901},{"type":561,"tag":608,"props":985,"children":986},{"style":870},[987],{"type":566,"value":988}," capacity",{"type":561,"tag":608,"props":990,"children":991},{"style":842},[992],{"type":566,"value":993},";\n",{"type":561,"tag":608,"props":995,"children":996},{"class":610,"line":666},[997],{"type":561,"tag":608,"props":998,"children":999},{"style":842},[1000],{"type":566,"value":1001},"};\n",{"type":561,"tag":608,"props":1003,"children":1004},{"class":610,"line":675},[1005],{"type":561,"tag":608,"props":1006,"children":1007},{"emptyLinePlaceholder":660},[1008],{"type":566,"value":663},{"type":561,"tag":608,"props":1010,"children":1011},{"class":610,"line":684},[1012],{"type":561,"tag":608,"props":1013,"children":1014},{"style":828},[1015],{"type":566,"value":831},{"type":561,"tag":608,"props":1017,"children":1018},{"class":610,"line":693},[1019,1024,1028,1032,1036,1040,1044],{"type":561,"tag":608,"props":1020,"children":1021},{"style":828},[1022],{"type":566,"value":1023},"* ",{"type":561,"tag":608,"props":1025,"children":1026},{"style":842},[1027],{"type":566,"value":845},{"type":561,"tag":608,"props":1029,"children":1030},{"style":848},[1031],{"type":566,"value":851},{"type":561,"tag":608,"props":1033,"children":1034},{"style":842},[1035],{"type":566,"value":856},{"type":561,"tag":608,"props":1037,"children":1038},{"style":859},[1039],{"type":566,"value":862},{"type":561,"tag":608,"props":1041,"children":1042},{"style":842},[1043],{"type":566,"value":867},{"type":561,"tag":608,"props":1045,"children":1046},{"style":870},[1047],{"type":566,"value":1048}," key\n",{"type":561,"tag":608,"props":1050,"children":1051},{"class":610,"line":702},[1052,1056,1060,1065,1069,1073],{"type":561,"tag":608,"props":1053,"children":1054},{"style":828},[1055],{"type":566,"value":1023},{"type":561,"tag":608,"props":1057,"children":1058},{"style":842},[1059],{"type":566,"value":845},{"type":561,"tag":608,"props":1061,"children":1062},{"style":848},[1063],{"type":566,"value":1064},"return",{"type":561,"tag":608,"props":1066,"children":1067},{"style":842},[1068],{"type":566,"value":856},{"type":561,"tag":608,"props":1070,"children":1071},{"style":859},[1072],{"type":566,"value":862},{"type":561,"tag":608,"props":1074,"children":1075},{"style":842},[1076],{"type":566,"value":1077},"}\n",{"type":561,"tag":608,"props":1079,"children":1080},{"class":610,"line":711},[1081],{"type":561,"tag":608,"props":1082,"children":1083},{"style":828},[1084],{"type":566,"value":1085},"*/\n",{"type":561,"tag":608,"props":1087,"children":1088},{"class":610,"line":720},[1089,1095,1099,1104,1108,1113,1117,1121,1125,1130,1134],{"type":561,"tag":608,"props":1090,"children":1092},{"style":1091},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1093],{"type":566,"value":1094},"LRUCache",{"type":561,"tag":608,"props":1096,"children":1097},{"style":842},[1098],{"type":566,"value":940},{"type":561,"tag":608,"props":1100,"children":1101},{"style":1091},[1102],{"type":566,"value":1103},"prototype",{"type":561,"tag":608,"props":1105,"children":1106},{"style":842},[1107],{"type":566,"value":940},{"type":561,"tag":608,"props":1109,"children":1110},{"style":893},[1111],{"type":566,"value":1112},"get",{"type":561,"tag":608,"props":1114,"children":1115},{"style":842},[1116],{"type":566,"value":901},{"type":561,"tag":608,"props":1118,"children":1119},{"style":887},[1120],{"type":566,"value":906},{"type":561,"tag":608,"props":1122,"children":1123},{"style":842},[1124],{"type":566,"value":911},{"type":561,"tag":608,"props":1126,"children":1127},{"style":870},[1128],{"type":566,"value":1129},"key",{"type":561,"tag":608,"props":1131,"children":1132},{"style":842},[1133],{"type":566,"value":921},{"type":561,"tag":608,"props":1135,"children":1136},{"style":842},[1137],{"type":566,"value":926},{"type":561,"tag":608,"props":1139,"children":1140},{"class":610,"line":729},[1141,1146,1150,1155,1160,1164,1168,1172,1177,1182,1186,1191,1196,1201,1207],{"type":561,"tag":608,"props":1142,"children":1143},{"style":848},[1144],{"type":566,"value":1145},"  if",{"type":561,"tag":608,"props":1147,"children":1148},{"style":842},[1149],{"type":566,"value":911},{"type":561,"tag":608,"props":1151,"children":1152},{"style":887},[1153],{"type":566,"value":1154},"!",{"type":561,"tag":608,"props":1156,"children":1157},{"style":932},[1158],{"type":566,"value":1159},"this",{"type":561,"tag":608,"props":1161,"children":1162},{"style":842},[1163],{"type":566,"value":940},{"type":561,"tag":608,"props":1165,"children":1166},{"style":870},[1167],{"type":566,"value":945},{"type":561,"tag":608,"props":1169,"children":1170},{"style":842},[1171],{"type":566,"value":940},{"type":561,"tag":608,"props":1173,"children":1174},{"style":893},[1175],{"type":566,"value":1176},"has",{"type":561,"tag":608,"props":1178,"children":1179},{"style":842},[1180],{"type":566,"value":1181},"(",{"type":561,"tag":608,"props":1183,"children":1184},{"style":870},[1185],{"type":566,"value":1129},{"type":561,"tag":608,"props":1187,"children":1188},{"style":842},[1189],{"type":566,"value":1190},"))",{"type":561,"tag":608,"props":1192,"children":1193},{"style":848},[1194],{"type":566,"value":1195}," return",{"type":561,"tag":608,"props":1197,"children":1198},{"style":887},[1199],{"type":566,"value":1200}," -",{"type":561,"tag":608,"props":1202,"children":1204},{"style":1203},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1205],{"type":566,"value":1206},"1",{"type":561,"tag":608,"props":1208,"children":1209},{"style":842},[1210],{"type":566,"value":993},{"type":561,"tag":608,"props":1212,"children":1213},{"class":610,"line":738},[1214,1219,1224,1228,1233,1237,1241,1245,1249,1253,1257],{"type":561,"tag":608,"props":1215,"children":1216},{"style":887},[1217],{"type":566,"value":1218},"  const",{"type":561,"tag":608,"props":1220,"children":1221},{"style":870},[1222],{"type":566,"value":1223}," val",{"type":561,"tag":608,"props":1225,"children":1226},{"style":842},[1227],{"type":566,"value":901},{"type":561,"tag":608,"props":1229,"children":1230},{"style":932},[1231],{"type":566,"value":1232}," this",{"type":561,"tag":608,"props":1234,"children":1235},{"style":842},[1236],{"type":566,"value":940},{"type":561,"tag":608,"props":1238,"children":1239},{"style":870},[1240],{"type":566,"value":945},{"type":561,"tag":608,"props":1242,"children":1243},{"style":842},[1244],{"type":566,"value":940},{"type":561,"tag":608,"props":1246,"children":1247},{"style":893},[1248],{"type":566,"value":1112},{"type":561,"tag":608,"props":1250,"children":1251},{"style":842},[1252],{"type":566,"value":1181},{"type":561,"tag":608,"props":1254,"children":1255},{"style":870},[1256],{"type":566,"value":1129},{"type":561,"tag":608,"props":1258,"children":1259},{"style":842},[1260],{"type":566,"value":1261},");\n",{"type":561,"tag":608,"props":1263,"children":1264},{"class":610,"line":747},[1265],{"type":561,"tag":608,"props":1266,"children":1267},{"style":828},[1268],{"type":566,"value":1269},"  // 更新位置 => 先删除后添加\n",{"type":561,"tag":608,"props":1271,"children":1272},{"class":610,"line":756},[1273,1277,1281,1285,1289,1294,1298,1302],{"type":561,"tag":608,"props":1274,"children":1275},{"style":932},[1276],{"type":566,"value":935},{"type":561,"tag":608,"props":1278,"children":1279},{"style":842},[1280],{"type":566,"value":940},{"type":561,"tag":608,"props":1282,"children":1283},{"style":870},[1284],{"type":566,"value":945},{"type":561,"tag":608,"props":1286,"children":1287},{"style":842},[1288],{"type":566,"value":940},{"type":561,"tag":608,"props":1290,"children":1291},{"style":893},[1292],{"type":566,"value":1293},"delete",{"type":561,"tag":608,"props":1295,"children":1296},{"style":842},[1297],{"type":566,"value":1181},{"type":561,"tag":608,"props":1299,"children":1300},{"style":870},[1301],{"type":566,"value":1129},{"type":561,"tag":608,"props":1303,"children":1304},{"style":842},[1305],{"type":566,"value":1261},{"type":561,"tag":608,"props":1307,"children":1309},{"class":610,"line":1308},18,[1310,1314,1318,1322,1326,1331,1335,1339,1344,1348],{"type":561,"tag":608,"props":1311,"children":1312},{"style":932},[1313],{"type":566,"value":935},{"type":561,"tag":608,"props":1315,"children":1316},{"style":842},[1317],{"type":566,"value":940},{"type":561,"tag":608,"props":1319,"children":1320},{"style":870},[1321],{"type":566,"value":945},{"type":561,"tag":608,"props":1323,"children":1324},{"style":842},[1325],{"type":566,"value":940},{"type":561,"tag":608,"props":1327,"children":1328},{"style":893},[1329],{"type":566,"value":1330},"set",{"type":561,"tag":608,"props":1332,"children":1333},{"style":842},[1334],{"type":566,"value":1181},{"type":561,"tag":608,"props":1336,"children":1337},{"style":870},[1338],{"type":566,"value":1129},{"type":561,"tag":608,"props":1340,"children":1341},{"style":842},[1342],{"type":566,"value":1343},",",{"type":561,"tag":608,"props":1345,"children":1346},{"style":870},[1347],{"type":566,"value":1223},{"type":561,"tag":608,"props":1349,"children":1350},{"style":842},[1351],{"type":566,"value":1261},{"type":561,"tag":608,"props":1353,"children":1355},{"class":610,"line":1354},19,[1356,1361,1365],{"type":561,"tag":608,"props":1357,"children":1358},{"style":848},[1359],{"type":566,"value":1360},"  return",{"type":561,"tag":608,"props":1362,"children":1363},{"style":870},[1364],{"type":566,"value":1223},{"type":561,"tag":608,"props":1366,"children":1367},{"style":842},[1368],{"type":566,"value":993},{"type":561,"tag":608,"props":1370,"children":1372},{"class":610,"line":1371},20,[1373],{"type":561,"tag":608,"props":1374,"children":1375},{"style":842},[1376],{"type":566,"value":1001},{"type":561,"tag":608,"props":1378,"children":1380},{"class":610,"line":1379},21,[1381],{"type":561,"tag":608,"props":1382,"children":1383},{"emptyLinePlaceholder":660},[1384],{"type":566,"value":663},{"type":561,"tag":608,"props":1386,"children":1388},{"class":610,"line":1387},22,[1389],{"type":561,"tag":608,"props":1390,"children":1391},{"style":828},[1392],{"type":566,"value":831},{"type":561,"tag":608,"props":1394,"children":1396},{"class":610,"line":1395},23,[1397,1401,1405,1409,1413,1417,1421],{"type":561,"tag":608,"props":1398,"children":1399},{"style":828},[1400],{"type":566,"value":1023},{"type":561,"tag":608,"props":1402,"children":1403},{"style":842},[1404],{"type":566,"value":845},{"type":561,"tag":608,"props":1406,"children":1407},{"style":848},[1408],{"type":566,"value":851},{"type":561,"tag":608,"props":1410,"children":1411},{"style":842},[1412],{"type":566,"value":856},{"type":561,"tag":608,"props":1414,"children":1415},{"style":859},[1416],{"type":566,"value":862},{"type":561,"tag":608,"props":1418,"children":1419},{"style":842},[1420],{"type":566,"value":867},{"type":561,"tag":608,"props":1422,"children":1423},{"style":870},[1424],{"type":566,"value":1048},{"type":561,"tag":608,"props":1426,"children":1428},{"class":610,"line":1427},24,[1429,1433,1437,1441,1445,1449,1453],{"type":561,"tag":608,"props":1430,"children":1431},{"style":828},[1432],{"type":566,"value":1023},{"type":561,"tag":608,"props":1434,"children":1435},{"style":842},[1436],{"type":566,"value":845},{"type":561,"tag":608,"props":1438,"children":1439},{"style":848},[1440],{"type":566,"value":851},{"type":561,"tag":608,"props":1442,"children":1443},{"style":842},[1444],{"type":566,"value":856},{"type":561,"tag":608,"props":1446,"children":1447},{"style":859},[1448],{"type":566,"value":862},{"type":561,"tag":608,"props":1450,"children":1451},{"style":842},[1452],{"type":566,"value":867},{"type":561,"tag":608,"props":1454,"children":1455},{"style":870},[1456],{"type":566,"value":1457}," value\n",{"type":561,"tag":608,"props":1459,"children":1461},{"class":610,"line":1460},25,[1462,1466,1470,1474,1478,1483],{"type":561,"tag":608,"props":1463,"children":1464},{"style":828},[1465],{"type":566,"value":1023},{"type":561,"tag":608,"props":1467,"children":1468},{"style":842},[1469],{"type":566,"value":845},{"type":561,"tag":608,"props":1471,"children":1472},{"style":848},[1473],{"type":566,"value":1064},{"type":561,"tag":608,"props":1475,"children":1476},{"style":842},[1477],{"type":566,"value":856},{"type":561,"tag":608,"props":1479,"children":1480},{"style":859},[1481],{"type":566,"value":1482},"void",{"type":561,"tag":608,"props":1484,"children":1485},{"style":842},[1486],{"type":566,"value":1077},{"type":561,"tag":608,"props":1488,"children":1490},{"class":610,"line":1489},26,[1491],{"type":561,"tag":608,"props":1492,"children":1493},{"style":828},[1494],{"type":566,"value":1085},{"type":561,"tag":608,"props":1496,"children":1498},{"class":610,"line":1497},27,[1499,1503,1507,1511,1515,1520,1524,1528,1532,1536,1540,1545,1549],{"type":561,"tag":608,"props":1500,"children":1501},{"style":1091},[1502],{"type":566,"value":1094},{"type":561,"tag":608,"props":1504,"children":1505},{"style":842},[1506],{"type":566,"value":940},{"type":561,"tag":608,"props":1508,"children":1509},{"style":1091},[1510],{"type":566,"value":1103},{"type":561,"tag":608,"props":1512,"children":1513},{"style":842},[1514],{"type":566,"value":940},{"type":561,"tag":608,"props":1516,"children":1517},{"style":893},[1518],{"type":566,"value":1519},"put",{"type":561,"tag":608,"props":1521,"children":1522},{"style":842},[1523],{"type":566,"value":901},{"type":561,"tag":608,"props":1525,"children":1526},{"style":887},[1527],{"type":566,"value":906},{"type":561,"tag":608,"props":1529,"children":1530},{"style":842},[1531],{"type":566,"value":911},{"type":561,"tag":608,"props":1533,"children":1534},{"style":870},[1535],{"type":566,"value":1129},{"type":561,"tag":608,"props":1537,"children":1538},{"style":842},[1539],{"type":566,"value":1343},{"type":561,"tag":608,"props":1541,"children":1542},{"style":870},[1543],{"type":566,"value":1544}," value",{"type":561,"tag":608,"props":1546,"children":1547},{"style":842},[1548],{"type":566,"value":921},{"type":561,"tag":608,"props":1550,"children":1551},{"style":842},[1552],{"type":566,"value":926},{"type":561,"tag":608,"props":1554,"children":1556},{"class":610,"line":1555},28,[1557],{"type":561,"tag":608,"props":1558,"children":1559},{"style":828},[1560],{"type":566,"value":1561},"  // 已经存在的情况下，更新其位置到\"最新\"即可 => 先删除，后插入\n",{"type":561,"tag":608,"props":1563,"children":1565},{"class":610,"line":1564},29,[1566,1570,1574,1578,1582,1586,1590,1594,1598,1602,1606],{"type":561,"tag":608,"props":1567,"children":1568},{"style":848},[1569],{"type":566,"value":1145},{"type":561,"tag":608,"props":1571,"children":1572},{"style":842},[1573],{"type":566,"value":911},{"type":561,"tag":608,"props":1575,"children":1576},{"style":932},[1577],{"type":566,"value":1159},{"type":561,"tag":608,"props":1579,"children":1580},{"style":842},[1581],{"type":566,"value":940},{"type":561,"tag":608,"props":1583,"children":1584},{"style":870},[1585],{"type":566,"value":945},{"type":561,"tag":608,"props":1587,"children":1588},{"style":842},[1589],{"type":566,"value":940},{"type":561,"tag":608,"props":1591,"children":1592},{"style":893},[1593],{"type":566,"value":1176},{"type":561,"tag":608,"props":1595,"children":1596},{"style":842},[1597],{"type":566,"value":1181},{"type":561,"tag":608,"props":1599,"children":1600},{"style":870},[1601],{"type":566,"value":1129},{"type":561,"tag":608,"props":1603,"children":1604},{"style":842},[1605],{"type":566,"value":1190},{"type":561,"tag":608,"props":1607,"children":1608},{"style":842},[1609],{"type":566,"value":926},{"type":561,"tag":608,"props":1611,"children":1613},{"class":610,"line":1612},30,[1614,1619,1623,1627,1631,1635,1639,1643],{"type":561,"tag":608,"props":1615,"children":1616},{"style":932},[1617],{"type":566,"value":1618},"    this",{"type":561,"tag":608,"props":1620,"children":1621},{"style":842},[1622],{"type":566,"value":940},{"type":561,"tag":608,"props":1624,"children":1625},{"style":870},[1626],{"type":566,"value":945},{"type":561,"tag":608,"props":1628,"children":1629},{"style":842},[1630],{"type":566,"value":940},{"type":561,"tag":608,"props":1632,"children":1633},{"style":893},[1634],{"type":566,"value":1293},{"type":561,"tag":608,"props":1636,"children":1637},{"style":842},[1638],{"type":566,"value":1181},{"type":561,"tag":608,"props":1640,"children":1641},{"style":870},[1642],{"type":566,"value":1129},{"type":561,"tag":608,"props":1644,"children":1645},{"style":842},[1646],{"type":566,"value":1261},{"type":561,"tag":608,"props":1648,"children":1650},{"class":610,"line":1649},31,[1651],{"type":561,"tag":608,"props":1652,"children":1653},{"style":842},[1654],{"type":566,"value":1655},"  }\n",{"type":561,"tag":608,"props":1657,"children":1659},{"class":610,"line":1658},32,[1660,1664,1668,1672,1676,1680,1684,1688,1692,1696],{"type":561,"tag":608,"props":1661,"children":1662},{"style":932},[1663],{"type":566,"value":935},{"type":561,"tag":608,"props":1665,"children":1666},{"style":842},[1667],{"type":566,"value":940},{"type":561,"tag":608,"props":1669,"children":1670},{"style":870},[1671],{"type":566,"value":945},{"type":561,"tag":608,"props":1673,"children":1674},{"style":842},[1675],{"type":566,"value":940},{"type":561,"tag":608,"props":1677,"children":1678},{"style":893},[1679],{"type":566,"value":1330},{"type":561,"tag":608,"props":1681,"children":1682},{"style":842},[1683],{"type":566,"value":1181},{"type":561,"tag":608,"props":1685,"children":1686},{"style":870},[1687],{"type":566,"value":1129},{"type":561,"tag":608,"props":1689,"children":1690},{"style":842},[1691],{"type":566,"value":1343},{"type":561,"tag":608,"props":1693,"children":1694},{"style":870},[1695],{"type":566,"value":1544},{"type":561,"tag":608,"props":1697,"children":1698},{"style":842},[1699],{"type":566,"value":1261},{"type":561,"tag":608,"props":1701,"children":1703},{"class":610,"line":1702},33,[1704],{"type":561,"tag":608,"props":1705,"children":1706},{"emptyLinePlaceholder":660},[1707],{"type":566,"value":663},{"type":561,"tag":608,"props":1709,"children":1711},{"class":610,"line":1710},34,[1712,1716,1720,1724,1728,1732,1736,1741,1746,1750,1754,1758,1762],{"type":561,"tag":608,"props":1713,"children":1714},{"style":848},[1715],{"type":566,"value":1145},{"type":561,"tag":608,"props":1717,"children":1718},{"style":842},[1719],{"type":566,"value":911},{"type":561,"tag":608,"props":1721,"children":1722},{"style":932},[1723],{"type":566,"value":1159},{"type":561,"tag":608,"props":1725,"children":1726},{"style":842},[1727],{"type":566,"value":940},{"type":561,"tag":608,"props":1729,"children":1730},{"style":870},[1731],{"type":566,"value":945},{"type":561,"tag":608,"props":1733,"children":1734},{"style":842},[1735],{"type":566,"value":940},{"type":561,"tag":608,"props":1737,"children":1738},{"style":870},[1739],{"type":566,"value":1740},"size",{"type":561,"tag":608,"props":1742,"children":1743},{"style":842},[1744],{"type":566,"value":1745}," >",{"type":561,"tag":608,"props":1747,"children":1748},{"style":932},[1749],{"type":566,"value":1232},{"type":561,"tag":608,"props":1751,"children":1752},{"style":842},[1753],{"type":566,"value":940},{"type":561,"tag":608,"props":1755,"children":1756},{"style":870},[1757],{"type":566,"value":916},{"type":561,"tag":608,"props":1759,"children":1760},{"style":842},[1761],{"type":566,"value":921},{"type":561,"tag":608,"props":1763,"children":1764},{"style":842},[1765],{"type":566,"value":926},{"type":561,"tag":608,"props":1767,"children":1769},{"class":610,"line":1768},35,[1770],{"type":561,"tag":608,"props":1771,"children":1772},{"style":828},[1773],{"type":566,"value":1774},"    // 如果超出 map 最大范围，找到第一个删除\n",{"type":561,"tag":608,"props":1776,"children":1778},{"class":610,"line":1777},36,[1779],{"type":561,"tag":608,"props":1780,"children":1781},{"style":828},[1782],{"type":566,"value":1783},"    // keys() 得到一个迭代器对象\n",{"type":561,"tag":608,"props":1785,"children":1787},{"class":610,"line":1786},37,[1788,1793,1798,1802,1806,1810,1814,1818,1823,1828,1833,1837,1842],{"type":561,"tag":608,"props":1789,"children":1790},{"style":887},[1791],{"type":566,"value":1792},"    const",{"type":561,"tag":608,"props":1794,"children":1795},{"style":870},[1796],{"type":566,"value":1797}," firstKey",{"type":561,"tag":608,"props":1799,"children":1800},{"style":842},[1801],{"type":566,"value":901},{"type":561,"tag":608,"props":1803,"children":1804},{"style":932},[1805],{"type":566,"value":1232},{"type":561,"tag":608,"props":1807,"children":1808},{"style":842},[1809],{"type":566,"value":940},{"type":561,"tag":608,"props":1811,"children":1812},{"style":870},[1813],{"type":566,"value":945},{"type":561,"tag":608,"props":1815,"children":1816},{"style":842},[1817],{"type":566,"value":940},{"type":561,"tag":608,"props":1819,"children":1820},{"style":893},[1821],{"type":566,"value":1822},"keys",{"type":561,"tag":608,"props":1824,"children":1825},{"style":842},[1826],{"type":566,"value":1827},"().",{"type":561,"tag":608,"props":1829,"children":1830},{"style":893},[1831],{"type":566,"value":1832},"next",{"type":561,"tag":608,"props":1834,"children":1835},{"style":842},[1836],{"type":566,"value":1827},{"type":561,"tag":608,"props":1838,"children":1839},{"style":870},[1840],{"type":566,"value":1841},"value",{"type":561,"tag":608,"props":1843,"children":1844},{"style":842},[1845],{"type":566,"value":993},{"type":561,"tag":608,"props":1847,"children":1849},{"class":610,"line":1848},38,[1850,1854,1858,1862,1866,1870,1874,1879],{"type":561,"tag":608,"props":1851,"children":1852},{"style":932},[1853],{"type":566,"value":1618},{"type":561,"tag":608,"props":1855,"children":1856},{"style":842},[1857],{"type":566,"value":940},{"type":561,"tag":608,"props":1859,"children":1860},{"style":870},[1861],{"type":566,"value":945},{"type":561,"tag":608,"props":1863,"children":1864},{"style":842},[1865],{"type":566,"value":940},{"type":561,"tag":608,"props":1867,"children":1868},{"style":893},[1869],{"type":566,"value":1293},{"type":561,"tag":608,"props":1871,"children":1872},{"style":842},[1873],{"type":566,"value":1181},{"type":561,"tag":608,"props":1875,"children":1876},{"style":870},[1877],{"type":566,"value":1878},"firstKey",{"type":561,"tag":608,"props":1880,"children":1881},{"style":842},[1882],{"type":566,"value":1261},{"type":561,"tag":608,"props":1884,"children":1886},{"class":610,"line":1885},39,[1887],{"type":561,"tag":608,"props":1888,"children":1889},{"style":842},[1890],{"type":566,"value":1655},{"type":561,"tag":608,"props":1892,"children":1894},{"class":610,"line":1893},40,[1895],{"type":561,"tag":608,"props":1896,"children":1897},{"style":842},[1898],{"type":566,"value":1077},{"type":561,"tag":608,"props":1900,"children":1902},{"class":610,"line":1901},41,[1903],{"type":561,"tag":608,"props":1904,"children":1905},{"emptyLinePlaceholder":660},[1906],{"type":566,"value":663},{"type":561,"tag":608,"props":1908,"children":1910},{"class":610,"line":1909},42,[1911],{"type":561,"tag":608,"props":1912,"children":1913},{"style":828},[1914],{"type":566,"value":831},{"type":561,"tag":608,"props":1916,"children":1918},{"class":610,"line":1917},43,[1919],{"type":561,"tag":608,"props":1920,"children":1921},{"style":828},[1922],{"type":566,"value":1923},"* Your LRUCache object will be instantiated and called as such:\n",{"type":561,"tag":608,"props":1925,"children":1927},{"class":610,"line":1926},44,[1928],{"type":561,"tag":608,"props":1929,"children":1930},{"style":828},[1931],{"type":566,"value":1932},"* var obj = new LRUCache(capacity)\n",{"type":561,"tag":608,"props":1934,"children":1936},{"class":610,"line":1935},45,[1937],{"type":561,"tag":608,"props":1938,"children":1939},{"style":828},[1940],{"type":566,"value":1941},"* var param_1 = obj.get(key)\n",{"type":561,"tag":608,"props":1943,"children":1945},{"class":610,"line":1944},46,[1946],{"type":561,"tag":608,"props":1947,"children":1948},{"style":828},[1949],{"type":566,"value":1950},"* obj.put(key,value)\n",{"type":561,"tag":608,"props":1952,"children":1954},{"class":610,"line":1953},47,[1955],{"type":561,"tag":608,"props":1956,"children":1957},{"style":828},[1958],{"type":566,"value":1085},{"type":561,"tag":1960,"props":1961,"children":1962},"style",{},[1963],{"type":566,"value":1964},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":647,"depth":647,"links":1966},[1967,1968],{"id":794,"depth":620,"text":794},{"id":804,"depth":620,"text":804,"children":1969},[1970],{"id":810,"depth":629,"text":813},"markdown","content:1.algorithm:3.leetcode:3.major:146.lru-cache.md","content","1.algorithm/3.leetcode/3.major/146.lru-cache.md","md",[1977,1979],{"_path":174,"title":173,"description":1978},"给你一个链表的头节点 head ，判断链表中是否有环。",{"_path":180,"title":179,"description":1980},"给你一个字符串 s ，请你反转字符串中 单词 的顺序。",1715135012493]