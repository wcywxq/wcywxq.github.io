[{"data":1,"prerenderedAt":1875},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/linked-list-cycle":543,"/algorithm/leetcode/major/linked-list-cycle-surround":1870},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":174,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":173,"description":547,"url":548,"body":549,"_type":1865,"_id":1866,"_source":1867,"_file":1868,"_extension":1869},"major",false,"","给你一个链表的头节点 head ，判断链表中是否有环。","https://leetcode.cn/problems/linked-list-cycle",{"type":550,"children":551,"toc":1858},"root",[552,559,564,573,578,583,592,631,636,644,674,679,687,718,723,743,748,754,759,766,1387,1392,1852],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。",{"type":553,"tag":565,"props":566,"children":567},"blockquote",{},[568],{"type":553,"tag":554,"props":569,"children":570},{},[571],{"type":558,"value":572},"注意：pos 不作为参数进行传递 。仅仅是为了标识链表的实际情况。",{"type":553,"tag":554,"props":574,"children":575},{},[576],{"type":558,"value":577},"如果链表中存在环 ，则返回 true 。 否则，返回 false 。",{"type":553,"tag":554,"props":579,"children":580},{},[581],{"type":558,"value":582},"示例 1：",{"type":553,"tag":554,"props":584,"children":585},{},[586],{"type":553,"tag":587,"props":588,"children":591},"img",{"alt":589,"src":590},"circularlinkedlist","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.141_circularlinkedlist.png",[],{"type":553,"tag":593,"props":594,"children":597},"pre",{"className":595,"code":596,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [3,2,0,-4], pos = 1\n输出：true\n解释：链表中有一个环，其尾部连接到第二个节点。\n",[598],{"type":553,"tag":599,"props":600,"children":601},"code",{"__ignoreMap":546},[602,613,622],{"type":553,"tag":603,"props":604,"children":607},"span",{"class":605,"line":606},"line",1,[608],{"type":553,"tag":603,"props":609,"children":610},{},[611],{"type":558,"value":612},"输入：head = [3,2,0,-4], pos = 1\n",{"type":553,"tag":603,"props":614,"children":616},{"class":605,"line":615},2,[617],{"type":553,"tag":603,"props":618,"children":619},{},[620],{"type":558,"value":621},"输出：true\n",{"type":553,"tag":603,"props":623,"children":625},{"class":605,"line":624},3,[626],{"type":553,"tag":603,"props":627,"children":628},{},[629],{"type":558,"value":630},"解释：链表中有一个环，其尾部连接到第二个节点。\n",{"type":553,"tag":554,"props":632,"children":633},{},[634],{"type":558,"value":635},"示例 2：",{"type":553,"tag":554,"props":637,"children":638},{},[639],{"type":553,"tag":587,"props":640,"children":643},{"alt":641,"src":642},"circularlinkedlist_test2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.141_circularlinkedlist_test2.png",[],{"type":553,"tag":593,"props":645,"children":647},{"className":595,"code":646,"language":558,"meta":546,"style":546},"输入：head = [1,2], pos = 0\n输出：true\n解释：链表中有一个环，其尾部连接到第一个节点。\n",[648],{"type":553,"tag":599,"props":649,"children":650},{"__ignoreMap":546},[651,659,666],{"type":553,"tag":603,"props":652,"children":653},{"class":605,"line":606},[654],{"type":553,"tag":603,"props":655,"children":656},{},[657],{"type":558,"value":658},"输入：head = [1,2], pos = 0\n",{"type":553,"tag":603,"props":660,"children":661},{"class":605,"line":615},[662],{"type":553,"tag":603,"props":663,"children":664},{},[665],{"type":558,"value":621},{"type":553,"tag":603,"props":667,"children":668},{"class":605,"line":624},[669],{"type":553,"tag":603,"props":670,"children":671},{},[672],{"type":558,"value":673},"解释：链表中有一个环，其尾部连接到第一个节点。\n",{"type":553,"tag":554,"props":675,"children":676},{},[677],{"type":558,"value":678},"示例 3：",{"type":553,"tag":554,"props":680,"children":681},{},[682],{"type":553,"tag":587,"props":683,"children":686},{"alt":684,"src":685},"circularlinkedlist_test3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.141_circularlinkedlist_test3.png",[],{"type":553,"tag":593,"props":688,"children":690},{"className":595,"code":689,"language":558,"meta":546,"style":546},"输入：head = [1], pos = -1\n输出：false\n解释：链表中没有环。\n",[691],{"type":553,"tag":599,"props":692,"children":693},{"__ignoreMap":546},[694,702,710],{"type":553,"tag":603,"props":695,"children":696},{"class":605,"line":606},[697],{"type":553,"tag":603,"props":698,"children":699},{},[700],{"type":558,"value":701},"输入：head = [1], pos = -1\n",{"type":553,"tag":603,"props":703,"children":704},{"class":605,"line":615},[705],{"type":553,"tag":603,"props":706,"children":707},{},[708],{"type":558,"value":709},"输出：false\n",{"type":553,"tag":603,"props":711,"children":712},{"class":605,"line":624},[713],{"type":553,"tag":603,"props":714,"children":715},{},[716],{"type":558,"value":717},"解释：链表中没有环。\n",{"type":553,"tag":554,"props":719,"children":720},{},[721],{"type":558,"value":722},"提示：",{"type":553,"tag":724,"props":725,"children":726},"ul",{},[727,733,738],{"type":553,"tag":728,"props":729,"children":730},"li",{},[731],{"type":558,"value":732},"链表中节点的数目范围是 [0, 10^4]",{"type":553,"tag":728,"props":734,"children":735},{},[736],{"type":558,"value":737},"-10^5 \u003C= Node.val \u003C= 10^5",{"type":553,"tag":728,"props":739,"children":740},{},[741],{"type":558,"value":742},"pos 为 -1 或者链表中的一个 有效索引 。",{"type":553,"tag":554,"props":744,"children":745},{},[746],{"type":558,"value":747},"进阶：你能用 O(1)（即，常量）内存解决此问题吗？",{"type":553,"tag":749,"props":750,"children":752},"h2",{"id":751},"解题思路",[753],{"type":558,"value":751},{"type":553,"tag":749,"props":755,"children":757},{"id":756},"实现",[758],{"type":558,"value":756},{"type":553,"tag":760,"props":761,"children":763},"h3",{"id":762},"双指针-快慢指针",[764],{"type":558,"value":765},"双指针 - 快慢指针",{"type":553,"tag":593,"props":767,"children":771},{"className":768,"code":769,"language":770,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar hasCycle = function (head) {\n  if (!head || !head.next) return false;\n  let slow = head;\n  let fast = head.next;\n  while (slow) {\n    if (slow === fast) return true;\n    slow = slow.next;\n    fast = fast && fast.next?.next;\n  }\n  return false;\n};\n","js",[772],{"type":553,"tag":599,"props":773,"children":774},{"__ignoreMap":546},[775,784,792,800,809,818,827,836,874,908,938,947,957,965,1006,1036,1044,1085,1147,1174,1207,1233,1276,1305,1352,1361,1378],{"type":553,"tag":603,"props":776,"children":777},{"class":605,"line":606},[778],{"type":553,"tag":603,"props":779,"children":781},{"style":780},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[782],{"type":558,"value":783},"/**\n",{"type":553,"tag":603,"props":785,"children":786},{"class":605,"line":615},[787],{"type":553,"tag":603,"props":788,"children":789},{"style":780},[790],{"type":558,"value":791}," * Definition for singly-linked list.\n",{"type":553,"tag":603,"props":793,"children":794},{"class":605,"line":624},[795],{"type":553,"tag":603,"props":796,"children":797},{"style":780},[798],{"type":558,"value":799}," * function ListNode(val) {\n",{"type":553,"tag":603,"props":801,"children":803},{"class":605,"line":802},4,[804],{"type":553,"tag":603,"props":805,"children":806},{"style":780},[807],{"type":558,"value":808}," *     this.val = val;\n",{"type":553,"tag":603,"props":810,"children":812},{"class":605,"line":811},5,[813],{"type":553,"tag":603,"props":814,"children":815},{"style":780},[816],{"type":558,"value":817}," *     this.next = null;\n",{"type":553,"tag":603,"props":819,"children":821},{"class":605,"line":820},6,[822],{"type":553,"tag":603,"props":823,"children":824},{"style":780},[825],{"type":558,"value":826}," * }\n",{"type":553,"tag":603,"props":828,"children":830},{"class":605,"line":829},7,[831],{"type":553,"tag":603,"props":832,"children":833},{"style":780},[834],{"type":558,"value":835}," */\n",{"type":553,"tag":603,"props":837,"children":839},{"class":605,"line":838},8,[840,846,852,858,864,869],{"type":553,"tag":603,"props":841,"children":843},{"style":842},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[844],{"type":558,"value":845},"function",{"type":553,"tag":603,"props":847,"children":849},{"style":848},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[850],{"type":558,"value":851}," ListNode",{"type":553,"tag":603,"props":853,"children":855},{"style":854},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[856],{"type":558,"value":857},"(",{"type":553,"tag":603,"props":859,"children":861},{"style":860},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[862],{"type":558,"value":863},"val",{"type":553,"tag":603,"props":865,"children":866},{"style":854},[867],{"type":558,"value":868},")",{"type":553,"tag":603,"props":870,"children":871},{"style":854},[872],{"type":558,"value":873}," {\n",{"type":553,"tag":603,"props":875,"children":877},{"class":605,"line":876},9,[878,884,889,893,898,903],{"type":553,"tag":603,"props":879,"children":881},{"style":880},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[882],{"type":558,"value":883},"  this",{"type":553,"tag":603,"props":885,"children":886},{"style":854},[887],{"type":558,"value":888},".",{"type":553,"tag":603,"props":890,"children":891},{"style":860},[892],{"type":558,"value":863},{"type":553,"tag":603,"props":894,"children":895},{"style":854},[896],{"type":558,"value":897}," =",{"type":553,"tag":603,"props":899,"children":900},{"style":860},[901],{"type":558,"value":902}," val",{"type":553,"tag":603,"props":904,"children":905},{"style":854},[906],{"type":558,"value":907},";\n",{"type":553,"tag":603,"props":909,"children":911},{"class":605,"line":910},10,[912,916,920,925,929,934],{"type":553,"tag":603,"props":913,"children":914},{"style":880},[915],{"type":558,"value":883},{"type":553,"tag":603,"props":917,"children":918},{"style":854},[919],{"type":558,"value":888},{"type":553,"tag":603,"props":921,"children":922},{"style":860},[923],{"type":558,"value":924},"next",{"type":553,"tag":603,"props":926,"children":927},{"style":854},[928],{"type":558,"value":897},{"type":553,"tag":603,"props":930,"children":931},{"style":842},[932],{"type":558,"value":933}," null",{"type":553,"tag":603,"props":935,"children":936},{"style":854},[937],{"type":558,"value":907},{"type":553,"tag":603,"props":939,"children":941},{"class":605,"line":940},11,[942],{"type":553,"tag":603,"props":943,"children":944},{"style":854},[945],{"type":558,"value":946},"}\n",{"type":553,"tag":603,"props":948,"children":950},{"class":605,"line":949},12,[951],{"type":553,"tag":603,"props":952,"children":954},{"emptyLinePlaceholder":953},true,[955],{"type":558,"value":956},"\n",{"type":553,"tag":603,"props":958,"children":960},{"class":605,"line":959},13,[961],{"type":553,"tag":603,"props":962,"children":963},{"style":780},[964],{"type":558,"value":783},{"type":553,"tag":603,"props":966,"children":968},{"class":605,"line":967},14,[969,974,979,985,990,996,1001],{"type":553,"tag":603,"props":970,"children":971},{"style":780},[972],{"type":558,"value":973}," * ",{"type":553,"tag":603,"props":975,"children":976},{"style":854},[977],{"type":558,"value":978},"@",{"type":553,"tag":603,"props":980,"children":982},{"style":981},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[983],{"type":558,"value":984},"param",{"type":553,"tag":603,"props":986,"children":987},{"style":854},[988],{"type":558,"value":989}," {",{"type":553,"tag":603,"props":991,"children":993},{"style":992},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[994],{"type":558,"value":995},"ListNode",{"type":553,"tag":603,"props":997,"children":998},{"style":854},[999],{"type":558,"value":1000},"}",{"type":553,"tag":603,"props":1002,"children":1003},{"style":860},[1004],{"type":558,"value":1005}," head\n",{"type":553,"tag":603,"props":1007,"children":1009},{"class":605,"line":1008},15,[1010,1014,1018,1023,1027,1032],{"type":553,"tag":603,"props":1011,"children":1012},{"style":780},[1013],{"type":558,"value":973},{"type":553,"tag":603,"props":1015,"children":1016},{"style":854},[1017],{"type":558,"value":978},{"type":553,"tag":603,"props":1019,"children":1020},{"style":981},[1021],{"type":558,"value":1022},"return",{"type":553,"tag":603,"props":1024,"children":1025},{"style":854},[1026],{"type":558,"value":989},{"type":553,"tag":603,"props":1028,"children":1029},{"style":992},[1030],{"type":558,"value":1031},"boolean",{"type":553,"tag":603,"props":1033,"children":1034},{"style":854},[1035],{"type":558,"value":946},{"type":553,"tag":603,"props":1037,"children":1039},{"class":605,"line":1038},16,[1040],{"type":553,"tag":603,"props":1041,"children":1042},{"style":780},[1043],{"type":558,"value":835},{"type":553,"tag":603,"props":1045,"children":1047},{"class":605,"line":1046},17,[1048,1053,1058,1062,1067,1072,1077,1081],{"type":553,"tag":603,"props":1049,"children":1050},{"style":842},[1051],{"type":558,"value":1052},"var",{"type":553,"tag":603,"props":1054,"children":1055},{"style":848},[1056],{"type":558,"value":1057}," hasCycle",{"type":553,"tag":603,"props":1059,"children":1060},{"style":854},[1061],{"type":558,"value":897},{"type":553,"tag":603,"props":1063,"children":1064},{"style":842},[1065],{"type":558,"value":1066}," function",{"type":553,"tag":603,"props":1068,"children":1069},{"style":854},[1070],{"type":558,"value":1071}," (",{"type":553,"tag":603,"props":1073,"children":1074},{"style":860},[1075],{"type":558,"value":1076},"head",{"type":553,"tag":603,"props":1078,"children":1079},{"style":854},[1080],{"type":558,"value":868},{"type":553,"tag":603,"props":1082,"children":1083},{"style":854},[1084],{"type":558,"value":873},{"type":553,"tag":603,"props":1086,"children":1088},{"class":605,"line":1087},18,[1089,1094,1098,1103,1107,1112,1117,1121,1125,1129,1133,1138,1143],{"type":553,"tag":603,"props":1090,"children":1091},{"style":981},[1092],{"type":558,"value":1093},"  if",{"type":553,"tag":603,"props":1095,"children":1096},{"style":854},[1097],{"type":558,"value":1071},{"type":553,"tag":603,"props":1099,"children":1100},{"style":842},[1101],{"type":558,"value":1102},"!",{"type":553,"tag":603,"props":1104,"children":1105},{"style":860},[1106],{"type":558,"value":1076},{"type":553,"tag":603,"props":1108,"children":1109},{"style":842},[1110],{"type":558,"value":1111}," ||",{"type":553,"tag":603,"props":1113,"children":1114},{"style":842},[1115],{"type":558,"value":1116}," !",{"type":553,"tag":603,"props":1118,"children":1119},{"style":860},[1120],{"type":558,"value":1076},{"type":553,"tag":603,"props":1122,"children":1123},{"style":854},[1124],{"type":558,"value":888},{"type":553,"tag":603,"props":1126,"children":1127},{"style":860},[1128],{"type":558,"value":924},{"type":553,"tag":603,"props":1130,"children":1131},{"style":854},[1132],{"type":558,"value":868},{"type":553,"tag":603,"props":1134,"children":1135},{"style":981},[1136],{"type":558,"value":1137}," return",{"type":553,"tag":603,"props":1139,"children":1140},{"style":981},[1141],{"type":558,"value":1142}," false",{"type":553,"tag":603,"props":1144,"children":1145},{"style":854},[1146],{"type":558,"value":907},{"type":553,"tag":603,"props":1148,"children":1150},{"class":605,"line":1149},19,[1151,1156,1161,1165,1170],{"type":553,"tag":603,"props":1152,"children":1153},{"style":842},[1154],{"type":558,"value":1155},"  let",{"type":553,"tag":603,"props":1157,"children":1158},{"style":860},[1159],{"type":558,"value":1160}," slow",{"type":553,"tag":603,"props":1162,"children":1163},{"style":854},[1164],{"type":558,"value":897},{"type":553,"tag":603,"props":1166,"children":1167},{"style":860},[1168],{"type":558,"value":1169}," head",{"type":553,"tag":603,"props":1171,"children":1172},{"style":854},[1173],{"type":558,"value":907},{"type":553,"tag":603,"props":1175,"children":1177},{"class":605,"line":1176},20,[1178,1182,1187,1191,1195,1199,1203],{"type":553,"tag":603,"props":1179,"children":1180},{"style":842},[1181],{"type":558,"value":1155},{"type":553,"tag":603,"props":1183,"children":1184},{"style":860},[1185],{"type":558,"value":1186}," fast",{"type":553,"tag":603,"props":1188,"children":1189},{"style":854},[1190],{"type":558,"value":897},{"type":553,"tag":603,"props":1192,"children":1193},{"style":860},[1194],{"type":558,"value":1169},{"type":553,"tag":603,"props":1196,"children":1197},{"style":854},[1198],{"type":558,"value":888},{"type":553,"tag":603,"props":1200,"children":1201},{"style":860},[1202],{"type":558,"value":924},{"type":553,"tag":603,"props":1204,"children":1205},{"style":854},[1206],{"type":558,"value":907},{"type":553,"tag":603,"props":1208,"children":1210},{"class":605,"line":1209},21,[1211,1216,1220,1225,1229],{"type":553,"tag":603,"props":1212,"children":1213},{"style":981},[1214],{"type":558,"value":1215},"  while",{"type":553,"tag":603,"props":1217,"children":1218},{"style":854},[1219],{"type":558,"value":1071},{"type":553,"tag":603,"props":1221,"children":1222},{"style":860},[1223],{"type":558,"value":1224},"slow",{"type":553,"tag":603,"props":1226,"children":1227},{"style":854},[1228],{"type":558,"value":868},{"type":553,"tag":603,"props":1230,"children":1231},{"style":854},[1232],{"type":558,"value":873},{"type":553,"tag":603,"props":1234,"children":1236},{"class":605,"line":1235},22,[1237,1242,1246,1250,1255,1259,1263,1267,1272],{"type":553,"tag":603,"props":1238,"children":1239},{"style":981},[1240],{"type":558,"value":1241},"    if",{"type":553,"tag":603,"props":1243,"children":1244},{"style":854},[1245],{"type":558,"value":1071},{"type":553,"tag":603,"props":1247,"children":1248},{"style":860},[1249],{"type":558,"value":1224},{"type":553,"tag":603,"props":1251,"children":1252},{"style":842},[1253],{"type":558,"value":1254}," ===",{"type":553,"tag":603,"props":1256,"children":1257},{"style":860},[1258],{"type":558,"value":1186},{"type":553,"tag":603,"props":1260,"children":1261},{"style":854},[1262],{"type":558,"value":868},{"type":553,"tag":603,"props":1264,"children":1265},{"style":981},[1266],{"type":558,"value":1137},{"type":553,"tag":603,"props":1268,"children":1269},{"style":981},[1270],{"type":558,"value":1271}," true",{"type":553,"tag":603,"props":1273,"children":1274},{"style":854},[1275],{"type":558,"value":907},{"type":553,"tag":603,"props":1277,"children":1279},{"class":605,"line":1278},23,[1280,1285,1289,1293,1297,1301],{"type":553,"tag":603,"props":1281,"children":1282},{"style":860},[1283],{"type":558,"value":1284},"    slow",{"type":553,"tag":603,"props":1286,"children":1287},{"style":854},[1288],{"type":558,"value":897},{"type":553,"tag":603,"props":1290,"children":1291},{"style":860},[1292],{"type":558,"value":1160},{"type":553,"tag":603,"props":1294,"children":1295},{"style":854},[1296],{"type":558,"value":888},{"type":553,"tag":603,"props":1298,"children":1299},{"style":860},[1300],{"type":558,"value":924},{"type":553,"tag":603,"props":1302,"children":1303},{"style":854},[1304],{"type":558,"value":907},{"type":553,"tag":603,"props":1306,"children":1308},{"class":605,"line":1307},24,[1309,1314,1318,1322,1327,1331,1335,1339,1344,1348],{"type":553,"tag":603,"props":1310,"children":1311},{"style":860},[1312],{"type":558,"value":1313},"    fast",{"type":553,"tag":603,"props":1315,"children":1316},{"style":854},[1317],{"type":558,"value":897},{"type":553,"tag":603,"props":1319,"children":1320},{"style":860},[1321],{"type":558,"value":1186},{"type":553,"tag":603,"props":1323,"children":1324},{"style":842},[1325],{"type":558,"value":1326}," &&",{"type":553,"tag":603,"props":1328,"children":1329},{"style":860},[1330],{"type":558,"value":1186},{"type":553,"tag":603,"props":1332,"children":1333},{"style":854},[1334],{"type":558,"value":888},{"type":553,"tag":603,"props":1336,"children":1337},{"style":860},[1338],{"type":558,"value":924},{"type":553,"tag":603,"props":1340,"children":1341},{"style":854},[1342],{"type":558,"value":1343},"?.",{"type":553,"tag":603,"props":1345,"children":1346},{"style":860},[1347],{"type":558,"value":924},{"type":553,"tag":603,"props":1349,"children":1350},{"style":854},[1351],{"type":558,"value":907},{"type":553,"tag":603,"props":1353,"children":1355},{"class":605,"line":1354},25,[1356],{"type":553,"tag":603,"props":1357,"children":1358},{"style":854},[1359],{"type":558,"value":1360},"  }\n",{"type":553,"tag":603,"props":1362,"children":1364},{"class":605,"line":1363},26,[1365,1370,1374],{"type":553,"tag":603,"props":1366,"children":1367},{"style":981},[1368],{"type":558,"value":1369},"  return",{"type":553,"tag":603,"props":1371,"children":1372},{"style":981},[1373],{"type":558,"value":1142},{"type":553,"tag":603,"props":1375,"children":1376},{"style":854},[1377],{"type":558,"value":907},{"type":553,"tag":603,"props":1379,"children":1381},{"class":605,"line":1380},27,[1382],{"type":553,"tag":603,"props":1383,"children":1384},{"style":854},[1385],{"type":558,"value":1386},"};\n",{"type":553,"tag":760,"props":1388,"children":1390},{"id":1389},"哈希法",[1391],{"type":558,"value":1389},{"type":553,"tag":593,"props":1393,"children":1395},{"className":768,"code":1394,"language":770,"meta":546,"style":546},"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar hasCycle = function (head) {\n  let map = new Map();\n  while (head) {\n    if (map.has(head)) return true;\n    map.set(head, 1);\n    head = head.next;\n  }\n  return false;\n};\n",[1396],{"type":553,"tag":599,"props":1397,"children":1398},{"__ignoreMap":546},[1399,1406,1413,1420,1427,1434,1441,1448,1475,1502,1529,1536,1543,1550,1581,1608,1615,1650,1681,1704,1754,1795,1823,1830,1845],{"type":553,"tag":603,"props":1400,"children":1401},{"class":605,"line":606},[1402],{"type":553,"tag":603,"props":1403,"children":1404},{"style":780},[1405],{"type":558,"value":783},{"type":553,"tag":603,"props":1407,"children":1408},{"class":605,"line":615},[1409],{"type":553,"tag":603,"props":1410,"children":1411},{"style":780},[1412],{"type":558,"value":791},{"type":553,"tag":603,"props":1414,"children":1415},{"class":605,"line":624},[1416],{"type":553,"tag":603,"props":1417,"children":1418},{"style":780},[1419],{"type":558,"value":799},{"type":553,"tag":603,"props":1421,"children":1422},{"class":605,"line":802},[1423],{"type":553,"tag":603,"props":1424,"children":1425},{"style":780},[1426],{"type":558,"value":808},{"type":553,"tag":603,"props":1428,"children":1429},{"class":605,"line":811},[1430],{"type":553,"tag":603,"props":1431,"children":1432},{"style":780},[1433],{"type":558,"value":817},{"type":553,"tag":603,"props":1435,"children":1436},{"class":605,"line":820},[1437],{"type":553,"tag":603,"props":1438,"children":1439},{"style":780},[1440],{"type":558,"value":826},{"type":553,"tag":603,"props":1442,"children":1443},{"class":605,"line":829},[1444],{"type":553,"tag":603,"props":1445,"children":1446},{"style":780},[1447],{"type":558,"value":835},{"type":553,"tag":603,"props":1449,"children":1450},{"class":605,"line":838},[1451,1455,1459,1463,1467,1471],{"type":553,"tag":603,"props":1452,"children":1453},{"style":842},[1454],{"type":558,"value":845},{"type":553,"tag":603,"props":1456,"children":1457},{"style":848},[1458],{"type":558,"value":851},{"type":553,"tag":603,"props":1460,"children":1461},{"style":854},[1462],{"type":558,"value":857},{"type":553,"tag":603,"props":1464,"children":1465},{"style":860},[1466],{"type":558,"value":863},{"type":553,"tag":603,"props":1468,"children":1469},{"style":854},[1470],{"type":558,"value":868},{"type":553,"tag":603,"props":1472,"children":1473},{"style":854},[1474],{"type":558,"value":873},{"type":553,"tag":603,"props":1476,"children":1477},{"class":605,"line":876},[1478,1482,1486,1490,1494,1498],{"type":553,"tag":603,"props":1479,"children":1480},{"style":880},[1481],{"type":558,"value":883},{"type":553,"tag":603,"props":1483,"children":1484},{"style":854},[1485],{"type":558,"value":888},{"type":553,"tag":603,"props":1487,"children":1488},{"style":860},[1489],{"type":558,"value":863},{"type":553,"tag":603,"props":1491,"children":1492},{"style":854},[1493],{"type":558,"value":897},{"type":553,"tag":603,"props":1495,"children":1496},{"style":860},[1497],{"type":558,"value":902},{"type":553,"tag":603,"props":1499,"children":1500},{"style":854},[1501],{"type":558,"value":907},{"type":553,"tag":603,"props":1503,"children":1504},{"class":605,"line":910},[1505,1509,1513,1517,1521,1525],{"type":553,"tag":603,"props":1506,"children":1507},{"style":880},[1508],{"type":558,"value":883},{"type":553,"tag":603,"props":1510,"children":1511},{"style":854},[1512],{"type":558,"value":888},{"type":553,"tag":603,"props":1514,"children":1515},{"style":860},[1516],{"type":558,"value":924},{"type":553,"tag":603,"props":1518,"children":1519},{"style":854},[1520],{"type":558,"value":897},{"type":553,"tag":603,"props":1522,"children":1523},{"style":842},[1524],{"type":558,"value":933},{"type":553,"tag":603,"props":1526,"children":1527},{"style":854},[1528],{"type":558,"value":907},{"type":553,"tag":603,"props":1530,"children":1531},{"class":605,"line":940},[1532],{"type":553,"tag":603,"props":1533,"children":1534},{"style":854},[1535],{"type":558,"value":946},{"type":553,"tag":603,"props":1537,"children":1538},{"class":605,"line":949},[1539],{"type":553,"tag":603,"props":1540,"children":1541},{"emptyLinePlaceholder":953},[1542],{"type":558,"value":956},{"type":553,"tag":603,"props":1544,"children":1545},{"class":605,"line":959},[1546],{"type":553,"tag":603,"props":1547,"children":1548},{"style":780},[1549],{"type":558,"value":783},{"type":553,"tag":603,"props":1551,"children":1552},{"class":605,"line":967},[1553,1557,1561,1565,1569,1573,1577],{"type":553,"tag":603,"props":1554,"children":1555},{"style":780},[1556],{"type":558,"value":973},{"type":553,"tag":603,"props":1558,"children":1559},{"style":854},[1560],{"type":558,"value":978},{"type":553,"tag":603,"props":1562,"children":1563},{"style":981},[1564],{"type":558,"value":984},{"type":553,"tag":603,"props":1566,"children":1567},{"style":854},[1568],{"type":558,"value":989},{"type":553,"tag":603,"props":1570,"children":1571},{"style":992},[1572],{"type":558,"value":995},{"type":553,"tag":603,"props":1574,"children":1575},{"style":854},[1576],{"type":558,"value":1000},{"type":553,"tag":603,"props":1578,"children":1579},{"style":860},[1580],{"type":558,"value":1005},{"type":553,"tag":603,"props":1582,"children":1583},{"class":605,"line":1008},[1584,1588,1592,1596,1600,1604],{"type":553,"tag":603,"props":1585,"children":1586},{"style":780},[1587],{"type":558,"value":973},{"type":553,"tag":603,"props":1589,"children":1590},{"style":854},[1591],{"type":558,"value":978},{"type":553,"tag":603,"props":1593,"children":1594},{"style":981},[1595],{"type":558,"value":1022},{"type":553,"tag":603,"props":1597,"children":1598},{"style":854},[1599],{"type":558,"value":989},{"type":553,"tag":603,"props":1601,"children":1602},{"style":992},[1603],{"type":558,"value":1031},{"type":553,"tag":603,"props":1605,"children":1606},{"style":854},[1607],{"type":558,"value":946},{"type":553,"tag":603,"props":1609,"children":1610},{"class":605,"line":1038},[1611],{"type":553,"tag":603,"props":1612,"children":1613},{"style":780},[1614],{"type":558,"value":835},{"type":553,"tag":603,"props":1616,"children":1617},{"class":605,"line":1046},[1618,1622,1626,1630,1634,1638,1642,1646],{"type":553,"tag":603,"props":1619,"children":1620},{"style":842},[1621],{"type":558,"value":1052},{"type":553,"tag":603,"props":1623,"children":1624},{"style":848},[1625],{"type":558,"value":1057},{"type":553,"tag":603,"props":1627,"children":1628},{"style":854},[1629],{"type":558,"value":897},{"type":553,"tag":603,"props":1631,"children":1632},{"style":842},[1633],{"type":558,"value":1066},{"type":553,"tag":603,"props":1635,"children":1636},{"style":854},[1637],{"type":558,"value":1071},{"type":553,"tag":603,"props":1639,"children":1640},{"style":860},[1641],{"type":558,"value":1076},{"type":553,"tag":603,"props":1643,"children":1644},{"style":854},[1645],{"type":558,"value":868},{"type":553,"tag":603,"props":1647,"children":1648},{"style":854},[1649],{"type":558,"value":873},{"type":553,"tag":603,"props":1651,"children":1652},{"class":605,"line":1087},[1653,1657,1662,1666,1671,1676],{"type":553,"tag":603,"props":1654,"children":1655},{"style":842},[1656],{"type":558,"value":1155},{"type":553,"tag":603,"props":1658,"children":1659},{"style":860},[1660],{"type":558,"value":1661}," map",{"type":553,"tag":603,"props":1663,"children":1664},{"style":854},[1665],{"type":558,"value":897},{"type":553,"tag":603,"props":1667,"children":1668},{"style":842},[1669],{"type":558,"value":1670}," new",{"type":553,"tag":603,"props":1672,"children":1673},{"style":848},[1674],{"type":558,"value":1675}," Map",{"type":553,"tag":603,"props":1677,"children":1678},{"style":854},[1679],{"type":558,"value":1680},"();\n",{"type":553,"tag":603,"props":1682,"children":1683},{"class":605,"line":1149},[1684,1688,1692,1696,1700],{"type":553,"tag":603,"props":1685,"children":1686},{"style":981},[1687],{"type":558,"value":1215},{"type":553,"tag":603,"props":1689,"children":1690},{"style":854},[1691],{"type":558,"value":1071},{"type":553,"tag":603,"props":1693,"children":1694},{"style":860},[1695],{"type":558,"value":1076},{"type":553,"tag":603,"props":1697,"children":1698},{"style":854},[1699],{"type":558,"value":868},{"type":553,"tag":603,"props":1701,"children":1702},{"style":854},[1703],{"type":558,"value":873},{"type":553,"tag":603,"props":1705,"children":1706},{"class":605,"line":1176},[1707,1711,1715,1720,1724,1729,1733,1737,1742,1746,1750],{"type":553,"tag":603,"props":1708,"children":1709},{"style":981},[1710],{"type":558,"value":1241},{"type":553,"tag":603,"props":1712,"children":1713},{"style":854},[1714],{"type":558,"value":1071},{"type":553,"tag":603,"props":1716,"children":1717},{"style":860},[1718],{"type":558,"value":1719},"map",{"type":553,"tag":603,"props":1721,"children":1722},{"style":854},[1723],{"type":558,"value":888},{"type":553,"tag":603,"props":1725,"children":1726},{"style":848},[1727],{"type":558,"value":1728},"has",{"type":553,"tag":603,"props":1730,"children":1731},{"style":854},[1732],{"type":558,"value":857},{"type":553,"tag":603,"props":1734,"children":1735},{"style":860},[1736],{"type":558,"value":1076},{"type":553,"tag":603,"props":1738,"children":1739},{"style":854},[1740],{"type":558,"value":1741},"))",{"type":553,"tag":603,"props":1743,"children":1744},{"style":981},[1745],{"type":558,"value":1137},{"type":553,"tag":603,"props":1747,"children":1748},{"style":981},[1749],{"type":558,"value":1271},{"type":553,"tag":603,"props":1751,"children":1752},{"style":854},[1753],{"type":558,"value":907},{"type":553,"tag":603,"props":1755,"children":1756},{"class":605,"line":1209},[1757,1762,1766,1771,1775,1779,1784,1790],{"type":553,"tag":603,"props":1758,"children":1759},{"style":860},[1760],{"type":558,"value":1761},"    map",{"type":553,"tag":603,"props":1763,"children":1764},{"style":854},[1765],{"type":558,"value":888},{"type":553,"tag":603,"props":1767,"children":1768},{"style":848},[1769],{"type":558,"value":1770},"set",{"type":553,"tag":603,"props":1772,"children":1773},{"style":854},[1774],{"type":558,"value":857},{"type":553,"tag":603,"props":1776,"children":1777},{"style":860},[1778],{"type":558,"value":1076},{"type":553,"tag":603,"props":1780,"children":1781},{"style":854},[1782],{"type":558,"value":1783},",",{"type":553,"tag":603,"props":1785,"children":1787},{"style":1786},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1788],{"type":558,"value":1789}," 1",{"type":553,"tag":603,"props":1791,"children":1792},{"style":854},[1793],{"type":558,"value":1794},");\n",{"type":553,"tag":603,"props":1796,"children":1797},{"class":605,"line":1235},[1798,1803,1807,1811,1815,1819],{"type":553,"tag":603,"props":1799,"children":1800},{"style":860},[1801],{"type":558,"value":1802},"    head",{"type":553,"tag":603,"props":1804,"children":1805},{"style":854},[1806],{"type":558,"value":897},{"type":553,"tag":603,"props":1808,"children":1809},{"style":860},[1810],{"type":558,"value":1169},{"type":553,"tag":603,"props":1812,"children":1813},{"style":854},[1814],{"type":558,"value":888},{"type":553,"tag":603,"props":1816,"children":1817},{"style":860},[1818],{"type":558,"value":924},{"type":553,"tag":603,"props":1820,"children":1821},{"style":854},[1822],{"type":558,"value":907},{"type":553,"tag":603,"props":1824,"children":1825},{"class":605,"line":1278},[1826],{"type":553,"tag":603,"props":1827,"children":1828},{"style":854},[1829],{"type":558,"value":1360},{"type":553,"tag":603,"props":1831,"children":1832},{"class":605,"line":1307},[1833,1837,1841],{"type":553,"tag":603,"props":1834,"children":1835},{"style":981},[1836],{"type":558,"value":1369},{"type":553,"tag":603,"props":1838,"children":1839},{"style":981},[1840],{"type":558,"value":1142},{"type":553,"tag":603,"props":1842,"children":1843},{"style":854},[1844],{"type":558,"value":907},{"type":553,"tag":603,"props":1846,"children":1847},{"class":605,"line":1354},[1848],{"type":553,"tag":603,"props":1849,"children":1850},{"style":854},[1851],{"type":558,"value":1386},{"type":553,"tag":1853,"props":1854,"children":1855},"style",{},[1856],{"type":558,"value":1857},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":811,"depth":811,"links":1859},[1860,1861],{"id":751,"depth":615,"text":751},{"id":756,"depth":615,"text":756,"children":1862},[1863,1864],{"id":762,"depth":624,"text":765},{"id":1389,"depth":624,"text":1389},"markdown","content:1.algorithm:3.leetcode:3.major:141.linked-list-cycle.md","content","1.algorithm/3.leetcode/3.major/141.linked-list-cycle.md","md",[1871,1873],{"_path":171,"title":170,"description":1872},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",{"_path":177,"title":176,"description":1874},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",1714099678996]