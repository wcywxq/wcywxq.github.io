[{"data":1,"prerenderedAt":1891},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/linked-list-cycle":559,"/algorithm/leetcode/major/linked-list-cycle-surround":1886},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":174,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":173,"description":563,"url":564,"body":565,"_type":1881,"_id":1882,"_source":1883,"_file":1884,"_extension":1885},"major",false,"","给你一个链表的头节点 head ，判断链表中是否有环。","https://leetcode.cn/problems/linked-list-cycle",{"type":566,"children":567,"toc":1874},"root",[568,575,580,589,594,599,608,647,652,660,690,695,703,734,739,759,764,770,775,782,1403,1408,1868],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。",{"type":569,"tag":581,"props":582,"children":583},"blockquote",{},[584],{"type":569,"tag":570,"props":585,"children":586},{},[587],{"type":574,"value":588},"注意：pos 不作为参数进行传递 。仅仅是为了标识链表的实际情况。",{"type":569,"tag":570,"props":590,"children":591},{},[592],{"type":574,"value":593},"如果链表中存在环 ，则返回 true 。 否则，返回 false 。",{"type":569,"tag":570,"props":595,"children":596},{},[597],{"type":574,"value":598},"示例 1：",{"type":569,"tag":570,"props":600,"children":601},{},[602],{"type":569,"tag":603,"props":604,"children":607},"img",{"alt":605,"src":606},"circularlinkedlist","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.141_circularlinkedlist.png",[],{"type":569,"tag":609,"props":610,"children":613},"pre",{"className":611,"code":612,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [3,2,0,-4], pos = 1\n输出：true\n解释：链表中有一个环，其尾部连接到第二个节点。\n",[614],{"type":569,"tag":615,"props":616,"children":617},"code",{"__ignoreMap":562},[618,629,638],{"type":569,"tag":619,"props":620,"children":623},"span",{"class":621,"line":622},"line",1,[624],{"type":569,"tag":619,"props":625,"children":626},{},[627],{"type":574,"value":628},"输入：head = [3,2,0,-4], pos = 1\n",{"type":569,"tag":619,"props":630,"children":632},{"class":621,"line":631},2,[633],{"type":569,"tag":619,"props":634,"children":635},{},[636],{"type":574,"value":637},"输出：true\n",{"type":569,"tag":619,"props":639,"children":641},{"class":621,"line":640},3,[642],{"type":569,"tag":619,"props":643,"children":644},{},[645],{"type":574,"value":646},"解释：链表中有一个环，其尾部连接到第二个节点。\n",{"type":569,"tag":570,"props":648,"children":649},{},[650],{"type":574,"value":651},"示例 2：",{"type":569,"tag":570,"props":653,"children":654},{},[655],{"type":569,"tag":603,"props":656,"children":659},{"alt":657,"src":658},"circularlinkedlist_test2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.141_circularlinkedlist_test2.png",[],{"type":569,"tag":609,"props":661,"children":663},{"className":611,"code":662,"language":574,"meta":562,"style":562},"输入：head = [1,2], pos = 0\n输出：true\n解释：链表中有一个环，其尾部连接到第一个节点。\n",[664],{"type":569,"tag":615,"props":665,"children":666},{"__ignoreMap":562},[667,675,682],{"type":569,"tag":619,"props":668,"children":669},{"class":621,"line":622},[670],{"type":569,"tag":619,"props":671,"children":672},{},[673],{"type":574,"value":674},"输入：head = [1,2], pos = 0\n",{"type":569,"tag":619,"props":676,"children":677},{"class":621,"line":631},[678],{"type":569,"tag":619,"props":679,"children":680},{},[681],{"type":574,"value":637},{"type":569,"tag":619,"props":683,"children":684},{"class":621,"line":640},[685],{"type":569,"tag":619,"props":686,"children":687},{},[688],{"type":574,"value":689},"解释：链表中有一个环，其尾部连接到第一个节点。\n",{"type":569,"tag":570,"props":691,"children":692},{},[693],{"type":574,"value":694},"示例 3：",{"type":569,"tag":570,"props":696,"children":697},{},[698],{"type":569,"tag":603,"props":699,"children":702},{"alt":700,"src":701},"circularlinkedlist_test3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.141_circularlinkedlist_test3.png",[],{"type":569,"tag":609,"props":704,"children":706},{"className":611,"code":705,"language":574,"meta":562,"style":562},"输入：head = [1], pos = -1\n输出：false\n解释：链表中没有环。\n",[707],{"type":569,"tag":615,"props":708,"children":709},{"__ignoreMap":562},[710,718,726],{"type":569,"tag":619,"props":711,"children":712},{"class":621,"line":622},[713],{"type":569,"tag":619,"props":714,"children":715},{},[716],{"type":574,"value":717},"输入：head = [1], pos = -1\n",{"type":569,"tag":619,"props":719,"children":720},{"class":621,"line":631},[721],{"type":569,"tag":619,"props":722,"children":723},{},[724],{"type":574,"value":725},"输出：false\n",{"type":569,"tag":619,"props":727,"children":728},{"class":621,"line":640},[729],{"type":569,"tag":619,"props":730,"children":731},{},[732],{"type":574,"value":733},"解释：链表中没有环。\n",{"type":569,"tag":570,"props":735,"children":736},{},[737],{"type":574,"value":738},"提示：",{"type":569,"tag":740,"props":741,"children":742},"ul",{},[743,749,754],{"type":569,"tag":744,"props":745,"children":746},"li",{},[747],{"type":574,"value":748},"链表中节点的数目范围是 [0, 10^4]",{"type":569,"tag":744,"props":750,"children":751},{},[752],{"type":574,"value":753},"-10^5 \u003C= Node.val \u003C= 10^5",{"type":569,"tag":744,"props":755,"children":756},{},[757],{"type":574,"value":758},"pos 为 -1 或者链表中的一个 有效索引 。",{"type":569,"tag":570,"props":760,"children":761},{},[762],{"type":574,"value":763},"进阶：你能用 O(1)（即，常量）内存解决此问题吗？",{"type":569,"tag":765,"props":766,"children":768},"h2",{"id":767},"解题思路",[769],{"type":574,"value":767},{"type":569,"tag":765,"props":771,"children":773},{"id":772},"实现",[774],{"type":574,"value":772},{"type":569,"tag":776,"props":777,"children":779},"h3",{"id":778},"双指针-快慢指针",[780],{"type":574,"value":781},"双指针 - 快慢指针",{"type":569,"tag":609,"props":783,"children":787},{"className":784,"code":785,"language":786,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar hasCycle = function (head) {\n  if (!head || !head.next) return false;\n  let slow = head;\n  let fast = head.next;\n  while (slow) {\n    if (slow === fast) return true;\n    slow = slow.next;\n    fast = fast && fast.next?.next;\n  }\n  return false;\n};\n","js",[788],{"type":569,"tag":615,"props":789,"children":790},{"__ignoreMap":562},[791,800,808,816,825,834,843,852,890,924,954,963,973,981,1022,1052,1060,1101,1163,1190,1223,1249,1292,1321,1368,1377,1394],{"type":569,"tag":619,"props":792,"children":793},{"class":621,"line":622},[794],{"type":569,"tag":619,"props":795,"children":797},{"style":796},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[798],{"type":574,"value":799},"/**\n",{"type":569,"tag":619,"props":801,"children":802},{"class":621,"line":631},[803],{"type":569,"tag":619,"props":804,"children":805},{"style":796},[806],{"type":574,"value":807}," * Definition for singly-linked list.\n",{"type":569,"tag":619,"props":809,"children":810},{"class":621,"line":640},[811],{"type":569,"tag":619,"props":812,"children":813},{"style":796},[814],{"type":574,"value":815}," * function ListNode(val) {\n",{"type":569,"tag":619,"props":817,"children":819},{"class":621,"line":818},4,[820],{"type":569,"tag":619,"props":821,"children":822},{"style":796},[823],{"type":574,"value":824}," *     this.val = val;\n",{"type":569,"tag":619,"props":826,"children":828},{"class":621,"line":827},5,[829],{"type":569,"tag":619,"props":830,"children":831},{"style":796},[832],{"type":574,"value":833}," *     this.next = null;\n",{"type":569,"tag":619,"props":835,"children":837},{"class":621,"line":836},6,[838],{"type":569,"tag":619,"props":839,"children":840},{"style":796},[841],{"type":574,"value":842}," * }\n",{"type":569,"tag":619,"props":844,"children":846},{"class":621,"line":845},7,[847],{"type":569,"tag":619,"props":848,"children":849},{"style":796},[850],{"type":574,"value":851}," */\n",{"type":569,"tag":619,"props":853,"children":855},{"class":621,"line":854},8,[856,862,868,874,880,885],{"type":569,"tag":619,"props":857,"children":859},{"style":858},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[860],{"type":574,"value":861},"function",{"type":569,"tag":619,"props":863,"children":865},{"style":864},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[866],{"type":574,"value":867}," ListNode",{"type":569,"tag":619,"props":869,"children":871},{"style":870},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[872],{"type":574,"value":873},"(",{"type":569,"tag":619,"props":875,"children":877},{"style":876},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[878],{"type":574,"value":879},"val",{"type":569,"tag":619,"props":881,"children":882},{"style":870},[883],{"type":574,"value":884},")",{"type":569,"tag":619,"props":886,"children":887},{"style":870},[888],{"type":574,"value":889}," {\n",{"type":569,"tag":619,"props":891,"children":893},{"class":621,"line":892},9,[894,900,905,909,914,919],{"type":569,"tag":619,"props":895,"children":897},{"style":896},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[898],{"type":574,"value":899},"  this",{"type":569,"tag":619,"props":901,"children":902},{"style":870},[903],{"type":574,"value":904},".",{"type":569,"tag":619,"props":906,"children":907},{"style":876},[908],{"type":574,"value":879},{"type":569,"tag":619,"props":910,"children":911},{"style":870},[912],{"type":574,"value":913}," =",{"type":569,"tag":619,"props":915,"children":916},{"style":876},[917],{"type":574,"value":918}," val",{"type":569,"tag":619,"props":920,"children":921},{"style":870},[922],{"type":574,"value":923},";\n",{"type":569,"tag":619,"props":925,"children":927},{"class":621,"line":926},10,[928,932,936,941,945,950],{"type":569,"tag":619,"props":929,"children":930},{"style":896},[931],{"type":574,"value":899},{"type":569,"tag":619,"props":933,"children":934},{"style":870},[935],{"type":574,"value":904},{"type":569,"tag":619,"props":937,"children":938},{"style":876},[939],{"type":574,"value":940},"next",{"type":569,"tag":619,"props":942,"children":943},{"style":870},[944],{"type":574,"value":913},{"type":569,"tag":619,"props":946,"children":947},{"style":858},[948],{"type":574,"value":949}," null",{"type":569,"tag":619,"props":951,"children":952},{"style":870},[953],{"type":574,"value":923},{"type":569,"tag":619,"props":955,"children":957},{"class":621,"line":956},11,[958],{"type":569,"tag":619,"props":959,"children":960},{"style":870},[961],{"type":574,"value":962},"}\n",{"type":569,"tag":619,"props":964,"children":966},{"class":621,"line":965},12,[967],{"type":569,"tag":619,"props":968,"children":970},{"emptyLinePlaceholder":969},true,[971],{"type":574,"value":972},"\n",{"type":569,"tag":619,"props":974,"children":976},{"class":621,"line":975},13,[977],{"type":569,"tag":619,"props":978,"children":979},{"style":796},[980],{"type":574,"value":799},{"type":569,"tag":619,"props":982,"children":984},{"class":621,"line":983},14,[985,990,995,1001,1006,1012,1017],{"type":569,"tag":619,"props":986,"children":987},{"style":796},[988],{"type":574,"value":989}," * ",{"type":569,"tag":619,"props":991,"children":992},{"style":870},[993],{"type":574,"value":994},"@",{"type":569,"tag":619,"props":996,"children":998},{"style":997},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[999],{"type":574,"value":1000},"param",{"type":569,"tag":619,"props":1002,"children":1003},{"style":870},[1004],{"type":574,"value":1005}," {",{"type":569,"tag":619,"props":1007,"children":1009},{"style":1008},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1010],{"type":574,"value":1011},"ListNode",{"type":569,"tag":619,"props":1013,"children":1014},{"style":870},[1015],{"type":574,"value":1016},"}",{"type":569,"tag":619,"props":1018,"children":1019},{"style":876},[1020],{"type":574,"value":1021}," head\n",{"type":569,"tag":619,"props":1023,"children":1025},{"class":621,"line":1024},15,[1026,1030,1034,1039,1043,1048],{"type":569,"tag":619,"props":1027,"children":1028},{"style":796},[1029],{"type":574,"value":989},{"type":569,"tag":619,"props":1031,"children":1032},{"style":870},[1033],{"type":574,"value":994},{"type":569,"tag":619,"props":1035,"children":1036},{"style":997},[1037],{"type":574,"value":1038},"return",{"type":569,"tag":619,"props":1040,"children":1041},{"style":870},[1042],{"type":574,"value":1005},{"type":569,"tag":619,"props":1044,"children":1045},{"style":1008},[1046],{"type":574,"value":1047},"boolean",{"type":569,"tag":619,"props":1049,"children":1050},{"style":870},[1051],{"type":574,"value":962},{"type":569,"tag":619,"props":1053,"children":1055},{"class":621,"line":1054},16,[1056],{"type":569,"tag":619,"props":1057,"children":1058},{"style":796},[1059],{"type":574,"value":851},{"type":569,"tag":619,"props":1061,"children":1063},{"class":621,"line":1062},17,[1064,1069,1074,1078,1083,1088,1093,1097],{"type":569,"tag":619,"props":1065,"children":1066},{"style":858},[1067],{"type":574,"value":1068},"var",{"type":569,"tag":619,"props":1070,"children":1071},{"style":864},[1072],{"type":574,"value":1073}," hasCycle",{"type":569,"tag":619,"props":1075,"children":1076},{"style":870},[1077],{"type":574,"value":913},{"type":569,"tag":619,"props":1079,"children":1080},{"style":858},[1081],{"type":574,"value":1082}," function",{"type":569,"tag":619,"props":1084,"children":1085},{"style":870},[1086],{"type":574,"value":1087}," (",{"type":569,"tag":619,"props":1089,"children":1090},{"style":876},[1091],{"type":574,"value":1092},"head",{"type":569,"tag":619,"props":1094,"children":1095},{"style":870},[1096],{"type":574,"value":884},{"type":569,"tag":619,"props":1098,"children":1099},{"style":870},[1100],{"type":574,"value":889},{"type":569,"tag":619,"props":1102,"children":1104},{"class":621,"line":1103},18,[1105,1110,1114,1119,1123,1128,1133,1137,1141,1145,1149,1154,1159],{"type":569,"tag":619,"props":1106,"children":1107},{"style":997},[1108],{"type":574,"value":1109},"  if",{"type":569,"tag":619,"props":1111,"children":1112},{"style":870},[1113],{"type":574,"value":1087},{"type":569,"tag":619,"props":1115,"children":1116},{"style":858},[1117],{"type":574,"value":1118},"!",{"type":569,"tag":619,"props":1120,"children":1121},{"style":876},[1122],{"type":574,"value":1092},{"type":569,"tag":619,"props":1124,"children":1125},{"style":858},[1126],{"type":574,"value":1127}," ||",{"type":569,"tag":619,"props":1129,"children":1130},{"style":858},[1131],{"type":574,"value":1132}," !",{"type":569,"tag":619,"props":1134,"children":1135},{"style":876},[1136],{"type":574,"value":1092},{"type":569,"tag":619,"props":1138,"children":1139},{"style":870},[1140],{"type":574,"value":904},{"type":569,"tag":619,"props":1142,"children":1143},{"style":876},[1144],{"type":574,"value":940},{"type":569,"tag":619,"props":1146,"children":1147},{"style":870},[1148],{"type":574,"value":884},{"type":569,"tag":619,"props":1150,"children":1151},{"style":997},[1152],{"type":574,"value":1153}," return",{"type":569,"tag":619,"props":1155,"children":1156},{"style":997},[1157],{"type":574,"value":1158}," false",{"type":569,"tag":619,"props":1160,"children":1161},{"style":870},[1162],{"type":574,"value":923},{"type":569,"tag":619,"props":1164,"children":1166},{"class":621,"line":1165},19,[1167,1172,1177,1181,1186],{"type":569,"tag":619,"props":1168,"children":1169},{"style":858},[1170],{"type":574,"value":1171},"  let",{"type":569,"tag":619,"props":1173,"children":1174},{"style":876},[1175],{"type":574,"value":1176}," slow",{"type":569,"tag":619,"props":1178,"children":1179},{"style":870},[1180],{"type":574,"value":913},{"type":569,"tag":619,"props":1182,"children":1183},{"style":876},[1184],{"type":574,"value":1185}," head",{"type":569,"tag":619,"props":1187,"children":1188},{"style":870},[1189],{"type":574,"value":923},{"type":569,"tag":619,"props":1191,"children":1193},{"class":621,"line":1192},20,[1194,1198,1203,1207,1211,1215,1219],{"type":569,"tag":619,"props":1195,"children":1196},{"style":858},[1197],{"type":574,"value":1171},{"type":569,"tag":619,"props":1199,"children":1200},{"style":876},[1201],{"type":574,"value":1202}," fast",{"type":569,"tag":619,"props":1204,"children":1205},{"style":870},[1206],{"type":574,"value":913},{"type":569,"tag":619,"props":1208,"children":1209},{"style":876},[1210],{"type":574,"value":1185},{"type":569,"tag":619,"props":1212,"children":1213},{"style":870},[1214],{"type":574,"value":904},{"type":569,"tag":619,"props":1216,"children":1217},{"style":876},[1218],{"type":574,"value":940},{"type":569,"tag":619,"props":1220,"children":1221},{"style":870},[1222],{"type":574,"value":923},{"type":569,"tag":619,"props":1224,"children":1226},{"class":621,"line":1225},21,[1227,1232,1236,1241,1245],{"type":569,"tag":619,"props":1228,"children":1229},{"style":997},[1230],{"type":574,"value":1231},"  while",{"type":569,"tag":619,"props":1233,"children":1234},{"style":870},[1235],{"type":574,"value":1087},{"type":569,"tag":619,"props":1237,"children":1238},{"style":876},[1239],{"type":574,"value":1240},"slow",{"type":569,"tag":619,"props":1242,"children":1243},{"style":870},[1244],{"type":574,"value":884},{"type":569,"tag":619,"props":1246,"children":1247},{"style":870},[1248],{"type":574,"value":889},{"type":569,"tag":619,"props":1250,"children":1252},{"class":621,"line":1251},22,[1253,1258,1262,1266,1271,1275,1279,1283,1288],{"type":569,"tag":619,"props":1254,"children":1255},{"style":997},[1256],{"type":574,"value":1257},"    if",{"type":569,"tag":619,"props":1259,"children":1260},{"style":870},[1261],{"type":574,"value":1087},{"type":569,"tag":619,"props":1263,"children":1264},{"style":876},[1265],{"type":574,"value":1240},{"type":569,"tag":619,"props":1267,"children":1268},{"style":858},[1269],{"type":574,"value":1270}," ===",{"type":569,"tag":619,"props":1272,"children":1273},{"style":876},[1274],{"type":574,"value":1202},{"type":569,"tag":619,"props":1276,"children":1277},{"style":870},[1278],{"type":574,"value":884},{"type":569,"tag":619,"props":1280,"children":1281},{"style":997},[1282],{"type":574,"value":1153},{"type":569,"tag":619,"props":1284,"children":1285},{"style":997},[1286],{"type":574,"value":1287}," true",{"type":569,"tag":619,"props":1289,"children":1290},{"style":870},[1291],{"type":574,"value":923},{"type":569,"tag":619,"props":1293,"children":1295},{"class":621,"line":1294},23,[1296,1301,1305,1309,1313,1317],{"type":569,"tag":619,"props":1297,"children":1298},{"style":876},[1299],{"type":574,"value":1300},"    slow",{"type":569,"tag":619,"props":1302,"children":1303},{"style":870},[1304],{"type":574,"value":913},{"type":569,"tag":619,"props":1306,"children":1307},{"style":876},[1308],{"type":574,"value":1176},{"type":569,"tag":619,"props":1310,"children":1311},{"style":870},[1312],{"type":574,"value":904},{"type":569,"tag":619,"props":1314,"children":1315},{"style":876},[1316],{"type":574,"value":940},{"type":569,"tag":619,"props":1318,"children":1319},{"style":870},[1320],{"type":574,"value":923},{"type":569,"tag":619,"props":1322,"children":1324},{"class":621,"line":1323},24,[1325,1330,1334,1338,1343,1347,1351,1355,1360,1364],{"type":569,"tag":619,"props":1326,"children":1327},{"style":876},[1328],{"type":574,"value":1329},"    fast",{"type":569,"tag":619,"props":1331,"children":1332},{"style":870},[1333],{"type":574,"value":913},{"type":569,"tag":619,"props":1335,"children":1336},{"style":876},[1337],{"type":574,"value":1202},{"type":569,"tag":619,"props":1339,"children":1340},{"style":858},[1341],{"type":574,"value":1342}," &&",{"type":569,"tag":619,"props":1344,"children":1345},{"style":876},[1346],{"type":574,"value":1202},{"type":569,"tag":619,"props":1348,"children":1349},{"style":870},[1350],{"type":574,"value":904},{"type":569,"tag":619,"props":1352,"children":1353},{"style":876},[1354],{"type":574,"value":940},{"type":569,"tag":619,"props":1356,"children":1357},{"style":870},[1358],{"type":574,"value":1359},"?.",{"type":569,"tag":619,"props":1361,"children":1362},{"style":876},[1363],{"type":574,"value":940},{"type":569,"tag":619,"props":1365,"children":1366},{"style":870},[1367],{"type":574,"value":923},{"type":569,"tag":619,"props":1369,"children":1371},{"class":621,"line":1370},25,[1372],{"type":569,"tag":619,"props":1373,"children":1374},{"style":870},[1375],{"type":574,"value":1376},"  }\n",{"type":569,"tag":619,"props":1378,"children":1380},{"class":621,"line":1379},26,[1381,1386,1390],{"type":569,"tag":619,"props":1382,"children":1383},{"style":997},[1384],{"type":574,"value":1385},"  return",{"type":569,"tag":619,"props":1387,"children":1388},{"style":997},[1389],{"type":574,"value":1158},{"type":569,"tag":619,"props":1391,"children":1392},{"style":870},[1393],{"type":574,"value":923},{"type":569,"tag":619,"props":1395,"children":1397},{"class":621,"line":1396},27,[1398],{"type":569,"tag":619,"props":1399,"children":1400},{"style":870},[1401],{"type":574,"value":1402},"};\n",{"type":569,"tag":776,"props":1404,"children":1406},{"id":1405},"哈希法",[1407],{"type":574,"value":1405},{"type":569,"tag":609,"props":1409,"children":1411},{"className":784,"code":1410,"language":786,"meta":562,"style":562},"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar hasCycle = function (head) {\n  let map = new Map();\n  while (head) {\n    if (map.has(head)) return true;\n    map.set(head, 1);\n    head = head.next;\n  }\n  return false;\n};\n",[1412],{"type":569,"tag":615,"props":1413,"children":1414},{"__ignoreMap":562},[1415,1422,1429,1436,1443,1450,1457,1464,1491,1518,1545,1552,1559,1566,1597,1624,1631,1666,1697,1720,1770,1811,1839,1846,1861],{"type":569,"tag":619,"props":1416,"children":1417},{"class":621,"line":622},[1418],{"type":569,"tag":619,"props":1419,"children":1420},{"style":796},[1421],{"type":574,"value":799},{"type":569,"tag":619,"props":1423,"children":1424},{"class":621,"line":631},[1425],{"type":569,"tag":619,"props":1426,"children":1427},{"style":796},[1428],{"type":574,"value":807},{"type":569,"tag":619,"props":1430,"children":1431},{"class":621,"line":640},[1432],{"type":569,"tag":619,"props":1433,"children":1434},{"style":796},[1435],{"type":574,"value":815},{"type":569,"tag":619,"props":1437,"children":1438},{"class":621,"line":818},[1439],{"type":569,"tag":619,"props":1440,"children":1441},{"style":796},[1442],{"type":574,"value":824},{"type":569,"tag":619,"props":1444,"children":1445},{"class":621,"line":827},[1446],{"type":569,"tag":619,"props":1447,"children":1448},{"style":796},[1449],{"type":574,"value":833},{"type":569,"tag":619,"props":1451,"children":1452},{"class":621,"line":836},[1453],{"type":569,"tag":619,"props":1454,"children":1455},{"style":796},[1456],{"type":574,"value":842},{"type":569,"tag":619,"props":1458,"children":1459},{"class":621,"line":845},[1460],{"type":569,"tag":619,"props":1461,"children":1462},{"style":796},[1463],{"type":574,"value":851},{"type":569,"tag":619,"props":1465,"children":1466},{"class":621,"line":854},[1467,1471,1475,1479,1483,1487],{"type":569,"tag":619,"props":1468,"children":1469},{"style":858},[1470],{"type":574,"value":861},{"type":569,"tag":619,"props":1472,"children":1473},{"style":864},[1474],{"type":574,"value":867},{"type":569,"tag":619,"props":1476,"children":1477},{"style":870},[1478],{"type":574,"value":873},{"type":569,"tag":619,"props":1480,"children":1481},{"style":876},[1482],{"type":574,"value":879},{"type":569,"tag":619,"props":1484,"children":1485},{"style":870},[1486],{"type":574,"value":884},{"type":569,"tag":619,"props":1488,"children":1489},{"style":870},[1490],{"type":574,"value":889},{"type":569,"tag":619,"props":1492,"children":1493},{"class":621,"line":892},[1494,1498,1502,1506,1510,1514],{"type":569,"tag":619,"props":1495,"children":1496},{"style":896},[1497],{"type":574,"value":899},{"type":569,"tag":619,"props":1499,"children":1500},{"style":870},[1501],{"type":574,"value":904},{"type":569,"tag":619,"props":1503,"children":1504},{"style":876},[1505],{"type":574,"value":879},{"type":569,"tag":619,"props":1507,"children":1508},{"style":870},[1509],{"type":574,"value":913},{"type":569,"tag":619,"props":1511,"children":1512},{"style":876},[1513],{"type":574,"value":918},{"type":569,"tag":619,"props":1515,"children":1516},{"style":870},[1517],{"type":574,"value":923},{"type":569,"tag":619,"props":1519,"children":1520},{"class":621,"line":926},[1521,1525,1529,1533,1537,1541],{"type":569,"tag":619,"props":1522,"children":1523},{"style":896},[1524],{"type":574,"value":899},{"type":569,"tag":619,"props":1526,"children":1527},{"style":870},[1528],{"type":574,"value":904},{"type":569,"tag":619,"props":1530,"children":1531},{"style":876},[1532],{"type":574,"value":940},{"type":569,"tag":619,"props":1534,"children":1535},{"style":870},[1536],{"type":574,"value":913},{"type":569,"tag":619,"props":1538,"children":1539},{"style":858},[1540],{"type":574,"value":949},{"type":569,"tag":619,"props":1542,"children":1543},{"style":870},[1544],{"type":574,"value":923},{"type":569,"tag":619,"props":1546,"children":1547},{"class":621,"line":956},[1548],{"type":569,"tag":619,"props":1549,"children":1550},{"style":870},[1551],{"type":574,"value":962},{"type":569,"tag":619,"props":1553,"children":1554},{"class":621,"line":965},[1555],{"type":569,"tag":619,"props":1556,"children":1557},{"emptyLinePlaceholder":969},[1558],{"type":574,"value":972},{"type":569,"tag":619,"props":1560,"children":1561},{"class":621,"line":975},[1562],{"type":569,"tag":619,"props":1563,"children":1564},{"style":796},[1565],{"type":574,"value":799},{"type":569,"tag":619,"props":1567,"children":1568},{"class":621,"line":983},[1569,1573,1577,1581,1585,1589,1593],{"type":569,"tag":619,"props":1570,"children":1571},{"style":796},[1572],{"type":574,"value":989},{"type":569,"tag":619,"props":1574,"children":1575},{"style":870},[1576],{"type":574,"value":994},{"type":569,"tag":619,"props":1578,"children":1579},{"style":997},[1580],{"type":574,"value":1000},{"type":569,"tag":619,"props":1582,"children":1583},{"style":870},[1584],{"type":574,"value":1005},{"type":569,"tag":619,"props":1586,"children":1587},{"style":1008},[1588],{"type":574,"value":1011},{"type":569,"tag":619,"props":1590,"children":1591},{"style":870},[1592],{"type":574,"value":1016},{"type":569,"tag":619,"props":1594,"children":1595},{"style":876},[1596],{"type":574,"value":1021},{"type":569,"tag":619,"props":1598,"children":1599},{"class":621,"line":1024},[1600,1604,1608,1612,1616,1620],{"type":569,"tag":619,"props":1601,"children":1602},{"style":796},[1603],{"type":574,"value":989},{"type":569,"tag":619,"props":1605,"children":1606},{"style":870},[1607],{"type":574,"value":994},{"type":569,"tag":619,"props":1609,"children":1610},{"style":997},[1611],{"type":574,"value":1038},{"type":569,"tag":619,"props":1613,"children":1614},{"style":870},[1615],{"type":574,"value":1005},{"type":569,"tag":619,"props":1617,"children":1618},{"style":1008},[1619],{"type":574,"value":1047},{"type":569,"tag":619,"props":1621,"children":1622},{"style":870},[1623],{"type":574,"value":962},{"type":569,"tag":619,"props":1625,"children":1626},{"class":621,"line":1054},[1627],{"type":569,"tag":619,"props":1628,"children":1629},{"style":796},[1630],{"type":574,"value":851},{"type":569,"tag":619,"props":1632,"children":1633},{"class":621,"line":1062},[1634,1638,1642,1646,1650,1654,1658,1662],{"type":569,"tag":619,"props":1635,"children":1636},{"style":858},[1637],{"type":574,"value":1068},{"type":569,"tag":619,"props":1639,"children":1640},{"style":864},[1641],{"type":574,"value":1073},{"type":569,"tag":619,"props":1643,"children":1644},{"style":870},[1645],{"type":574,"value":913},{"type":569,"tag":619,"props":1647,"children":1648},{"style":858},[1649],{"type":574,"value":1082},{"type":569,"tag":619,"props":1651,"children":1652},{"style":870},[1653],{"type":574,"value":1087},{"type":569,"tag":619,"props":1655,"children":1656},{"style":876},[1657],{"type":574,"value":1092},{"type":569,"tag":619,"props":1659,"children":1660},{"style":870},[1661],{"type":574,"value":884},{"type":569,"tag":619,"props":1663,"children":1664},{"style":870},[1665],{"type":574,"value":889},{"type":569,"tag":619,"props":1667,"children":1668},{"class":621,"line":1103},[1669,1673,1678,1682,1687,1692],{"type":569,"tag":619,"props":1670,"children":1671},{"style":858},[1672],{"type":574,"value":1171},{"type":569,"tag":619,"props":1674,"children":1675},{"style":876},[1676],{"type":574,"value":1677}," map",{"type":569,"tag":619,"props":1679,"children":1680},{"style":870},[1681],{"type":574,"value":913},{"type":569,"tag":619,"props":1683,"children":1684},{"style":858},[1685],{"type":574,"value":1686}," new",{"type":569,"tag":619,"props":1688,"children":1689},{"style":864},[1690],{"type":574,"value":1691}," Map",{"type":569,"tag":619,"props":1693,"children":1694},{"style":870},[1695],{"type":574,"value":1696},"();\n",{"type":569,"tag":619,"props":1698,"children":1699},{"class":621,"line":1165},[1700,1704,1708,1712,1716],{"type":569,"tag":619,"props":1701,"children":1702},{"style":997},[1703],{"type":574,"value":1231},{"type":569,"tag":619,"props":1705,"children":1706},{"style":870},[1707],{"type":574,"value":1087},{"type":569,"tag":619,"props":1709,"children":1710},{"style":876},[1711],{"type":574,"value":1092},{"type":569,"tag":619,"props":1713,"children":1714},{"style":870},[1715],{"type":574,"value":884},{"type":569,"tag":619,"props":1717,"children":1718},{"style":870},[1719],{"type":574,"value":889},{"type":569,"tag":619,"props":1721,"children":1722},{"class":621,"line":1192},[1723,1727,1731,1736,1740,1745,1749,1753,1758,1762,1766],{"type":569,"tag":619,"props":1724,"children":1725},{"style":997},[1726],{"type":574,"value":1257},{"type":569,"tag":619,"props":1728,"children":1729},{"style":870},[1730],{"type":574,"value":1087},{"type":569,"tag":619,"props":1732,"children":1733},{"style":876},[1734],{"type":574,"value":1735},"map",{"type":569,"tag":619,"props":1737,"children":1738},{"style":870},[1739],{"type":574,"value":904},{"type":569,"tag":619,"props":1741,"children":1742},{"style":864},[1743],{"type":574,"value":1744},"has",{"type":569,"tag":619,"props":1746,"children":1747},{"style":870},[1748],{"type":574,"value":873},{"type":569,"tag":619,"props":1750,"children":1751},{"style":876},[1752],{"type":574,"value":1092},{"type":569,"tag":619,"props":1754,"children":1755},{"style":870},[1756],{"type":574,"value":1757},"))",{"type":569,"tag":619,"props":1759,"children":1760},{"style":997},[1761],{"type":574,"value":1153},{"type":569,"tag":619,"props":1763,"children":1764},{"style":997},[1765],{"type":574,"value":1287},{"type":569,"tag":619,"props":1767,"children":1768},{"style":870},[1769],{"type":574,"value":923},{"type":569,"tag":619,"props":1771,"children":1772},{"class":621,"line":1225},[1773,1778,1782,1787,1791,1795,1800,1806],{"type":569,"tag":619,"props":1774,"children":1775},{"style":876},[1776],{"type":574,"value":1777},"    map",{"type":569,"tag":619,"props":1779,"children":1780},{"style":870},[1781],{"type":574,"value":904},{"type":569,"tag":619,"props":1783,"children":1784},{"style":864},[1785],{"type":574,"value":1786},"set",{"type":569,"tag":619,"props":1788,"children":1789},{"style":870},[1790],{"type":574,"value":873},{"type":569,"tag":619,"props":1792,"children":1793},{"style":876},[1794],{"type":574,"value":1092},{"type":569,"tag":619,"props":1796,"children":1797},{"style":870},[1798],{"type":574,"value":1799},",",{"type":569,"tag":619,"props":1801,"children":1803},{"style":1802},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1804],{"type":574,"value":1805}," 1",{"type":569,"tag":619,"props":1807,"children":1808},{"style":870},[1809],{"type":574,"value":1810},");\n",{"type":569,"tag":619,"props":1812,"children":1813},{"class":621,"line":1251},[1814,1819,1823,1827,1831,1835],{"type":569,"tag":619,"props":1815,"children":1816},{"style":876},[1817],{"type":574,"value":1818},"    head",{"type":569,"tag":619,"props":1820,"children":1821},{"style":870},[1822],{"type":574,"value":913},{"type":569,"tag":619,"props":1824,"children":1825},{"style":876},[1826],{"type":574,"value":1185},{"type":569,"tag":619,"props":1828,"children":1829},{"style":870},[1830],{"type":574,"value":904},{"type":569,"tag":619,"props":1832,"children":1833},{"style":876},[1834],{"type":574,"value":940},{"type":569,"tag":619,"props":1836,"children":1837},{"style":870},[1838],{"type":574,"value":923},{"type":569,"tag":619,"props":1840,"children":1841},{"class":621,"line":1294},[1842],{"type":569,"tag":619,"props":1843,"children":1844},{"style":870},[1845],{"type":574,"value":1376},{"type":569,"tag":619,"props":1847,"children":1848},{"class":621,"line":1323},[1849,1853,1857],{"type":569,"tag":619,"props":1850,"children":1851},{"style":997},[1852],{"type":574,"value":1385},{"type":569,"tag":619,"props":1854,"children":1855},{"style":997},[1856],{"type":574,"value":1158},{"type":569,"tag":619,"props":1858,"children":1859},{"style":870},[1860],{"type":574,"value":923},{"type":569,"tag":619,"props":1862,"children":1863},{"class":621,"line":1370},[1864],{"type":569,"tag":619,"props":1865,"children":1866},{"style":870},[1867],{"type":574,"value":1402},{"type":569,"tag":1869,"props":1870,"children":1871},"style",{},[1872],{"type":574,"value":1873},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":827,"depth":827,"links":1875},[1876,1877],{"id":767,"depth":631,"text":767},{"id":772,"depth":631,"text":772,"children":1878},[1879,1880],{"id":778,"depth":640,"text":781},{"id":1405,"depth":640,"text":1405},"markdown","content:1.algorithm:3.leetcode:3.major:141.linked-list-cycle.md","content","1.algorithm/3.leetcode/3.major/141.linked-list-cycle.md","md",[1887,1889],{"_path":171,"title":170,"description":1888},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",{"_path":177,"title":176,"description":1890},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",1717731140113]