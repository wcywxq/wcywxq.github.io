[{"data":1,"prerenderedAt":1872},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/linked-list-cycle":540,"/algorithm/leetcode/major/linked-list-cycle-surround":1867},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":174,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":173,"description":544,"url":545,"body":546,"_type":1862,"_id":1863,"_source":1864,"_file":1865,"_extension":1866},"major",false,"","给你一个链表的头节点 head ，判断链表中是否有环。","https://leetcode.cn/problems/linked-list-cycle",{"type":547,"children":548,"toc":1855},"root",[549,556,561,570,575,580,589,628,633,641,671,676,684,715,720,740,745,751,756,763,1384,1389,1849],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。",{"type":550,"tag":562,"props":563,"children":564},"blockquote",{},[565],{"type":550,"tag":551,"props":566,"children":567},{},[568],{"type":555,"value":569},"注意：pos 不作为参数进行传递 。仅仅是为了标识链表的实际情况。",{"type":550,"tag":551,"props":571,"children":572},{},[573],{"type":555,"value":574},"如果链表中存在环 ，则返回 true 。 否则，返回 false 。",{"type":550,"tag":551,"props":576,"children":577},{},[578],{"type":555,"value":579},"示例 1：",{"type":550,"tag":551,"props":581,"children":582},{},[583],{"type":550,"tag":584,"props":585,"children":588},"img",{"alt":586,"src":587},"circularlinkedlist","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.141_circularlinkedlist.png",[],{"type":550,"tag":590,"props":591,"children":594},"pre",{"className":592,"code":593,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：head = [3,2,0,-4], pos = 1\n输出：true\n解释：链表中有一个环，其尾部连接到第二个节点。\n",[595],{"type":550,"tag":596,"props":597,"children":598},"code",{"__ignoreMap":543},[599,610,619],{"type":550,"tag":600,"props":601,"children":604},"span",{"class":602,"line":603},"line",1,[605],{"type":550,"tag":600,"props":606,"children":607},{},[608],{"type":555,"value":609},"输入：head = [3,2,0,-4], pos = 1\n",{"type":550,"tag":600,"props":611,"children":613},{"class":602,"line":612},2,[614],{"type":550,"tag":600,"props":615,"children":616},{},[617],{"type":555,"value":618},"输出：true\n",{"type":550,"tag":600,"props":620,"children":622},{"class":602,"line":621},3,[623],{"type":550,"tag":600,"props":624,"children":625},{},[626],{"type":555,"value":627},"解释：链表中有一个环，其尾部连接到第二个节点。\n",{"type":550,"tag":551,"props":629,"children":630},{},[631],{"type":555,"value":632},"示例 2：",{"type":550,"tag":551,"props":634,"children":635},{},[636],{"type":550,"tag":584,"props":637,"children":640},{"alt":638,"src":639},"circularlinkedlist_test2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.141_circularlinkedlist_test2.png",[],{"type":550,"tag":590,"props":642,"children":644},{"className":592,"code":643,"language":555,"meta":543,"style":543},"输入：head = [1,2], pos = 0\n输出：true\n解释：链表中有一个环，其尾部连接到第一个节点。\n",[645],{"type":550,"tag":596,"props":646,"children":647},{"__ignoreMap":543},[648,656,663],{"type":550,"tag":600,"props":649,"children":650},{"class":602,"line":603},[651],{"type":550,"tag":600,"props":652,"children":653},{},[654],{"type":555,"value":655},"输入：head = [1,2], pos = 0\n",{"type":550,"tag":600,"props":657,"children":658},{"class":602,"line":612},[659],{"type":550,"tag":600,"props":660,"children":661},{},[662],{"type":555,"value":618},{"type":550,"tag":600,"props":664,"children":665},{"class":602,"line":621},[666],{"type":550,"tag":600,"props":667,"children":668},{},[669],{"type":555,"value":670},"解释：链表中有一个环，其尾部连接到第一个节点。\n",{"type":550,"tag":551,"props":672,"children":673},{},[674],{"type":555,"value":675},"示例 3：",{"type":550,"tag":551,"props":677,"children":678},{},[679],{"type":550,"tag":584,"props":680,"children":683},{"alt":681,"src":682},"circularlinkedlist_test3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.141_circularlinkedlist_test3.png",[],{"type":550,"tag":590,"props":685,"children":687},{"className":592,"code":686,"language":555,"meta":543,"style":543},"输入：head = [1], pos = -1\n输出：false\n解释：链表中没有环。\n",[688],{"type":550,"tag":596,"props":689,"children":690},{"__ignoreMap":543},[691,699,707],{"type":550,"tag":600,"props":692,"children":693},{"class":602,"line":603},[694],{"type":550,"tag":600,"props":695,"children":696},{},[697],{"type":555,"value":698},"输入：head = [1], pos = -1\n",{"type":550,"tag":600,"props":700,"children":701},{"class":602,"line":612},[702],{"type":550,"tag":600,"props":703,"children":704},{},[705],{"type":555,"value":706},"输出：false\n",{"type":550,"tag":600,"props":708,"children":709},{"class":602,"line":621},[710],{"type":550,"tag":600,"props":711,"children":712},{},[713],{"type":555,"value":714},"解释：链表中没有环。\n",{"type":550,"tag":551,"props":716,"children":717},{},[718],{"type":555,"value":719},"提示：",{"type":550,"tag":721,"props":722,"children":723},"ul",{},[724,730,735],{"type":550,"tag":725,"props":726,"children":727},"li",{},[728],{"type":555,"value":729},"链表中节点的数目范围是 [0, 10^4]",{"type":550,"tag":725,"props":731,"children":732},{},[733],{"type":555,"value":734},"-10^5 \u003C= Node.val \u003C= 10^5",{"type":550,"tag":725,"props":736,"children":737},{},[738],{"type":555,"value":739},"pos 为 -1 或者链表中的一个 有效索引 。",{"type":550,"tag":551,"props":741,"children":742},{},[743],{"type":555,"value":744},"进阶：你能用 O(1)（即，常量）内存解决此问题吗？",{"type":550,"tag":746,"props":747,"children":749},"h2",{"id":748},"解题思路",[750],{"type":555,"value":748},{"type":550,"tag":746,"props":752,"children":754},{"id":753},"实现",[755],{"type":555,"value":753},{"type":550,"tag":757,"props":758,"children":760},"h3",{"id":759},"双指针-快慢指针",[761],{"type":555,"value":762},"双指针 - 快慢指针",{"type":550,"tag":590,"props":764,"children":768},{"className":765,"code":766,"language":767,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar hasCycle = function (head) {\n  if (!head || !head.next) return false;\n  let slow = head;\n  let fast = head.next;\n  while (slow) {\n    if (slow === fast) return true;\n    slow = slow.next;\n    fast = fast && fast.next?.next;\n  }\n  return false;\n};\n","js",[769],{"type":550,"tag":596,"props":770,"children":771},{"__ignoreMap":543},[772,781,789,797,806,815,824,833,871,905,935,944,954,962,1003,1033,1041,1082,1144,1171,1204,1230,1273,1302,1349,1358,1375],{"type":550,"tag":600,"props":773,"children":774},{"class":602,"line":603},[775],{"type":550,"tag":600,"props":776,"children":778},{"style":777},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[779],{"type":555,"value":780},"/**\n",{"type":550,"tag":600,"props":782,"children":783},{"class":602,"line":612},[784],{"type":550,"tag":600,"props":785,"children":786},{"style":777},[787],{"type":555,"value":788}," * Definition for singly-linked list.\n",{"type":550,"tag":600,"props":790,"children":791},{"class":602,"line":621},[792],{"type":550,"tag":600,"props":793,"children":794},{"style":777},[795],{"type":555,"value":796}," * function ListNode(val) {\n",{"type":550,"tag":600,"props":798,"children":800},{"class":602,"line":799},4,[801],{"type":550,"tag":600,"props":802,"children":803},{"style":777},[804],{"type":555,"value":805}," *     this.val = val;\n",{"type":550,"tag":600,"props":807,"children":809},{"class":602,"line":808},5,[810],{"type":550,"tag":600,"props":811,"children":812},{"style":777},[813],{"type":555,"value":814}," *     this.next = null;\n",{"type":550,"tag":600,"props":816,"children":818},{"class":602,"line":817},6,[819],{"type":550,"tag":600,"props":820,"children":821},{"style":777},[822],{"type":555,"value":823}," * }\n",{"type":550,"tag":600,"props":825,"children":827},{"class":602,"line":826},7,[828],{"type":550,"tag":600,"props":829,"children":830},{"style":777},[831],{"type":555,"value":832}," */\n",{"type":550,"tag":600,"props":834,"children":836},{"class":602,"line":835},8,[837,843,849,855,861,866],{"type":550,"tag":600,"props":838,"children":840},{"style":839},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[841],{"type":555,"value":842},"function",{"type":550,"tag":600,"props":844,"children":846},{"style":845},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[847],{"type":555,"value":848}," ListNode",{"type":550,"tag":600,"props":850,"children":852},{"style":851},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[853],{"type":555,"value":854},"(",{"type":550,"tag":600,"props":856,"children":858},{"style":857},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[859],{"type":555,"value":860},"val",{"type":550,"tag":600,"props":862,"children":863},{"style":851},[864],{"type":555,"value":865},")",{"type":550,"tag":600,"props":867,"children":868},{"style":851},[869],{"type":555,"value":870}," {\n",{"type":550,"tag":600,"props":872,"children":874},{"class":602,"line":873},9,[875,881,886,890,895,900],{"type":550,"tag":600,"props":876,"children":878},{"style":877},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[879],{"type":555,"value":880},"  this",{"type":550,"tag":600,"props":882,"children":883},{"style":851},[884],{"type":555,"value":885},".",{"type":550,"tag":600,"props":887,"children":888},{"style":857},[889],{"type":555,"value":860},{"type":550,"tag":600,"props":891,"children":892},{"style":851},[893],{"type":555,"value":894}," =",{"type":550,"tag":600,"props":896,"children":897},{"style":857},[898],{"type":555,"value":899}," val",{"type":550,"tag":600,"props":901,"children":902},{"style":851},[903],{"type":555,"value":904},";\n",{"type":550,"tag":600,"props":906,"children":908},{"class":602,"line":907},10,[909,913,917,922,926,931],{"type":550,"tag":600,"props":910,"children":911},{"style":877},[912],{"type":555,"value":880},{"type":550,"tag":600,"props":914,"children":915},{"style":851},[916],{"type":555,"value":885},{"type":550,"tag":600,"props":918,"children":919},{"style":857},[920],{"type":555,"value":921},"next",{"type":550,"tag":600,"props":923,"children":924},{"style":851},[925],{"type":555,"value":894},{"type":550,"tag":600,"props":927,"children":928},{"style":839},[929],{"type":555,"value":930}," null",{"type":550,"tag":600,"props":932,"children":933},{"style":851},[934],{"type":555,"value":904},{"type":550,"tag":600,"props":936,"children":938},{"class":602,"line":937},11,[939],{"type":550,"tag":600,"props":940,"children":941},{"style":851},[942],{"type":555,"value":943},"}\n",{"type":550,"tag":600,"props":945,"children":947},{"class":602,"line":946},12,[948],{"type":550,"tag":600,"props":949,"children":951},{"emptyLinePlaceholder":950},true,[952],{"type":555,"value":953},"\n",{"type":550,"tag":600,"props":955,"children":957},{"class":602,"line":956},13,[958],{"type":550,"tag":600,"props":959,"children":960},{"style":777},[961],{"type":555,"value":780},{"type":550,"tag":600,"props":963,"children":965},{"class":602,"line":964},14,[966,971,976,982,987,993,998],{"type":550,"tag":600,"props":967,"children":968},{"style":777},[969],{"type":555,"value":970}," * ",{"type":550,"tag":600,"props":972,"children":973},{"style":851},[974],{"type":555,"value":975},"@",{"type":550,"tag":600,"props":977,"children":979},{"style":978},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[980],{"type":555,"value":981},"param",{"type":550,"tag":600,"props":983,"children":984},{"style":851},[985],{"type":555,"value":986}," {",{"type":550,"tag":600,"props":988,"children":990},{"style":989},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[991],{"type":555,"value":992},"ListNode",{"type":550,"tag":600,"props":994,"children":995},{"style":851},[996],{"type":555,"value":997},"}",{"type":550,"tag":600,"props":999,"children":1000},{"style":857},[1001],{"type":555,"value":1002}," head\n",{"type":550,"tag":600,"props":1004,"children":1006},{"class":602,"line":1005},15,[1007,1011,1015,1020,1024,1029],{"type":550,"tag":600,"props":1008,"children":1009},{"style":777},[1010],{"type":555,"value":970},{"type":550,"tag":600,"props":1012,"children":1013},{"style":851},[1014],{"type":555,"value":975},{"type":550,"tag":600,"props":1016,"children":1017},{"style":978},[1018],{"type":555,"value":1019},"return",{"type":550,"tag":600,"props":1021,"children":1022},{"style":851},[1023],{"type":555,"value":986},{"type":550,"tag":600,"props":1025,"children":1026},{"style":989},[1027],{"type":555,"value":1028},"boolean",{"type":550,"tag":600,"props":1030,"children":1031},{"style":851},[1032],{"type":555,"value":943},{"type":550,"tag":600,"props":1034,"children":1036},{"class":602,"line":1035},16,[1037],{"type":550,"tag":600,"props":1038,"children":1039},{"style":777},[1040],{"type":555,"value":832},{"type":550,"tag":600,"props":1042,"children":1044},{"class":602,"line":1043},17,[1045,1050,1055,1059,1064,1069,1074,1078],{"type":550,"tag":600,"props":1046,"children":1047},{"style":839},[1048],{"type":555,"value":1049},"var",{"type":550,"tag":600,"props":1051,"children":1052},{"style":845},[1053],{"type":555,"value":1054}," hasCycle",{"type":550,"tag":600,"props":1056,"children":1057},{"style":851},[1058],{"type":555,"value":894},{"type":550,"tag":600,"props":1060,"children":1061},{"style":839},[1062],{"type":555,"value":1063}," function",{"type":550,"tag":600,"props":1065,"children":1066},{"style":851},[1067],{"type":555,"value":1068}," (",{"type":550,"tag":600,"props":1070,"children":1071},{"style":857},[1072],{"type":555,"value":1073},"head",{"type":550,"tag":600,"props":1075,"children":1076},{"style":851},[1077],{"type":555,"value":865},{"type":550,"tag":600,"props":1079,"children":1080},{"style":851},[1081],{"type":555,"value":870},{"type":550,"tag":600,"props":1083,"children":1085},{"class":602,"line":1084},18,[1086,1091,1095,1100,1104,1109,1114,1118,1122,1126,1130,1135,1140],{"type":550,"tag":600,"props":1087,"children":1088},{"style":978},[1089],{"type":555,"value":1090},"  if",{"type":550,"tag":600,"props":1092,"children":1093},{"style":851},[1094],{"type":555,"value":1068},{"type":550,"tag":600,"props":1096,"children":1097},{"style":839},[1098],{"type":555,"value":1099},"!",{"type":550,"tag":600,"props":1101,"children":1102},{"style":857},[1103],{"type":555,"value":1073},{"type":550,"tag":600,"props":1105,"children":1106},{"style":839},[1107],{"type":555,"value":1108}," ||",{"type":550,"tag":600,"props":1110,"children":1111},{"style":839},[1112],{"type":555,"value":1113}," !",{"type":550,"tag":600,"props":1115,"children":1116},{"style":857},[1117],{"type":555,"value":1073},{"type":550,"tag":600,"props":1119,"children":1120},{"style":851},[1121],{"type":555,"value":885},{"type":550,"tag":600,"props":1123,"children":1124},{"style":857},[1125],{"type":555,"value":921},{"type":550,"tag":600,"props":1127,"children":1128},{"style":851},[1129],{"type":555,"value":865},{"type":550,"tag":600,"props":1131,"children":1132},{"style":978},[1133],{"type":555,"value":1134}," return",{"type":550,"tag":600,"props":1136,"children":1137},{"style":978},[1138],{"type":555,"value":1139}," false",{"type":550,"tag":600,"props":1141,"children":1142},{"style":851},[1143],{"type":555,"value":904},{"type":550,"tag":600,"props":1145,"children":1147},{"class":602,"line":1146},19,[1148,1153,1158,1162,1167],{"type":550,"tag":600,"props":1149,"children":1150},{"style":839},[1151],{"type":555,"value":1152},"  let",{"type":550,"tag":600,"props":1154,"children":1155},{"style":857},[1156],{"type":555,"value":1157}," slow",{"type":550,"tag":600,"props":1159,"children":1160},{"style":851},[1161],{"type":555,"value":894},{"type":550,"tag":600,"props":1163,"children":1164},{"style":857},[1165],{"type":555,"value":1166}," head",{"type":550,"tag":600,"props":1168,"children":1169},{"style":851},[1170],{"type":555,"value":904},{"type":550,"tag":600,"props":1172,"children":1174},{"class":602,"line":1173},20,[1175,1179,1184,1188,1192,1196,1200],{"type":550,"tag":600,"props":1176,"children":1177},{"style":839},[1178],{"type":555,"value":1152},{"type":550,"tag":600,"props":1180,"children":1181},{"style":857},[1182],{"type":555,"value":1183}," fast",{"type":550,"tag":600,"props":1185,"children":1186},{"style":851},[1187],{"type":555,"value":894},{"type":550,"tag":600,"props":1189,"children":1190},{"style":857},[1191],{"type":555,"value":1166},{"type":550,"tag":600,"props":1193,"children":1194},{"style":851},[1195],{"type":555,"value":885},{"type":550,"tag":600,"props":1197,"children":1198},{"style":857},[1199],{"type":555,"value":921},{"type":550,"tag":600,"props":1201,"children":1202},{"style":851},[1203],{"type":555,"value":904},{"type":550,"tag":600,"props":1205,"children":1207},{"class":602,"line":1206},21,[1208,1213,1217,1222,1226],{"type":550,"tag":600,"props":1209,"children":1210},{"style":978},[1211],{"type":555,"value":1212},"  while",{"type":550,"tag":600,"props":1214,"children":1215},{"style":851},[1216],{"type":555,"value":1068},{"type":550,"tag":600,"props":1218,"children":1219},{"style":857},[1220],{"type":555,"value":1221},"slow",{"type":550,"tag":600,"props":1223,"children":1224},{"style":851},[1225],{"type":555,"value":865},{"type":550,"tag":600,"props":1227,"children":1228},{"style":851},[1229],{"type":555,"value":870},{"type":550,"tag":600,"props":1231,"children":1233},{"class":602,"line":1232},22,[1234,1239,1243,1247,1252,1256,1260,1264,1269],{"type":550,"tag":600,"props":1235,"children":1236},{"style":978},[1237],{"type":555,"value":1238},"    if",{"type":550,"tag":600,"props":1240,"children":1241},{"style":851},[1242],{"type":555,"value":1068},{"type":550,"tag":600,"props":1244,"children":1245},{"style":857},[1246],{"type":555,"value":1221},{"type":550,"tag":600,"props":1248,"children":1249},{"style":839},[1250],{"type":555,"value":1251}," ===",{"type":550,"tag":600,"props":1253,"children":1254},{"style":857},[1255],{"type":555,"value":1183},{"type":550,"tag":600,"props":1257,"children":1258},{"style":851},[1259],{"type":555,"value":865},{"type":550,"tag":600,"props":1261,"children":1262},{"style":978},[1263],{"type":555,"value":1134},{"type":550,"tag":600,"props":1265,"children":1266},{"style":978},[1267],{"type":555,"value":1268}," true",{"type":550,"tag":600,"props":1270,"children":1271},{"style":851},[1272],{"type":555,"value":904},{"type":550,"tag":600,"props":1274,"children":1276},{"class":602,"line":1275},23,[1277,1282,1286,1290,1294,1298],{"type":550,"tag":600,"props":1278,"children":1279},{"style":857},[1280],{"type":555,"value":1281},"    slow",{"type":550,"tag":600,"props":1283,"children":1284},{"style":851},[1285],{"type":555,"value":894},{"type":550,"tag":600,"props":1287,"children":1288},{"style":857},[1289],{"type":555,"value":1157},{"type":550,"tag":600,"props":1291,"children":1292},{"style":851},[1293],{"type":555,"value":885},{"type":550,"tag":600,"props":1295,"children":1296},{"style":857},[1297],{"type":555,"value":921},{"type":550,"tag":600,"props":1299,"children":1300},{"style":851},[1301],{"type":555,"value":904},{"type":550,"tag":600,"props":1303,"children":1305},{"class":602,"line":1304},24,[1306,1311,1315,1319,1324,1328,1332,1336,1341,1345],{"type":550,"tag":600,"props":1307,"children":1308},{"style":857},[1309],{"type":555,"value":1310},"    fast",{"type":550,"tag":600,"props":1312,"children":1313},{"style":851},[1314],{"type":555,"value":894},{"type":550,"tag":600,"props":1316,"children":1317},{"style":857},[1318],{"type":555,"value":1183},{"type":550,"tag":600,"props":1320,"children":1321},{"style":839},[1322],{"type":555,"value":1323}," &&",{"type":550,"tag":600,"props":1325,"children":1326},{"style":857},[1327],{"type":555,"value":1183},{"type":550,"tag":600,"props":1329,"children":1330},{"style":851},[1331],{"type":555,"value":885},{"type":550,"tag":600,"props":1333,"children":1334},{"style":857},[1335],{"type":555,"value":921},{"type":550,"tag":600,"props":1337,"children":1338},{"style":851},[1339],{"type":555,"value":1340},"?.",{"type":550,"tag":600,"props":1342,"children":1343},{"style":857},[1344],{"type":555,"value":921},{"type":550,"tag":600,"props":1346,"children":1347},{"style":851},[1348],{"type":555,"value":904},{"type":550,"tag":600,"props":1350,"children":1352},{"class":602,"line":1351},25,[1353],{"type":550,"tag":600,"props":1354,"children":1355},{"style":851},[1356],{"type":555,"value":1357},"  }\n",{"type":550,"tag":600,"props":1359,"children":1361},{"class":602,"line":1360},26,[1362,1367,1371],{"type":550,"tag":600,"props":1363,"children":1364},{"style":978},[1365],{"type":555,"value":1366},"  return",{"type":550,"tag":600,"props":1368,"children":1369},{"style":978},[1370],{"type":555,"value":1139},{"type":550,"tag":600,"props":1372,"children":1373},{"style":851},[1374],{"type":555,"value":904},{"type":550,"tag":600,"props":1376,"children":1378},{"class":602,"line":1377},27,[1379],{"type":550,"tag":600,"props":1380,"children":1381},{"style":851},[1382],{"type":555,"value":1383},"};\n",{"type":550,"tag":757,"props":1385,"children":1387},{"id":1386},"哈希法",[1388],{"type":555,"value":1386},{"type":550,"tag":590,"props":1390,"children":1392},{"className":765,"code":1391,"language":767,"meta":543,"style":543},"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\nfunction ListNode(val) {\n  this.val = val;\n  this.next = null;\n}\n\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar hasCycle = function (head) {\n  let map = new Map();\n  while (head) {\n    if (map.has(head)) return true;\n    map.set(head, 1);\n    head = head.next;\n  }\n  return false;\n};\n",[1393],{"type":550,"tag":596,"props":1394,"children":1395},{"__ignoreMap":543},[1396,1403,1410,1417,1424,1431,1438,1445,1472,1499,1526,1533,1540,1547,1578,1605,1612,1647,1678,1701,1751,1792,1820,1827,1842],{"type":550,"tag":600,"props":1397,"children":1398},{"class":602,"line":603},[1399],{"type":550,"tag":600,"props":1400,"children":1401},{"style":777},[1402],{"type":555,"value":780},{"type":550,"tag":600,"props":1404,"children":1405},{"class":602,"line":612},[1406],{"type":550,"tag":600,"props":1407,"children":1408},{"style":777},[1409],{"type":555,"value":788},{"type":550,"tag":600,"props":1411,"children":1412},{"class":602,"line":621},[1413],{"type":550,"tag":600,"props":1414,"children":1415},{"style":777},[1416],{"type":555,"value":796},{"type":550,"tag":600,"props":1418,"children":1419},{"class":602,"line":799},[1420],{"type":550,"tag":600,"props":1421,"children":1422},{"style":777},[1423],{"type":555,"value":805},{"type":550,"tag":600,"props":1425,"children":1426},{"class":602,"line":808},[1427],{"type":550,"tag":600,"props":1428,"children":1429},{"style":777},[1430],{"type":555,"value":814},{"type":550,"tag":600,"props":1432,"children":1433},{"class":602,"line":817},[1434],{"type":550,"tag":600,"props":1435,"children":1436},{"style":777},[1437],{"type":555,"value":823},{"type":550,"tag":600,"props":1439,"children":1440},{"class":602,"line":826},[1441],{"type":550,"tag":600,"props":1442,"children":1443},{"style":777},[1444],{"type":555,"value":832},{"type":550,"tag":600,"props":1446,"children":1447},{"class":602,"line":835},[1448,1452,1456,1460,1464,1468],{"type":550,"tag":600,"props":1449,"children":1450},{"style":839},[1451],{"type":555,"value":842},{"type":550,"tag":600,"props":1453,"children":1454},{"style":845},[1455],{"type":555,"value":848},{"type":550,"tag":600,"props":1457,"children":1458},{"style":851},[1459],{"type":555,"value":854},{"type":550,"tag":600,"props":1461,"children":1462},{"style":857},[1463],{"type":555,"value":860},{"type":550,"tag":600,"props":1465,"children":1466},{"style":851},[1467],{"type":555,"value":865},{"type":550,"tag":600,"props":1469,"children":1470},{"style":851},[1471],{"type":555,"value":870},{"type":550,"tag":600,"props":1473,"children":1474},{"class":602,"line":873},[1475,1479,1483,1487,1491,1495],{"type":550,"tag":600,"props":1476,"children":1477},{"style":877},[1478],{"type":555,"value":880},{"type":550,"tag":600,"props":1480,"children":1481},{"style":851},[1482],{"type":555,"value":885},{"type":550,"tag":600,"props":1484,"children":1485},{"style":857},[1486],{"type":555,"value":860},{"type":550,"tag":600,"props":1488,"children":1489},{"style":851},[1490],{"type":555,"value":894},{"type":550,"tag":600,"props":1492,"children":1493},{"style":857},[1494],{"type":555,"value":899},{"type":550,"tag":600,"props":1496,"children":1497},{"style":851},[1498],{"type":555,"value":904},{"type":550,"tag":600,"props":1500,"children":1501},{"class":602,"line":907},[1502,1506,1510,1514,1518,1522],{"type":550,"tag":600,"props":1503,"children":1504},{"style":877},[1505],{"type":555,"value":880},{"type":550,"tag":600,"props":1507,"children":1508},{"style":851},[1509],{"type":555,"value":885},{"type":550,"tag":600,"props":1511,"children":1512},{"style":857},[1513],{"type":555,"value":921},{"type":550,"tag":600,"props":1515,"children":1516},{"style":851},[1517],{"type":555,"value":894},{"type":550,"tag":600,"props":1519,"children":1520},{"style":839},[1521],{"type":555,"value":930},{"type":550,"tag":600,"props":1523,"children":1524},{"style":851},[1525],{"type":555,"value":904},{"type":550,"tag":600,"props":1527,"children":1528},{"class":602,"line":937},[1529],{"type":550,"tag":600,"props":1530,"children":1531},{"style":851},[1532],{"type":555,"value":943},{"type":550,"tag":600,"props":1534,"children":1535},{"class":602,"line":946},[1536],{"type":550,"tag":600,"props":1537,"children":1538},{"emptyLinePlaceholder":950},[1539],{"type":555,"value":953},{"type":550,"tag":600,"props":1541,"children":1542},{"class":602,"line":956},[1543],{"type":550,"tag":600,"props":1544,"children":1545},{"style":777},[1546],{"type":555,"value":780},{"type":550,"tag":600,"props":1548,"children":1549},{"class":602,"line":964},[1550,1554,1558,1562,1566,1570,1574],{"type":550,"tag":600,"props":1551,"children":1552},{"style":777},[1553],{"type":555,"value":970},{"type":550,"tag":600,"props":1555,"children":1556},{"style":851},[1557],{"type":555,"value":975},{"type":550,"tag":600,"props":1559,"children":1560},{"style":978},[1561],{"type":555,"value":981},{"type":550,"tag":600,"props":1563,"children":1564},{"style":851},[1565],{"type":555,"value":986},{"type":550,"tag":600,"props":1567,"children":1568},{"style":989},[1569],{"type":555,"value":992},{"type":550,"tag":600,"props":1571,"children":1572},{"style":851},[1573],{"type":555,"value":997},{"type":550,"tag":600,"props":1575,"children":1576},{"style":857},[1577],{"type":555,"value":1002},{"type":550,"tag":600,"props":1579,"children":1580},{"class":602,"line":1005},[1581,1585,1589,1593,1597,1601],{"type":550,"tag":600,"props":1582,"children":1583},{"style":777},[1584],{"type":555,"value":970},{"type":550,"tag":600,"props":1586,"children":1587},{"style":851},[1588],{"type":555,"value":975},{"type":550,"tag":600,"props":1590,"children":1591},{"style":978},[1592],{"type":555,"value":1019},{"type":550,"tag":600,"props":1594,"children":1595},{"style":851},[1596],{"type":555,"value":986},{"type":550,"tag":600,"props":1598,"children":1599},{"style":989},[1600],{"type":555,"value":1028},{"type":550,"tag":600,"props":1602,"children":1603},{"style":851},[1604],{"type":555,"value":943},{"type":550,"tag":600,"props":1606,"children":1607},{"class":602,"line":1035},[1608],{"type":550,"tag":600,"props":1609,"children":1610},{"style":777},[1611],{"type":555,"value":832},{"type":550,"tag":600,"props":1613,"children":1614},{"class":602,"line":1043},[1615,1619,1623,1627,1631,1635,1639,1643],{"type":550,"tag":600,"props":1616,"children":1617},{"style":839},[1618],{"type":555,"value":1049},{"type":550,"tag":600,"props":1620,"children":1621},{"style":845},[1622],{"type":555,"value":1054},{"type":550,"tag":600,"props":1624,"children":1625},{"style":851},[1626],{"type":555,"value":894},{"type":550,"tag":600,"props":1628,"children":1629},{"style":839},[1630],{"type":555,"value":1063},{"type":550,"tag":600,"props":1632,"children":1633},{"style":851},[1634],{"type":555,"value":1068},{"type":550,"tag":600,"props":1636,"children":1637},{"style":857},[1638],{"type":555,"value":1073},{"type":550,"tag":600,"props":1640,"children":1641},{"style":851},[1642],{"type":555,"value":865},{"type":550,"tag":600,"props":1644,"children":1645},{"style":851},[1646],{"type":555,"value":870},{"type":550,"tag":600,"props":1648,"children":1649},{"class":602,"line":1084},[1650,1654,1659,1663,1668,1673],{"type":550,"tag":600,"props":1651,"children":1652},{"style":839},[1653],{"type":555,"value":1152},{"type":550,"tag":600,"props":1655,"children":1656},{"style":857},[1657],{"type":555,"value":1658}," map",{"type":550,"tag":600,"props":1660,"children":1661},{"style":851},[1662],{"type":555,"value":894},{"type":550,"tag":600,"props":1664,"children":1665},{"style":839},[1666],{"type":555,"value":1667}," new",{"type":550,"tag":600,"props":1669,"children":1670},{"style":845},[1671],{"type":555,"value":1672}," Map",{"type":550,"tag":600,"props":1674,"children":1675},{"style":851},[1676],{"type":555,"value":1677},"();\n",{"type":550,"tag":600,"props":1679,"children":1680},{"class":602,"line":1146},[1681,1685,1689,1693,1697],{"type":550,"tag":600,"props":1682,"children":1683},{"style":978},[1684],{"type":555,"value":1212},{"type":550,"tag":600,"props":1686,"children":1687},{"style":851},[1688],{"type":555,"value":1068},{"type":550,"tag":600,"props":1690,"children":1691},{"style":857},[1692],{"type":555,"value":1073},{"type":550,"tag":600,"props":1694,"children":1695},{"style":851},[1696],{"type":555,"value":865},{"type":550,"tag":600,"props":1698,"children":1699},{"style":851},[1700],{"type":555,"value":870},{"type":550,"tag":600,"props":1702,"children":1703},{"class":602,"line":1173},[1704,1708,1712,1717,1721,1726,1730,1734,1739,1743,1747],{"type":550,"tag":600,"props":1705,"children":1706},{"style":978},[1707],{"type":555,"value":1238},{"type":550,"tag":600,"props":1709,"children":1710},{"style":851},[1711],{"type":555,"value":1068},{"type":550,"tag":600,"props":1713,"children":1714},{"style":857},[1715],{"type":555,"value":1716},"map",{"type":550,"tag":600,"props":1718,"children":1719},{"style":851},[1720],{"type":555,"value":885},{"type":550,"tag":600,"props":1722,"children":1723},{"style":845},[1724],{"type":555,"value":1725},"has",{"type":550,"tag":600,"props":1727,"children":1728},{"style":851},[1729],{"type":555,"value":854},{"type":550,"tag":600,"props":1731,"children":1732},{"style":857},[1733],{"type":555,"value":1073},{"type":550,"tag":600,"props":1735,"children":1736},{"style":851},[1737],{"type":555,"value":1738},"))",{"type":550,"tag":600,"props":1740,"children":1741},{"style":978},[1742],{"type":555,"value":1134},{"type":550,"tag":600,"props":1744,"children":1745},{"style":978},[1746],{"type":555,"value":1268},{"type":550,"tag":600,"props":1748,"children":1749},{"style":851},[1750],{"type":555,"value":904},{"type":550,"tag":600,"props":1752,"children":1753},{"class":602,"line":1206},[1754,1759,1763,1768,1772,1776,1781,1787],{"type":550,"tag":600,"props":1755,"children":1756},{"style":857},[1757],{"type":555,"value":1758},"    map",{"type":550,"tag":600,"props":1760,"children":1761},{"style":851},[1762],{"type":555,"value":885},{"type":550,"tag":600,"props":1764,"children":1765},{"style":845},[1766],{"type":555,"value":1767},"set",{"type":550,"tag":600,"props":1769,"children":1770},{"style":851},[1771],{"type":555,"value":854},{"type":550,"tag":600,"props":1773,"children":1774},{"style":857},[1775],{"type":555,"value":1073},{"type":550,"tag":600,"props":1777,"children":1778},{"style":851},[1779],{"type":555,"value":1780},",",{"type":550,"tag":600,"props":1782,"children":1784},{"style":1783},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1785],{"type":555,"value":1786}," 1",{"type":550,"tag":600,"props":1788,"children":1789},{"style":851},[1790],{"type":555,"value":1791},");\n",{"type":550,"tag":600,"props":1793,"children":1794},{"class":602,"line":1232},[1795,1800,1804,1808,1812,1816],{"type":550,"tag":600,"props":1796,"children":1797},{"style":857},[1798],{"type":555,"value":1799},"    head",{"type":550,"tag":600,"props":1801,"children":1802},{"style":851},[1803],{"type":555,"value":894},{"type":550,"tag":600,"props":1805,"children":1806},{"style":857},[1807],{"type":555,"value":1166},{"type":550,"tag":600,"props":1809,"children":1810},{"style":851},[1811],{"type":555,"value":885},{"type":550,"tag":600,"props":1813,"children":1814},{"style":857},[1815],{"type":555,"value":921},{"type":550,"tag":600,"props":1817,"children":1818},{"style":851},[1819],{"type":555,"value":904},{"type":550,"tag":600,"props":1821,"children":1822},{"class":602,"line":1275},[1823],{"type":550,"tag":600,"props":1824,"children":1825},{"style":851},[1826],{"type":555,"value":1357},{"type":550,"tag":600,"props":1828,"children":1829},{"class":602,"line":1304},[1830,1834,1838],{"type":550,"tag":600,"props":1831,"children":1832},{"style":978},[1833],{"type":555,"value":1366},{"type":550,"tag":600,"props":1835,"children":1836},{"style":978},[1837],{"type":555,"value":1139},{"type":550,"tag":600,"props":1839,"children":1840},{"style":851},[1841],{"type":555,"value":904},{"type":550,"tag":600,"props":1843,"children":1844},{"class":602,"line":1351},[1845],{"type":550,"tag":600,"props":1846,"children":1847},{"style":851},[1848],{"type":555,"value":1383},{"type":550,"tag":1850,"props":1851,"children":1852},"style",{},[1853],{"type":555,"value":1854},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":808,"depth":808,"links":1856},[1857,1858],{"id":748,"depth":612,"text":748},{"id":753,"depth":612,"text":753,"children":1859},[1860,1861],{"id":759,"depth":621,"text":762},{"id":1386,"depth":621,"text":1386},"markdown","content:1.algorithm:3.leetcode:3.major:141.linked-list-cycle.md","content","1.algorithm/3.leetcode/3.major/141.linked-list-cycle.md","md",[1868,1870],{"_path":171,"title":170,"description":1869},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",{"_path":177,"title":176,"description":1871},"请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。\n实现 LRUCache 类：",1714099275974]