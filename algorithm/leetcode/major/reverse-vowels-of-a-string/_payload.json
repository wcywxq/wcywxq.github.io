[{"data":1,"prerenderedAt":1464},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-vowels-of-a-string":559,"/algorithm/leetcode/major/reverse-vowels-of-a-string-surround":1459},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":231,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":230,"description":563,"url":564,"body":565,"_type":1454,"_id":1455,"_source":1456,"_file":1457,"_extension":1458},"major",false,"","给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。","https://leetcode.cn/problems/reverse-vowels-of-a-string",{"type":566,"children":567,"toc":1448},"root",[568,575,580,585,615,620,643,648,663,669,674,680,1442],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"元音字母包括 'a'、'e'、'i'、'o'、'u'，且可能以大小写两种形式出现不止一次。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"示例 1：",{"type":569,"tag":586,"props":587,"children":590},"pre",{"className":588,"code":589,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"hello\"\n输出：\"holle\"\n",[591],{"type":569,"tag":592,"props":593,"children":594},"code",{"__ignoreMap":562},[595,606],{"type":569,"tag":596,"props":597,"children":600},"span",{"class":598,"line":599},"line",1,[601],{"type":569,"tag":596,"props":602,"children":603},{},[604],{"type":574,"value":605},"输入：s = \"hello\"\n",{"type":569,"tag":596,"props":607,"children":609},{"class":598,"line":608},2,[610],{"type":569,"tag":596,"props":611,"children":612},{},[613],{"type":574,"value":614},"输出：\"holle\"\n",{"type":569,"tag":570,"props":616,"children":617},{},[618],{"type":574,"value":619},"示例 2：",{"type":569,"tag":586,"props":621,"children":623},{"className":588,"code":622,"language":574,"meta":562,"style":562},"输入：s = \"leetcode\"\n输出：\"leotcede\"\n",[624],{"type":569,"tag":592,"props":625,"children":626},{"__ignoreMap":562},[627,635],{"type":569,"tag":596,"props":628,"children":629},{"class":598,"line":599},[630],{"type":569,"tag":596,"props":631,"children":632},{},[633],{"type":574,"value":634},"输入：s = \"leetcode\"\n",{"type":569,"tag":596,"props":636,"children":637},{"class":598,"line":608},[638],{"type":569,"tag":596,"props":639,"children":640},{},[641],{"type":574,"value":642},"输出：\"leotcede\"\n",{"type":569,"tag":570,"props":644,"children":645},{},[646],{"type":574,"value":647},"提示：",{"type":569,"tag":649,"props":650,"children":651},"ul",{},[652,658],{"type":569,"tag":653,"props":654,"children":655},"li",{},[656],{"type":574,"value":657},"1 \u003C= s.length \u003C= 3 * 10^5",{"type":569,"tag":653,"props":659,"children":660},{},[661],{"type":574,"value":662},"s 由 可打印的 ASCII 字符组成",{"type":569,"tag":664,"props":665,"children":667},"h2",{"id":666},"解题思路",[668],{"type":574,"value":666},{"type":569,"tag":664,"props":670,"children":672},{"id":671},"实现",[673],{"type":574,"value":671},{"type":569,"tag":675,"props":676,"children":678},"h3",{"id":677},"双指针",[679],{"type":574,"value":677},{"type":569,"tag":586,"props":681,"children":685},{"className":682,"code":683,"language":684,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {string}\n */\nvar reverseVowels = function (s) {\n  let vowels = \"aeiouAEIOU\";\n  let arr = Array.from(s);\n  let l = 0;\n  let r = s.length - 1;\n  while (l \u003C r) {\n    let lIndex = vowels.indexOf(arr[l]);\n    let rIndex = vowels.indexOf(arr[r]);\n    if (lIndex === -1) {\n      l++;\n    } else if (rIndex === -1) {\n      r--;\n    } else {\n      [arr[l], arr[r]] = [arr[r], arr[l]];\n      l++;\n      r--;\n    }\n  }\n  return arr.join(\"\");\n};\n","js",[686],{"type":569,"tag":592,"props":687,"children":688},{"__ignoreMap":562},[689,698,740,770,779,825,865,911,938,984,1019,1073,1123,1163,1181,1229,1247,1263,1348,1364,1380,1389,1398,1433],{"type":569,"tag":596,"props":690,"children":691},{"class":598,"line":599},[692],{"type":569,"tag":596,"props":693,"children":695},{"style":694},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[696],{"type":574,"value":697},"/**\n",{"type":569,"tag":596,"props":699,"children":700},{"class":598,"line":608},[701,706,712,718,723,729,734],{"type":569,"tag":596,"props":702,"children":703},{"style":694},[704],{"type":574,"value":705}," * ",{"type":569,"tag":596,"props":707,"children":709},{"style":708},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[710],{"type":574,"value":711},"@",{"type":569,"tag":596,"props":713,"children":715},{"style":714},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[716],{"type":574,"value":717},"param",{"type":569,"tag":596,"props":719,"children":720},{"style":708},[721],{"type":574,"value":722}," {",{"type":569,"tag":596,"props":724,"children":726},{"style":725},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[727],{"type":574,"value":728},"string",{"type":569,"tag":596,"props":730,"children":731},{"style":708},[732],{"type":574,"value":733},"}",{"type":569,"tag":596,"props":735,"children":737},{"style":736},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[738],{"type":574,"value":739}," s\n",{"type":569,"tag":596,"props":741,"children":743},{"class":598,"line":742},3,[744,748,752,757,761,765],{"type":569,"tag":596,"props":745,"children":746},{"style":694},[747],{"type":574,"value":705},{"type":569,"tag":596,"props":749,"children":750},{"style":708},[751],{"type":574,"value":711},{"type":569,"tag":596,"props":753,"children":754},{"style":714},[755],{"type":574,"value":756},"return",{"type":569,"tag":596,"props":758,"children":759},{"style":708},[760],{"type":574,"value":722},{"type":569,"tag":596,"props":762,"children":763},{"style":725},[764],{"type":574,"value":728},{"type":569,"tag":596,"props":766,"children":767},{"style":708},[768],{"type":574,"value":769},"}\n",{"type":569,"tag":596,"props":771,"children":773},{"class":598,"line":772},4,[774],{"type":569,"tag":596,"props":775,"children":776},{"style":694},[777],{"type":574,"value":778}," */\n",{"type":569,"tag":596,"props":780,"children":782},{"class":598,"line":781},5,[783,789,795,800,805,810,815,820],{"type":569,"tag":596,"props":784,"children":786},{"style":785},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[787],{"type":574,"value":788},"var",{"type":569,"tag":596,"props":790,"children":792},{"style":791},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[793],{"type":574,"value":794}," reverseVowels",{"type":569,"tag":596,"props":796,"children":797},{"style":708},[798],{"type":574,"value":799}," =",{"type":569,"tag":596,"props":801,"children":802},{"style":785},[803],{"type":574,"value":804}," function",{"type":569,"tag":596,"props":806,"children":807},{"style":708},[808],{"type":574,"value":809}," (",{"type":569,"tag":596,"props":811,"children":812},{"style":736},[813],{"type":574,"value":814},"s",{"type":569,"tag":596,"props":816,"children":817},{"style":708},[818],{"type":574,"value":819},")",{"type":569,"tag":596,"props":821,"children":822},{"style":708},[823],{"type":574,"value":824}," {\n",{"type":569,"tag":596,"props":826,"children":828},{"class":598,"line":827},6,[829,834,839,843,849,855,860],{"type":569,"tag":596,"props":830,"children":831},{"style":785},[832],{"type":574,"value":833},"  let",{"type":569,"tag":596,"props":835,"children":836},{"style":736},[837],{"type":574,"value":838}," vowels",{"type":569,"tag":596,"props":840,"children":841},{"style":708},[842],{"type":574,"value":799},{"type":569,"tag":596,"props":844,"children":846},{"style":845},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[847],{"type":574,"value":848}," \"",{"type":569,"tag":596,"props":850,"children":852},{"style":851},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[853],{"type":574,"value":854},"aeiouAEIOU",{"type":569,"tag":596,"props":856,"children":857},{"style":845},[858],{"type":574,"value":859},"\"",{"type":569,"tag":596,"props":861,"children":862},{"style":708},[863],{"type":574,"value":864},";\n",{"type":569,"tag":596,"props":866,"children":868},{"class":598,"line":867},7,[869,873,878,882,887,892,897,902,906],{"type":569,"tag":596,"props":870,"children":871},{"style":785},[872],{"type":574,"value":833},{"type":569,"tag":596,"props":874,"children":875},{"style":736},[876],{"type":574,"value":877}," arr",{"type":569,"tag":596,"props":879,"children":880},{"style":708},[881],{"type":574,"value":799},{"type":569,"tag":596,"props":883,"children":884},{"style":736},[885],{"type":574,"value":886}," Array",{"type":569,"tag":596,"props":888,"children":889},{"style":708},[890],{"type":574,"value":891},".",{"type":569,"tag":596,"props":893,"children":894},{"style":791},[895],{"type":574,"value":896},"from",{"type":569,"tag":596,"props":898,"children":899},{"style":708},[900],{"type":574,"value":901},"(",{"type":569,"tag":596,"props":903,"children":904},{"style":736},[905],{"type":574,"value":814},{"type":569,"tag":596,"props":907,"children":908},{"style":708},[909],{"type":574,"value":910},");\n",{"type":569,"tag":596,"props":912,"children":914},{"class":598,"line":913},8,[915,919,924,928,934],{"type":569,"tag":596,"props":916,"children":917},{"style":785},[918],{"type":574,"value":833},{"type":569,"tag":596,"props":920,"children":921},{"style":736},[922],{"type":574,"value":923}," l",{"type":569,"tag":596,"props":925,"children":926},{"style":708},[927],{"type":574,"value":799},{"type":569,"tag":596,"props":929,"children":931},{"style":930},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[932],{"type":574,"value":933}," 0",{"type":569,"tag":596,"props":935,"children":936},{"style":708},[937],{"type":574,"value":864},{"type":569,"tag":596,"props":939,"children":941},{"class":598,"line":940},9,[942,946,951,955,960,964,970,975,980],{"type":569,"tag":596,"props":943,"children":944},{"style":785},[945],{"type":574,"value":833},{"type":569,"tag":596,"props":947,"children":948},{"style":736},[949],{"type":574,"value":950}," r",{"type":569,"tag":596,"props":952,"children":953},{"style":708},[954],{"type":574,"value":799},{"type":569,"tag":596,"props":956,"children":957},{"style":736},[958],{"type":574,"value":959}," s",{"type":569,"tag":596,"props":961,"children":962},{"style":708},[963],{"type":574,"value":891},{"type":569,"tag":596,"props":965,"children":967},{"style":966},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[968],{"type":574,"value":969},"length",{"type":569,"tag":596,"props":971,"children":972},{"style":785},[973],{"type":574,"value":974}," -",{"type":569,"tag":596,"props":976,"children":977},{"style":930},[978],{"type":574,"value":979}," 1",{"type":569,"tag":596,"props":981,"children":982},{"style":708},[983],{"type":574,"value":864},{"type":569,"tag":596,"props":985,"children":987},{"class":598,"line":986},10,[988,993,997,1002,1007,1011,1015],{"type":569,"tag":596,"props":989,"children":990},{"style":714},[991],{"type":574,"value":992},"  while",{"type":569,"tag":596,"props":994,"children":995},{"style":708},[996],{"type":574,"value":809},{"type":569,"tag":596,"props":998,"children":999},{"style":736},[1000],{"type":574,"value":1001},"l",{"type":569,"tag":596,"props":1003,"children":1004},{"style":708},[1005],{"type":574,"value":1006}," \u003C",{"type":569,"tag":596,"props":1008,"children":1009},{"style":736},[1010],{"type":574,"value":950},{"type":569,"tag":596,"props":1012,"children":1013},{"style":708},[1014],{"type":574,"value":819},{"type":569,"tag":596,"props":1016,"children":1017},{"style":708},[1018],{"type":574,"value":824},{"type":569,"tag":596,"props":1020,"children":1022},{"class":598,"line":1021},11,[1023,1028,1033,1037,1041,1045,1050,1054,1059,1064,1068],{"type":569,"tag":596,"props":1024,"children":1025},{"style":785},[1026],{"type":574,"value":1027},"    let",{"type":569,"tag":596,"props":1029,"children":1030},{"style":736},[1031],{"type":574,"value":1032}," lIndex",{"type":569,"tag":596,"props":1034,"children":1035},{"style":708},[1036],{"type":574,"value":799},{"type":569,"tag":596,"props":1038,"children":1039},{"style":736},[1040],{"type":574,"value":838},{"type":569,"tag":596,"props":1042,"children":1043},{"style":708},[1044],{"type":574,"value":891},{"type":569,"tag":596,"props":1046,"children":1047},{"style":791},[1048],{"type":574,"value":1049},"indexOf",{"type":569,"tag":596,"props":1051,"children":1052},{"style":708},[1053],{"type":574,"value":901},{"type":569,"tag":596,"props":1055,"children":1056},{"style":736},[1057],{"type":574,"value":1058},"arr",{"type":569,"tag":596,"props":1060,"children":1061},{"style":708},[1062],{"type":574,"value":1063},"[",{"type":569,"tag":596,"props":1065,"children":1066},{"style":736},[1067],{"type":574,"value":1001},{"type":569,"tag":596,"props":1069,"children":1070},{"style":708},[1071],{"type":574,"value":1072},"]);\n",{"type":569,"tag":596,"props":1074,"children":1076},{"class":598,"line":1075},12,[1077,1081,1086,1090,1094,1098,1102,1106,1110,1114,1119],{"type":569,"tag":596,"props":1078,"children":1079},{"style":785},[1080],{"type":574,"value":1027},{"type":569,"tag":596,"props":1082,"children":1083},{"style":736},[1084],{"type":574,"value":1085}," rIndex",{"type":569,"tag":596,"props":1087,"children":1088},{"style":708},[1089],{"type":574,"value":799},{"type":569,"tag":596,"props":1091,"children":1092},{"style":736},[1093],{"type":574,"value":838},{"type":569,"tag":596,"props":1095,"children":1096},{"style":708},[1097],{"type":574,"value":891},{"type":569,"tag":596,"props":1099,"children":1100},{"style":791},[1101],{"type":574,"value":1049},{"type":569,"tag":596,"props":1103,"children":1104},{"style":708},[1105],{"type":574,"value":901},{"type":569,"tag":596,"props":1107,"children":1108},{"style":736},[1109],{"type":574,"value":1058},{"type":569,"tag":596,"props":1111,"children":1112},{"style":708},[1113],{"type":574,"value":1063},{"type":569,"tag":596,"props":1115,"children":1116},{"style":736},[1117],{"type":574,"value":1118},"r",{"type":569,"tag":596,"props":1120,"children":1121},{"style":708},[1122],{"type":574,"value":1072},{"type":569,"tag":596,"props":1124,"children":1126},{"class":598,"line":1125},13,[1127,1132,1136,1141,1146,1150,1155,1159],{"type":569,"tag":596,"props":1128,"children":1129},{"style":714},[1130],{"type":574,"value":1131},"    if",{"type":569,"tag":596,"props":1133,"children":1134},{"style":708},[1135],{"type":574,"value":809},{"type":569,"tag":596,"props":1137,"children":1138},{"style":736},[1139],{"type":574,"value":1140},"lIndex",{"type":569,"tag":596,"props":1142,"children":1143},{"style":785},[1144],{"type":574,"value":1145}," ===",{"type":569,"tag":596,"props":1147,"children":1148},{"style":785},[1149],{"type":574,"value":974},{"type":569,"tag":596,"props":1151,"children":1152},{"style":930},[1153],{"type":574,"value":1154},"1",{"type":569,"tag":596,"props":1156,"children":1157},{"style":708},[1158],{"type":574,"value":819},{"type":569,"tag":596,"props":1160,"children":1161},{"style":708},[1162],{"type":574,"value":824},{"type":569,"tag":596,"props":1164,"children":1166},{"class":598,"line":1165},14,[1167,1172,1177],{"type":569,"tag":596,"props":1168,"children":1169},{"style":736},[1170],{"type":574,"value":1171},"      l",{"type":569,"tag":596,"props":1173,"children":1174},{"style":785},[1175],{"type":574,"value":1176},"++",{"type":569,"tag":596,"props":1178,"children":1179},{"style":708},[1180],{"type":574,"value":864},{"type":569,"tag":596,"props":1182,"children":1184},{"class":598,"line":1183},15,[1185,1190,1195,1200,1204,1209,1213,1217,1221,1225],{"type":569,"tag":596,"props":1186,"children":1187},{"style":708},[1188],{"type":574,"value":1189},"    }",{"type":569,"tag":596,"props":1191,"children":1192},{"style":714},[1193],{"type":574,"value":1194}," else",{"type":569,"tag":596,"props":1196,"children":1197},{"style":714},[1198],{"type":574,"value":1199}," if",{"type":569,"tag":596,"props":1201,"children":1202},{"style":708},[1203],{"type":574,"value":809},{"type":569,"tag":596,"props":1205,"children":1206},{"style":736},[1207],{"type":574,"value":1208},"rIndex",{"type":569,"tag":596,"props":1210,"children":1211},{"style":785},[1212],{"type":574,"value":1145},{"type":569,"tag":596,"props":1214,"children":1215},{"style":785},[1216],{"type":574,"value":974},{"type":569,"tag":596,"props":1218,"children":1219},{"style":930},[1220],{"type":574,"value":1154},{"type":569,"tag":596,"props":1222,"children":1223},{"style":708},[1224],{"type":574,"value":819},{"type":569,"tag":596,"props":1226,"children":1227},{"style":708},[1228],{"type":574,"value":824},{"type":569,"tag":596,"props":1230,"children":1232},{"class":598,"line":1231},16,[1233,1238,1243],{"type":569,"tag":596,"props":1234,"children":1235},{"style":736},[1236],{"type":574,"value":1237},"      r",{"type":569,"tag":596,"props":1239,"children":1240},{"style":785},[1241],{"type":574,"value":1242},"--",{"type":569,"tag":596,"props":1244,"children":1245},{"style":708},[1246],{"type":574,"value":864},{"type":569,"tag":596,"props":1248,"children":1250},{"class":598,"line":1249},17,[1251,1255,1259],{"type":569,"tag":596,"props":1252,"children":1253},{"style":708},[1254],{"type":574,"value":1189},{"type":569,"tag":596,"props":1256,"children":1257},{"style":714},[1258],{"type":574,"value":1194},{"type":569,"tag":596,"props":1260,"children":1261},{"style":708},[1262],{"type":574,"value":824},{"type":569,"tag":596,"props":1264,"children":1266},{"class":598,"line":1265},18,[1267,1272,1276,1280,1284,1289,1293,1297,1301,1306,1310,1315,1319,1323,1327,1331,1335,1339,1343],{"type":569,"tag":596,"props":1268,"children":1269},{"style":708},[1270],{"type":574,"value":1271},"      [",{"type":569,"tag":596,"props":1273,"children":1274},{"style":736},[1275],{"type":574,"value":1058},{"type":569,"tag":596,"props":1277,"children":1278},{"style":708},[1279],{"type":574,"value":1063},{"type":569,"tag":596,"props":1281,"children":1282},{"style":736},[1283],{"type":574,"value":1001},{"type":569,"tag":596,"props":1285,"children":1286},{"style":708},[1287],{"type":574,"value":1288},"],",{"type":569,"tag":596,"props":1290,"children":1291},{"style":736},[1292],{"type":574,"value":877},{"type":569,"tag":596,"props":1294,"children":1295},{"style":708},[1296],{"type":574,"value":1063},{"type":569,"tag":596,"props":1298,"children":1299},{"style":736},[1300],{"type":574,"value":1118},{"type":569,"tag":596,"props":1302,"children":1303},{"style":708},[1304],{"type":574,"value":1305},"]]",{"type":569,"tag":596,"props":1307,"children":1308},{"style":708},[1309],{"type":574,"value":799},{"type":569,"tag":596,"props":1311,"children":1312},{"style":708},[1313],{"type":574,"value":1314}," [",{"type":569,"tag":596,"props":1316,"children":1317},{"style":736},[1318],{"type":574,"value":1058},{"type":569,"tag":596,"props":1320,"children":1321},{"style":708},[1322],{"type":574,"value":1063},{"type":569,"tag":596,"props":1324,"children":1325},{"style":736},[1326],{"type":574,"value":1118},{"type":569,"tag":596,"props":1328,"children":1329},{"style":708},[1330],{"type":574,"value":1288},{"type":569,"tag":596,"props":1332,"children":1333},{"style":736},[1334],{"type":574,"value":877},{"type":569,"tag":596,"props":1336,"children":1337},{"style":708},[1338],{"type":574,"value":1063},{"type":569,"tag":596,"props":1340,"children":1341},{"style":736},[1342],{"type":574,"value":1001},{"type":569,"tag":596,"props":1344,"children":1345},{"style":708},[1346],{"type":574,"value":1347},"]];\n",{"type":569,"tag":596,"props":1349,"children":1351},{"class":598,"line":1350},19,[1352,1356,1360],{"type":569,"tag":596,"props":1353,"children":1354},{"style":736},[1355],{"type":574,"value":1171},{"type":569,"tag":596,"props":1357,"children":1358},{"style":785},[1359],{"type":574,"value":1176},{"type":569,"tag":596,"props":1361,"children":1362},{"style":708},[1363],{"type":574,"value":864},{"type":569,"tag":596,"props":1365,"children":1367},{"class":598,"line":1366},20,[1368,1372,1376],{"type":569,"tag":596,"props":1369,"children":1370},{"style":736},[1371],{"type":574,"value":1237},{"type":569,"tag":596,"props":1373,"children":1374},{"style":785},[1375],{"type":574,"value":1242},{"type":569,"tag":596,"props":1377,"children":1378},{"style":708},[1379],{"type":574,"value":864},{"type":569,"tag":596,"props":1381,"children":1383},{"class":598,"line":1382},21,[1384],{"type":569,"tag":596,"props":1385,"children":1386},{"style":708},[1387],{"type":574,"value":1388},"    }\n",{"type":569,"tag":596,"props":1390,"children":1392},{"class":598,"line":1391},22,[1393],{"type":569,"tag":596,"props":1394,"children":1395},{"style":708},[1396],{"type":574,"value":1397},"  }\n",{"type":569,"tag":596,"props":1399,"children":1401},{"class":598,"line":1400},23,[1402,1407,1411,1415,1420,1424,1429],{"type":569,"tag":596,"props":1403,"children":1404},{"style":714},[1405],{"type":574,"value":1406},"  return",{"type":569,"tag":596,"props":1408,"children":1409},{"style":736},[1410],{"type":574,"value":877},{"type":569,"tag":596,"props":1412,"children":1413},{"style":708},[1414],{"type":574,"value":891},{"type":569,"tag":596,"props":1416,"children":1417},{"style":791},[1418],{"type":574,"value":1419},"join",{"type":569,"tag":596,"props":1421,"children":1422},{"style":708},[1423],{"type":574,"value":901},{"type":569,"tag":596,"props":1425,"children":1426},{"style":845},[1427],{"type":574,"value":1428},"\"\"",{"type":569,"tag":596,"props":1430,"children":1431},{"style":708},[1432],{"type":574,"value":910},{"type":569,"tag":596,"props":1434,"children":1436},{"class":598,"line":1435},24,[1437],{"type":569,"tag":596,"props":1438,"children":1439},{"style":708},[1440],{"type":574,"value":1441},"};\n",{"type":569,"tag":1443,"props":1444,"children":1445},"style",{},[1446],{"type":574,"value":1447},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":781,"depth":781,"links":1449},[1450,1451],{"id":666,"depth":608,"text":666},{"id":671,"depth":608,"text":671,"children":1452},[1453],{"id":677,"depth":742,"text":677},"markdown","content:1.algorithm:3.leetcode:3.major:345.reverse-vowels-of-a-string.md","content","1.algorithm/3.leetcode/3.major/345.reverse-vowels-of-a-string.md","md",[1460,1462],{"_path":228,"title":227,"description":1461},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",{"_path":234,"title":233,"description":1463},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",1717731141757]