[{"data":1,"prerenderedAt":1282},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/permutations":559,"/algorithm/leetcode/major/permutations-surround":1277},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":123,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":122,"description":563,"url":564,"body":565,"_type":1272,"_id":1273,"_source":1274,"_file":1275,"_extension":1276},"major",false,"","给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。","https://leetcode.cn/problems/permutations",{"type":566,"children":567,"toc":1266},"root",[568,575,580,610,615,638,643,666,671,691,697,702,708,1260],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"示例 1：",{"type":569,"tag":581,"props":582,"children":585},"pre",{"className":583,"code":584,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3]\n输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n",[586],{"type":569,"tag":587,"props":588,"children":589},"code",{"__ignoreMap":562},[590,601],{"type":569,"tag":591,"props":592,"children":595},"span",{"class":593,"line":594},"line",1,[596],{"type":569,"tag":591,"props":597,"children":598},{},[599],{"type":574,"value":600},"输入：nums = [1,2,3]\n",{"type":569,"tag":591,"props":602,"children":604},{"class":593,"line":603},2,[605],{"type":569,"tag":591,"props":606,"children":607},{},[608],{"type":574,"value":609},"输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n",{"type":569,"tag":570,"props":611,"children":612},{},[613],{"type":574,"value":614},"示例 2：",{"type":569,"tag":581,"props":616,"children":618},{"className":583,"code":617,"language":574,"meta":562,"style":562},"输入：nums = [0,1]\n输出：[[0,1],[1,0]]\n",[619],{"type":569,"tag":587,"props":620,"children":621},{"__ignoreMap":562},[622,630],{"type":569,"tag":591,"props":623,"children":624},{"class":593,"line":594},[625],{"type":569,"tag":591,"props":626,"children":627},{},[628],{"type":574,"value":629},"输入：nums = [0,1]\n",{"type":569,"tag":591,"props":631,"children":632},{"class":593,"line":603},[633],{"type":569,"tag":591,"props":634,"children":635},{},[636],{"type":574,"value":637},"输出：[[0,1],[1,0]]\n",{"type":569,"tag":570,"props":639,"children":640},{},[641],{"type":574,"value":642},"示例 3：",{"type":569,"tag":581,"props":644,"children":646},{"className":583,"code":645,"language":574,"meta":562,"style":562},"输入：nums = [1]\n输出：[[1]]\n",[647],{"type":569,"tag":587,"props":648,"children":649},{"__ignoreMap":562},[650,658],{"type":569,"tag":591,"props":651,"children":652},{"class":593,"line":594},[653],{"type":569,"tag":591,"props":654,"children":655},{},[656],{"type":574,"value":657},"输入：nums = [1]\n",{"type":569,"tag":591,"props":659,"children":660},{"class":593,"line":603},[661],{"type":569,"tag":591,"props":662,"children":663},{},[664],{"type":574,"value":665},"输出：[[1]]\n",{"type":569,"tag":570,"props":667,"children":668},{},[669],{"type":574,"value":670},"提示：",{"type":569,"tag":672,"props":673,"children":674},"ul",{},[675,681,686],{"type":569,"tag":676,"props":677,"children":678},"li",{},[679],{"type":574,"value":680},"1 \u003C= nums.length \u003C= 6",{"type":569,"tag":676,"props":682,"children":683},{},[684],{"type":574,"value":685},"-10 \u003C= nums[i] \u003C= 10",{"type":569,"tag":676,"props":687,"children":688},{},[689],{"type":574,"value":690},"nums 中的所有整数 互不相同",{"type":569,"tag":692,"props":693,"children":695},"h2",{"id":694},"解题思路",[696],{"type":574,"value":694},{"type":569,"tag":692,"props":698,"children":700},{"id":699},"实现",[701],{"type":574,"value":699},{"type":569,"tag":703,"props":704,"children":706},"h3",{"id":705},"回溯",[707],{"type":574,"value":705},{"type":569,"tag":581,"props":709,"children":713},{"className":710,"code":711,"language":712,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar permute = function (nums) {\n  let res = [];\n  let path = [];\n  const dfs = () => {\n    if (path.length === nums.length) {\n      res.push([...path]);\n      return;\n    }\n    for (let num of nums) {\n      if (!path.includes(num)) {\n        path.push(num);\n        dfs();\n        path.pop();\n      }\n    }\n  };\n  dfs();\n  return res;\n};\n","js",[714],{"type":569,"tag":587,"props":715,"children":716},{"__ignoreMap":562},[717,726,768,799,808,854,877,898,930,985,1017,1031,1040,1080,1130,1160,1174,1195,1204,1212,1221,1234,1251],{"type":569,"tag":591,"props":718,"children":719},{"class":593,"line":594},[720],{"type":569,"tag":591,"props":721,"children":723},{"style":722},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[724],{"type":574,"value":725},"/**\n",{"type":569,"tag":591,"props":727,"children":728},{"class":593,"line":603},[729,734,740,746,751,757,762],{"type":569,"tag":591,"props":730,"children":731},{"style":722},[732],{"type":574,"value":733}," * ",{"type":569,"tag":591,"props":735,"children":737},{"style":736},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[738],{"type":574,"value":739},"@",{"type":569,"tag":591,"props":741,"children":743},{"style":742},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[744],{"type":574,"value":745},"param",{"type":569,"tag":591,"props":747,"children":748},{"style":736},[749],{"type":574,"value":750}," {",{"type":569,"tag":591,"props":752,"children":754},{"style":753},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[755],{"type":574,"value":756},"number[]",{"type":569,"tag":591,"props":758,"children":759},{"style":736},[760],{"type":574,"value":761},"}",{"type":569,"tag":591,"props":763,"children":765},{"style":764},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[766],{"type":574,"value":767}," nums\n",{"type":569,"tag":591,"props":769,"children":771},{"class":593,"line":770},3,[772,776,780,785,789,794],{"type":569,"tag":591,"props":773,"children":774},{"style":722},[775],{"type":574,"value":733},{"type":569,"tag":591,"props":777,"children":778},{"style":736},[779],{"type":574,"value":739},{"type":569,"tag":591,"props":781,"children":782},{"style":742},[783],{"type":574,"value":784},"return",{"type":569,"tag":591,"props":786,"children":787},{"style":736},[788],{"type":574,"value":750},{"type":569,"tag":591,"props":790,"children":791},{"style":753},[792],{"type":574,"value":793},"number[][]",{"type":569,"tag":591,"props":795,"children":796},{"style":736},[797],{"type":574,"value":798},"}\n",{"type":569,"tag":591,"props":800,"children":802},{"class":593,"line":801},4,[803],{"type":569,"tag":591,"props":804,"children":805},{"style":722},[806],{"type":574,"value":807}," */\n",{"type":569,"tag":591,"props":809,"children":811},{"class":593,"line":810},5,[812,818,824,829,834,839,844,849],{"type":569,"tag":591,"props":813,"children":815},{"style":814},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[816],{"type":574,"value":817},"var",{"type":569,"tag":591,"props":819,"children":821},{"style":820},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[822],{"type":574,"value":823}," permute",{"type":569,"tag":591,"props":825,"children":826},{"style":736},[827],{"type":574,"value":828}," =",{"type":569,"tag":591,"props":830,"children":831},{"style":814},[832],{"type":574,"value":833}," function",{"type":569,"tag":591,"props":835,"children":836},{"style":736},[837],{"type":574,"value":838}," (",{"type":569,"tag":591,"props":840,"children":841},{"style":764},[842],{"type":574,"value":843},"nums",{"type":569,"tag":591,"props":845,"children":846},{"style":736},[847],{"type":574,"value":848},")",{"type":569,"tag":591,"props":850,"children":851},{"style":736},[852],{"type":574,"value":853}," {\n",{"type":569,"tag":591,"props":855,"children":857},{"class":593,"line":856},6,[858,863,868,872],{"type":569,"tag":591,"props":859,"children":860},{"style":814},[861],{"type":574,"value":862},"  let",{"type":569,"tag":591,"props":864,"children":865},{"style":764},[866],{"type":574,"value":867}," res",{"type":569,"tag":591,"props":869,"children":870},{"style":736},[871],{"type":574,"value":828},{"type":569,"tag":591,"props":873,"children":874},{"style":736},[875],{"type":574,"value":876}," [];\n",{"type":569,"tag":591,"props":878,"children":880},{"class":593,"line":879},7,[881,885,890,894],{"type":569,"tag":591,"props":882,"children":883},{"style":814},[884],{"type":574,"value":862},{"type":569,"tag":591,"props":886,"children":887},{"style":764},[888],{"type":574,"value":889}," path",{"type":569,"tag":591,"props":891,"children":892},{"style":736},[893],{"type":574,"value":828},{"type":569,"tag":591,"props":895,"children":896},{"style":736},[897],{"type":574,"value":876},{"type":569,"tag":591,"props":899,"children":901},{"class":593,"line":900},8,[902,907,912,916,921,926],{"type":569,"tag":591,"props":903,"children":904},{"style":814},[905],{"type":574,"value":906},"  const",{"type":569,"tag":591,"props":908,"children":909},{"style":820},[910],{"type":574,"value":911}," dfs",{"type":569,"tag":591,"props":913,"children":914},{"style":736},[915],{"type":574,"value":828},{"type":569,"tag":591,"props":917,"children":918},{"style":736},[919],{"type":574,"value":920}," ()",{"type":569,"tag":591,"props":922,"children":923},{"style":736},[924],{"type":574,"value":925}," =>",{"type":569,"tag":591,"props":927,"children":928},{"style":736},[929],{"type":574,"value":853},{"type":569,"tag":591,"props":931,"children":933},{"class":593,"line":932},9,[934,939,943,948,953,959,964,969,973,977,981],{"type":569,"tag":591,"props":935,"children":936},{"style":742},[937],{"type":574,"value":938},"    if",{"type":569,"tag":591,"props":940,"children":941},{"style":736},[942],{"type":574,"value":838},{"type":569,"tag":591,"props":944,"children":945},{"style":764},[946],{"type":574,"value":947},"path",{"type":569,"tag":591,"props":949,"children":950},{"style":736},[951],{"type":574,"value":952},".",{"type":569,"tag":591,"props":954,"children":956},{"style":955},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[957],{"type":574,"value":958},"length",{"type":569,"tag":591,"props":960,"children":961},{"style":814},[962],{"type":574,"value":963}," ===",{"type":569,"tag":591,"props":965,"children":966},{"style":764},[967],{"type":574,"value":968}," nums",{"type":569,"tag":591,"props":970,"children":971},{"style":736},[972],{"type":574,"value":952},{"type":569,"tag":591,"props":974,"children":975},{"style":955},[976],{"type":574,"value":958},{"type":569,"tag":591,"props":978,"children":979},{"style":736},[980],{"type":574,"value":848},{"type":569,"tag":591,"props":982,"children":983},{"style":736},[984],{"type":574,"value":853},{"type":569,"tag":591,"props":986,"children":988},{"class":593,"line":987},10,[989,994,998,1003,1008,1012],{"type":569,"tag":591,"props":990,"children":991},{"style":764},[992],{"type":574,"value":993},"      res",{"type":569,"tag":591,"props":995,"children":996},{"style":736},[997],{"type":574,"value":952},{"type":569,"tag":591,"props":999,"children":1000},{"style":820},[1001],{"type":574,"value":1002},"push",{"type":569,"tag":591,"props":1004,"children":1005},{"style":736},[1006],{"type":574,"value":1007},"([...",{"type":569,"tag":591,"props":1009,"children":1010},{"style":764},[1011],{"type":574,"value":947},{"type":569,"tag":591,"props":1013,"children":1014},{"style":736},[1015],{"type":574,"value":1016},"]);\n",{"type":569,"tag":591,"props":1018,"children":1020},{"class":593,"line":1019},11,[1021,1026],{"type":569,"tag":591,"props":1022,"children":1023},{"style":742},[1024],{"type":574,"value":1025},"      return",{"type":569,"tag":591,"props":1027,"children":1028},{"style":736},[1029],{"type":574,"value":1030},";\n",{"type":569,"tag":591,"props":1032,"children":1034},{"class":593,"line":1033},12,[1035],{"type":569,"tag":591,"props":1036,"children":1037},{"style":736},[1038],{"type":574,"value":1039},"    }\n",{"type":569,"tag":591,"props":1041,"children":1043},{"class":593,"line":1042},13,[1044,1049,1053,1058,1063,1068,1072,1076],{"type":569,"tag":591,"props":1045,"children":1046},{"style":742},[1047],{"type":574,"value":1048},"    for",{"type":569,"tag":591,"props":1050,"children":1051},{"style":736},[1052],{"type":574,"value":838},{"type":569,"tag":591,"props":1054,"children":1055},{"style":814},[1056],{"type":574,"value":1057},"let",{"type":569,"tag":591,"props":1059,"children":1060},{"style":764},[1061],{"type":574,"value":1062}," num",{"type":569,"tag":591,"props":1064,"children":1065},{"style":814},[1066],{"type":574,"value":1067}," of",{"type":569,"tag":591,"props":1069,"children":1070},{"style":764},[1071],{"type":574,"value":968},{"type":569,"tag":591,"props":1073,"children":1074},{"style":736},[1075],{"type":574,"value":848},{"type":569,"tag":591,"props":1077,"children":1078},{"style":736},[1079],{"type":574,"value":853},{"type":569,"tag":591,"props":1081,"children":1083},{"class":593,"line":1082},14,[1084,1089,1093,1098,1102,1106,1111,1116,1121,1126],{"type":569,"tag":591,"props":1085,"children":1086},{"style":742},[1087],{"type":574,"value":1088},"      if",{"type":569,"tag":591,"props":1090,"children":1091},{"style":736},[1092],{"type":574,"value":838},{"type":569,"tag":591,"props":1094,"children":1095},{"style":814},[1096],{"type":574,"value":1097},"!",{"type":569,"tag":591,"props":1099,"children":1100},{"style":764},[1101],{"type":574,"value":947},{"type":569,"tag":591,"props":1103,"children":1104},{"style":736},[1105],{"type":574,"value":952},{"type":569,"tag":591,"props":1107,"children":1108},{"style":820},[1109],{"type":574,"value":1110},"includes",{"type":569,"tag":591,"props":1112,"children":1113},{"style":736},[1114],{"type":574,"value":1115},"(",{"type":569,"tag":591,"props":1117,"children":1118},{"style":764},[1119],{"type":574,"value":1120},"num",{"type":569,"tag":591,"props":1122,"children":1123},{"style":736},[1124],{"type":574,"value":1125},"))",{"type":569,"tag":591,"props":1127,"children":1128},{"style":736},[1129],{"type":574,"value":853},{"type":569,"tag":591,"props":1131,"children":1133},{"class":593,"line":1132},15,[1134,1139,1143,1147,1151,1155],{"type":569,"tag":591,"props":1135,"children":1136},{"style":764},[1137],{"type":574,"value":1138},"        path",{"type":569,"tag":591,"props":1140,"children":1141},{"style":736},[1142],{"type":574,"value":952},{"type":569,"tag":591,"props":1144,"children":1145},{"style":820},[1146],{"type":574,"value":1002},{"type":569,"tag":591,"props":1148,"children":1149},{"style":736},[1150],{"type":574,"value":1115},{"type":569,"tag":591,"props":1152,"children":1153},{"style":764},[1154],{"type":574,"value":1120},{"type":569,"tag":591,"props":1156,"children":1157},{"style":736},[1158],{"type":574,"value":1159},");\n",{"type":569,"tag":591,"props":1161,"children":1163},{"class":593,"line":1162},16,[1164,1169],{"type":569,"tag":591,"props":1165,"children":1166},{"style":820},[1167],{"type":574,"value":1168},"        dfs",{"type":569,"tag":591,"props":1170,"children":1171},{"style":736},[1172],{"type":574,"value":1173},"();\n",{"type":569,"tag":591,"props":1175,"children":1177},{"class":593,"line":1176},17,[1178,1182,1186,1191],{"type":569,"tag":591,"props":1179,"children":1180},{"style":764},[1181],{"type":574,"value":1138},{"type":569,"tag":591,"props":1183,"children":1184},{"style":736},[1185],{"type":574,"value":952},{"type":569,"tag":591,"props":1187,"children":1188},{"style":820},[1189],{"type":574,"value":1190},"pop",{"type":569,"tag":591,"props":1192,"children":1193},{"style":736},[1194],{"type":574,"value":1173},{"type":569,"tag":591,"props":1196,"children":1198},{"class":593,"line":1197},18,[1199],{"type":569,"tag":591,"props":1200,"children":1201},{"style":736},[1202],{"type":574,"value":1203},"      }\n",{"type":569,"tag":591,"props":1205,"children":1207},{"class":593,"line":1206},19,[1208],{"type":569,"tag":591,"props":1209,"children":1210},{"style":736},[1211],{"type":574,"value":1039},{"type":569,"tag":591,"props":1213,"children":1215},{"class":593,"line":1214},20,[1216],{"type":569,"tag":591,"props":1217,"children":1218},{"style":736},[1219],{"type":574,"value":1220},"  };\n",{"type":569,"tag":591,"props":1222,"children":1224},{"class":593,"line":1223},21,[1225,1230],{"type":569,"tag":591,"props":1226,"children":1227},{"style":820},[1228],{"type":574,"value":1229},"  dfs",{"type":569,"tag":591,"props":1231,"children":1232},{"style":736},[1233],{"type":574,"value":1173},{"type":569,"tag":591,"props":1235,"children":1237},{"class":593,"line":1236},22,[1238,1243,1247],{"type":569,"tag":591,"props":1239,"children":1240},{"style":742},[1241],{"type":574,"value":1242},"  return",{"type":569,"tag":591,"props":1244,"children":1245},{"style":764},[1246],{"type":574,"value":867},{"type":569,"tag":591,"props":1248,"children":1249},{"style":736},[1250],{"type":574,"value":1030},{"type":569,"tag":591,"props":1252,"children":1254},{"class":593,"line":1253},23,[1255],{"type":569,"tag":591,"props":1256,"children":1257},{"style":736},[1258],{"type":574,"value":1259},"};\n",{"type":569,"tag":1261,"props":1262,"children":1263},"style",{},[1264],{"type":574,"value":1265},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":810,"depth":810,"links":1267},[1268,1269],{"id":694,"depth":603,"text":694},{"id":699,"depth":603,"text":699,"children":1270},[1271],{"id":705,"depth":770,"text":705},"markdown","content:1.algorithm:3.leetcode:3.major:46.permutations.md","content","1.algorithm/3.leetcode/3.major/46.permutations.md","md",[1278,1280],{"_path":120,"title":119,"description":1279},"给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。",{"_path":126,"title":125,"description":1281},"给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。",1717735569615]