[{"data":1,"prerenderedAt":1272},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/permutations":549,"/algorithm/leetcode/major/permutations-surround":1267},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":123,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":122,"description":553,"url":554,"body":555,"_type":1262,"_id":1263,"_source":1264,"_file":1265,"_extension":1266},"major",false,"","给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。","https://leetcode.cn/problems/permutations",{"type":556,"children":557,"toc":1256},"root",[558,565,570,600,605,628,633,656,661,681,687,692,698,1250],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"示例 1：",{"type":559,"tag":571,"props":572,"children":575},"pre",{"className":573,"code":574,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3]\n输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n",[576],{"type":559,"tag":577,"props":578,"children":579},"code",{"__ignoreMap":552},[580,591],{"type":559,"tag":581,"props":582,"children":585},"span",{"class":583,"line":584},"line",1,[586],{"type":559,"tag":581,"props":587,"children":588},{},[589],{"type":564,"value":590},"输入：nums = [1,2,3]\n",{"type":559,"tag":581,"props":592,"children":594},{"class":583,"line":593},2,[595],{"type":559,"tag":581,"props":596,"children":597},{},[598],{"type":564,"value":599},"输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n",{"type":559,"tag":560,"props":601,"children":602},{},[603],{"type":564,"value":604},"示例 2：",{"type":559,"tag":571,"props":606,"children":608},{"className":573,"code":607,"language":564,"meta":552,"style":552},"输入：nums = [0,1]\n输出：[[0,1],[1,0]]\n",[609],{"type":559,"tag":577,"props":610,"children":611},{"__ignoreMap":552},[612,620],{"type":559,"tag":581,"props":613,"children":614},{"class":583,"line":584},[615],{"type":559,"tag":581,"props":616,"children":617},{},[618],{"type":564,"value":619},"输入：nums = [0,1]\n",{"type":559,"tag":581,"props":621,"children":622},{"class":583,"line":593},[623],{"type":559,"tag":581,"props":624,"children":625},{},[626],{"type":564,"value":627},"输出：[[0,1],[1,0]]\n",{"type":559,"tag":560,"props":629,"children":630},{},[631],{"type":564,"value":632},"示例 3：",{"type":559,"tag":571,"props":634,"children":636},{"className":573,"code":635,"language":564,"meta":552,"style":552},"输入：nums = [1]\n输出：[[1]]\n",[637],{"type":559,"tag":577,"props":638,"children":639},{"__ignoreMap":552},[640,648],{"type":559,"tag":581,"props":641,"children":642},{"class":583,"line":584},[643],{"type":559,"tag":581,"props":644,"children":645},{},[646],{"type":564,"value":647},"输入：nums = [1]\n",{"type":559,"tag":581,"props":649,"children":650},{"class":583,"line":593},[651],{"type":559,"tag":581,"props":652,"children":653},{},[654],{"type":564,"value":655},"输出：[[1]]\n",{"type":559,"tag":560,"props":657,"children":658},{},[659],{"type":564,"value":660},"提示：",{"type":559,"tag":662,"props":663,"children":664},"ul",{},[665,671,676],{"type":559,"tag":666,"props":667,"children":668},"li",{},[669],{"type":564,"value":670},"1 \u003C= nums.length \u003C= 6",{"type":559,"tag":666,"props":672,"children":673},{},[674],{"type":564,"value":675},"-10 \u003C= nums[i] \u003C= 10",{"type":559,"tag":666,"props":677,"children":678},{},[679],{"type":564,"value":680},"nums 中的所有整数 互不相同",{"type":559,"tag":682,"props":683,"children":685},"h2",{"id":684},"解题思路",[686],{"type":564,"value":684},{"type":559,"tag":682,"props":688,"children":690},{"id":689},"实现",[691],{"type":564,"value":689},{"type":559,"tag":693,"props":694,"children":696},"h3",{"id":695},"回溯",[697],{"type":564,"value":695},{"type":559,"tag":571,"props":699,"children":703},{"className":700,"code":701,"language":702,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar permute = function (nums) {\n  let res = [];\n  let path = [];\n  const dfs = () => {\n    if (path.length === nums.length) {\n      res.push([...path]);\n      return;\n    }\n    for (let num of nums) {\n      if (!path.includes(num)) {\n        path.push(num);\n        dfs();\n        path.pop();\n      }\n    }\n  };\n  dfs();\n  return res;\n};\n","js",[704],{"type":559,"tag":577,"props":705,"children":706},{"__ignoreMap":552},[707,716,758,789,798,844,867,888,920,975,1007,1021,1030,1070,1120,1150,1164,1185,1194,1202,1211,1224,1241],{"type":559,"tag":581,"props":708,"children":709},{"class":583,"line":584},[710],{"type":559,"tag":581,"props":711,"children":713},{"style":712},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[714],{"type":564,"value":715},"/**\n",{"type":559,"tag":581,"props":717,"children":718},{"class":583,"line":593},[719,724,730,736,741,747,752],{"type":559,"tag":581,"props":720,"children":721},{"style":712},[722],{"type":564,"value":723}," * ",{"type":559,"tag":581,"props":725,"children":727},{"style":726},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[728],{"type":564,"value":729},"@",{"type":559,"tag":581,"props":731,"children":733},{"style":732},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[734],{"type":564,"value":735},"param",{"type":559,"tag":581,"props":737,"children":738},{"style":726},[739],{"type":564,"value":740}," {",{"type":559,"tag":581,"props":742,"children":744},{"style":743},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[745],{"type":564,"value":746},"number[]",{"type":559,"tag":581,"props":748,"children":749},{"style":726},[750],{"type":564,"value":751},"}",{"type":559,"tag":581,"props":753,"children":755},{"style":754},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[756],{"type":564,"value":757}," nums\n",{"type":559,"tag":581,"props":759,"children":761},{"class":583,"line":760},3,[762,766,770,775,779,784],{"type":559,"tag":581,"props":763,"children":764},{"style":712},[765],{"type":564,"value":723},{"type":559,"tag":581,"props":767,"children":768},{"style":726},[769],{"type":564,"value":729},{"type":559,"tag":581,"props":771,"children":772},{"style":732},[773],{"type":564,"value":774},"return",{"type":559,"tag":581,"props":776,"children":777},{"style":726},[778],{"type":564,"value":740},{"type":559,"tag":581,"props":780,"children":781},{"style":743},[782],{"type":564,"value":783},"number[][]",{"type":559,"tag":581,"props":785,"children":786},{"style":726},[787],{"type":564,"value":788},"}\n",{"type":559,"tag":581,"props":790,"children":792},{"class":583,"line":791},4,[793],{"type":559,"tag":581,"props":794,"children":795},{"style":712},[796],{"type":564,"value":797}," */\n",{"type":559,"tag":581,"props":799,"children":801},{"class":583,"line":800},5,[802,808,814,819,824,829,834,839],{"type":559,"tag":581,"props":803,"children":805},{"style":804},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[806],{"type":564,"value":807},"var",{"type":559,"tag":581,"props":809,"children":811},{"style":810},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[812],{"type":564,"value":813}," permute",{"type":559,"tag":581,"props":815,"children":816},{"style":726},[817],{"type":564,"value":818}," =",{"type":559,"tag":581,"props":820,"children":821},{"style":804},[822],{"type":564,"value":823}," function",{"type":559,"tag":581,"props":825,"children":826},{"style":726},[827],{"type":564,"value":828}," (",{"type":559,"tag":581,"props":830,"children":831},{"style":754},[832],{"type":564,"value":833},"nums",{"type":559,"tag":581,"props":835,"children":836},{"style":726},[837],{"type":564,"value":838},")",{"type":559,"tag":581,"props":840,"children":841},{"style":726},[842],{"type":564,"value":843}," {\n",{"type":559,"tag":581,"props":845,"children":847},{"class":583,"line":846},6,[848,853,858,862],{"type":559,"tag":581,"props":849,"children":850},{"style":804},[851],{"type":564,"value":852},"  let",{"type":559,"tag":581,"props":854,"children":855},{"style":754},[856],{"type":564,"value":857}," res",{"type":559,"tag":581,"props":859,"children":860},{"style":726},[861],{"type":564,"value":818},{"type":559,"tag":581,"props":863,"children":864},{"style":726},[865],{"type":564,"value":866}," [];\n",{"type":559,"tag":581,"props":868,"children":870},{"class":583,"line":869},7,[871,875,880,884],{"type":559,"tag":581,"props":872,"children":873},{"style":804},[874],{"type":564,"value":852},{"type":559,"tag":581,"props":876,"children":877},{"style":754},[878],{"type":564,"value":879}," path",{"type":559,"tag":581,"props":881,"children":882},{"style":726},[883],{"type":564,"value":818},{"type":559,"tag":581,"props":885,"children":886},{"style":726},[887],{"type":564,"value":866},{"type":559,"tag":581,"props":889,"children":891},{"class":583,"line":890},8,[892,897,902,906,911,916],{"type":559,"tag":581,"props":893,"children":894},{"style":804},[895],{"type":564,"value":896},"  const",{"type":559,"tag":581,"props":898,"children":899},{"style":810},[900],{"type":564,"value":901}," dfs",{"type":559,"tag":581,"props":903,"children":904},{"style":726},[905],{"type":564,"value":818},{"type":559,"tag":581,"props":907,"children":908},{"style":726},[909],{"type":564,"value":910}," ()",{"type":559,"tag":581,"props":912,"children":913},{"style":726},[914],{"type":564,"value":915}," =>",{"type":559,"tag":581,"props":917,"children":918},{"style":726},[919],{"type":564,"value":843},{"type":559,"tag":581,"props":921,"children":923},{"class":583,"line":922},9,[924,929,933,938,943,949,954,959,963,967,971],{"type":559,"tag":581,"props":925,"children":926},{"style":732},[927],{"type":564,"value":928},"    if",{"type":559,"tag":581,"props":930,"children":931},{"style":726},[932],{"type":564,"value":828},{"type":559,"tag":581,"props":934,"children":935},{"style":754},[936],{"type":564,"value":937},"path",{"type":559,"tag":581,"props":939,"children":940},{"style":726},[941],{"type":564,"value":942},".",{"type":559,"tag":581,"props":944,"children":946},{"style":945},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[947],{"type":564,"value":948},"length",{"type":559,"tag":581,"props":950,"children":951},{"style":804},[952],{"type":564,"value":953}," ===",{"type":559,"tag":581,"props":955,"children":956},{"style":754},[957],{"type":564,"value":958}," nums",{"type":559,"tag":581,"props":960,"children":961},{"style":726},[962],{"type":564,"value":942},{"type":559,"tag":581,"props":964,"children":965},{"style":945},[966],{"type":564,"value":948},{"type":559,"tag":581,"props":968,"children":969},{"style":726},[970],{"type":564,"value":838},{"type":559,"tag":581,"props":972,"children":973},{"style":726},[974],{"type":564,"value":843},{"type":559,"tag":581,"props":976,"children":978},{"class":583,"line":977},10,[979,984,988,993,998,1002],{"type":559,"tag":581,"props":980,"children":981},{"style":754},[982],{"type":564,"value":983},"      res",{"type":559,"tag":581,"props":985,"children":986},{"style":726},[987],{"type":564,"value":942},{"type":559,"tag":581,"props":989,"children":990},{"style":810},[991],{"type":564,"value":992},"push",{"type":559,"tag":581,"props":994,"children":995},{"style":726},[996],{"type":564,"value":997},"([...",{"type":559,"tag":581,"props":999,"children":1000},{"style":754},[1001],{"type":564,"value":937},{"type":559,"tag":581,"props":1003,"children":1004},{"style":726},[1005],{"type":564,"value":1006},"]);\n",{"type":559,"tag":581,"props":1008,"children":1010},{"class":583,"line":1009},11,[1011,1016],{"type":559,"tag":581,"props":1012,"children":1013},{"style":732},[1014],{"type":564,"value":1015},"      return",{"type":559,"tag":581,"props":1017,"children":1018},{"style":726},[1019],{"type":564,"value":1020},";\n",{"type":559,"tag":581,"props":1022,"children":1024},{"class":583,"line":1023},12,[1025],{"type":559,"tag":581,"props":1026,"children":1027},{"style":726},[1028],{"type":564,"value":1029},"    }\n",{"type":559,"tag":581,"props":1031,"children":1033},{"class":583,"line":1032},13,[1034,1039,1043,1048,1053,1058,1062,1066],{"type":559,"tag":581,"props":1035,"children":1036},{"style":732},[1037],{"type":564,"value":1038},"    for",{"type":559,"tag":581,"props":1040,"children":1041},{"style":726},[1042],{"type":564,"value":828},{"type":559,"tag":581,"props":1044,"children":1045},{"style":804},[1046],{"type":564,"value":1047},"let",{"type":559,"tag":581,"props":1049,"children":1050},{"style":754},[1051],{"type":564,"value":1052}," num",{"type":559,"tag":581,"props":1054,"children":1055},{"style":804},[1056],{"type":564,"value":1057}," of",{"type":559,"tag":581,"props":1059,"children":1060},{"style":754},[1061],{"type":564,"value":958},{"type":559,"tag":581,"props":1063,"children":1064},{"style":726},[1065],{"type":564,"value":838},{"type":559,"tag":581,"props":1067,"children":1068},{"style":726},[1069],{"type":564,"value":843},{"type":559,"tag":581,"props":1071,"children":1073},{"class":583,"line":1072},14,[1074,1079,1083,1088,1092,1096,1101,1106,1111,1116],{"type":559,"tag":581,"props":1075,"children":1076},{"style":732},[1077],{"type":564,"value":1078},"      if",{"type":559,"tag":581,"props":1080,"children":1081},{"style":726},[1082],{"type":564,"value":828},{"type":559,"tag":581,"props":1084,"children":1085},{"style":804},[1086],{"type":564,"value":1087},"!",{"type":559,"tag":581,"props":1089,"children":1090},{"style":754},[1091],{"type":564,"value":937},{"type":559,"tag":581,"props":1093,"children":1094},{"style":726},[1095],{"type":564,"value":942},{"type":559,"tag":581,"props":1097,"children":1098},{"style":810},[1099],{"type":564,"value":1100},"includes",{"type":559,"tag":581,"props":1102,"children":1103},{"style":726},[1104],{"type":564,"value":1105},"(",{"type":559,"tag":581,"props":1107,"children":1108},{"style":754},[1109],{"type":564,"value":1110},"num",{"type":559,"tag":581,"props":1112,"children":1113},{"style":726},[1114],{"type":564,"value":1115},"))",{"type":559,"tag":581,"props":1117,"children":1118},{"style":726},[1119],{"type":564,"value":843},{"type":559,"tag":581,"props":1121,"children":1123},{"class":583,"line":1122},15,[1124,1129,1133,1137,1141,1145],{"type":559,"tag":581,"props":1125,"children":1126},{"style":754},[1127],{"type":564,"value":1128},"        path",{"type":559,"tag":581,"props":1130,"children":1131},{"style":726},[1132],{"type":564,"value":942},{"type":559,"tag":581,"props":1134,"children":1135},{"style":810},[1136],{"type":564,"value":992},{"type":559,"tag":581,"props":1138,"children":1139},{"style":726},[1140],{"type":564,"value":1105},{"type":559,"tag":581,"props":1142,"children":1143},{"style":754},[1144],{"type":564,"value":1110},{"type":559,"tag":581,"props":1146,"children":1147},{"style":726},[1148],{"type":564,"value":1149},");\n",{"type":559,"tag":581,"props":1151,"children":1153},{"class":583,"line":1152},16,[1154,1159],{"type":559,"tag":581,"props":1155,"children":1156},{"style":810},[1157],{"type":564,"value":1158},"        dfs",{"type":559,"tag":581,"props":1160,"children":1161},{"style":726},[1162],{"type":564,"value":1163},"();\n",{"type":559,"tag":581,"props":1165,"children":1167},{"class":583,"line":1166},17,[1168,1172,1176,1181],{"type":559,"tag":581,"props":1169,"children":1170},{"style":754},[1171],{"type":564,"value":1128},{"type":559,"tag":581,"props":1173,"children":1174},{"style":726},[1175],{"type":564,"value":942},{"type":559,"tag":581,"props":1177,"children":1178},{"style":810},[1179],{"type":564,"value":1180},"pop",{"type":559,"tag":581,"props":1182,"children":1183},{"style":726},[1184],{"type":564,"value":1163},{"type":559,"tag":581,"props":1186,"children":1188},{"class":583,"line":1187},18,[1189],{"type":559,"tag":581,"props":1190,"children":1191},{"style":726},[1192],{"type":564,"value":1193},"      }\n",{"type":559,"tag":581,"props":1195,"children":1197},{"class":583,"line":1196},19,[1198],{"type":559,"tag":581,"props":1199,"children":1200},{"style":726},[1201],{"type":564,"value":1029},{"type":559,"tag":581,"props":1203,"children":1205},{"class":583,"line":1204},20,[1206],{"type":559,"tag":581,"props":1207,"children":1208},{"style":726},[1209],{"type":564,"value":1210},"  };\n",{"type":559,"tag":581,"props":1212,"children":1214},{"class":583,"line":1213},21,[1215,1220],{"type":559,"tag":581,"props":1216,"children":1217},{"style":810},[1218],{"type":564,"value":1219},"  dfs",{"type":559,"tag":581,"props":1221,"children":1222},{"style":726},[1223],{"type":564,"value":1163},{"type":559,"tag":581,"props":1225,"children":1227},{"class":583,"line":1226},22,[1228,1233,1237],{"type":559,"tag":581,"props":1229,"children":1230},{"style":732},[1231],{"type":564,"value":1232},"  return",{"type":559,"tag":581,"props":1234,"children":1235},{"style":754},[1236],{"type":564,"value":857},{"type":559,"tag":581,"props":1238,"children":1239},{"style":726},[1240],{"type":564,"value":1020},{"type":559,"tag":581,"props":1242,"children":1244},{"class":583,"line":1243},23,[1245],{"type":559,"tag":581,"props":1246,"children":1247},{"style":726},[1248],{"type":564,"value":1249},"};\n",{"type":559,"tag":1251,"props":1252,"children":1253},"style",{},[1254],{"type":564,"value":1255},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":800,"depth":800,"links":1257},[1258,1259],{"id":684,"depth":593,"text":684},{"id":689,"depth":593,"text":689,"children":1260},[1261],{"id":695,"depth":760,"text":695},"markdown","content:1.algorithm:3.leetcode:3.major:46.permutations.md","content","1.algorithm/3.leetcode/3.major/46.permutations.md","md",[1268,1270],{"_path":120,"title":119,"description":1269},"给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。",{"_path":126,"title":125,"description":1271},"给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。",1715007651761]