[{"data":1,"prerenderedAt":1500},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-strings":546,"/algorithm/leetcode/major/add-strings-surround":1495},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":234,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":233,"description":550,"url":551,"body":552,"_type":1490,"_id":1491,"_source":1492,"_file":1493,"_extension":1494},"major",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":553,"children":554,"toc":1484},"root",[555,562,567,572,602,607,630,635,658,663,683,689,807,828,833,861,866,872,1478],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":556,"tag":557,"props":568,"children":569},{},[570],{"type":561,"value":571},"示例 1：",{"type":556,"tag":573,"props":574,"children":577},"pre",{"className":575,"code":576,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[578],{"type":556,"tag":579,"props":580,"children":581},"code",{"__ignoreMap":549},[582,593],{"type":556,"tag":583,"props":584,"children":587},"span",{"class":585,"line":586},"line",1,[588],{"type":556,"tag":583,"props":589,"children":590},{},[591],{"type":561,"value":592},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":556,"tag":583,"props":594,"children":596},{"class":585,"line":595},2,[597],{"type":556,"tag":583,"props":598,"children":599},{},[600],{"type":561,"value":601},"输出：\"134\"\n",{"type":556,"tag":557,"props":603,"children":604},{},[605],{"type":561,"value":606},"示例 2：",{"type":556,"tag":573,"props":608,"children":610},{"className":575,"code":609,"language":561,"meta":549,"style":549},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[611],{"type":556,"tag":579,"props":612,"children":613},{"__ignoreMap":549},[614,622],{"type":556,"tag":583,"props":615,"children":616},{"class":585,"line":586},[617],{"type":556,"tag":583,"props":618,"children":619},{},[620],{"type":561,"value":621},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":556,"tag":583,"props":623,"children":624},{"class":585,"line":595},[625],{"type":556,"tag":583,"props":626,"children":627},{},[628],{"type":561,"value":629},"输出：\"533\"\n",{"type":556,"tag":557,"props":631,"children":632},{},[633],{"type":561,"value":634},"示例 3：",{"type":556,"tag":573,"props":636,"children":638},{"className":575,"code":637,"language":561,"meta":549,"style":549},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[639],{"type":556,"tag":579,"props":640,"children":641},{"__ignoreMap":549},[642,650],{"type":556,"tag":583,"props":643,"children":644},{"class":585,"line":586},[645],{"type":556,"tag":583,"props":646,"children":647},{},[648],{"type":561,"value":649},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":556,"tag":583,"props":651,"children":652},{"class":585,"line":595},[653],{"type":556,"tag":583,"props":654,"children":655},{},[656],{"type":561,"value":657},"输出：\"0\"\n",{"type":556,"tag":557,"props":659,"children":660},{},[661],{"type":561,"value":662},"提示：",{"type":556,"tag":664,"props":665,"children":666},"ul",{},[667,673,678],{"type":556,"tag":668,"props":669,"children":670},"li",{},[671],{"type":561,"value":672},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":556,"tag":668,"props":674,"children":675},{},[676],{"type":561,"value":677},"num1 和 num2 都只包含数字 0-9",{"type":556,"tag":668,"props":679,"children":680},{},[681],{"type":561,"value":682},"num1 和 num2 都不包含任何前导零",{"type":556,"tag":684,"props":685,"children":687},"h2",{"id":686},"解题思路",[688],{"type":561,"value":686},{"type":556,"tag":573,"props":690,"children":694},{"className":691,"code":692,"language":693,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[695],{"type":556,"tag":579,"props":696,"children":697},{"__ignoreMap":549},[698,730,755,781],{"type":556,"tag":583,"props":699,"children":700},{"class":585,"line":586},[701,707,713,719,724],{"type":556,"tag":583,"props":702,"children":704},{"style":703},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[705],{"type":561,"value":706},"Number",{"type":556,"tag":583,"props":708,"children":710},{"style":709},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[711],{"type":561,"value":712},".",{"type":556,"tag":583,"props":714,"children":716},{"style":715},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[717],{"type":561,"value":718},"MAX_VALUE",{"type":556,"tag":583,"props":720,"children":721},{"style":709},[722],{"type":561,"value":723},";",{"type":556,"tag":583,"props":725,"children":727},{"style":726},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[728],{"type":561,"value":729}," // 1.7976931348623157e+308\n",{"type":556,"tag":583,"props":731,"children":732},{"class":585,"line":595},[733,737,741,746,750],{"type":556,"tag":583,"props":734,"children":735},{"style":703},[736],{"type":561,"value":706},{"type":556,"tag":583,"props":738,"children":739},{"style":709},[740],{"type":561,"value":712},{"type":556,"tag":583,"props":742,"children":743},{"style":715},[744],{"type":561,"value":745},"MAX_SAFE_INTEGER",{"type":556,"tag":583,"props":747,"children":748},{"style":709},[749],{"type":561,"value":723},{"type":556,"tag":583,"props":751,"children":752},{"style":726},[753],{"type":561,"value":754}," // 9007199254740991\n",{"type":556,"tag":583,"props":756,"children":758},{"class":585,"line":757},3,[759,763,767,772,776],{"type":556,"tag":583,"props":760,"children":761},{"style":703},[762],{"type":561,"value":706},{"type":556,"tag":583,"props":764,"children":765},{"style":709},[766],{"type":561,"value":712},{"type":556,"tag":583,"props":768,"children":769},{"style":715},[770],{"type":561,"value":771},"MIN_VALUE",{"type":556,"tag":583,"props":773,"children":774},{"style":709},[775],{"type":561,"value":723},{"type":556,"tag":583,"props":777,"children":778},{"style":726},[779],{"type":561,"value":780}," // 5e-324\n",{"type":556,"tag":583,"props":782,"children":784},{"class":585,"line":783},4,[785,789,793,798,802],{"type":556,"tag":583,"props":786,"children":787},{"style":703},[788],{"type":561,"value":706},{"type":556,"tag":583,"props":790,"children":791},{"style":709},[792],{"type":561,"value":712},{"type":556,"tag":583,"props":794,"children":795},{"style":715},[796],{"type":561,"value":797},"MIN_SAFE_INTEGER",{"type":556,"tag":583,"props":799,"children":800},{"style":709},[801],{"type":561,"value":723},{"type":556,"tag":583,"props":803,"children":804},{"style":726},[805],{"type":561,"value":806}," // -9007199254740991\n",{"type":556,"tag":557,"props":808,"children":809},{},[810,812,818,820,826],{"type":561,"value":811},"如果想要对一个超大的整数 ",{"type":556,"tag":579,"props":813,"children":815},{"className":814},[],[816],{"type":561,"value":817},"> Number.MAX_SAFE_INTEGER",{"type":561,"value":819}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":556,"tag":579,"props":821,"children":823},{"className":822},[],[824],{"type":561,"value":825},"Number.MAX_SAFE_INTEGER",{"type":561,"value":827}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":556,"tag":557,"props":829,"children":830},{},[831],{"type":561,"value":832},"使用算法实现大数相加：",{"type":556,"tag":664,"props":834,"children":835},{},[836,841,846,851,856],{"type":556,"tag":668,"props":837,"children":838},{},[839],{"type":561,"value":840},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":556,"tag":668,"props":842,"children":843},{},[844],{"type":561,"value":845},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":556,"tag":668,"props":847,"children":848},{},[849],{"type":561,"value":850},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":556,"tag":668,"props":852,"children":853},{},[854],{"type":561,"value":855},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":556,"tag":668,"props":857,"children":858},{},[859],{"type":561,"value":860},"重复以上操作，直到计算出结果；",{"type":556,"tag":684,"props":862,"children":864},{"id":863},"实现",[865],{"type":561,"value":863},{"type":556,"tag":867,"props":868,"children":870},"h3",{"id":869},"大数相加",[871],{"type":561,"value":869},{"type":556,"tag":573,"props":873,"children":875},{"className":691,"code":874,"language":693,"meta":549,"style":549},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[876],{"type":556,"tag":579,"props":877,"children":878},{"__ignoreMap":549},[879,887,927,959,988,997,1053,1111,1160,1187,1214,1275,1339,1370,1400,1409,1469],{"type":556,"tag":583,"props":880,"children":881},{"class":585,"line":586},[882],{"type":556,"tag":583,"props":883,"children":884},{"style":726},[885],{"type":561,"value":886},"/**\n",{"type":556,"tag":583,"props":888,"children":889},{"class":585,"line":595},[890,895,900,906,911,917,922],{"type":556,"tag":583,"props":891,"children":892},{"style":726},[893],{"type":561,"value":894}," * ",{"type":556,"tag":583,"props":896,"children":897},{"style":709},[898],{"type":561,"value":899},"@",{"type":556,"tag":583,"props":901,"children":903},{"style":902},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[904],{"type":561,"value":905},"param",{"type":556,"tag":583,"props":907,"children":908},{"style":709},[909],{"type":561,"value":910}," {",{"type":556,"tag":583,"props":912,"children":914},{"style":913},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[915],{"type":561,"value":916},"string",{"type":556,"tag":583,"props":918,"children":919},{"style":709},[920],{"type":561,"value":921},"}",{"type":556,"tag":583,"props":923,"children":924},{"style":703},[925],{"type":561,"value":926}," num1\n",{"type":556,"tag":583,"props":928,"children":929},{"class":585,"line":757},[930,934,938,942,946,950,954],{"type":556,"tag":583,"props":931,"children":932},{"style":726},[933],{"type":561,"value":894},{"type":556,"tag":583,"props":935,"children":936},{"style":709},[937],{"type":561,"value":899},{"type":556,"tag":583,"props":939,"children":940},{"style":902},[941],{"type":561,"value":905},{"type":556,"tag":583,"props":943,"children":944},{"style":709},[945],{"type":561,"value":910},{"type":556,"tag":583,"props":947,"children":948},{"style":913},[949],{"type":561,"value":916},{"type":556,"tag":583,"props":951,"children":952},{"style":709},[953],{"type":561,"value":921},{"type":556,"tag":583,"props":955,"children":956},{"style":703},[957],{"type":561,"value":958}," num2\n",{"type":556,"tag":583,"props":960,"children":961},{"class":585,"line":783},[962,966,970,975,979,983],{"type":556,"tag":583,"props":963,"children":964},{"style":726},[965],{"type":561,"value":894},{"type":556,"tag":583,"props":967,"children":968},{"style":709},[969],{"type":561,"value":899},{"type":556,"tag":583,"props":971,"children":972},{"style":902},[973],{"type":561,"value":974},"return",{"type":556,"tag":583,"props":976,"children":977},{"style":709},[978],{"type":561,"value":910},{"type":556,"tag":583,"props":980,"children":981},{"style":913},[982],{"type":561,"value":916},{"type":556,"tag":583,"props":984,"children":985},{"style":709},[986],{"type":561,"value":987},"}\n",{"type":556,"tag":583,"props":989,"children":991},{"class":585,"line":990},5,[992],{"type":556,"tag":583,"props":993,"children":994},{"style":726},[995],{"type":561,"value":996}," */\n",{"type":556,"tag":583,"props":998,"children":1000},{"class":585,"line":999},6,[1001,1007,1013,1018,1023,1028,1033,1038,1043,1048],{"type":556,"tag":583,"props":1002,"children":1004},{"style":1003},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[1005],{"type":561,"value":1006},"var",{"type":556,"tag":583,"props":1008,"children":1010},{"style":1009},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[1011],{"type":561,"value":1012}," addStrings",{"type":556,"tag":583,"props":1014,"children":1015},{"style":709},[1016],{"type":561,"value":1017}," =",{"type":556,"tag":583,"props":1019,"children":1020},{"style":1003},[1021],{"type":561,"value":1022}," function",{"type":556,"tag":583,"props":1024,"children":1025},{"style":709},[1026],{"type":561,"value":1027}," (",{"type":556,"tag":583,"props":1029,"children":1030},{"style":703},[1031],{"type":561,"value":1032},"num1",{"type":556,"tag":583,"props":1034,"children":1035},{"style":709},[1036],{"type":561,"value":1037},",",{"type":556,"tag":583,"props":1039,"children":1040},{"style":703},[1041],{"type":561,"value":1042}," num2",{"type":556,"tag":583,"props":1044,"children":1045},{"style":709},[1046],{"type":561,"value":1047},")",{"type":556,"tag":583,"props":1049,"children":1050},{"style":709},[1051],{"type":561,"value":1052}," {\n",{"type":556,"tag":583,"props":1054,"children":1056},{"class":585,"line":1055},7,[1057,1062,1067,1071,1076,1080,1085,1090,1095,1100,1106],{"type":556,"tag":583,"props":1058,"children":1059},{"style":1003},[1060],{"type":561,"value":1061},"  let",{"type":556,"tag":583,"props":1063,"children":1064},{"style":703},[1065],{"type":561,"value":1066}," n1",{"type":556,"tag":583,"props":1068,"children":1069},{"style":709},[1070],{"type":561,"value":1017},{"type":556,"tag":583,"props":1072,"children":1073},{"style":703},[1074],{"type":561,"value":1075}," num1",{"type":556,"tag":583,"props":1077,"children":1078},{"style":709},[1079],{"type":561,"value":712},{"type":556,"tag":583,"props":1081,"children":1082},{"style":1009},[1083],{"type":561,"value":1084},"toString",{"type":556,"tag":583,"props":1086,"children":1087},{"style":709},[1088],{"type":561,"value":1089},"().",{"type":556,"tag":583,"props":1091,"children":1092},{"style":1009},[1093],{"type":561,"value":1094},"split",{"type":556,"tag":583,"props":1096,"children":1097},{"style":709},[1098],{"type":561,"value":1099},"(",{"type":556,"tag":583,"props":1101,"children":1103},{"style":1102},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1104],{"type":561,"value":1105},"\"\"",{"type":556,"tag":583,"props":1107,"children":1108},{"style":709},[1109],{"type":561,"value":1110},");\n",{"type":556,"tag":583,"props":1112,"children":1114},{"class":585,"line":1113},8,[1115,1119,1124,1128,1132,1136,1140,1144,1148,1152,1156],{"type":556,"tag":583,"props":1116,"children":1117},{"style":1003},[1118],{"type":561,"value":1061},{"type":556,"tag":583,"props":1120,"children":1121},{"style":703},[1122],{"type":561,"value":1123}," n2",{"type":556,"tag":583,"props":1125,"children":1126},{"style":709},[1127],{"type":561,"value":1017},{"type":556,"tag":583,"props":1129,"children":1130},{"style":703},[1131],{"type":561,"value":1042},{"type":556,"tag":583,"props":1133,"children":1134},{"style":709},[1135],{"type":561,"value":712},{"type":556,"tag":583,"props":1137,"children":1138},{"style":1009},[1139],{"type":561,"value":1084},{"type":556,"tag":583,"props":1141,"children":1142},{"style":709},[1143],{"type":561,"value":1089},{"type":556,"tag":583,"props":1145,"children":1146},{"style":1009},[1147],{"type":561,"value":1094},{"type":556,"tag":583,"props":1149,"children":1150},{"style":709},[1151],{"type":561,"value":1099},{"type":556,"tag":583,"props":1153,"children":1154},{"style":1102},[1155],{"type":561,"value":1105},{"type":556,"tag":583,"props":1157,"children":1158},{"style":709},[1159],{"type":561,"value":1110},{"type":556,"tag":583,"props":1161,"children":1163},{"class":585,"line":1162},9,[1164,1168,1173,1177,1182],{"type":556,"tag":583,"props":1165,"children":1166},{"style":1003},[1167],{"type":561,"value":1061},{"type":556,"tag":583,"props":1169,"children":1170},{"style":703},[1171],{"type":561,"value":1172}," res",{"type":556,"tag":583,"props":1174,"children":1175},{"style":709},[1176],{"type":561,"value":1017},{"type":556,"tag":583,"props":1178,"children":1179},{"style":1102},[1180],{"type":561,"value":1181}," \"\"",{"type":556,"tag":583,"props":1183,"children":1184},{"style":709},[1185],{"type":561,"value":1186},";\n",{"type":556,"tag":583,"props":1188,"children":1190},{"class":585,"line":1189},10,[1191,1195,1200,1204,1210],{"type":556,"tag":583,"props":1192,"children":1193},{"style":1003},[1194],{"type":561,"value":1061},{"type":556,"tag":583,"props":1196,"children":1197},{"style":703},[1198],{"type":561,"value":1199}," temp",{"type":556,"tag":583,"props":1201,"children":1202},{"style":709},[1203],{"type":561,"value":1017},{"type":556,"tag":583,"props":1205,"children":1207},{"style":1206},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1208],{"type":561,"value":1209}," 0",{"type":556,"tag":583,"props":1211,"children":1212},{"style":709},[1213],{"type":561,"value":1186},{"type":556,"tag":583,"props":1215,"children":1217},{"class":585,"line":1216},11,[1218,1223,1227,1232,1236,1242,1247,1251,1255,1259,1263,1267,1271],{"type":556,"tag":583,"props":1219,"children":1220},{"style":902},[1221],{"type":561,"value":1222},"  while",{"type":556,"tag":583,"props":1224,"children":1225},{"style":709},[1226],{"type":561,"value":1027},{"type":556,"tag":583,"props":1228,"children":1229},{"style":703},[1230],{"type":561,"value":1231},"n1",{"type":556,"tag":583,"props":1233,"children":1234},{"style":709},[1235],{"type":561,"value":712},{"type":556,"tag":583,"props":1237,"children":1239},{"style":1238},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1240],{"type":561,"value":1241},"length",{"type":556,"tag":583,"props":1243,"children":1244},{"style":1003},[1245],{"type":561,"value":1246}," ||",{"type":556,"tag":583,"props":1248,"children":1249},{"style":703},[1250],{"type":561,"value":1123},{"type":556,"tag":583,"props":1252,"children":1253},{"style":709},[1254],{"type":561,"value":712},{"type":556,"tag":583,"props":1256,"children":1257},{"style":1238},[1258],{"type":561,"value":1241},{"type":556,"tag":583,"props":1260,"children":1261},{"style":1003},[1262],{"type":561,"value":1246},{"type":556,"tag":583,"props":1264,"children":1265},{"style":703},[1266],{"type":561,"value":1199},{"type":556,"tag":583,"props":1268,"children":1269},{"style":709},[1270],{"type":561,"value":1047},{"type":556,"tag":583,"props":1272,"children":1273},{"style":709},[1274],{"type":561,"value":1052},{"type":556,"tag":583,"props":1276,"children":1278},{"class":585,"line":1277},12,[1279,1284,1289,1294,1298,1302,1307,1312,1317,1321,1326,1330,1334],{"type":556,"tag":583,"props":1280,"children":1281},{"style":703},[1282],{"type":561,"value":1283},"    temp",{"type":556,"tag":583,"props":1285,"children":1286},{"style":1003},[1287],{"type":561,"value":1288}," +=",{"type":556,"tag":583,"props":1290,"children":1291},{"style":1003},[1292],{"type":561,"value":1293}," ~~",{"type":556,"tag":583,"props":1295,"children":1296},{"style":703},[1297],{"type":561,"value":1231},{"type":556,"tag":583,"props":1299,"children":1300},{"style":709},[1301],{"type":561,"value":712},{"type":556,"tag":583,"props":1303,"children":1304},{"style":1009},[1305],{"type":561,"value":1306},"pop",{"type":556,"tag":583,"props":1308,"children":1309},{"style":709},[1310],{"type":561,"value":1311},"()",{"type":556,"tag":583,"props":1313,"children":1314},{"style":1003},[1315],{"type":561,"value":1316}," +",{"type":556,"tag":583,"props":1318,"children":1319},{"style":1003},[1320],{"type":561,"value":1293},{"type":556,"tag":583,"props":1322,"children":1323},{"style":703},[1324],{"type":561,"value":1325},"n2",{"type":556,"tag":583,"props":1327,"children":1328},{"style":709},[1329],{"type":561,"value":712},{"type":556,"tag":583,"props":1331,"children":1332},{"style":1009},[1333],{"type":561,"value":1306},{"type":556,"tag":583,"props":1335,"children":1336},{"style":709},[1337],{"type":561,"value":1338},"();\n",{"type":556,"tag":583,"props":1340,"children":1342},{"class":585,"line":1341},13,[1343,1348,1352,1356,1361,1366],{"type":556,"tag":583,"props":1344,"children":1345},{"style":703},[1346],{"type":561,"value":1347},"    res",{"type":556,"tag":583,"props":1349,"children":1350},{"style":1003},[1351],{"type":561,"value":1288},{"type":556,"tag":583,"props":1353,"children":1354},{"style":703},[1355],{"type":561,"value":1199},{"type":556,"tag":583,"props":1357,"children":1358},{"style":1003},[1359],{"type":561,"value":1360}," %",{"type":556,"tag":583,"props":1362,"children":1363},{"style":1206},[1364],{"type":561,"value":1365}," 10",{"type":556,"tag":583,"props":1367,"children":1368},{"style":709},[1369],{"type":561,"value":1186},{"type":556,"tag":583,"props":1371,"children":1373},{"class":585,"line":1372},14,[1374,1378,1382,1386,1391,1396],{"type":556,"tag":583,"props":1375,"children":1376},{"style":703},[1377],{"type":561,"value":1283},{"type":556,"tag":583,"props":1379,"children":1380},{"style":709},[1381],{"type":561,"value":1017},{"type":556,"tag":583,"props":1383,"children":1384},{"style":703},[1385],{"type":561,"value":1199},{"type":556,"tag":583,"props":1387,"children":1388},{"style":709},[1389],{"type":561,"value":1390}," >",{"type":556,"tag":583,"props":1392,"children":1393},{"style":1206},[1394],{"type":561,"value":1395}," 9",{"type":556,"tag":583,"props":1397,"children":1398},{"style":709},[1399],{"type":561,"value":1186},{"type":556,"tag":583,"props":1401,"children":1403},{"class":585,"line":1402},15,[1404],{"type":556,"tag":583,"props":1405,"children":1406},{"style":709},[1407],{"type":561,"value":1408},"  }\n",{"type":556,"tag":583,"props":1410,"children":1412},{"class":585,"line":1411},16,[1413,1418,1422,1426,1430,1434,1438,1443,1448,1452,1457,1461,1465],{"type":556,"tag":583,"props":1414,"children":1415},{"style":902},[1416],{"type":561,"value":1417},"  return",{"type":556,"tag":583,"props":1419,"children":1420},{"style":703},[1421],{"type":561,"value":1172},{"type":556,"tag":583,"props":1423,"children":1424},{"style":709},[1425],{"type":561,"value":712},{"type":556,"tag":583,"props":1427,"children":1428},{"style":1009},[1429],{"type":561,"value":1094},{"type":556,"tag":583,"props":1431,"children":1432},{"style":709},[1433],{"type":561,"value":1099},{"type":556,"tag":583,"props":1435,"children":1436},{"style":1102},[1437],{"type":561,"value":1105},{"type":556,"tag":583,"props":1439,"children":1440},{"style":709},[1441],{"type":561,"value":1442},").",{"type":556,"tag":583,"props":1444,"children":1445},{"style":1009},[1446],{"type":561,"value":1447},"reverse",{"type":556,"tag":583,"props":1449,"children":1450},{"style":709},[1451],{"type":561,"value":1089},{"type":556,"tag":583,"props":1453,"children":1454},{"style":1009},[1455],{"type":561,"value":1456},"join",{"type":556,"tag":583,"props":1458,"children":1459},{"style":709},[1460],{"type":561,"value":1099},{"type":556,"tag":583,"props":1462,"children":1463},{"style":1102},[1464],{"type":561,"value":1105},{"type":556,"tag":583,"props":1466,"children":1467},{"style":709},[1468],{"type":561,"value":1110},{"type":556,"tag":583,"props":1470,"children":1472},{"class":585,"line":1471},17,[1473],{"type":556,"tag":583,"props":1474,"children":1475},{"style":709},[1476],{"type":561,"value":1477},"};\n",{"type":556,"tag":1479,"props":1480,"children":1481},"style",{},[1482],{"type":561,"value":1483},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":990,"depth":990,"links":1485},[1486,1487],{"id":686,"depth":595,"text":686},{"id":863,"depth":595,"text":863,"children":1488},[1489],{"id":869,"depth":757,"text":869},"markdown","content:1.algorithm:3.leetcode:3.major:415.add-strings.md","content","1.algorithm/3.leetcode/3.major/415.add-strings.md","md",[1496,1498],{"_path":231,"title":230,"description":1497},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":237,"title":236,"description":1499},"给你一个字符数组 chars ，请使用下述算法压缩：",1715002845816]