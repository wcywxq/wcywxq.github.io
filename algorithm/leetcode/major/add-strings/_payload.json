[{"data":1,"prerenderedAt":1494},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-strings":540,"/algorithm/leetcode/major/add-strings-surround":1489},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":234,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":233,"description":544,"url":545,"body":546,"_type":1484,"_id":1485,"_source":1486,"_file":1487,"_extension":1488},"major",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":547,"children":548,"toc":1478},"root",[549,556,561,566,596,601,624,629,652,657,677,683,801,822,827,855,860,866,1472],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"示例 1：",{"type":550,"tag":567,"props":568,"children":571},"pre",{"className":569,"code":570,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[572],{"type":550,"tag":573,"props":574,"children":575},"code",{"__ignoreMap":543},[576,587],{"type":550,"tag":577,"props":578,"children":581},"span",{"class":579,"line":580},"line",1,[582],{"type":550,"tag":577,"props":583,"children":584},{},[585],{"type":555,"value":586},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":550,"tag":577,"props":588,"children":590},{"class":579,"line":589},2,[591],{"type":550,"tag":577,"props":592,"children":593},{},[594],{"type":555,"value":595},"输出：\"134\"\n",{"type":550,"tag":551,"props":597,"children":598},{},[599],{"type":555,"value":600},"示例 2：",{"type":550,"tag":567,"props":602,"children":604},{"className":569,"code":603,"language":555,"meta":543,"style":543},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[605],{"type":550,"tag":573,"props":606,"children":607},{"__ignoreMap":543},[608,616],{"type":550,"tag":577,"props":609,"children":610},{"class":579,"line":580},[611],{"type":550,"tag":577,"props":612,"children":613},{},[614],{"type":555,"value":615},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":550,"tag":577,"props":617,"children":618},{"class":579,"line":589},[619],{"type":550,"tag":577,"props":620,"children":621},{},[622],{"type":555,"value":623},"输出：\"533\"\n",{"type":550,"tag":551,"props":625,"children":626},{},[627],{"type":555,"value":628},"示例 3：",{"type":550,"tag":567,"props":630,"children":632},{"className":569,"code":631,"language":555,"meta":543,"style":543},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[633],{"type":550,"tag":573,"props":634,"children":635},{"__ignoreMap":543},[636,644],{"type":550,"tag":577,"props":637,"children":638},{"class":579,"line":580},[639],{"type":550,"tag":577,"props":640,"children":641},{},[642],{"type":555,"value":643},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":550,"tag":577,"props":645,"children":646},{"class":579,"line":589},[647],{"type":550,"tag":577,"props":648,"children":649},{},[650],{"type":555,"value":651},"输出：\"0\"\n",{"type":550,"tag":551,"props":653,"children":654},{},[655],{"type":555,"value":656},"提示：",{"type":550,"tag":658,"props":659,"children":660},"ul",{},[661,667,672],{"type":550,"tag":662,"props":663,"children":664},"li",{},[665],{"type":555,"value":666},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":550,"tag":662,"props":668,"children":669},{},[670],{"type":555,"value":671},"num1 和 num2 都只包含数字 0-9",{"type":550,"tag":662,"props":673,"children":674},{},[675],{"type":555,"value":676},"num1 和 num2 都不包含任何前导零",{"type":550,"tag":678,"props":679,"children":681},"h2",{"id":680},"解题思路",[682],{"type":555,"value":680},{"type":550,"tag":567,"props":684,"children":688},{"className":685,"code":686,"language":687,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[689],{"type":550,"tag":573,"props":690,"children":691},{"__ignoreMap":543},[692,724,749,775],{"type":550,"tag":577,"props":693,"children":694},{"class":579,"line":580},[695,701,707,713,718],{"type":550,"tag":577,"props":696,"children":698},{"style":697},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[699],{"type":555,"value":700},"Number",{"type":550,"tag":577,"props":702,"children":704},{"style":703},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[705],{"type":555,"value":706},".",{"type":550,"tag":577,"props":708,"children":710},{"style":709},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[711],{"type":555,"value":712},"MAX_VALUE",{"type":550,"tag":577,"props":714,"children":715},{"style":703},[716],{"type":555,"value":717},";",{"type":550,"tag":577,"props":719,"children":721},{"style":720},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[722],{"type":555,"value":723}," // 1.7976931348623157e+308\n",{"type":550,"tag":577,"props":725,"children":726},{"class":579,"line":589},[727,731,735,740,744],{"type":550,"tag":577,"props":728,"children":729},{"style":697},[730],{"type":555,"value":700},{"type":550,"tag":577,"props":732,"children":733},{"style":703},[734],{"type":555,"value":706},{"type":550,"tag":577,"props":736,"children":737},{"style":709},[738],{"type":555,"value":739},"MAX_SAFE_INTEGER",{"type":550,"tag":577,"props":741,"children":742},{"style":703},[743],{"type":555,"value":717},{"type":550,"tag":577,"props":745,"children":746},{"style":720},[747],{"type":555,"value":748}," // 9007199254740991\n",{"type":550,"tag":577,"props":750,"children":752},{"class":579,"line":751},3,[753,757,761,766,770],{"type":550,"tag":577,"props":754,"children":755},{"style":697},[756],{"type":555,"value":700},{"type":550,"tag":577,"props":758,"children":759},{"style":703},[760],{"type":555,"value":706},{"type":550,"tag":577,"props":762,"children":763},{"style":709},[764],{"type":555,"value":765},"MIN_VALUE",{"type":550,"tag":577,"props":767,"children":768},{"style":703},[769],{"type":555,"value":717},{"type":550,"tag":577,"props":771,"children":772},{"style":720},[773],{"type":555,"value":774}," // 5e-324\n",{"type":550,"tag":577,"props":776,"children":778},{"class":579,"line":777},4,[779,783,787,792,796],{"type":550,"tag":577,"props":780,"children":781},{"style":697},[782],{"type":555,"value":700},{"type":550,"tag":577,"props":784,"children":785},{"style":703},[786],{"type":555,"value":706},{"type":550,"tag":577,"props":788,"children":789},{"style":709},[790],{"type":555,"value":791},"MIN_SAFE_INTEGER",{"type":550,"tag":577,"props":793,"children":794},{"style":703},[795],{"type":555,"value":717},{"type":550,"tag":577,"props":797,"children":798},{"style":720},[799],{"type":555,"value":800}," // -9007199254740991\n",{"type":550,"tag":551,"props":802,"children":803},{},[804,806,812,814,820],{"type":555,"value":805},"如果想要对一个超大的整数 ",{"type":550,"tag":573,"props":807,"children":809},{"className":808},[],[810],{"type":555,"value":811},"> Number.MAX_SAFE_INTEGER",{"type":555,"value":813}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":550,"tag":573,"props":815,"children":817},{"className":816},[],[818],{"type":555,"value":819},"Number.MAX_SAFE_INTEGER",{"type":555,"value":821}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":550,"tag":551,"props":823,"children":824},{},[825],{"type":555,"value":826},"使用算法实现大数相加：",{"type":550,"tag":658,"props":828,"children":829},{},[830,835,840,845,850],{"type":550,"tag":662,"props":831,"children":832},{},[833],{"type":555,"value":834},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":550,"tag":662,"props":836,"children":837},{},[838],{"type":555,"value":839},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":550,"tag":662,"props":841,"children":842},{},[843],{"type":555,"value":844},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":550,"tag":662,"props":846,"children":847},{},[848],{"type":555,"value":849},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":550,"tag":662,"props":851,"children":852},{},[853],{"type":555,"value":854},"重复以上操作，直到计算出结果；",{"type":550,"tag":678,"props":856,"children":858},{"id":857},"实现",[859],{"type":555,"value":857},{"type":550,"tag":861,"props":862,"children":864},"h3",{"id":863},"大数相加",[865],{"type":555,"value":863},{"type":550,"tag":567,"props":867,"children":869},{"className":685,"code":868,"language":687,"meta":543,"style":543},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[870],{"type":550,"tag":573,"props":871,"children":872},{"__ignoreMap":543},[873,881,921,953,982,991,1047,1105,1154,1181,1208,1269,1333,1364,1394,1403,1463],{"type":550,"tag":577,"props":874,"children":875},{"class":579,"line":580},[876],{"type":550,"tag":577,"props":877,"children":878},{"style":720},[879],{"type":555,"value":880},"/**\n",{"type":550,"tag":577,"props":882,"children":883},{"class":579,"line":589},[884,889,894,900,905,911,916],{"type":550,"tag":577,"props":885,"children":886},{"style":720},[887],{"type":555,"value":888}," * ",{"type":550,"tag":577,"props":890,"children":891},{"style":703},[892],{"type":555,"value":893},"@",{"type":550,"tag":577,"props":895,"children":897},{"style":896},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[898],{"type":555,"value":899},"param",{"type":550,"tag":577,"props":901,"children":902},{"style":703},[903],{"type":555,"value":904}," {",{"type":550,"tag":577,"props":906,"children":908},{"style":907},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[909],{"type":555,"value":910},"string",{"type":550,"tag":577,"props":912,"children":913},{"style":703},[914],{"type":555,"value":915},"}",{"type":550,"tag":577,"props":917,"children":918},{"style":697},[919],{"type":555,"value":920}," num1\n",{"type":550,"tag":577,"props":922,"children":923},{"class":579,"line":751},[924,928,932,936,940,944,948],{"type":550,"tag":577,"props":925,"children":926},{"style":720},[927],{"type":555,"value":888},{"type":550,"tag":577,"props":929,"children":930},{"style":703},[931],{"type":555,"value":893},{"type":550,"tag":577,"props":933,"children":934},{"style":896},[935],{"type":555,"value":899},{"type":550,"tag":577,"props":937,"children":938},{"style":703},[939],{"type":555,"value":904},{"type":550,"tag":577,"props":941,"children":942},{"style":907},[943],{"type":555,"value":910},{"type":550,"tag":577,"props":945,"children":946},{"style":703},[947],{"type":555,"value":915},{"type":550,"tag":577,"props":949,"children":950},{"style":697},[951],{"type":555,"value":952}," num2\n",{"type":550,"tag":577,"props":954,"children":955},{"class":579,"line":777},[956,960,964,969,973,977],{"type":550,"tag":577,"props":957,"children":958},{"style":720},[959],{"type":555,"value":888},{"type":550,"tag":577,"props":961,"children":962},{"style":703},[963],{"type":555,"value":893},{"type":550,"tag":577,"props":965,"children":966},{"style":896},[967],{"type":555,"value":968},"return",{"type":550,"tag":577,"props":970,"children":971},{"style":703},[972],{"type":555,"value":904},{"type":550,"tag":577,"props":974,"children":975},{"style":907},[976],{"type":555,"value":910},{"type":550,"tag":577,"props":978,"children":979},{"style":703},[980],{"type":555,"value":981},"}\n",{"type":550,"tag":577,"props":983,"children":985},{"class":579,"line":984},5,[986],{"type":550,"tag":577,"props":987,"children":988},{"style":720},[989],{"type":555,"value":990}," */\n",{"type":550,"tag":577,"props":992,"children":994},{"class":579,"line":993},6,[995,1001,1007,1012,1017,1022,1027,1032,1037,1042],{"type":550,"tag":577,"props":996,"children":998},{"style":997},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[999],{"type":555,"value":1000},"var",{"type":550,"tag":577,"props":1002,"children":1004},{"style":1003},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[1005],{"type":555,"value":1006}," addStrings",{"type":550,"tag":577,"props":1008,"children":1009},{"style":703},[1010],{"type":555,"value":1011}," =",{"type":550,"tag":577,"props":1013,"children":1014},{"style":997},[1015],{"type":555,"value":1016}," function",{"type":550,"tag":577,"props":1018,"children":1019},{"style":703},[1020],{"type":555,"value":1021}," (",{"type":550,"tag":577,"props":1023,"children":1024},{"style":697},[1025],{"type":555,"value":1026},"num1",{"type":550,"tag":577,"props":1028,"children":1029},{"style":703},[1030],{"type":555,"value":1031},",",{"type":550,"tag":577,"props":1033,"children":1034},{"style":697},[1035],{"type":555,"value":1036}," num2",{"type":550,"tag":577,"props":1038,"children":1039},{"style":703},[1040],{"type":555,"value":1041},")",{"type":550,"tag":577,"props":1043,"children":1044},{"style":703},[1045],{"type":555,"value":1046}," {\n",{"type":550,"tag":577,"props":1048,"children":1050},{"class":579,"line":1049},7,[1051,1056,1061,1065,1070,1074,1079,1084,1089,1094,1100],{"type":550,"tag":577,"props":1052,"children":1053},{"style":997},[1054],{"type":555,"value":1055},"  let",{"type":550,"tag":577,"props":1057,"children":1058},{"style":697},[1059],{"type":555,"value":1060}," n1",{"type":550,"tag":577,"props":1062,"children":1063},{"style":703},[1064],{"type":555,"value":1011},{"type":550,"tag":577,"props":1066,"children":1067},{"style":697},[1068],{"type":555,"value":1069}," num1",{"type":550,"tag":577,"props":1071,"children":1072},{"style":703},[1073],{"type":555,"value":706},{"type":550,"tag":577,"props":1075,"children":1076},{"style":1003},[1077],{"type":555,"value":1078},"toString",{"type":550,"tag":577,"props":1080,"children":1081},{"style":703},[1082],{"type":555,"value":1083},"().",{"type":550,"tag":577,"props":1085,"children":1086},{"style":1003},[1087],{"type":555,"value":1088},"split",{"type":550,"tag":577,"props":1090,"children":1091},{"style":703},[1092],{"type":555,"value":1093},"(",{"type":550,"tag":577,"props":1095,"children":1097},{"style":1096},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1098],{"type":555,"value":1099},"\"\"",{"type":550,"tag":577,"props":1101,"children":1102},{"style":703},[1103],{"type":555,"value":1104},");\n",{"type":550,"tag":577,"props":1106,"children":1108},{"class":579,"line":1107},8,[1109,1113,1118,1122,1126,1130,1134,1138,1142,1146,1150],{"type":550,"tag":577,"props":1110,"children":1111},{"style":997},[1112],{"type":555,"value":1055},{"type":550,"tag":577,"props":1114,"children":1115},{"style":697},[1116],{"type":555,"value":1117}," n2",{"type":550,"tag":577,"props":1119,"children":1120},{"style":703},[1121],{"type":555,"value":1011},{"type":550,"tag":577,"props":1123,"children":1124},{"style":697},[1125],{"type":555,"value":1036},{"type":550,"tag":577,"props":1127,"children":1128},{"style":703},[1129],{"type":555,"value":706},{"type":550,"tag":577,"props":1131,"children":1132},{"style":1003},[1133],{"type":555,"value":1078},{"type":550,"tag":577,"props":1135,"children":1136},{"style":703},[1137],{"type":555,"value":1083},{"type":550,"tag":577,"props":1139,"children":1140},{"style":1003},[1141],{"type":555,"value":1088},{"type":550,"tag":577,"props":1143,"children":1144},{"style":703},[1145],{"type":555,"value":1093},{"type":550,"tag":577,"props":1147,"children":1148},{"style":1096},[1149],{"type":555,"value":1099},{"type":550,"tag":577,"props":1151,"children":1152},{"style":703},[1153],{"type":555,"value":1104},{"type":550,"tag":577,"props":1155,"children":1157},{"class":579,"line":1156},9,[1158,1162,1167,1171,1176],{"type":550,"tag":577,"props":1159,"children":1160},{"style":997},[1161],{"type":555,"value":1055},{"type":550,"tag":577,"props":1163,"children":1164},{"style":697},[1165],{"type":555,"value":1166}," res",{"type":550,"tag":577,"props":1168,"children":1169},{"style":703},[1170],{"type":555,"value":1011},{"type":550,"tag":577,"props":1172,"children":1173},{"style":1096},[1174],{"type":555,"value":1175}," \"\"",{"type":550,"tag":577,"props":1177,"children":1178},{"style":703},[1179],{"type":555,"value":1180},";\n",{"type":550,"tag":577,"props":1182,"children":1184},{"class":579,"line":1183},10,[1185,1189,1194,1198,1204],{"type":550,"tag":577,"props":1186,"children":1187},{"style":997},[1188],{"type":555,"value":1055},{"type":550,"tag":577,"props":1190,"children":1191},{"style":697},[1192],{"type":555,"value":1193}," temp",{"type":550,"tag":577,"props":1195,"children":1196},{"style":703},[1197],{"type":555,"value":1011},{"type":550,"tag":577,"props":1199,"children":1201},{"style":1200},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1202],{"type":555,"value":1203}," 0",{"type":550,"tag":577,"props":1205,"children":1206},{"style":703},[1207],{"type":555,"value":1180},{"type":550,"tag":577,"props":1209,"children":1211},{"class":579,"line":1210},11,[1212,1217,1221,1226,1230,1236,1241,1245,1249,1253,1257,1261,1265],{"type":550,"tag":577,"props":1213,"children":1214},{"style":896},[1215],{"type":555,"value":1216},"  while",{"type":550,"tag":577,"props":1218,"children":1219},{"style":703},[1220],{"type":555,"value":1021},{"type":550,"tag":577,"props":1222,"children":1223},{"style":697},[1224],{"type":555,"value":1225},"n1",{"type":550,"tag":577,"props":1227,"children":1228},{"style":703},[1229],{"type":555,"value":706},{"type":550,"tag":577,"props":1231,"children":1233},{"style":1232},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1234],{"type":555,"value":1235},"length",{"type":550,"tag":577,"props":1237,"children":1238},{"style":997},[1239],{"type":555,"value":1240}," ||",{"type":550,"tag":577,"props":1242,"children":1243},{"style":697},[1244],{"type":555,"value":1117},{"type":550,"tag":577,"props":1246,"children":1247},{"style":703},[1248],{"type":555,"value":706},{"type":550,"tag":577,"props":1250,"children":1251},{"style":1232},[1252],{"type":555,"value":1235},{"type":550,"tag":577,"props":1254,"children":1255},{"style":997},[1256],{"type":555,"value":1240},{"type":550,"tag":577,"props":1258,"children":1259},{"style":697},[1260],{"type":555,"value":1193},{"type":550,"tag":577,"props":1262,"children":1263},{"style":703},[1264],{"type":555,"value":1041},{"type":550,"tag":577,"props":1266,"children":1267},{"style":703},[1268],{"type":555,"value":1046},{"type":550,"tag":577,"props":1270,"children":1272},{"class":579,"line":1271},12,[1273,1278,1283,1288,1292,1296,1301,1306,1311,1315,1320,1324,1328],{"type":550,"tag":577,"props":1274,"children":1275},{"style":697},[1276],{"type":555,"value":1277},"    temp",{"type":550,"tag":577,"props":1279,"children":1280},{"style":997},[1281],{"type":555,"value":1282}," +=",{"type":550,"tag":577,"props":1284,"children":1285},{"style":997},[1286],{"type":555,"value":1287}," ~~",{"type":550,"tag":577,"props":1289,"children":1290},{"style":697},[1291],{"type":555,"value":1225},{"type":550,"tag":577,"props":1293,"children":1294},{"style":703},[1295],{"type":555,"value":706},{"type":550,"tag":577,"props":1297,"children":1298},{"style":1003},[1299],{"type":555,"value":1300},"pop",{"type":550,"tag":577,"props":1302,"children":1303},{"style":703},[1304],{"type":555,"value":1305},"()",{"type":550,"tag":577,"props":1307,"children":1308},{"style":997},[1309],{"type":555,"value":1310}," +",{"type":550,"tag":577,"props":1312,"children":1313},{"style":997},[1314],{"type":555,"value":1287},{"type":550,"tag":577,"props":1316,"children":1317},{"style":697},[1318],{"type":555,"value":1319},"n2",{"type":550,"tag":577,"props":1321,"children":1322},{"style":703},[1323],{"type":555,"value":706},{"type":550,"tag":577,"props":1325,"children":1326},{"style":1003},[1327],{"type":555,"value":1300},{"type":550,"tag":577,"props":1329,"children":1330},{"style":703},[1331],{"type":555,"value":1332},"();\n",{"type":550,"tag":577,"props":1334,"children":1336},{"class":579,"line":1335},13,[1337,1342,1346,1350,1355,1360],{"type":550,"tag":577,"props":1338,"children":1339},{"style":697},[1340],{"type":555,"value":1341},"    res",{"type":550,"tag":577,"props":1343,"children":1344},{"style":997},[1345],{"type":555,"value":1282},{"type":550,"tag":577,"props":1347,"children":1348},{"style":697},[1349],{"type":555,"value":1193},{"type":550,"tag":577,"props":1351,"children":1352},{"style":997},[1353],{"type":555,"value":1354}," %",{"type":550,"tag":577,"props":1356,"children":1357},{"style":1200},[1358],{"type":555,"value":1359}," 10",{"type":550,"tag":577,"props":1361,"children":1362},{"style":703},[1363],{"type":555,"value":1180},{"type":550,"tag":577,"props":1365,"children":1367},{"class":579,"line":1366},14,[1368,1372,1376,1380,1385,1390],{"type":550,"tag":577,"props":1369,"children":1370},{"style":697},[1371],{"type":555,"value":1277},{"type":550,"tag":577,"props":1373,"children":1374},{"style":703},[1375],{"type":555,"value":1011},{"type":550,"tag":577,"props":1377,"children":1378},{"style":697},[1379],{"type":555,"value":1193},{"type":550,"tag":577,"props":1381,"children":1382},{"style":703},[1383],{"type":555,"value":1384}," >",{"type":550,"tag":577,"props":1386,"children":1387},{"style":1200},[1388],{"type":555,"value":1389}," 9",{"type":550,"tag":577,"props":1391,"children":1392},{"style":703},[1393],{"type":555,"value":1180},{"type":550,"tag":577,"props":1395,"children":1397},{"class":579,"line":1396},15,[1398],{"type":550,"tag":577,"props":1399,"children":1400},{"style":703},[1401],{"type":555,"value":1402},"  }\n",{"type":550,"tag":577,"props":1404,"children":1406},{"class":579,"line":1405},16,[1407,1412,1416,1420,1424,1428,1432,1437,1442,1446,1451,1455,1459],{"type":550,"tag":577,"props":1408,"children":1409},{"style":896},[1410],{"type":555,"value":1411},"  return",{"type":550,"tag":577,"props":1413,"children":1414},{"style":697},[1415],{"type":555,"value":1166},{"type":550,"tag":577,"props":1417,"children":1418},{"style":703},[1419],{"type":555,"value":706},{"type":550,"tag":577,"props":1421,"children":1422},{"style":1003},[1423],{"type":555,"value":1088},{"type":550,"tag":577,"props":1425,"children":1426},{"style":703},[1427],{"type":555,"value":1093},{"type":550,"tag":577,"props":1429,"children":1430},{"style":1096},[1431],{"type":555,"value":1099},{"type":550,"tag":577,"props":1433,"children":1434},{"style":703},[1435],{"type":555,"value":1436},").",{"type":550,"tag":577,"props":1438,"children":1439},{"style":1003},[1440],{"type":555,"value":1441},"reverse",{"type":550,"tag":577,"props":1443,"children":1444},{"style":703},[1445],{"type":555,"value":1083},{"type":550,"tag":577,"props":1447,"children":1448},{"style":1003},[1449],{"type":555,"value":1450},"join",{"type":550,"tag":577,"props":1452,"children":1453},{"style":703},[1454],{"type":555,"value":1093},{"type":550,"tag":577,"props":1456,"children":1457},{"style":1096},[1458],{"type":555,"value":1099},{"type":550,"tag":577,"props":1460,"children":1461},{"style":703},[1462],{"type":555,"value":1104},{"type":550,"tag":577,"props":1464,"children":1466},{"class":579,"line":1465},17,[1467],{"type":550,"tag":577,"props":1468,"children":1469},{"style":703},[1470],{"type":555,"value":1471},"};\n",{"type":550,"tag":1473,"props":1474,"children":1475},"style",{},[1476],{"type":555,"value":1477},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":984,"depth":984,"links":1479},[1480,1481],{"id":680,"depth":589,"text":680},{"id":857,"depth":589,"text":857,"children":1482},[1483],{"id":863,"depth":751,"text":863},"markdown","content:1.algorithm:3.leetcode:3.major:415.add-strings.md","content","1.algorithm/3.leetcode/3.major/415.add-strings.md","md",[1490,1492],{"_path":231,"title":230,"description":1491},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":237,"title":236,"description":1493},"给你一个字符数组 chars ，请使用下述算法压缩：",1714099216581]