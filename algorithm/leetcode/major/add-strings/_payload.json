[{"data":1,"prerenderedAt":1505},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-strings":551,"/algorithm/leetcode/major/add-strings-surround":1500},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":237,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":236,"description":555,"url":556,"body":557,"_type":1495,"_id":1496,"_source":1497,"_file":1498,"_extension":1499},"major",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":558,"children":559,"toc":1489},"root",[560,567,572,577,607,612,635,640,663,668,688,694,812,833,838,866,871,877,1483],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":566,"value":576},"示例 1：",{"type":561,"tag":578,"props":579,"children":582},"pre",{"className":580,"code":581,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[583],{"type":561,"tag":584,"props":585,"children":586},"code",{"__ignoreMap":554},[587,598],{"type":561,"tag":588,"props":589,"children":592},"span",{"class":590,"line":591},"line",1,[593],{"type":561,"tag":588,"props":594,"children":595},{},[596],{"type":566,"value":597},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":561,"tag":588,"props":599,"children":601},{"class":590,"line":600},2,[602],{"type":561,"tag":588,"props":603,"children":604},{},[605],{"type":566,"value":606},"输出：\"134\"\n",{"type":561,"tag":562,"props":608,"children":609},{},[610],{"type":566,"value":611},"示例 2：",{"type":561,"tag":578,"props":613,"children":615},{"className":580,"code":614,"language":566,"meta":554,"style":554},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[616],{"type":561,"tag":584,"props":617,"children":618},{"__ignoreMap":554},[619,627],{"type":561,"tag":588,"props":620,"children":621},{"class":590,"line":591},[622],{"type":561,"tag":588,"props":623,"children":624},{},[625],{"type":566,"value":626},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":561,"tag":588,"props":628,"children":629},{"class":590,"line":600},[630],{"type":561,"tag":588,"props":631,"children":632},{},[633],{"type":566,"value":634},"输出：\"533\"\n",{"type":561,"tag":562,"props":636,"children":637},{},[638],{"type":566,"value":639},"示例 3：",{"type":561,"tag":578,"props":641,"children":643},{"className":580,"code":642,"language":566,"meta":554,"style":554},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[644],{"type":561,"tag":584,"props":645,"children":646},{"__ignoreMap":554},[647,655],{"type":561,"tag":588,"props":648,"children":649},{"class":590,"line":591},[650],{"type":561,"tag":588,"props":651,"children":652},{},[653],{"type":566,"value":654},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":561,"tag":588,"props":656,"children":657},{"class":590,"line":600},[658],{"type":561,"tag":588,"props":659,"children":660},{},[661],{"type":566,"value":662},"输出：\"0\"\n",{"type":561,"tag":562,"props":664,"children":665},{},[666],{"type":566,"value":667},"提示：",{"type":561,"tag":669,"props":670,"children":671},"ul",{},[672,678,683],{"type":561,"tag":673,"props":674,"children":675},"li",{},[676],{"type":566,"value":677},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":561,"tag":673,"props":679,"children":680},{},[681],{"type":566,"value":682},"num1 和 num2 都只包含数字 0-9",{"type":561,"tag":673,"props":684,"children":685},{},[686],{"type":566,"value":687},"num1 和 num2 都不包含任何前导零",{"type":561,"tag":689,"props":690,"children":692},"h2",{"id":691},"解题思路",[693],{"type":566,"value":691},{"type":561,"tag":578,"props":695,"children":699},{"className":696,"code":697,"language":698,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[700],{"type":561,"tag":584,"props":701,"children":702},{"__ignoreMap":554},[703,735,760,786],{"type":561,"tag":588,"props":704,"children":705},{"class":590,"line":591},[706,712,718,724,729],{"type":561,"tag":588,"props":707,"children":709},{"style":708},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[710],{"type":566,"value":711},"Number",{"type":561,"tag":588,"props":713,"children":715},{"style":714},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[716],{"type":566,"value":717},".",{"type":561,"tag":588,"props":719,"children":721},{"style":720},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[722],{"type":566,"value":723},"MAX_VALUE",{"type":561,"tag":588,"props":725,"children":726},{"style":714},[727],{"type":566,"value":728},";",{"type":561,"tag":588,"props":730,"children":732},{"style":731},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[733],{"type":566,"value":734}," // 1.7976931348623157e+308\n",{"type":561,"tag":588,"props":736,"children":737},{"class":590,"line":600},[738,742,746,751,755],{"type":561,"tag":588,"props":739,"children":740},{"style":708},[741],{"type":566,"value":711},{"type":561,"tag":588,"props":743,"children":744},{"style":714},[745],{"type":566,"value":717},{"type":561,"tag":588,"props":747,"children":748},{"style":720},[749],{"type":566,"value":750},"MAX_SAFE_INTEGER",{"type":561,"tag":588,"props":752,"children":753},{"style":714},[754],{"type":566,"value":728},{"type":561,"tag":588,"props":756,"children":757},{"style":731},[758],{"type":566,"value":759}," // 9007199254740991\n",{"type":561,"tag":588,"props":761,"children":763},{"class":590,"line":762},3,[764,768,772,777,781],{"type":561,"tag":588,"props":765,"children":766},{"style":708},[767],{"type":566,"value":711},{"type":561,"tag":588,"props":769,"children":770},{"style":714},[771],{"type":566,"value":717},{"type":561,"tag":588,"props":773,"children":774},{"style":720},[775],{"type":566,"value":776},"MIN_VALUE",{"type":561,"tag":588,"props":778,"children":779},{"style":714},[780],{"type":566,"value":728},{"type":561,"tag":588,"props":782,"children":783},{"style":731},[784],{"type":566,"value":785}," // 5e-324\n",{"type":561,"tag":588,"props":787,"children":789},{"class":590,"line":788},4,[790,794,798,803,807],{"type":561,"tag":588,"props":791,"children":792},{"style":708},[793],{"type":566,"value":711},{"type":561,"tag":588,"props":795,"children":796},{"style":714},[797],{"type":566,"value":717},{"type":561,"tag":588,"props":799,"children":800},{"style":720},[801],{"type":566,"value":802},"MIN_SAFE_INTEGER",{"type":561,"tag":588,"props":804,"children":805},{"style":714},[806],{"type":566,"value":728},{"type":561,"tag":588,"props":808,"children":809},{"style":731},[810],{"type":566,"value":811}," // -9007199254740991\n",{"type":561,"tag":562,"props":813,"children":814},{},[815,817,823,825,831],{"type":566,"value":816},"如果想要对一个超大的整数 ",{"type":561,"tag":584,"props":818,"children":820},{"className":819},[],[821],{"type":566,"value":822},"> Number.MAX_SAFE_INTEGER",{"type":566,"value":824}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":561,"tag":584,"props":826,"children":828},{"className":827},[],[829],{"type":566,"value":830},"Number.MAX_SAFE_INTEGER",{"type":566,"value":832}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":561,"tag":562,"props":834,"children":835},{},[836],{"type":566,"value":837},"使用算法实现大数相加：",{"type":561,"tag":669,"props":839,"children":840},{},[841,846,851,856,861],{"type":561,"tag":673,"props":842,"children":843},{},[844],{"type":566,"value":845},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":561,"tag":673,"props":847,"children":848},{},[849],{"type":566,"value":850},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":561,"tag":673,"props":852,"children":853},{},[854],{"type":566,"value":855},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":561,"tag":673,"props":857,"children":858},{},[859],{"type":566,"value":860},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":561,"tag":673,"props":862,"children":863},{},[864],{"type":566,"value":865},"重复以上操作，直到计算出结果；",{"type":561,"tag":689,"props":867,"children":869},{"id":868},"实现",[870],{"type":566,"value":868},{"type":561,"tag":872,"props":873,"children":875},"h3",{"id":874},"大数相加",[876],{"type":566,"value":874},{"type":561,"tag":578,"props":878,"children":880},{"className":696,"code":879,"language":698,"meta":554,"style":554},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[881],{"type":561,"tag":584,"props":882,"children":883},{"__ignoreMap":554},[884,892,932,964,993,1002,1058,1116,1165,1192,1219,1280,1344,1375,1405,1414,1474],{"type":561,"tag":588,"props":885,"children":886},{"class":590,"line":591},[887],{"type":561,"tag":588,"props":888,"children":889},{"style":731},[890],{"type":566,"value":891},"/**\n",{"type":561,"tag":588,"props":893,"children":894},{"class":590,"line":600},[895,900,905,911,916,922,927],{"type":561,"tag":588,"props":896,"children":897},{"style":731},[898],{"type":566,"value":899}," * ",{"type":561,"tag":588,"props":901,"children":902},{"style":714},[903],{"type":566,"value":904},"@",{"type":561,"tag":588,"props":906,"children":908},{"style":907},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[909],{"type":566,"value":910},"param",{"type":561,"tag":588,"props":912,"children":913},{"style":714},[914],{"type":566,"value":915}," {",{"type":561,"tag":588,"props":917,"children":919},{"style":918},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[920],{"type":566,"value":921},"string",{"type":561,"tag":588,"props":923,"children":924},{"style":714},[925],{"type":566,"value":926},"}",{"type":561,"tag":588,"props":928,"children":929},{"style":708},[930],{"type":566,"value":931}," num1\n",{"type":561,"tag":588,"props":933,"children":934},{"class":590,"line":762},[935,939,943,947,951,955,959],{"type":561,"tag":588,"props":936,"children":937},{"style":731},[938],{"type":566,"value":899},{"type":561,"tag":588,"props":940,"children":941},{"style":714},[942],{"type":566,"value":904},{"type":561,"tag":588,"props":944,"children":945},{"style":907},[946],{"type":566,"value":910},{"type":561,"tag":588,"props":948,"children":949},{"style":714},[950],{"type":566,"value":915},{"type":561,"tag":588,"props":952,"children":953},{"style":918},[954],{"type":566,"value":921},{"type":561,"tag":588,"props":956,"children":957},{"style":714},[958],{"type":566,"value":926},{"type":561,"tag":588,"props":960,"children":961},{"style":708},[962],{"type":566,"value":963}," num2\n",{"type":561,"tag":588,"props":965,"children":966},{"class":590,"line":788},[967,971,975,980,984,988],{"type":561,"tag":588,"props":968,"children":969},{"style":731},[970],{"type":566,"value":899},{"type":561,"tag":588,"props":972,"children":973},{"style":714},[974],{"type":566,"value":904},{"type":561,"tag":588,"props":976,"children":977},{"style":907},[978],{"type":566,"value":979},"return",{"type":561,"tag":588,"props":981,"children":982},{"style":714},[983],{"type":566,"value":915},{"type":561,"tag":588,"props":985,"children":986},{"style":918},[987],{"type":566,"value":921},{"type":561,"tag":588,"props":989,"children":990},{"style":714},[991],{"type":566,"value":992},"}\n",{"type":561,"tag":588,"props":994,"children":996},{"class":590,"line":995},5,[997],{"type":561,"tag":588,"props":998,"children":999},{"style":731},[1000],{"type":566,"value":1001}," */\n",{"type":561,"tag":588,"props":1003,"children":1005},{"class":590,"line":1004},6,[1006,1012,1018,1023,1028,1033,1038,1043,1048,1053],{"type":561,"tag":588,"props":1007,"children":1009},{"style":1008},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[1010],{"type":566,"value":1011},"var",{"type":561,"tag":588,"props":1013,"children":1015},{"style":1014},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[1016],{"type":566,"value":1017}," addStrings",{"type":561,"tag":588,"props":1019,"children":1020},{"style":714},[1021],{"type":566,"value":1022}," =",{"type":561,"tag":588,"props":1024,"children":1025},{"style":1008},[1026],{"type":566,"value":1027}," function",{"type":561,"tag":588,"props":1029,"children":1030},{"style":714},[1031],{"type":566,"value":1032}," (",{"type":561,"tag":588,"props":1034,"children":1035},{"style":708},[1036],{"type":566,"value":1037},"num1",{"type":561,"tag":588,"props":1039,"children":1040},{"style":714},[1041],{"type":566,"value":1042},",",{"type":561,"tag":588,"props":1044,"children":1045},{"style":708},[1046],{"type":566,"value":1047}," num2",{"type":561,"tag":588,"props":1049,"children":1050},{"style":714},[1051],{"type":566,"value":1052},")",{"type":561,"tag":588,"props":1054,"children":1055},{"style":714},[1056],{"type":566,"value":1057}," {\n",{"type":561,"tag":588,"props":1059,"children":1061},{"class":590,"line":1060},7,[1062,1067,1072,1076,1081,1085,1090,1095,1100,1105,1111],{"type":561,"tag":588,"props":1063,"children":1064},{"style":1008},[1065],{"type":566,"value":1066},"  let",{"type":561,"tag":588,"props":1068,"children":1069},{"style":708},[1070],{"type":566,"value":1071}," n1",{"type":561,"tag":588,"props":1073,"children":1074},{"style":714},[1075],{"type":566,"value":1022},{"type":561,"tag":588,"props":1077,"children":1078},{"style":708},[1079],{"type":566,"value":1080}," num1",{"type":561,"tag":588,"props":1082,"children":1083},{"style":714},[1084],{"type":566,"value":717},{"type":561,"tag":588,"props":1086,"children":1087},{"style":1014},[1088],{"type":566,"value":1089},"toString",{"type":561,"tag":588,"props":1091,"children":1092},{"style":714},[1093],{"type":566,"value":1094},"().",{"type":561,"tag":588,"props":1096,"children":1097},{"style":1014},[1098],{"type":566,"value":1099},"split",{"type":561,"tag":588,"props":1101,"children":1102},{"style":714},[1103],{"type":566,"value":1104},"(",{"type":561,"tag":588,"props":1106,"children":1108},{"style":1107},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1109],{"type":566,"value":1110},"\"\"",{"type":561,"tag":588,"props":1112,"children":1113},{"style":714},[1114],{"type":566,"value":1115},");\n",{"type":561,"tag":588,"props":1117,"children":1119},{"class":590,"line":1118},8,[1120,1124,1129,1133,1137,1141,1145,1149,1153,1157,1161],{"type":561,"tag":588,"props":1121,"children":1122},{"style":1008},[1123],{"type":566,"value":1066},{"type":561,"tag":588,"props":1125,"children":1126},{"style":708},[1127],{"type":566,"value":1128}," n2",{"type":561,"tag":588,"props":1130,"children":1131},{"style":714},[1132],{"type":566,"value":1022},{"type":561,"tag":588,"props":1134,"children":1135},{"style":708},[1136],{"type":566,"value":1047},{"type":561,"tag":588,"props":1138,"children":1139},{"style":714},[1140],{"type":566,"value":717},{"type":561,"tag":588,"props":1142,"children":1143},{"style":1014},[1144],{"type":566,"value":1089},{"type":561,"tag":588,"props":1146,"children":1147},{"style":714},[1148],{"type":566,"value":1094},{"type":561,"tag":588,"props":1150,"children":1151},{"style":1014},[1152],{"type":566,"value":1099},{"type":561,"tag":588,"props":1154,"children":1155},{"style":714},[1156],{"type":566,"value":1104},{"type":561,"tag":588,"props":1158,"children":1159},{"style":1107},[1160],{"type":566,"value":1110},{"type":561,"tag":588,"props":1162,"children":1163},{"style":714},[1164],{"type":566,"value":1115},{"type":561,"tag":588,"props":1166,"children":1168},{"class":590,"line":1167},9,[1169,1173,1178,1182,1187],{"type":561,"tag":588,"props":1170,"children":1171},{"style":1008},[1172],{"type":566,"value":1066},{"type":561,"tag":588,"props":1174,"children":1175},{"style":708},[1176],{"type":566,"value":1177}," res",{"type":561,"tag":588,"props":1179,"children":1180},{"style":714},[1181],{"type":566,"value":1022},{"type":561,"tag":588,"props":1183,"children":1184},{"style":1107},[1185],{"type":566,"value":1186}," \"\"",{"type":561,"tag":588,"props":1188,"children":1189},{"style":714},[1190],{"type":566,"value":1191},";\n",{"type":561,"tag":588,"props":1193,"children":1195},{"class":590,"line":1194},10,[1196,1200,1205,1209,1215],{"type":561,"tag":588,"props":1197,"children":1198},{"style":1008},[1199],{"type":566,"value":1066},{"type":561,"tag":588,"props":1201,"children":1202},{"style":708},[1203],{"type":566,"value":1204}," temp",{"type":561,"tag":588,"props":1206,"children":1207},{"style":714},[1208],{"type":566,"value":1022},{"type":561,"tag":588,"props":1210,"children":1212},{"style":1211},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1213],{"type":566,"value":1214}," 0",{"type":561,"tag":588,"props":1216,"children":1217},{"style":714},[1218],{"type":566,"value":1191},{"type":561,"tag":588,"props":1220,"children":1222},{"class":590,"line":1221},11,[1223,1228,1232,1237,1241,1247,1252,1256,1260,1264,1268,1272,1276],{"type":561,"tag":588,"props":1224,"children":1225},{"style":907},[1226],{"type":566,"value":1227},"  while",{"type":561,"tag":588,"props":1229,"children":1230},{"style":714},[1231],{"type":566,"value":1032},{"type":561,"tag":588,"props":1233,"children":1234},{"style":708},[1235],{"type":566,"value":1236},"n1",{"type":561,"tag":588,"props":1238,"children":1239},{"style":714},[1240],{"type":566,"value":717},{"type":561,"tag":588,"props":1242,"children":1244},{"style":1243},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1245],{"type":566,"value":1246},"length",{"type":561,"tag":588,"props":1248,"children":1249},{"style":1008},[1250],{"type":566,"value":1251}," ||",{"type":561,"tag":588,"props":1253,"children":1254},{"style":708},[1255],{"type":566,"value":1128},{"type":561,"tag":588,"props":1257,"children":1258},{"style":714},[1259],{"type":566,"value":717},{"type":561,"tag":588,"props":1261,"children":1262},{"style":1243},[1263],{"type":566,"value":1246},{"type":561,"tag":588,"props":1265,"children":1266},{"style":1008},[1267],{"type":566,"value":1251},{"type":561,"tag":588,"props":1269,"children":1270},{"style":708},[1271],{"type":566,"value":1204},{"type":561,"tag":588,"props":1273,"children":1274},{"style":714},[1275],{"type":566,"value":1052},{"type":561,"tag":588,"props":1277,"children":1278},{"style":714},[1279],{"type":566,"value":1057},{"type":561,"tag":588,"props":1281,"children":1283},{"class":590,"line":1282},12,[1284,1289,1294,1299,1303,1307,1312,1317,1322,1326,1331,1335,1339],{"type":561,"tag":588,"props":1285,"children":1286},{"style":708},[1287],{"type":566,"value":1288},"    temp",{"type":561,"tag":588,"props":1290,"children":1291},{"style":1008},[1292],{"type":566,"value":1293}," +=",{"type":561,"tag":588,"props":1295,"children":1296},{"style":1008},[1297],{"type":566,"value":1298}," ~~",{"type":561,"tag":588,"props":1300,"children":1301},{"style":708},[1302],{"type":566,"value":1236},{"type":561,"tag":588,"props":1304,"children":1305},{"style":714},[1306],{"type":566,"value":717},{"type":561,"tag":588,"props":1308,"children":1309},{"style":1014},[1310],{"type":566,"value":1311},"pop",{"type":561,"tag":588,"props":1313,"children":1314},{"style":714},[1315],{"type":566,"value":1316},"()",{"type":561,"tag":588,"props":1318,"children":1319},{"style":1008},[1320],{"type":566,"value":1321}," +",{"type":561,"tag":588,"props":1323,"children":1324},{"style":1008},[1325],{"type":566,"value":1298},{"type":561,"tag":588,"props":1327,"children":1328},{"style":708},[1329],{"type":566,"value":1330},"n2",{"type":561,"tag":588,"props":1332,"children":1333},{"style":714},[1334],{"type":566,"value":717},{"type":561,"tag":588,"props":1336,"children":1337},{"style":1014},[1338],{"type":566,"value":1311},{"type":561,"tag":588,"props":1340,"children":1341},{"style":714},[1342],{"type":566,"value":1343},"();\n",{"type":561,"tag":588,"props":1345,"children":1347},{"class":590,"line":1346},13,[1348,1353,1357,1361,1366,1371],{"type":561,"tag":588,"props":1349,"children":1350},{"style":708},[1351],{"type":566,"value":1352},"    res",{"type":561,"tag":588,"props":1354,"children":1355},{"style":1008},[1356],{"type":566,"value":1293},{"type":561,"tag":588,"props":1358,"children":1359},{"style":708},[1360],{"type":566,"value":1204},{"type":561,"tag":588,"props":1362,"children":1363},{"style":1008},[1364],{"type":566,"value":1365}," %",{"type":561,"tag":588,"props":1367,"children":1368},{"style":1211},[1369],{"type":566,"value":1370}," 10",{"type":561,"tag":588,"props":1372,"children":1373},{"style":714},[1374],{"type":566,"value":1191},{"type":561,"tag":588,"props":1376,"children":1378},{"class":590,"line":1377},14,[1379,1383,1387,1391,1396,1401],{"type":561,"tag":588,"props":1380,"children":1381},{"style":708},[1382],{"type":566,"value":1288},{"type":561,"tag":588,"props":1384,"children":1385},{"style":714},[1386],{"type":566,"value":1022},{"type":561,"tag":588,"props":1388,"children":1389},{"style":708},[1390],{"type":566,"value":1204},{"type":561,"tag":588,"props":1392,"children":1393},{"style":714},[1394],{"type":566,"value":1395}," >",{"type":561,"tag":588,"props":1397,"children":1398},{"style":1211},[1399],{"type":566,"value":1400}," 9",{"type":561,"tag":588,"props":1402,"children":1403},{"style":714},[1404],{"type":566,"value":1191},{"type":561,"tag":588,"props":1406,"children":1408},{"class":590,"line":1407},15,[1409],{"type":561,"tag":588,"props":1410,"children":1411},{"style":714},[1412],{"type":566,"value":1413},"  }\n",{"type":561,"tag":588,"props":1415,"children":1417},{"class":590,"line":1416},16,[1418,1423,1427,1431,1435,1439,1443,1448,1453,1457,1462,1466,1470],{"type":561,"tag":588,"props":1419,"children":1420},{"style":907},[1421],{"type":566,"value":1422},"  return",{"type":561,"tag":588,"props":1424,"children":1425},{"style":708},[1426],{"type":566,"value":1177},{"type":561,"tag":588,"props":1428,"children":1429},{"style":714},[1430],{"type":566,"value":717},{"type":561,"tag":588,"props":1432,"children":1433},{"style":1014},[1434],{"type":566,"value":1099},{"type":561,"tag":588,"props":1436,"children":1437},{"style":714},[1438],{"type":566,"value":1104},{"type":561,"tag":588,"props":1440,"children":1441},{"style":1107},[1442],{"type":566,"value":1110},{"type":561,"tag":588,"props":1444,"children":1445},{"style":714},[1446],{"type":566,"value":1447},").",{"type":561,"tag":588,"props":1449,"children":1450},{"style":1014},[1451],{"type":566,"value":1452},"reverse",{"type":561,"tag":588,"props":1454,"children":1455},{"style":714},[1456],{"type":566,"value":1094},{"type":561,"tag":588,"props":1458,"children":1459},{"style":1014},[1460],{"type":566,"value":1461},"join",{"type":561,"tag":588,"props":1463,"children":1464},{"style":714},[1465],{"type":566,"value":1104},{"type":561,"tag":588,"props":1467,"children":1468},{"style":1107},[1469],{"type":566,"value":1110},{"type":561,"tag":588,"props":1471,"children":1472},{"style":714},[1473],{"type":566,"value":1115},{"type":561,"tag":588,"props":1475,"children":1477},{"class":590,"line":1476},17,[1478],{"type":561,"tag":588,"props":1479,"children":1480},{"style":714},[1481],{"type":566,"value":1482},"};\n",{"type":561,"tag":1484,"props":1485,"children":1486},"style",{},[1487],{"type":566,"value":1488},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":995,"depth":995,"links":1490},[1491,1492],{"id":691,"depth":600,"text":691},{"id":868,"depth":600,"text":868,"children":1493},[1494],{"id":874,"depth":762,"text":874},"markdown","content:1.algorithm:3.leetcode:3.major:415.add-strings.md","content","1.algorithm/3.leetcode/3.major/415.add-strings.md","md",[1501,1503],{"_path":234,"title":233,"description":1502},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":240,"title":239,"description":1504},"给你一个字符数组 chars ，请使用下述算法压缩：",1715092158241]