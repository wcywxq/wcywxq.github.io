[{"data":1,"prerenderedAt":1463},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-strings":509,"/algorithm/leetcode/major/add-strings-surround":1458},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":234,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":233,"description":513,"url":514,"body":515,"_type":1453,"_id":1454,"_source":1455,"_file":1456,"_extension":1457},"major",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":516,"children":517,"toc":1447},"root",[518,525,530,535,565,570,593,598,621,626,646,652,770,791,796,824,829,835,1441],{"type":519,"tag":520,"props":521,"children":522},"element","p",{},[523],{"type":524,"value":513},"text",{"type":519,"tag":520,"props":526,"children":527},{},[528],{"type":524,"value":529},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":519,"tag":520,"props":531,"children":532},{},[533],{"type":524,"value":534},"示例 1：",{"type":519,"tag":536,"props":537,"children":540},"pre",{"className":538,"code":539,"language":524,"meta":512,"style":512},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[541],{"type":519,"tag":542,"props":543,"children":544},"code",{"__ignoreMap":512},[545,556],{"type":519,"tag":546,"props":547,"children":550},"span",{"class":548,"line":549},"line",1,[551],{"type":519,"tag":546,"props":552,"children":553},{},[554],{"type":524,"value":555},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":519,"tag":546,"props":557,"children":559},{"class":548,"line":558},2,[560],{"type":519,"tag":546,"props":561,"children":562},{},[563],{"type":524,"value":564},"输出：\"134\"\n",{"type":519,"tag":520,"props":566,"children":567},{},[568],{"type":524,"value":569},"示例 2：",{"type":519,"tag":536,"props":571,"children":573},{"className":538,"code":572,"language":524,"meta":512,"style":512},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[574],{"type":519,"tag":542,"props":575,"children":576},{"__ignoreMap":512},[577,585],{"type":519,"tag":546,"props":578,"children":579},{"class":548,"line":549},[580],{"type":519,"tag":546,"props":581,"children":582},{},[583],{"type":524,"value":584},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":519,"tag":546,"props":586,"children":587},{"class":548,"line":558},[588],{"type":519,"tag":546,"props":589,"children":590},{},[591],{"type":524,"value":592},"输出：\"533\"\n",{"type":519,"tag":520,"props":594,"children":595},{},[596],{"type":524,"value":597},"示例 3：",{"type":519,"tag":536,"props":599,"children":601},{"className":538,"code":600,"language":524,"meta":512,"style":512},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[602],{"type":519,"tag":542,"props":603,"children":604},{"__ignoreMap":512},[605,613],{"type":519,"tag":546,"props":606,"children":607},{"class":548,"line":549},[608],{"type":519,"tag":546,"props":609,"children":610},{},[611],{"type":524,"value":612},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":519,"tag":546,"props":614,"children":615},{"class":548,"line":558},[616],{"type":519,"tag":546,"props":617,"children":618},{},[619],{"type":524,"value":620},"输出：\"0\"\n",{"type":519,"tag":520,"props":622,"children":623},{},[624],{"type":524,"value":625},"提示：",{"type":519,"tag":627,"props":628,"children":629},"ul",{},[630,636,641],{"type":519,"tag":631,"props":632,"children":633},"li",{},[634],{"type":524,"value":635},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":519,"tag":631,"props":637,"children":638},{},[639],{"type":524,"value":640},"num1 和 num2 都只包含数字 0-9",{"type":519,"tag":631,"props":642,"children":643},{},[644],{"type":524,"value":645},"num1 和 num2 都不包含任何前导零",{"type":519,"tag":647,"props":648,"children":650},"h2",{"id":649},"解题思路",[651],{"type":524,"value":649},{"type":519,"tag":536,"props":653,"children":657},{"className":654,"code":655,"language":656,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[658],{"type":519,"tag":542,"props":659,"children":660},{"__ignoreMap":512},[661,693,718,744],{"type":519,"tag":546,"props":662,"children":663},{"class":548,"line":549},[664,670,676,682,687],{"type":519,"tag":546,"props":665,"children":667},{"style":666},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[668],{"type":524,"value":669},"Number",{"type":519,"tag":546,"props":671,"children":673},{"style":672},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[674],{"type":524,"value":675},".",{"type":519,"tag":546,"props":677,"children":679},{"style":678},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[680],{"type":524,"value":681},"MAX_VALUE",{"type":519,"tag":546,"props":683,"children":684},{"style":672},[685],{"type":524,"value":686},";",{"type":519,"tag":546,"props":688,"children":690},{"style":689},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[691],{"type":524,"value":692}," // 1.7976931348623157e+308\n",{"type":519,"tag":546,"props":694,"children":695},{"class":548,"line":558},[696,700,704,709,713],{"type":519,"tag":546,"props":697,"children":698},{"style":666},[699],{"type":524,"value":669},{"type":519,"tag":546,"props":701,"children":702},{"style":672},[703],{"type":524,"value":675},{"type":519,"tag":546,"props":705,"children":706},{"style":678},[707],{"type":524,"value":708},"MAX_SAFE_INTEGER",{"type":519,"tag":546,"props":710,"children":711},{"style":672},[712],{"type":524,"value":686},{"type":519,"tag":546,"props":714,"children":715},{"style":689},[716],{"type":524,"value":717}," // 9007199254740991\n",{"type":519,"tag":546,"props":719,"children":721},{"class":548,"line":720},3,[722,726,730,735,739],{"type":519,"tag":546,"props":723,"children":724},{"style":666},[725],{"type":524,"value":669},{"type":519,"tag":546,"props":727,"children":728},{"style":672},[729],{"type":524,"value":675},{"type":519,"tag":546,"props":731,"children":732},{"style":678},[733],{"type":524,"value":734},"MIN_VALUE",{"type":519,"tag":546,"props":736,"children":737},{"style":672},[738],{"type":524,"value":686},{"type":519,"tag":546,"props":740,"children":741},{"style":689},[742],{"type":524,"value":743}," // 5e-324\n",{"type":519,"tag":546,"props":745,"children":747},{"class":548,"line":746},4,[748,752,756,761,765],{"type":519,"tag":546,"props":749,"children":750},{"style":666},[751],{"type":524,"value":669},{"type":519,"tag":546,"props":753,"children":754},{"style":672},[755],{"type":524,"value":675},{"type":519,"tag":546,"props":757,"children":758},{"style":678},[759],{"type":524,"value":760},"MIN_SAFE_INTEGER",{"type":519,"tag":546,"props":762,"children":763},{"style":672},[764],{"type":524,"value":686},{"type":519,"tag":546,"props":766,"children":767},{"style":689},[768],{"type":524,"value":769}," // -9007199254740991\n",{"type":519,"tag":520,"props":771,"children":772},{},[773,775,781,783,789],{"type":524,"value":774},"如果想要对一个超大的整数 ",{"type":519,"tag":542,"props":776,"children":778},{"className":777},[],[779],{"type":524,"value":780},"> Number.MAX_SAFE_INTEGER",{"type":524,"value":782}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":519,"tag":542,"props":784,"children":786},{"className":785},[],[787],{"type":524,"value":788},"Number.MAX_SAFE_INTEGER",{"type":524,"value":790}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":519,"tag":520,"props":792,"children":793},{},[794],{"type":524,"value":795},"使用算法实现大数相加：",{"type":519,"tag":627,"props":797,"children":798},{},[799,804,809,814,819],{"type":519,"tag":631,"props":800,"children":801},{},[802],{"type":524,"value":803},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":519,"tag":631,"props":805,"children":806},{},[807],{"type":524,"value":808},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":519,"tag":631,"props":810,"children":811},{},[812],{"type":524,"value":813},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":519,"tag":631,"props":815,"children":816},{},[817],{"type":524,"value":818},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":519,"tag":631,"props":820,"children":821},{},[822],{"type":524,"value":823},"重复以上操作，直到计算出结果；",{"type":519,"tag":647,"props":825,"children":827},{"id":826},"实现",[828],{"type":524,"value":826},{"type":519,"tag":830,"props":831,"children":833},"h3",{"id":832},"大数相加",[834],{"type":524,"value":832},{"type":519,"tag":536,"props":836,"children":838},{"className":654,"code":837,"language":656,"meta":512,"style":512},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[839],{"type":519,"tag":542,"props":840,"children":841},{"__ignoreMap":512},[842,850,890,922,951,960,1016,1074,1123,1150,1177,1238,1302,1333,1363,1372,1432],{"type":519,"tag":546,"props":843,"children":844},{"class":548,"line":549},[845],{"type":519,"tag":546,"props":846,"children":847},{"style":689},[848],{"type":524,"value":849},"/**\n",{"type":519,"tag":546,"props":851,"children":852},{"class":548,"line":558},[853,858,863,869,874,880,885],{"type":519,"tag":546,"props":854,"children":855},{"style":689},[856],{"type":524,"value":857}," * ",{"type":519,"tag":546,"props":859,"children":860},{"style":672},[861],{"type":524,"value":862},"@",{"type":519,"tag":546,"props":864,"children":866},{"style":865},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[867],{"type":524,"value":868},"param",{"type":519,"tag":546,"props":870,"children":871},{"style":672},[872],{"type":524,"value":873}," {",{"type":519,"tag":546,"props":875,"children":877},{"style":876},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[878],{"type":524,"value":879},"string",{"type":519,"tag":546,"props":881,"children":882},{"style":672},[883],{"type":524,"value":884},"}",{"type":519,"tag":546,"props":886,"children":887},{"style":666},[888],{"type":524,"value":889}," num1\n",{"type":519,"tag":546,"props":891,"children":892},{"class":548,"line":720},[893,897,901,905,909,913,917],{"type":519,"tag":546,"props":894,"children":895},{"style":689},[896],{"type":524,"value":857},{"type":519,"tag":546,"props":898,"children":899},{"style":672},[900],{"type":524,"value":862},{"type":519,"tag":546,"props":902,"children":903},{"style":865},[904],{"type":524,"value":868},{"type":519,"tag":546,"props":906,"children":907},{"style":672},[908],{"type":524,"value":873},{"type":519,"tag":546,"props":910,"children":911},{"style":876},[912],{"type":524,"value":879},{"type":519,"tag":546,"props":914,"children":915},{"style":672},[916],{"type":524,"value":884},{"type":519,"tag":546,"props":918,"children":919},{"style":666},[920],{"type":524,"value":921}," num2\n",{"type":519,"tag":546,"props":923,"children":924},{"class":548,"line":746},[925,929,933,938,942,946],{"type":519,"tag":546,"props":926,"children":927},{"style":689},[928],{"type":524,"value":857},{"type":519,"tag":546,"props":930,"children":931},{"style":672},[932],{"type":524,"value":862},{"type":519,"tag":546,"props":934,"children":935},{"style":865},[936],{"type":524,"value":937},"return",{"type":519,"tag":546,"props":939,"children":940},{"style":672},[941],{"type":524,"value":873},{"type":519,"tag":546,"props":943,"children":944},{"style":876},[945],{"type":524,"value":879},{"type":519,"tag":546,"props":947,"children":948},{"style":672},[949],{"type":524,"value":950},"}\n",{"type":519,"tag":546,"props":952,"children":954},{"class":548,"line":953},5,[955],{"type":519,"tag":546,"props":956,"children":957},{"style":689},[958],{"type":524,"value":959}," */\n",{"type":519,"tag":546,"props":961,"children":963},{"class":548,"line":962},6,[964,970,976,981,986,991,996,1001,1006,1011],{"type":519,"tag":546,"props":965,"children":967},{"style":966},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[968],{"type":524,"value":969},"var",{"type":519,"tag":546,"props":971,"children":973},{"style":972},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[974],{"type":524,"value":975}," addStrings",{"type":519,"tag":546,"props":977,"children":978},{"style":672},[979],{"type":524,"value":980}," =",{"type":519,"tag":546,"props":982,"children":983},{"style":966},[984],{"type":524,"value":985}," function",{"type":519,"tag":546,"props":987,"children":988},{"style":672},[989],{"type":524,"value":990}," (",{"type":519,"tag":546,"props":992,"children":993},{"style":666},[994],{"type":524,"value":995},"num1",{"type":519,"tag":546,"props":997,"children":998},{"style":672},[999],{"type":524,"value":1000},",",{"type":519,"tag":546,"props":1002,"children":1003},{"style":666},[1004],{"type":524,"value":1005}," num2",{"type":519,"tag":546,"props":1007,"children":1008},{"style":672},[1009],{"type":524,"value":1010},")",{"type":519,"tag":546,"props":1012,"children":1013},{"style":672},[1014],{"type":524,"value":1015}," {\n",{"type":519,"tag":546,"props":1017,"children":1019},{"class":548,"line":1018},7,[1020,1025,1030,1034,1039,1043,1048,1053,1058,1063,1069],{"type":519,"tag":546,"props":1021,"children":1022},{"style":966},[1023],{"type":524,"value":1024},"  let",{"type":519,"tag":546,"props":1026,"children":1027},{"style":666},[1028],{"type":524,"value":1029}," n1",{"type":519,"tag":546,"props":1031,"children":1032},{"style":672},[1033],{"type":524,"value":980},{"type":519,"tag":546,"props":1035,"children":1036},{"style":666},[1037],{"type":524,"value":1038}," num1",{"type":519,"tag":546,"props":1040,"children":1041},{"style":672},[1042],{"type":524,"value":675},{"type":519,"tag":546,"props":1044,"children":1045},{"style":972},[1046],{"type":524,"value":1047},"toString",{"type":519,"tag":546,"props":1049,"children":1050},{"style":672},[1051],{"type":524,"value":1052},"().",{"type":519,"tag":546,"props":1054,"children":1055},{"style":972},[1056],{"type":524,"value":1057},"split",{"type":519,"tag":546,"props":1059,"children":1060},{"style":672},[1061],{"type":524,"value":1062},"(",{"type":519,"tag":546,"props":1064,"children":1066},{"style":1065},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1067],{"type":524,"value":1068},"\"\"",{"type":519,"tag":546,"props":1070,"children":1071},{"style":672},[1072],{"type":524,"value":1073},");\n",{"type":519,"tag":546,"props":1075,"children":1077},{"class":548,"line":1076},8,[1078,1082,1087,1091,1095,1099,1103,1107,1111,1115,1119],{"type":519,"tag":546,"props":1079,"children":1080},{"style":966},[1081],{"type":524,"value":1024},{"type":519,"tag":546,"props":1083,"children":1084},{"style":666},[1085],{"type":524,"value":1086}," n2",{"type":519,"tag":546,"props":1088,"children":1089},{"style":672},[1090],{"type":524,"value":980},{"type":519,"tag":546,"props":1092,"children":1093},{"style":666},[1094],{"type":524,"value":1005},{"type":519,"tag":546,"props":1096,"children":1097},{"style":672},[1098],{"type":524,"value":675},{"type":519,"tag":546,"props":1100,"children":1101},{"style":972},[1102],{"type":524,"value":1047},{"type":519,"tag":546,"props":1104,"children":1105},{"style":672},[1106],{"type":524,"value":1052},{"type":519,"tag":546,"props":1108,"children":1109},{"style":972},[1110],{"type":524,"value":1057},{"type":519,"tag":546,"props":1112,"children":1113},{"style":672},[1114],{"type":524,"value":1062},{"type":519,"tag":546,"props":1116,"children":1117},{"style":1065},[1118],{"type":524,"value":1068},{"type":519,"tag":546,"props":1120,"children":1121},{"style":672},[1122],{"type":524,"value":1073},{"type":519,"tag":546,"props":1124,"children":1126},{"class":548,"line":1125},9,[1127,1131,1136,1140,1145],{"type":519,"tag":546,"props":1128,"children":1129},{"style":966},[1130],{"type":524,"value":1024},{"type":519,"tag":546,"props":1132,"children":1133},{"style":666},[1134],{"type":524,"value":1135}," res",{"type":519,"tag":546,"props":1137,"children":1138},{"style":672},[1139],{"type":524,"value":980},{"type":519,"tag":546,"props":1141,"children":1142},{"style":1065},[1143],{"type":524,"value":1144}," \"\"",{"type":519,"tag":546,"props":1146,"children":1147},{"style":672},[1148],{"type":524,"value":1149},";\n",{"type":519,"tag":546,"props":1151,"children":1153},{"class":548,"line":1152},10,[1154,1158,1163,1167,1173],{"type":519,"tag":546,"props":1155,"children":1156},{"style":966},[1157],{"type":524,"value":1024},{"type":519,"tag":546,"props":1159,"children":1160},{"style":666},[1161],{"type":524,"value":1162}," temp",{"type":519,"tag":546,"props":1164,"children":1165},{"style":672},[1166],{"type":524,"value":980},{"type":519,"tag":546,"props":1168,"children":1170},{"style":1169},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1171],{"type":524,"value":1172}," 0",{"type":519,"tag":546,"props":1174,"children":1175},{"style":672},[1176],{"type":524,"value":1149},{"type":519,"tag":546,"props":1178,"children":1180},{"class":548,"line":1179},11,[1181,1186,1190,1195,1199,1205,1210,1214,1218,1222,1226,1230,1234],{"type":519,"tag":546,"props":1182,"children":1183},{"style":865},[1184],{"type":524,"value":1185},"  while",{"type":519,"tag":546,"props":1187,"children":1188},{"style":672},[1189],{"type":524,"value":990},{"type":519,"tag":546,"props":1191,"children":1192},{"style":666},[1193],{"type":524,"value":1194},"n1",{"type":519,"tag":546,"props":1196,"children":1197},{"style":672},[1198],{"type":524,"value":675},{"type":519,"tag":546,"props":1200,"children":1202},{"style":1201},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1203],{"type":524,"value":1204},"length",{"type":519,"tag":546,"props":1206,"children":1207},{"style":966},[1208],{"type":524,"value":1209}," ||",{"type":519,"tag":546,"props":1211,"children":1212},{"style":666},[1213],{"type":524,"value":1086},{"type":519,"tag":546,"props":1215,"children":1216},{"style":672},[1217],{"type":524,"value":675},{"type":519,"tag":546,"props":1219,"children":1220},{"style":1201},[1221],{"type":524,"value":1204},{"type":519,"tag":546,"props":1223,"children":1224},{"style":966},[1225],{"type":524,"value":1209},{"type":519,"tag":546,"props":1227,"children":1228},{"style":666},[1229],{"type":524,"value":1162},{"type":519,"tag":546,"props":1231,"children":1232},{"style":672},[1233],{"type":524,"value":1010},{"type":519,"tag":546,"props":1235,"children":1236},{"style":672},[1237],{"type":524,"value":1015},{"type":519,"tag":546,"props":1239,"children":1241},{"class":548,"line":1240},12,[1242,1247,1252,1257,1261,1265,1270,1275,1280,1284,1289,1293,1297],{"type":519,"tag":546,"props":1243,"children":1244},{"style":666},[1245],{"type":524,"value":1246},"    temp",{"type":519,"tag":546,"props":1248,"children":1249},{"style":966},[1250],{"type":524,"value":1251}," +=",{"type":519,"tag":546,"props":1253,"children":1254},{"style":966},[1255],{"type":524,"value":1256}," ~~",{"type":519,"tag":546,"props":1258,"children":1259},{"style":666},[1260],{"type":524,"value":1194},{"type":519,"tag":546,"props":1262,"children":1263},{"style":672},[1264],{"type":524,"value":675},{"type":519,"tag":546,"props":1266,"children":1267},{"style":972},[1268],{"type":524,"value":1269},"pop",{"type":519,"tag":546,"props":1271,"children":1272},{"style":672},[1273],{"type":524,"value":1274},"()",{"type":519,"tag":546,"props":1276,"children":1277},{"style":966},[1278],{"type":524,"value":1279}," +",{"type":519,"tag":546,"props":1281,"children":1282},{"style":966},[1283],{"type":524,"value":1256},{"type":519,"tag":546,"props":1285,"children":1286},{"style":666},[1287],{"type":524,"value":1288},"n2",{"type":519,"tag":546,"props":1290,"children":1291},{"style":672},[1292],{"type":524,"value":675},{"type":519,"tag":546,"props":1294,"children":1295},{"style":972},[1296],{"type":524,"value":1269},{"type":519,"tag":546,"props":1298,"children":1299},{"style":672},[1300],{"type":524,"value":1301},"();\n",{"type":519,"tag":546,"props":1303,"children":1305},{"class":548,"line":1304},13,[1306,1311,1315,1319,1324,1329],{"type":519,"tag":546,"props":1307,"children":1308},{"style":666},[1309],{"type":524,"value":1310},"    res",{"type":519,"tag":546,"props":1312,"children":1313},{"style":966},[1314],{"type":524,"value":1251},{"type":519,"tag":546,"props":1316,"children":1317},{"style":666},[1318],{"type":524,"value":1162},{"type":519,"tag":546,"props":1320,"children":1321},{"style":966},[1322],{"type":524,"value":1323}," %",{"type":519,"tag":546,"props":1325,"children":1326},{"style":1169},[1327],{"type":524,"value":1328}," 10",{"type":519,"tag":546,"props":1330,"children":1331},{"style":672},[1332],{"type":524,"value":1149},{"type":519,"tag":546,"props":1334,"children":1336},{"class":548,"line":1335},14,[1337,1341,1345,1349,1354,1359],{"type":519,"tag":546,"props":1338,"children":1339},{"style":666},[1340],{"type":524,"value":1246},{"type":519,"tag":546,"props":1342,"children":1343},{"style":672},[1344],{"type":524,"value":980},{"type":519,"tag":546,"props":1346,"children":1347},{"style":666},[1348],{"type":524,"value":1162},{"type":519,"tag":546,"props":1350,"children":1351},{"style":672},[1352],{"type":524,"value":1353}," >",{"type":519,"tag":546,"props":1355,"children":1356},{"style":1169},[1357],{"type":524,"value":1358}," 9",{"type":519,"tag":546,"props":1360,"children":1361},{"style":672},[1362],{"type":524,"value":1149},{"type":519,"tag":546,"props":1364,"children":1366},{"class":548,"line":1365},15,[1367],{"type":519,"tag":546,"props":1368,"children":1369},{"style":672},[1370],{"type":524,"value":1371},"  }\n",{"type":519,"tag":546,"props":1373,"children":1375},{"class":548,"line":1374},16,[1376,1381,1385,1389,1393,1397,1401,1406,1411,1415,1420,1424,1428],{"type":519,"tag":546,"props":1377,"children":1378},{"style":865},[1379],{"type":524,"value":1380},"  return",{"type":519,"tag":546,"props":1382,"children":1383},{"style":666},[1384],{"type":524,"value":1135},{"type":519,"tag":546,"props":1386,"children":1387},{"style":672},[1388],{"type":524,"value":675},{"type":519,"tag":546,"props":1390,"children":1391},{"style":972},[1392],{"type":524,"value":1057},{"type":519,"tag":546,"props":1394,"children":1395},{"style":672},[1396],{"type":524,"value":1062},{"type":519,"tag":546,"props":1398,"children":1399},{"style":1065},[1400],{"type":524,"value":1068},{"type":519,"tag":546,"props":1402,"children":1403},{"style":672},[1404],{"type":524,"value":1405},").",{"type":519,"tag":546,"props":1407,"children":1408},{"style":972},[1409],{"type":524,"value":1410},"reverse",{"type":519,"tag":546,"props":1412,"children":1413},{"style":672},[1414],{"type":524,"value":1052},{"type":519,"tag":546,"props":1416,"children":1417},{"style":972},[1418],{"type":524,"value":1419},"join",{"type":519,"tag":546,"props":1421,"children":1422},{"style":672},[1423],{"type":524,"value":1062},{"type":519,"tag":546,"props":1425,"children":1426},{"style":1065},[1427],{"type":524,"value":1068},{"type":519,"tag":546,"props":1429,"children":1430},{"style":672},[1431],{"type":524,"value":1073},{"type":519,"tag":546,"props":1433,"children":1435},{"class":548,"line":1434},17,[1436],{"type":519,"tag":546,"props":1437,"children":1438},{"style":672},[1439],{"type":524,"value":1440},"};\n",{"type":519,"tag":1442,"props":1443,"children":1444},"style",{},[1445],{"type":524,"value":1446},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":953,"depth":953,"links":1448},[1449,1450],{"id":649,"depth":558,"text":649},{"id":826,"depth":558,"text":826,"children":1451},[1452],{"id":832,"depth":720,"text":832},"markdown","content:1.algorithm:3.leetcode:3.major:415.add-strings.md","content","1.algorithm/3.leetcode/3.major/415.add-strings.md","md",[1459,1461],{"_path":231,"title":230,"description":1460},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":237,"title":236,"description":1462},"给你一个字符数组 chars ，请使用下述算法压缩：",1714059006632]