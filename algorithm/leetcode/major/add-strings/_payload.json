[{"data":1,"prerenderedAt":1506},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-strings":552,"/algorithm/leetcode/major/add-strings-surround":1501},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":237,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":236,"description":556,"url":557,"body":558,"_type":1496,"_id":1497,"_source":1498,"_file":1499,"_extension":1500},"major",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":559,"children":560,"toc":1490},"root",[561,568,573,578,608,613,636,641,664,669,689,695,813,834,839,867,872,878,1484],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"示例 1：",{"type":562,"tag":579,"props":580,"children":583},"pre",{"className":581,"code":582,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[584],{"type":562,"tag":585,"props":586,"children":587},"code",{"__ignoreMap":555},[588,599],{"type":562,"tag":589,"props":590,"children":593},"span",{"class":591,"line":592},"line",1,[594],{"type":562,"tag":589,"props":595,"children":596},{},[597],{"type":567,"value":598},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":562,"tag":589,"props":600,"children":602},{"class":591,"line":601},2,[603],{"type":562,"tag":589,"props":604,"children":605},{},[606],{"type":567,"value":607},"输出：\"134\"\n",{"type":562,"tag":563,"props":609,"children":610},{},[611],{"type":567,"value":612},"示例 2：",{"type":562,"tag":579,"props":614,"children":616},{"className":581,"code":615,"language":567,"meta":555,"style":555},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[617],{"type":562,"tag":585,"props":618,"children":619},{"__ignoreMap":555},[620,628],{"type":562,"tag":589,"props":621,"children":622},{"class":591,"line":592},[623],{"type":562,"tag":589,"props":624,"children":625},{},[626],{"type":567,"value":627},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":562,"tag":589,"props":629,"children":630},{"class":591,"line":601},[631],{"type":562,"tag":589,"props":632,"children":633},{},[634],{"type":567,"value":635},"输出：\"533\"\n",{"type":562,"tag":563,"props":637,"children":638},{},[639],{"type":567,"value":640},"示例 3：",{"type":562,"tag":579,"props":642,"children":644},{"className":581,"code":643,"language":567,"meta":555,"style":555},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[645],{"type":562,"tag":585,"props":646,"children":647},{"__ignoreMap":555},[648,656],{"type":562,"tag":589,"props":649,"children":650},{"class":591,"line":592},[651],{"type":562,"tag":589,"props":652,"children":653},{},[654],{"type":567,"value":655},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":562,"tag":589,"props":657,"children":658},{"class":591,"line":601},[659],{"type":562,"tag":589,"props":660,"children":661},{},[662],{"type":567,"value":663},"输出：\"0\"\n",{"type":562,"tag":563,"props":665,"children":666},{},[667],{"type":567,"value":668},"提示：",{"type":562,"tag":670,"props":671,"children":672},"ul",{},[673,679,684],{"type":562,"tag":674,"props":675,"children":676},"li",{},[677],{"type":567,"value":678},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":562,"tag":674,"props":680,"children":681},{},[682],{"type":567,"value":683},"num1 和 num2 都只包含数字 0-9",{"type":562,"tag":674,"props":685,"children":686},{},[687],{"type":567,"value":688},"num1 和 num2 都不包含任何前导零",{"type":562,"tag":690,"props":691,"children":693},"h2",{"id":692},"解题思路",[694],{"type":567,"value":692},{"type":562,"tag":579,"props":696,"children":700},{"className":697,"code":698,"language":699,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[701],{"type":562,"tag":585,"props":702,"children":703},{"__ignoreMap":555},[704,736,761,787],{"type":562,"tag":589,"props":705,"children":706},{"class":591,"line":592},[707,713,719,725,730],{"type":562,"tag":589,"props":708,"children":710},{"style":709},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[711],{"type":567,"value":712},"Number",{"type":562,"tag":589,"props":714,"children":716},{"style":715},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[717],{"type":567,"value":718},".",{"type":562,"tag":589,"props":720,"children":722},{"style":721},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[723],{"type":567,"value":724},"MAX_VALUE",{"type":562,"tag":589,"props":726,"children":727},{"style":715},[728],{"type":567,"value":729},";",{"type":562,"tag":589,"props":731,"children":733},{"style":732},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[734],{"type":567,"value":735}," // 1.7976931348623157e+308\n",{"type":562,"tag":589,"props":737,"children":738},{"class":591,"line":601},[739,743,747,752,756],{"type":562,"tag":589,"props":740,"children":741},{"style":709},[742],{"type":567,"value":712},{"type":562,"tag":589,"props":744,"children":745},{"style":715},[746],{"type":567,"value":718},{"type":562,"tag":589,"props":748,"children":749},{"style":721},[750],{"type":567,"value":751},"MAX_SAFE_INTEGER",{"type":562,"tag":589,"props":753,"children":754},{"style":715},[755],{"type":567,"value":729},{"type":562,"tag":589,"props":757,"children":758},{"style":732},[759],{"type":567,"value":760}," // 9007199254740991\n",{"type":562,"tag":589,"props":762,"children":764},{"class":591,"line":763},3,[765,769,773,778,782],{"type":562,"tag":589,"props":766,"children":767},{"style":709},[768],{"type":567,"value":712},{"type":562,"tag":589,"props":770,"children":771},{"style":715},[772],{"type":567,"value":718},{"type":562,"tag":589,"props":774,"children":775},{"style":721},[776],{"type":567,"value":777},"MIN_VALUE",{"type":562,"tag":589,"props":779,"children":780},{"style":715},[781],{"type":567,"value":729},{"type":562,"tag":589,"props":783,"children":784},{"style":732},[785],{"type":567,"value":786}," // 5e-324\n",{"type":562,"tag":589,"props":788,"children":790},{"class":591,"line":789},4,[791,795,799,804,808],{"type":562,"tag":589,"props":792,"children":793},{"style":709},[794],{"type":567,"value":712},{"type":562,"tag":589,"props":796,"children":797},{"style":715},[798],{"type":567,"value":718},{"type":562,"tag":589,"props":800,"children":801},{"style":721},[802],{"type":567,"value":803},"MIN_SAFE_INTEGER",{"type":562,"tag":589,"props":805,"children":806},{"style":715},[807],{"type":567,"value":729},{"type":562,"tag":589,"props":809,"children":810},{"style":732},[811],{"type":567,"value":812}," // -9007199254740991\n",{"type":562,"tag":563,"props":814,"children":815},{},[816,818,824,826,832],{"type":567,"value":817},"如果想要对一个超大的整数 ",{"type":562,"tag":585,"props":819,"children":821},{"className":820},[],[822],{"type":567,"value":823},"> Number.MAX_SAFE_INTEGER",{"type":567,"value":825}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":562,"tag":585,"props":827,"children":829},{"className":828},[],[830],{"type":567,"value":831},"Number.MAX_SAFE_INTEGER",{"type":567,"value":833}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":562,"tag":563,"props":835,"children":836},{},[837],{"type":567,"value":838},"使用算法实现大数相加：",{"type":562,"tag":670,"props":840,"children":841},{},[842,847,852,857,862],{"type":562,"tag":674,"props":843,"children":844},{},[845],{"type":567,"value":846},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":562,"tag":674,"props":848,"children":849},{},[850],{"type":567,"value":851},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":562,"tag":674,"props":853,"children":854},{},[855],{"type":567,"value":856},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":562,"tag":674,"props":858,"children":859},{},[860],{"type":567,"value":861},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":562,"tag":674,"props":863,"children":864},{},[865],{"type":567,"value":866},"重复以上操作，直到计算出结果；",{"type":562,"tag":690,"props":868,"children":870},{"id":869},"实现",[871],{"type":567,"value":869},{"type":562,"tag":873,"props":874,"children":876},"h3",{"id":875},"大数相加",[877],{"type":567,"value":875},{"type":562,"tag":579,"props":879,"children":881},{"className":697,"code":880,"language":699,"meta":555,"style":555},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[882],{"type":562,"tag":585,"props":883,"children":884},{"__ignoreMap":555},[885,893,933,965,994,1003,1059,1117,1166,1193,1220,1281,1345,1376,1406,1415,1475],{"type":562,"tag":589,"props":886,"children":887},{"class":591,"line":592},[888],{"type":562,"tag":589,"props":889,"children":890},{"style":732},[891],{"type":567,"value":892},"/**\n",{"type":562,"tag":589,"props":894,"children":895},{"class":591,"line":601},[896,901,906,912,917,923,928],{"type":562,"tag":589,"props":897,"children":898},{"style":732},[899],{"type":567,"value":900}," * ",{"type":562,"tag":589,"props":902,"children":903},{"style":715},[904],{"type":567,"value":905},"@",{"type":562,"tag":589,"props":907,"children":909},{"style":908},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[910],{"type":567,"value":911},"param",{"type":562,"tag":589,"props":913,"children":914},{"style":715},[915],{"type":567,"value":916}," {",{"type":562,"tag":589,"props":918,"children":920},{"style":919},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[921],{"type":567,"value":922},"string",{"type":562,"tag":589,"props":924,"children":925},{"style":715},[926],{"type":567,"value":927},"}",{"type":562,"tag":589,"props":929,"children":930},{"style":709},[931],{"type":567,"value":932}," num1\n",{"type":562,"tag":589,"props":934,"children":935},{"class":591,"line":763},[936,940,944,948,952,956,960],{"type":562,"tag":589,"props":937,"children":938},{"style":732},[939],{"type":567,"value":900},{"type":562,"tag":589,"props":941,"children":942},{"style":715},[943],{"type":567,"value":905},{"type":562,"tag":589,"props":945,"children":946},{"style":908},[947],{"type":567,"value":911},{"type":562,"tag":589,"props":949,"children":950},{"style":715},[951],{"type":567,"value":916},{"type":562,"tag":589,"props":953,"children":954},{"style":919},[955],{"type":567,"value":922},{"type":562,"tag":589,"props":957,"children":958},{"style":715},[959],{"type":567,"value":927},{"type":562,"tag":589,"props":961,"children":962},{"style":709},[963],{"type":567,"value":964}," num2\n",{"type":562,"tag":589,"props":966,"children":967},{"class":591,"line":789},[968,972,976,981,985,989],{"type":562,"tag":589,"props":969,"children":970},{"style":732},[971],{"type":567,"value":900},{"type":562,"tag":589,"props":973,"children":974},{"style":715},[975],{"type":567,"value":905},{"type":562,"tag":589,"props":977,"children":978},{"style":908},[979],{"type":567,"value":980},"return",{"type":562,"tag":589,"props":982,"children":983},{"style":715},[984],{"type":567,"value":916},{"type":562,"tag":589,"props":986,"children":987},{"style":919},[988],{"type":567,"value":922},{"type":562,"tag":589,"props":990,"children":991},{"style":715},[992],{"type":567,"value":993},"}\n",{"type":562,"tag":589,"props":995,"children":997},{"class":591,"line":996},5,[998],{"type":562,"tag":589,"props":999,"children":1000},{"style":732},[1001],{"type":567,"value":1002}," */\n",{"type":562,"tag":589,"props":1004,"children":1006},{"class":591,"line":1005},6,[1007,1013,1019,1024,1029,1034,1039,1044,1049,1054],{"type":562,"tag":589,"props":1008,"children":1010},{"style":1009},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[1011],{"type":567,"value":1012},"var",{"type":562,"tag":589,"props":1014,"children":1016},{"style":1015},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[1017],{"type":567,"value":1018}," addStrings",{"type":562,"tag":589,"props":1020,"children":1021},{"style":715},[1022],{"type":567,"value":1023}," =",{"type":562,"tag":589,"props":1025,"children":1026},{"style":1009},[1027],{"type":567,"value":1028}," function",{"type":562,"tag":589,"props":1030,"children":1031},{"style":715},[1032],{"type":567,"value":1033}," (",{"type":562,"tag":589,"props":1035,"children":1036},{"style":709},[1037],{"type":567,"value":1038},"num1",{"type":562,"tag":589,"props":1040,"children":1041},{"style":715},[1042],{"type":567,"value":1043},",",{"type":562,"tag":589,"props":1045,"children":1046},{"style":709},[1047],{"type":567,"value":1048}," num2",{"type":562,"tag":589,"props":1050,"children":1051},{"style":715},[1052],{"type":567,"value":1053},")",{"type":562,"tag":589,"props":1055,"children":1056},{"style":715},[1057],{"type":567,"value":1058}," {\n",{"type":562,"tag":589,"props":1060,"children":1062},{"class":591,"line":1061},7,[1063,1068,1073,1077,1082,1086,1091,1096,1101,1106,1112],{"type":562,"tag":589,"props":1064,"children":1065},{"style":1009},[1066],{"type":567,"value":1067},"  let",{"type":562,"tag":589,"props":1069,"children":1070},{"style":709},[1071],{"type":567,"value":1072}," n1",{"type":562,"tag":589,"props":1074,"children":1075},{"style":715},[1076],{"type":567,"value":1023},{"type":562,"tag":589,"props":1078,"children":1079},{"style":709},[1080],{"type":567,"value":1081}," num1",{"type":562,"tag":589,"props":1083,"children":1084},{"style":715},[1085],{"type":567,"value":718},{"type":562,"tag":589,"props":1087,"children":1088},{"style":1015},[1089],{"type":567,"value":1090},"toString",{"type":562,"tag":589,"props":1092,"children":1093},{"style":715},[1094],{"type":567,"value":1095},"().",{"type":562,"tag":589,"props":1097,"children":1098},{"style":1015},[1099],{"type":567,"value":1100},"split",{"type":562,"tag":589,"props":1102,"children":1103},{"style":715},[1104],{"type":567,"value":1105},"(",{"type":562,"tag":589,"props":1107,"children":1109},{"style":1108},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1110],{"type":567,"value":1111},"\"\"",{"type":562,"tag":589,"props":1113,"children":1114},{"style":715},[1115],{"type":567,"value":1116},");\n",{"type":562,"tag":589,"props":1118,"children":1120},{"class":591,"line":1119},8,[1121,1125,1130,1134,1138,1142,1146,1150,1154,1158,1162],{"type":562,"tag":589,"props":1122,"children":1123},{"style":1009},[1124],{"type":567,"value":1067},{"type":562,"tag":589,"props":1126,"children":1127},{"style":709},[1128],{"type":567,"value":1129}," n2",{"type":562,"tag":589,"props":1131,"children":1132},{"style":715},[1133],{"type":567,"value":1023},{"type":562,"tag":589,"props":1135,"children":1136},{"style":709},[1137],{"type":567,"value":1048},{"type":562,"tag":589,"props":1139,"children":1140},{"style":715},[1141],{"type":567,"value":718},{"type":562,"tag":589,"props":1143,"children":1144},{"style":1015},[1145],{"type":567,"value":1090},{"type":562,"tag":589,"props":1147,"children":1148},{"style":715},[1149],{"type":567,"value":1095},{"type":562,"tag":589,"props":1151,"children":1152},{"style":1015},[1153],{"type":567,"value":1100},{"type":562,"tag":589,"props":1155,"children":1156},{"style":715},[1157],{"type":567,"value":1105},{"type":562,"tag":589,"props":1159,"children":1160},{"style":1108},[1161],{"type":567,"value":1111},{"type":562,"tag":589,"props":1163,"children":1164},{"style":715},[1165],{"type":567,"value":1116},{"type":562,"tag":589,"props":1167,"children":1169},{"class":591,"line":1168},9,[1170,1174,1179,1183,1188],{"type":562,"tag":589,"props":1171,"children":1172},{"style":1009},[1173],{"type":567,"value":1067},{"type":562,"tag":589,"props":1175,"children":1176},{"style":709},[1177],{"type":567,"value":1178}," res",{"type":562,"tag":589,"props":1180,"children":1181},{"style":715},[1182],{"type":567,"value":1023},{"type":562,"tag":589,"props":1184,"children":1185},{"style":1108},[1186],{"type":567,"value":1187}," \"\"",{"type":562,"tag":589,"props":1189,"children":1190},{"style":715},[1191],{"type":567,"value":1192},";\n",{"type":562,"tag":589,"props":1194,"children":1196},{"class":591,"line":1195},10,[1197,1201,1206,1210,1216],{"type":562,"tag":589,"props":1198,"children":1199},{"style":1009},[1200],{"type":567,"value":1067},{"type":562,"tag":589,"props":1202,"children":1203},{"style":709},[1204],{"type":567,"value":1205}," temp",{"type":562,"tag":589,"props":1207,"children":1208},{"style":715},[1209],{"type":567,"value":1023},{"type":562,"tag":589,"props":1211,"children":1213},{"style":1212},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1214],{"type":567,"value":1215}," 0",{"type":562,"tag":589,"props":1217,"children":1218},{"style":715},[1219],{"type":567,"value":1192},{"type":562,"tag":589,"props":1221,"children":1223},{"class":591,"line":1222},11,[1224,1229,1233,1238,1242,1248,1253,1257,1261,1265,1269,1273,1277],{"type":562,"tag":589,"props":1225,"children":1226},{"style":908},[1227],{"type":567,"value":1228},"  while",{"type":562,"tag":589,"props":1230,"children":1231},{"style":715},[1232],{"type":567,"value":1033},{"type":562,"tag":589,"props":1234,"children":1235},{"style":709},[1236],{"type":567,"value":1237},"n1",{"type":562,"tag":589,"props":1239,"children":1240},{"style":715},[1241],{"type":567,"value":718},{"type":562,"tag":589,"props":1243,"children":1245},{"style":1244},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1246],{"type":567,"value":1247},"length",{"type":562,"tag":589,"props":1249,"children":1250},{"style":1009},[1251],{"type":567,"value":1252}," ||",{"type":562,"tag":589,"props":1254,"children":1255},{"style":709},[1256],{"type":567,"value":1129},{"type":562,"tag":589,"props":1258,"children":1259},{"style":715},[1260],{"type":567,"value":718},{"type":562,"tag":589,"props":1262,"children":1263},{"style":1244},[1264],{"type":567,"value":1247},{"type":562,"tag":589,"props":1266,"children":1267},{"style":1009},[1268],{"type":567,"value":1252},{"type":562,"tag":589,"props":1270,"children":1271},{"style":709},[1272],{"type":567,"value":1205},{"type":562,"tag":589,"props":1274,"children":1275},{"style":715},[1276],{"type":567,"value":1053},{"type":562,"tag":589,"props":1278,"children":1279},{"style":715},[1280],{"type":567,"value":1058},{"type":562,"tag":589,"props":1282,"children":1284},{"class":591,"line":1283},12,[1285,1290,1295,1300,1304,1308,1313,1318,1323,1327,1332,1336,1340],{"type":562,"tag":589,"props":1286,"children":1287},{"style":709},[1288],{"type":567,"value":1289},"    temp",{"type":562,"tag":589,"props":1291,"children":1292},{"style":1009},[1293],{"type":567,"value":1294}," +=",{"type":562,"tag":589,"props":1296,"children":1297},{"style":1009},[1298],{"type":567,"value":1299}," ~~",{"type":562,"tag":589,"props":1301,"children":1302},{"style":709},[1303],{"type":567,"value":1237},{"type":562,"tag":589,"props":1305,"children":1306},{"style":715},[1307],{"type":567,"value":718},{"type":562,"tag":589,"props":1309,"children":1310},{"style":1015},[1311],{"type":567,"value":1312},"pop",{"type":562,"tag":589,"props":1314,"children":1315},{"style":715},[1316],{"type":567,"value":1317},"()",{"type":562,"tag":589,"props":1319,"children":1320},{"style":1009},[1321],{"type":567,"value":1322}," +",{"type":562,"tag":589,"props":1324,"children":1325},{"style":1009},[1326],{"type":567,"value":1299},{"type":562,"tag":589,"props":1328,"children":1329},{"style":709},[1330],{"type":567,"value":1331},"n2",{"type":562,"tag":589,"props":1333,"children":1334},{"style":715},[1335],{"type":567,"value":718},{"type":562,"tag":589,"props":1337,"children":1338},{"style":1015},[1339],{"type":567,"value":1312},{"type":562,"tag":589,"props":1341,"children":1342},{"style":715},[1343],{"type":567,"value":1344},"();\n",{"type":562,"tag":589,"props":1346,"children":1348},{"class":591,"line":1347},13,[1349,1354,1358,1362,1367,1372],{"type":562,"tag":589,"props":1350,"children":1351},{"style":709},[1352],{"type":567,"value":1353},"    res",{"type":562,"tag":589,"props":1355,"children":1356},{"style":1009},[1357],{"type":567,"value":1294},{"type":562,"tag":589,"props":1359,"children":1360},{"style":709},[1361],{"type":567,"value":1205},{"type":562,"tag":589,"props":1363,"children":1364},{"style":1009},[1365],{"type":567,"value":1366}," %",{"type":562,"tag":589,"props":1368,"children":1369},{"style":1212},[1370],{"type":567,"value":1371}," 10",{"type":562,"tag":589,"props":1373,"children":1374},{"style":715},[1375],{"type":567,"value":1192},{"type":562,"tag":589,"props":1377,"children":1379},{"class":591,"line":1378},14,[1380,1384,1388,1392,1397,1402],{"type":562,"tag":589,"props":1381,"children":1382},{"style":709},[1383],{"type":567,"value":1289},{"type":562,"tag":589,"props":1385,"children":1386},{"style":715},[1387],{"type":567,"value":1023},{"type":562,"tag":589,"props":1389,"children":1390},{"style":709},[1391],{"type":567,"value":1205},{"type":562,"tag":589,"props":1393,"children":1394},{"style":715},[1395],{"type":567,"value":1396}," >",{"type":562,"tag":589,"props":1398,"children":1399},{"style":1212},[1400],{"type":567,"value":1401}," 9",{"type":562,"tag":589,"props":1403,"children":1404},{"style":715},[1405],{"type":567,"value":1192},{"type":562,"tag":589,"props":1407,"children":1409},{"class":591,"line":1408},15,[1410],{"type":562,"tag":589,"props":1411,"children":1412},{"style":715},[1413],{"type":567,"value":1414},"  }\n",{"type":562,"tag":589,"props":1416,"children":1418},{"class":591,"line":1417},16,[1419,1424,1428,1432,1436,1440,1444,1449,1454,1458,1463,1467,1471],{"type":562,"tag":589,"props":1420,"children":1421},{"style":908},[1422],{"type":567,"value":1423},"  return",{"type":562,"tag":589,"props":1425,"children":1426},{"style":709},[1427],{"type":567,"value":1178},{"type":562,"tag":589,"props":1429,"children":1430},{"style":715},[1431],{"type":567,"value":718},{"type":562,"tag":589,"props":1433,"children":1434},{"style":1015},[1435],{"type":567,"value":1100},{"type":562,"tag":589,"props":1437,"children":1438},{"style":715},[1439],{"type":567,"value":1105},{"type":562,"tag":589,"props":1441,"children":1442},{"style":1108},[1443],{"type":567,"value":1111},{"type":562,"tag":589,"props":1445,"children":1446},{"style":715},[1447],{"type":567,"value":1448},").",{"type":562,"tag":589,"props":1450,"children":1451},{"style":1015},[1452],{"type":567,"value":1453},"reverse",{"type":562,"tag":589,"props":1455,"children":1456},{"style":715},[1457],{"type":567,"value":1095},{"type":562,"tag":589,"props":1459,"children":1460},{"style":1015},[1461],{"type":567,"value":1462},"join",{"type":562,"tag":589,"props":1464,"children":1465},{"style":715},[1466],{"type":567,"value":1105},{"type":562,"tag":589,"props":1468,"children":1469},{"style":1108},[1470],{"type":567,"value":1111},{"type":562,"tag":589,"props":1472,"children":1473},{"style":715},[1474],{"type":567,"value":1116},{"type":562,"tag":589,"props":1476,"children":1478},{"class":591,"line":1477},17,[1479],{"type":562,"tag":589,"props":1480,"children":1481},{"style":715},[1482],{"type":567,"value":1483},"};\n",{"type":562,"tag":1485,"props":1486,"children":1487},"style",{},[1488],{"type":567,"value":1489},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":996,"depth":996,"links":1491},[1492,1493],{"id":692,"depth":601,"text":692},{"id":869,"depth":601,"text":869,"children":1494},[1495],{"id":875,"depth":763,"text":875},"markdown","content:1.algorithm:3.leetcode:3.major:415.add-strings.md","content","1.algorithm/3.leetcode/3.major/415.add-strings.md","md",[1502,1504],{"_path":234,"title":233,"description":1503},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":240,"title":239,"description":1505},"给你一个字符数组 chars ，请使用下述算法压缩：",1715137601269]