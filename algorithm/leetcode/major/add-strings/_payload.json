[{"data":1,"prerenderedAt":1454},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-strings":500,"/algorithm/leetcode/major/add-strings-surround":1449},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":234,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":233,"description":504,"url":505,"body":506,"_type":1444,"_id":1445,"_source":1446,"_file":1447,"_extension":1448},"major",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":507,"children":508,"toc":1438},"root",[509,516,521,526,556,561,584,589,612,617,637,643,761,782,787,815,820,826,1432],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":515,"value":525},"示例 1：",{"type":510,"tag":527,"props":528,"children":531},"pre",{"className":529,"code":530,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[532],{"type":510,"tag":533,"props":534,"children":535},"code",{"__ignoreMap":503},[536,547],{"type":510,"tag":537,"props":538,"children":541},"span",{"class":539,"line":540},"line",1,[542],{"type":510,"tag":537,"props":543,"children":544},{},[545],{"type":515,"value":546},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":510,"tag":537,"props":548,"children":550},{"class":539,"line":549},2,[551],{"type":510,"tag":537,"props":552,"children":553},{},[554],{"type":515,"value":555},"输出：\"134\"\n",{"type":510,"tag":511,"props":557,"children":558},{},[559],{"type":515,"value":560},"示例 2：",{"type":510,"tag":527,"props":562,"children":564},{"className":529,"code":563,"language":515,"meta":503,"style":503},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[565],{"type":510,"tag":533,"props":566,"children":567},{"__ignoreMap":503},[568,576],{"type":510,"tag":537,"props":569,"children":570},{"class":539,"line":540},[571],{"type":510,"tag":537,"props":572,"children":573},{},[574],{"type":515,"value":575},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":510,"tag":537,"props":577,"children":578},{"class":539,"line":549},[579],{"type":510,"tag":537,"props":580,"children":581},{},[582],{"type":515,"value":583},"输出：\"533\"\n",{"type":510,"tag":511,"props":585,"children":586},{},[587],{"type":515,"value":588},"示例 3：",{"type":510,"tag":527,"props":590,"children":592},{"className":529,"code":591,"language":515,"meta":503,"style":503},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[593],{"type":510,"tag":533,"props":594,"children":595},{"__ignoreMap":503},[596,604],{"type":510,"tag":537,"props":597,"children":598},{"class":539,"line":540},[599],{"type":510,"tag":537,"props":600,"children":601},{},[602],{"type":515,"value":603},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":510,"tag":537,"props":605,"children":606},{"class":539,"line":549},[607],{"type":510,"tag":537,"props":608,"children":609},{},[610],{"type":515,"value":611},"输出：\"0\"\n",{"type":510,"tag":511,"props":613,"children":614},{},[615],{"type":515,"value":616},"提示：",{"type":510,"tag":618,"props":619,"children":620},"ul",{},[621,627,632],{"type":510,"tag":622,"props":623,"children":624},"li",{},[625],{"type":515,"value":626},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":510,"tag":622,"props":628,"children":629},{},[630],{"type":515,"value":631},"num1 和 num2 都只包含数字 0-9",{"type":510,"tag":622,"props":633,"children":634},{},[635],{"type":515,"value":636},"num1 和 num2 都不包含任何前导零",{"type":510,"tag":638,"props":639,"children":641},"h2",{"id":640},"解题思路",[642],{"type":515,"value":640},{"type":510,"tag":527,"props":644,"children":648},{"className":645,"code":646,"language":647,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[649],{"type":510,"tag":533,"props":650,"children":651},{"__ignoreMap":503},[652,684,709,735],{"type":510,"tag":537,"props":653,"children":654},{"class":539,"line":540},[655,661,667,673,678],{"type":510,"tag":537,"props":656,"children":658},{"style":657},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[659],{"type":515,"value":660},"Number",{"type":510,"tag":537,"props":662,"children":664},{"style":663},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[665],{"type":515,"value":666},".",{"type":510,"tag":537,"props":668,"children":670},{"style":669},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[671],{"type":515,"value":672},"MAX_VALUE",{"type":510,"tag":537,"props":674,"children":675},{"style":663},[676],{"type":515,"value":677},";",{"type":510,"tag":537,"props":679,"children":681},{"style":680},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[682],{"type":515,"value":683}," // 1.7976931348623157e+308\n",{"type":510,"tag":537,"props":685,"children":686},{"class":539,"line":549},[687,691,695,700,704],{"type":510,"tag":537,"props":688,"children":689},{"style":657},[690],{"type":515,"value":660},{"type":510,"tag":537,"props":692,"children":693},{"style":663},[694],{"type":515,"value":666},{"type":510,"tag":537,"props":696,"children":697},{"style":669},[698],{"type":515,"value":699},"MAX_SAFE_INTEGER",{"type":510,"tag":537,"props":701,"children":702},{"style":663},[703],{"type":515,"value":677},{"type":510,"tag":537,"props":705,"children":706},{"style":680},[707],{"type":515,"value":708}," // 9007199254740991\n",{"type":510,"tag":537,"props":710,"children":712},{"class":539,"line":711},3,[713,717,721,726,730],{"type":510,"tag":537,"props":714,"children":715},{"style":657},[716],{"type":515,"value":660},{"type":510,"tag":537,"props":718,"children":719},{"style":663},[720],{"type":515,"value":666},{"type":510,"tag":537,"props":722,"children":723},{"style":669},[724],{"type":515,"value":725},"MIN_VALUE",{"type":510,"tag":537,"props":727,"children":728},{"style":663},[729],{"type":515,"value":677},{"type":510,"tag":537,"props":731,"children":732},{"style":680},[733],{"type":515,"value":734}," // 5e-324\n",{"type":510,"tag":537,"props":736,"children":738},{"class":539,"line":737},4,[739,743,747,752,756],{"type":510,"tag":537,"props":740,"children":741},{"style":657},[742],{"type":515,"value":660},{"type":510,"tag":537,"props":744,"children":745},{"style":663},[746],{"type":515,"value":666},{"type":510,"tag":537,"props":748,"children":749},{"style":669},[750],{"type":515,"value":751},"MIN_SAFE_INTEGER",{"type":510,"tag":537,"props":753,"children":754},{"style":663},[755],{"type":515,"value":677},{"type":510,"tag":537,"props":757,"children":758},{"style":680},[759],{"type":515,"value":760}," // -9007199254740991\n",{"type":510,"tag":511,"props":762,"children":763},{},[764,766,772,774,780],{"type":515,"value":765},"如果想要对一个超大的整数 ",{"type":510,"tag":533,"props":767,"children":769},{"className":768},[],[770],{"type":515,"value":771},"> Number.MAX_SAFE_INTEGER",{"type":515,"value":773}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":510,"tag":533,"props":775,"children":777},{"className":776},[],[778],{"type":515,"value":779},"Number.MAX_SAFE_INTEGER",{"type":515,"value":781}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":510,"tag":511,"props":783,"children":784},{},[785],{"type":515,"value":786},"使用算法实现大数相加：",{"type":510,"tag":618,"props":788,"children":789},{},[790,795,800,805,810],{"type":510,"tag":622,"props":791,"children":792},{},[793],{"type":515,"value":794},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":510,"tag":622,"props":796,"children":797},{},[798],{"type":515,"value":799},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":510,"tag":622,"props":801,"children":802},{},[803],{"type":515,"value":804},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":510,"tag":622,"props":806,"children":807},{},[808],{"type":515,"value":809},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":510,"tag":622,"props":811,"children":812},{},[813],{"type":515,"value":814},"重复以上操作，直到计算出结果；",{"type":510,"tag":638,"props":816,"children":818},{"id":817},"实现",[819],{"type":515,"value":817},{"type":510,"tag":821,"props":822,"children":824},"h3",{"id":823},"大数相加",[825],{"type":515,"value":823},{"type":510,"tag":527,"props":827,"children":829},{"className":645,"code":828,"language":647,"meta":503,"style":503},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[830],{"type":510,"tag":533,"props":831,"children":832},{"__ignoreMap":503},[833,841,881,913,942,951,1007,1065,1114,1141,1168,1229,1293,1324,1354,1363,1423],{"type":510,"tag":537,"props":834,"children":835},{"class":539,"line":540},[836],{"type":510,"tag":537,"props":837,"children":838},{"style":680},[839],{"type":515,"value":840},"/**\n",{"type":510,"tag":537,"props":842,"children":843},{"class":539,"line":549},[844,849,854,860,865,871,876],{"type":510,"tag":537,"props":845,"children":846},{"style":680},[847],{"type":515,"value":848}," * ",{"type":510,"tag":537,"props":850,"children":851},{"style":663},[852],{"type":515,"value":853},"@",{"type":510,"tag":537,"props":855,"children":857},{"style":856},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[858],{"type":515,"value":859},"param",{"type":510,"tag":537,"props":861,"children":862},{"style":663},[863],{"type":515,"value":864}," {",{"type":510,"tag":537,"props":866,"children":868},{"style":867},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[869],{"type":515,"value":870},"string",{"type":510,"tag":537,"props":872,"children":873},{"style":663},[874],{"type":515,"value":875},"}",{"type":510,"tag":537,"props":877,"children":878},{"style":657},[879],{"type":515,"value":880}," num1\n",{"type":510,"tag":537,"props":882,"children":883},{"class":539,"line":711},[884,888,892,896,900,904,908],{"type":510,"tag":537,"props":885,"children":886},{"style":680},[887],{"type":515,"value":848},{"type":510,"tag":537,"props":889,"children":890},{"style":663},[891],{"type":515,"value":853},{"type":510,"tag":537,"props":893,"children":894},{"style":856},[895],{"type":515,"value":859},{"type":510,"tag":537,"props":897,"children":898},{"style":663},[899],{"type":515,"value":864},{"type":510,"tag":537,"props":901,"children":902},{"style":867},[903],{"type":515,"value":870},{"type":510,"tag":537,"props":905,"children":906},{"style":663},[907],{"type":515,"value":875},{"type":510,"tag":537,"props":909,"children":910},{"style":657},[911],{"type":515,"value":912}," num2\n",{"type":510,"tag":537,"props":914,"children":915},{"class":539,"line":737},[916,920,924,929,933,937],{"type":510,"tag":537,"props":917,"children":918},{"style":680},[919],{"type":515,"value":848},{"type":510,"tag":537,"props":921,"children":922},{"style":663},[923],{"type":515,"value":853},{"type":510,"tag":537,"props":925,"children":926},{"style":856},[927],{"type":515,"value":928},"return",{"type":510,"tag":537,"props":930,"children":931},{"style":663},[932],{"type":515,"value":864},{"type":510,"tag":537,"props":934,"children":935},{"style":867},[936],{"type":515,"value":870},{"type":510,"tag":537,"props":938,"children":939},{"style":663},[940],{"type":515,"value":941},"}\n",{"type":510,"tag":537,"props":943,"children":945},{"class":539,"line":944},5,[946],{"type":510,"tag":537,"props":947,"children":948},{"style":680},[949],{"type":515,"value":950}," */\n",{"type":510,"tag":537,"props":952,"children":954},{"class":539,"line":953},6,[955,961,967,972,977,982,987,992,997,1002],{"type":510,"tag":537,"props":956,"children":958},{"style":957},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[959],{"type":515,"value":960},"var",{"type":510,"tag":537,"props":962,"children":964},{"style":963},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[965],{"type":515,"value":966}," addStrings",{"type":510,"tag":537,"props":968,"children":969},{"style":663},[970],{"type":515,"value":971}," =",{"type":510,"tag":537,"props":973,"children":974},{"style":957},[975],{"type":515,"value":976}," function",{"type":510,"tag":537,"props":978,"children":979},{"style":663},[980],{"type":515,"value":981}," (",{"type":510,"tag":537,"props":983,"children":984},{"style":657},[985],{"type":515,"value":986},"num1",{"type":510,"tag":537,"props":988,"children":989},{"style":663},[990],{"type":515,"value":991},",",{"type":510,"tag":537,"props":993,"children":994},{"style":657},[995],{"type":515,"value":996}," num2",{"type":510,"tag":537,"props":998,"children":999},{"style":663},[1000],{"type":515,"value":1001},")",{"type":510,"tag":537,"props":1003,"children":1004},{"style":663},[1005],{"type":515,"value":1006}," {\n",{"type":510,"tag":537,"props":1008,"children":1010},{"class":539,"line":1009},7,[1011,1016,1021,1025,1030,1034,1039,1044,1049,1054,1060],{"type":510,"tag":537,"props":1012,"children":1013},{"style":957},[1014],{"type":515,"value":1015},"  let",{"type":510,"tag":537,"props":1017,"children":1018},{"style":657},[1019],{"type":515,"value":1020}," n1",{"type":510,"tag":537,"props":1022,"children":1023},{"style":663},[1024],{"type":515,"value":971},{"type":510,"tag":537,"props":1026,"children":1027},{"style":657},[1028],{"type":515,"value":1029}," num1",{"type":510,"tag":537,"props":1031,"children":1032},{"style":663},[1033],{"type":515,"value":666},{"type":510,"tag":537,"props":1035,"children":1036},{"style":963},[1037],{"type":515,"value":1038},"toString",{"type":510,"tag":537,"props":1040,"children":1041},{"style":663},[1042],{"type":515,"value":1043},"().",{"type":510,"tag":537,"props":1045,"children":1046},{"style":963},[1047],{"type":515,"value":1048},"split",{"type":510,"tag":537,"props":1050,"children":1051},{"style":663},[1052],{"type":515,"value":1053},"(",{"type":510,"tag":537,"props":1055,"children":1057},{"style":1056},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1058],{"type":515,"value":1059},"\"\"",{"type":510,"tag":537,"props":1061,"children":1062},{"style":663},[1063],{"type":515,"value":1064},");\n",{"type":510,"tag":537,"props":1066,"children":1068},{"class":539,"line":1067},8,[1069,1073,1078,1082,1086,1090,1094,1098,1102,1106,1110],{"type":510,"tag":537,"props":1070,"children":1071},{"style":957},[1072],{"type":515,"value":1015},{"type":510,"tag":537,"props":1074,"children":1075},{"style":657},[1076],{"type":515,"value":1077}," n2",{"type":510,"tag":537,"props":1079,"children":1080},{"style":663},[1081],{"type":515,"value":971},{"type":510,"tag":537,"props":1083,"children":1084},{"style":657},[1085],{"type":515,"value":996},{"type":510,"tag":537,"props":1087,"children":1088},{"style":663},[1089],{"type":515,"value":666},{"type":510,"tag":537,"props":1091,"children":1092},{"style":963},[1093],{"type":515,"value":1038},{"type":510,"tag":537,"props":1095,"children":1096},{"style":663},[1097],{"type":515,"value":1043},{"type":510,"tag":537,"props":1099,"children":1100},{"style":963},[1101],{"type":515,"value":1048},{"type":510,"tag":537,"props":1103,"children":1104},{"style":663},[1105],{"type":515,"value":1053},{"type":510,"tag":537,"props":1107,"children":1108},{"style":1056},[1109],{"type":515,"value":1059},{"type":510,"tag":537,"props":1111,"children":1112},{"style":663},[1113],{"type":515,"value":1064},{"type":510,"tag":537,"props":1115,"children":1117},{"class":539,"line":1116},9,[1118,1122,1127,1131,1136],{"type":510,"tag":537,"props":1119,"children":1120},{"style":957},[1121],{"type":515,"value":1015},{"type":510,"tag":537,"props":1123,"children":1124},{"style":657},[1125],{"type":515,"value":1126}," res",{"type":510,"tag":537,"props":1128,"children":1129},{"style":663},[1130],{"type":515,"value":971},{"type":510,"tag":537,"props":1132,"children":1133},{"style":1056},[1134],{"type":515,"value":1135}," \"\"",{"type":510,"tag":537,"props":1137,"children":1138},{"style":663},[1139],{"type":515,"value":1140},";\n",{"type":510,"tag":537,"props":1142,"children":1144},{"class":539,"line":1143},10,[1145,1149,1154,1158,1164],{"type":510,"tag":537,"props":1146,"children":1147},{"style":957},[1148],{"type":515,"value":1015},{"type":510,"tag":537,"props":1150,"children":1151},{"style":657},[1152],{"type":515,"value":1153}," temp",{"type":510,"tag":537,"props":1155,"children":1156},{"style":663},[1157],{"type":515,"value":971},{"type":510,"tag":537,"props":1159,"children":1161},{"style":1160},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1162],{"type":515,"value":1163}," 0",{"type":510,"tag":537,"props":1165,"children":1166},{"style":663},[1167],{"type":515,"value":1140},{"type":510,"tag":537,"props":1169,"children":1171},{"class":539,"line":1170},11,[1172,1177,1181,1186,1190,1196,1201,1205,1209,1213,1217,1221,1225],{"type":510,"tag":537,"props":1173,"children":1174},{"style":856},[1175],{"type":515,"value":1176},"  while",{"type":510,"tag":537,"props":1178,"children":1179},{"style":663},[1180],{"type":515,"value":981},{"type":510,"tag":537,"props":1182,"children":1183},{"style":657},[1184],{"type":515,"value":1185},"n1",{"type":510,"tag":537,"props":1187,"children":1188},{"style":663},[1189],{"type":515,"value":666},{"type":510,"tag":537,"props":1191,"children":1193},{"style":1192},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1194],{"type":515,"value":1195},"length",{"type":510,"tag":537,"props":1197,"children":1198},{"style":957},[1199],{"type":515,"value":1200}," ||",{"type":510,"tag":537,"props":1202,"children":1203},{"style":657},[1204],{"type":515,"value":1077},{"type":510,"tag":537,"props":1206,"children":1207},{"style":663},[1208],{"type":515,"value":666},{"type":510,"tag":537,"props":1210,"children":1211},{"style":1192},[1212],{"type":515,"value":1195},{"type":510,"tag":537,"props":1214,"children":1215},{"style":957},[1216],{"type":515,"value":1200},{"type":510,"tag":537,"props":1218,"children":1219},{"style":657},[1220],{"type":515,"value":1153},{"type":510,"tag":537,"props":1222,"children":1223},{"style":663},[1224],{"type":515,"value":1001},{"type":510,"tag":537,"props":1226,"children":1227},{"style":663},[1228],{"type":515,"value":1006},{"type":510,"tag":537,"props":1230,"children":1232},{"class":539,"line":1231},12,[1233,1238,1243,1248,1252,1256,1261,1266,1271,1275,1280,1284,1288],{"type":510,"tag":537,"props":1234,"children":1235},{"style":657},[1236],{"type":515,"value":1237},"    temp",{"type":510,"tag":537,"props":1239,"children":1240},{"style":957},[1241],{"type":515,"value":1242}," +=",{"type":510,"tag":537,"props":1244,"children":1245},{"style":957},[1246],{"type":515,"value":1247}," ~~",{"type":510,"tag":537,"props":1249,"children":1250},{"style":657},[1251],{"type":515,"value":1185},{"type":510,"tag":537,"props":1253,"children":1254},{"style":663},[1255],{"type":515,"value":666},{"type":510,"tag":537,"props":1257,"children":1258},{"style":963},[1259],{"type":515,"value":1260},"pop",{"type":510,"tag":537,"props":1262,"children":1263},{"style":663},[1264],{"type":515,"value":1265},"()",{"type":510,"tag":537,"props":1267,"children":1268},{"style":957},[1269],{"type":515,"value":1270}," +",{"type":510,"tag":537,"props":1272,"children":1273},{"style":957},[1274],{"type":515,"value":1247},{"type":510,"tag":537,"props":1276,"children":1277},{"style":657},[1278],{"type":515,"value":1279},"n2",{"type":510,"tag":537,"props":1281,"children":1282},{"style":663},[1283],{"type":515,"value":666},{"type":510,"tag":537,"props":1285,"children":1286},{"style":963},[1287],{"type":515,"value":1260},{"type":510,"tag":537,"props":1289,"children":1290},{"style":663},[1291],{"type":515,"value":1292},"();\n",{"type":510,"tag":537,"props":1294,"children":1296},{"class":539,"line":1295},13,[1297,1302,1306,1310,1315,1320],{"type":510,"tag":537,"props":1298,"children":1299},{"style":657},[1300],{"type":515,"value":1301},"    res",{"type":510,"tag":537,"props":1303,"children":1304},{"style":957},[1305],{"type":515,"value":1242},{"type":510,"tag":537,"props":1307,"children":1308},{"style":657},[1309],{"type":515,"value":1153},{"type":510,"tag":537,"props":1311,"children":1312},{"style":957},[1313],{"type":515,"value":1314}," %",{"type":510,"tag":537,"props":1316,"children":1317},{"style":1160},[1318],{"type":515,"value":1319}," 10",{"type":510,"tag":537,"props":1321,"children":1322},{"style":663},[1323],{"type":515,"value":1140},{"type":510,"tag":537,"props":1325,"children":1327},{"class":539,"line":1326},14,[1328,1332,1336,1340,1345,1350],{"type":510,"tag":537,"props":1329,"children":1330},{"style":657},[1331],{"type":515,"value":1237},{"type":510,"tag":537,"props":1333,"children":1334},{"style":663},[1335],{"type":515,"value":971},{"type":510,"tag":537,"props":1337,"children":1338},{"style":657},[1339],{"type":515,"value":1153},{"type":510,"tag":537,"props":1341,"children":1342},{"style":663},[1343],{"type":515,"value":1344}," >",{"type":510,"tag":537,"props":1346,"children":1347},{"style":1160},[1348],{"type":515,"value":1349}," 9",{"type":510,"tag":537,"props":1351,"children":1352},{"style":663},[1353],{"type":515,"value":1140},{"type":510,"tag":537,"props":1355,"children":1357},{"class":539,"line":1356},15,[1358],{"type":510,"tag":537,"props":1359,"children":1360},{"style":663},[1361],{"type":515,"value":1362},"  }\n",{"type":510,"tag":537,"props":1364,"children":1366},{"class":539,"line":1365},16,[1367,1372,1376,1380,1384,1388,1392,1397,1402,1406,1411,1415,1419],{"type":510,"tag":537,"props":1368,"children":1369},{"style":856},[1370],{"type":515,"value":1371},"  return",{"type":510,"tag":537,"props":1373,"children":1374},{"style":657},[1375],{"type":515,"value":1126},{"type":510,"tag":537,"props":1377,"children":1378},{"style":663},[1379],{"type":515,"value":666},{"type":510,"tag":537,"props":1381,"children":1382},{"style":963},[1383],{"type":515,"value":1048},{"type":510,"tag":537,"props":1385,"children":1386},{"style":663},[1387],{"type":515,"value":1053},{"type":510,"tag":537,"props":1389,"children":1390},{"style":1056},[1391],{"type":515,"value":1059},{"type":510,"tag":537,"props":1393,"children":1394},{"style":663},[1395],{"type":515,"value":1396},").",{"type":510,"tag":537,"props":1398,"children":1399},{"style":963},[1400],{"type":515,"value":1401},"reverse",{"type":510,"tag":537,"props":1403,"children":1404},{"style":663},[1405],{"type":515,"value":1043},{"type":510,"tag":537,"props":1407,"children":1408},{"style":963},[1409],{"type":515,"value":1410},"join",{"type":510,"tag":537,"props":1412,"children":1413},{"style":663},[1414],{"type":515,"value":1053},{"type":510,"tag":537,"props":1416,"children":1417},{"style":1056},[1418],{"type":515,"value":1059},{"type":510,"tag":537,"props":1420,"children":1421},{"style":663},[1422],{"type":515,"value":1064},{"type":510,"tag":537,"props":1424,"children":1426},{"class":539,"line":1425},17,[1427],{"type":510,"tag":537,"props":1428,"children":1429},{"style":663},[1430],{"type":515,"value":1431},"};\n",{"type":510,"tag":1433,"props":1434,"children":1435},"style",{},[1436],{"type":515,"value":1437},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":944,"depth":944,"links":1439},[1440,1441],{"id":640,"depth":549,"text":640},{"id":817,"depth":549,"text":817,"children":1442},[1443],{"id":823,"depth":711,"text":823},"markdown","content:1.algorithm:3.leetcode:3.major:415.add-strings.md","content","1.algorithm/3.leetcode/3.major/415.add-strings.md","md",[1450,1452],{"_path":231,"title":230,"description":1451},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":237,"title":236,"description":1453},"给你一个字符数组 chars ，请使用下述算法压缩：",1714054339489]