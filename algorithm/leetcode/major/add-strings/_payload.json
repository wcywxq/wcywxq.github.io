[{"data":1,"prerenderedAt":1503},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-strings":549,"/algorithm/leetcode/major/add-strings-surround":1498},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":237,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":236,"description":553,"url":554,"body":555,"_type":1493,"_id":1494,"_source":1495,"_file":1496,"_extension":1497},"major",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":556,"children":557,"toc":1487},"root",[558,565,570,575,605,610,633,638,661,666,686,692,810,831,836,864,869,875,1481],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"示例 1：",{"type":559,"tag":576,"props":577,"children":580},"pre",{"className":578,"code":579,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[581],{"type":559,"tag":582,"props":583,"children":584},"code",{"__ignoreMap":552},[585,596],{"type":559,"tag":586,"props":587,"children":590},"span",{"class":588,"line":589},"line",1,[591],{"type":559,"tag":586,"props":592,"children":593},{},[594],{"type":564,"value":595},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":559,"tag":586,"props":597,"children":599},{"class":588,"line":598},2,[600],{"type":559,"tag":586,"props":601,"children":602},{},[603],{"type":564,"value":604},"输出：\"134\"\n",{"type":559,"tag":560,"props":606,"children":607},{},[608],{"type":564,"value":609},"示例 2：",{"type":559,"tag":576,"props":611,"children":613},{"className":578,"code":612,"language":564,"meta":552,"style":552},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[614],{"type":559,"tag":582,"props":615,"children":616},{"__ignoreMap":552},[617,625],{"type":559,"tag":586,"props":618,"children":619},{"class":588,"line":589},[620],{"type":559,"tag":586,"props":621,"children":622},{},[623],{"type":564,"value":624},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":559,"tag":586,"props":626,"children":627},{"class":588,"line":598},[628],{"type":559,"tag":586,"props":629,"children":630},{},[631],{"type":564,"value":632},"输出：\"533\"\n",{"type":559,"tag":560,"props":634,"children":635},{},[636],{"type":564,"value":637},"示例 3：",{"type":559,"tag":576,"props":639,"children":641},{"className":578,"code":640,"language":564,"meta":552,"style":552},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[642],{"type":559,"tag":582,"props":643,"children":644},{"__ignoreMap":552},[645,653],{"type":559,"tag":586,"props":646,"children":647},{"class":588,"line":589},[648],{"type":559,"tag":586,"props":649,"children":650},{},[651],{"type":564,"value":652},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":559,"tag":586,"props":654,"children":655},{"class":588,"line":598},[656],{"type":559,"tag":586,"props":657,"children":658},{},[659],{"type":564,"value":660},"输出：\"0\"\n",{"type":559,"tag":560,"props":662,"children":663},{},[664],{"type":564,"value":665},"提示：",{"type":559,"tag":667,"props":668,"children":669},"ul",{},[670,676,681],{"type":559,"tag":671,"props":672,"children":673},"li",{},[674],{"type":564,"value":675},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":559,"tag":671,"props":677,"children":678},{},[679],{"type":564,"value":680},"num1 和 num2 都只包含数字 0-9",{"type":559,"tag":671,"props":682,"children":683},{},[684],{"type":564,"value":685},"num1 和 num2 都不包含任何前导零",{"type":559,"tag":687,"props":688,"children":690},"h2",{"id":689},"解题思路",[691],{"type":564,"value":689},{"type":559,"tag":576,"props":693,"children":697},{"className":694,"code":695,"language":696,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[698],{"type":559,"tag":582,"props":699,"children":700},{"__ignoreMap":552},[701,733,758,784],{"type":559,"tag":586,"props":702,"children":703},{"class":588,"line":589},[704,710,716,722,727],{"type":559,"tag":586,"props":705,"children":707},{"style":706},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[708],{"type":564,"value":709},"Number",{"type":559,"tag":586,"props":711,"children":713},{"style":712},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[714],{"type":564,"value":715},".",{"type":559,"tag":586,"props":717,"children":719},{"style":718},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[720],{"type":564,"value":721},"MAX_VALUE",{"type":559,"tag":586,"props":723,"children":724},{"style":712},[725],{"type":564,"value":726},";",{"type":559,"tag":586,"props":728,"children":730},{"style":729},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[731],{"type":564,"value":732}," // 1.7976931348623157e+308\n",{"type":559,"tag":586,"props":734,"children":735},{"class":588,"line":598},[736,740,744,749,753],{"type":559,"tag":586,"props":737,"children":738},{"style":706},[739],{"type":564,"value":709},{"type":559,"tag":586,"props":741,"children":742},{"style":712},[743],{"type":564,"value":715},{"type":559,"tag":586,"props":745,"children":746},{"style":718},[747],{"type":564,"value":748},"MAX_SAFE_INTEGER",{"type":559,"tag":586,"props":750,"children":751},{"style":712},[752],{"type":564,"value":726},{"type":559,"tag":586,"props":754,"children":755},{"style":729},[756],{"type":564,"value":757}," // 9007199254740991\n",{"type":559,"tag":586,"props":759,"children":761},{"class":588,"line":760},3,[762,766,770,775,779],{"type":559,"tag":586,"props":763,"children":764},{"style":706},[765],{"type":564,"value":709},{"type":559,"tag":586,"props":767,"children":768},{"style":712},[769],{"type":564,"value":715},{"type":559,"tag":586,"props":771,"children":772},{"style":718},[773],{"type":564,"value":774},"MIN_VALUE",{"type":559,"tag":586,"props":776,"children":777},{"style":712},[778],{"type":564,"value":726},{"type":559,"tag":586,"props":780,"children":781},{"style":729},[782],{"type":564,"value":783}," // 5e-324\n",{"type":559,"tag":586,"props":785,"children":787},{"class":588,"line":786},4,[788,792,796,801,805],{"type":559,"tag":586,"props":789,"children":790},{"style":706},[791],{"type":564,"value":709},{"type":559,"tag":586,"props":793,"children":794},{"style":712},[795],{"type":564,"value":715},{"type":559,"tag":586,"props":797,"children":798},{"style":718},[799],{"type":564,"value":800},"MIN_SAFE_INTEGER",{"type":559,"tag":586,"props":802,"children":803},{"style":712},[804],{"type":564,"value":726},{"type":559,"tag":586,"props":806,"children":807},{"style":729},[808],{"type":564,"value":809}," // -9007199254740991\n",{"type":559,"tag":560,"props":811,"children":812},{},[813,815,821,823,829],{"type":564,"value":814},"如果想要对一个超大的整数 ",{"type":559,"tag":582,"props":816,"children":818},{"className":817},[],[819],{"type":564,"value":820},"> Number.MAX_SAFE_INTEGER",{"type":564,"value":822}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":559,"tag":582,"props":824,"children":826},{"className":825},[],[827],{"type":564,"value":828},"Number.MAX_SAFE_INTEGER",{"type":564,"value":830}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":559,"tag":560,"props":832,"children":833},{},[834],{"type":564,"value":835},"使用算法实现大数相加：",{"type":559,"tag":667,"props":837,"children":838},{},[839,844,849,854,859],{"type":559,"tag":671,"props":840,"children":841},{},[842],{"type":564,"value":843},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":559,"tag":671,"props":845,"children":846},{},[847],{"type":564,"value":848},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":559,"tag":671,"props":850,"children":851},{},[852],{"type":564,"value":853},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":559,"tag":671,"props":855,"children":856},{},[857],{"type":564,"value":858},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":559,"tag":671,"props":860,"children":861},{},[862],{"type":564,"value":863},"重复以上操作，直到计算出结果；",{"type":559,"tag":687,"props":865,"children":867},{"id":866},"实现",[868],{"type":564,"value":866},{"type":559,"tag":870,"props":871,"children":873},"h3",{"id":872},"大数相加",[874],{"type":564,"value":872},{"type":559,"tag":576,"props":876,"children":878},{"className":694,"code":877,"language":696,"meta":552,"style":552},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[879],{"type":559,"tag":582,"props":880,"children":881},{"__ignoreMap":552},[882,890,930,962,991,1000,1056,1114,1163,1190,1217,1278,1342,1373,1403,1412,1472],{"type":559,"tag":586,"props":883,"children":884},{"class":588,"line":589},[885],{"type":559,"tag":586,"props":886,"children":887},{"style":729},[888],{"type":564,"value":889},"/**\n",{"type":559,"tag":586,"props":891,"children":892},{"class":588,"line":598},[893,898,903,909,914,920,925],{"type":559,"tag":586,"props":894,"children":895},{"style":729},[896],{"type":564,"value":897}," * ",{"type":559,"tag":586,"props":899,"children":900},{"style":712},[901],{"type":564,"value":902},"@",{"type":559,"tag":586,"props":904,"children":906},{"style":905},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[907],{"type":564,"value":908},"param",{"type":559,"tag":586,"props":910,"children":911},{"style":712},[912],{"type":564,"value":913}," {",{"type":559,"tag":586,"props":915,"children":917},{"style":916},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[918],{"type":564,"value":919},"string",{"type":559,"tag":586,"props":921,"children":922},{"style":712},[923],{"type":564,"value":924},"}",{"type":559,"tag":586,"props":926,"children":927},{"style":706},[928],{"type":564,"value":929}," num1\n",{"type":559,"tag":586,"props":931,"children":932},{"class":588,"line":760},[933,937,941,945,949,953,957],{"type":559,"tag":586,"props":934,"children":935},{"style":729},[936],{"type":564,"value":897},{"type":559,"tag":586,"props":938,"children":939},{"style":712},[940],{"type":564,"value":902},{"type":559,"tag":586,"props":942,"children":943},{"style":905},[944],{"type":564,"value":908},{"type":559,"tag":586,"props":946,"children":947},{"style":712},[948],{"type":564,"value":913},{"type":559,"tag":586,"props":950,"children":951},{"style":916},[952],{"type":564,"value":919},{"type":559,"tag":586,"props":954,"children":955},{"style":712},[956],{"type":564,"value":924},{"type":559,"tag":586,"props":958,"children":959},{"style":706},[960],{"type":564,"value":961}," num2\n",{"type":559,"tag":586,"props":963,"children":964},{"class":588,"line":786},[965,969,973,978,982,986],{"type":559,"tag":586,"props":966,"children":967},{"style":729},[968],{"type":564,"value":897},{"type":559,"tag":586,"props":970,"children":971},{"style":712},[972],{"type":564,"value":902},{"type":559,"tag":586,"props":974,"children":975},{"style":905},[976],{"type":564,"value":977},"return",{"type":559,"tag":586,"props":979,"children":980},{"style":712},[981],{"type":564,"value":913},{"type":559,"tag":586,"props":983,"children":984},{"style":916},[985],{"type":564,"value":919},{"type":559,"tag":586,"props":987,"children":988},{"style":712},[989],{"type":564,"value":990},"}\n",{"type":559,"tag":586,"props":992,"children":994},{"class":588,"line":993},5,[995],{"type":559,"tag":586,"props":996,"children":997},{"style":729},[998],{"type":564,"value":999}," */\n",{"type":559,"tag":586,"props":1001,"children":1003},{"class":588,"line":1002},6,[1004,1010,1016,1021,1026,1031,1036,1041,1046,1051],{"type":559,"tag":586,"props":1005,"children":1007},{"style":1006},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[1008],{"type":564,"value":1009},"var",{"type":559,"tag":586,"props":1011,"children":1013},{"style":1012},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[1014],{"type":564,"value":1015}," addStrings",{"type":559,"tag":586,"props":1017,"children":1018},{"style":712},[1019],{"type":564,"value":1020}," =",{"type":559,"tag":586,"props":1022,"children":1023},{"style":1006},[1024],{"type":564,"value":1025}," function",{"type":559,"tag":586,"props":1027,"children":1028},{"style":712},[1029],{"type":564,"value":1030}," (",{"type":559,"tag":586,"props":1032,"children":1033},{"style":706},[1034],{"type":564,"value":1035},"num1",{"type":559,"tag":586,"props":1037,"children":1038},{"style":712},[1039],{"type":564,"value":1040},",",{"type":559,"tag":586,"props":1042,"children":1043},{"style":706},[1044],{"type":564,"value":1045}," num2",{"type":559,"tag":586,"props":1047,"children":1048},{"style":712},[1049],{"type":564,"value":1050},")",{"type":559,"tag":586,"props":1052,"children":1053},{"style":712},[1054],{"type":564,"value":1055}," {\n",{"type":559,"tag":586,"props":1057,"children":1059},{"class":588,"line":1058},7,[1060,1065,1070,1074,1079,1083,1088,1093,1098,1103,1109],{"type":559,"tag":586,"props":1061,"children":1062},{"style":1006},[1063],{"type":564,"value":1064},"  let",{"type":559,"tag":586,"props":1066,"children":1067},{"style":706},[1068],{"type":564,"value":1069}," n1",{"type":559,"tag":586,"props":1071,"children":1072},{"style":712},[1073],{"type":564,"value":1020},{"type":559,"tag":586,"props":1075,"children":1076},{"style":706},[1077],{"type":564,"value":1078}," num1",{"type":559,"tag":586,"props":1080,"children":1081},{"style":712},[1082],{"type":564,"value":715},{"type":559,"tag":586,"props":1084,"children":1085},{"style":1012},[1086],{"type":564,"value":1087},"toString",{"type":559,"tag":586,"props":1089,"children":1090},{"style":712},[1091],{"type":564,"value":1092},"().",{"type":559,"tag":586,"props":1094,"children":1095},{"style":1012},[1096],{"type":564,"value":1097},"split",{"type":559,"tag":586,"props":1099,"children":1100},{"style":712},[1101],{"type":564,"value":1102},"(",{"type":559,"tag":586,"props":1104,"children":1106},{"style":1105},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1107],{"type":564,"value":1108},"\"\"",{"type":559,"tag":586,"props":1110,"children":1111},{"style":712},[1112],{"type":564,"value":1113},");\n",{"type":559,"tag":586,"props":1115,"children":1117},{"class":588,"line":1116},8,[1118,1122,1127,1131,1135,1139,1143,1147,1151,1155,1159],{"type":559,"tag":586,"props":1119,"children":1120},{"style":1006},[1121],{"type":564,"value":1064},{"type":559,"tag":586,"props":1123,"children":1124},{"style":706},[1125],{"type":564,"value":1126}," n2",{"type":559,"tag":586,"props":1128,"children":1129},{"style":712},[1130],{"type":564,"value":1020},{"type":559,"tag":586,"props":1132,"children":1133},{"style":706},[1134],{"type":564,"value":1045},{"type":559,"tag":586,"props":1136,"children":1137},{"style":712},[1138],{"type":564,"value":715},{"type":559,"tag":586,"props":1140,"children":1141},{"style":1012},[1142],{"type":564,"value":1087},{"type":559,"tag":586,"props":1144,"children":1145},{"style":712},[1146],{"type":564,"value":1092},{"type":559,"tag":586,"props":1148,"children":1149},{"style":1012},[1150],{"type":564,"value":1097},{"type":559,"tag":586,"props":1152,"children":1153},{"style":712},[1154],{"type":564,"value":1102},{"type":559,"tag":586,"props":1156,"children":1157},{"style":1105},[1158],{"type":564,"value":1108},{"type":559,"tag":586,"props":1160,"children":1161},{"style":712},[1162],{"type":564,"value":1113},{"type":559,"tag":586,"props":1164,"children":1166},{"class":588,"line":1165},9,[1167,1171,1176,1180,1185],{"type":559,"tag":586,"props":1168,"children":1169},{"style":1006},[1170],{"type":564,"value":1064},{"type":559,"tag":586,"props":1172,"children":1173},{"style":706},[1174],{"type":564,"value":1175}," res",{"type":559,"tag":586,"props":1177,"children":1178},{"style":712},[1179],{"type":564,"value":1020},{"type":559,"tag":586,"props":1181,"children":1182},{"style":1105},[1183],{"type":564,"value":1184}," \"\"",{"type":559,"tag":586,"props":1186,"children":1187},{"style":712},[1188],{"type":564,"value":1189},";\n",{"type":559,"tag":586,"props":1191,"children":1193},{"class":588,"line":1192},10,[1194,1198,1203,1207,1213],{"type":559,"tag":586,"props":1195,"children":1196},{"style":1006},[1197],{"type":564,"value":1064},{"type":559,"tag":586,"props":1199,"children":1200},{"style":706},[1201],{"type":564,"value":1202}," temp",{"type":559,"tag":586,"props":1204,"children":1205},{"style":712},[1206],{"type":564,"value":1020},{"type":559,"tag":586,"props":1208,"children":1210},{"style":1209},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1211],{"type":564,"value":1212}," 0",{"type":559,"tag":586,"props":1214,"children":1215},{"style":712},[1216],{"type":564,"value":1189},{"type":559,"tag":586,"props":1218,"children":1220},{"class":588,"line":1219},11,[1221,1226,1230,1235,1239,1245,1250,1254,1258,1262,1266,1270,1274],{"type":559,"tag":586,"props":1222,"children":1223},{"style":905},[1224],{"type":564,"value":1225},"  while",{"type":559,"tag":586,"props":1227,"children":1228},{"style":712},[1229],{"type":564,"value":1030},{"type":559,"tag":586,"props":1231,"children":1232},{"style":706},[1233],{"type":564,"value":1234},"n1",{"type":559,"tag":586,"props":1236,"children":1237},{"style":712},[1238],{"type":564,"value":715},{"type":559,"tag":586,"props":1240,"children":1242},{"style":1241},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1243],{"type":564,"value":1244},"length",{"type":559,"tag":586,"props":1246,"children":1247},{"style":1006},[1248],{"type":564,"value":1249}," ||",{"type":559,"tag":586,"props":1251,"children":1252},{"style":706},[1253],{"type":564,"value":1126},{"type":559,"tag":586,"props":1255,"children":1256},{"style":712},[1257],{"type":564,"value":715},{"type":559,"tag":586,"props":1259,"children":1260},{"style":1241},[1261],{"type":564,"value":1244},{"type":559,"tag":586,"props":1263,"children":1264},{"style":1006},[1265],{"type":564,"value":1249},{"type":559,"tag":586,"props":1267,"children":1268},{"style":706},[1269],{"type":564,"value":1202},{"type":559,"tag":586,"props":1271,"children":1272},{"style":712},[1273],{"type":564,"value":1050},{"type":559,"tag":586,"props":1275,"children":1276},{"style":712},[1277],{"type":564,"value":1055},{"type":559,"tag":586,"props":1279,"children":1281},{"class":588,"line":1280},12,[1282,1287,1292,1297,1301,1305,1310,1315,1320,1324,1329,1333,1337],{"type":559,"tag":586,"props":1283,"children":1284},{"style":706},[1285],{"type":564,"value":1286},"    temp",{"type":559,"tag":586,"props":1288,"children":1289},{"style":1006},[1290],{"type":564,"value":1291}," +=",{"type":559,"tag":586,"props":1293,"children":1294},{"style":1006},[1295],{"type":564,"value":1296}," ~~",{"type":559,"tag":586,"props":1298,"children":1299},{"style":706},[1300],{"type":564,"value":1234},{"type":559,"tag":586,"props":1302,"children":1303},{"style":712},[1304],{"type":564,"value":715},{"type":559,"tag":586,"props":1306,"children":1307},{"style":1012},[1308],{"type":564,"value":1309},"pop",{"type":559,"tag":586,"props":1311,"children":1312},{"style":712},[1313],{"type":564,"value":1314},"()",{"type":559,"tag":586,"props":1316,"children":1317},{"style":1006},[1318],{"type":564,"value":1319}," +",{"type":559,"tag":586,"props":1321,"children":1322},{"style":1006},[1323],{"type":564,"value":1296},{"type":559,"tag":586,"props":1325,"children":1326},{"style":706},[1327],{"type":564,"value":1328},"n2",{"type":559,"tag":586,"props":1330,"children":1331},{"style":712},[1332],{"type":564,"value":715},{"type":559,"tag":586,"props":1334,"children":1335},{"style":1012},[1336],{"type":564,"value":1309},{"type":559,"tag":586,"props":1338,"children":1339},{"style":712},[1340],{"type":564,"value":1341},"();\n",{"type":559,"tag":586,"props":1343,"children":1345},{"class":588,"line":1344},13,[1346,1351,1355,1359,1364,1369],{"type":559,"tag":586,"props":1347,"children":1348},{"style":706},[1349],{"type":564,"value":1350},"    res",{"type":559,"tag":586,"props":1352,"children":1353},{"style":1006},[1354],{"type":564,"value":1291},{"type":559,"tag":586,"props":1356,"children":1357},{"style":706},[1358],{"type":564,"value":1202},{"type":559,"tag":586,"props":1360,"children":1361},{"style":1006},[1362],{"type":564,"value":1363}," %",{"type":559,"tag":586,"props":1365,"children":1366},{"style":1209},[1367],{"type":564,"value":1368}," 10",{"type":559,"tag":586,"props":1370,"children":1371},{"style":712},[1372],{"type":564,"value":1189},{"type":559,"tag":586,"props":1374,"children":1376},{"class":588,"line":1375},14,[1377,1381,1385,1389,1394,1399],{"type":559,"tag":586,"props":1378,"children":1379},{"style":706},[1380],{"type":564,"value":1286},{"type":559,"tag":586,"props":1382,"children":1383},{"style":712},[1384],{"type":564,"value":1020},{"type":559,"tag":586,"props":1386,"children":1387},{"style":706},[1388],{"type":564,"value":1202},{"type":559,"tag":586,"props":1390,"children":1391},{"style":712},[1392],{"type":564,"value":1393}," >",{"type":559,"tag":586,"props":1395,"children":1396},{"style":1209},[1397],{"type":564,"value":1398}," 9",{"type":559,"tag":586,"props":1400,"children":1401},{"style":712},[1402],{"type":564,"value":1189},{"type":559,"tag":586,"props":1404,"children":1406},{"class":588,"line":1405},15,[1407],{"type":559,"tag":586,"props":1408,"children":1409},{"style":712},[1410],{"type":564,"value":1411},"  }\n",{"type":559,"tag":586,"props":1413,"children":1415},{"class":588,"line":1414},16,[1416,1421,1425,1429,1433,1437,1441,1446,1451,1455,1460,1464,1468],{"type":559,"tag":586,"props":1417,"children":1418},{"style":905},[1419],{"type":564,"value":1420},"  return",{"type":559,"tag":586,"props":1422,"children":1423},{"style":706},[1424],{"type":564,"value":1175},{"type":559,"tag":586,"props":1426,"children":1427},{"style":712},[1428],{"type":564,"value":715},{"type":559,"tag":586,"props":1430,"children":1431},{"style":1012},[1432],{"type":564,"value":1097},{"type":559,"tag":586,"props":1434,"children":1435},{"style":712},[1436],{"type":564,"value":1102},{"type":559,"tag":586,"props":1438,"children":1439},{"style":1105},[1440],{"type":564,"value":1108},{"type":559,"tag":586,"props":1442,"children":1443},{"style":712},[1444],{"type":564,"value":1445},").",{"type":559,"tag":586,"props":1447,"children":1448},{"style":1012},[1449],{"type":564,"value":1450},"reverse",{"type":559,"tag":586,"props":1452,"children":1453},{"style":712},[1454],{"type":564,"value":1092},{"type":559,"tag":586,"props":1456,"children":1457},{"style":1012},[1458],{"type":564,"value":1459},"join",{"type":559,"tag":586,"props":1461,"children":1462},{"style":712},[1463],{"type":564,"value":1102},{"type":559,"tag":586,"props":1465,"children":1466},{"style":1105},[1467],{"type":564,"value":1108},{"type":559,"tag":586,"props":1469,"children":1470},{"style":712},[1471],{"type":564,"value":1113},{"type":559,"tag":586,"props":1473,"children":1475},{"class":588,"line":1474},17,[1476],{"type":559,"tag":586,"props":1477,"children":1478},{"style":712},[1479],{"type":564,"value":1480},"};\n",{"type":559,"tag":1482,"props":1483,"children":1484},"style",{},[1485],{"type":564,"value":1486},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":993,"depth":993,"links":1488},[1489,1490],{"id":689,"depth":598,"text":689},{"id":866,"depth":598,"text":866,"children":1491},[1492],{"id":872,"depth":760,"text":872},"markdown","content:1.algorithm:3.leetcode:3.major:415.add-strings.md","content","1.algorithm/3.leetcode/3.major/415.add-strings.md","md",[1499,1501],{"_path":234,"title":233,"description":1500},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":240,"title":239,"description":1502},"给你一个字符数组 chars ，请使用下述算法压缩：",1715007497684]