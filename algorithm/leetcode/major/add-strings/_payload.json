[{"data":1,"prerenderedAt":1513},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-strings":559,"/algorithm/leetcode/major/add-strings-surround":1508},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":237,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":236,"description":563,"url":564,"body":565,"_type":1503,"_id":1504,"_source":1505,"_file":1506,"_extension":1507},"major",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":566,"children":567,"toc":1497},"root",[568,575,580,585,615,620,643,648,671,676,696,702,820,841,846,874,879,885,1491],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"示例 1：",{"type":569,"tag":586,"props":587,"children":590},"pre",{"className":588,"code":589,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[591],{"type":569,"tag":592,"props":593,"children":594},"code",{"__ignoreMap":562},[595,606],{"type":569,"tag":596,"props":597,"children":600},"span",{"class":598,"line":599},"line",1,[601],{"type":569,"tag":596,"props":602,"children":603},{},[604],{"type":574,"value":605},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":569,"tag":596,"props":607,"children":609},{"class":598,"line":608},2,[610],{"type":569,"tag":596,"props":611,"children":612},{},[613],{"type":574,"value":614},"输出：\"134\"\n",{"type":569,"tag":570,"props":616,"children":617},{},[618],{"type":574,"value":619},"示例 2：",{"type":569,"tag":586,"props":621,"children":623},{"className":588,"code":622,"language":574,"meta":562,"style":562},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[624],{"type":569,"tag":592,"props":625,"children":626},{"__ignoreMap":562},[627,635],{"type":569,"tag":596,"props":628,"children":629},{"class":598,"line":599},[630],{"type":569,"tag":596,"props":631,"children":632},{},[633],{"type":574,"value":634},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":569,"tag":596,"props":636,"children":637},{"class":598,"line":608},[638],{"type":569,"tag":596,"props":639,"children":640},{},[641],{"type":574,"value":642},"输出：\"533\"\n",{"type":569,"tag":570,"props":644,"children":645},{},[646],{"type":574,"value":647},"示例 3：",{"type":569,"tag":586,"props":649,"children":651},{"className":588,"code":650,"language":574,"meta":562,"style":562},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[652],{"type":569,"tag":592,"props":653,"children":654},{"__ignoreMap":562},[655,663],{"type":569,"tag":596,"props":656,"children":657},{"class":598,"line":599},[658],{"type":569,"tag":596,"props":659,"children":660},{},[661],{"type":574,"value":662},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":569,"tag":596,"props":664,"children":665},{"class":598,"line":608},[666],{"type":569,"tag":596,"props":667,"children":668},{},[669],{"type":574,"value":670},"输出：\"0\"\n",{"type":569,"tag":570,"props":672,"children":673},{},[674],{"type":574,"value":675},"提示：",{"type":569,"tag":677,"props":678,"children":679},"ul",{},[680,686,691],{"type":569,"tag":681,"props":682,"children":683},"li",{},[684],{"type":574,"value":685},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":569,"tag":681,"props":687,"children":688},{},[689],{"type":574,"value":690},"num1 和 num2 都只包含数字 0-9",{"type":569,"tag":681,"props":692,"children":693},{},[694],{"type":574,"value":695},"num1 和 num2 都不包含任何前导零",{"type":569,"tag":697,"props":698,"children":700},"h2",{"id":699},"解题思路",[701],{"type":574,"value":699},{"type":569,"tag":586,"props":703,"children":707},{"className":704,"code":705,"language":706,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[708],{"type":569,"tag":592,"props":709,"children":710},{"__ignoreMap":562},[711,743,768,794],{"type":569,"tag":596,"props":712,"children":713},{"class":598,"line":599},[714,720,726,732,737],{"type":569,"tag":596,"props":715,"children":717},{"style":716},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[718],{"type":574,"value":719},"Number",{"type":569,"tag":596,"props":721,"children":723},{"style":722},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[724],{"type":574,"value":725},".",{"type":569,"tag":596,"props":727,"children":729},{"style":728},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[730],{"type":574,"value":731},"MAX_VALUE",{"type":569,"tag":596,"props":733,"children":734},{"style":722},[735],{"type":574,"value":736},";",{"type":569,"tag":596,"props":738,"children":740},{"style":739},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[741],{"type":574,"value":742}," // 1.7976931348623157e+308\n",{"type":569,"tag":596,"props":744,"children":745},{"class":598,"line":608},[746,750,754,759,763],{"type":569,"tag":596,"props":747,"children":748},{"style":716},[749],{"type":574,"value":719},{"type":569,"tag":596,"props":751,"children":752},{"style":722},[753],{"type":574,"value":725},{"type":569,"tag":596,"props":755,"children":756},{"style":728},[757],{"type":574,"value":758},"MAX_SAFE_INTEGER",{"type":569,"tag":596,"props":760,"children":761},{"style":722},[762],{"type":574,"value":736},{"type":569,"tag":596,"props":764,"children":765},{"style":739},[766],{"type":574,"value":767}," // 9007199254740991\n",{"type":569,"tag":596,"props":769,"children":771},{"class":598,"line":770},3,[772,776,780,785,789],{"type":569,"tag":596,"props":773,"children":774},{"style":716},[775],{"type":574,"value":719},{"type":569,"tag":596,"props":777,"children":778},{"style":722},[779],{"type":574,"value":725},{"type":569,"tag":596,"props":781,"children":782},{"style":728},[783],{"type":574,"value":784},"MIN_VALUE",{"type":569,"tag":596,"props":786,"children":787},{"style":722},[788],{"type":574,"value":736},{"type":569,"tag":596,"props":790,"children":791},{"style":739},[792],{"type":574,"value":793}," // 5e-324\n",{"type":569,"tag":596,"props":795,"children":797},{"class":598,"line":796},4,[798,802,806,811,815],{"type":569,"tag":596,"props":799,"children":800},{"style":716},[801],{"type":574,"value":719},{"type":569,"tag":596,"props":803,"children":804},{"style":722},[805],{"type":574,"value":725},{"type":569,"tag":596,"props":807,"children":808},{"style":728},[809],{"type":574,"value":810},"MIN_SAFE_INTEGER",{"type":569,"tag":596,"props":812,"children":813},{"style":722},[814],{"type":574,"value":736},{"type":569,"tag":596,"props":816,"children":817},{"style":739},[818],{"type":574,"value":819}," // -9007199254740991\n",{"type":569,"tag":570,"props":821,"children":822},{},[823,825,831,833,839],{"type":574,"value":824},"如果想要对一个超大的整数 ",{"type":569,"tag":592,"props":826,"children":828},{"className":827},[],[829],{"type":574,"value":830},"> Number.MAX_SAFE_INTEGER",{"type":574,"value":832}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":569,"tag":592,"props":834,"children":836},{"className":835},[],[837],{"type":574,"value":838},"Number.MAX_SAFE_INTEGER",{"type":574,"value":840}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":569,"tag":570,"props":842,"children":843},{},[844],{"type":574,"value":845},"使用算法实现大数相加：",{"type":569,"tag":677,"props":847,"children":848},{},[849,854,859,864,869],{"type":569,"tag":681,"props":850,"children":851},{},[852],{"type":574,"value":853},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":569,"tag":681,"props":855,"children":856},{},[857],{"type":574,"value":858},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":569,"tag":681,"props":860,"children":861},{},[862],{"type":574,"value":863},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":569,"tag":681,"props":865,"children":866},{},[867],{"type":574,"value":868},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":569,"tag":681,"props":870,"children":871},{},[872],{"type":574,"value":873},"重复以上操作，直到计算出结果；",{"type":569,"tag":697,"props":875,"children":877},{"id":876},"实现",[878],{"type":574,"value":876},{"type":569,"tag":880,"props":881,"children":883},"h3",{"id":882},"大数相加",[884],{"type":574,"value":882},{"type":569,"tag":586,"props":886,"children":888},{"className":704,"code":887,"language":706,"meta":562,"style":562},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[889],{"type":569,"tag":592,"props":890,"children":891},{"__ignoreMap":562},[892,900,940,972,1001,1010,1066,1124,1173,1200,1227,1288,1352,1383,1413,1422,1482],{"type":569,"tag":596,"props":893,"children":894},{"class":598,"line":599},[895],{"type":569,"tag":596,"props":896,"children":897},{"style":739},[898],{"type":574,"value":899},"/**\n",{"type":569,"tag":596,"props":901,"children":902},{"class":598,"line":608},[903,908,913,919,924,930,935],{"type":569,"tag":596,"props":904,"children":905},{"style":739},[906],{"type":574,"value":907}," * ",{"type":569,"tag":596,"props":909,"children":910},{"style":722},[911],{"type":574,"value":912},"@",{"type":569,"tag":596,"props":914,"children":916},{"style":915},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[917],{"type":574,"value":918},"param",{"type":569,"tag":596,"props":920,"children":921},{"style":722},[922],{"type":574,"value":923}," {",{"type":569,"tag":596,"props":925,"children":927},{"style":926},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[928],{"type":574,"value":929},"string",{"type":569,"tag":596,"props":931,"children":932},{"style":722},[933],{"type":574,"value":934},"}",{"type":569,"tag":596,"props":936,"children":937},{"style":716},[938],{"type":574,"value":939}," num1\n",{"type":569,"tag":596,"props":941,"children":942},{"class":598,"line":770},[943,947,951,955,959,963,967],{"type":569,"tag":596,"props":944,"children":945},{"style":739},[946],{"type":574,"value":907},{"type":569,"tag":596,"props":948,"children":949},{"style":722},[950],{"type":574,"value":912},{"type":569,"tag":596,"props":952,"children":953},{"style":915},[954],{"type":574,"value":918},{"type":569,"tag":596,"props":956,"children":957},{"style":722},[958],{"type":574,"value":923},{"type":569,"tag":596,"props":960,"children":961},{"style":926},[962],{"type":574,"value":929},{"type":569,"tag":596,"props":964,"children":965},{"style":722},[966],{"type":574,"value":934},{"type":569,"tag":596,"props":968,"children":969},{"style":716},[970],{"type":574,"value":971}," num2\n",{"type":569,"tag":596,"props":973,"children":974},{"class":598,"line":796},[975,979,983,988,992,996],{"type":569,"tag":596,"props":976,"children":977},{"style":739},[978],{"type":574,"value":907},{"type":569,"tag":596,"props":980,"children":981},{"style":722},[982],{"type":574,"value":912},{"type":569,"tag":596,"props":984,"children":985},{"style":915},[986],{"type":574,"value":987},"return",{"type":569,"tag":596,"props":989,"children":990},{"style":722},[991],{"type":574,"value":923},{"type":569,"tag":596,"props":993,"children":994},{"style":926},[995],{"type":574,"value":929},{"type":569,"tag":596,"props":997,"children":998},{"style":722},[999],{"type":574,"value":1000},"}\n",{"type":569,"tag":596,"props":1002,"children":1004},{"class":598,"line":1003},5,[1005],{"type":569,"tag":596,"props":1006,"children":1007},{"style":739},[1008],{"type":574,"value":1009}," */\n",{"type":569,"tag":596,"props":1011,"children":1013},{"class":598,"line":1012},6,[1014,1020,1026,1031,1036,1041,1046,1051,1056,1061],{"type":569,"tag":596,"props":1015,"children":1017},{"style":1016},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[1018],{"type":574,"value":1019},"var",{"type":569,"tag":596,"props":1021,"children":1023},{"style":1022},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[1024],{"type":574,"value":1025}," addStrings",{"type":569,"tag":596,"props":1027,"children":1028},{"style":722},[1029],{"type":574,"value":1030}," =",{"type":569,"tag":596,"props":1032,"children":1033},{"style":1016},[1034],{"type":574,"value":1035}," function",{"type":569,"tag":596,"props":1037,"children":1038},{"style":722},[1039],{"type":574,"value":1040}," (",{"type":569,"tag":596,"props":1042,"children":1043},{"style":716},[1044],{"type":574,"value":1045},"num1",{"type":569,"tag":596,"props":1047,"children":1048},{"style":722},[1049],{"type":574,"value":1050},",",{"type":569,"tag":596,"props":1052,"children":1053},{"style":716},[1054],{"type":574,"value":1055}," num2",{"type":569,"tag":596,"props":1057,"children":1058},{"style":722},[1059],{"type":574,"value":1060},")",{"type":569,"tag":596,"props":1062,"children":1063},{"style":722},[1064],{"type":574,"value":1065}," {\n",{"type":569,"tag":596,"props":1067,"children":1069},{"class":598,"line":1068},7,[1070,1075,1080,1084,1089,1093,1098,1103,1108,1113,1119],{"type":569,"tag":596,"props":1071,"children":1072},{"style":1016},[1073],{"type":574,"value":1074},"  let",{"type":569,"tag":596,"props":1076,"children":1077},{"style":716},[1078],{"type":574,"value":1079}," n1",{"type":569,"tag":596,"props":1081,"children":1082},{"style":722},[1083],{"type":574,"value":1030},{"type":569,"tag":596,"props":1085,"children":1086},{"style":716},[1087],{"type":574,"value":1088}," num1",{"type":569,"tag":596,"props":1090,"children":1091},{"style":722},[1092],{"type":574,"value":725},{"type":569,"tag":596,"props":1094,"children":1095},{"style":1022},[1096],{"type":574,"value":1097},"toString",{"type":569,"tag":596,"props":1099,"children":1100},{"style":722},[1101],{"type":574,"value":1102},"().",{"type":569,"tag":596,"props":1104,"children":1105},{"style":1022},[1106],{"type":574,"value":1107},"split",{"type":569,"tag":596,"props":1109,"children":1110},{"style":722},[1111],{"type":574,"value":1112},"(",{"type":569,"tag":596,"props":1114,"children":1116},{"style":1115},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1117],{"type":574,"value":1118},"\"\"",{"type":569,"tag":596,"props":1120,"children":1121},{"style":722},[1122],{"type":574,"value":1123},");\n",{"type":569,"tag":596,"props":1125,"children":1127},{"class":598,"line":1126},8,[1128,1132,1137,1141,1145,1149,1153,1157,1161,1165,1169],{"type":569,"tag":596,"props":1129,"children":1130},{"style":1016},[1131],{"type":574,"value":1074},{"type":569,"tag":596,"props":1133,"children":1134},{"style":716},[1135],{"type":574,"value":1136}," n2",{"type":569,"tag":596,"props":1138,"children":1139},{"style":722},[1140],{"type":574,"value":1030},{"type":569,"tag":596,"props":1142,"children":1143},{"style":716},[1144],{"type":574,"value":1055},{"type":569,"tag":596,"props":1146,"children":1147},{"style":722},[1148],{"type":574,"value":725},{"type":569,"tag":596,"props":1150,"children":1151},{"style":1022},[1152],{"type":574,"value":1097},{"type":569,"tag":596,"props":1154,"children":1155},{"style":722},[1156],{"type":574,"value":1102},{"type":569,"tag":596,"props":1158,"children":1159},{"style":1022},[1160],{"type":574,"value":1107},{"type":569,"tag":596,"props":1162,"children":1163},{"style":722},[1164],{"type":574,"value":1112},{"type":569,"tag":596,"props":1166,"children":1167},{"style":1115},[1168],{"type":574,"value":1118},{"type":569,"tag":596,"props":1170,"children":1171},{"style":722},[1172],{"type":574,"value":1123},{"type":569,"tag":596,"props":1174,"children":1176},{"class":598,"line":1175},9,[1177,1181,1186,1190,1195],{"type":569,"tag":596,"props":1178,"children":1179},{"style":1016},[1180],{"type":574,"value":1074},{"type":569,"tag":596,"props":1182,"children":1183},{"style":716},[1184],{"type":574,"value":1185}," res",{"type":569,"tag":596,"props":1187,"children":1188},{"style":722},[1189],{"type":574,"value":1030},{"type":569,"tag":596,"props":1191,"children":1192},{"style":1115},[1193],{"type":574,"value":1194}," \"\"",{"type":569,"tag":596,"props":1196,"children":1197},{"style":722},[1198],{"type":574,"value":1199},";\n",{"type":569,"tag":596,"props":1201,"children":1203},{"class":598,"line":1202},10,[1204,1208,1213,1217,1223],{"type":569,"tag":596,"props":1205,"children":1206},{"style":1016},[1207],{"type":574,"value":1074},{"type":569,"tag":596,"props":1209,"children":1210},{"style":716},[1211],{"type":574,"value":1212}," temp",{"type":569,"tag":596,"props":1214,"children":1215},{"style":722},[1216],{"type":574,"value":1030},{"type":569,"tag":596,"props":1218,"children":1220},{"style":1219},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1221],{"type":574,"value":1222}," 0",{"type":569,"tag":596,"props":1224,"children":1225},{"style":722},[1226],{"type":574,"value":1199},{"type":569,"tag":596,"props":1228,"children":1230},{"class":598,"line":1229},11,[1231,1236,1240,1245,1249,1255,1260,1264,1268,1272,1276,1280,1284],{"type":569,"tag":596,"props":1232,"children":1233},{"style":915},[1234],{"type":574,"value":1235},"  while",{"type":569,"tag":596,"props":1237,"children":1238},{"style":722},[1239],{"type":574,"value":1040},{"type":569,"tag":596,"props":1241,"children":1242},{"style":716},[1243],{"type":574,"value":1244},"n1",{"type":569,"tag":596,"props":1246,"children":1247},{"style":722},[1248],{"type":574,"value":725},{"type":569,"tag":596,"props":1250,"children":1252},{"style":1251},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1253],{"type":574,"value":1254},"length",{"type":569,"tag":596,"props":1256,"children":1257},{"style":1016},[1258],{"type":574,"value":1259}," ||",{"type":569,"tag":596,"props":1261,"children":1262},{"style":716},[1263],{"type":574,"value":1136},{"type":569,"tag":596,"props":1265,"children":1266},{"style":722},[1267],{"type":574,"value":725},{"type":569,"tag":596,"props":1269,"children":1270},{"style":1251},[1271],{"type":574,"value":1254},{"type":569,"tag":596,"props":1273,"children":1274},{"style":1016},[1275],{"type":574,"value":1259},{"type":569,"tag":596,"props":1277,"children":1278},{"style":716},[1279],{"type":574,"value":1212},{"type":569,"tag":596,"props":1281,"children":1282},{"style":722},[1283],{"type":574,"value":1060},{"type":569,"tag":596,"props":1285,"children":1286},{"style":722},[1287],{"type":574,"value":1065},{"type":569,"tag":596,"props":1289,"children":1291},{"class":598,"line":1290},12,[1292,1297,1302,1307,1311,1315,1320,1325,1330,1334,1339,1343,1347],{"type":569,"tag":596,"props":1293,"children":1294},{"style":716},[1295],{"type":574,"value":1296},"    temp",{"type":569,"tag":596,"props":1298,"children":1299},{"style":1016},[1300],{"type":574,"value":1301}," +=",{"type":569,"tag":596,"props":1303,"children":1304},{"style":1016},[1305],{"type":574,"value":1306}," ~~",{"type":569,"tag":596,"props":1308,"children":1309},{"style":716},[1310],{"type":574,"value":1244},{"type":569,"tag":596,"props":1312,"children":1313},{"style":722},[1314],{"type":574,"value":725},{"type":569,"tag":596,"props":1316,"children":1317},{"style":1022},[1318],{"type":574,"value":1319},"pop",{"type":569,"tag":596,"props":1321,"children":1322},{"style":722},[1323],{"type":574,"value":1324},"()",{"type":569,"tag":596,"props":1326,"children":1327},{"style":1016},[1328],{"type":574,"value":1329}," +",{"type":569,"tag":596,"props":1331,"children":1332},{"style":1016},[1333],{"type":574,"value":1306},{"type":569,"tag":596,"props":1335,"children":1336},{"style":716},[1337],{"type":574,"value":1338},"n2",{"type":569,"tag":596,"props":1340,"children":1341},{"style":722},[1342],{"type":574,"value":725},{"type":569,"tag":596,"props":1344,"children":1345},{"style":1022},[1346],{"type":574,"value":1319},{"type":569,"tag":596,"props":1348,"children":1349},{"style":722},[1350],{"type":574,"value":1351},"();\n",{"type":569,"tag":596,"props":1353,"children":1355},{"class":598,"line":1354},13,[1356,1361,1365,1369,1374,1379],{"type":569,"tag":596,"props":1357,"children":1358},{"style":716},[1359],{"type":574,"value":1360},"    res",{"type":569,"tag":596,"props":1362,"children":1363},{"style":1016},[1364],{"type":574,"value":1301},{"type":569,"tag":596,"props":1366,"children":1367},{"style":716},[1368],{"type":574,"value":1212},{"type":569,"tag":596,"props":1370,"children":1371},{"style":1016},[1372],{"type":574,"value":1373}," %",{"type":569,"tag":596,"props":1375,"children":1376},{"style":1219},[1377],{"type":574,"value":1378}," 10",{"type":569,"tag":596,"props":1380,"children":1381},{"style":722},[1382],{"type":574,"value":1199},{"type":569,"tag":596,"props":1384,"children":1386},{"class":598,"line":1385},14,[1387,1391,1395,1399,1404,1409],{"type":569,"tag":596,"props":1388,"children":1389},{"style":716},[1390],{"type":574,"value":1296},{"type":569,"tag":596,"props":1392,"children":1393},{"style":722},[1394],{"type":574,"value":1030},{"type":569,"tag":596,"props":1396,"children":1397},{"style":716},[1398],{"type":574,"value":1212},{"type":569,"tag":596,"props":1400,"children":1401},{"style":722},[1402],{"type":574,"value":1403}," >",{"type":569,"tag":596,"props":1405,"children":1406},{"style":1219},[1407],{"type":574,"value":1408}," 9",{"type":569,"tag":596,"props":1410,"children":1411},{"style":722},[1412],{"type":574,"value":1199},{"type":569,"tag":596,"props":1414,"children":1416},{"class":598,"line":1415},15,[1417],{"type":569,"tag":596,"props":1418,"children":1419},{"style":722},[1420],{"type":574,"value":1421},"  }\n",{"type":569,"tag":596,"props":1423,"children":1425},{"class":598,"line":1424},16,[1426,1431,1435,1439,1443,1447,1451,1456,1461,1465,1470,1474,1478],{"type":569,"tag":596,"props":1427,"children":1428},{"style":915},[1429],{"type":574,"value":1430},"  return",{"type":569,"tag":596,"props":1432,"children":1433},{"style":716},[1434],{"type":574,"value":1185},{"type":569,"tag":596,"props":1436,"children":1437},{"style":722},[1438],{"type":574,"value":725},{"type":569,"tag":596,"props":1440,"children":1441},{"style":1022},[1442],{"type":574,"value":1107},{"type":569,"tag":596,"props":1444,"children":1445},{"style":722},[1446],{"type":574,"value":1112},{"type":569,"tag":596,"props":1448,"children":1449},{"style":1115},[1450],{"type":574,"value":1118},{"type":569,"tag":596,"props":1452,"children":1453},{"style":722},[1454],{"type":574,"value":1455},").",{"type":569,"tag":596,"props":1457,"children":1458},{"style":1022},[1459],{"type":574,"value":1460},"reverse",{"type":569,"tag":596,"props":1462,"children":1463},{"style":722},[1464],{"type":574,"value":1102},{"type":569,"tag":596,"props":1466,"children":1467},{"style":1022},[1468],{"type":574,"value":1469},"join",{"type":569,"tag":596,"props":1471,"children":1472},{"style":722},[1473],{"type":574,"value":1112},{"type":569,"tag":596,"props":1475,"children":1476},{"style":1115},[1477],{"type":574,"value":1118},{"type":569,"tag":596,"props":1479,"children":1480},{"style":722},[1481],{"type":574,"value":1123},{"type":569,"tag":596,"props":1483,"children":1485},{"class":598,"line":1484},17,[1486],{"type":569,"tag":596,"props":1487,"children":1488},{"style":722},[1489],{"type":574,"value":1490},"};\n",{"type":569,"tag":1492,"props":1493,"children":1494},"style",{},[1495],{"type":574,"value":1496},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":1003,"depth":1003,"links":1498},[1499,1500],{"id":699,"depth":608,"text":699},{"id":876,"depth":608,"text":876,"children":1501},[1502],{"id":882,"depth":770,"text":882},"markdown","content:1.algorithm:3.leetcode:3.major:415.add-strings.md","content","1.algorithm/3.leetcode/3.major/415.add-strings.md","md",[1509,1511],{"_path":234,"title":233,"description":1510},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":240,"title":239,"description":1512},"给你一个字符数组 chars ，请使用下述算法压缩：",1717734307918]