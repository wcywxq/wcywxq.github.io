[{"data":1,"prerenderedAt":1457},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-strings":503,"/algorithm/leetcode/major/add-strings-surround":1452},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":234,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":233,"description":507,"url":508,"body":509,"_type":1447,"_id":1448,"_source":1449,"_file":1450,"_extension":1451},"major",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":510,"children":511,"toc":1441},"root",[512,519,524,529,559,564,587,592,615,620,640,646,764,785,790,818,823,829,1435],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522],{"type":518,"value":523},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":513,"tag":514,"props":525,"children":526},{},[527],{"type":518,"value":528},"示例 1：",{"type":513,"tag":530,"props":531,"children":534},"pre",{"className":532,"code":533,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[535],{"type":513,"tag":536,"props":537,"children":538},"code",{"__ignoreMap":506},[539,550],{"type":513,"tag":540,"props":541,"children":544},"span",{"class":542,"line":543},"line",1,[545],{"type":513,"tag":540,"props":546,"children":547},{},[548],{"type":518,"value":549},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":513,"tag":540,"props":551,"children":553},{"class":542,"line":552},2,[554],{"type":513,"tag":540,"props":555,"children":556},{},[557],{"type":518,"value":558},"输出：\"134\"\n",{"type":513,"tag":514,"props":560,"children":561},{},[562],{"type":518,"value":563},"示例 2：",{"type":513,"tag":530,"props":565,"children":567},{"className":532,"code":566,"language":518,"meta":506,"style":506},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[568],{"type":513,"tag":536,"props":569,"children":570},{"__ignoreMap":506},[571,579],{"type":513,"tag":540,"props":572,"children":573},{"class":542,"line":543},[574],{"type":513,"tag":540,"props":575,"children":576},{},[577],{"type":518,"value":578},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":513,"tag":540,"props":580,"children":581},{"class":542,"line":552},[582],{"type":513,"tag":540,"props":583,"children":584},{},[585],{"type":518,"value":586},"输出：\"533\"\n",{"type":513,"tag":514,"props":588,"children":589},{},[590],{"type":518,"value":591},"示例 3：",{"type":513,"tag":530,"props":593,"children":595},{"className":532,"code":594,"language":518,"meta":506,"style":506},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[596],{"type":513,"tag":536,"props":597,"children":598},{"__ignoreMap":506},[599,607],{"type":513,"tag":540,"props":600,"children":601},{"class":542,"line":543},[602],{"type":513,"tag":540,"props":603,"children":604},{},[605],{"type":518,"value":606},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":513,"tag":540,"props":608,"children":609},{"class":542,"line":552},[610],{"type":513,"tag":540,"props":611,"children":612},{},[613],{"type":518,"value":614},"输出：\"0\"\n",{"type":513,"tag":514,"props":616,"children":617},{},[618],{"type":518,"value":619},"提示：",{"type":513,"tag":621,"props":622,"children":623},"ul",{},[624,630,635],{"type":513,"tag":625,"props":626,"children":627},"li",{},[628],{"type":518,"value":629},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":513,"tag":625,"props":631,"children":632},{},[633],{"type":518,"value":634},"num1 和 num2 都只包含数字 0-9",{"type":513,"tag":625,"props":636,"children":637},{},[638],{"type":518,"value":639},"num1 和 num2 都不包含任何前导零",{"type":513,"tag":641,"props":642,"children":644},"h2",{"id":643},"解题思路",[645],{"type":518,"value":643},{"type":513,"tag":530,"props":647,"children":651},{"className":648,"code":649,"language":650,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[652],{"type":513,"tag":536,"props":653,"children":654},{"__ignoreMap":506},[655,687,712,738],{"type":513,"tag":540,"props":656,"children":657},{"class":542,"line":543},[658,664,670,676,681],{"type":513,"tag":540,"props":659,"children":661},{"style":660},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[662],{"type":518,"value":663},"Number",{"type":513,"tag":540,"props":665,"children":667},{"style":666},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[668],{"type":518,"value":669},".",{"type":513,"tag":540,"props":671,"children":673},{"style":672},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[674],{"type":518,"value":675},"MAX_VALUE",{"type":513,"tag":540,"props":677,"children":678},{"style":666},[679],{"type":518,"value":680},";",{"type":513,"tag":540,"props":682,"children":684},{"style":683},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[685],{"type":518,"value":686}," // 1.7976931348623157e+308\n",{"type":513,"tag":540,"props":688,"children":689},{"class":542,"line":552},[690,694,698,703,707],{"type":513,"tag":540,"props":691,"children":692},{"style":660},[693],{"type":518,"value":663},{"type":513,"tag":540,"props":695,"children":696},{"style":666},[697],{"type":518,"value":669},{"type":513,"tag":540,"props":699,"children":700},{"style":672},[701],{"type":518,"value":702},"MAX_SAFE_INTEGER",{"type":513,"tag":540,"props":704,"children":705},{"style":666},[706],{"type":518,"value":680},{"type":513,"tag":540,"props":708,"children":709},{"style":683},[710],{"type":518,"value":711}," // 9007199254740991\n",{"type":513,"tag":540,"props":713,"children":715},{"class":542,"line":714},3,[716,720,724,729,733],{"type":513,"tag":540,"props":717,"children":718},{"style":660},[719],{"type":518,"value":663},{"type":513,"tag":540,"props":721,"children":722},{"style":666},[723],{"type":518,"value":669},{"type":513,"tag":540,"props":725,"children":726},{"style":672},[727],{"type":518,"value":728},"MIN_VALUE",{"type":513,"tag":540,"props":730,"children":731},{"style":666},[732],{"type":518,"value":680},{"type":513,"tag":540,"props":734,"children":735},{"style":683},[736],{"type":518,"value":737}," // 5e-324\n",{"type":513,"tag":540,"props":739,"children":741},{"class":542,"line":740},4,[742,746,750,755,759],{"type":513,"tag":540,"props":743,"children":744},{"style":660},[745],{"type":518,"value":663},{"type":513,"tag":540,"props":747,"children":748},{"style":666},[749],{"type":518,"value":669},{"type":513,"tag":540,"props":751,"children":752},{"style":672},[753],{"type":518,"value":754},"MIN_SAFE_INTEGER",{"type":513,"tag":540,"props":756,"children":757},{"style":666},[758],{"type":518,"value":680},{"type":513,"tag":540,"props":760,"children":761},{"style":683},[762],{"type":518,"value":763}," // -9007199254740991\n",{"type":513,"tag":514,"props":765,"children":766},{},[767,769,775,777,783],{"type":518,"value":768},"如果想要对一个超大的整数 ",{"type":513,"tag":536,"props":770,"children":772},{"className":771},[],[773],{"type":518,"value":774},"> Number.MAX_SAFE_INTEGER",{"type":518,"value":776}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":513,"tag":536,"props":778,"children":780},{"className":779},[],[781],{"type":518,"value":782},"Number.MAX_SAFE_INTEGER",{"type":518,"value":784}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":513,"tag":514,"props":786,"children":787},{},[788],{"type":518,"value":789},"使用算法实现大数相加：",{"type":513,"tag":621,"props":791,"children":792},{},[793,798,803,808,813],{"type":513,"tag":625,"props":794,"children":795},{},[796],{"type":518,"value":797},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":513,"tag":625,"props":799,"children":800},{},[801],{"type":518,"value":802},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":513,"tag":625,"props":804,"children":805},{},[806],{"type":518,"value":807},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":513,"tag":625,"props":809,"children":810},{},[811],{"type":518,"value":812},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":513,"tag":625,"props":814,"children":815},{},[816],{"type":518,"value":817},"重复以上操作，直到计算出结果；",{"type":513,"tag":641,"props":819,"children":821},{"id":820},"实现",[822],{"type":518,"value":820},{"type":513,"tag":824,"props":825,"children":827},"h3",{"id":826},"大数相加",[828],{"type":518,"value":826},{"type":513,"tag":530,"props":830,"children":832},{"className":648,"code":831,"language":650,"meta":506,"style":506},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[833],{"type":513,"tag":536,"props":834,"children":835},{"__ignoreMap":506},[836,844,884,916,945,954,1010,1068,1117,1144,1171,1232,1296,1327,1357,1366,1426],{"type":513,"tag":540,"props":837,"children":838},{"class":542,"line":543},[839],{"type":513,"tag":540,"props":840,"children":841},{"style":683},[842],{"type":518,"value":843},"/**\n",{"type":513,"tag":540,"props":845,"children":846},{"class":542,"line":552},[847,852,857,863,868,874,879],{"type":513,"tag":540,"props":848,"children":849},{"style":683},[850],{"type":518,"value":851}," * ",{"type":513,"tag":540,"props":853,"children":854},{"style":666},[855],{"type":518,"value":856},"@",{"type":513,"tag":540,"props":858,"children":860},{"style":859},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[861],{"type":518,"value":862},"param",{"type":513,"tag":540,"props":864,"children":865},{"style":666},[866],{"type":518,"value":867}," {",{"type":513,"tag":540,"props":869,"children":871},{"style":870},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[872],{"type":518,"value":873},"string",{"type":513,"tag":540,"props":875,"children":876},{"style":666},[877],{"type":518,"value":878},"}",{"type":513,"tag":540,"props":880,"children":881},{"style":660},[882],{"type":518,"value":883}," num1\n",{"type":513,"tag":540,"props":885,"children":886},{"class":542,"line":714},[887,891,895,899,903,907,911],{"type":513,"tag":540,"props":888,"children":889},{"style":683},[890],{"type":518,"value":851},{"type":513,"tag":540,"props":892,"children":893},{"style":666},[894],{"type":518,"value":856},{"type":513,"tag":540,"props":896,"children":897},{"style":859},[898],{"type":518,"value":862},{"type":513,"tag":540,"props":900,"children":901},{"style":666},[902],{"type":518,"value":867},{"type":513,"tag":540,"props":904,"children":905},{"style":870},[906],{"type":518,"value":873},{"type":513,"tag":540,"props":908,"children":909},{"style":666},[910],{"type":518,"value":878},{"type":513,"tag":540,"props":912,"children":913},{"style":660},[914],{"type":518,"value":915}," num2\n",{"type":513,"tag":540,"props":917,"children":918},{"class":542,"line":740},[919,923,927,932,936,940],{"type":513,"tag":540,"props":920,"children":921},{"style":683},[922],{"type":518,"value":851},{"type":513,"tag":540,"props":924,"children":925},{"style":666},[926],{"type":518,"value":856},{"type":513,"tag":540,"props":928,"children":929},{"style":859},[930],{"type":518,"value":931},"return",{"type":513,"tag":540,"props":933,"children":934},{"style":666},[935],{"type":518,"value":867},{"type":513,"tag":540,"props":937,"children":938},{"style":870},[939],{"type":518,"value":873},{"type":513,"tag":540,"props":941,"children":942},{"style":666},[943],{"type":518,"value":944},"}\n",{"type":513,"tag":540,"props":946,"children":948},{"class":542,"line":947},5,[949],{"type":513,"tag":540,"props":950,"children":951},{"style":683},[952],{"type":518,"value":953}," */\n",{"type":513,"tag":540,"props":955,"children":957},{"class":542,"line":956},6,[958,964,970,975,980,985,990,995,1000,1005],{"type":513,"tag":540,"props":959,"children":961},{"style":960},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[962],{"type":518,"value":963},"var",{"type":513,"tag":540,"props":965,"children":967},{"style":966},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[968],{"type":518,"value":969}," addStrings",{"type":513,"tag":540,"props":971,"children":972},{"style":666},[973],{"type":518,"value":974}," =",{"type":513,"tag":540,"props":976,"children":977},{"style":960},[978],{"type":518,"value":979}," function",{"type":513,"tag":540,"props":981,"children":982},{"style":666},[983],{"type":518,"value":984}," (",{"type":513,"tag":540,"props":986,"children":987},{"style":660},[988],{"type":518,"value":989},"num1",{"type":513,"tag":540,"props":991,"children":992},{"style":666},[993],{"type":518,"value":994},",",{"type":513,"tag":540,"props":996,"children":997},{"style":660},[998],{"type":518,"value":999}," num2",{"type":513,"tag":540,"props":1001,"children":1002},{"style":666},[1003],{"type":518,"value":1004},")",{"type":513,"tag":540,"props":1006,"children":1007},{"style":666},[1008],{"type":518,"value":1009}," {\n",{"type":513,"tag":540,"props":1011,"children":1013},{"class":542,"line":1012},7,[1014,1019,1024,1028,1033,1037,1042,1047,1052,1057,1063],{"type":513,"tag":540,"props":1015,"children":1016},{"style":960},[1017],{"type":518,"value":1018},"  let",{"type":513,"tag":540,"props":1020,"children":1021},{"style":660},[1022],{"type":518,"value":1023}," n1",{"type":513,"tag":540,"props":1025,"children":1026},{"style":666},[1027],{"type":518,"value":974},{"type":513,"tag":540,"props":1029,"children":1030},{"style":660},[1031],{"type":518,"value":1032}," num1",{"type":513,"tag":540,"props":1034,"children":1035},{"style":666},[1036],{"type":518,"value":669},{"type":513,"tag":540,"props":1038,"children":1039},{"style":966},[1040],{"type":518,"value":1041},"toString",{"type":513,"tag":540,"props":1043,"children":1044},{"style":666},[1045],{"type":518,"value":1046},"().",{"type":513,"tag":540,"props":1048,"children":1049},{"style":966},[1050],{"type":518,"value":1051},"split",{"type":513,"tag":540,"props":1053,"children":1054},{"style":666},[1055],{"type":518,"value":1056},"(",{"type":513,"tag":540,"props":1058,"children":1060},{"style":1059},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1061],{"type":518,"value":1062},"\"\"",{"type":513,"tag":540,"props":1064,"children":1065},{"style":666},[1066],{"type":518,"value":1067},");\n",{"type":513,"tag":540,"props":1069,"children":1071},{"class":542,"line":1070},8,[1072,1076,1081,1085,1089,1093,1097,1101,1105,1109,1113],{"type":513,"tag":540,"props":1073,"children":1074},{"style":960},[1075],{"type":518,"value":1018},{"type":513,"tag":540,"props":1077,"children":1078},{"style":660},[1079],{"type":518,"value":1080}," n2",{"type":513,"tag":540,"props":1082,"children":1083},{"style":666},[1084],{"type":518,"value":974},{"type":513,"tag":540,"props":1086,"children":1087},{"style":660},[1088],{"type":518,"value":999},{"type":513,"tag":540,"props":1090,"children":1091},{"style":666},[1092],{"type":518,"value":669},{"type":513,"tag":540,"props":1094,"children":1095},{"style":966},[1096],{"type":518,"value":1041},{"type":513,"tag":540,"props":1098,"children":1099},{"style":666},[1100],{"type":518,"value":1046},{"type":513,"tag":540,"props":1102,"children":1103},{"style":966},[1104],{"type":518,"value":1051},{"type":513,"tag":540,"props":1106,"children":1107},{"style":666},[1108],{"type":518,"value":1056},{"type":513,"tag":540,"props":1110,"children":1111},{"style":1059},[1112],{"type":518,"value":1062},{"type":513,"tag":540,"props":1114,"children":1115},{"style":666},[1116],{"type":518,"value":1067},{"type":513,"tag":540,"props":1118,"children":1120},{"class":542,"line":1119},9,[1121,1125,1130,1134,1139],{"type":513,"tag":540,"props":1122,"children":1123},{"style":960},[1124],{"type":518,"value":1018},{"type":513,"tag":540,"props":1126,"children":1127},{"style":660},[1128],{"type":518,"value":1129}," res",{"type":513,"tag":540,"props":1131,"children":1132},{"style":666},[1133],{"type":518,"value":974},{"type":513,"tag":540,"props":1135,"children":1136},{"style":1059},[1137],{"type":518,"value":1138}," \"\"",{"type":513,"tag":540,"props":1140,"children":1141},{"style":666},[1142],{"type":518,"value":1143},";\n",{"type":513,"tag":540,"props":1145,"children":1147},{"class":542,"line":1146},10,[1148,1152,1157,1161,1167],{"type":513,"tag":540,"props":1149,"children":1150},{"style":960},[1151],{"type":518,"value":1018},{"type":513,"tag":540,"props":1153,"children":1154},{"style":660},[1155],{"type":518,"value":1156}," temp",{"type":513,"tag":540,"props":1158,"children":1159},{"style":666},[1160],{"type":518,"value":974},{"type":513,"tag":540,"props":1162,"children":1164},{"style":1163},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1165],{"type":518,"value":1166}," 0",{"type":513,"tag":540,"props":1168,"children":1169},{"style":666},[1170],{"type":518,"value":1143},{"type":513,"tag":540,"props":1172,"children":1174},{"class":542,"line":1173},11,[1175,1180,1184,1189,1193,1199,1204,1208,1212,1216,1220,1224,1228],{"type":513,"tag":540,"props":1176,"children":1177},{"style":859},[1178],{"type":518,"value":1179},"  while",{"type":513,"tag":540,"props":1181,"children":1182},{"style":666},[1183],{"type":518,"value":984},{"type":513,"tag":540,"props":1185,"children":1186},{"style":660},[1187],{"type":518,"value":1188},"n1",{"type":513,"tag":540,"props":1190,"children":1191},{"style":666},[1192],{"type":518,"value":669},{"type":513,"tag":540,"props":1194,"children":1196},{"style":1195},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1197],{"type":518,"value":1198},"length",{"type":513,"tag":540,"props":1200,"children":1201},{"style":960},[1202],{"type":518,"value":1203}," ||",{"type":513,"tag":540,"props":1205,"children":1206},{"style":660},[1207],{"type":518,"value":1080},{"type":513,"tag":540,"props":1209,"children":1210},{"style":666},[1211],{"type":518,"value":669},{"type":513,"tag":540,"props":1213,"children":1214},{"style":1195},[1215],{"type":518,"value":1198},{"type":513,"tag":540,"props":1217,"children":1218},{"style":960},[1219],{"type":518,"value":1203},{"type":513,"tag":540,"props":1221,"children":1222},{"style":660},[1223],{"type":518,"value":1156},{"type":513,"tag":540,"props":1225,"children":1226},{"style":666},[1227],{"type":518,"value":1004},{"type":513,"tag":540,"props":1229,"children":1230},{"style":666},[1231],{"type":518,"value":1009},{"type":513,"tag":540,"props":1233,"children":1235},{"class":542,"line":1234},12,[1236,1241,1246,1251,1255,1259,1264,1269,1274,1278,1283,1287,1291],{"type":513,"tag":540,"props":1237,"children":1238},{"style":660},[1239],{"type":518,"value":1240},"    temp",{"type":513,"tag":540,"props":1242,"children":1243},{"style":960},[1244],{"type":518,"value":1245}," +=",{"type":513,"tag":540,"props":1247,"children":1248},{"style":960},[1249],{"type":518,"value":1250}," ~~",{"type":513,"tag":540,"props":1252,"children":1253},{"style":660},[1254],{"type":518,"value":1188},{"type":513,"tag":540,"props":1256,"children":1257},{"style":666},[1258],{"type":518,"value":669},{"type":513,"tag":540,"props":1260,"children":1261},{"style":966},[1262],{"type":518,"value":1263},"pop",{"type":513,"tag":540,"props":1265,"children":1266},{"style":666},[1267],{"type":518,"value":1268},"()",{"type":513,"tag":540,"props":1270,"children":1271},{"style":960},[1272],{"type":518,"value":1273}," +",{"type":513,"tag":540,"props":1275,"children":1276},{"style":960},[1277],{"type":518,"value":1250},{"type":513,"tag":540,"props":1279,"children":1280},{"style":660},[1281],{"type":518,"value":1282},"n2",{"type":513,"tag":540,"props":1284,"children":1285},{"style":666},[1286],{"type":518,"value":669},{"type":513,"tag":540,"props":1288,"children":1289},{"style":966},[1290],{"type":518,"value":1263},{"type":513,"tag":540,"props":1292,"children":1293},{"style":666},[1294],{"type":518,"value":1295},"();\n",{"type":513,"tag":540,"props":1297,"children":1299},{"class":542,"line":1298},13,[1300,1305,1309,1313,1318,1323],{"type":513,"tag":540,"props":1301,"children":1302},{"style":660},[1303],{"type":518,"value":1304},"    res",{"type":513,"tag":540,"props":1306,"children":1307},{"style":960},[1308],{"type":518,"value":1245},{"type":513,"tag":540,"props":1310,"children":1311},{"style":660},[1312],{"type":518,"value":1156},{"type":513,"tag":540,"props":1314,"children":1315},{"style":960},[1316],{"type":518,"value":1317}," %",{"type":513,"tag":540,"props":1319,"children":1320},{"style":1163},[1321],{"type":518,"value":1322}," 10",{"type":513,"tag":540,"props":1324,"children":1325},{"style":666},[1326],{"type":518,"value":1143},{"type":513,"tag":540,"props":1328,"children":1330},{"class":542,"line":1329},14,[1331,1335,1339,1343,1348,1353],{"type":513,"tag":540,"props":1332,"children":1333},{"style":660},[1334],{"type":518,"value":1240},{"type":513,"tag":540,"props":1336,"children":1337},{"style":666},[1338],{"type":518,"value":974},{"type":513,"tag":540,"props":1340,"children":1341},{"style":660},[1342],{"type":518,"value":1156},{"type":513,"tag":540,"props":1344,"children":1345},{"style":666},[1346],{"type":518,"value":1347}," >",{"type":513,"tag":540,"props":1349,"children":1350},{"style":1163},[1351],{"type":518,"value":1352}," 9",{"type":513,"tag":540,"props":1354,"children":1355},{"style":666},[1356],{"type":518,"value":1143},{"type":513,"tag":540,"props":1358,"children":1360},{"class":542,"line":1359},15,[1361],{"type":513,"tag":540,"props":1362,"children":1363},{"style":666},[1364],{"type":518,"value":1365},"  }\n",{"type":513,"tag":540,"props":1367,"children":1369},{"class":542,"line":1368},16,[1370,1375,1379,1383,1387,1391,1395,1400,1405,1409,1414,1418,1422],{"type":513,"tag":540,"props":1371,"children":1372},{"style":859},[1373],{"type":518,"value":1374},"  return",{"type":513,"tag":540,"props":1376,"children":1377},{"style":660},[1378],{"type":518,"value":1129},{"type":513,"tag":540,"props":1380,"children":1381},{"style":666},[1382],{"type":518,"value":669},{"type":513,"tag":540,"props":1384,"children":1385},{"style":966},[1386],{"type":518,"value":1051},{"type":513,"tag":540,"props":1388,"children":1389},{"style":666},[1390],{"type":518,"value":1056},{"type":513,"tag":540,"props":1392,"children":1393},{"style":1059},[1394],{"type":518,"value":1062},{"type":513,"tag":540,"props":1396,"children":1397},{"style":666},[1398],{"type":518,"value":1399},").",{"type":513,"tag":540,"props":1401,"children":1402},{"style":966},[1403],{"type":518,"value":1404},"reverse",{"type":513,"tag":540,"props":1406,"children":1407},{"style":666},[1408],{"type":518,"value":1046},{"type":513,"tag":540,"props":1410,"children":1411},{"style":966},[1412],{"type":518,"value":1413},"join",{"type":513,"tag":540,"props":1415,"children":1416},{"style":666},[1417],{"type":518,"value":1056},{"type":513,"tag":540,"props":1419,"children":1420},{"style":1059},[1421],{"type":518,"value":1062},{"type":513,"tag":540,"props":1423,"children":1424},{"style":666},[1425],{"type":518,"value":1067},{"type":513,"tag":540,"props":1427,"children":1429},{"class":542,"line":1428},17,[1430],{"type":513,"tag":540,"props":1431,"children":1432},{"style":666},[1433],{"type":518,"value":1434},"};\n",{"type":513,"tag":1436,"props":1437,"children":1438},"style",{},[1439],{"type":518,"value":1440},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":947,"depth":947,"links":1442},[1443,1444],{"id":643,"depth":552,"text":643},{"id":820,"depth":552,"text":820,"children":1445},[1446],{"id":826,"depth":714,"text":826},"markdown","content:1.algorithm:3.leetcode:3.major:415.add-strings.md","content","1.algorithm/3.leetcode/3.major/415.add-strings.md","md",[1453,1455],{"_path":231,"title":230,"description":1454},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":237,"title":236,"description":1456},"给你一个字符数组 chars ，请使用下述算法压缩：",1714056096371]