[{"data":1,"prerenderedAt":1404},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-strings":460,"/algorithm/leetcode/major/add-strings-surround":1399},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":228,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":227,"description":464,"url":465,"body":466,"_type":1394,"_id":1395,"_source":1396,"_file":1397,"_extension":1398},"major",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":467,"children":468,"toc":1388},"root",[469,476,481,486,516,521,544,549,572,577,597,603,722,743,748,776,781,787,1382],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"示例 1：",{"type":470,"tag":487,"props":488,"children":491},"pre",{"className":489,"code":490,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[492],{"type":470,"tag":493,"props":494,"children":495},"code",{"__ignoreMap":463},[496,507],{"type":470,"tag":497,"props":498,"children":501},"span",{"class":499,"line":500},"line",1,[502],{"type":470,"tag":497,"props":503,"children":504},{},[505],{"type":475,"value":506},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":470,"tag":497,"props":508,"children":510},{"class":499,"line":509},2,[511],{"type":470,"tag":497,"props":512,"children":513},{},[514],{"type":475,"value":515},"输出：\"134\"\n",{"type":470,"tag":471,"props":517,"children":518},{},[519],{"type":475,"value":520},"示例 2：",{"type":470,"tag":487,"props":522,"children":524},{"className":489,"code":523,"language":475,"meta":463,"style":463},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[525],{"type":470,"tag":493,"props":526,"children":527},{"__ignoreMap":463},[528,536],{"type":470,"tag":497,"props":529,"children":530},{"class":499,"line":500},[531],{"type":470,"tag":497,"props":532,"children":533},{},[534],{"type":475,"value":535},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":470,"tag":497,"props":537,"children":538},{"class":499,"line":509},[539],{"type":470,"tag":497,"props":540,"children":541},{},[542],{"type":475,"value":543},"输出：\"533\"\n",{"type":470,"tag":471,"props":545,"children":546},{},[547],{"type":475,"value":548},"示例 3：",{"type":470,"tag":487,"props":550,"children":552},{"className":489,"code":551,"language":475,"meta":463,"style":463},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[553],{"type":470,"tag":493,"props":554,"children":555},{"__ignoreMap":463},[556,564],{"type":470,"tag":497,"props":557,"children":558},{"class":499,"line":500},[559],{"type":470,"tag":497,"props":560,"children":561},{},[562],{"type":475,"value":563},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":470,"tag":497,"props":565,"children":566},{"class":499,"line":509},[567],{"type":470,"tag":497,"props":568,"children":569},{},[570],{"type":475,"value":571},"输出：\"0\"\n",{"type":470,"tag":471,"props":573,"children":574},{},[575],{"type":475,"value":576},"提示：",{"type":470,"tag":578,"props":579,"children":580},"ul",{},[581,587,592],{"type":470,"tag":582,"props":583,"children":584},"li",{},[585],{"type":475,"value":586},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":470,"tag":582,"props":588,"children":589},{},[590],{"type":475,"value":591},"num1 和 num2 都只包含数字 0-9",{"type":470,"tag":582,"props":593,"children":594},{},[595],{"type":475,"value":596},"num1 和 num2 都不包含任何前导零",{"type":470,"tag":598,"props":599,"children":601},"h2",{"id":600},"解题思路",[602],{"type":475,"value":600},{"type":470,"tag":487,"props":604,"children":608},{"className":605,"code":606,"language":607,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[609],{"type":470,"tag":493,"props":610,"children":611},{"__ignoreMap":463},[612,645,670,696],{"type":470,"tag":497,"props":613,"children":614},{"class":499,"line":500},[615,621,627,633,639],{"type":470,"tag":497,"props":616,"children":618},{"style":617},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[619],{"type":475,"value":620},"Number",{"type":470,"tag":497,"props":622,"children":624},{"style":623},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[625],{"type":475,"value":626},".",{"type":470,"tag":497,"props":628,"children":630},{"style":629},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[631],{"type":475,"value":632},"MAX_VALUE",{"type":470,"tag":497,"props":634,"children":636},{"style":635},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[637],{"type":475,"value":638},";",{"type":470,"tag":497,"props":640,"children":642},{"style":641},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[643],{"type":475,"value":644}," // 1.7976931348623157e+308\n",{"type":470,"tag":497,"props":646,"children":647},{"class":499,"line":509},[648,652,656,661,665],{"type":470,"tag":497,"props":649,"children":650},{"style":617},[651],{"type":475,"value":620},{"type":470,"tag":497,"props":653,"children":654},{"style":623},[655],{"type":475,"value":626},{"type":470,"tag":497,"props":657,"children":658},{"style":629},[659],{"type":475,"value":660},"MAX_SAFE_INTEGER",{"type":470,"tag":497,"props":662,"children":663},{"style":635},[664],{"type":475,"value":638},{"type":470,"tag":497,"props":666,"children":667},{"style":641},[668],{"type":475,"value":669}," // 9007199254740991\n",{"type":470,"tag":497,"props":671,"children":673},{"class":499,"line":672},3,[674,678,682,687,691],{"type":470,"tag":497,"props":675,"children":676},{"style":617},[677],{"type":475,"value":620},{"type":470,"tag":497,"props":679,"children":680},{"style":623},[681],{"type":475,"value":626},{"type":470,"tag":497,"props":683,"children":684},{"style":629},[685],{"type":475,"value":686},"MIN_VALUE",{"type":470,"tag":497,"props":688,"children":689},{"style":635},[690],{"type":475,"value":638},{"type":470,"tag":497,"props":692,"children":693},{"style":641},[694],{"type":475,"value":695}," // 5e-324\n",{"type":470,"tag":497,"props":697,"children":699},{"class":499,"line":698},4,[700,704,708,713,717],{"type":470,"tag":497,"props":701,"children":702},{"style":617},[703],{"type":475,"value":620},{"type":470,"tag":497,"props":705,"children":706},{"style":623},[707],{"type":475,"value":626},{"type":470,"tag":497,"props":709,"children":710},{"style":629},[711],{"type":475,"value":712},"MIN_SAFE_INTEGER",{"type":470,"tag":497,"props":714,"children":715},{"style":635},[716],{"type":475,"value":638},{"type":470,"tag":497,"props":718,"children":719},{"style":641},[720],{"type":475,"value":721}," // -9007199254740991\n",{"type":470,"tag":471,"props":723,"children":724},{},[725,727,733,735,741],{"type":475,"value":726},"如果想要对一个超大的整数 ",{"type":470,"tag":493,"props":728,"children":730},{"className":729},[],[731],{"type":475,"value":732},"> Number.MAX_SAFE_INTEGER",{"type":475,"value":734}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":470,"tag":493,"props":736,"children":738},{"className":737},[],[739],{"type":475,"value":740},"Number.MAX_SAFE_INTEGER",{"type":475,"value":742}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":470,"tag":471,"props":744,"children":745},{},[746],{"type":475,"value":747},"使用算法实现大数相加：",{"type":470,"tag":578,"props":749,"children":750},{},[751,756,761,766,771],{"type":470,"tag":582,"props":752,"children":753},{},[754],{"type":475,"value":755},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":470,"tag":582,"props":757,"children":758},{},[759],{"type":475,"value":760},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":470,"tag":582,"props":762,"children":763},{},[764],{"type":475,"value":765},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":470,"tag":582,"props":767,"children":768},{},[769],{"type":475,"value":770},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":470,"tag":582,"props":772,"children":773},{},[774],{"type":475,"value":775},"重复以上操作，直到计算出结果；",{"type":470,"tag":598,"props":777,"children":779},{"id":778},"实现",[780],{"type":475,"value":778},{"type":470,"tag":782,"props":783,"children":785},"h3",{"id":784},"大数相加",[786],{"type":475,"value":784},{"type":470,"tag":487,"props":788,"children":790},{"className":605,"code":789,"language":607,"meta":463,"style":463},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[791],{"type":470,"tag":493,"props":792,"children":793},{"__ignoreMap":463},[794,802,828,848,865,874,927,994,1051,1077,1104,1161,1228,1259,1289,1298,1369],{"type":470,"tag":497,"props":795,"children":796},{"class":499,"line":500},[797],{"type":470,"tag":497,"props":798,"children":799},{"style":641},[800],{"type":475,"value":801},"/**\n",{"type":470,"tag":497,"props":803,"children":804},{"class":499,"line":509},[805,810,816,822],{"type":470,"tag":497,"props":806,"children":807},{"style":641},[808],{"type":475,"value":809}," * ",{"type":470,"tag":497,"props":811,"children":813},{"style":812},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[814],{"type":475,"value":815},"@param",{"type":470,"tag":497,"props":817,"children":819},{"style":818},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[820],{"type":475,"value":821}," {string}",{"type":470,"tag":497,"props":823,"children":825},{"style":824},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[826],{"type":475,"value":827}," num1\n",{"type":470,"tag":497,"props":829,"children":830},{"class":499,"line":672},[831,835,839,843],{"type":470,"tag":497,"props":832,"children":833},{"style":641},[834],{"type":475,"value":809},{"type":470,"tag":497,"props":836,"children":837},{"style":812},[838],{"type":475,"value":815},{"type":470,"tag":497,"props":840,"children":841},{"style":818},[842],{"type":475,"value":821},{"type":470,"tag":497,"props":844,"children":845},{"style":824},[846],{"type":475,"value":847}," num2\n",{"type":470,"tag":497,"props":849,"children":850},{"class":499,"line":698},[851,855,860],{"type":470,"tag":497,"props":852,"children":853},{"style":641},[854],{"type":475,"value":809},{"type":470,"tag":497,"props":856,"children":857},{"style":812},[858],{"type":475,"value":859},"@return",{"type":470,"tag":497,"props":861,"children":862},{"style":818},[863],{"type":475,"value":864}," {string}\n",{"type":470,"tag":497,"props":866,"children":868},{"class":499,"line":867},5,[869],{"type":470,"tag":497,"props":870,"children":871},{"style":641},[872],{"type":475,"value":873}," */\n",{"type":470,"tag":497,"props":875,"children":877},{"class":499,"line":876},6,[878,884,890,896,901,906,912,917,922],{"type":470,"tag":497,"props":879,"children":881},{"style":880},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[882],{"type":475,"value":883},"var",{"type":470,"tag":497,"props":885,"children":887},{"style":886},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[888],{"type":475,"value":889}," addStrings",{"type":470,"tag":497,"props":891,"children":893},{"style":892},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[894],{"type":475,"value":895}," =",{"type":470,"tag":497,"props":897,"children":898},{"style":880},[899],{"type":475,"value":900}," function",{"type":470,"tag":497,"props":902,"children":903},{"style":629},[904],{"type":475,"value":905}," (",{"type":470,"tag":497,"props":907,"children":909},{"style":908},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[910],{"type":475,"value":911},"num1",{"type":470,"tag":497,"props":913,"children":914},{"style":635},[915],{"type":475,"value":916},",",{"type":470,"tag":497,"props":918,"children":919},{"style":908},[920],{"type":475,"value":921}," num2",{"type":470,"tag":497,"props":923,"children":924},{"style":629},[925],{"type":475,"value":926},") {\n",{"type":470,"tag":497,"props":928,"children":930},{"class":499,"line":929},7,[931,936,941,945,950,954,959,964,968,973,978,984,989],{"type":470,"tag":497,"props":932,"children":933},{"style":880},[934],{"type":475,"value":935},"  let",{"type":470,"tag":497,"props":937,"children":938},{"style":617},[939],{"type":475,"value":940}," n1",{"type":470,"tag":497,"props":942,"children":943},{"style":892},[944],{"type":475,"value":895},{"type":470,"tag":497,"props":946,"children":947},{"style":617},[948],{"type":475,"value":949}," num1",{"type":470,"tag":497,"props":951,"children":952},{"style":623},[953],{"type":475,"value":626},{"type":470,"tag":497,"props":955,"children":956},{"style":886},[957],{"type":475,"value":958},"toString",{"type":470,"tag":497,"props":960,"children":961},{"style":629},[962],{"type":475,"value":963},"()",{"type":470,"tag":497,"props":965,"children":966},{"style":623},[967],{"type":475,"value":626},{"type":470,"tag":497,"props":969,"children":970},{"style":886},[971],{"type":475,"value":972},"split",{"type":470,"tag":497,"props":974,"children":975},{"style":629},[976],{"type":475,"value":977},"(",{"type":470,"tag":497,"props":979,"children":981},{"style":980},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[982],{"type":475,"value":983},"\"\"",{"type":470,"tag":497,"props":985,"children":986},{"style":629},[987],{"type":475,"value":988},")",{"type":470,"tag":497,"props":990,"children":991},{"style":635},[992],{"type":475,"value":993},";\n",{"type":470,"tag":497,"props":995,"children":997},{"class":499,"line":996},8,[998,1002,1007,1011,1015,1019,1023,1027,1031,1035,1039,1043,1047],{"type":470,"tag":497,"props":999,"children":1000},{"style":880},[1001],{"type":475,"value":935},{"type":470,"tag":497,"props":1003,"children":1004},{"style":617},[1005],{"type":475,"value":1006}," n2",{"type":470,"tag":497,"props":1008,"children":1009},{"style":892},[1010],{"type":475,"value":895},{"type":470,"tag":497,"props":1012,"children":1013},{"style":617},[1014],{"type":475,"value":921},{"type":470,"tag":497,"props":1016,"children":1017},{"style":623},[1018],{"type":475,"value":626},{"type":470,"tag":497,"props":1020,"children":1021},{"style":886},[1022],{"type":475,"value":958},{"type":470,"tag":497,"props":1024,"children":1025},{"style":629},[1026],{"type":475,"value":963},{"type":470,"tag":497,"props":1028,"children":1029},{"style":623},[1030],{"type":475,"value":626},{"type":470,"tag":497,"props":1032,"children":1033},{"style":886},[1034],{"type":475,"value":972},{"type":470,"tag":497,"props":1036,"children":1037},{"style":629},[1038],{"type":475,"value":977},{"type":470,"tag":497,"props":1040,"children":1041},{"style":980},[1042],{"type":475,"value":983},{"type":470,"tag":497,"props":1044,"children":1045},{"style":629},[1046],{"type":475,"value":988},{"type":470,"tag":497,"props":1048,"children":1049},{"style":635},[1050],{"type":475,"value":993},{"type":470,"tag":497,"props":1052,"children":1054},{"class":499,"line":1053},9,[1055,1059,1064,1068,1073],{"type":470,"tag":497,"props":1056,"children":1057},{"style":880},[1058],{"type":475,"value":935},{"type":470,"tag":497,"props":1060,"children":1061},{"style":617},[1062],{"type":475,"value":1063}," res",{"type":470,"tag":497,"props":1065,"children":1066},{"style":892},[1067],{"type":475,"value":895},{"type":470,"tag":497,"props":1069,"children":1070},{"style":980},[1071],{"type":475,"value":1072}," \"\"",{"type":470,"tag":497,"props":1074,"children":1075},{"style":635},[1076],{"type":475,"value":993},{"type":470,"tag":497,"props":1078,"children":1080},{"class":499,"line":1079},10,[1081,1085,1090,1094,1100],{"type":470,"tag":497,"props":1082,"children":1083},{"style":880},[1084],{"type":475,"value":935},{"type":470,"tag":497,"props":1086,"children":1087},{"style":617},[1088],{"type":475,"value":1089}," temp",{"type":470,"tag":497,"props":1091,"children":1092},{"style":892},[1093],{"type":475,"value":895},{"type":470,"tag":497,"props":1095,"children":1097},{"style":1096},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1098],{"type":475,"value":1099}," 0",{"type":470,"tag":497,"props":1101,"children":1102},{"style":635},[1103],{"type":475,"value":993},{"type":470,"tag":497,"props":1105,"children":1107},{"class":499,"line":1106},11,[1108,1114,1118,1123,1127,1132,1137,1141,1145,1149,1153,1157],{"type":470,"tag":497,"props":1109,"children":1111},{"style":1110},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1112],{"type":475,"value":1113},"  while",{"type":470,"tag":497,"props":1115,"children":1116},{"style":629},[1117],{"type":475,"value":905},{"type":470,"tag":497,"props":1119,"children":1120},{"style":617},[1121],{"type":475,"value":1122},"n1",{"type":470,"tag":497,"props":1124,"children":1125},{"style":623},[1126],{"type":475,"value":626},{"type":470,"tag":497,"props":1128,"children":1129},{"style":629},[1130],{"type":475,"value":1131},"length ",{"type":470,"tag":497,"props":1133,"children":1134},{"style":892},[1135],{"type":475,"value":1136},"||",{"type":470,"tag":497,"props":1138,"children":1139},{"style":617},[1140],{"type":475,"value":1006},{"type":470,"tag":497,"props":1142,"children":1143},{"style":623},[1144],{"type":475,"value":626},{"type":470,"tag":497,"props":1146,"children":1147},{"style":629},[1148],{"type":475,"value":1131},{"type":470,"tag":497,"props":1150,"children":1151},{"style":892},[1152],{"type":475,"value":1136},{"type":470,"tag":497,"props":1154,"children":1155},{"style":617},[1156],{"type":475,"value":1089},{"type":470,"tag":497,"props":1158,"children":1159},{"style":629},[1160],{"type":475,"value":926},{"type":470,"tag":497,"props":1162,"children":1164},{"class":499,"line":1163},12,[1165,1170,1175,1180,1184,1188,1193,1198,1203,1207,1212,1216,1220,1224],{"type":470,"tag":497,"props":1166,"children":1167},{"style":617},[1168],{"type":475,"value":1169},"    temp",{"type":470,"tag":497,"props":1171,"children":1172},{"style":892},[1173],{"type":475,"value":1174}," +=",{"type":470,"tag":497,"props":1176,"children":1177},{"style":892},[1178],{"type":475,"value":1179}," ~~",{"type":470,"tag":497,"props":1181,"children":1182},{"style":617},[1183],{"type":475,"value":1122},{"type":470,"tag":497,"props":1185,"children":1186},{"style":623},[1187],{"type":475,"value":626},{"type":470,"tag":497,"props":1189,"children":1190},{"style":886},[1191],{"type":475,"value":1192},"pop",{"type":470,"tag":497,"props":1194,"children":1195},{"style":629},[1196],{"type":475,"value":1197},"() ",{"type":470,"tag":497,"props":1199,"children":1200},{"style":892},[1201],{"type":475,"value":1202},"+",{"type":470,"tag":497,"props":1204,"children":1205},{"style":892},[1206],{"type":475,"value":1179},{"type":470,"tag":497,"props":1208,"children":1209},{"style":617},[1210],{"type":475,"value":1211},"n2",{"type":470,"tag":497,"props":1213,"children":1214},{"style":623},[1215],{"type":475,"value":626},{"type":470,"tag":497,"props":1217,"children":1218},{"style":886},[1219],{"type":475,"value":1192},{"type":470,"tag":497,"props":1221,"children":1222},{"style":629},[1223],{"type":475,"value":963},{"type":470,"tag":497,"props":1225,"children":1226},{"style":635},[1227],{"type":475,"value":993},{"type":470,"tag":497,"props":1229,"children":1231},{"class":499,"line":1230},13,[1232,1237,1241,1245,1250,1255],{"type":470,"tag":497,"props":1233,"children":1234},{"style":617},[1235],{"type":475,"value":1236},"    res",{"type":470,"tag":497,"props":1238,"children":1239},{"style":892},[1240],{"type":475,"value":1174},{"type":470,"tag":497,"props":1242,"children":1243},{"style":617},[1244],{"type":475,"value":1089},{"type":470,"tag":497,"props":1246,"children":1247},{"style":892},[1248],{"type":475,"value":1249}," %",{"type":470,"tag":497,"props":1251,"children":1252},{"style":1096},[1253],{"type":475,"value":1254}," 10",{"type":470,"tag":497,"props":1256,"children":1257},{"style":635},[1258],{"type":475,"value":993},{"type":470,"tag":497,"props":1260,"children":1262},{"class":499,"line":1261},14,[1263,1267,1271,1275,1280,1285],{"type":470,"tag":497,"props":1264,"children":1265},{"style":617},[1266],{"type":475,"value":1169},{"type":470,"tag":497,"props":1268,"children":1269},{"style":892},[1270],{"type":475,"value":895},{"type":470,"tag":497,"props":1272,"children":1273},{"style":617},[1274],{"type":475,"value":1089},{"type":470,"tag":497,"props":1276,"children":1277},{"style":892},[1278],{"type":475,"value":1279}," >",{"type":470,"tag":497,"props":1281,"children":1282},{"style":1096},[1283],{"type":475,"value":1284}," 9",{"type":470,"tag":497,"props":1286,"children":1287},{"style":635},[1288],{"type":475,"value":993},{"type":470,"tag":497,"props":1290,"children":1292},{"class":499,"line":1291},15,[1293],{"type":470,"tag":497,"props":1294,"children":1295},{"style":629},[1296],{"type":475,"value":1297},"  }\n",{"type":470,"tag":497,"props":1299,"children":1301},{"class":499,"line":1300},16,[1302,1307,1311,1315,1319,1323,1327,1331,1335,1340,1344,1348,1353,1357,1361,1365],{"type":470,"tag":497,"props":1303,"children":1304},{"style":1110},[1305],{"type":475,"value":1306},"  return",{"type":470,"tag":497,"props":1308,"children":1309},{"style":617},[1310],{"type":475,"value":1063},{"type":470,"tag":497,"props":1312,"children":1313},{"style":623},[1314],{"type":475,"value":626},{"type":470,"tag":497,"props":1316,"children":1317},{"style":886},[1318],{"type":475,"value":972},{"type":470,"tag":497,"props":1320,"children":1321},{"style":629},[1322],{"type":475,"value":977},{"type":470,"tag":497,"props":1324,"children":1325},{"style":980},[1326],{"type":475,"value":983},{"type":470,"tag":497,"props":1328,"children":1329},{"style":629},[1330],{"type":475,"value":988},{"type":470,"tag":497,"props":1332,"children":1333},{"style":623},[1334],{"type":475,"value":626},{"type":470,"tag":497,"props":1336,"children":1337},{"style":886},[1338],{"type":475,"value":1339},"reverse",{"type":470,"tag":497,"props":1341,"children":1342},{"style":629},[1343],{"type":475,"value":963},{"type":470,"tag":497,"props":1345,"children":1346},{"style":623},[1347],{"type":475,"value":626},{"type":470,"tag":497,"props":1349,"children":1350},{"style":886},[1351],{"type":475,"value":1352},"join",{"type":470,"tag":497,"props":1354,"children":1355},{"style":629},[1356],{"type":475,"value":977},{"type":470,"tag":497,"props":1358,"children":1359},{"style":980},[1360],{"type":475,"value":983},{"type":470,"tag":497,"props":1362,"children":1363},{"style":629},[1364],{"type":475,"value":988},{"type":470,"tag":497,"props":1366,"children":1367},{"style":635},[1368],{"type":475,"value":993},{"type":470,"tag":497,"props":1370,"children":1372},{"class":499,"line":1371},17,[1373,1378],{"type":470,"tag":497,"props":1374,"children":1375},{"style":629},[1376],{"type":475,"value":1377},"}",{"type":470,"tag":497,"props":1379,"children":1380},{"style":635},[1381],{"type":475,"value":993},{"type":470,"tag":1383,"props":1384,"children":1385},"style",{},[1386],{"type":475,"value":1387},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":867,"depth":867,"links":1389},[1390,1391],{"id":600,"depth":509,"text":600},{"id":778,"depth":509,"text":778,"children":1392},[1393],{"id":784,"depth":672,"text":784},"markdown","content:1.algorithm:3.leetcode:3.major:415.add-strings.md","content","1.algorithm/3.leetcode/3.major/415.add-strings.md","md",[1400,1402],{"_path":225,"title":224,"description":1401},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":231,"title":230,"description":1403},"给你一个字符数组 chars ，请使用下述算法压缩：",1713626405164]