[{"data":1,"prerenderedAt":1460},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-strings":506,"/algorithm/leetcode/major/add-strings-surround":1455},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":234,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":233,"description":510,"url":511,"body":512,"_type":1450,"_id":1451,"_source":1452,"_file":1453,"_extension":1454},"major",false,"","给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。","https://leetcode.cn/problems/add-strings",{"type":513,"children":514,"toc":1444},"root",[515,522,527,532,562,567,590,595,618,623,643,649,767,788,793,821,826,832,1438],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":521,"value":531},"示例 1：",{"type":516,"tag":533,"props":534,"children":537},"pre",{"className":535,"code":536,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：num1 = \"11\", num2 = \"123\"\n输出：\"134\"\n",[538],{"type":516,"tag":539,"props":540,"children":541},"code",{"__ignoreMap":509},[542,553],{"type":516,"tag":543,"props":544,"children":547},"span",{"class":545,"line":546},"line",1,[548],{"type":516,"tag":543,"props":549,"children":550},{},[551],{"type":521,"value":552},"输入：num1 = \"11\", num2 = \"123\"\n",{"type":516,"tag":543,"props":554,"children":556},{"class":545,"line":555},2,[557],{"type":516,"tag":543,"props":558,"children":559},{},[560],{"type":521,"value":561},"输出：\"134\"\n",{"type":516,"tag":517,"props":563,"children":564},{},[565],{"type":521,"value":566},"示例 2：",{"type":516,"tag":533,"props":568,"children":570},{"className":535,"code":569,"language":521,"meta":509,"style":509},"输入：num1 = \"456\", num2 = \"77\"\n输出：\"533\"\n",[571],{"type":516,"tag":539,"props":572,"children":573},{"__ignoreMap":509},[574,582],{"type":516,"tag":543,"props":575,"children":576},{"class":545,"line":546},[577],{"type":516,"tag":543,"props":578,"children":579},{},[580],{"type":521,"value":581},"输入：num1 = \"456\", num2 = \"77\"\n",{"type":516,"tag":543,"props":583,"children":584},{"class":545,"line":555},[585],{"type":516,"tag":543,"props":586,"children":587},{},[588],{"type":521,"value":589},"输出：\"533\"\n",{"type":516,"tag":517,"props":591,"children":592},{},[593],{"type":521,"value":594},"示例 3：",{"type":516,"tag":533,"props":596,"children":598},{"className":535,"code":597,"language":521,"meta":509,"style":509},"输入：num1 = \"0\", num2 = \"0\"\n输出：\"0\"\n",[599],{"type":516,"tag":539,"props":600,"children":601},{"__ignoreMap":509},[602,610],{"type":516,"tag":543,"props":603,"children":604},{"class":545,"line":546},[605],{"type":516,"tag":543,"props":606,"children":607},{},[608],{"type":521,"value":609},"输入：num1 = \"0\", num2 = \"0\"\n",{"type":516,"tag":543,"props":611,"children":612},{"class":545,"line":555},[613],{"type":516,"tag":543,"props":614,"children":615},{},[616],{"type":521,"value":617},"输出：\"0\"\n",{"type":516,"tag":517,"props":619,"children":620},{},[621],{"type":521,"value":622},"提示：",{"type":516,"tag":624,"props":625,"children":626},"ul",{},[627,633,638],{"type":516,"tag":628,"props":629,"children":630},"li",{},[631],{"type":521,"value":632},"1 \u003C= num1.length, num2.length \u003C= 10^4",{"type":516,"tag":628,"props":634,"children":635},{},[636],{"type":521,"value":637},"num1 和 num2 都只包含数字 0-9",{"type":516,"tag":628,"props":639,"children":640},{},[641],{"type":521,"value":642},"num1 和 num2 都不包含任何前导零",{"type":516,"tag":644,"props":645,"children":647},"h2",{"id":646},"解题思路",[648],{"type":521,"value":646},{"type":516,"tag":533,"props":650,"children":654},{"className":651,"code":652,"language":653,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","Number.MAX_VALUE; // 1.7976931348623157e+308\nNumber.MAX_SAFE_INTEGER; // 9007199254740991\nNumber.MIN_VALUE; // 5e-324\nNumber.MIN_SAFE_INTEGER; // -9007199254740991\n","js",[655],{"type":516,"tag":539,"props":656,"children":657},{"__ignoreMap":509},[658,690,715,741],{"type":516,"tag":543,"props":659,"children":660},{"class":545,"line":546},[661,667,673,679,684],{"type":516,"tag":543,"props":662,"children":664},{"style":663},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[665],{"type":521,"value":666},"Number",{"type":516,"tag":543,"props":668,"children":670},{"style":669},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[671],{"type":521,"value":672},".",{"type":516,"tag":543,"props":674,"children":676},{"style":675},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[677],{"type":521,"value":678},"MAX_VALUE",{"type":516,"tag":543,"props":680,"children":681},{"style":669},[682],{"type":521,"value":683},";",{"type":516,"tag":543,"props":685,"children":687},{"style":686},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[688],{"type":521,"value":689}," // 1.7976931348623157e+308\n",{"type":516,"tag":543,"props":691,"children":692},{"class":545,"line":555},[693,697,701,706,710],{"type":516,"tag":543,"props":694,"children":695},{"style":663},[696],{"type":521,"value":666},{"type":516,"tag":543,"props":698,"children":699},{"style":669},[700],{"type":521,"value":672},{"type":516,"tag":543,"props":702,"children":703},{"style":675},[704],{"type":521,"value":705},"MAX_SAFE_INTEGER",{"type":516,"tag":543,"props":707,"children":708},{"style":669},[709],{"type":521,"value":683},{"type":516,"tag":543,"props":711,"children":712},{"style":686},[713],{"type":521,"value":714}," // 9007199254740991\n",{"type":516,"tag":543,"props":716,"children":718},{"class":545,"line":717},3,[719,723,727,732,736],{"type":516,"tag":543,"props":720,"children":721},{"style":663},[722],{"type":521,"value":666},{"type":516,"tag":543,"props":724,"children":725},{"style":669},[726],{"type":521,"value":672},{"type":516,"tag":543,"props":728,"children":729},{"style":675},[730],{"type":521,"value":731},"MIN_VALUE",{"type":516,"tag":543,"props":733,"children":734},{"style":669},[735],{"type":521,"value":683},{"type":516,"tag":543,"props":737,"children":738},{"style":686},[739],{"type":521,"value":740}," // 5e-324\n",{"type":516,"tag":543,"props":742,"children":744},{"class":545,"line":743},4,[745,749,753,758,762],{"type":516,"tag":543,"props":746,"children":747},{"style":663},[748],{"type":521,"value":666},{"type":516,"tag":543,"props":750,"children":751},{"style":669},[752],{"type":521,"value":672},{"type":516,"tag":543,"props":754,"children":755},{"style":675},[756],{"type":521,"value":757},"MIN_SAFE_INTEGER",{"type":516,"tag":543,"props":759,"children":760},{"style":669},[761],{"type":521,"value":683},{"type":516,"tag":543,"props":763,"children":764},{"style":686},[765],{"type":521,"value":766}," // -9007199254740991\n",{"type":516,"tag":517,"props":768,"children":769},{},[770,772,778,780,786],{"type":521,"value":771},"如果想要对一个超大的整数 ",{"type":516,"tag":539,"props":773,"children":775},{"className":774},[],[776],{"type":521,"value":777},"> Number.MAX_SAFE_INTEGER",{"type":521,"value":779}," 进行加法运算，但是又想要输出为一般形式，那么使用 + 是无法做到的，因为一旦数字超过 ",{"type":516,"tag":539,"props":781,"children":783},{"className":782},[],[784],{"type":521,"value":785},"Number.MAX_SAFE_INTEGER",{"type":521,"value":787}," 就会被转换为科学技术法，并且数字精度相比之前会有误差。",{"type":516,"tag":517,"props":789,"children":790},{},[791],{"type":521,"value":792},"使用算法实现大数相加：",{"type":516,"tag":624,"props":794,"children":795},{},[796,801,806,811,816],{"type":516,"tag":628,"props":797,"children":798},{},[799],{"type":521,"value":800},"首先，利用字符串的方式来保存大数，这样数字在数学表示上就不会发生变化；",{"type":516,"tag":628,"props":802,"children":803},{},[804],{"type":521,"value":805},"第二步，初始化 res、temp 来保存中间的计算结果，并将两个字符串转化为数组，方便进行每一位的加法运算；",{"type":516,"tag":628,"props":807,"children":808},{},[809],{"type":521,"value":810},"第三步，将两个数组的对应\"位\"进行相加，两个数相加的结果可能大于 10，所以可能要考虑\"进位\"，此时需要对 10 进行取余操作，将结果保存在当前位；",{"type":516,"tag":628,"props":812,"children":813},{},[814],{"type":521,"value":815},"第四步，判断当前位是否大于 9，即判断是否会进位。如果是则将 temp 赋值为 true，因为在加法运算中，true 自动隐式转换为 1，方便下一次相加；",{"type":516,"tag":628,"props":817,"children":818},{},[819],{"type":521,"value":820},"重复以上操作，直到计算出结果；",{"type":516,"tag":644,"props":822,"children":824},{"id":823},"实现",[825],{"type":521,"value":823},{"type":516,"tag":827,"props":828,"children":830},"h3",{"id":829},"大数相加",[831],{"type":521,"value":829},{"type":516,"tag":533,"props":833,"children":835},{"className":651,"code":834,"language":653,"meta":509,"style":509},"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  let n1 = num1.toString().split(\"\");\n  let n2 = num2.toString().split(\"\");\n  let res = \"\";\n  let temp = 0;\n  while (n1.length || n2.length || temp) {\n    temp += ~~n1.pop() + ~~n2.pop();\n    res += temp % 10;\n    temp = temp > 9;\n  }\n  return res.split(\"\").reverse().join(\"\");\n};\n",[836],{"type":516,"tag":539,"props":837,"children":838},{"__ignoreMap":509},[839,847,887,919,948,957,1013,1071,1120,1147,1174,1235,1299,1330,1360,1369,1429],{"type":516,"tag":543,"props":840,"children":841},{"class":545,"line":546},[842],{"type":516,"tag":543,"props":843,"children":844},{"style":686},[845],{"type":521,"value":846},"/**\n",{"type":516,"tag":543,"props":848,"children":849},{"class":545,"line":555},[850,855,860,866,871,877,882],{"type":516,"tag":543,"props":851,"children":852},{"style":686},[853],{"type":521,"value":854}," * ",{"type":516,"tag":543,"props":856,"children":857},{"style":669},[858],{"type":521,"value":859},"@",{"type":516,"tag":543,"props":861,"children":863},{"style":862},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[864],{"type":521,"value":865},"param",{"type":516,"tag":543,"props":867,"children":868},{"style":669},[869],{"type":521,"value":870}," {",{"type":516,"tag":543,"props":872,"children":874},{"style":873},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[875],{"type":521,"value":876},"string",{"type":516,"tag":543,"props":878,"children":879},{"style":669},[880],{"type":521,"value":881},"}",{"type":516,"tag":543,"props":883,"children":884},{"style":663},[885],{"type":521,"value":886}," num1\n",{"type":516,"tag":543,"props":888,"children":889},{"class":545,"line":717},[890,894,898,902,906,910,914],{"type":516,"tag":543,"props":891,"children":892},{"style":686},[893],{"type":521,"value":854},{"type":516,"tag":543,"props":895,"children":896},{"style":669},[897],{"type":521,"value":859},{"type":516,"tag":543,"props":899,"children":900},{"style":862},[901],{"type":521,"value":865},{"type":516,"tag":543,"props":903,"children":904},{"style":669},[905],{"type":521,"value":870},{"type":516,"tag":543,"props":907,"children":908},{"style":873},[909],{"type":521,"value":876},{"type":516,"tag":543,"props":911,"children":912},{"style":669},[913],{"type":521,"value":881},{"type":516,"tag":543,"props":915,"children":916},{"style":663},[917],{"type":521,"value":918}," num2\n",{"type":516,"tag":543,"props":920,"children":921},{"class":545,"line":743},[922,926,930,935,939,943],{"type":516,"tag":543,"props":923,"children":924},{"style":686},[925],{"type":521,"value":854},{"type":516,"tag":543,"props":927,"children":928},{"style":669},[929],{"type":521,"value":859},{"type":516,"tag":543,"props":931,"children":932},{"style":862},[933],{"type":521,"value":934},"return",{"type":516,"tag":543,"props":936,"children":937},{"style":669},[938],{"type":521,"value":870},{"type":516,"tag":543,"props":940,"children":941},{"style":873},[942],{"type":521,"value":876},{"type":516,"tag":543,"props":944,"children":945},{"style":669},[946],{"type":521,"value":947},"}\n",{"type":516,"tag":543,"props":949,"children":951},{"class":545,"line":950},5,[952],{"type":516,"tag":543,"props":953,"children":954},{"style":686},[955],{"type":521,"value":956}," */\n",{"type":516,"tag":543,"props":958,"children":960},{"class":545,"line":959},6,[961,967,973,978,983,988,993,998,1003,1008],{"type":516,"tag":543,"props":962,"children":964},{"style":963},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[965],{"type":521,"value":966},"var",{"type":516,"tag":543,"props":968,"children":970},{"style":969},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[971],{"type":521,"value":972}," addStrings",{"type":516,"tag":543,"props":974,"children":975},{"style":669},[976],{"type":521,"value":977}," =",{"type":516,"tag":543,"props":979,"children":980},{"style":963},[981],{"type":521,"value":982}," function",{"type":516,"tag":543,"props":984,"children":985},{"style":669},[986],{"type":521,"value":987}," (",{"type":516,"tag":543,"props":989,"children":990},{"style":663},[991],{"type":521,"value":992},"num1",{"type":516,"tag":543,"props":994,"children":995},{"style":669},[996],{"type":521,"value":997},",",{"type":516,"tag":543,"props":999,"children":1000},{"style":663},[1001],{"type":521,"value":1002}," num2",{"type":516,"tag":543,"props":1004,"children":1005},{"style":669},[1006],{"type":521,"value":1007},")",{"type":516,"tag":543,"props":1009,"children":1010},{"style":669},[1011],{"type":521,"value":1012}," {\n",{"type":516,"tag":543,"props":1014,"children":1016},{"class":545,"line":1015},7,[1017,1022,1027,1031,1036,1040,1045,1050,1055,1060,1066],{"type":516,"tag":543,"props":1018,"children":1019},{"style":963},[1020],{"type":521,"value":1021},"  let",{"type":516,"tag":543,"props":1023,"children":1024},{"style":663},[1025],{"type":521,"value":1026}," n1",{"type":516,"tag":543,"props":1028,"children":1029},{"style":669},[1030],{"type":521,"value":977},{"type":516,"tag":543,"props":1032,"children":1033},{"style":663},[1034],{"type":521,"value":1035}," num1",{"type":516,"tag":543,"props":1037,"children":1038},{"style":669},[1039],{"type":521,"value":672},{"type":516,"tag":543,"props":1041,"children":1042},{"style":969},[1043],{"type":521,"value":1044},"toString",{"type":516,"tag":543,"props":1046,"children":1047},{"style":669},[1048],{"type":521,"value":1049},"().",{"type":516,"tag":543,"props":1051,"children":1052},{"style":969},[1053],{"type":521,"value":1054},"split",{"type":516,"tag":543,"props":1056,"children":1057},{"style":669},[1058],{"type":521,"value":1059},"(",{"type":516,"tag":543,"props":1061,"children":1063},{"style":1062},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1064],{"type":521,"value":1065},"\"\"",{"type":516,"tag":543,"props":1067,"children":1068},{"style":669},[1069],{"type":521,"value":1070},");\n",{"type":516,"tag":543,"props":1072,"children":1074},{"class":545,"line":1073},8,[1075,1079,1084,1088,1092,1096,1100,1104,1108,1112,1116],{"type":516,"tag":543,"props":1076,"children":1077},{"style":963},[1078],{"type":521,"value":1021},{"type":516,"tag":543,"props":1080,"children":1081},{"style":663},[1082],{"type":521,"value":1083}," n2",{"type":516,"tag":543,"props":1085,"children":1086},{"style":669},[1087],{"type":521,"value":977},{"type":516,"tag":543,"props":1089,"children":1090},{"style":663},[1091],{"type":521,"value":1002},{"type":516,"tag":543,"props":1093,"children":1094},{"style":669},[1095],{"type":521,"value":672},{"type":516,"tag":543,"props":1097,"children":1098},{"style":969},[1099],{"type":521,"value":1044},{"type":516,"tag":543,"props":1101,"children":1102},{"style":669},[1103],{"type":521,"value":1049},{"type":516,"tag":543,"props":1105,"children":1106},{"style":969},[1107],{"type":521,"value":1054},{"type":516,"tag":543,"props":1109,"children":1110},{"style":669},[1111],{"type":521,"value":1059},{"type":516,"tag":543,"props":1113,"children":1114},{"style":1062},[1115],{"type":521,"value":1065},{"type":516,"tag":543,"props":1117,"children":1118},{"style":669},[1119],{"type":521,"value":1070},{"type":516,"tag":543,"props":1121,"children":1123},{"class":545,"line":1122},9,[1124,1128,1133,1137,1142],{"type":516,"tag":543,"props":1125,"children":1126},{"style":963},[1127],{"type":521,"value":1021},{"type":516,"tag":543,"props":1129,"children":1130},{"style":663},[1131],{"type":521,"value":1132}," res",{"type":516,"tag":543,"props":1134,"children":1135},{"style":669},[1136],{"type":521,"value":977},{"type":516,"tag":543,"props":1138,"children":1139},{"style":1062},[1140],{"type":521,"value":1141}," \"\"",{"type":516,"tag":543,"props":1143,"children":1144},{"style":669},[1145],{"type":521,"value":1146},";\n",{"type":516,"tag":543,"props":1148,"children":1150},{"class":545,"line":1149},10,[1151,1155,1160,1164,1170],{"type":516,"tag":543,"props":1152,"children":1153},{"style":963},[1154],{"type":521,"value":1021},{"type":516,"tag":543,"props":1156,"children":1157},{"style":663},[1158],{"type":521,"value":1159}," temp",{"type":516,"tag":543,"props":1161,"children":1162},{"style":669},[1163],{"type":521,"value":977},{"type":516,"tag":543,"props":1165,"children":1167},{"style":1166},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1168],{"type":521,"value":1169}," 0",{"type":516,"tag":543,"props":1171,"children":1172},{"style":669},[1173],{"type":521,"value":1146},{"type":516,"tag":543,"props":1175,"children":1177},{"class":545,"line":1176},11,[1178,1183,1187,1192,1196,1202,1207,1211,1215,1219,1223,1227,1231],{"type":516,"tag":543,"props":1179,"children":1180},{"style":862},[1181],{"type":521,"value":1182},"  while",{"type":516,"tag":543,"props":1184,"children":1185},{"style":669},[1186],{"type":521,"value":987},{"type":516,"tag":543,"props":1188,"children":1189},{"style":663},[1190],{"type":521,"value":1191},"n1",{"type":516,"tag":543,"props":1193,"children":1194},{"style":669},[1195],{"type":521,"value":672},{"type":516,"tag":543,"props":1197,"children":1199},{"style":1198},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1200],{"type":521,"value":1201},"length",{"type":516,"tag":543,"props":1203,"children":1204},{"style":963},[1205],{"type":521,"value":1206}," ||",{"type":516,"tag":543,"props":1208,"children":1209},{"style":663},[1210],{"type":521,"value":1083},{"type":516,"tag":543,"props":1212,"children":1213},{"style":669},[1214],{"type":521,"value":672},{"type":516,"tag":543,"props":1216,"children":1217},{"style":1198},[1218],{"type":521,"value":1201},{"type":516,"tag":543,"props":1220,"children":1221},{"style":963},[1222],{"type":521,"value":1206},{"type":516,"tag":543,"props":1224,"children":1225},{"style":663},[1226],{"type":521,"value":1159},{"type":516,"tag":543,"props":1228,"children":1229},{"style":669},[1230],{"type":521,"value":1007},{"type":516,"tag":543,"props":1232,"children":1233},{"style":669},[1234],{"type":521,"value":1012},{"type":516,"tag":543,"props":1236,"children":1238},{"class":545,"line":1237},12,[1239,1244,1249,1254,1258,1262,1267,1272,1277,1281,1286,1290,1294],{"type":516,"tag":543,"props":1240,"children":1241},{"style":663},[1242],{"type":521,"value":1243},"    temp",{"type":516,"tag":543,"props":1245,"children":1246},{"style":963},[1247],{"type":521,"value":1248}," +=",{"type":516,"tag":543,"props":1250,"children":1251},{"style":963},[1252],{"type":521,"value":1253}," ~~",{"type":516,"tag":543,"props":1255,"children":1256},{"style":663},[1257],{"type":521,"value":1191},{"type":516,"tag":543,"props":1259,"children":1260},{"style":669},[1261],{"type":521,"value":672},{"type":516,"tag":543,"props":1263,"children":1264},{"style":969},[1265],{"type":521,"value":1266},"pop",{"type":516,"tag":543,"props":1268,"children":1269},{"style":669},[1270],{"type":521,"value":1271},"()",{"type":516,"tag":543,"props":1273,"children":1274},{"style":963},[1275],{"type":521,"value":1276}," +",{"type":516,"tag":543,"props":1278,"children":1279},{"style":963},[1280],{"type":521,"value":1253},{"type":516,"tag":543,"props":1282,"children":1283},{"style":663},[1284],{"type":521,"value":1285},"n2",{"type":516,"tag":543,"props":1287,"children":1288},{"style":669},[1289],{"type":521,"value":672},{"type":516,"tag":543,"props":1291,"children":1292},{"style":969},[1293],{"type":521,"value":1266},{"type":516,"tag":543,"props":1295,"children":1296},{"style":669},[1297],{"type":521,"value":1298},"();\n",{"type":516,"tag":543,"props":1300,"children":1302},{"class":545,"line":1301},13,[1303,1308,1312,1316,1321,1326],{"type":516,"tag":543,"props":1304,"children":1305},{"style":663},[1306],{"type":521,"value":1307},"    res",{"type":516,"tag":543,"props":1309,"children":1310},{"style":963},[1311],{"type":521,"value":1248},{"type":516,"tag":543,"props":1313,"children":1314},{"style":663},[1315],{"type":521,"value":1159},{"type":516,"tag":543,"props":1317,"children":1318},{"style":963},[1319],{"type":521,"value":1320}," %",{"type":516,"tag":543,"props":1322,"children":1323},{"style":1166},[1324],{"type":521,"value":1325}," 10",{"type":516,"tag":543,"props":1327,"children":1328},{"style":669},[1329],{"type":521,"value":1146},{"type":516,"tag":543,"props":1331,"children":1333},{"class":545,"line":1332},14,[1334,1338,1342,1346,1351,1356],{"type":516,"tag":543,"props":1335,"children":1336},{"style":663},[1337],{"type":521,"value":1243},{"type":516,"tag":543,"props":1339,"children":1340},{"style":669},[1341],{"type":521,"value":977},{"type":516,"tag":543,"props":1343,"children":1344},{"style":663},[1345],{"type":521,"value":1159},{"type":516,"tag":543,"props":1347,"children":1348},{"style":669},[1349],{"type":521,"value":1350}," >",{"type":516,"tag":543,"props":1352,"children":1353},{"style":1166},[1354],{"type":521,"value":1355}," 9",{"type":516,"tag":543,"props":1357,"children":1358},{"style":669},[1359],{"type":521,"value":1146},{"type":516,"tag":543,"props":1361,"children":1363},{"class":545,"line":1362},15,[1364],{"type":516,"tag":543,"props":1365,"children":1366},{"style":669},[1367],{"type":521,"value":1368},"  }\n",{"type":516,"tag":543,"props":1370,"children":1372},{"class":545,"line":1371},16,[1373,1378,1382,1386,1390,1394,1398,1403,1408,1412,1417,1421,1425],{"type":516,"tag":543,"props":1374,"children":1375},{"style":862},[1376],{"type":521,"value":1377},"  return",{"type":516,"tag":543,"props":1379,"children":1380},{"style":663},[1381],{"type":521,"value":1132},{"type":516,"tag":543,"props":1383,"children":1384},{"style":669},[1385],{"type":521,"value":672},{"type":516,"tag":543,"props":1387,"children":1388},{"style":969},[1389],{"type":521,"value":1054},{"type":516,"tag":543,"props":1391,"children":1392},{"style":669},[1393],{"type":521,"value":1059},{"type":516,"tag":543,"props":1395,"children":1396},{"style":1062},[1397],{"type":521,"value":1065},{"type":516,"tag":543,"props":1399,"children":1400},{"style":669},[1401],{"type":521,"value":1402},").",{"type":516,"tag":543,"props":1404,"children":1405},{"style":969},[1406],{"type":521,"value":1407},"reverse",{"type":516,"tag":543,"props":1409,"children":1410},{"style":669},[1411],{"type":521,"value":1049},{"type":516,"tag":543,"props":1413,"children":1414},{"style":969},[1415],{"type":521,"value":1416},"join",{"type":516,"tag":543,"props":1418,"children":1419},{"style":669},[1420],{"type":521,"value":1059},{"type":516,"tag":543,"props":1422,"children":1423},{"style":1062},[1424],{"type":521,"value":1065},{"type":516,"tag":543,"props":1426,"children":1427},{"style":669},[1428],{"type":521,"value":1070},{"type":516,"tag":543,"props":1430,"children":1432},{"class":545,"line":1431},17,[1433],{"type":516,"tag":543,"props":1434,"children":1435},{"style":669},[1436],{"type":521,"value":1437},"};\n",{"type":516,"tag":1439,"props":1440,"children":1441},"style",{},[1442],{"type":521,"value":1443},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":950,"depth":950,"links":1445},[1446,1447],{"id":646,"depth":555,"text":646},{"id":823,"depth":555,"text":823,"children":1448},[1449],{"id":829,"depth":717,"text":829},"markdown","content:1.algorithm:3.leetcode:3.major:415.add-strings.md","content","1.algorithm/3.leetcode/3.major/415.add-strings.md","md",[1456,1458],{"_path":231,"title":230,"description":1457},"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是 等可能 的。",{"_path":237,"title":236,"description":1459},"给你一个字符数组 chars ，请使用下述算法压缩：",1714058128784]