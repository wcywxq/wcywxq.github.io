[{"data":1,"prerenderedAt":1488},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/merge-intervals":559,"/algorithm/leetcode/major/merge-intervals-surround":1483},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":129,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":128,"description":563,"url":564,"body":565,"_type":1478,"_id":1479,"_source":1480,"_file":1481,"_extension":1482},"major",false,"","以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。","https://leetcode.cn/problems/merge-intervals",{"type":566,"children":567,"toc":1472},"root",[568,575,580,619,624,655,660,680,686,691,697,1466],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"示例 1：",{"type":569,"tag":581,"props":582,"children":585},"pre",{"className":583,"code":584,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：intervals = [[1,3],[2,6],[8,10],[15,18]]\n输出：[[1,6],[8,10],[15,18]]\n解释：区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].\n",[586],{"type":569,"tag":587,"props":588,"children":589},"code",{"__ignoreMap":562},[590,601,610],{"type":569,"tag":591,"props":592,"children":595},"span",{"class":593,"line":594},"line",1,[596],{"type":569,"tag":591,"props":597,"children":598},{},[599],{"type":574,"value":600},"输入：intervals = [[1,3],[2,6],[8,10],[15,18]]\n",{"type":569,"tag":591,"props":602,"children":604},{"class":593,"line":603},2,[605],{"type":569,"tag":591,"props":606,"children":607},{},[608],{"type":574,"value":609},"输出：[[1,6],[8,10],[15,18]]\n",{"type":569,"tag":591,"props":611,"children":613},{"class":593,"line":612},3,[614],{"type":569,"tag":591,"props":615,"children":616},{},[617],{"type":574,"value":618},"解释：区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].\n",{"type":569,"tag":570,"props":620,"children":621},{},[622],{"type":574,"value":623},"示例 2：",{"type":569,"tag":581,"props":625,"children":627},{"className":583,"code":626,"language":574,"meta":562,"style":562},"输入：intervals = [[1,4],[4,5]]\n输出：[[1,5]]\n解释：区间 [1,4] 和 [4,5] 可被视为重叠区间。\n",[628],{"type":569,"tag":587,"props":629,"children":630},{"__ignoreMap":562},[631,639,647],{"type":569,"tag":591,"props":632,"children":633},{"class":593,"line":594},[634],{"type":569,"tag":591,"props":635,"children":636},{},[637],{"type":574,"value":638},"输入：intervals = [[1,4],[4,5]]\n",{"type":569,"tag":591,"props":640,"children":641},{"class":593,"line":603},[642],{"type":569,"tag":591,"props":643,"children":644},{},[645],{"type":574,"value":646},"输出：[[1,5]]\n",{"type":569,"tag":591,"props":648,"children":649},{"class":593,"line":612},[650],{"type":569,"tag":591,"props":651,"children":652},{},[653],{"type":574,"value":654},"解释：区间 [1,4] 和 [4,5] 可被视为重叠区间。\n",{"type":569,"tag":570,"props":656,"children":657},{},[658],{"type":574,"value":659},"提示：",{"type":569,"tag":661,"props":662,"children":663},"ul",{},[664,670,675],{"type":569,"tag":665,"props":666,"children":667},"li",{},[668],{"type":574,"value":669},"1 \u003C= intervals.length \u003C= 104",{"type":569,"tag":665,"props":671,"children":672},{},[673],{"type":574,"value":674},"intervals[i].length == 2",{"type":569,"tag":665,"props":676,"children":677},{},[678],{"type":574,"value":679},"0 \u003C= start_i \u003C= end_i \u003C= 104",{"type":569,"tag":681,"props":682,"children":684},"h2",{"id":683},"解题思路",[685],{"type":574,"value":683},{"type":569,"tag":681,"props":687,"children":689},{"id":688},"实现",[690],{"type":574,"value":688},{"type":569,"tag":692,"props":693,"children":695},"h3",{"id":694},"数组排序",[696],{"type":574,"value":694},{"type":569,"tag":581,"props":698,"children":702},{"className":699,"code":700,"language":701,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[][]} intervals\n * @return {number[][]}\n */\nvar merge = function (intervals) {\n  if (intervals.length === 0) return [];\n  // 第一波排序\n  intervals.sort((a, b) => a[0] - b[0]);\n  let res = [intervals[0]];\n  for (let i = 1; i \u003C intervals.length; i++) {\n    if (intervals[i][0] \u003C= res[res.length - 1][1]) {\n      // 合并区间\n      res[res.length - 1][1] = Math.max(\n        res[res.length - 1][1],\n        intervals[i][1]\n      );\n    } else {\n      res.push(intervals[i]);\n    }\n  }\n  return res;\n};\n","js",[703],{"type":569,"tag":587,"props":704,"children":705},{"__ignoreMap":562},[706,715,757,786,795,841,894,903,992,1032,1112,1203,1212,1280,1326,1356,1365,1383,1421,1430,1439,1457],{"type":569,"tag":591,"props":707,"children":708},{"class":593,"line":594},[709],{"type":569,"tag":591,"props":710,"children":712},{"style":711},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[713],{"type":574,"value":714},"/**\n",{"type":569,"tag":591,"props":716,"children":717},{"class":593,"line":603},[718,723,729,735,740,746,751],{"type":569,"tag":591,"props":719,"children":720},{"style":711},[721],{"type":574,"value":722}," * ",{"type":569,"tag":591,"props":724,"children":726},{"style":725},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[727],{"type":574,"value":728},"@",{"type":569,"tag":591,"props":730,"children":732},{"style":731},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[733],{"type":574,"value":734},"param",{"type":569,"tag":591,"props":736,"children":737},{"style":725},[738],{"type":574,"value":739}," {",{"type":569,"tag":591,"props":741,"children":743},{"style":742},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[744],{"type":574,"value":745},"number[][]",{"type":569,"tag":591,"props":747,"children":748},{"style":725},[749],{"type":574,"value":750},"}",{"type":569,"tag":591,"props":752,"children":754},{"style":753},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[755],{"type":574,"value":756}," intervals\n",{"type":569,"tag":591,"props":758,"children":759},{"class":593,"line":612},[760,764,768,773,777,781],{"type":569,"tag":591,"props":761,"children":762},{"style":711},[763],{"type":574,"value":722},{"type":569,"tag":591,"props":765,"children":766},{"style":725},[767],{"type":574,"value":728},{"type":569,"tag":591,"props":769,"children":770},{"style":731},[771],{"type":574,"value":772},"return",{"type":569,"tag":591,"props":774,"children":775},{"style":725},[776],{"type":574,"value":739},{"type":569,"tag":591,"props":778,"children":779},{"style":742},[780],{"type":574,"value":745},{"type":569,"tag":591,"props":782,"children":783},{"style":725},[784],{"type":574,"value":785},"}\n",{"type":569,"tag":591,"props":787,"children":789},{"class":593,"line":788},4,[790],{"type":569,"tag":591,"props":791,"children":792},{"style":711},[793],{"type":574,"value":794}," */\n",{"type":569,"tag":591,"props":796,"children":798},{"class":593,"line":797},5,[799,805,811,816,821,826,831,836],{"type":569,"tag":591,"props":800,"children":802},{"style":801},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[803],{"type":574,"value":804},"var",{"type":569,"tag":591,"props":806,"children":808},{"style":807},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[809],{"type":574,"value":810}," merge",{"type":569,"tag":591,"props":812,"children":813},{"style":725},[814],{"type":574,"value":815}," =",{"type":569,"tag":591,"props":817,"children":818},{"style":801},[819],{"type":574,"value":820}," function",{"type":569,"tag":591,"props":822,"children":823},{"style":725},[824],{"type":574,"value":825}," (",{"type":569,"tag":591,"props":827,"children":828},{"style":753},[829],{"type":574,"value":830},"intervals",{"type":569,"tag":591,"props":832,"children":833},{"style":725},[834],{"type":574,"value":835},")",{"type":569,"tag":591,"props":837,"children":838},{"style":725},[839],{"type":574,"value":840}," {\n",{"type":569,"tag":591,"props":842,"children":844},{"class":593,"line":843},6,[845,850,854,858,863,869,874,880,884,889],{"type":569,"tag":591,"props":846,"children":847},{"style":731},[848],{"type":574,"value":849},"  if",{"type":569,"tag":591,"props":851,"children":852},{"style":725},[853],{"type":574,"value":825},{"type":569,"tag":591,"props":855,"children":856},{"style":753},[857],{"type":574,"value":830},{"type":569,"tag":591,"props":859,"children":860},{"style":725},[861],{"type":574,"value":862},".",{"type":569,"tag":591,"props":864,"children":866},{"style":865},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[867],{"type":574,"value":868},"length",{"type":569,"tag":591,"props":870,"children":871},{"style":801},[872],{"type":574,"value":873}," ===",{"type":569,"tag":591,"props":875,"children":877},{"style":876},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[878],{"type":574,"value":879}," 0",{"type":569,"tag":591,"props":881,"children":882},{"style":725},[883],{"type":574,"value":835},{"type":569,"tag":591,"props":885,"children":886},{"style":731},[887],{"type":574,"value":888}," return",{"type":569,"tag":591,"props":890,"children":891},{"style":725},[892],{"type":574,"value":893}," [];\n",{"type":569,"tag":591,"props":895,"children":897},{"class":593,"line":896},7,[898],{"type":569,"tag":591,"props":899,"children":900},{"style":711},[901],{"type":574,"value":902},"  // 第一波排序\n",{"type":569,"tag":591,"props":904,"children":906},{"class":593,"line":905},8,[907,912,916,921,926,931,936,941,945,950,955,960,965,970,975,979,983,987],{"type":569,"tag":591,"props":908,"children":909},{"style":753},[910],{"type":574,"value":911},"  intervals",{"type":569,"tag":591,"props":913,"children":914},{"style":725},[915],{"type":574,"value":862},{"type":569,"tag":591,"props":917,"children":918},{"style":807},[919],{"type":574,"value":920},"sort",{"type":569,"tag":591,"props":922,"children":923},{"style":725},[924],{"type":574,"value":925},"((",{"type":569,"tag":591,"props":927,"children":928},{"style":753},[929],{"type":574,"value":930},"a",{"type":569,"tag":591,"props":932,"children":933},{"style":725},[934],{"type":574,"value":935},",",{"type":569,"tag":591,"props":937,"children":938},{"style":753},[939],{"type":574,"value":940}," b",{"type":569,"tag":591,"props":942,"children":943},{"style":725},[944],{"type":574,"value":835},{"type":569,"tag":591,"props":946,"children":947},{"style":725},[948],{"type":574,"value":949}," =>",{"type":569,"tag":591,"props":951,"children":952},{"style":753},[953],{"type":574,"value":954}," a",{"type":569,"tag":591,"props":956,"children":957},{"style":725},[958],{"type":574,"value":959},"[",{"type":569,"tag":591,"props":961,"children":962},{"style":876},[963],{"type":574,"value":964},"0",{"type":569,"tag":591,"props":966,"children":967},{"style":725},[968],{"type":574,"value":969},"]",{"type":569,"tag":591,"props":971,"children":972},{"style":801},[973],{"type":574,"value":974}," -",{"type":569,"tag":591,"props":976,"children":977},{"style":753},[978],{"type":574,"value":940},{"type":569,"tag":591,"props":980,"children":981},{"style":725},[982],{"type":574,"value":959},{"type":569,"tag":591,"props":984,"children":985},{"style":876},[986],{"type":574,"value":964},{"type":569,"tag":591,"props":988,"children":989},{"style":725},[990],{"type":574,"value":991},"]);\n",{"type":569,"tag":591,"props":993,"children":995},{"class":593,"line":994},9,[996,1001,1006,1010,1015,1019,1023,1027],{"type":569,"tag":591,"props":997,"children":998},{"style":801},[999],{"type":574,"value":1000},"  let",{"type":569,"tag":591,"props":1002,"children":1003},{"style":753},[1004],{"type":574,"value":1005}," res",{"type":569,"tag":591,"props":1007,"children":1008},{"style":725},[1009],{"type":574,"value":815},{"type":569,"tag":591,"props":1011,"children":1012},{"style":725},[1013],{"type":574,"value":1014}," [",{"type":569,"tag":591,"props":1016,"children":1017},{"style":753},[1018],{"type":574,"value":830},{"type":569,"tag":591,"props":1020,"children":1021},{"style":725},[1022],{"type":574,"value":959},{"type":569,"tag":591,"props":1024,"children":1025},{"style":876},[1026],{"type":574,"value":964},{"type":569,"tag":591,"props":1028,"children":1029},{"style":725},[1030],{"type":574,"value":1031},"]];\n",{"type":569,"tag":591,"props":1033,"children":1035},{"class":593,"line":1034},10,[1036,1041,1045,1050,1055,1059,1064,1069,1073,1078,1083,1087,1091,1095,1099,1104,1108],{"type":569,"tag":591,"props":1037,"children":1038},{"style":731},[1039],{"type":574,"value":1040},"  for",{"type":569,"tag":591,"props":1042,"children":1043},{"style":725},[1044],{"type":574,"value":825},{"type":569,"tag":591,"props":1046,"children":1047},{"style":801},[1048],{"type":574,"value":1049},"let",{"type":569,"tag":591,"props":1051,"children":1052},{"style":753},[1053],{"type":574,"value":1054}," i",{"type":569,"tag":591,"props":1056,"children":1057},{"style":725},[1058],{"type":574,"value":815},{"type":569,"tag":591,"props":1060,"children":1061},{"style":876},[1062],{"type":574,"value":1063}," 1",{"type":569,"tag":591,"props":1065,"children":1066},{"style":725},[1067],{"type":574,"value":1068},";",{"type":569,"tag":591,"props":1070,"children":1071},{"style":753},[1072],{"type":574,"value":1054},{"type":569,"tag":591,"props":1074,"children":1075},{"style":725},[1076],{"type":574,"value":1077}," \u003C",{"type":569,"tag":591,"props":1079,"children":1080},{"style":753},[1081],{"type":574,"value":1082}," intervals",{"type":569,"tag":591,"props":1084,"children":1085},{"style":725},[1086],{"type":574,"value":862},{"type":569,"tag":591,"props":1088,"children":1089},{"style":865},[1090],{"type":574,"value":868},{"type":569,"tag":591,"props":1092,"children":1093},{"style":725},[1094],{"type":574,"value":1068},{"type":569,"tag":591,"props":1096,"children":1097},{"style":753},[1098],{"type":574,"value":1054},{"type":569,"tag":591,"props":1100,"children":1101},{"style":801},[1102],{"type":574,"value":1103},"++",{"type":569,"tag":591,"props":1105,"children":1106},{"style":725},[1107],{"type":574,"value":835},{"type":569,"tag":591,"props":1109,"children":1110},{"style":725},[1111],{"type":574,"value":840},{"type":569,"tag":591,"props":1113,"children":1115},{"class":593,"line":1114},11,[1116,1121,1125,1129,1133,1138,1143,1147,1151,1156,1160,1164,1169,1173,1177,1181,1185,1189,1194,1199],{"type":569,"tag":591,"props":1117,"children":1118},{"style":731},[1119],{"type":574,"value":1120},"    if",{"type":569,"tag":591,"props":1122,"children":1123},{"style":725},[1124],{"type":574,"value":825},{"type":569,"tag":591,"props":1126,"children":1127},{"style":753},[1128],{"type":574,"value":830},{"type":569,"tag":591,"props":1130,"children":1131},{"style":725},[1132],{"type":574,"value":959},{"type":569,"tag":591,"props":1134,"children":1135},{"style":753},[1136],{"type":574,"value":1137},"i",{"type":569,"tag":591,"props":1139,"children":1140},{"style":725},[1141],{"type":574,"value":1142},"][",{"type":569,"tag":591,"props":1144,"children":1145},{"style":876},[1146],{"type":574,"value":964},{"type":569,"tag":591,"props":1148,"children":1149},{"style":725},[1150],{"type":574,"value":969},{"type":569,"tag":591,"props":1152,"children":1153},{"style":725},[1154],{"type":574,"value":1155}," \u003C=",{"type":569,"tag":591,"props":1157,"children":1158},{"style":753},[1159],{"type":574,"value":1005},{"type":569,"tag":591,"props":1161,"children":1162},{"style":725},[1163],{"type":574,"value":959},{"type":569,"tag":591,"props":1165,"children":1166},{"style":753},[1167],{"type":574,"value":1168},"res",{"type":569,"tag":591,"props":1170,"children":1171},{"style":725},[1172],{"type":574,"value":862},{"type":569,"tag":591,"props":1174,"children":1175},{"style":865},[1176],{"type":574,"value":868},{"type":569,"tag":591,"props":1178,"children":1179},{"style":801},[1180],{"type":574,"value":974},{"type":569,"tag":591,"props":1182,"children":1183},{"style":876},[1184],{"type":574,"value":1063},{"type":569,"tag":591,"props":1186,"children":1187},{"style":725},[1188],{"type":574,"value":1142},{"type":569,"tag":591,"props":1190,"children":1191},{"style":876},[1192],{"type":574,"value":1193},"1",{"type":569,"tag":591,"props":1195,"children":1196},{"style":725},[1197],{"type":574,"value":1198},"])",{"type":569,"tag":591,"props":1200,"children":1201},{"style":725},[1202],{"type":574,"value":840},{"type":569,"tag":591,"props":1204,"children":1206},{"class":593,"line":1205},12,[1207],{"type":569,"tag":591,"props":1208,"children":1209},{"style":711},[1210],{"type":574,"value":1211},"      // 合并区间\n",{"type":569,"tag":591,"props":1213,"children":1215},{"class":593,"line":1214},13,[1216,1221,1225,1229,1233,1237,1241,1245,1249,1253,1257,1261,1266,1270,1275],{"type":569,"tag":591,"props":1217,"children":1218},{"style":753},[1219],{"type":574,"value":1220},"      res",{"type":569,"tag":591,"props":1222,"children":1223},{"style":725},[1224],{"type":574,"value":959},{"type":569,"tag":591,"props":1226,"children":1227},{"style":753},[1228],{"type":574,"value":1168},{"type":569,"tag":591,"props":1230,"children":1231},{"style":725},[1232],{"type":574,"value":862},{"type":569,"tag":591,"props":1234,"children":1235},{"style":865},[1236],{"type":574,"value":868},{"type":569,"tag":591,"props":1238,"children":1239},{"style":801},[1240],{"type":574,"value":974},{"type":569,"tag":591,"props":1242,"children":1243},{"style":876},[1244],{"type":574,"value":1063},{"type":569,"tag":591,"props":1246,"children":1247},{"style":725},[1248],{"type":574,"value":1142},{"type":569,"tag":591,"props":1250,"children":1251},{"style":876},[1252],{"type":574,"value":1193},{"type":569,"tag":591,"props":1254,"children":1255},{"style":725},[1256],{"type":574,"value":969},{"type":569,"tag":591,"props":1258,"children":1259},{"style":725},[1260],{"type":574,"value":815},{"type":569,"tag":591,"props":1262,"children":1263},{"style":753},[1264],{"type":574,"value":1265}," Math",{"type":569,"tag":591,"props":1267,"children":1268},{"style":725},[1269],{"type":574,"value":862},{"type":569,"tag":591,"props":1271,"children":1272},{"style":807},[1273],{"type":574,"value":1274},"max",{"type":569,"tag":591,"props":1276,"children":1277},{"style":725},[1278],{"type":574,"value":1279},"(\n",{"type":569,"tag":591,"props":1281,"children":1283},{"class":593,"line":1282},14,[1284,1289,1293,1297,1301,1305,1309,1313,1317,1321],{"type":569,"tag":591,"props":1285,"children":1286},{"style":753},[1287],{"type":574,"value":1288},"        res",{"type":569,"tag":591,"props":1290,"children":1291},{"style":725},[1292],{"type":574,"value":959},{"type":569,"tag":591,"props":1294,"children":1295},{"style":753},[1296],{"type":574,"value":1168},{"type":569,"tag":591,"props":1298,"children":1299},{"style":725},[1300],{"type":574,"value":862},{"type":569,"tag":591,"props":1302,"children":1303},{"style":865},[1304],{"type":574,"value":868},{"type":569,"tag":591,"props":1306,"children":1307},{"style":801},[1308],{"type":574,"value":974},{"type":569,"tag":591,"props":1310,"children":1311},{"style":876},[1312],{"type":574,"value":1063},{"type":569,"tag":591,"props":1314,"children":1315},{"style":725},[1316],{"type":574,"value":1142},{"type":569,"tag":591,"props":1318,"children":1319},{"style":876},[1320],{"type":574,"value":1193},{"type":569,"tag":591,"props":1322,"children":1323},{"style":725},[1324],{"type":574,"value":1325},"],\n",{"type":569,"tag":591,"props":1327,"children":1329},{"class":593,"line":1328},15,[1330,1335,1339,1343,1347,1351],{"type":569,"tag":591,"props":1331,"children":1332},{"style":753},[1333],{"type":574,"value":1334},"        intervals",{"type":569,"tag":591,"props":1336,"children":1337},{"style":725},[1338],{"type":574,"value":959},{"type":569,"tag":591,"props":1340,"children":1341},{"style":753},[1342],{"type":574,"value":1137},{"type":569,"tag":591,"props":1344,"children":1345},{"style":725},[1346],{"type":574,"value":1142},{"type":569,"tag":591,"props":1348,"children":1349},{"style":876},[1350],{"type":574,"value":1193},{"type":569,"tag":591,"props":1352,"children":1353},{"style":725},[1354],{"type":574,"value":1355},"]\n",{"type":569,"tag":591,"props":1357,"children":1359},{"class":593,"line":1358},16,[1360],{"type":569,"tag":591,"props":1361,"children":1362},{"style":725},[1363],{"type":574,"value":1364},"      );\n",{"type":569,"tag":591,"props":1366,"children":1368},{"class":593,"line":1367},17,[1369,1374,1379],{"type":569,"tag":591,"props":1370,"children":1371},{"style":725},[1372],{"type":574,"value":1373},"    }",{"type":569,"tag":591,"props":1375,"children":1376},{"style":731},[1377],{"type":574,"value":1378}," else",{"type":569,"tag":591,"props":1380,"children":1381},{"style":725},[1382],{"type":574,"value":840},{"type":569,"tag":591,"props":1384,"children":1386},{"class":593,"line":1385},18,[1387,1391,1395,1400,1405,1409,1413,1417],{"type":569,"tag":591,"props":1388,"children":1389},{"style":753},[1390],{"type":574,"value":1220},{"type":569,"tag":591,"props":1392,"children":1393},{"style":725},[1394],{"type":574,"value":862},{"type":569,"tag":591,"props":1396,"children":1397},{"style":807},[1398],{"type":574,"value":1399},"push",{"type":569,"tag":591,"props":1401,"children":1402},{"style":725},[1403],{"type":574,"value":1404},"(",{"type":569,"tag":591,"props":1406,"children":1407},{"style":753},[1408],{"type":574,"value":830},{"type":569,"tag":591,"props":1410,"children":1411},{"style":725},[1412],{"type":574,"value":959},{"type":569,"tag":591,"props":1414,"children":1415},{"style":753},[1416],{"type":574,"value":1137},{"type":569,"tag":591,"props":1418,"children":1419},{"style":725},[1420],{"type":574,"value":991},{"type":569,"tag":591,"props":1422,"children":1424},{"class":593,"line":1423},19,[1425],{"type":569,"tag":591,"props":1426,"children":1427},{"style":725},[1428],{"type":574,"value":1429},"    }\n",{"type":569,"tag":591,"props":1431,"children":1433},{"class":593,"line":1432},20,[1434],{"type":569,"tag":591,"props":1435,"children":1436},{"style":725},[1437],{"type":574,"value":1438},"  }\n",{"type":569,"tag":591,"props":1440,"children":1442},{"class":593,"line":1441},21,[1443,1448,1452],{"type":569,"tag":591,"props":1444,"children":1445},{"style":731},[1446],{"type":574,"value":1447},"  return",{"type":569,"tag":591,"props":1449,"children":1450},{"style":753},[1451],{"type":574,"value":1005},{"type":569,"tag":591,"props":1453,"children":1454},{"style":725},[1455],{"type":574,"value":1456},";\n",{"type":569,"tag":591,"props":1458,"children":1460},{"class":593,"line":1459},22,[1461],{"type":569,"tag":591,"props":1462,"children":1463},{"style":725},[1464],{"type":574,"value":1465},"};\n",{"type":569,"tag":1467,"props":1468,"children":1469},"style",{},[1470],{"type":574,"value":1471},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":797,"depth":797,"links":1473},[1474,1475],{"id":683,"depth":603,"text":683},{"id":688,"depth":603,"text":688,"children":1476},[1477],{"id":694,"depth":612,"text":694},"markdown","content:1.algorithm:3.leetcode:3.major:56.merge-intervals.md","content","1.algorithm/3.leetcode/3.major/56.merge-intervals.md","md",[1484,1486],{"_path":126,"title":125,"description":1485},"给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。",{"_path":132,"title":131,"description":1487},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",1717735569628]