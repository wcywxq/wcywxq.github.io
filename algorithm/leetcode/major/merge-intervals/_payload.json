[{"data":1,"prerenderedAt":1432},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/merge-intervals":503,"/algorithm/leetcode/major/merge-intervals-surround":1427},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":129,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":128,"description":507,"url":508,"body":509,"_type":1422,"_id":1423,"_source":1424,"_file":1425,"_extension":1426},"major",false,"","以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [start_i, end_i] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。","https://leetcode.cn/problems/merge-intervals",{"type":510,"children":511,"toc":1416},"root",[512,519,524,563,568,599,604,624,630,635,641,1410],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522],{"type":518,"value":523},"示例 1：",{"type":513,"tag":525,"props":526,"children":529},"pre",{"className":527,"code":528,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：intervals = [[1,3],[2,6],[8,10],[15,18]]\n输出：[[1,6],[8,10],[15,18]]\n解释：区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].\n",[530],{"type":513,"tag":531,"props":532,"children":533},"code",{"__ignoreMap":506},[534,545,554],{"type":513,"tag":535,"props":536,"children":539},"span",{"class":537,"line":538},"line",1,[540],{"type":513,"tag":535,"props":541,"children":542},{},[543],{"type":518,"value":544},"输入：intervals = [[1,3],[2,6],[8,10],[15,18]]\n",{"type":513,"tag":535,"props":546,"children":548},{"class":537,"line":547},2,[549],{"type":513,"tag":535,"props":550,"children":551},{},[552],{"type":518,"value":553},"输出：[[1,6],[8,10],[15,18]]\n",{"type":513,"tag":535,"props":555,"children":557},{"class":537,"line":556},3,[558],{"type":513,"tag":535,"props":559,"children":560},{},[561],{"type":518,"value":562},"解释：区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].\n",{"type":513,"tag":514,"props":564,"children":565},{},[566],{"type":518,"value":567},"示例 2：",{"type":513,"tag":525,"props":569,"children":571},{"className":527,"code":570,"language":518,"meta":506,"style":506},"输入：intervals = [[1,4],[4,5]]\n输出：[[1,5]]\n解释：区间 [1,4] 和 [4,5] 可被视为重叠区间。\n",[572],{"type":513,"tag":531,"props":573,"children":574},{"__ignoreMap":506},[575,583,591],{"type":513,"tag":535,"props":576,"children":577},{"class":537,"line":538},[578],{"type":513,"tag":535,"props":579,"children":580},{},[581],{"type":518,"value":582},"输入：intervals = [[1,4],[4,5]]\n",{"type":513,"tag":535,"props":584,"children":585},{"class":537,"line":547},[586],{"type":513,"tag":535,"props":587,"children":588},{},[589],{"type":518,"value":590},"输出：[[1,5]]\n",{"type":513,"tag":535,"props":592,"children":593},{"class":537,"line":556},[594],{"type":513,"tag":535,"props":595,"children":596},{},[597],{"type":518,"value":598},"解释：区间 [1,4] 和 [4,5] 可被视为重叠区间。\n",{"type":513,"tag":514,"props":600,"children":601},{},[602],{"type":518,"value":603},"提示：",{"type":513,"tag":605,"props":606,"children":607},"ul",{},[608,614,619],{"type":513,"tag":609,"props":610,"children":611},"li",{},[612],{"type":518,"value":613},"1 \u003C= intervals.length \u003C= 104",{"type":513,"tag":609,"props":615,"children":616},{},[617],{"type":518,"value":618},"intervals[i].length == 2",{"type":513,"tag":609,"props":620,"children":621},{},[622],{"type":518,"value":623},"0 \u003C= start_i \u003C= end_i \u003C= 104",{"type":513,"tag":625,"props":626,"children":628},"h2",{"id":627},"解题思路",[629],{"type":518,"value":627},{"type":513,"tag":625,"props":631,"children":633},{"id":632},"实现",[634],{"type":518,"value":632},{"type":513,"tag":636,"props":637,"children":639},"h3",{"id":638},"数组排序",[640],{"type":518,"value":638},{"type":513,"tag":525,"props":642,"children":646},{"className":643,"code":644,"language":645,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[][]} intervals\n * @return {number[][]}\n */\nvar merge = function (intervals) {\n  if (intervals.length === 0) return [];\n  // 第一波排序\n  intervals.sort((a, b) => a[0] - b[0]);\n  let res = [intervals[0]];\n  for (let i = 1; i \u003C intervals.length; i++) {\n    if (intervals[i][0] \u003C= res[res.length - 1][1]) {\n      // 合并区间\n      res[res.length - 1][1] = Math.max(\n        res[res.length - 1][1],\n        intervals[i][1]\n      );\n    } else {\n      res.push(intervals[i]);\n    }\n  }\n  return res;\n};\n","js",[647],{"type":513,"tag":531,"props":648,"children":649},{"__ignoreMap":506},[650,659,701,730,739,785,838,847,936,976,1056,1147,1156,1224,1270,1300,1309,1327,1365,1374,1383,1401],{"type":513,"tag":535,"props":651,"children":652},{"class":537,"line":538},[653],{"type":513,"tag":535,"props":654,"children":656},{"style":655},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[657],{"type":518,"value":658},"/**\n",{"type":513,"tag":535,"props":660,"children":661},{"class":537,"line":547},[662,667,673,679,684,690,695],{"type":513,"tag":535,"props":663,"children":664},{"style":655},[665],{"type":518,"value":666}," * ",{"type":513,"tag":535,"props":668,"children":670},{"style":669},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[671],{"type":518,"value":672},"@",{"type":513,"tag":535,"props":674,"children":676},{"style":675},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[677],{"type":518,"value":678},"param",{"type":513,"tag":535,"props":680,"children":681},{"style":669},[682],{"type":518,"value":683}," {",{"type":513,"tag":535,"props":685,"children":687},{"style":686},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[688],{"type":518,"value":689},"number[][]",{"type":513,"tag":535,"props":691,"children":692},{"style":669},[693],{"type":518,"value":694},"}",{"type":513,"tag":535,"props":696,"children":698},{"style":697},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[699],{"type":518,"value":700}," intervals\n",{"type":513,"tag":535,"props":702,"children":703},{"class":537,"line":556},[704,708,712,717,721,725],{"type":513,"tag":535,"props":705,"children":706},{"style":655},[707],{"type":518,"value":666},{"type":513,"tag":535,"props":709,"children":710},{"style":669},[711],{"type":518,"value":672},{"type":513,"tag":535,"props":713,"children":714},{"style":675},[715],{"type":518,"value":716},"return",{"type":513,"tag":535,"props":718,"children":719},{"style":669},[720],{"type":518,"value":683},{"type":513,"tag":535,"props":722,"children":723},{"style":686},[724],{"type":518,"value":689},{"type":513,"tag":535,"props":726,"children":727},{"style":669},[728],{"type":518,"value":729},"}\n",{"type":513,"tag":535,"props":731,"children":733},{"class":537,"line":732},4,[734],{"type":513,"tag":535,"props":735,"children":736},{"style":655},[737],{"type":518,"value":738}," */\n",{"type":513,"tag":535,"props":740,"children":742},{"class":537,"line":741},5,[743,749,755,760,765,770,775,780],{"type":513,"tag":535,"props":744,"children":746},{"style":745},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[747],{"type":518,"value":748},"var",{"type":513,"tag":535,"props":750,"children":752},{"style":751},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[753],{"type":518,"value":754}," merge",{"type":513,"tag":535,"props":756,"children":757},{"style":669},[758],{"type":518,"value":759}," =",{"type":513,"tag":535,"props":761,"children":762},{"style":745},[763],{"type":518,"value":764}," function",{"type":513,"tag":535,"props":766,"children":767},{"style":669},[768],{"type":518,"value":769}," (",{"type":513,"tag":535,"props":771,"children":772},{"style":697},[773],{"type":518,"value":774},"intervals",{"type":513,"tag":535,"props":776,"children":777},{"style":669},[778],{"type":518,"value":779},")",{"type":513,"tag":535,"props":781,"children":782},{"style":669},[783],{"type":518,"value":784}," {\n",{"type":513,"tag":535,"props":786,"children":788},{"class":537,"line":787},6,[789,794,798,802,807,813,818,824,828,833],{"type":513,"tag":535,"props":790,"children":791},{"style":675},[792],{"type":518,"value":793},"  if",{"type":513,"tag":535,"props":795,"children":796},{"style":669},[797],{"type":518,"value":769},{"type":513,"tag":535,"props":799,"children":800},{"style":697},[801],{"type":518,"value":774},{"type":513,"tag":535,"props":803,"children":804},{"style":669},[805],{"type":518,"value":806},".",{"type":513,"tag":535,"props":808,"children":810},{"style":809},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[811],{"type":518,"value":812},"length",{"type":513,"tag":535,"props":814,"children":815},{"style":745},[816],{"type":518,"value":817}," ===",{"type":513,"tag":535,"props":819,"children":821},{"style":820},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[822],{"type":518,"value":823}," 0",{"type":513,"tag":535,"props":825,"children":826},{"style":669},[827],{"type":518,"value":779},{"type":513,"tag":535,"props":829,"children":830},{"style":675},[831],{"type":518,"value":832}," return",{"type":513,"tag":535,"props":834,"children":835},{"style":669},[836],{"type":518,"value":837}," [];\n",{"type":513,"tag":535,"props":839,"children":841},{"class":537,"line":840},7,[842],{"type":513,"tag":535,"props":843,"children":844},{"style":655},[845],{"type":518,"value":846},"  // 第一波排序\n",{"type":513,"tag":535,"props":848,"children":850},{"class":537,"line":849},8,[851,856,860,865,870,875,880,885,889,894,899,904,909,914,919,923,927,931],{"type":513,"tag":535,"props":852,"children":853},{"style":697},[854],{"type":518,"value":855},"  intervals",{"type":513,"tag":535,"props":857,"children":858},{"style":669},[859],{"type":518,"value":806},{"type":513,"tag":535,"props":861,"children":862},{"style":751},[863],{"type":518,"value":864},"sort",{"type":513,"tag":535,"props":866,"children":867},{"style":669},[868],{"type":518,"value":869},"((",{"type":513,"tag":535,"props":871,"children":872},{"style":697},[873],{"type":518,"value":874},"a",{"type":513,"tag":535,"props":876,"children":877},{"style":669},[878],{"type":518,"value":879},",",{"type":513,"tag":535,"props":881,"children":882},{"style":697},[883],{"type":518,"value":884}," b",{"type":513,"tag":535,"props":886,"children":887},{"style":669},[888],{"type":518,"value":779},{"type":513,"tag":535,"props":890,"children":891},{"style":669},[892],{"type":518,"value":893}," =>",{"type":513,"tag":535,"props":895,"children":896},{"style":697},[897],{"type":518,"value":898}," a",{"type":513,"tag":535,"props":900,"children":901},{"style":669},[902],{"type":518,"value":903},"[",{"type":513,"tag":535,"props":905,"children":906},{"style":820},[907],{"type":518,"value":908},"0",{"type":513,"tag":535,"props":910,"children":911},{"style":669},[912],{"type":518,"value":913},"]",{"type":513,"tag":535,"props":915,"children":916},{"style":745},[917],{"type":518,"value":918}," -",{"type":513,"tag":535,"props":920,"children":921},{"style":697},[922],{"type":518,"value":884},{"type":513,"tag":535,"props":924,"children":925},{"style":669},[926],{"type":518,"value":903},{"type":513,"tag":535,"props":928,"children":929},{"style":820},[930],{"type":518,"value":908},{"type":513,"tag":535,"props":932,"children":933},{"style":669},[934],{"type":518,"value":935},"]);\n",{"type":513,"tag":535,"props":937,"children":939},{"class":537,"line":938},9,[940,945,950,954,959,963,967,971],{"type":513,"tag":535,"props":941,"children":942},{"style":745},[943],{"type":518,"value":944},"  let",{"type":513,"tag":535,"props":946,"children":947},{"style":697},[948],{"type":518,"value":949}," res",{"type":513,"tag":535,"props":951,"children":952},{"style":669},[953],{"type":518,"value":759},{"type":513,"tag":535,"props":955,"children":956},{"style":669},[957],{"type":518,"value":958}," [",{"type":513,"tag":535,"props":960,"children":961},{"style":697},[962],{"type":518,"value":774},{"type":513,"tag":535,"props":964,"children":965},{"style":669},[966],{"type":518,"value":903},{"type":513,"tag":535,"props":968,"children":969},{"style":820},[970],{"type":518,"value":908},{"type":513,"tag":535,"props":972,"children":973},{"style":669},[974],{"type":518,"value":975},"]];\n",{"type":513,"tag":535,"props":977,"children":979},{"class":537,"line":978},10,[980,985,989,994,999,1003,1008,1013,1017,1022,1027,1031,1035,1039,1043,1048,1052],{"type":513,"tag":535,"props":981,"children":982},{"style":675},[983],{"type":518,"value":984},"  for",{"type":513,"tag":535,"props":986,"children":987},{"style":669},[988],{"type":518,"value":769},{"type":513,"tag":535,"props":990,"children":991},{"style":745},[992],{"type":518,"value":993},"let",{"type":513,"tag":535,"props":995,"children":996},{"style":697},[997],{"type":518,"value":998}," i",{"type":513,"tag":535,"props":1000,"children":1001},{"style":669},[1002],{"type":518,"value":759},{"type":513,"tag":535,"props":1004,"children":1005},{"style":820},[1006],{"type":518,"value":1007}," 1",{"type":513,"tag":535,"props":1009,"children":1010},{"style":669},[1011],{"type":518,"value":1012},";",{"type":513,"tag":535,"props":1014,"children":1015},{"style":697},[1016],{"type":518,"value":998},{"type":513,"tag":535,"props":1018,"children":1019},{"style":669},[1020],{"type":518,"value":1021}," \u003C",{"type":513,"tag":535,"props":1023,"children":1024},{"style":697},[1025],{"type":518,"value":1026}," intervals",{"type":513,"tag":535,"props":1028,"children":1029},{"style":669},[1030],{"type":518,"value":806},{"type":513,"tag":535,"props":1032,"children":1033},{"style":809},[1034],{"type":518,"value":812},{"type":513,"tag":535,"props":1036,"children":1037},{"style":669},[1038],{"type":518,"value":1012},{"type":513,"tag":535,"props":1040,"children":1041},{"style":697},[1042],{"type":518,"value":998},{"type":513,"tag":535,"props":1044,"children":1045},{"style":745},[1046],{"type":518,"value":1047},"++",{"type":513,"tag":535,"props":1049,"children":1050},{"style":669},[1051],{"type":518,"value":779},{"type":513,"tag":535,"props":1053,"children":1054},{"style":669},[1055],{"type":518,"value":784},{"type":513,"tag":535,"props":1057,"children":1059},{"class":537,"line":1058},11,[1060,1065,1069,1073,1077,1082,1087,1091,1095,1100,1104,1108,1113,1117,1121,1125,1129,1133,1138,1143],{"type":513,"tag":535,"props":1061,"children":1062},{"style":675},[1063],{"type":518,"value":1064},"    if",{"type":513,"tag":535,"props":1066,"children":1067},{"style":669},[1068],{"type":518,"value":769},{"type":513,"tag":535,"props":1070,"children":1071},{"style":697},[1072],{"type":518,"value":774},{"type":513,"tag":535,"props":1074,"children":1075},{"style":669},[1076],{"type":518,"value":903},{"type":513,"tag":535,"props":1078,"children":1079},{"style":697},[1080],{"type":518,"value":1081},"i",{"type":513,"tag":535,"props":1083,"children":1084},{"style":669},[1085],{"type":518,"value":1086},"][",{"type":513,"tag":535,"props":1088,"children":1089},{"style":820},[1090],{"type":518,"value":908},{"type":513,"tag":535,"props":1092,"children":1093},{"style":669},[1094],{"type":518,"value":913},{"type":513,"tag":535,"props":1096,"children":1097},{"style":669},[1098],{"type":518,"value":1099}," \u003C=",{"type":513,"tag":535,"props":1101,"children":1102},{"style":697},[1103],{"type":518,"value":949},{"type":513,"tag":535,"props":1105,"children":1106},{"style":669},[1107],{"type":518,"value":903},{"type":513,"tag":535,"props":1109,"children":1110},{"style":697},[1111],{"type":518,"value":1112},"res",{"type":513,"tag":535,"props":1114,"children":1115},{"style":669},[1116],{"type":518,"value":806},{"type":513,"tag":535,"props":1118,"children":1119},{"style":809},[1120],{"type":518,"value":812},{"type":513,"tag":535,"props":1122,"children":1123},{"style":745},[1124],{"type":518,"value":918},{"type":513,"tag":535,"props":1126,"children":1127},{"style":820},[1128],{"type":518,"value":1007},{"type":513,"tag":535,"props":1130,"children":1131},{"style":669},[1132],{"type":518,"value":1086},{"type":513,"tag":535,"props":1134,"children":1135},{"style":820},[1136],{"type":518,"value":1137},"1",{"type":513,"tag":535,"props":1139,"children":1140},{"style":669},[1141],{"type":518,"value":1142},"])",{"type":513,"tag":535,"props":1144,"children":1145},{"style":669},[1146],{"type":518,"value":784},{"type":513,"tag":535,"props":1148,"children":1150},{"class":537,"line":1149},12,[1151],{"type":513,"tag":535,"props":1152,"children":1153},{"style":655},[1154],{"type":518,"value":1155},"      // 合并区间\n",{"type":513,"tag":535,"props":1157,"children":1159},{"class":537,"line":1158},13,[1160,1165,1169,1173,1177,1181,1185,1189,1193,1197,1201,1205,1210,1214,1219],{"type":513,"tag":535,"props":1161,"children":1162},{"style":697},[1163],{"type":518,"value":1164},"      res",{"type":513,"tag":535,"props":1166,"children":1167},{"style":669},[1168],{"type":518,"value":903},{"type":513,"tag":535,"props":1170,"children":1171},{"style":697},[1172],{"type":518,"value":1112},{"type":513,"tag":535,"props":1174,"children":1175},{"style":669},[1176],{"type":518,"value":806},{"type":513,"tag":535,"props":1178,"children":1179},{"style":809},[1180],{"type":518,"value":812},{"type":513,"tag":535,"props":1182,"children":1183},{"style":745},[1184],{"type":518,"value":918},{"type":513,"tag":535,"props":1186,"children":1187},{"style":820},[1188],{"type":518,"value":1007},{"type":513,"tag":535,"props":1190,"children":1191},{"style":669},[1192],{"type":518,"value":1086},{"type":513,"tag":535,"props":1194,"children":1195},{"style":820},[1196],{"type":518,"value":1137},{"type":513,"tag":535,"props":1198,"children":1199},{"style":669},[1200],{"type":518,"value":913},{"type":513,"tag":535,"props":1202,"children":1203},{"style":669},[1204],{"type":518,"value":759},{"type":513,"tag":535,"props":1206,"children":1207},{"style":697},[1208],{"type":518,"value":1209}," Math",{"type":513,"tag":535,"props":1211,"children":1212},{"style":669},[1213],{"type":518,"value":806},{"type":513,"tag":535,"props":1215,"children":1216},{"style":751},[1217],{"type":518,"value":1218},"max",{"type":513,"tag":535,"props":1220,"children":1221},{"style":669},[1222],{"type":518,"value":1223},"(\n",{"type":513,"tag":535,"props":1225,"children":1227},{"class":537,"line":1226},14,[1228,1233,1237,1241,1245,1249,1253,1257,1261,1265],{"type":513,"tag":535,"props":1229,"children":1230},{"style":697},[1231],{"type":518,"value":1232},"        res",{"type":513,"tag":535,"props":1234,"children":1235},{"style":669},[1236],{"type":518,"value":903},{"type":513,"tag":535,"props":1238,"children":1239},{"style":697},[1240],{"type":518,"value":1112},{"type":513,"tag":535,"props":1242,"children":1243},{"style":669},[1244],{"type":518,"value":806},{"type":513,"tag":535,"props":1246,"children":1247},{"style":809},[1248],{"type":518,"value":812},{"type":513,"tag":535,"props":1250,"children":1251},{"style":745},[1252],{"type":518,"value":918},{"type":513,"tag":535,"props":1254,"children":1255},{"style":820},[1256],{"type":518,"value":1007},{"type":513,"tag":535,"props":1258,"children":1259},{"style":669},[1260],{"type":518,"value":1086},{"type":513,"tag":535,"props":1262,"children":1263},{"style":820},[1264],{"type":518,"value":1137},{"type":513,"tag":535,"props":1266,"children":1267},{"style":669},[1268],{"type":518,"value":1269},"],\n",{"type":513,"tag":535,"props":1271,"children":1273},{"class":537,"line":1272},15,[1274,1279,1283,1287,1291,1295],{"type":513,"tag":535,"props":1275,"children":1276},{"style":697},[1277],{"type":518,"value":1278},"        intervals",{"type":513,"tag":535,"props":1280,"children":1281},{"style":669},[1282],{"type":518,"value":903},{"type":513,"tag":535,"props":1284,"children":1285},{"style":697},[1286],{"type":518,"value":1081},{"type":513,"tag":535,"props":1288,"children":1289},{"style":669},[1290],{"type":518,"value":1086},{"type":513,"tag":535,"props":1292,"children":1293},{"style":820},[1294],{"type":518,"value":1137},{"type":513,"tag":535,"props":1296,"children":1297},{"style":669},[1298],{"type":518,"value":1299},"]\n",{"type":513,"tag":535,"props":1301,"children":1303},{"class":537,"line":1302},16,[1304],{"type":513,"tag":535,"props":1305,"children":1306},{"style":669},[1307],{"type":518,"value":1308},"      );\n",{"type":513,"tag":535,"props":1310,"children":1312},{"class":537,"line":1311},17,[1313,1318,1323],{"type":513,"tag":535,"props":1314,"children":1315},{"style":669},[1316],{"type":518,"value":1317},"    }",{"type":513,"tag":535,"props":1319,"children":1320},{"style":675},[1321],{"type":518,"value":1322}," else",{"type":513,"tag":535,"props":1324,"children":1325},{"style":669},[1326],{"type":518,"value":784},{"type":513,"tag":535,"props":1328,"children":1330},{"class":537,"line":1329},18,[1331,1335,1339,1344,1349,1353,1357,1361],{"type":513,"tag":535,"props":1332,"children":1333},{"style":697},[1334],{"type":518,"value":1164},{"type":513,"tag":535,"props":1336,"children":1337},{"style":669},[1338],{"type":518,"value":806},{"type":513,"tag":535,"props":1340,"children":1341},{"style":751},[1342],{"type":518,"value":1343},"push",{"type":513,"tag":535,"props":1345,"children":1346},{"style":669},[1347],{"type":518,"value":1348},"(",{"type":513,"tag":535,"props":1350,"children":1351},{"style":697},[1352],{"type":518,"value":774},{"type":513,"tag":535,"props":1354,"children":1355},{"style":669},[1356],{"type":518,"value":903},{"type":513,"tag":535,"props":1358,"children":1359},{"style":697},[1360],{"type":518,"value":1081},{"type":513,"tag":535,"props":1362,"children":1363},{"style":669},[1364],{"type":518,"value":935},{"type":513,"tag":535,"props":1366,"children":1368},{"class":537,"line":1367},19,[1369],{"type":513,"tag":535,"props":1370,"children":1371},{"style":669},[1372],{"type":518,"value":1373},"    }\n",{"type":513,"tag":535,"props":1375,"children":1377},{"class":537,"line":1376},20,[1378],{"type":513,"tag":535,"props":1379,"children":1380},{"style":669},[1381],{"type":518,"value":1382},"  }\n",{"type":513,"tag":535,"props":1384,"children":1386},{"class":537,"line":1385},21,[1387,1392,1396],{"type":513,"tag":535,"props":1388,"children":1389},{"style":675},[1390],{"type":518,"value":1391},"  return",{"type":513,"tag":535,"props":1393,"children":1394},{"style":697},[1395],{"type":518,"value":949},{"type":513,"tag":535,"props":1397,"children":1398},{"style":669},[1399],{"type":518,"value":1400},";\n",{"type":513,"tag":535,"props":1402,"children":1404},{"class":537,"line":1403},22,[1405],{"type":513,"tag":535,"props":1406,"children":1407},{"style":669},[1408],{"type":518,"value":1409},"};\n",{"type":513,"tag":1411,"props":1412,"children":1413},"style",{},[1414],{"type":518,"value":1415},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":741,"depth":741,"links":1417},[1418,1419],{"id":627,"depth":547,"text":627},{"id":632,"depth":547,"text":632,"children":1420},[1421],{"id":638,"depth":556,"text":638},"markdown","content:1.algorithm:3.leetcode:3.major:56.merge-intervals.md","content","1.algorithm/3.leetcode/3.major/56.merge-intervals.md","md",[1428,1430],{"_path":126,"title":125,"description":1429},"给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。",{"_path":132,"title":131,"description":1431},"给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。",1714056093811]