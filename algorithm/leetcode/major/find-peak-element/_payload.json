[{"data":1,"prerenderedAt":1139},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":466,"/algorithm/leetcode/major/find-peak-element-surround":1134},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":191,"description":470,"url":471,"body":472,"_type":1129,"_id":1130,"_source":1131,"_file":1132,"_extension":1133},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":473,"children":474,"toc":1123},"root",[475,482,487,492,497,502,541,546,586,591,611,617,622,628,1117],{"type":476,"tag":477,"props":478,"children":479},"element","p",{},[480],{"type":481,"value":470},"text",{"type":476,"tag":477,"props":483,"children":484},{},[485],{"type":481,"value":486},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":476,"tag":477,"props":488,"children":489},{},[490],{"type":481,"value":491},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":476,"tag":477,"props":493,"children":494},{},[495],{"type":481,"value":496},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":476,"tag":477,"props":498,"children":499},{},[500],{"type":481,"value":501},"示例 1：",{"type":476,"tag":503,"props":504,"children":507},"pre",{"className":505,"code":506,"language":481,"meta":469,"style":469},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[508],{"type":476,"tag":509,"props":510,"children":511},"code",{"__ignoreMap":469},[512,523,532],{"type":476,"tag":513,"props":514,"children":517},"span",{"class":515,"line":516},"line",1,[518],{"type":476,"tag":513,"props":519,"children":520},{},[521],{"type":481,"value":522},"输入：nums = [1,2,3,1]\n",{"type":476,"tag":513,"props":524,"children":526},{"class":515,"line":525},2,[527],{"type":476,"tag":513,"props":528,"children":529},{},[530],{"type":481,"value":531},"输出：2\n",{"type":476,"tag":513,"props":533,"children":535},{"class":515,"line":534},3,[536],{"type":476,"tag":513,"props":537,"children":538},{},[539],{"type":481,"value":540},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":476,"tag":477,"props":542,"children":543},{},[544],{"type":481,"value":545},"示例 2：",{"type":476,"tag":503,"props":547,"children":549},{"className":505,"code":548,"language":481,"meta":469,"style":469},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[550],{"type":476,"tag":509,"props":551,"children":552},{"__ignoreMap":469},[553,561,569,577],{"type":476,"tag":513,"props":554,"children":555},{"class":515,"line":516},[556],{"type":476,"tag":513,"props":557,"children":558},{},[559],{"type":481,"value":560},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":476,"tag":513,"props":562,"children":563},{"class":515,"line":525},[564],{"type":476,"tag":513,"props":565,"children":566},{},[567],{"type":481,"value":568},"输出：1 或 5\n",{"type":476,"tag":513,"props":570,"children":571},{"class":515,"line":534},[572],{"type":476,"tag":513,"props":573,"children":574},{},[575],{"type":481,"value":576},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":476,"tag":513,"props":578,"children":580},{"class":515,"line":579},4,[581],{"type":476,"tag":513,"props":582,"children":583},{},[584],{"type":481,"value":585},"或者返回索引 5， 其峰值元素为 6。\n",{"type":476,"tag":477,"props":587,"children":588},{},[589],{"type":481,"value":590},"提示：",{"type":476,"tag":592,"props":593,"children":594},"ul",{},[595,601,606],{"type":476,"tag":596,"props":597,"children":598},"li",{},[599],{"type":481,"value":600},"1 \u003C= nums.length \u003C= 1000",{"type":476,"tag":596,"props":602,"children":603},{},[604],{"type":481,"value":605},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":476,"tag":596,"props":607,"children":608},{},[609],{"type":481,"value":610},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":476,"tag":612,"props":613,"children":615},"h2",{"id":614},"解题思路",[616],{"type":481,"value":614},{"type":476,"tag":612,"props":618,"children":620},{"id":619},"实现",[621],{"type":481,"value":619},{"type":476,"tag":623,"props":624,"children":626},"h3",{"id":625},"二分查找",[627],{"type":481,"value":625},{"type":476,"tag":503,"props":629,"children":633},{"className":630,"code":631,"language":632,"meta":469,"style":469},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[634],{"type":476,"tag":509,"props":635,"children":636},{"__ignoreMap":469},[637,646,672,689,697,741,750,759,795,842,883,935,997,1024,1043,1069,1078,1087,1104],{"type":476,"tag":513,"props":638,"children":639},{"class":515,"line":516},[640],{"type":476,"tag":513,"props":641,"children":643},{"style":642},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[644],{"type":481,"value":645},"/**\n",{"type":476,"tag":513,"props":647,"children":648},{"class":515,"line":525},[649,654,660,666],{"type":476,"tag":513,"props":650,"children":651},{"style":642},[652],{"type":481,"value":653}," * ",{"type":476,"tag":513,"props":655,"children":657},{"style":656},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[658],{"type":481,"value":659},"@param",{"type":476,"tag":513,"props":661,"children":663},{"style":662},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[664],{"type":481,"value":665}," {number[]}",{"type":476,"tag":513,"props":667,"children":669},{"style":668},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[670],{"type":481,"value":671}," nums\n",{"type":476,"tag":513,"props":673,"children":674},{"class":515,"line":534},[675,679,684],{"type":476,"tag":513,"props":676,"children":677},{"style":642},[678],{"type":481,"value":653},{"type":476,"tag":513,"props":680,"children":681},{"style":656},[682],{"type":481,"value":683},"@return",{"type":476,"tag":513,"props":685,"children":686},{"style":662},[687],{"type":481,"value":688}," {number}\n",{"type":476,"tag":513,"props":690,"children":691},{"class":515,"line":579},[692],{"type":476,"tag":513,"props":693,"children":694},{"style":642},[695],{"type":481,"value":696}," */\n",{"type":476,"tag":513,"props":698,"children":700},{"class":515,"line":699},5,[701,707,713,719,724,730,736],{"type":476,"tag":513,"props":702,"children":704},{"style":703},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[705],{"type":481,"value":706},"var",{"type":476,"tag":513,"props":708,"children":710},{"style":709},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[711],{"type":481,"value":712}," findPeakElement",{"type":476,"tag":513,"props":714,"children":716},{"style":715},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[717],{"type":481,"value":718}," =",{"type":476,"tag":513,"props":720,"children":721},{"style":703},[722],{"type":481,"value":723}," function",{"type":476,"tag":513,"props":725,"children":727},{"style":726},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[728],{"type":481,"value":729}," (",{"type":476,"tag":513,"props":731,"children":733},{"style":732},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[734],{"type":481,"value":735},"nums",{"type":476,"tag":513,"props":737,"children":738},{"style":726},[739],{"type":481,"value":740},") {\n",{"type":476,"tag":513,"props":742,"children":744},{"class":515,"line":743},6,[745],{"type":476,"tag":513,"props":746,"children":747},{"style":642},[748],{"type":481,"value":749},"  // [0, n - 2]\n",{"type":476,"tag":513,"props":751,"children":753},{"class":515,"line":752},7,[754],{"type":476,"tag":513,"props":755,"children":756},{"style":642},[757],{"type":481,"value":758},"  // (-1, n - 1) 开区间写法\n",{"type":476,"tag":513,"props":760,"children":762},{"class":515,"line":761},8,[763,768,774,778,783,789],{"type":476,"tag":513,"props":764,"children":765},{"style":703},[766],{"type":481,"value":767},"  let",{"type":476,"tag":513,"props":769,"children":771},{"style":770},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[772],{"type":481,"value":773}," l",{"type":476,"tag":513,"props":775,"children":776},{"style":715},[777],{"type":481,"value":718},{"type":476,"tag":513,"props":779,"children":780},{"style":715},[781],{"type":481,"value":782}," -",{"type":476,"tag":513,"props":784,"children":786},{"style":785},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[787],{"type":481,"value":788},"1",{"type":476,"tag":513,"props":790,"children":792},{"style":791},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[793],{"type":481,"value":794},";\n",{"type":476,"tag":513,"props":796,"children":798},{"class":515,"line":797},9,[799,803,808,812,817,823,828,833,838],{"type":476,"tag":513,"props":800,"children":801},{"style":703},[802],{"type":481,"value":767},{"type":476,"tag":513,"props":804,"children":805},{"style":770},[806],{"type":481,"value":807}," r",{"type":476,"tag":513,"props":809,"children":810},{"style":715},[811],{"type":481,"value":718},{"type":476,"tag":513,"props":813,"children":814},{"style":770},[815],{"type":481,"value":816}," nums",{"type":476,"tag":513,"props":818,"children":820},{"style":819},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[821],{"type":481,"value":822},".",{"type":476,"tag":513,"props":824,"children":825},{"style":726},[826],{"type":481,"value":827},"length ",{"type":476,"tag":513,"props":829,"children":830},{"style":715},[831],{"type":481,"value":832},"-",{"type":476,"tag":513,"props":834,"children":835},{"style":785},[836],{"type":481,"value":837}," 1",{"type":476,"tag":513,"props":839,"children":840},{"style":791},[841],{"type":481,"value":794},{"type":476,"tag":513,"props":843,"children":845},{"class":515,"line":844},10,[846,852,856,861,866,870,875,879],{"type":476,"tag":513,"props":847,"children":849},{"style":848},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[850],{"type":481,"value":851},"  while",{"type":476,"tag":513,"props":853,"children":854},{"style":726},[855],{"type":481,"value":729},{"type":476,"tag":513,"props":857,"children":858},{"style":770},[859],{"type":481,"value":860},"l",{"type":476,"tag":513,"props":862,"children":863},{"style":715},[864],{"type":481,"value":865}," +",{"type":476,"tag":513,"props":867,"children":868},{"style":785},[869],{"type":481,"value":837},{"type":476,"tag":513,"props":871,"children":872},{"style":715},[873],{"type":481,"value":874}," \u003C",{"type":476,"tag":513,"props":876,"children":877},{"style":770},[878],{"type":481,"value":807},{"type":476,"tag":513,"props":880,"children":881},{"style":726},[882],{"type":481,"value":740},{"type":476,"tag":513,"props":884,"children":886},{"class":515,"line":885},11,[887,892,897,901,905,909,913,917,922,927,931],{"type":476,"tag":513,"props":888,"children":889},{"style":703},[890],{"type":481,"value":891},"    let",{"type":476,"tag":513,"props":893,"children":894},{"style":770},[895],{"type":481,"value":896}," mid",{"type":476,"tag":513,"props":898,"children":899},{"style":715},[900],{"type":481,"value":718},{"type":476,"tag":513,"props":902,"children":903},{"style":726},[904],{"type":481,"value":729},{"type":476,"tag":513,"props":906,"children":907},{"style":770},[908],{"type":481,"value":860},{"type":476,"tag":513,"props":910,"children":911},{"style":715},[912],{"type":481,"value":865},{"type":476,"tag":513,"props":914,"children":915},{"style":770},[916],{"type":481,"value":807},{"type":476,"tag":513,"props":918,"children":919},{"style":726},[920],{"type":481,"value":921},") ",{"type":476,"tag":513,"props":923,"children":924},{"style":715},[925],{"type":481,"value":926},">>",{"type":476,"tag":513,"props":928,"children":929},{"style":785},[930],{"type":481,"value":837},{"type":476,"tag":513,"props":932,"children":933},{"style":791},[934],{"type":481,"value":794},{"type":476,"tag":513,"props":936,"children":938},{"class":515,"line":937},12,[939,944,948,952,957,962,967,972,976,980,984,988,992],{"type":476,"tag":513,"props":940,"children":941},{"style":848},[942],{"type":481,"value":943},"    if",{"type":476,"tag":513,"props":945,"children":946},{"style":726},[947],{"type":481,"value":729},{"type":476,"tag":513,"props":949,"children":950},{"style":770},[951],{"type":481,"value":735},{"type":476,"tag":513,"props":953,"children":954},{"style":726},[955],{"type":481,"value":956},"[",{"type":476,"tag":513,"props":958,"children":959},{"style":770},[960],{"type":481,"value":961},"mid",{"type":476,"tag":513,"props":963,"children":964},{"style":726},[965],{"type":481,"value":966},"] ",{"type":476,"tag":513,"props":968,"children":969},{"style":715},[970],{"type":481,"value":971},">",{"type":476,"tag":513,"props":973,"children":974},{"style":770},[975],{"type":481,"value":816},{"type":476,"tag":513,"props":977,"children":978},{"style":726},[979],{"type":481,"value":956},{"type":476,"tag":513,"props":981,"children":982},{"style":770},[983],{"type":481,"value":961},{"type":476,"tag":513,"props":985,"children":986},{"style":715},[987],{"type":481,"value":865},{"type":476,"tag":513,"props":989,"children":990},{"style":785},[991],{"type":481,"value":837},{"type":476,"tag":513,"props":993,"children":994},{"style":726},[995],{"type":481,"value":996},"]) {\n",{"type":476,"tag":513,"props":998,"children":1000},{"class":515,"line":999},13,[1001,1006,1010,1014,1019],{"type":476,"tag":513,"props":1002,"children":1003},{"style":770},[1004],{"type":481,"value":1005},"      r",{"type":476,"tag":513,"props":1007,"children":1008},{"style":715},[1009],{"type":481,"value":718},{"type":476,"tag":513,"props":1011,"children":1012},{"style":770},[1013],{"type":481,"value":896},{"type":476,"tag":513,"props":1015,"children":1016},{"style":791},[1017],{"type":481,"value":1018},";",{"type":476,"tag":513,"props":1020,"children":1021},{"style":642},[1022],{"type":481,"value":1023}," // 染蓝色\n",{"type":476,"tag":513,"props":1025,"children":1027},{"class":515,"line":1026},14,[1028,1033,1038],{"type":476,"tag":513,"props":1029,"children":1030},{"style":726},[1031],{"type":481,"value":1032},"    } ",{"type":476,"tag":513,"props":1034,"children":1035},{"style":848},[1036],{"type":481,"value":1037},"else",{"type":476,"tag":513,"props":1039,"children":1040},{"style":726},[1041],{"type":481,"value":1042}," {\n",{"type":476,"tag":513,"props":1044,"children":1046},{"class":515,"line":1045},15,[1047,1052,1056,1060,1064],{"type":476,"tag":513,"props":1048,"children":1049},{"style":770},[1050],{"type":481,"value":1051},"      l",{"type":476,"tag":513,"props":1053,"children":1054},{"style":715},[1055],{"type":481,"value":718},{"type":476,"tag":513,"props":1057,"children":1058},{"style":770},[1059],{"type":481,"value":896},{"type":476,"tag":513,"props":1061,"children":1062},{"style":791},[1063],{"type":481,"value":1018},{"type":476,"tag":513,"props":1065,"children":1066},{"style":642},[1067],{"type":481,"value":1068}," // 染红色\n",{"type":476,"tag":513,"props":1070,"children":1072},{"class":515,"line":1071},16,[1073],{"type":476,"tag":513,"props":1074,"children":1075},{"style":726},[1076],{"type":481,"value":1077},"    }\n",{"type":476,"tag":513,"props":1079,"children":1081},{"class":515,"line":1080},17,[1082],{"type":476,"tag":513,"props":1083,"children":1084},{"style":726},[1085],{"type":481,"value":1086},"  }\n",{"type":476,"tag":513,"props":1088,"children":1090},{"class":515,"line":1089},18,[1091,1096,1100],{"type":476,"tag":513,"props":1092,"children":1093},{"style":848},[1094],{"type":481,"value":1095},"  return",{"type":476,"tag":513,"props":1097,"children":1098},{"style":770},[1099],{"type":481,"value":807},{"type":476,"tag":513,"props":1101,"children":1102},{"style":791},[1103],{"type":481,"value":794},{"type":476,"tag":513,"props":1105,"children":1107},{"class":515,"line":1106},19,[1108,1113],{"type":476,"tag":513,"props":1109,"children":1110},{"style":726},[1111],{"type":481,"value":1112},"}",{"type":476,"tag":513,"props":1114,"children":1115},{"style":791},[1116],{"type":481,"value":794},{"type":476,"tag":1118,"props":1119,"children":1120},"style",{},[1121],{"type":481,"value":1122},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":699,"depth":699,"links":1124},[1125,1126],{"id":614,"depth":525,"text":614},{"id":619,"depth":525,"text":619,"children":1127},[1128],{"id":625,"depth":534,"text":625},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1135,1137],{"_path":189,"title":188,"description":1136},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1138},"给你两个版本号 version1 和 version2 ，请你比较它们。",1714007215431]