[{"data":1,"prerenderedAt":1226},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":524,"/algorithm/leetcode/major/find-peak-element-surround":1221},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":191,"description":528,"url":529,"body":530,"_type":1216,"_id":1217,"_source":1218,"_file":1219,"_extension":1220},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":531,"children":532,"toc":1210},"root",[533,540,545,550,555,560,599,604,644,649,669,675,680,686,1204],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":539,"value":549},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":534,"tag":535,"props":551,"children":552},{},[553],{"type":539,"value":554},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":534,"tag":535,"props":556,"children":557},{},[558],{"type":539,"value":559},"示例 1：",{"type":534,"tag":561,"props":562,"children":565},"pre",{"className":563,"code":564,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[566],{"type":534,"tag":567,"props":568,"children":569},"code",{"__ignoreMap":527},[570,581,590],{"type":534,"tag":571,"props":572,"children":575},"span",{"class":573,"line":574},"line",1,[576],{"type":534,"tag":571,"props":577,"children":578},{},[579],{"type":539,"value":580},"输入：nums = [1,2,3,1]\n",{"type":534,"tag":571,"props":582,"children":584},{"class":573,"line":583},2,[585],{"type":534,"tag":571,"props":586,"children":587},{},[588],{"type":539,"value":589},"输出：2\n",{"type":534,"tag":571,"props":591,"children":593},{"class":573,"line":592},3,[594],{"type":534,"tag":571,"props":595,"children":596},{},[597],{"type":539,"value":598},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":534,"tag":535,"props":600,"children":601},{},[602],{"type":539,"value":603},"示例 2：",{"type":534,"tag":561,"props":605,"children":607},{"className":563,"code":606,"language":539,"meta":527,"style":527},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[608],{"type":534,"tag":567,"props":609,"children":610},{"__ignoreMap":527},[611,619,627,635],{"type":534,"tag":571,"props":612,"children":613},{"class":573,"line":574},[614],{"type":534,"tag":571,"props":615,"children":616},{},[617],{"type":539,"value":618},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":534,"tag":571,"props":620,"children":621},{"class":573,"line":583},[622],{"type":534,"tag":571,"props":623,"children":624},{},[625],{"type":539,"value":626},"输出：1 或 5\n",{"type":534,"tag":571,"props":628,"children":629},{"class":573,"line":592},[630],{"type":534,"tag":571,"props":631,"children":632},{},[633],{"type":539,"value":634},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":534,"tag":571,"props":636,"children":638},{"class":573,"line":637},4,[639],{"type":534,"tag":571,"props":640,"children":641},{},[642],{"type":539,"value":643},"或者返回索引 5， 其峰值元素为 6。\n",{"type":534,"tag":535,"props":645,"children":646},{},[647],{"type":539,"value":648},"提示：",{"type":534,"tag":650,"props":651,"children":652},"ul",{},[653,659,664],{"type":534,"tag":654,"props":655,"children":656},"li",{},[657],{"type":539,"value":658},"1 \u003C= nums.length \u003C= 1000",{"type":534,"tag":654,"props":660,"children":661},{},[662],{"type":539,"value":663},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":534,"tag":654,"props":665,"children":666},{},[667],{"type":539,"value":668},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":534,"tag":670,"props":671,"children":673},"h2",{"id":672},"解题思路",[674],{"type":539,"value":672},{"type":534,"tag":670,"props":676,"children":678},{"id":677},"实现",[679],{"type":539,"value":677},{"type":534,"tag":681,"props":682,"children":684},"h3",{"id":683},"二分查找",[685],{"type":539,"value":683},{"type":534,"tag":561,"props":687,"children":691},{"className":688,"code":689,"language":690,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[692],{"type":534,"tag":567,"props":693,"children":694},{"__ignoreMap":527},[695,704,746,776,784,830,839,848,882,928,972,1023,1089,1116,1134,1160,1169,1178,1195],{"type":534,"tag":571,"props":696,"children":697},{"class":573,"line":574},[698],{"type":534,"tag":571,"props":699,"children":701},{"style":700},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[702],{"type":539,"value":703},"/**\n",{"type":534,"tag":571,"props":705,"children":706},{"class":573,"line":583},[707,712,718,724,729,735,740],{"type":534,"tag":571,"props":708,"children":709},{"style":700},[710],{"type":539,"value":711}," * ",{"type":534,"tag":571,"props":713,"children":715},{"style":714},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[716],{"type":539,"value":717},"@",{"type":534,"tag":571,"props":719,"children":721},{"style":720},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[722],{"type":539,"value":723},"param",{"type":534,"tag":571,"props":725,"children":726},{"style":714},[727],{"type":539,"value":728}," {",{"type":534,"tag":571,"props":730,"children":732},{"style":731},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[733],{"type":539,"value":734},"number[]",{"type":534,"tag":571,"props":736,"children":737},{"style":714},[738],{"type":539,"value":739},"}",{"type":534,"tag":571,"props":741,"children":743},{"style":742},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[744],{"type":539,"value":745}," nums\n",{"type":534,"tag":571,"props":747,"children":748},{"class":573,"line":592},[749,753,757,762,766,771],{"type":534,"tag":571,"props":750,"children":751},{"style":700},[752],{"type":539,"value":711},{"type":534,"tag":571,"props":754,"children":755},{"style":714},[756],{"type":539,"value":717},{"type":534,"tag":571,"props":758,"children":759},{"style":720},[760],{"type":539,"value":761},"return",{"type":534,"tag":571,"props":763,"children":764},{"style":714},[765],{"type":539,"value":728},{"type":534,"tag":571,"props":767,"children":768},{"style":731},[769],{"type":539,"value":770},"number",{"type":534,"tag":571,"props":772,"children":773},{"style":714},[774],{"type":539,"value":775},"}\n",{"type":534,"tag":571,"props":777,"children":778},{"class":573,"line":637},[779],{"type":534,"tag":571,"props":780,"children":781},{"style":700},[782],{"type":539,"value":783}," */\n",{"type":534,"tag":571,"props":785,"children":787},{"class":573,"line":786},5,[788,794,800,805,810,815,820,825],{"type":534,"tag":571,"props":789,"children":791},{"style":790},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[792],{"type":539,"value":793},"var",{"type":534,"tag":571,"props":795,"children":797},{"style":796},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[798],{"type":539,"value":799}," findPeakElement",{"type":534,"tag":571,"props":801,"children":802},{"style":714},[803],{"type":539,"value":804}," =",{"type":534,"tag":571,"props":806,"children":807},{"style":790},[808],{"type":539,"value":809}," function",{"type":534,"tag":571,"props":811,"children":812},{"style":714},[813],{"type":539,"value":814}," (",{"type":534,"tag":571,"props":816,"children":817},{"style":742},[818],{"type":539,"value":819},"nums",{"type":534,"tag":571,"props":821,"children":822},{"style":714},[823],{"type":539,"value":824},")",{"type":534,"tag":571,"props":826,"children":827},{"style":714},[828],{"type":539,"value":829}," {\n",{"type":534,"tag":571,"props":831,"children":833},{"class":573,"line":832},6,[834],{"type":534,"tag":571,"props":835,"children":836},{"style":700},[837],{"type":539,"value":838},"  // [0, n - 2]\n",{"type":534,"tag":571,"props":840,"children":842},{"class":573,"line":841},7,[843],{"type":534,"tag":571,"props":844,"children":845},{"style":700},[846],{"type":539,"value":847},"  // (-1, n - 1) 开区间写法\n",{"type":534,"tag":571,"props":849,"children":851},{"class":573,"line":850},8,[852,857,862,866,871,877],{"type":534,"tag":571,"props":853,"children":854},{"style":790},[855],{"type":539,"value":856},"  let",{"type":534,"tag":571,"props":858,"children":859},{"style":742},[860],{"type":539,"value":861}," l",{"type":534,"tag":571,"props":863,"children":864},{"style":714},[865],{"type":539,"value":804},{"type":534,"tag":571,"props":867,"children":868},{"style":790},[869],{"type":539,"value":870}," -",{"type":534,"tag":571,"props":872,"children":874},{"style":873},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[875],{"type":539,"value":876},"1",{"type":534,"tag":571,"props":878,"children":879},{"style":714},[880],{"type":539,"value":881},";\n",{"type":534,"tag":571,"props":883,"children":885},{"class":573,"line":884},9,[886,890,895,899,904,909,915,919,924],{"type":534,"tag":571,"props":887,"children":888},{"style":790},[889],{"type":539,"value":856},{"type":534,"tag":571,"props":891,"children":892},{"style":742},[893],{"type":539,"value":894}," r",{"type":534,"tag":571,"props":896,"children":897},{"style":714},[898],{"type":539,"value":804},{"type":534,"tag":571,"props":900,"children":901},{"style":742},[902],{"type":539,"value":903}," nums",{"type":534,"tag":571,"props":905,"children":906},{"style":714},[907],{"type":539,"value":908},".",{"type":534,"tag":571,"props":910,"children":912},{"style":911},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[913],{"type":539,"value":914},"length",{"type":534,"tag":571,"props":916,"children":917},{"style":790},[918],{"type":539,"value":870},{"type":534,"tag":571,"props":920,"children":921},{"style":873},[922],{"type":539,"value":923}," 1",{"type":534,"tag":571,"props":925,"children":926},{"style":714},[927],{"type":539,"value":881},{"type":534,"tag":571,"props":929,"children":931},{"class":573,"line":930},10,[932,937,941,946,951,955,960,964,968],{"type":534,"tag":571,"props":933,"children":934},{"style":720},[935],{"type":539,"value":936},"  while",{"type":534,"tag":571,"props":938,"children":939},{"style":714},[940],{"type":539,"value":814},{"type":534,"tag":571,"props":942,"children":943},{"style":742},[944],{"type":539,"value":945},"l",{"type":534,"tag":571,"props":947,"children":948},{"style":790},[949],{"type":539,"value":950}," +",{"type":534,"tag":571,"props":952,"children":953},{"style":873},[954],{"type":539,"value":923},{"type":534,"tag":571,"props":956,"children":957},{"style":714},[958],{"type":539,"value":959}," \u003C",{"type":534,"tag":571,"props":961,"children":962},{"style":742},[963],{"type":539,"value":894},{"type":534,"tag":571,"props":965,"children":966},{"style":714},[967],{"type":539,"value":824},{"type":534,"tag":571,"props":969,"children":970},{"style":714},[971],{"type":539,"value":829},{"type":534,"tag":571,"props":973,"children":975},{"class":573,"line":974},11,[976,981,986,990,994,998,1002,1006,1010,1015,1019],{"type":534,"tag":571,"props":977,"children":978},{"style":790},[979],{"type":539,"value":980},"    let",{"type":534,"tag":571,"props":982,"children":983},{"style":742},[984],{"type":539,"value":985}," mid",{"type":534,"tag":571,"props":987,"children":988},{"style":714},[989],{"type":539,"value":804},{"type":534,"tag":571,"props":991,"children":992},{"style":714},[993],{"type":539,"value":814},{"type":534,"tag":571,"props":995,"children":996},{"style":742},[997],{"type":539,"value":945},{"type":534,"tag":571,"props":999,"children":1000},{"style":790},[1001],{"type":539,"value":950},{"type":534,"tag":571,"props":1003,"children":1004},{"style":742},[1005],{"type":539,"value":894},{"type":534,"tag":571,"props":1007,"children":1008},{"style":714},[1009],{"type":539,"value":824},{"type":534,"tag":571,"props":1011,"children":1012},{"style":790},[1013],{"type":539,"value":1014}," >>",{"type":534,"tag":571,"props":1016,"children":1017},{"style":873},[1018],{"type":539,"value":923},{"type":534,"tag":571,"props":1020,"children":1021},{"style":714},[1022],{"type":539,"value":881},{"type":534,"tag":571,"props":1024,"children":1026},{"class":573,"line":1025},12,[1027,1032,1036,1040,1045,1050,1055,1060,1064,1068,1072,1076,1080,1085],{"type":534,"tag":571,"props":1028,"children":1029},{"style":720},[1030],{"type":539,"value":1031},"    if",{"type":534,"tag":571,"props":1033,"children":1034},{"style":714},[1035],{"type":539,"value":814},{"type":534,"tag":571,"props":1037,"children":1038},{"style":742},[1039],{"type":539,"value":819},{"type":534,"tag":571,"props":1041,"children":1042},{"style":714},[1043],{"type":539,"value":1044},"[",{"type":534,"tag":571,"props":1046,"children":1047},{"style":742},[1048],{"type":539,"value":1049},"mid",{"type":534,"tag":571,"props":1051,"children":1052},{"style":714},[1053],{"type":539,"value":1054},"]",{"type":534,"tag":571,"props":1056,"children":1057},{"style":714},[1058],{"type":539,"value":1059}," >",{"type":534,"tag":571,"props":1061,"children":1062},{"style":742},[1063],{"type":539,"value":903},{"type":534,"tag":571,"props":1065,"children":1066},{"style":714},[1067],{"type":539,"value":1044},{"type":534,"tag":571,"props":1069,"children":1070},{"style":742},[1071],{"type":539,"value":1049},{"type":534,"tag":571,"props":1073,"children":1074},{"style":790},[1075],{"type":539,"value":950},{"type":534,"tag":571,"props":1077,"children":1078},{"style":873},[1079],{"type":539,"value":923},{"type":534,"tag":571,"props":1081,"children":1082},{"style":714},[1083],{"type":539,"value":1084},"])",{"type":534,"tag":571,"props":1086,"children":1087},{"style":714},[1088],{"type":539,"value":829},{"type":534,"tag":571,"props":1090,"children":1092},{"class":573,"line":1091},13,[1093,1098,1102,1106,1111],{"type":534,"tag":571,"props":1094,"children":1095},{"style":742},[1096],{"type":539,"value":1097},"      r",{"type":534,"tag":571,"props":1099,"children":1100},{"style":714},[1101],{"type":539,"value":804},{"type":534,"tag":571,"props":1103,"children":1104},{"style":742},[1105],{"type":539,"value":985},{"type":534,"tag":571,"props":1107,"children":1108},{"style":714},[1109],{"type":539,"value":1110},";",{"type":534,"tag":571,"props":1112,"children":1113},{"style":700},[1114],{"type":539,"value":1115}," // 染蓝色\n",{"type":534,"tag":571,"props":1117,"children":1119},{"class":573,"line":1118},14,[1120,1125,1130],{"type":534,"tag":571,"props":1121,"children":1122},{"style":714},[1123],{"type":539,"value":1124},"    }",{"type":534,"tag":571,"props":1126,"children":1127},{"style":720},[1128],{"type":539,"value":1129}," else",{"type":534,"tag":571,"props":1131,"children":1132},{"style":714},[1133],{"type":539,"value":829},{"type":534,"tag":571,"props":1135,"children":1137},{"class":573,"line":1136},15,[1138,1143,1147,1151,1155],{"type":534,"tag":571,"props":1139,"children":1140},{"style":742},[1141],{"type":539,"value":1142},"      l",{"type":534,"tag":571,"props":1144,"children":1145},{"style":714},[1146],{"type":539,"value":804},{"type":534,"tag":571,"props":1148,"children":1149},{"style":742},[1150],{"type":539,"value":985},{"type":534,"tag":571,"props":1152,"children":1153},{"style":714},[1154],{"type":539,"value":1110},{"type":534,"tag":571,"props":1156,"children":1157},{"style":700},[1158],{"type":539,"value":1159}," // 染红色\n",{"type":534,"tag":571,"props":1161,"children":1163},{"class":573,"line":1162},16,[1164],{"type":534,"tag":571,"props":1165,"children":1166},{"style":714},[1167],{"type":539,"value":1168},"    }\n",{"type":534,"tag":571,"props":1170,"children":1172},{"class":573,"line":1171},17,[1173],{"type":534,"tag":571,"props":1174,"children":1175},{"style":714},[1176],{"type":539,"value":1177},"  }\n",{"type":534,"tag":571,"props":1179,"children":1181},{"class":573,"line":1180},18,[1182,1187,1191],{"type":534,"tag":571,"props":1183,"children":1184},{"style":720},[1185],{"type":539,"value":1186},"  return",{"type":534,"tag":571,"props":1188,"children":1189},{"style":742},[1190],{"type":539,"value":894},{"type":534,"tag":571,"props":1192,"children":1193},{"style":714},[1194],{"type":539,"value":881},{"type":534,"tag":571,"props":1196,"children":1198},{"class":573,"line":1197},19,[1199],{"type":534,"tag":571,"props":1200,"children":1201},{"style":714},[1202],{"type":539,"value":1203},"};\n",{"type":534,"tag":1205,"props":1206,"children":1207},"style",{},[1208],{"type":539,"value":1209},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":786,"depth":786,"links":1211},[1212,1213],{"id":672,"depth":583,"text":672},{"id":677,"depth":583,"text":677,"children":1214},[1215],{"id":683,"depth":592,"text":683},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1222,1224],{"_path":189,"title":188,"description":1223},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1225},"给你两个版本号 version1 和 version2 ，请你比较它们。",1714096144270]