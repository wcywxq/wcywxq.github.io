[{"data":1,"prerenderedAt":1202},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":500,"/algorithm/leetcode/major/find-peak-element-surround":1197},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":191,"description":504,"url":505,"body":506,"_type":1192,"_id":1193,"_source":1194,"_file":1195,"_extension":1196},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":507,"children":508,"toc":1186},"root",[509,516,521,526,531,536,575,580,620,625,645,651,656,662,1180],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":515,"value":525},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":510,"tag":511,"props":527,"children":528},{},[529],{"type":515,"value":530},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":510,"tag":511,"props":532,"children":533},{},[534],{"type":515,"value":535},"示例 1：",{"type":510,"tag":537,"props":538,"children":541},"pre",{"className":539,"code":540,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[542],{"type":510,"tag":543,"props":544,"children":545},"code",{"__ignoreMap":503},[546,557,566],{"type":510,"tag":547,"props":548,"children":551},"span",{"class":549,"line":550},"line",1,[552],{"type":510,"tag":547,"props":553,"children":554},{},[555],{"type":515,"value":556},"输入：nums = [1,2,3,1]\n",{"type":510,"tag":547,"props":558,"children":560},{"class":549,"line":559},2,[561],{"type":510,"tag":547,"props":562,"children":563},{},[564],{"type":515,"value":565},"输出：2\n",{"type":510,"tag":547,"props":567,"children":569},{"class":549,"line":568},3,[570],{"type":510,"tag":547,"props":571,"children":572},{},[573],{"type":515,"value":574},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":510,"tag":511,"props":576,"children":577},{},[578],{"type":515,"value":579},"示例 2：",{"type":510,"tag":537,"props":581,"children":583},{"className":539,"code":582,"language":515,"meta":503,"style":503},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[584],{"type":510,"tag":543,"props":585,"children":586},{"__ignoreMap":503},[587,595,603,611],{"type":510,"tag":547,"props":588,"children":589},{"class":549,"line":550},[590],{"type":510,"tag":547,"props":591,"children":592},{},[593],{"type":515,"value":594},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":510,"tag":547,"props":596,"children":597},{"class":549,"line":559},[598],{"type":510,"tag":547,"props":599,"children":600},{},[601],{"type":515,"value":602},"输出：1 或 5\n",{"type":510,"tag":547,"props":604,"children":605},{"class":549,"line":568},[606],{"type":510,"tag":547,"props":607,"children":608},{},[609],{"type":515,"value":610},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":510,"tag":547,"props":612,"children":614},{"class":549,"line":613},4,[615],{"type":510,"tag":547,"props":616,"children":617},{},[618],{"type":515,"value":619},"或者返回索引 5， 其峰值元素为 6。\n",{"type":510,"tag":511,"props":621,"children":622},{},[623],{"type":515,"value":624},"提示：",{"type":510,"tag":626,"props":627,"children":628},"ul",{},[629,635,640],{"type":510,"tag":630,"props":631,"children":632},"li",{},[633],{"type":515,"value":634},"1 \u003C= nums.length \u003C= 1000",{"type":510,"tag":630,"props":636,"children":637},{},[638],{"type":515,"value":639},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":510,"tag":630,"props":641,"children":642},{},[643],{"type":515,"value":644},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":510,"tag":646,"props":647,"children":649},"h2",{"id":648},"解题思路",[650],{"type":515,"value":648},{"type":510,"tag":646,"props":652,"children":654},{"id":653},"实现",[655],{"type":515,"value":653},{"type":510,"tag":657,"props":658,"children":660},"h3",{"id":659},"二分查找",[661],{"type":515,"value":659},{"type":510,"tag":537,"props":663,"children":667},{"className":664,"code":665,"language":666,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[668],{"type":510,"tag":543,"props":669,"children":670},{"__ignoreMap":503},[671,680,722,752,760,806,815,824,858,904,948,999,1065,1092,1110,1136,1145,1154,1171],{"type":510,"tag":547,"props":672,"children":673},{"class":549,"line":550},[674],{"type":510,"tag":547,"props":675,"children":677},{"style":676},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[678],{"type":515,"value":679},"/**\n",{"type":510,"tag":547,"props":681,"children":682},{"class":549,"line":559},[683,688,694,700,705,711,716],{"type":510,"tag":547,"props":684,"children":685},{"style":676},[686],{"type":515,"value":687}," * ",{"type":510,"tag":547,"props":689,"children":691},{"style":690},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[692],{"type":515,"value":693},"@",{"type":510,"tag":547,"props":695,"children":697},{"style":696},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[698],{"type":515,"value":699},"param",{"type":510,"tag":547,"props":701,"children":702},{"style":690},[703],{"type":515,"value":704}," {",{"type":510,"tag":547,"props":706,"children":708},{"style":707},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[709],{"type":515,"value":710},"number[]",{"type":510,"tag":547,"props":712,"children":713},{"style":690},[714],{"type":515,"value":715},"}",{"type":510,"tag":547,"props":717,"children":719},{"style":718},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[720],{"type":515,"value":721}," nums\n",{"type":510,"tag":547,"props":723,"children":724},{"class":549,"line":568},[725,729,733,738,742,747],{"type":510,"tag":547,"props":726,"children":727},{"style":676},[728],{"type":515,"value":687},{"type":510,"tag":547,"props":730,"children":731},{"style":690},[732],{"type":515,"value":693},{"type":510,"tag":547,"props":734,"children":735},{"style":696},[736],{"type":515,"value":737},"return",{"type":510,"tag":547,"props":739,"children":740},{"style":690},[741],{"type":515,"value":704},{"type":510,"tag":547,"props":743,"children":744},{"style":707},[745],{"type":515,"value":746},"number",{"type":510,"tag":547,"props":748,"children":749},{"style":690},[750],{"type":515,"value":751},"}\n",{"type":510,"tag":547,"props":753,"children":754},{"class":549,"line":613},[755],{"type":510,"tag":547,"props":756,"children":757},{"style":676},[758],{"type":515,"value":759}," */\n",{"type":510,"tag":547,"props":761,"children":763},{"class":549,"line":762},5,[764,770,776,781,786,791,796,801],{"type":510,"tag":547,"props":765,"children":767},{"style":766},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[768],{"type":515,"value":769},"var",{"type":510,"tag":547,"props":771,"children":773},{"style":772},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[774],{"type":515,"value":775}," findPeakElement",{"type":510,"tag":547,"props":777,"children":778},{"style":690},[779],{"type":515,"value":780}," =",{"type":510,"tag":547,"props":782,"children":783},{"style":766},[784],{"type":515,"value":785}," function",{"type":510,"tag":547,"props":787,"children":788},{"style":690},[789],{"type":515,"value":790}," (",{"type":510,"tag":547,"props":792,"children":793},{"style":718},[794],{"type":515,"value":795},"nums",{"type":510,"tag":547,"props":797,"children":798},{"style":690},[799],{"type":515,"value":800},")",{"type":510,"tag":547,"props":802,"children":803},{"style":690},[804],{"type":515,"value":805}," {\n",{"type":510,"tag":547,"props":807,"children":809},{"class":549,"line":808},6,[810],{"type":510,"tag":547,"props":811,"children":812},{"style":676},[813],{"type":515,"value":814},"  // [0, n - 2]\n",{"type":510,"tag":547,"props":816,"children":818},{"class":549,"line":817},7,[819],{"type":510,"tag":547,"props":820,"children":821},{"style":676},[822],{"type":515,"value":823},"  // (-1, n - 1) 开区间写法\n",{"type":510,"tag":547,"props":825,"children":827},{"class":549,"line":826},8,[828,833,838,842,847,853],{"type":510,"tag":547,"props":829,"children":830},{"style":766},[831],{"type":515,"value":832},"  let",{"type":510,"tag":547,"props":834,"children":835},{"style":718},[836],{"type":515,"value":837}," l",{"type":510,"tag":547,"props":839,"children":840},{"style":690},[841],{"type":515,"value":780},{"type":510,"tag":547,"props":843,"children":844},{"style":766},[845],{"type":515,"value":846}," -",{"type":510,"tag":547,"props":848,"children":850},{"style":849},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[851],{"type":515,"value":852},"1",{"type":510,"tag":547,"props":854,"children":855},{"style":690},[856],{"type":515,"value":857},";\n",{"type":510,"tag":547,"props":859,"children":861},{"class":549,"line":860},9,[862,866,871,875,880,885,891,895,900],{"type":510,"tag":547,"props":863,"children":864},{"style":766},[865],{"type":515,"value":832},{"type":510,"tag":547,"props":867,"children":868},{"style":718},[869],{"type":515,"value":870}," r",{"type":510,"tag":547,"props":872,"children":873},{"style":690},[874],{"type":515,"value":780},{"type":510,"tag":547,"props":876,"children":877},{"style":718},[878],{"type":515,"value":879}," nums",{"type":510,"tag":547,"props":881,"children":882},{"style":690},[883],{"type":515,"value":884},".",{"type":510,"tag":547,"props":886,"children":888},{"style":887},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[889],{"type":515,"value":890},"length",{"type":510,"tag":547,"props":892,"children":893},{"style":766},[894],{"type":515,"value":846},{"type":510,"tag":547,"props":896,"children":897},{"style":849},[898],{"type":515,"value":899}," 1",{"type":510,"tag":547,"props":901,"children":902},{"style":690},[903],{"type":515,"value":857},{"type":510,"tag":547,"props":905,"children":907},{"class":549,"line":906},10,[908,913,917,922,927,931,936,940,944],{"type":510,"tag":547,"props":909,"children":910},{"style":696},[911],{"type":515,"value":912},"  while",{"type":510,"tag":547,"props":914,"children":915},{"style":690},[916],{"type":515,"value":790},{"type":510,"tag":547,"props":918,"children":919},{"style":718},[920],{"type":515,"value":921},"l",{"type":510,"tag":547,"props":923,"children":924},{"style":766},[925],{"type":515,"value":926}," +",{"type":510,"tag":547,"props":928,"children":929},{"style":849},[930],{"type":515,"value":899},{"type":510,"tag":547,"props":932,"children":933},{"style":690},[934],{"type":515,"value":935}," \u003C",{"type":510,"tag":547,"props":937,"children":938},{"style":718},[939],{"type":515,"value":870},{"type":510,"tag":547,"props":941,"children":942},{"style":690},[943],{"type":515,"value":800},{"type":510,"tag":547,"props":945,"children":946},{"style":690},[947],{"type":515,"value":805},{"type":510,"tag":547,"props":949,"children":951},{"class":549,"line":950},11,[952,957,962,966,970,974,978,982,986,991,995],{"type":510,"tag":547,"props":953,"children":954},{"style":766},[955],{"type":515,"value":956},"    let",{"type":510,"tag":547,"props":958,"children":959},{"style":718},[960],{"type":515,"value":961}," mid",{"type":510,"tag":547,"props":963,"children":964},{"style":690},[965],{"type":515,"value":780},{"type":510,"tag":547,"props":967,"children":968},{"style":690},[969],{"type":515,"value":790},{"type":510,"tag":547,"props":971,"children":972},{"style":718},[973],{"type":515,"value":921},{"type":510,"tag":547,"props":975,"children":976},{"style":766},[977],{"type":515,"value":926},{"type":510,"tag":547,"props":979,"children":980},{"style":718},[981],{"type":515,"value":870},{"type":510,"tag":547,"props":983,"children":984},{"style":690},[985],{"type":515,"value":800},{"type":510,"tag":547,"props":987,"children":988},{"style":766},[989],{"type":515,"value":990}," >>",{"type":510,"tag":547,"props":992,"children":993},{"style":849},[994],{"type":515,"value":899},{"type":510,"tag":547,"props":996,"children":997},{"style":690},[998],{"type":515,"value":857},{"type":510,"tag":547,"props":1000,"children":1002},{"class":549,"line":1001},12,[1003,1008,1012,1016,1021,1026,1031,1036,1040,1044,1048,1052,1056,1061],{"type":510,"tag":547,"props":1004,"children":1005},{"style":696},[1006],{"type":515,"value":1007},"    if",{"type":510,"tag":547,"props":1009,"children":1010},{"style":690},[1011],{"type":515,"value":790},{"type":510,"tag":547,"props":1013,"children":1014},{"style":718},[1015],{"type":515,"value":795},{"type":510,"tag":547,"props":1017,"children":1018},{"style":690},[1019],{"type":515,"value":1020},"[",{"type":510,"tag":547,"props":1022,"children":1023},{"style":718},[1024],{"type":515,"value":1025},"mid",{"type":510,"tag":547,"props":1027,"children":1028},{"style":690},[1029],{"type":515,"value":1030},"]",{"type":510,"tag":547,"props":1032,"children":1033},{"style":690},[1034],{"type":515,"value":1035}," >",{"type":510,"tag":547,"props":1037,"children":1038},{"style":718},[1039],{"type":515,"value":879},{"type":510,"tag":547,"props":1041,"children":1042},{"style":690},[1043],{"type":515,"value":1020},{"type":510,"tag":547,"props":1045,"children":1046},{"style":718},[1047],{"type":515,"value":1025},{"type":510,"tag":547,"props":1049,"children":1050},{"style":766},[1051],{"type":515,"value":926},{"type":510,"tag":547,"props":1053,"children":1054},{"style":849},[1055],{"type":515,"value":899},{"type":510,"tag":547,"props":1057,"children":1058},{"style":690},[1059],{"type":515,"value":1060},"])",{"type":510,"tag":547,"props":1062,"children":1063},{"style":690},[1064],{"type":515,"value":805},{"type":510,"tag":547,"props":1066,"children":1068},{"class":549,"line":1067},13,[1069,1074,1078,1082,1087],{"type":510,"tag":547,"props":1070,"children":1071},{"style":718},[1072],{"type":515,"value":1073},"      r",{"type":510,"tag":547,"props":1075,"children":1076},{"style":690},[1077],{"type":515,"value":780},{"type":510,"tag":547,"props":1079,"children":1080},{"style":718},[1081],{"type":515,"value":961},{"type":510,"tag":547,"props":1083,"children":1084},{"style":690},[1085],{"type":515,"value":1086},";",{"type":510,"tag":547,"props":1088,"children":1089},{"style":676},[1090],{"type":515,"value":1091}," // 染蓝色\n",{"type":510,"tag":547,"props":1093,"children":1095},{"class":549,"line":1094},14,[1096,1101,1106],{"type":510,"tag":547,"props":1097,"children":1098},{"style":690},[1099],{"type":515,"value":1100},"    }",{"type":510,"tag":547,"props":1102,"children":1103},{"style":696},[1104],{"type":515,"value":1105}," else",{"type":510,"tag":547,"props":1107,"children":1108},{"style":690},[1109],{"type":515,"value":805},{"type":510,"tag":547,"props":1111,"children":1113},{"class":549,"line":1112},15,[1114,1119,1123,1127,1131],{"type":510,"tag":547,"props":1115,"children":1116},{"style":718},[1117],{"type":515,"value":1118},"      l",{"type":510,"tag":547,"props":1120,"children":1121},{"style":690},[1122],{"type":515,"value":780},{"type":510,"tag":547,"props":1124,"children":1125},{"style":718},[1126],{"type":515,"value":961},{"type":510,"tag":547,"props":1128,"children":1129},{"style":690},[1130],{"type":515,"value":1086},{"type":510,"tag":547,"props":1132,"children":1133},{"style":676},[1134],{"type":515,"value":1135}," // 染红色\n",{"type":510,"tag":547,"props":1137,"children":1139},{"class":549,"line":1138},16,[1140],{"type":510,"tag":547,"props":1141,"children":1142},{"style":690},[1143],{"type":515,"value":1144},"    }\n",{"type":510,"tag":547,"props":1146,"children":1148},{"class":549,"line":1147},17,[1149],{"type":510,"tag":547,"props":1150,"children":1151},{"style":690},[1152],{"type":515,"value":1153},"  }\n",{"type":510,"tag":547,"props":1155,"children":1157},{"class":549,"line":1156},18,[1158,1163,1167],{"type":510,"tag":547,"props":1159,"children":1160},{"style":696},[1161],{"type":515,"value":1162},"  return",{"type":510,"tag":547,"props":1164,"children":1165},{"style":718},[1166],{"type":515,"value":870},{"type":510,"tag":547,"props":1168,"children":1169},{"style":690},[1170],{"type":515,"value":857},{"type":510,"tag":547,"props":1172,"children":1174},{"class":549,"line":1173},19,[1175],{"type":510,"tag":547,"props":1176,"children":1177},{"style":690},[1178],{"type":515,"value":1179},"};\n",{"type":510,"tag":1181,"props":1182,"children":1183},"style",{},[1184],{"type":515,"value":1185},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":762,"depth":762,"links":1187},[1188,1189],{"id":648,"depth":559,"text":648},{"id":653,"depth":559,"text":653,"children":1190},[1191],{"id":659,"depth":568,"text":659},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1198,1200],{"_path":189,"title":188,"description":1199},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1201},"给你两个版本号 version1 和 version2 ，请你比较它们。",1714054338270]