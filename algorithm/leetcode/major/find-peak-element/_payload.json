[{"data":1,"prerenderedAt":1253},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":551,"/algorithm/leetcode/major/find-peak-element-surround":1248},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":191,"description":555,"url":556,"body":557,"_type":1243,"_id":1244,"_source":1245,"_file":1246,"_extension":1247},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":558,"children":559,"toc":1237},"root",[560,567,572,577,582,587,626,631,671,676,696,702,707,713,1231],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":566,"value":576},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":561,"tag":562,"props":578,"children":579},{},[580],{"type":566,"value":581},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":561,"tag":562,"props":583,"children":584},{},[585],{"type":566,"value":586},"示例 1：",{"type":561,"tag":588,"props":589,"children":592},"pre",{"className":590,"code":591,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[593],{"type":561,"tag":594,"props":595,"children":596},"code",{"__ignoreMap":554},[597,608,617],{"type":561,"tag":598,"props":599,"children":602},"span",{"class":600,"line":601},"line",1,[603],{"type":561,"tag":598,"props":604,"children":605},{},[606],{"type":566,"value":607},"输入：nums = [1,2,3,1]\n",{"type":561,"tag":598,"props":609,"children":611},{"class":600,"line":610},2,[612],{"type":561,"tag":598,"props":613,"children":614},{},[615],{"type":566,"value":616},"输出：2\n",{"type":561,"tag":598,"props":618,"children":620},{"class":600,"line":619},3,[621],{"type":561,"tag":598,"props":622,"children":623},{},[624],{"type":566,"value":625},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":561,"tag":562,"props":627,"children":628},{},[629],{"type":566,"value":630},"示例 2：",{"type":561,"tag":588,"props":632,"children":634},{"className":590,"code":633,"language":566,"meta":554,"style":554},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[635],{"type":561,"tag":594,"props":636,"children":637},{"__ignoreMap":554},[638,646,654,662],{"type":561,"tag":598,"props":639,"children":640},{"class":600,"line":601},[641],{"type":561,"tag":598,"props":642,"children":643},{},[644],{"type":566,"value":645},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":561,"tag":598,"props":647,"children":648},{"class":600,"line":610},[649],{"type":561,"tag":598,"props":650,"children":651},{},[652],{"type":566,"value":653},"输出：1 或 5\n",{"type":561,"tag":598,"props":655,"children":656},{"class":600,"line":619},[657],{"type":561,"tag":598,"props":658,"children":659},{},[660],{"type":566,"value":661},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":561,"tag":598,"props":663,"children":665},{"class":600,"line":664},4,[666],{"type":561,"tag":598,"props":667,"children":668},{},[669],{"type":566,"value":670},"或者返回索引 5， 其峰值元素为 6。\n",{"type":561,"tag":562,"props":672,"children":673},{},[674],{"type":566,"value":675},"提示：",{"type":561,"tag":677,"props":678,"children":679},"ul",{},[680,686,691],{"type":561,"tag":681,"props":682,"children":683},"li",{},[684],{"type":566,"value":685},"1 \u003C= nums.length \u003C= 1000",{"type":561,"tag":681,"props":687,"children":688},{},[689],{"type":566,"value":690},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":561,"tag":681,"props":692,"children":693},{},[694],{"type":566,"value":695},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":561,"tag":697,"props":698,"children":700},"h2",{"id":699},"解题思路",[701],{"type":566,"value":699},{"type":561,"tag":697,"props":703,"children":705},{"id":704},"实现",[706],{"type":566,"value":704},{"type":561,"tag":708,"props":709,"children":711},"h3",{"id":710},"二分查找",[712],{"type":566,"value":710},{"type":561,"tag":588,"props":714,"children":718},{"className":715,"code":716,"language":717,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[719],{"type":561,"tag":594,"props":720,"children":721},{"__ignoreMap":554},[722,731,773,803,811,857,866,875,909,955,999,1050,1116,1143,1161,1187,1196,1205,1222],{"type":561,"tag":598,"props":723,"children":724},{"class":600,"line":601},[725],{"type":561,"tag":598,"props":726,"children":728},{"style":727},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[729],{"type":566,"value":730},"/**\n",{"type":561,"tag":598,"props":732,"children":733},{"class":600,"line":610},[734,739,745,751,756,762,767],{"type":561,"tag":598,"props":735,"children":736},{"style":727},[737],{"type":566,"value":738}," * ",{"type":561,"tag":598,"props":740,"children":742},{"style":741},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[743],{"type":566,"value":744},"@",{"type":561,"tag":598,"props":746,"children":748},{"style":747},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[749],{"type":566,"value":750},"param",{"type":561,"tag":598,"props":752,"children":753},{"style":741},[754],{"type":566,"value":755}," {",{"type":561,"tag":598,"props":757,"children":759},{"style":758},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[760],{"type":566,"value":761},"number[]",{"type":561,"tag":598,"props":763,"children":764},{"style":741},[765],{"type":566,"value":766},"}",{"type":561,"tag":598,"props":768,"children":770},{"style":769},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[771],{"type":566,"value":772}," nums\n",{"type":561,"tag":598,"props":774,"children":775},{"class":600,"line":619},[776,780,784,789,793,798],{"type":561,"tag":598,"props":777,"children":778},{"style":727},[779],{"type":566,"value":738},{"type":561,"tag":598,"props":781,"children":782},{"style":741},[783],{"type":566,"value":744},{"type":561,"tag":598,"props":785,"children":786},{"style":747},[787],{"type":566,"value":788},"return",{"type":561,"tag":598,"props":790,"children":791},{"style":741},[792],{"type":566,"value":755},{"type":561,"tag":598,"props":794,"children":795},{"style":758},[796],{"type":566,"value":797},"number",{"type":561,"tag":598,"props":799,"children":800},{"style":741},[801],{"type":566,"value":802},"}\n",{"type":561,"tag":598,"props":804,"children":805},{"class":600,"line":664},[806],{"type":561,"tag":598,"props":807,"children":808},{"style":727},[809],{"type":566,"value":810}," */\n",{"type":561,"tag":598,"props":812,"children":814},{"class":600,"line":813},5,[815,821,827,832,837,842,847,852],{"type":561,"tag":598,"props":816,"children":818},{"style":817},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[819],{"type":566,"value":820},"var",{"type":561,"tag":598,"props":822,"children":824},{"style":823},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[825],{"type":566,"value":826}," findPeakElement",{"type":561,"tag":598,"props":828,"children":829},{"style":741},[830],{"type":566,"value":831}," =",{"type":561,"tag":598,"props":833,"children":834},{"style":817},[835],{"type":566,"value":836}," function",{"type":561,"tag":598,"props":838,"children":839},{"style":741},[840],{"type":566,"value":841}," (",{"type":561,"tag":598,"props":843,"children":844},{"style":769},[845],{"type":566,"value":846},"nums",{"type":561,"tag":598,"props":848,"children":849},{"style":741},[850],{"type":566,"value":851},")",{"type":561,"tag":598,"props":853,"children":854},{"style":741},[855],{"type":566,"value":856}," {\n",{"type":561,"tag":598,"props":858,"children":860},{"class":600,"line":859},6,[861],{"type":561,"tag":598,"props":862,"children":863},{"style":727},[864],{"type":566,"value":865},"  // [0, n - 2]\n",{"type":561,"tag":598,"props":867,"children":869},{"class":600,"line":868},7,[870],{"type":561,"tag":598,"props":871,"children":872},{"style":727},[873],{"type":566,"value":874},"  // (-1, n - 1) 开区间写法\n",{"type":561,"tag":598,"props":876,"children":878},{"class":600,"line":877},8,[879,884,889,893,898,904],{"type":561,"tag":598,"props":880,"children":881},{"style":817},[882],{"type":566,"value":883},"  let",{"type":561,"tag":598,"props":885,"children":886},{"style":769},[887],{"type":566,"value":888}," l",{"type":561,"tag":598,"props":890,"children":891},{"style":741},[892],{"type":566,"value":831},{"type":561,"tag":598,"props":894,"children":895},{"style":817},[896],{"type":566,"value":897}," -",{"type":561,"tag":598,"props":899,"children":901},{"style":900},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[902],{"type":566,"value":903},"1",{"type":561,"tag":598,"props":905,"children":906},{"style":741},[907],{"type":566,"value":908},";\n",{"type":561,"tag":598,"props":910,"children":912},{"class":600,"line":911},9,[913,917,922,926,931,936,942,946,951],{"type":561,"tag":598,"props":914,"children":915},{"style":817},[916],{"type":566,"value":883},{"type":561,"tag":598,"props":918,"children":919},{"style":769},[920],{"type":566,"value":921}," r",{"type":561,"tag":598,"props":923,"children":924},{"style":741},[925],{"type":566,"value":831},{"type":561,"tag":598,"props":927,"children":928},{"style":769},[929],{"type":566,"value":930}," nums",{"type":561,"tag":598,"props":932,"children":933},{"style":741},[934],{"type":566,"value":935},".",{"type":561,"tag":598,"props":937,"children":939},{"style":938},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[940],{"type":566,"value":941},"length",{"type":561,"tag":598,"props":943,"children":944},{"style":817},[945],{"type":566,"value":897},{"type":561,"tag":598,"props":947,"children":948},{"style":900},[949],{"type":566,"value":950}," 1",{"type":561,"tag":598,"props":952,"children":953},{"style":741},[954],{"type":566,"value":908},{"type":561,"tag":598,"props":956,"children":958},{"class":600,"line":957},10,[959,964,968,973,978,982,987,991,995],{"type":561,"tag":598,"props":960,"children":961},{"style":747},[962],{"type":566,"value":963},"  while",{"type":561,"tag":598,"props":965,"children":966},{"style":741},[967],{"type":566,"value":841},{"type":561,"tag":598,"props":969,"children":970},{"style":769},[971],{"type":566,"value":972},"l",{"type":561,"tag":598,"props":974,"children":975},{"style":817},[976],{"type":566,"value":977}," +",{"type":561,"tag":598,"props":979,"children":980},{"style":900},[981],{"type":566,"value":950},{"type":561,"tag":598,"props":983,"children":984},{"style":741},[985],{"type":566,"value":986}," \u003C",{"type":561,"tag":598,"props":988,"children":989},{"style":769},[990],{"type":566,"value":921},{"type":561,"tag":598,"props":992,"children":993},{"style":741},[994],{"type":566,"value":851},{"type":561,"tag":598,"props":996,"children":997},{"style":741},[998],{"type":566,"value":856},{"type":561,"tag":598,"props":1000,"children":1002},{"class":600,"line":1001},11,[1003,1008,1013,1017,1021,1025,1029,1033,1037,1042,1046],{"type":561,"tag":598,"props":1004,"children":1005},{"style":817},[1006],{"type":566,"value":1007},"    let",{"type":561,"tag":598,"props":1009,"children":1010},{"style":769},[1011],{"type":566,"value":1012}," mid",{"type":561,"tag":598,"props":1014,"children":1015},{"style":741},[1016],{"type":566,"value":831},{"type":561,"tag":598,"props":1018,"children":1019},{"style":741},[1020],{"type":566,"value":841},{"type":561,"tag":598,"props":1022,"children":1023},{"style":769},[1024],{"type":566,"value":972},{"type":561,"tag":598,"props":1026,"children":1027},{"style":817},[1028],{"type":566,"value":977},{"type":561,"tag":598,"props":1030,"children":1031},{"style":769},[1032],{"type":566,"value":921},{"type":561,"tag":598,"props":1034,"children":1035},{"style":741},[1036],{"type":566,"value":851},{"type":561,"tag":598,"props":1038,"children":1039},{"style":817},[1040],{"type":566,"value":1041}," >>",{"type":561,"tag":598,"props":1043,"children":1044},{"style":900},[1045],{"type":566,"value":950},{"type":561,"tag":598,"props":1047,"children":1048},{"style":741},[1049],{"type":566,"value":908},{"type":561,"tag":598,"props":1051,"children":1053},{"class":600,"line":1052},12,[1054,1059,1063,1067,1072,1077,1082,1087,1091,1095,1099,1103,1107,1112],{"type":561,"tag":598,"props":1055,"children":1056},{"style":747},[1057],{"type":566,"value":1058},"    if",{"type":561,"tag":598,"props":1060,"children":1061},{"style":741},[1062],{"type":566,"value":841},{"type":561,"tag":598,"props":1064,"children":1065},{"style":769},[1066],{"type":566,"value":846},{"type":561,"tag":598,"props":1068,"children":1069},{"style":741},[1070],{"type":566,"value":1071},"[",{"type":561,"tag":598,"props":1073,"children":1074},{"style":769},[1075],{"type":566,"value":1076},"mid",{"type":561,"tag":598,"props":1078,"children":1079},{"style":741},[1080],{"type":566,"value":1081},"]",{"type":561,"tag":598,"props":1083,"children":1084},{"style":741},[1085],{"type":566,"value":1086}," >",{"type":561,"tag":598,"props":1088,"children":1089},{"style":769},[1090],{"type":566,"value":930},{"type":561,"tag":598,"props":1092,"children":1093},{"style":741},[1094],{"type":566,"value":1071},{"type":561,"tag":598,"props":1096,"children":1097},{"style":769},[1098],{"type":566,"value":1076},{"type":561,"tag":598,"props":1100,"children":1101},{"style":817},[1102],{"type":566,"value":977},{"type":561,"tag":598,"props":1104,"children":1105},{"style":900},[1106],{"type":566,"value":950},{"type":561,"tag":598,"props":1108,"children":1109},{"style":741},[1110],{"type":566,"value":1111},"])",{"type":561,"tag":598,"props":1113,"children":1114},{"style":741},[1115],{"type":566,"value":856},{"type":561,"tag":598,"props":1117,"children":1119},{"class":600,"line":1118},13,[1120,1125,1129,1133,1138],{"type":561,"tag":598,"props":1121,"children":1122},{"style":769},[1123],{"type":566,"value":1124},"      r",{"type":561,"tag":598,"props":1126,"children":1127},{"style":741},[1128],{"type":566,"value":831},{"type":561,"tag":598,"props":1130,"children":1131},{"style":769},[1132],{"type":566,"value":1012},{"type":561,"tag":598,"props":1134,"children":1135},{"style":741},[1136],{"type":566,"value":1137},";",{"type":561,"tag":598,"props":1139,"children":1140},{"style":727},[1141],{"type":566,"value":1142}," // 染蓝色\n",{"type":561,"tag":598,"props":1144,"children":1146},{"class":600,"line":1145},14,[1147,1152,1157],{"type":561,"tag":598,"props":1148,"children":1149},{"style":741},[1150],{"type":566,"value":1151},"    }",{"type":561,"tag":598,"props":1153,"children":1154},{"style":747},[1155],{"type":566,"value":1156}," else",{"type":561,"tag":598,"props":1158,"children":1159},{"style":741},[1160],{"type":566,"value":856},{"type":561,"tag":598,"props":1162,"children":1164},{"class":600,"line":1163},15,[1165,1170,1174,1178,1182],{"type":561,"tag":598,"props":1166,"children":1167},{"style":769},[1168],{"type":566,"value":1169},"      l",{"type":561,"tag":598,"props":1171,"children":1172},{"style":741},[1173],{"type":566,"value":831},{"type":561,"tag":598,"props":1175,"children":1176},{"style":769},[1177],{"type":566,"value":1012},{"type":561,"tag":598,"props":1179,"children":1180},{"style":741},[1181],{"type":566,"value":1137},{"type":561,"tag":598,"props":1183,"children":1184},{"style":727},[1185],{"type":566,"value":1186}," // 染红色\n",{"type":561,"tag":598,"props":1188,"children":1190},{"class":600,"line":1189},16,[1191],{"type":561,"tag":598,"props":1192,"children":1193},{"style":741},[1194],{"type":566,"value":1195},"    }\n",{"type":561,"tag":598,"props":1197,"children":1199},{"class":600,"line":1198},17,[1200],{"type":561,"tag":598,"props":1201,"children":1202},{"style":741},[1203],{"type":566,"value":1204},"  }\n",{"type":561,"tag":598,"props":1206,"children":1208},{"class":600,"line":1207},18,[1209,1214,1218],{"type":561,"tag":598,"props":1210,"children":1211},{"style":747},[1212],{"type":566,"value":1213},"  return",{"type":561,"tag":598,"props":1215,"children":1216},{"style":769},[1217],{"type":566,"value":921},{"type":561,"tag":598,"props":1219,"children":1220},{"style":741},[1221],{"type":566,"value":908},{"type":561,"tag":598,"props":1223,"children":1225},{"class":600,"line":1224},19,[1226],{"type":561,"tag":598,"props":1227,"children":1228},{"style":741},[1229],{"type":566,"value":1230},"};\n",{"type":561,"tag":1232,"props":1233,"children":1234},"style",{},[1235],{"type":566,"value":1236},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":813,"depth":813,"links":1238},[1239,1240],{"id":699,"depth":610,"text":699},{"id":704,"depth":610,"text":704,"children":1241},[1242],{"id":710,"depth":619,"text":710},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1249,1251],{"_path":189,"title":188,"description":1250},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1252},"给你两个版本号 version1 和 version2 ，请你比较它们。",1715094971118]