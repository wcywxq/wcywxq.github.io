[{"data":1,"prerenderedAt":1248},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":546,"/algorithm/leetcode/major/find-peak-element-surround":1243},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":191,"description":550,"url":551,"body":552,"_type":1238,"_id":1239,"_source":1240,"_file":1241,"_extension":1242},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":553,"children":554,"toc":1232},"root",[555,562,567,572,577,582,621,626,666,671,691,697,702,708,1226],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":556,"tag":557,"props":568,"children":569},{},[570],{"type":561,"value":571},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":556,"tag":557,"props":573,"children":574},{},[575],{"type":561,"value":576},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":556,"tag":557,"props":578,"children":579},{},[580],{"type":561,"value":581},"示例 1：",{"type":556,"tag":583,"props":584,"children":587},"pre",{"className":585,"code":586,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[588],{"type":556,"tag":589,"props":590,"children":591},"code",{"__ignoreMap":549},[592,603,612],{"type":556,"tag":593,"props":594,"children":597},"span",{"class":595,"line":596},"line",1,[598],{"type":556,"tag":593,"props":599,"children":600},{},[601],{"type":561,"value":602},"输入：nums = [1,2,3,1]\n",{"type":556,"tag":593,"props":604,"children":606},{"class":595,"line":605},2,[607],{"type":556,"tag":593,"props":608,"children":609},{},[610],{"type":561,"value":611},"输出：2\n",{"type":556,"tag":593,"props":613,"children":615},{"class":595,"line":614},3,[616],{"type":556,"tag":593,"props":617,"children":618},{},[619],{"type":561,"value":620},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":556,"tag":557,"props":622,"children":623},{},[624],{"type":561,"value":625},"示例 2：",{"type":556,"tag":583,"props":627,"children":629},{"className":585,"code":628,"language":561,"meta":549,"style":549},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[630],{"type":556,"tag":589,"props":631,"children":632},{"__ignoreMap":549},[633,641,649,657],{"type":556,"tag":593,"props":634,"children":635},{"class":595,"line":596},[636],{"type":556,"tag":593,"props":637,"children":638},{},[639],{"type":561,"value":640},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":556,"tag":593,"props":642,"children":643},{"class":595,"line":605},[644],{"type":556,"tag":593,"props":645,"children":646},{},[647],{"type":561,"value":648},"输出：1 或 5\n",{"type":556,"tag":593,"props":650,"children":651},{"class":595,"line":614},[652],{"type":556,"tag":593,"props":653,"children":654},{},[655],{"type":561,"value":656},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":556,"tag":593,"props":658,"children":660},{"class":595,"line":659},4,[661],{"type":556,"tag":593,"props":662,"children":663},{},[664],{"type":561,"value":665},"或者返回索引 5， 其峰值元素为 6。\n",{"type":556,"tag":557,"props":667,"children":668},{},[669],{"type":561,"value":670},"提示：",{"type":556,"tag":672,"props":673,"children":674},"ul",{},[675,681,686],{"type":556,"tag":676,"props":677,"children":678},"li",{},[679],{"type":561,"value":680},"1 \u003C= nums.length \u003C= 1000",{"type":556,"tag":676,"props":682,"children":683},{},[684],{"type":561,"value":685},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":556,"tag":676,"props":687,"children":688},{},[689],{"type":561,"value":690},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":556,"tag":692,"props":693,"children":695},"h2",{"id":694},"解题思路",[696],{"type":561,"value":694},{"type":556,"tag":692,"props":698,"children":700},{"id":699},"实现",[701],{"type":561,"value":699},{"type":556,"tag":703,"props":704,"children":706},"h3",{"id":705},"二分查找",[707],{"type":561,"value":705},{"type":556,"tag":583,"props":709,"children":713},{"className":710,"code":711,"language":712,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[714],{"type":556,"tag":589,"props":715,"children":716},{"__ignoreMap":549},[717,726,768,798,806,852,861,870,904,950,994,1045,1111,1138,1156,1182,1191,1200,1217],{"type":556,"tag":593,"props":718,"children":719},{"class":595,"line":596},[720],{"type":556,"tag":593,"props":721,"children":723},{"style":722},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[724],{"type":561,"value":725},"/**\n",{"type":556,"tag":593,"props":727,"children":728},{"class":595,"line":605},[729,734,740,746,751,757,762],{"type":556,"tag":593,"props":730,"children":731},{"style":722},[732],{"type":561,"value":733}," * ",{"type":556,"tag":593,"props":735,"children":737},{"style":736},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[738],{"type":561,"value":739},"@",{"type":556,"tag":593,"props":741,"children":743},{"style":742},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[744],{"type":561,"value":745},"param",{"type":556,"tag":593,"props":747,"children":748},{"style":736},[749],{"type":561,"value":750}," {",{"type":556,"tag":593,"props":752,"children":754},{"style":753},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[755],{"type":561,"value":756},"number[]",{"type":556,"tag":593,"props":758,"children":759},{"style":736},[760],{"type":561,"value":761},"}",{"type":556,"tag":593,"props":763,"children":765},{"style":764},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[766],{"type":561,"value":767}," nums\n",{"type":556,"tag":593,"props":769,"children":770},{"class":595,"line":614},[771,775,779,784,788,793],{"type":556,"tag":593,"props":772,"children":773},{"style":722},[774],{"type":561,"value":733},{"type":556,"tag":593,"props":776,"children":777},{"style":736},[778],{"type":561,"value":739},{"type":556,"tag":593,"props":780,"children":781},{"style":742},[782],{"type":561,"value":783},"return",{"type":556,"tag":593,"props":785,"children":786},{"style":736},[787],{"type":561,"value":750},{"type":556,"tag":593,"props":789,"children":790},{"style":753},[791],{"type":561,"value":792},"number",{"type":556,"tag":593,"props":794,"children":795},{"style":736},[796],{"type":561,"value":797},"}\n",{"type":556,"tag":593,"props":799,"children":800},{"class":595,"line":659},[801],{"type":556,"tag":593,"props":802,"children":803},{"style":722},[804],{"type":561,"value":805}," */\n",{"type":556,"tag":593,"props":807,"children":809},{"class":595,"line":808},5,[810,816,822,827,832,837,842,847],{"type":556,"tag":593,"props":811,"children":813},{"style":812},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[814],{"type":561,"value":815},"var",{"type":556,"tag":593,"props":817,"children":819},{"style":818},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[820],{"type":561,"value":821}," findPeakElement",{"type":556,"tag":593,"props":823,"children":824},{"style":736},[825],{"type":561,"value":826}," =",{"type":556,"tag":593,"props":828,"children":829},{"style":812},[830],{"type":561,"value":831}," function",{"type":556,"tag":593,"props":833,"children":834},{"style":736},[835],{"type":561,"value":836}," (",{"type":556,"tag":593,"props":838,"children":839},{"style":764},[840],{"type":561,"value":841},"nums",{"type":556,"tag":593,"props":843,"children":844},{"style":736},[845],{"type":561,"value":846},")",{"type":556,"tag":593,"props":848,"children":849},{"style":736},[850],{"type":561,"value":851}," {\n",{"type":556,"tag":593,"props":853,"children":855},{"class":595,"line":854},6,[856],{"type":556,"tag":593,"props":857,"children":858},{"style":722},[859],{"type":561,"value":860},"  // [0, n - 2]\n",{"type":556,"tag":593,"props":862,"children":864},{"class":595,"line":863},7,[865],{"type":556,"tag":593,"props":866,"children":867},{"style":722},[868],{"type":561,"value":869},"  // (-1, n - 1) 开区间写法\n",{"type":556,"tag":593,"props":871,"children":873},{"class":595,"line":872},8,[874,879,884,888,893,899],{"type":556,"tag":593,"props":875,"children":876},{"style":812},[877],{"type":561,"value":878},"  let",{"type":556,"tag":593,"props":880,"children":881},{"style":764},[882],{"type":561,"value":883}," l",{"type":556,"tag":593,"props":885,"children":886},{"style":736},[887],{"type":561,"value":826},{"type":556,"tag":593,"props":889,"children":890},{"style":812},[891],{"type":561,"value":892}," -",{"type":556,"tag":593,"props":894,"children":896},{"style":895},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[897],{"type":561,"value":898},"1",{"type":556,"tag":593,"props":900,"children":901},{"style":736},[902],{"type":561,"value":903},";\n",{"type":556,"tag":593,"props":905,"children":907},{"class":595,"line":906},9,[908,912,917,921,926,931,937,941,946],{"type":556,"tag":593,"props":909,"children":910},{"style":812},[911],{"type":561,"value":878},{"type":556,"tag":593,"props":913,"children":914},{"style":764},[915],{"type":561,"value":916}," r",{"type":556,"tag":593,"props":918,"children":919},{"style":736},[920],{"type":561,"value":826},{"type":556,"tag":593,"props":922,"children":923},{"style":764},[924],{"type":561,"value":925}," nums",{"type":556,"tag":593,"props":927,"children":928},{"style":736},[929],{"type":561,"value":930},".",{"type":556,"tag":593,"props":932,"children":934},{"style":933},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[935],{"type":561,"value":936},"length",{"type":556,"tag":593,"props":938,"children":939},{"style":812},[940],{"type":561,"value":892},{"type":556,"tag":593,"props":942,"children":943},{"style":895},[944],{"type":561,"value":945}," 1",{"type":556,"tag":593,"props":947,"children":948},{"style":736},[949],{"type":561,"value":903},{"type":556,"tag":593,"props":951,"children":953},{"class":595,"line":952},10,[954,959,963,968,973,977,982,986,990],{"type":556,"tag":593,"props":955,"children":956},{"style":742},[957],{"type":561,"value":958},"  while",{"type":556,"tag":593,"props":960,"children":961},{"style":736},[962],{"type":561,"value":836},{"type":556,"tag":593,"props":964,"children":965},{"style":764},[966],{"type":561,"value":967},"l",{"type":556,"tag":593,"props":969,"children":970},{"style":812},[971],{"type":561,"value":972}," +",{"type":556,"tag":593,"props":974,"children":975},{"style":895},[976],{"type":561,"value":945},{"type":556,"tag":593,"props":978,"children":979},{"style":736},[980],{"type":561,"value":981}," \u003C",{"type":556,"tag":593,"props":983,"children":984},{"style":764},[985],{"type":561,"value":916},{"type":556,"tag":593,"props":987,"children":988},{"style":736},[989],{"type":561,"value":846},{"type":556,"tag":593,"props":991,"children":992},{"style":736},[993],{"type":561,"value":851},{"type":556,"tag":593,"props":995,"children":997},{"class":595,"line":996},11,[998,1003,1008,1012,1016,1020,1024,1028,1032,1037,1041],{"type":556,"tag":593,"props":999,"children":1000},{"style":812},[1001],{"type":561,"value":1002},"    let",{"type":556,"tag":593,"props":1004,"children":1005},{"style":764},[1006],{"type":561,"value":1007}," mid",{"type":556,"tag":593,"props":1009,"children":1010},{"style":736},[1011],{"type":561,"value":826},{"type":556,"tag":593,"props":1013,"children":1014},{"style":736},[1015],{"type":561,"value":836},{"type":556,"tag":593,"props":1017,"children":1018},{"style":764},[1019],{"type":561,"value":967},{"type":556,"tag":593,"props":1021,"children":1022},{"style":812},[1023],{"type":561,"value":972},{"type":556,"tag":593,"props":1025,"children":1026},{"style":764},[1027],{"type":561,"value":916},{"type":556,"tag":593,"props":1029,"children":1030},{"style":736},[1031],{"type":561,"value":846},{"type":556,"tag":593,"props":1033,"children":1034},{"style":812},[1035],{"type":561,"value":1036}," >>",{"type":556,"tag":593,"props":1038,"children":1039},{"style":895},[1040],{"type":561,"value":945},{"type":556,"tag":593,"props":1042,"children":1043},{"style":736},[1044],{"type":561,"value":903},{"type":556,"tag":593,"props":1046,"children":1048},{"class":595,"line":1047},12,[1049,1054,1058,1062,1067,1072,1077,1082,1086,1090,1094,1098,1102,1107],{"type":556,"tag":593,"props":1050,"children":1051},{"style":742},[1052],{"type":561,"value":1053},"    if",{"type":556,"tag":593,"props":1055,"children":1056},{"style":736},[1057],{"type":561,"value":836},{"type":556,"tag":593,"props":1059,"children":1060},{"style":764},[1061],{"type":561,"value":841},{"type":556,"tag":593,"props":1063,"children":1064},{"style":736},[1065],{"type":561,"value":1066},"[",{"type":556,"tag":593,"props":1068,"children":1069},{"style":764},[1070],{"type":561,"value":1071},"mid",{"type":556,"tag":593,"props":1073,"children":1074},{"style":736},[1075],{"type":561,"value":1076},"]",{"type":556,"tag":593,"props":1078,"children":1079},{"style":736},[1080],{"type":561,"value":1081}," >",{"type":556,"tag":593,"props":1083,"children":1084},{"style":764},[1085],{"type":561,"value":925},{"type":556,"tag":593,"props":1087,"children":1088},{"style":736},[1089],{"type":561,"value":1066},{"type":556,"tag":593,"props":1091,"children":1092},{"style":764},[1093],{"type":561,"value":1071},{"type":556,"tag":593,"props":1095,"children":1096},{"style":812},[1097],{"type":561,"value":972},{"type":556,"tag":593,"props":1099,"children":1100},{"style":895},[1101],{"type":561,"value":945},{"type":556,"tag":593,"props":1103,"children":1104},{"style":736},[1105],{"type":561,"value":1106},"])",{"type":556,"tag":593,"props":1108,"children":1109},{"style":736},[1110],{"type":561,"value":851},{"type":556,"tag":593,"props":1112,"children":1114},{"class":595,"line":1113},13,[1115,1120,1124,1128,1133],{"type":556,"tag":593,"props":1116,"children":1117},{"style":764},[1118],{"type":561,"value":1119},"      r",{"type":556,"tag":593,"props":1121,"children":1122},{"style":736},[1123],{"type":561,"value":826},{"type":556,"tag":593,"props":1125,"children":1126},{"style":764},[1127],{"type":561,"value":1007},{"type":556,"tag":593,"props":1129,"children":1130},{"style":736},[1131],{"type":561,"value":1132},";",{"type":556,"tag":593,"props":1134,"children":1135},{"style":722},[1136],{"type":561,"value":1137}," // 染蓝色\n",{"type":556,"tag":593,"props":1139,"children":1141},{"class":595,"line":1140},14,[1142,1147,1152],{"type":556,"tag":593,"props":1143,"children":1144},{"style":736},[1145],{"type":561,"value":1146},"    }",{"type":556,"tag":593,"props":1148,"children":1149},{"style":742},[1150],{"type":561,"value":1151}," else",{"type":556,"tag":593,"props":1153,"children":1154},{"style":736},[1155],{"type":561,"value":851},{"type":556,"tag":593,"props":1157,"children":1159},{"class":595,"line":1158},15,[1160,1165,1169,1173,1177],{"type":556,"tag":593,"props":1161,"children":1162},{"style":764},[1163],{"type":561,"value":1164},"      l",{"type":556,"tag":593,"props":1166,"children":1167},{"style":736},[1168],{"type":561,"value":826},{"type":556,"tag":593,"props":1170,"children":1171},{"style":764},[1172],{"type":561,"value":1007},{"type":556,"tag":593,"props":1174,"children":1175},{"style":736},[1176],{"type":561,"value":1132},{"type":556,"tag":593,"props":1178,"children":1179},{"style":722},[1180],{"type":561,"value":1181}," // 染红色\n",{"type":556,"tag":593,"props":1183,"children":1185},{"class":595,"line":1184},16,[1186],{"type":556,"tag":593,"props":1187,"children":1188},{"style":736},[1189],{"type":561,"value":1190},"    }\n",{"type":556,"tag":593,"props":1192,"children":1194},{"class":595,"line":1193},17,[1195],{"type":556,"tag":593,"props":1196,"children":1197},{"style":736},[1198],{"type":561,"value":1199},"  }\n",{"type":556,"tag":593,"props":1201,"children":1203},{"class":595,"line":1202},18,[1204,1209,1213],{"type":556,"tag":593,"props":1205,"children":1206},{"style":742},[1207],{"type":561,"value":1208},"  return",{"type":556,"tag":593,"props":1210,"children":1211},{"style":764},[1212],{"type":561,"value":916},{"type":556,"tag":593,"props":1214,"children":1215},{"style":736},[1216],{"type":561,"value":903},{"type":556,"tag":593,"props":1218,"children":1220},{"class":595,"line":1219},19,[1221],{"type":556,"tag":593,"props":1222,"children":1223},{"style":736},[1224],{"type":561,"value":1225},"};\n",{"type":556,"tag":1227,"props":1228,"children":1229},"style",{},[1230],{"type":561,"value":1231},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":808,"depth":808,"links":1233},[1234,1235],{"id":694,"depth":605,"text":694},{"id":699,"depth":605,"text":699,"children":1236},[1237],{"id":705,"depth":614,"text":705},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1244,1246],{"_path":189,"title":188,"description":1245},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1247},"给你两个版本号 version1 和 version2 ，请你比较它们。",1714279834711]