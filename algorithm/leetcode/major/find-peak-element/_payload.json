[{"data":1,"prerenderedAt":1208},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":506,"/algorithm/leetcode/major/find-peak-element-surround":1203},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":191,"description":510,"url":511,"body":512,"_type":1198,"_id":1199,"_source":1200,"_file":1201,"_extension":1202},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":513,"children":514,"toc":1192},"root",[515,522,527,532,537,542,581,586,626,631,651,657,662,668,1186],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":521,"value":531},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":516,"tag":517,"props":533,"children":534},{},[535],{"type":521,"value":536},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":516,"tag":517,"props":538,"children":539},{},[540],{"type":521,"value":541},"示例 1：",{"type":516,"tag":543,"props":544,"children":547},"pre",{"className":545,"code":546,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[548],{"type":516,"tag":549,"props":550,"children":551},"code",{"__ignoreMap":509},[552,563,572],{"type":516,"tag":553,"props":554,"children":557},"span",{"class":555,"line":556},"line",1,[558],{"type":516,"tag":553,"props":559,"children":560},{},[561],{"type":521,"value":562},"输入：nums = [1,2,3,1]\n",{"type":516,"tag":553,"props":564,"children":566},{"class":555,"line":565},2,[567],{"type":516,"tag":553,"props":568,"children":569},{},[570],{"type":521,"value":571},"输出：2\n",{"type":516,"tag":553,"props":573,"children":575},{"class":555,"line":574},3,[576],{"type":516,"tag":553,"props":577,"children":578},{},[579],{"type":521,"value":580},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":516,"tag":517,"props":582,"children":583},{},[584],{"type":521,"value":585},"示例 2：",{"type":516,"tag":543,"props":587,"children":589},{"className":545,"code":588,"language":521,"meta":509,"style":509},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[590],{"type":516,"tag":549,"props":591,"children":592},{"__ignoreMap":509},[593,601,609,617],{"type":516,"tag":553,"props":594,"children":595},{"class":555,"line":556},[596],{"type":516,"tag":553,"props":597,"children":598},{},[599],{"type":521,"value":600},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":516,"tag":553,"props":602,"children":603},{"class":555,"line":565},[604],{"type":516,"tag":553,"props":605,"children":606},{},[607],{"type":521,"value":608},"输出：1 或 5\n",{"type":516,"tag":553,"props":610,"children":611},{"class":555,"line":574},[612],{"type":516,"tag":553,"props":613,"children":614},{},[615],{"type":521,"value":616},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":516,"tag":553,"props":618,"children":620},{"class":555,"line":619},4,[621],{"type":516,"tag":553,"props":622,"children":623},{},[624],{"type":521,"value":625},"或者返回索引 5， 其峰值元素为 6。\n",{"type":516,"tag":517,"props":627,"children":628},{},[629],{"type":521,"value":630},"提示：",{"type":516,"tag":632,"props":633,"children":634},"ul",{},[635,641,646],{"type":516,"tag":636,"props":637,"children":638},"li",{},[639],{"type":521,"value":640},"1 \u003C= nums.length \u003C= 1000",{"type":516,"tag":636,"props":642,"children":643},{},[644],{"type":521,"value":645},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":516,"tag":636,"props":647,"children":648},{},[649],{"type":521,"value":650},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":516,"tag":652,"props":653,"children":655},"h2",{"id":654},"解题思路",[656],{"type":521,"value":654},{"type":516,"tag":652,"props":658,"children":660},{"id":659},"实现",[661],{"type":521,"value":659},{"type":516,"tag":663,"props":664,"children":666},"h3",{"id":665},"二分查找",[667],{"type":521,"value":665},{"type":516,"tag":543,"props":669,"children":673},{"className":670,"code":671,"language":672,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[674],{"type":516,"tag":549,"props":675,"children":676},{"__ignoreMap":509},[677,686,728,758,766,812,821,830,864,910,954,1005,1071,1098,1116,1142,1151,1160,1177],{"type":516,"tag":553,"props":678,"children":679},{"class":555,"line":556},[680],{"type":516,"tag":553,"props":681,"children":683},{"style":682},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[684],{"type":521,"value":685},"/**\n",{"type":516,"tag":553,"props":687,"children":688},{"class":555,"line":565},[689,694,700,706,711,717,722],{"type":516,"tag":553,"props":690,"children":691},{"style":682},[692],{"type":521,"value":693}," * ",{"type":516,"tag":553,"props":695,"children":697},{"style":696},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[698],{"type":521,"value":699},"@",{"type":516,"tag":553,"props":701,"children":703},{"style":702},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[704],{"type":521,"value":705},"param",{"type":516,"tag":553,"props":707,"children":708},{"style":696},[709],{"type":521,"value":710}," {",{"type":516,"tag":553,"props":712,"children":714},{"style":713},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[715],{"type":521,"value":716},"number[]",{"type":516,"tag":553,"props":718,"children":719},{"style":696},[720],{"type":521,"value":721},"}",{"type":516,"tag":553,"props":723,"children":725},{"style":724},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[726],{"type":521,"value":727}," nums\n",{"type":516,"tag":553,"props":729,"children":730},{"class":555,"line":574},[731,735,739,744,748,753],{"type":516,"tag":553,"props":732,"children":733},{"style":682},[734],{"type":521,"value":693},{"type":516,"tag":553,"props":736,"children":737},{"style":696},[738],{"type":521,"value":699},{"type":516,"tag":553,"props":740,"children":741},{"style":702},[742],{"type":521,"value":743},"return",{"type":516,"tag":553,"props":745,"children":746},{"style":696},[747],{"type":521,"value":710},{"type":516,"tag":553,"props":749,"children":750},{"style":713},[751],{"type":521,"value":752},"number",{"type":516,"tag":553,"props":754,"children":755},{"style":696},[756],{"type":521,"value":757},"}\n",{"type":516,"tag":553,"props":759,"children":760},{"class":555,"line":619},[761],{"type":516,"tag":553,"props":762,"children":763},{"style":682},[764],{"type":521,"value":765}," */\n",{"type":516,"tag":553,"props":767,"children":769},{"class":555,"line":768},5,[770,776,782,787,792,797,802,807],{"type":516,"tag":553,"props":771,"children":773},{"style":772},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[774],{"type":521,"value":775},"var",{"type":516,"tag":553,"props":777,"children":779},{"style":778},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[780],{"type":521,"value":781}," findPeakElement",{"type":516,"tag":553,"props":783,"children":784},{"style":696},[785],{"type":521,"value":786}," =",{"type":516,"tag":553,"props":788,"children":789},{"style":772},[790],{"type":521,"value":791}," function",{"type":516,"tag":553,"props":793,"children":794},{"style":696},[795],{"type":521,"value":796}," (",{"type":516,"tag":553,"props":798,"children":799},{"style":724},[800],{"type":521,"value":801},"nums",{"type":516,"tag":553,"props":803,"children":804},{"style":696},[805],{"type":521,"value":806},")",{"type":516,"tag":553,"props":808,"children":809},{"style":696},[810],{"type":521,"value":811}," {\n",{"type":516,"tag":553,"props":813,"children":815},{"class":555,"line":814},6,[816],{"type":516,"tag":553,"props":817,"children":818},{"style":682},[819],{"type":521,"value":820},"  // [0, n - 2]\n",{"type":516,"tag":553,"props":822,"children":824},{"class":555,"line":823},7,[825],{"type":516,"tag":553,"props":826,"children":827},{"style":682},[828],{"type":521,"value":829},"  // (-1, n - 1) 开区间写法\n",{"type":516,"tag":553,"props":831,"children":833},{"class":555,"line":832},8,[834,839,844,848,853,859],{"type":516,"tag":553,"props":835,"children":836},{"style":772},[837],{"type":521,"value":838},"  let",{"type":516,"tag":553,"props":840,"children":841},{"style":724},[842],{"type":521,"value":843}," l",{"type":516,"tag":553,"props":845,"children":846},{"style":696},[847],{"type":521,"value":786},{"type":516,"tag":553,"props":849,"children":850},{"style":772},[851],{"type":521,"value":852}," -",{"type":516,"tag":553,"props":854,"children":856},{"style":855},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[857],{"type":521,"value":858},"1",{"type":516,"tag":553,"props":860,"children":861},{"style":696},[862],{"type":521,"value":863},";\n",{"type":516,"tag":553,"props":865,"children":867},{"class":555,"line":866},9,[868,872,877,881,886,891,897,901,906],{"type":516,"tag":553,"props":869,"children":870},{"style":772},[871],{"type":521,"value":838},{"type":516,"tag":553,"props":873,"children":874},{"style":724},[875],{"type":521,"value":876}," r",{"type":516,"tag":553,"props":878,"children":879},{"style":696},[880],{"type":521,"value":786},{"type":516,"tag":553,"props":882,"children":883},{"style":724},[884],{"type":521,"value":885}," nums",{"type":516,"tag":553,"props":887,"children":888},{"style":696},[889],{"type":521,"value":890},".",{"type":516,"tag":553,"props":892,"children":894},{"style":893},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[895],{"type":521,"value":896},"length",{"type":516,"tag":553,"props":898,"children":899},{"style":772},[900],{"type":521,"value":852},{"type":516,"tag":553,"props":902,"children":903},{"style":855},[904],{"type":521,"value":905}," 1",{"type":516,"tag":553,"props":907,"children":908},{"style":696},[909],{"type":521,"value":863},{"type":516,"tag":553,"props":911,"children":913},{"class":555,"line":912},10,[914,919,923,928,933,937,942,946,950],{"type":516,"tag":553,"props":915,"children":916},{"style":702},[917],{"type":521,"value":918},"  while",{"type":516,"tag":553,"props":920,"children":921},{"style":696},[922],{"type":521,"value":796},{"type":516,"tag":553,"props":924,"children":925},{"style":724},[926],{"type":521,"value":927},"l",{"type":516,"tag":553,"props":929,"children":930},{"style":772},[931],{"type":521,"value":932}," +",{"type":516,"tag":553,"props":934,"children":935},{"style":855},[936],{"type":521,"value":905},{"type":516,"tag":553,"props":938,"children":939},{"style":696},[940],{"type":521,"value":941}," \u003C",{"type":516,"tag":553,"props":943,"children":944},{"style":724},[945],{"type":521,"value":876},{"type":516,"tag":553,"props":947,"children":948},{"style":696},[949],{"type":521,"value":806},{"type":516,"tag":553,"props":951,"children":952},{"style":696},[953],{"type":521,"value":811},{"type":516,"tag":553,"props":955,"children":957},{"class":555,"line":956},11,[958,963,968,972,976,980,984,988,992,997,1001],{"type":516,"tag":553,"props":959,"children":960},{"style":772},[961],{"type":521,"value":962},"    let",{"type":516,"tag":553,"props":964,"children":965},{"style":724},[966],{"type":521,"value":967}," mid",{"type":516,"tag":553,"props":969,"children":970},{"style":696},[971],{"type":521,"value":786},{"type":516,"tag":553,"props":973,"children":974},{"style":696},[975],{"type":521,"value":796},{"type":516,"tag":553,"props":977,"children":978},{"style":724},[979],{"type":521,"value":927},{"type":516,"tag":553,"props":981,"children":982},{"style":772},[983],{"type":521,"value":932},{"type":516,"tag":553,"props":985,"children":986},{"style":724},[987],{"type":521,"value":876},{"type":516,"tag":553,"props":989,"children":990},{"style":696},[991],{"type":521,"value":806},{"type":516,"tag":553,"props":993,"children":994},{"style":772},[995],{"type":521,"value":996}," >>",{"type":516,"tag":553,"props":998,"children":999},{"style":855},[1000],{"type":521,"value":905},{"type":516,"tag":553,"props":1002,"children":1003},{"style":696},[1004],{"type":521,"value":863},{"type":516,"tag":553,"props":1006,"children":1008},{"class":555,"line":1007},12,[1009,1014,1018,1022,1027,1032,1037,1042,1046,1050,1054,1058,1062,1067],{"type":516,"tag":553,"props":1010,"children":1011},{"style":702},[1012],{"type":521,"value":1013},"    if",{"type":516,"tag":553,"props":1015,"children":1016},{"style":696},[1017],{"type":521,"value":796},{"type":516,"tag":553,"props":1019,"children":1020},{"style":724},[1021],{"type":521,"value":801},{"type":516,"tag":553,"props":1023,"children":1024},{"style":696},[1025],{"type":521,"value":1026},"[",{"type":516,"tag":553,"props":1028,"children":1029},{"style":724},[1030],{"type":521,"value":1031},"mid",{"type":516,"tag":553,"props":1033,"children":1034},{"style":696},[1035],{"type":521,"value":1036},"]",{"type":516,"tag":553,"props":1038,"children":1039},{"style":696},[1040],{"type":521,"value":1041}," >",{"type":516,"tag":553,"props":1043,"children":1044},{"style":724},[1045],{"type":521,"value":885},{"type":516,"tag":553,"props":1047,"children":1048},{"style":696},[1049],{"type":521,"value":1026},{"type":516,"tag":553,"props":1051,"children":1052},{"style":724},[1053],{"type":521,"value":1031},{"type":516,"tag":553,"props":1055,"children":1056},{"style":772},[1057],{"type":521,"value":932},{"type":516,"tag":553,"props":1059,"children":1060},{"style":855},[1061],{"type":521,"value":905},{"type":516,"tag":553,"props":1063,"children":1064},{"style":696},[1065],{"type":521,"value":1066},"])",{"type":516,"tag":553,"props":1068,"children":1069},{"style":696},[1070],{"type":521,"value":811},{"type":516,"tag":553,"props":1072,"children":1074},{"class":555,"line":1073},13,[1075,1080,1084,1088,1093],{"type":516,"tag":553,"props":1076,"children":1077},{"style":724},[1078],{"type":521,"value":1079},"      r",{"type":516,"tag":553,"props":1081,"children":1082},{"style":696},[1083],{"type":521,"value":786},{"type":516,"tag":553,"props":1085,"children":1086},{"style":724},[1087],{"type":521,"value":967},{"type":516,"tag":553,"props":1089,"children":1090},{"style":696},[1091],{"type":521,"value":1092},";",{"type":516,"tag":553,"props":1094,"children":1095},{"style":682},[1096],{"type":521,"value":1097}," // 染蓝色\n",{"type":516,"tag":553,"props":1099,"children":1101},{"class":555,"line":1100},14,[1102,1107,1112],{"type":516,"tag":553,"props":1103,"children":1104},{"style":696},[1105],{"type":521,"value":1106},"    }",{"type":516,"tag":553,"props":1108,"children":1109},{"style":702},[1110],{"type":521,"value":1111}," else",{"type":516,"tag":553,"props":1113,"children":1114},{"style":696},[1115],{"type":521,"value":811},{"type":516,"tag":553,"props":1117,"children":1119},{"class":555,"line":1118},15,[1120,1125,1129,1133,1137],{"type":516,"tag":553,"props":1121,"children":1122},{"style":724},[1123],{"type":521,"value":1124},"      l",{"type":516,"tag":553,"props":1126,"children":1127},{"style":696},[1128],{"type":521,"value":786},{"type":516,"tag":553,"props":1130,"children":1131},{"style":724},[1132],{"type":521,"value":967},{"type":516,"tag":553,"props":1134,"children":1135},{"style":696},[1136],{"type":521,"value":1092},{"type":516,"tag":553,"props":1138,"children":1139},{"style":682},[1140],{"type":521,"value":1141}," // 染红色\n",{"type":516,"tag":553,"props":1143,"children":1145},{"class":555,"line":1144},16,[1146],{"type":516,"tag":553,"props":1147,"children":1148},{"style":696},[1149],{"type":521,"value":1150},"    }\n",{"type":516,"tag":553,"props":1152,"children":1154},{"class":555,"line":1153},17,[1155],{"type":516,"tag":553,"props":1156,"children":1157},{"style":696},[1158],{"type":521,"value":1159},"  }\n",{"type":516,"tag":553,"props":1161,"children":1163},{"class":555,"line":1162},18,[1164,1169,1173],{"type":516,"tag":553,"props":1165,"children":1166},{"style":702},[1167],{"type":521,"value":1168},"  return",{"type":516,"tag":553,"props":1170,"children":1171},{"style":724},[1172],{"type":521,"value":876},{"type":516,"tag":553,"props":1174,"children":1175},{"style":696},[1176],{"type":521,"value":863},{"type":516,"tag":553,"props":1178,"children":1180},{"class":555,"line":1179},19,[1181],{"type":516,"tag":553,"props":1182,"children":1183},{"style":696},[1184],{"type":521,"value":1185},"};\n",{"type":516,"tag":1187,"props":1188,"children":1189},"style",{},[1190],{"type":521,"value":1191},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":768,"depth":768,"links":1193},[1194,1195],{"id":654,"depth":565,"text":654},{"id":659,"depth":565,"text":659,"children":1196},[1197],{"id":665,"depth":574,"text":665},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1204,1206],{"_path":189,"title":188,"description":1205},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1207},"给你两个版本号 version1 和 version2 ，请你比较它们。",1714058127600]