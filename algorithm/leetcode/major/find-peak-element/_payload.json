[{"data":1,"prerenderedAt":1125},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":452,"/algorithm/leetcode/major/find-peak-element-surround":1120},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":183,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":182,"description":456,"url":457,"body":458,"_type":1115,"_id":1116,"_source":1117,"_file":1118,"_extension":1119},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":459,"children":460,"toc":1109},"root",[461,468,473,478,483,488,527,532,572,577,597,603,608,614,1103],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":462,"tag":463,"props":474,"children":475},{},[476],{"type":467,"value":477},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":462,"tag":463,"props":479,"children":480},{},[481],{"type":467,"value":482},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":462,"tag":463,"props":484,"children":485},{},[486],{"type":467,"value":487},"示例 1：",{"type":462,"tag":489,"props":490,"children":493},"pre",{"className":491,"code":492,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[494],{"type":462,"tag":495,"props":496,"children":497},"code",{"__ignoreMap":455},[498,509,518],{"type":462,"tag":499,"props":500,"children":503},"span",{"class":501,"line":502},"line",1,[504],{"type":462,"tag":499,"props":505,"children":506},{},[507],{"type":467,"value":508},"输入：nums = [1,2,3,1]\n",{"type":462,"tag":499,"props":510,"children":512},{"class":501,"line":511},2,[513],{"type":462,"tag":499,"props":514,"children":515},{},[516],{"type":467,"value":517},"输出：2\n",{"type":462,"tag":499,"props":519,"children":521},{"class":501,"line":520},3,[522],{"type":462,"tag":499,"props":523,"children":524},{},[525],{"type":467,"value":526},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":462,"tag":463,"props":528,"children":529},{},[530],{"type":467,"value":531},"示例 2：",{"type":462,"tag":489,"props":533,"children":535},{"className":491,"code":534,"language":467,"meta":455,"style":455},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[536],{"type":462,"tag":495,"props":537,"children":538},{"__ignoreMap":455},[539,547,555,563],{"type":462,"tag":499,"props":540,"children":541},{"class":501,"line":502},[542],{"type":462,"tag":499,"props":543,"children":544},{},[545],{"type":467,"value":546},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":462,"tag":499,"props":548,"children":549},{"class":501,"line":511},[550],{"type":462,"tag":499,"props":551,"children":552},{},[553],{"type":467,"value":554},"输出：1 或 5\n",{"type":462,"tag":499,"props":556,"children":557},{"class":501,"line":520},[558],{"type":462,"tag":499,"props":559,"children":560},{},[561],{"type":467,"value":562},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":462,"tag":499,"props":564,"children":566},{"class":501,"line":565},4,[567],{"type":462,"tag":499,"props":568,"children":569},{},[570],{"type":467,"value":571},"或者返回索引 5， 其峰值元素为 6。\n",{"type":462,"tag":463,"props":573,"children":574},{},[575],{"type":467,"value":576},"提示：",{"type":462,"tag":578,"props":579,"children":580},"ul",{},[581,587,592],{"type":462,"tag":582,"props":583,"children":584},"li",{},[585],{"type":467,"value":586},"1 \u003C= nums.length \u003C= 1000",{"type":462,"tag":582,"props":588,"children":589},{},[590],{"type":467,"value":591},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":462,"tag":582,"props":593,"children":594},{},[595],{"type":467,"value":596},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":462,"tag":598,"props":599,"children":601},"h2",{"id":600},"解题思路",[602],{"type":467,"value":600},{"type":462,"tag":598,"props":604,"children":606},{"id":605},"实现",[607],{"type":467,"value":605},{"type":462,"tag":609,"props":610,"children":612},"h3",{"id":611},"二分查找",[613],{"type":467,"value":611},{"type":462,"tag":489,"props":615,"children":619},{"className":616,"code":617,"language":618,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[620],{"type":462,"tag":495,"props":621,"children":622},{"__ignoreMap":455},[623,632,658,675,683,727,736,745,781,828,869,921,983,1010,1029,1055,1064,1073,1090],{"type":462,"tag":499,"props":624,"children":625},{"class":501,"line":502},[626],{"type":462,"tag":499,"props":627,"children":629},{"style":628},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[630],{"type":467,"value":631},"/**\n",{"type":462,"tag":499,"props":633,"children":634},{"class":501,"line":511},[635,640,646,652],{"type":462,"tag":499,"props":636,"children":637},{"style":628},[638],{"type":467,"value":639}," * ",{"type":462,"tag":499,"props":641,"children":643},{"style":642},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[644],{"type":467,"value":645},"@param",{"type":462,"tag":499,"props":647,"children":649},{"style":648},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[650],{"type":467,"value":651}," {number[]}",{"type":462,"tag":499,"props":653,"children":655},{"style":654},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[656],{"type":467,"value":657}," nums\n",{"type":462,"tag":499,"props":659,"children":660},{"class":501,"line":520},[661,665,670],{"type":462,"tag":499,"props":662,"children":663},{"style":628},[664],{"type":467,"value":639},{"type":462,"tag":499,"props":666,"children":667},{"style":642},[668],{"type":467,"value":669},"@return",{"type":462,"tag":499,"props":671,"children":672},{"style":648},[673],{"type":467,"value":674}," {number}\n",{"type":462,"tag":499,"props":676,"children":677},{"class":501,"line":565},[678],{"type":462,"tag":499,"props":679,"children":680},{"style":628},[681],{"type":467,"value":682}," */\n",{"type":462,"tag":499,"props":684,"children":686},{"class":501,"line":685},5,[687,693,699,705,710,716,722],{"type":462,"tag":499,"props":688,"children":690},{"style":689},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[691],{"type":467,"value":692},"var",{"type":462,"tag":499,"props":694,"children":696},{"style":695},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[697],{"type":467,"value":698}," findPeakElement",{"type":462,"tag":499,"props":700,"children":702},{"style":701},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[703],{"type":467,"value":704}," =",{"type":462,"tag":499,"props":706,"children":707},{"style":689},[708],{"type":467,"value":709}," function",{"type":462,"tag":499,"props":711,"children":713},{"style":712},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[714],{"type":467,"value":715}," (",{"type":462,"tag":499,"props":717,"children":719},{"style":718},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[720],{"type":467,"value":721},"nums",{"type":462,"tag":499,"props":723,"children":724},{"style":712},[725],{"type":467,"value":726},") {\n",{"type":462,"tag":499,"props":728,"children":730},{"class":501,"line":729},6,[731],{"type":462,"tag":499,"props":732,"children":733},{"style":628},[734],{"type":467,"value":735},"  // [0, n - 2]\n",{"type":462,"tag":499,"props":737,"children":739},{"class":501,"line":738},7,[740],{"type":462,"tag":499,"props":741,"children":742},{"style":628},[743],{"type":467,"value":744},"  // (-1, n - 1) 开区间写法\n",{"type":462,"tag":499,"props":746,"children":748},{"class":501,"line":747},8,[749,754,760,764,769,775],{"type":462,"tag":499,"props":750,"children":751},{"style":689},[752],{"type":467,"value":753},"  let",{"type":462,"tag":499,"props":755,"children":757},{"style":756},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[758],{"type":467,"value":759}," l",{"type":462,"tag":499,"props":761,"children":762},{"style":701},[763],{"type":467,"value":704},{"type":462,"tag":499,"props":765,"children":766},{"style":701},[767],{"type":467,"value":768}," -",{"type":462,"tag":499,"props":770,"children":772},{"style":771},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[773],{"type":467,"value":774},"1",{"type":462,"tag":499,"props":776,"children":778},{"style":777},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[779],{"type":467,"value":780},";\n",{"type":462,"tag":499,"props":782,"children":784},{"class":501,"line":783},9,[785,789,794,798,803,809,814,819,824],{"type":462,"tag":499,"props":786,"children":787},{"style":689},[788],{"type":467,"value":753},{"type":462,"tag":499,"props":790,"children":791},{"style":756},[792],{"type":467,"value":793}," r",{"type":462,"tag":499,"props":795,"children":796},{"style":701},[797],{"type":467,"value":704},{"type":462,"tag":499,"props":799,"children":800},{"style":756},[801],{"type":467,"value":802}," nums",{"type":462,"tag":499,"props":804,"children":806},{"style":805},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[807],{"type":467,"value":808},".",{"type":462,"tag":499,"props":810,"children":811},{"style":712},[812],{"type":467,"value":813},"length ",{"type":462,"tag":499,"props":815,"children":816},{"style":701},[817],{"type":467,"value":818},"-",{"type":462,"tag":499,"props":820,"children":821},{"style":771},[822],{"type":467,"value":823}," 1",{"type":462,"tag":499,"props":825,"children":826},{"style":777},[827],{"type":467,"value":780},{"type":462,"tag":499,"props":829,"children":831},{"class":501,"line":830},10,[832,838,842,847,852,856,861,865],{"type":462,"tag":499,"props":833,"children":835},{"style":834},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[836],{"type":467,"value":837},"  while",{"type":462,"tag":499,"props":839,"children":840},{"style":712},[841],{"type":467,"value":715},{"type":462,"tag":499,"props":843,"children":844},{"style":756},[845],{"type":467,"value":846},"l",{"type":462,"tag":499,"props":848,"children":849},{"style":701},[850],{"type":467,"value":851}," +",{"type":462,"tag":499,"props":853,"children":854},{"style":771},[855],{"type":467,"value":823},{"type":462,"tag":499,"props":857,"children":858},{"style":701},[859],{"type":467,"value":860}," \u003C",{"type":462,"tag":499,"props":862,"children":863},{"style":756},[864],{"type":467,"value":793},{"type":462,"tag":499,"props":866,"children":867},{"style":712},[868],{"type":467,"value":726},{"type":462,"tag":499,"props":870,"children":872},{"class":501,"line":871},11,[873,878,883,887,891,895,899,903,908,913,917],{"type":462,"tag":499,"props":874,"children":875},{"style":689},[876],{"type":467,"value":877},"    let",{"type":462,"tag":499,"props":879,"children":880},{"style":756},[881],{"type":467,"value":882}," mid",{"type":462,"tag":499,"props":884,"children":885},{"style":701},[886],{"type":467,"value":704},{"type":462,"tag":499,"props":888,"children":889},{"style":712},[890],{"type":467,"value":715},{"type":462,"tag":499,"props":892,"children":893},{"style":756},[894],{"type":467,"value":846},{"type":462,"tag":499,"props":896,"children":897},{"style":701},[898],{"type":467,"value":851},{"type":462,"tag":499,"props":900,"children":901},{"style":756},[902],{"type":467,"value":793},{"type":462,"tag":499,"props":904,"children":905},{"style":712},[906],{"type":467,"value":907},") ",{"type":462,"tag":499,"props":909,"children":910},{"style":701},[911],{"type":467,"value":912},">>",{"type":462,"tag":499,"props":914,"children":915},{"style":771},[916],{"type":467,"value":823},{"type":462,"tag":499,"props":918,"children":919},{"style":777},[920],{"type":467,"value":780},{"type":462,"tag":499,"props":922,"children":924},{"class":501,"line":923},12,[925,930,934,938,943,948,953,958,962,966,970,974,978],{"type":462,"tag":499,"props":926,"children":927},{"style":834},[928],{"type":467,"value":929},"    if",{"type":462,"tag":499,"props":931,"children":932},{"style":712},[933],{"type":467,"value":715},{"type":462,"tag":499,"props":935,"children":936},{"style":756},[937],{"type":467,"value":721},{"type":462,"tag":499,"props":939,"children":940},{"style":712},[941],{"type":467,"value":942},"[",{"type":462,"tag":499,"props":944,"children":945},{"style":756},[946],{"type":467,"value":947},"mid",{"type":462,"tag":499,"props":949,"children":950},{"style":712},[951],{"type":467,"value":952},"] ",{"type":462,"tag":499,"props":954,"children":955},{"style":701},[956],{"type":467,"value":957},">",{"type":462,"tag":499,"props":959,"children":960},{"style":756},[961],{"type":467,"value":802},{"type":462,"tag":499,"props":963,"children":964},{"style":712},[965],{"type":467,"value":942},{"type":462,"tag":499,"props":967,"children":968},{"style":756},[969],{"type":467,"value":947},{"type":462,"tag":499,"props":971,"children":972},{"style":701},[973],{"type":467,"value":851},{"type":462,"tag":499,"props":975,"children":976},{"style":771},[977],{"type":467,"value":823},{"type":462,"tag":499,"props":979,"children":980},{"style":712},[981],{"type":467,"value":982},"]) {\n",{"type":462,"tag":499,"props":984,"children":986},{"class":501,"line":985},13,[987,992,996,1000,1005],{"type":462,"tag":499,"props":988,"children":989},{"style":756},[990],{"type":467,"value":991},"      r",{"type":462,"tag":499,"props":993,"children":994},{"style":701},[995],{"type":467,"value":704},{"type":462,"tag":499,"props":997,"children":998},{"style":756},[999],{"type":467,"value":882},{"type":462,"tag":499,"props":1001,"children":1002},{"style":777},[1003],{"type":467,"value":1004},";",{"type":462,"tag":499,"props":1006,"children":1007},{"style":628},[1008],{"type":467,"value":1009}," // 染蓝色\n",{"type":462,"tag":499,"props":1011,"children":1013},{"class":501,"line":1012},14,[1014,1019,1024],{"type":462,"tag":499,"props":1015,"children":1016},{"style":712},[1017],{"type":467,"value":1018},"    } ",{"type":462,"tag":499,"props":1020,"children":1021},{"style":834},[1022],{"type":467,"value":1023},"else",{"type":462,"tag":499,"props":1025,"children":1026},{"style":712},[1027],{"type":467,"value":1028}," {\n",{"type":462,"tag":499,"props":1030,"children":1032},{"class":501,"line":1031},15,[1033,1038,1042,1046,1050],{"type":462,"tag":499,"props":1034,"children":1035},{"style":756},[1036],{"type":467,"value":1037},"      l",{"type":462,"tag":499,"props":1039,"children":1040},{"style":701},[1041],{"type":467,"value":704},{"type":462,"tag":499,"props":1043,"children":1044},{"style":756},[1045],{"type":467,"value":882},{"type":462,"tag":499,"props":1047,"children":1048},{"style":777},[1049],{"type":467,"value":1004},{"type":462,"tag":499,"props":1051,"children":1052},{"style":628},[1053],{"type":467,"value":1054}," // 染红色\n",{"type":462,"tag":499,"props":1056,"children":1058},{"class":501,"line":1057},16,[1059],{"type":462,"tag":499,"props":1060,"children":1061},{"style":712},[1062],{"type":467,"value":1063},"    }\n",{"type":462,"tag":499,"props":1065,"children":1067},{"class":501,"line":1066},17,[1068],{"type":462,"tag":499,"props":1069,"children":1070},{"style":712},[1071],{"type":467,"value":1072},"  }\n",{"type":462,"tag":499,"props":1074,"children":1076},{"class":501,"line":1075},18,[1077,1082,1086],{"type":462,"tag":499,"props":1078,"children":1079},{"style":834},[1080],{"type":467,"value":1081},"  return",{"type":462,"tag":499,"props":1083,"children":1084},{"style":756},[1085],{"type":467,"value":793},{"type":462,"tag":499,"props":1087,"children":1088},{"style":777},[1089],{"type":467,"value":780},{"type":462,"tag":499,"props":1091,"children":1093},{"class":501,"line":1092},19,[1094,1099],{"type":462,"tag":499,"props":1095,"children":1096},{"style":712},[1097],{"type":467,"value":1098},"}",{"type":462,"tag":499,"props":1100,"children":1101},{"style":777},[1102],{"type":467,"value":780},{"type":462,"tag":1104,"props":1105,"children":1106},"style",{},[1107],{"type":467,"value":1108},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":685,"depth":685,"links":1110},[1111,1112],{"id":600,"depth":511,"text":600},{"id":605,"depth":511,"text":605,"children":1113},[1114],{"id":611,"depth":520,"text":611},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1121,1123],{"_path":180,"title":179,"description":1122},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":186,"title":185,"description":1124},"给你两个版本号 version1 和 version2 ，请你比较它们。",1713457423448]