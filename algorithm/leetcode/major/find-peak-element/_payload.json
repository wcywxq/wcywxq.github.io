[{"data":1,"prerenderedAt":1254},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":552,"/algorithm/leetcode/major/find-peak-element-surround":1249},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":191,"description":556,"url":557,"body":558,"_type":1244,"_id":1245,"_source":1246,"_file":1247,"_extension":1248},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":559,"children":560,"toc":1238},"root",[561,568,573,578,583,588,627,632,672,677,697,703,708,714,1232],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":562,"tag":563,"props":579,"children":580},{},[581],{"type":567,"value":582},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":562,"tag":563,"props":584,"children":585},{},[586],{"type":567,"value":587},"示例 1：",{"type":562,"tag":589,"props":590,"children":593},"pre",{"className":591,"code":592,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[594],{"type":562,"tag":595,"props":596,"children":597},"code",{"__ignoreMap":555},[598,609,618],{"type":562,"tag":599,"props":600,"children":603},"span",{"class":601,"line":602},"line",1,[604],{"type":562,"tag":599,"props":605,"children":606},{},[607],{"type":567,"value":608},"输入：nums = [1,2,3,1]\n",{"type":562,"tag":599,"props":610,"children":612},{"class":601,"line":611},2,[613],{"type":562,"tag":599,"props":614,"children":615},{},[616],{"type":567,"value":617},"输出：2\n",{"type":562,"tag":599,"props":619,"children":621},{"class":601,"line":620},3,[622],{"type":562,"tag":599,"props":623,"children":624},{},[625],{"type":567,"value":626},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":562,"tag":563,"props":628,"children":629},{},[630],{"type":567,"value":631},"示例 2：",{"type":562,"tag":589,"props":633,"children":635},{"className":591,"code":634,"language":567,"meta":555,"style":555},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[636],{"type":562,"tag":595,"props":637,"children":638},{"__ignoreMap":555},[639,647,655,663],{"type":562,"tag":599,"props":640,"children":641},{"class":601,"line":602},[642],{"type":562,"tag":599,"props":643,"children":644},{},[645],{"type":567,"value":646},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":562,"tag":599,"props":648,"children":649},{"class":601,"line":611},[650],{"type":562,"tag":599,"props":651,"children":652},{},[653],{"type":567,"value":654},"输出：1 或 5\n",{"type":562,"tag":599,"props":656,"children":657},{"class":601,"line":620},[658],{"type":562,"tag":599,"props":659,"children":660},{},[661],{"type":567,"value":662},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":562,"tag":599,"props":664,"children":666},{"class":601,"line":665},4,[667],{"type":562,"tag":599,"props":668,"children":669},{},[670],{"type":567,"value":671},"或者返回索引 5， 其峰值元素为 6。\n",{"type":562,"tag":563,"props":673,"children":674},{},[675],{"type":567,"value":676},"提示：",{"type":562,"tag":678,"props":679,"children":680},"ul",{},[681,687,692],{"type":562,"tag":682,"props":683,"children":684},"li",{},[685],{"type":567,"value":686},"1 \u003C= nums.length \u003C= 1000",{"type":562,"tag":682,"props":688,"children":689},{},[690],{"type":567,"value":691},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":562,"tag":682,"props":693,"children":694},{},[695],{"type":567,"value":696},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":562,"tag":698,"props":699,"children":701},"h2",{"id":700},"解题思路",[702],{"type":567,"value":700},{"type":562,"tag":698,"props":704,"children":706},{"id":705},"实现",[707],{"type":567,"value":705},{"type":562,"tag":709,"props":710,"children":712},"h3",{"id":711},"二分查找",[713],{"type":567,"value":711},{"type":562,"tag":589,"props":715,"children":719},{"className":716,"code":717,"language":718,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[720],{"type":562,"tag":595,"props":721,"children":722},{"__ignoreMap":555},[723,732,774,804,812,858,867,876,910,956,1000,1051,1117,1144,1162,1188,1197,1206,1223],{"type":562,"tag":599,"props":724,"children":725},{"class":601,"line":602},[726],{"type":562,"tag":599,"props":727,"children":729},{"style":728},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[730],{"type":567,"value":731},"/**\n",{"type":562,"tag":599,"props":733,"children":734},{"class":601,"line":611},[735,740,746,752,757,763,768],{"type":562,"tag":599,"props":736,"children":737},{"style":728},[738],{"type":567,"value":739}," * ",{"type":562,"tag":599,"props":741,"children":743},{"style":742},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[744],{"type":567,"value":745},"@",{"type":562,"tag":599,"props":747,"children":749},{"style":748},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[750],{"type":567,"value":751},"param",{"type":562,"tag":599,"props":753,"children":754},{"style":742},[755],{"type":567,"value":756}," {",{"type":562,"tag":599,"props":758,"children":760},{"style":759},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[761],{"type":567,"value":762},"number[]",{"type":562,"tag":599,"props":764,"children":765},{"style":742},[766],{"type":567,"value":767},"}",{"type":562,"tag":599,"props":769,"children":771},{"style":770},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[772],{"type":567,"value":773}," nums\n",{"type":562,"tag":599,"props":775,"children":776},{"class":601,"line":620},[777,781,785,790,794,799],{"type":562,"tag":599,"props":778,"children":779},{"style":728},[780],{"type":567,"value":739},{"type":562,"tag":599,"props":782,"children":783},{"style":742},[784],{"type":567,"value":745},{"type":562,"tag":599,"props":786,"children":787},{"style":748},[788],{"type":567,"value":789},"return",{"type":562,"tag":599,"props":791,"children":792},{"style":742},[793],{"type":567,"value":756},{"type":562,"tag":599,"props":795,"children":796},{"style":759},[797],{"type":567,"value":798},"number",{"type":562,"tag":599,"props":800,"children":801},{"style":742},[802],{"type":567,"value":803},"}\n",{"type":562,"tag":599,"props":805,"children":806},{"class":601,"line":665},[807],{"type":562,"tag":599,"props":808,"children":809},{"style":728},[810],{"type":567,"value":811}," */\n",{"type":562,"tag":599,"props":813,"children":815},{"class":601,"line":814},5,[816,822,828,833,838,843,848,853],{"type":562,"tag":599,"props":817,"children":819},{"style":818},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[820],{"type":567,"value":821},"var",{"type":562,"tag":599,"props":823,"children":825},{"style":824},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[826],{"type":567,"value":827}," findPeakElement",{"type":562,"tag":599,"props":829,"children":830},{"style":742},[831],{"type":567,"value":832}," =",{"type":562,"tag":599,"props":834,"children":835},{"style":818},[836],{"type":567,"value":837}," function",{"type":562,"tag":599,"props":839,"children":840},{"style":742},[841],{"type":567,"value":842}," (",{"type":562,"tag":599,"props":844,"children":845},{"style":770},[846],{"type":567,"value":847},"nums",{"type":562,"tag":599,"props":849,"children":850},{"style":742},[851],{"type":567,"value":852},")",{"type":562,"tag":599,"props":854,"children":855},{"style":742},[856],{"type":567,"value":857}," {\n",{"type":562,"tag":599,"props":859,"children":861},{"class":601,"line":860},6,[862],{"type":562,"tag":599,"props":863,"children":864},{"style":728},[865],{"type":567,"value":866},"  // [0, n - 2]\n",{"type":562,"tag":599,"props":868,"children":870},{"class":601,"line":869},7,[871],{"type":562,"tag":599,"props":872,"children":873},{"style":728},[874],{"type":567,"value":875},"  // (-1, n - 1) 开区间写法\n",{"type":562,"tag":599,"props":877,"children":879},{"class":601,"line":878},8,[880,885,890,894,899,905],{"type":562,"tag":599,"props":881,"children":882},{"style":818},[883],{"type":567,"value":884},"  let",{"type":562,"tag":599,"props":886,"children":887},{"style":770},[888],{"type":567,"value":889}," l",{"type":562,"tag":599,"props":891,"children":892},{"style":742},[893],{"type":567,"value":832},{"type":562,"tag":599,"props":895,"children":896},{"style":818},[897],{"type":567,"value":898}," -",{"type":562,"tag":599,"props":900,"children":902},{"style":901},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[903],{"type":567,"value":904},"1",{"type":562,"tag":599,"props":906,"children":907},{"style":742},[908],{"type":567,"value":909},";\n",{"type":562,"tag":599,"props":911,"children":913},{"class":601,"line":912},9,[914,918,923,927,932,937,943,947,952],{"type":562,"tag":599,"props":915,"children":916},{"style":818},[917],{"type":567,"value":884},{"type":562,"tag":599,"props":919,"children":920},{"style":770},[921],{"type":567,"value":922}," r",{"type":562,"tag":599,"props":924,"children":925},{"style":742},[926],{"type":567,"value":832},{"type":562,"tag":599,"props":928,"children":929},{"style":770},[930],{"type":567,"value":931}," nums",{"type":562,"tag":599,"props":933,"children":934},{"style":742},[935],{"type":567,"value":936},".",{"type":562,"tag":599,"props":938,"children":940},{"style":939},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[941],{"type":567,"value":942},"length",{"type":562,"tag":599,"props":944,"children":945},{"style":818},[946],{"type":567,"value":898},{"type":562,"tag":599,"props":948,"children":949},{"style":901},[950],{"type":567,"value":951}," 1",{"type":562,"tag":599,"props":953,"children":954},{"style":742},[955],{"type":567,"value":909},{"type":562,"tag":599,"props":957,"children":959},{"class":601,"line":958},10,[960,965,969,974,979,983,988,992,996],{"type":562,"tag":599,"props":961,"children":962},{"style":748},[963],{"type":567,"value":964},"  while",{"type":562,"tag":599,"props":966,"children":967},{"style":742},[968],{"type":567,"value":842},{"type":562,"tag":599,"props":970,"children":971},{"style":770},[972],{"type":567,"value":973},"l",{"type":562,"tag":599,"props":975,"children":976},{"style":818},[977],{"type":567,"value":978}," +",{"type":562,"tag":599,"props":980,"children":981},{"style":901},[982],{"type":567,"value":951},{"type":562,"tag":599,"props":984,"children":985},{"style":742},[986],{"type":567,"value":987}," \u003C",{"type":562,"tag":599,"props":989,"children":990},{"style":770},[991],{"type":567,"value":922},{"type":562,"tag":599,"props":993,"children":994},{"style":742},[995],{"type":567,"value":852},{"type":562,"tag":599,"props":997,"children":998},{"style":742},[999],{"type":567,"value":857},{"type":562,"tag":599,"props":1001,"children":1003},{"class":601,"line":1002},11,[1004,1009,1014,1018,1022,1026,1030,1034,1038,1043,1047],{"type":562,"tag":599,"props":1005,"children":1006},{"style":818},[1007],{"type":567,"value":1008},"    let",{"type":562,"tag":599,"props":1010,"children":1011},{"style":770},[1012],{"type":567,"value":1013}," mid",{"type":562,"tag":599,"props":1015,"children":1016},{"style":742},[1017],{"type":567,"value":832},{"type":562,"tag":599,"props":1019,"children":1020},{"style":742},[1021],{"type":567,"value":842},{"type":562,"tag":599,"props":1023,"children":1024},{"style":770},[1025],{"type":567,"value":973},{"type":562,"tag":599,"props":1027,"children":1028},{"style":818},[1029],{"type":567,"value":978},{"type":562,"tag":599,"props":1031,"children":1032},{"style":770},[1033],{"type":567,"value":922},{"type":562,"tag":599,"props":1035,"children":1036},{"style":742},[1037],{"type":567,"value":852},{"type":562,"tag":599,"props":1039,"children":1040},{"style":818},[1041],{"type":567,"value":1042}," >>",{"type":562,"tag":599,"props":1044,"children":1045},{"style":901},[1046],{"type":567,"value":951},{"type":562,"tag":599,"props":1048,"children":1049},{"style":742},[1050],{"type":567,"value":909},{"type":562,"tag":599,"props":1052,"children":1054},{"class":601,"line":1053},12,[1055,1060,1064,1068,1073,1078,1083,1088,1092,1096,1100,1104,1108,1113],{"type":562,"tag":599,"props":1056,"children":1057},{"style":748},[1058],{"type":567,"value":1059},"    if",{"type":562,"tag":599,"props":1061,"children":1062},{"style":742},[1063],{"type":567,"value":842},{"type":562,"tag":599,"props":1065,"children":1066},{"style":770},[1067],{"type":567,"value":847},{"type":562,"tag":599,"props":1069,"children":1070},{"style":742},[1071],{"type":567,"value":1072},"[",{"type":562,"tag":599,"props":1074,"children":1075},{"style":770},[1076],{"type":567,"value":1077},"mid",{"type":562,"tag":599,"props":1079,"children":1080},{"style":742},[1081],{"type":567,"value":1082},"]",{"type":562,"tag":599,"props":1084,"children":1085},{"style":742},[1086],{"type":567,"value":1087}," >",{"type":562,"tag":599,"props":1089,"children":1090},{"style":770},[1091],{"type":567,"value":931},{"type":562,"tag":599,"props":1093,"children":1094},{"style":742},[1095],{"type":567,"value":1072},{"type":562,"tag":599,"props":1097,"children":1098},{"style":770},[1099],{"type":567,"value":1077},{"type":562,"tag":599,"props":1101,"children":1102},{"style":818},[1103],{"type":567,"value":978},{"type":562,"tag":599,"props":1105,"children":1106},{"style":901},[1107],{"type":567,"value":951},{"type":562,"tag":599,"props":1109,"children":1110},{"style":742},[1111],{"type":567,"value":1112},"])",{"type":562,"tag":599,"props":1114,"children":1115},{"style":742},[1116],{"type":567,"value":857},{"type":562,"tag":599,"props":1118,"children":1120},{"class":601,"line":1119},13,[1121,1126,1130,1134,1139],{"type":562,"tag":599,"props":1122,"children":1123},{"style":770},[1124],{"type":567,"value":1125},"      r",{"type":562,"tag":599,"props":1127,"children":1128},{"style":742},[1129],{"type":567,"value":832},{"type":562,"tag":599,"props":1131,"children":1132},{"style":770},[1133],{"type":567,"value":1013},{"type":562,"tag":599,"props":1135,"children":1136},{"style":742},[1137],{"type":567,"value":1138},";",{"type":562,"tag":599,"props":1140,"children":1141},{"style":728},[1142],{"type":567,"value":1143}," // 染蓝色\n",{"type":562,"tag":599,"props":1145,"children":1147},{"class":601,"line":1146},14,[1148,1153,1158],{"type":562,"tag":599,"props":1149,"children":1150},{"style":742},[1151],{"type":567,"value":1152},"    }",{"type":562,"tag":599,"props":1154,"children":1155},{"style":748},[1156],{"type":567,"value":1157}," else",{"type":562,"tag":599,"props":1159,"children":1160},{"style":742},[1161],{"type":567,"value":857},{"type":562,"tag":599,"props":1163,"children":1165},{"class":601,"line":1164},15,[1166,1171,1175,1179,1183],{"type":562,"tag":599,"props":1167,"children":1168},{"style":770},[1169],{"type":567,"value":1170},"      l",{"type":562,"tag":599,"props":1172,"children":1173},{"style":742},[1174],{"type":567,"value":832},{"type":562,"tag":599,"props":1176,"children":1177},{"style":770},[1178],{"type":567,"value":1013},{"type":562,"tag":599,"props":1180,"children":1181},{"style":742},[1182],{"type":567,"value":1138},{"type":562,"tag":599,"props":1184,"children":1185},{"style":728},[1186],{"type":567,"value":1187}," // 染红色\n",{"type":562,"tag":599,"props":1189,"children":1191},{"class":601,"line":1190},16,[1192],{"type":562,"tag":599,"props":1193,"children":1194},{"style":742},[1195],{"type":567,"value":1196},"    }\n",{"type":562,"tag":599,"props":1198,"children":1200},{"class":601,"line":1199},17,[1201],{"type":562,"tag":599,"props":1202,"children":1203},{"style":742},[1204],{"type":567,"value":1205},"  }\n",{"type":562,"tag":599,"props":1207,"children":1209},{"class":601,"line":1208},18,[1210,1215,1219],{"type":562,"tag":599,"props":1211,"children":1212},{"style":748},[1213],{"type":567,"value":1214},"  return",{"type":562,"tag":599,"props":1216,"children":1217},{"style":770},[1218],{"type":567,"value":922},{"type":562,"tag":599,"props":1220,"children":1221},{"style":742},[1222],{"type":567,"value":909},{"type":562,"tag":599,"props":1224,"children":1226},{"class":601,"line":1225},19,[1227],{"type":562,"tag":599,"props":1228,"children":1229},{"style":742},[1230],{"type":567,"value":1231},"};\n",{"type":562,"tag":1233,"props":1234,"children":1235},"style",{},[1236],{"type":567,"value":1237},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":814,"depth":814,"links":1239},[1240,1241],{"id":700,"depth":611,"text":700},{"id":705,"depth":611,"text":705,"children":1242},[1243],{"id":711,"depth":620,"text":711},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1250,1252],{"_path":189,"title":188,"description":1251},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1253},"给你两个版本号 version1 和 version2 ，请你比较它们。",1715137600093]