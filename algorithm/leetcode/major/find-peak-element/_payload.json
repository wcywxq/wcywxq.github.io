[{"data":1,"prerenderedAt":1180},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":478,"/algorithm/leetcode/major/find-peak-element-surround":1175},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":191,"description":482,"url":483,"body":484,"_type":1170,"_id":1171,"_source":1172,"_file":1173,"_extension":1174},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":485,"children":486,"toc":1164},"root",[487,494,499,504,509,514,553,558,598,603,623,629,634,640,1158],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":488,"tag":489,"props":500,"children":501},{},[502],{"type":493,"value":503},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":488,"tag":489,"props":505,"children":506},{},[507],{"type":493,"value":508},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":488,"tag":489,"props":510,"children":511},{},[512],{"type":493,"value":513},"示例 1：",{"type":488,"tag":515,"props":516,"children":519},"pre",{"className":517,"code":518,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[520],{"type":488,"tag":521,"props":522,"children":523},"code",{"__ignoreMap":481},[524,535,544],{"type":488,"tag":525,"props":526,"children":529},"span",{"class":527,"line":528},"line",1,[530],{"type":488,"tag":525,"props":531,"children":532},{},[533],{"type":493,"value":534},"输入：nums = [1,2,3,1]\n",{"type":488,"tag":525,"props":536,"children":538},{"class":527,"line":537},2,[539],{"type":488,"tag":525,"props":540,"children":541},{},[542],{"type":493,"value":543},"输出：2\n",{"type":488,"tag":525,"props":545,"children":547},{"class":527,"line":546},3,[548],{"type":488,"tag":525,"props":549,"children":550},{},[551],{"type":493,"value":552},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":488,"tag":489,"props":554,"children":555},{},[556],{"type":493,"value":557},"示例 2：",{"type":488,"tag":515,"props":559,"children":561},{"className":517,"code":560,"language":493,"meta":481,"style":481},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[562],{"type":488,"tag":521,"props":563,"children":564},{"__ignoreMap":481},[565,573,581,589],{"type":488,"tag":525,"props":566,"children":567},{"class":527,"line":528},[568],{"type":488,"tag":525,"props":569,"children":570},{},[571],{"type":493,"value":572},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":488,"tag":525,"props":574,"children":575},{"class":527,"line":537},[576],{"type":488,"tag":525,"props":577,"children":578},{},[579],{"type":493,"value":580},"输出：1 或 5\n",{"type":488,"tag":525,"props":582,"children":583},{"class":527,"line":546},[584],{"type":488,"tag":525,"props":585,"children":586},{},[587],{"type":493,"value":588},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":488,"tag":525,"props":590,"children":592},{"class":527,"line":591},4,[593],{"type":488,"tag":525,"props":594,"children":595},{},[596],{"type":493,"value":597},"或者返回索引 5， 其峰值元素为 6。\n",{"type":488,"tag":489,"props":599,"children":600},{},[601],{"type":493,"value":602},"提示：",{"type":488,"tag":604,"props":605,"children":606},"ul",{},[607,613,618],{"type":488,"tag":608,"props":609,"children":610},"li",{},[611],{"type":493,"value":612},"1 \u003C= nums.length \u003C= 1000",{"type":488,"tag":608,"props":614,"children":615},{},[616],{"type":493,"value":617},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":488,"tag":608,"props":619,"children":620},{},[621],{"type":493,"value":622},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":488,"tag":624,"props":625,"children":627},"h2",{"id":626},"解题思路",[628],{"type":493,"value":626},{"type":488,"tag":624,"props":630,"children":632},{"id":631},"实现",[633],{"type":493,"value":631},{"type":488,"tag":635,"props":636,"children":638},"h3",{"id":637},"二分查找",[639],{"type":493,"value":637},{"type":488,"tag":515,"props":641,"children":645},{"className":642,"code":643,"language":644,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[646],{"type":488,"tag":521,"props":647,"children":648},{"__ignoreMap":481},[649,658,700,730,738,784,793,802,836,882,926,977,1043,1070,1088,1114,1123,1132,1149],{"type":488,"tag":525,"props":650,"children":651},{"class":527,"line":528},[652],{"type":488,"tag":525,"props":653,"children":655},{"style":654},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[656],{"type":493,"value":657},"/**\n",{"type":488,"tag":525,"props":659,"children":660},{"class":527,"line":537},[661,666,672,678,683,689,694],{"type":488,"tag":525,"props":662,"children":663},{"style":654},[664],{"type":493,"value":665}," * ",{"type":488,"tag":525,"props":667,"children":669},{"style":668},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[670],{"type":493,"value":671},"@",{"type":488,"tag":525,"props":673,"children":675},{"style":674},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[676],{"type":493,"value":677},"param",{"type":488,"tag":525,"props":679,"children":680},{"style":668},[681],{"type":493,"value":682}," {",{"type":488,"tag":525,"props":684,"children":686},{"style":685},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[687],{"type":493,"value":688},"number[]",{"type":488,"tag":525,"props":690,"children":691},{"style":668},[692],{"type":493,"value":693},"}",{"type":488,"tag":525,"props":695,"children":697},{"style":696},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[698],{"type":493,"value":699}," nums\n",{"type":488,"tag":525,"props":701,"children":702},{"class":527,"line":546},[703,707,711,716,720,725],{"type":488,"tag":525,"props":704,"children":705},{"style":654},[706],{"type":493,"value":665},{"type":488,"tag":525,"props":708,"children":709},{"style":668},[710],{"type":493,"value":671},{"type":488,"tag":525,"props":712,"children":713},{"style":674},[714],{"type":493,"value":715},"return",{"type":488,"tag":525,"props":717,"children":718},{"style":668},[719],{"type":493,"value":682},{"type":488,"tag":525,"props":721,"children":722},{"style":685},[723],{"type":493,"value":724},"number",{"type":488,"tag":525,"props":726,"children":727},{"style":668},[728],{"type":493,"value":729},"}\n",{"type":488,"tag":525,"props":731,"children":732},{"class":527,"line":591},[733],{"type":488,"tag":525,"props":734,"children":735},{"style":654},[736],{"type":493,"value":737}," */\n",{"type":488,"tag":525,"props":739,"children":741},{"class":527,"line":740},5,[742,748,754,759,764,769,774,779],{"type":488,"tag":525,"props":743,"children":745},{"style":744},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[746],{"type":493,"value":747},"var",{"type":488,"tag":525,"props":749,"children":751},{"style":750},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[752],{"type":493,"value":753}," findPeakElement",{"type":488,"tag":525,"props":755,"children":756},{"style":668},[757],{"type":493,"value":758}," =",{"type":488,"tag":525,"props":760,"children":761},{"style":744},[762],{"type":493,"value":763}," function",{"type":488,"tag":525,"props":765,"children":766},{"style":668},[767],{"type":493,"value":768}," (",{"type":488,"tag":525,"props":770,"children":771},{"style":696},[772],{"type":493,"value":773},"nums",{"type":488,"tag":525,"props":775,"children":776},{"style":668},[777],{"type":493,"value":778},")",{"type":488,"tag":525,"props":780,"children":781},{"style":668},[782],{"type":493,"value":783}," {\n",{"type":488,"tag":525,"props":785,"children":787},{"class":527,"line":786},6,[788],{"type":488,"tag":525,"props":789,"children":790},{"style":654},[791],{"type":493,"value":792},"  // [0, n - 2]\n",{"type":488,"tag":525,"props":794,"children":796},{"class":527,"line":795},7,[797],{"type":488,"tag":525,"props":798,"children":799},{"style":654},[800],{"type":493,"value":801},"  // (-1, n - 1) 开区间写法\n",{"type":488,"tag":525,"props":803,"children":805},{"class":527,"line":804},8,[806,811,816,820,825,831],{"type":488,"tag":525,"props":807,"children":808},{"style":744},[809],{"type":493,"value":810},"  let",{"type":488,"tag":525,"props":812,"children":813},{"style":696},[814],{"type":493,"value":815}," l",{"type":488,"tag":525,"props":817,"children":818},{"style":668},[819],{"type":493,"value":758},{"type":488,"tag":525,"props":821,"children":822},{"style":744},[823],{"type":493,"value":824}," -",{"type":488,"tag":525,"props":826,"children":828},{"style":827},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[829],{"type":493,"value":830},"1",{"type":488,"tag":525,"props":832,"children":833},{"style":668},[834],{"type":493,"value":835},";\n",{"type":488,"tag":525,"props":837,"children":839},{"class":527,"line":838},9,[840,844,849,853,858,863,869,873,878],{"type":488,"tag":525,"props":841,"children":842},{"style":744},[843],{"type":493,"value":810},{"type":488,"tag":525,"props":845,"children":846},{"style":696},[847],{"type":493,"value":848}," r",{"type":488,"tag":525,"props":850,"children":851},{"style":668},[852],{"type":493,"value":758},{"type":488,"tag":525,"props":854,"children":855},{"style":696},[856],{"type":493,"value":857}," nums",{"type":488,"tag":525,"props":859,"children":860},{"style":668},[861],{"type":493,"value":862},".",{"type":488,"tag":525,"props":864,"children":866},{"style":865},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[867],{"type":493,"value":868},"length",{"type":488,"tag":525,"props":870,"children":871},{"style":744},[872],{"type":493,"value":824},{"type":488,"tag":525,"props":874,"children":875},{"style":827},[876],{"type":493,"value":877}," 1",{"type":488,"tag":525,"props":879,"children":880},{"style":668},[881],{"type":493,"value":835},{"type":488,"tag":525,"props":883,"children":885},{"class":527,"line":884},10,[886,891,895,900,905,909,914,918,922],{"type":488,"tag":525,"props":887,"children":888},{"style":674},[889],{"type":493,"value":890},"  while",{"type":488,"tag":525,"props":892,"children":893},{"style":668},[894],{"type":493,"value":768},{"type":488,"tag":525,"props":896,"children":897},{"style":696},[898],{"type":493,"value":899},"l",{"type":488,"tag":525,"props":901,"children":902},{"style":744},[903],{"type":493,"value":904}," +",{"type":488,"tag":525,"props":906,"children":907},{"style":827},[908],{"type":493,"value":877},{"type":488,"tag":525,"props":910,"children":911},{"style":668},[912],{"type":493,"value":913}," \u003C",{"type":488,"tag":525,"props":915,"children":916},{"style":696},[917],{"type":493,"value":848},{"type":488,"tag":525,"props":919,"children":920},{"style":668},[921],{"type":493,"value":778},{"type":488,"tag":525,"props":923,"children":924},{"style":668},[925],{"type":493,"value":783},{"type":488,"tag":525,"props":927,"children":929},{"class":527,"line":928},11,[930,935,940,944,948,952,956,960,964,969,973],{"type":488,"tag":525,"props":931,"children":932},{"style":744},[933],{"type":493,"value":934},"    let",{"type":488,"tag":525,"props":936,"children":937},{"style":696},[938],{"type":493,"value":939}," mid",{"type":488,"tag":525,"props":941,"children":942},{"style":668},[943],{"type":493,"value":758},{"type":488,"tag":525,"props":945,"children":946},{"style":668},[947],{"type":493,"value":768},{"type":488,"tag":525,"props":949,"children":950},{"style":696},[951],{"type":493,"value":899},{"type":488,"tag":525,"props":953,"children":954},{"style":744},[955],{"type":493,"value":904},{"type":488,"tag":525,"props":957,"children":958},{"style":696},[959],{"type":493,"value":848},{"type":488,"tag":525,"props":961,"children":962},{"style":668},[963],{"type":493,"value":778},{"type":488,"tag":525,"props":965,"children":966},{"style":744},[967],{"type":493,"value":968}," >>",{"type":488,"tag":525,"props":970,"children":971},{"style":827},[972],{"type":493,"value":877},{"type":488,"tag":525,"props":974,"children":975},{"style":668},[976],{"type":493,"value":835},{"type":488,"tag":525,"props":978,"children":980},{"class":527,"line":979},12,[981,986,990,994,999,1004,1009,1014,1018,1022,1026,1030,1034,1039],{"type":488,"tag":525,"props":982,"children":983},{"style":674},[984],{"type":493,"value":985},"    if",{"type":488,"tag":525,"props":987,"children":988},{"style":668},[989],{"type":493,"value":768},{"type":488,"tag":525,"props":991,"children":992},{"style":696},[993],{"type":493,"value":773},{"type":488,"tag":525,"props":995,"children":996},{"style":668},[997],{"type":493,"value":998},"[",{"type":488,"tag":525,"props":1000,"children":1001},{"style":696},[1002],{"type":493,"value":1003},"mid",{"type":488,"tag":525,"props":1005,"children":1006},{"style":668},[1007],{"type":493,"value":1008},"]",{"type":488,"tag":525,"props":1010,"children":1011},{"style":668},[1012],{"type":493,"value":1013}," >",{"type":488,"tag":525,"props":1015,"children":1016},{"style":696},[1017],{"type":493,"value":857},{"type":488,"tag":525,"props":1019,"children":1020},{"style":668},[1021],{"type":493,"value":998},{"type":488,"tag":525,"props":1023,"children":1024},{"style":696},[1025],{"type":493,"value":1003},{"type":488,"tag":525,"props":1027,"children":1028},{"style":744},[1029],{"type":493,"value":904},{"type":488,"tag":525,"props":1031,"children":1032},{"style":827},[1033],{"type":493,"value":877},{"type":488,"tag":525,"props":1035,"children":1036},{"style":668},[1037],{"type":493,"value":1038},"])",{"type":488,"tag":525,"props":1040,"children":1041},{"style":668},[1042],{"type":493,"value":783},{"type":488,"tag":525,"props":1044,"children":1046},{"class":527,"line":1045},13,[1047,1052,1056,1060,1065],{"type":488,"tag":525,"props":1048,"children":1049},{"style":696},[1050],{"type":493,"value":1051},"      r",{"type":488,"tag":525,"props":1053,"children":1054},{"style":668},[1055],{"type":493,"value":758},{"type":488,"tag":525,"props":1057,"children":1058},{"style":696},[1059],{"type":493,"value":939},{"type":488,"tag":525,"props":1061,"children":1062},{"style":668},[1063],{"type":493,"value":1064},";",{"type":488,"tag":525,"props":1066,"children":1067},{"style":654},[1068],{"type":493,"value":1069}," // 染蓝色\n",{"type":488,"tag":525,"props":1071,"children":1073},{"class":527,"line":1072},14,[1074,1079,1084],{"type":488,"tag":525,"props":1075,"children":1076},{"style":668},[1077],{"type":493,"value":1078},"    }",{"type":488,"tag":525,"props":1080,"children":1081},{"style":674},[1082],{"type":493,"value":1083}," else",{"type":488,"tag":525,"props":1085,"children":1086},{"style":668},[1087],{"type":493,"value":783},{"type":488,"tag":525,"props":1089,"children":1091},{"class":527,"line":1090},15,[1092,1097,1101,1105,1109],{"type":488,"tag":525,"props":1093,"children":1094},{"style":696},[1095],{"type":493,"value":1096},"      l",{"type":488,"tag":525,"props":1098,"children":1099},{"style":668},[1100],{"type":493,"value":758},{"type":488,"tag":525,"props":1102,"children":1103},{"style":696},[1104],{"type":493,"value":939},{"type":488,"tag":525,"props":1106,"children":1107},{"style":668},[1108],{"type":493,"value":1064},{"type":488,"tag":525,"props":1110,"children":1111},{"style":654},[1112],{"type":493,"value":1113}," // 染红色\n",{"type":488,"tag":525,"props":1115,"children":1117},{"class":527,"line":1116},16,[1118],{"type":488,"tag":525,"props":1119,"children":1120},{"style":668},[1121],{"type":493,"value":1122},"    }\n",{"type":488,"tag":525,"props":1124,"children":1126},{"class":527,"line":1125},17,[1127],{"type":488,"tag":525,"props":1128,"children":1129},{"style":668},[1130],{"type":493,"value":1131},"  }\n",{"type":488,"tag":525,"props":1133,"children":1135},{"class":527,"line":1134},18,[1136,1141,1145],{"type":488,"tag":525,"props":1137,"children":1138},{"style":674},[1139],{"type":493,"value":1140},"  return",{"type":488,"tag":525,"props":1142,"children":1143},{"style":696},[1144],{"type":493,"value":848},{"type":488,"tag":525,"props":1146,"children":1147},{"style":668},[1148],{"type":493,"value":835},{"type":488,"tag":525,"props":1150,"children":1152},{"class":527,"line":1151},19,[1153],{"type":488,"tag":525,"props":1154,"children":1155},{"style":668},[1156],{"type":493,"value":1157},"};\n",{"type":488,"tag":1159,"props":1160,"children":1161},"style",{},[1162],{"type":493,"value":1163},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":740,"depth":740,"links":1165},[1166,1167],{"id":626,"depth":537,"text":626},{"id":631,"depth":537,"text":631,"children":1168},[1169],{"id":637,"depth":546,"text":637},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1176,1178],{"_path":189,"title":188,"description":1177},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1179},"给你两个版本号 version1 和 version2 ，请你比较它们。",1714046226237]