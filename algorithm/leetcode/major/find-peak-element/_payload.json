[{"data":1,"prerenderedAt":1136},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":463,"/algorithm/leetcode/major/find-peak-element-surround":1131},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":189,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":188,"description":467,"url":468,"body":469,"_type":1126,"_id":1127,"_source":1128,"_file":1129,"_extension":1130},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":470,"children":471,"toc":1120},"root",[472,479,484,489,494,499,538,543,583,588,608,614,619,625,1114],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":473,"tag":474,"props":485,"children":486},{},[487],{"type":478,"value":488},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":473,"tag":474,"props":490,"children":491},{},[492],{"type":478,"value":493},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":473,"tag":474,"props":495,"children":496},{},[497],{"type":478,"value":498},"示例 1：",{"type":473,"tag":500,"props":501,"children":504},"pre",{"className":502,"code":503,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[505],{"type":473,"tag":506,"props":507,"children":508},"code",{"__ignoreMap":466},[509,520,529],{"type":473,"tag":510,"props":511,"children":514},"span",{"class":512,"line":513},"line",1,[515],{"type":473,"tag":510,"props":516,"children":517},{},[518],{"type":478,"value":519},"输入：nums = [1,2,3,1]\n",{"type":473,"tag":510,"props":521,"children":523},{"class":512,"line":522},2,[524],{"type":473,"tag":510,"props":525,"children":526},{},[527],{"type":478,"value":528},"输出：2\n",{"type":473,"tag":510,"props":530,"children":532},{"class":512,"line":531},3,[533],{"type":473,"tag":510,"props":534,"children":535},{},[536],{"type":478,"value":537},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":473,"tag":474,"props":539,"children":540},{},[541],{"type":478,"value":542},"示例 2：",{"type":473,"tag":500,"props":544,"children":546},{"className":502,"code":545,"language":478,"meta":466,"style":466},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[547],{"type":473,"tag":506,"props":548,"children":549},{"__ignoreMap":466},[550,558,566,574],{"type":473,"tag":510,"props":551,"children":552},{"class":512,"line":513},[553],{"type":473,"tag":510,"props":554,"children":555},{},[556],{"type":478,"value":557},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":473,"tag":510,"props":559,"children":560},{"class":512,"line":522},[561],{"type":473,"tag":510,"props":562,"children":563},{},[564],{"type":478,"value":565},"输出：1 或 5\n",{"type":473,"tag":510,"props":567,"children":568},{"class":512,"line":531},[569],{"type":473,"tag":510,"props":570,"children":571},{},[572],{"type":478,"value":573},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":473,"tag":510,"props":575,"children":577},{"class":512,"line":576},4,[578],{"type":473,"tag":510,"props":579,"children":580},{},[581],{"type":478,"value":582},"或者返回索引 5， 其峰值元素为 6。\n",{"type":473,"tag":474,"props":584,"children":585},{},[586],{"type":478,"value":587},"提示：",{"type":473,"tag":589,"props":590,"children":591},"ul",{},[592,598,603],{"type":473,"tag":593,"props":594,"children":595},"li",{},[596],{"type":478,"value":597},"1 \u003C= nums.length \u003C= 1000",{"type":473,"tag":593,"props":599,"children":600},{},[601],{"type":478,"value":602},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":473,"tag":593,"props":604,"children":605},{},[606],{"type":478,"value":607},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":473,"tag":609,"props":610,"children":612},"h2",{"id":611},"解题思路",[613],{"type":478,"value":611},{"type":473,"tag":609,"props":615,"children":617},{"id":616},"实现",[618],{"type":478,"value":616},{"type":473,"tag":620,"props":621,"children":623},"h3",{"id":622},"二分查找",[624],{"type":478,"value":622},{"type":473,"tag":500,"props":626,"children":630},{"className":627,"code":628,"language":629,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[631],{"type":473,"tag":506,"props":632,"children":633},{"__ignoreMap":466},[634,643,669,686,694,738,747,756,792,839,880,932,994,1021,1040,1066,1075,1084,1101],{"type":473,"tag":510,"props":635,"children":636},{"class":512,"line":513},[637],{"type":473,"tag":510,"props":638,"children":640},{"style":639},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[641],{"type":478,"value":642},"/**\n",{"type":473,"tag":510,"props":644,"children":645},{"class":512,"line":522},[646,651,657,663],{"type":473,"tag":510,"props":647,"children":648},{"style":639},[649],{"type":478,"value":650}," * ",{"type":473,"tag":510,"props":652,"children":654},{"style":653},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[655],{"type":478,"value":656},"@param",{"type":473,"tag":510,"props":658,"children":660},{"style":659},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[661],{"type":478,"value":662}," {number[]}",{"type":473,"tag":510,"props":664,"children":666},{"style":665},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[667],{"type":478,"value":668}," nums\n",{"type":473,"tag":510,"props":670,"children":671},{"class":512,"line":531},[672,676,681],{"type":473,"tag":510,"props":673,"children":674},{"style":639},[675],{"type":478,"value":650},{"type":473,"tag":510,"props":677,"children":678},{"style":653},[679],{"type":478,"value":680},"@return",{"type":473,"tag":510,"props":682,"children":683},{"style":659},[684],{"type":478,"value":685}," {number}\n",{"type":473,"tag":510,"props":687,"children":688},{"class":512,"line":576},[689],{"type":473,"tag":510,"props":690,"children":691},{"style":639},[692],{"type":478,"value":693}," */\n",{"type":473,"tag":510,"props":695,"children":697},{"class":512,"line":696},5,[698,704,710,716,721,727,733],{"type":473,"tag":510,"props":699,"children":701},{"style":700},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[702],{"type":478,"value":703},"var",{"type":473,"tag":510,"props":705,"children":707},{"style":706},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[708],{"type":478,"value":709}," findPeakElement",{"type":473,"tag":510,"props":711,"children":713},{"style":712},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[714],{"type":478,"value":715}," =",{"type":473,"tag":510,"props":717,"children":718},{"style":700},[719],{"type":478,"value":720}," function",{"type":473,"tag":510,"props":722,"children":724},{"style":723},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[725],{"type":478,"value":726}," (",{"type":473,"tag":510,"props":728,"children":730},{"style":729},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[731],{"type":478,"value":732},"nums",{"type":473,"tag":510,"props":734,"children":735},{"style":723},[736],{"type":478,"value":737},") {\n",{"type":473,"tag":510,"props":739,"children":741},{"class":512,"line":740},6,[742],{"type":473,"tag":510,"props":743,"children":744},{"style":639},[745],{"type":478,"value":746},"  // [0, n - 2]\n",{"type":473,"tag":510,"props":748,"children":750},{"class":512,"line":749},7,[751],{"type":473,"tag":510,"props":752,"children":753},{"style":639},[754],{"type":478,"value":755},"  // (-1, n - 1) 开区间写法\n",{"type":473,"tag":510,"props":757,"children":759},{"class":512,"line":758},8,[760,765,771,775,780,786],{"type":473,"tag":510,"props":761,"children":762},{"style":700},[763],{"type":478,"value":764},"  let",{"type":473,"tag":510,"props":766,"children":768},{"style":767},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[769],{"type":478,"value":770}," l",{"type":473,"tag":510,"props":772,"children":773},{"style":712},[774],{"type":478,"value":715},{"type":473,"tag":510,"props":776,"children":777},{"style":712},[778],{"type":478,"value":779}," -",{"type":473,"tag":510,"props":781,"children":783},{"style":782},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[784],{"type":478,"value":785},"1",{"type":473,"tag":510,"props":787,"children":789},{"style":788},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[790],{"type":478,"value":791},";\n",{"type":473,"tag":510,"props":793,"children":795},{"class":512,"line":794},9,[796,800,805,809,814,820,825,830,835],{"type":473,"tag":510,"props":797,"children":798},{"style":700},[799],{"type":478,"value":764},{"type":473,"tag":510,"props":801,"children":802},{"style":767},[803],{"type":478,"value":804}," r",{"type":473,"tag":510,"props":806,"children":807},{"style":712},[808],{"type":478,"value":715},{"type":473,"tag":510,"props":810,"children":811},{"style":767},[812],{"type":478,"value":813}," nums",{"type":473,"tag":510,"props":815,"children":817},{"style":816},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[818],{"type":478,"value":819},".",{"type":473,"tag":510,"props":821,"children":822},{"style":723},[823],{"type":478,"value":824},"length ",{"type":473,"tag":510,"props":826,"children":827},{"style":712},[828],{"type":478,"value":829},"-",{"type":473,"tag":510,"props":831,"children":832},{"style":782},[833],{"type":478,"value":834}," 1",{"type":473,"tag":510,"props":836,"children":837},{"style":788},[838],{"type":478,"value":791},{"type":473,"tag":510,"props":840,"children":842},{"class":512,"line":841},10,[843,849,853,858,863,867,872,876],{"type":473,"tag":510,"props":844,"children":846},{"style":845},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[847],{"type":478,"value":848},"  while",{"type":473,"tag":510,"props":850,"children":851},{"style":723},[852],{"type":478,"value":726},{"type":473,"tag":510,"props":854,"children":855},{"style":767},[856],{"type":478,"value":857},"l",{"type":473,"tag":510,"props":859,"children":860},{"style":712},[861],{"type":478,"value":862}," +",{"type":473,"tag":510,"props":864,"children":865},{"style":782},[866],{"type":478,"value":834},{"type":473,"tag":510,"props":868,"children":869},{"style":712},[870],{"type":478,"value":871}," \u003C",{"type":473,"tag":510,"props":873,"children":874},{"style":767},[875],{"type":478,"value":804},{"type":473,"tag":510,"props":877,"children":878},{"style":723},[879],{"type":478,"value":737},{"type":473,"tag":510,"props":881,"children":883},{"class":512,"line":882},11,[884,889,894,898,902,906,910,914,919,924,928],{"type":473,"tag":510,"props":885,"children":886},{"style":700},[887],{"type":478,"value":888},"    let",{"type":473,"tag":510,"props":890,"children":891},{"style":767},[892],{"type":478,"value":893}," mid",{"type":473,"tag":510,"props":895,"children":896},{"style":712},[897],{"type":478,"value":715},{"type":473,"tag":510,"props":899,"children":900},{"style":723},[901],{"type":478,"value":726},{"type":473,"tag":510,"props":903,"children":904},{"style":767},[905],{"type":478,"value":857},{"type":473,"tag":510,"props":907,"children":908},{"style":712},[909],{"type":478,"value":862},{"type":473,"tag":510,"props":911,"children":912},{"style":767},[913],{"type":478,"value":804},{"type":473,"tag":510,"props":915,"children":916},{"style":723},[917],{"type":478,"value":918},") ",{"type":473,"tag":510,"props":920,"children":921},{"style":712},[922],{"type":478,"value":923},">>",{"type":473,"tag":510,"props":925,"children":926},{"style":782},[927],{"type":478,"value":834},{"type":473,"tag":510,"props":929,"children":930},{"style":788},[931],{"type":478,"value":791},{"type":473,"tag":510,"props":933,"children":935},{"class":512,"line":934},12,[936,941,945,949,954,959,964,969,973,977,981,985,989],{"type":473,"tag":510,"props":937,"children":938},{"style":845},[939],{"type":478,"value":940},"    if",{"type":473,"tag":510,"props":942,"children":943},{"style":723},[944],{"type":478,"value":726},{"type":473,"tag":510,"props":946,"children":947},{"style":767},[948],{"type":478,"value":732},{"type":473,"tag":510,"props":950,"children":951},{"style":723},[952],{"type":478,"value":953},"[",{"type":473,"tag":510,"props":955,"children":956},{"style":767},[957],{"type":478,"value":958},"mid",{"type":473,"tag":510,"props":960,"children":961},{"style":723},[962],{"type":478,"value":963},"] ",{"type":473,"tag":510,"props":965,"children":966},{"style":712},[967],{"type":478,"value":968},">",{"type":473,"tag":510,"props":970,"children":971},{"style":767},[972],{"type":478,"value":813},{"type":473,"tag":510,"props":974,"children":975},{"style":723},[976],{"type":478,"value":953},{"type":473,"tag":510,"props":978,"children":979},{"style":767},[980],{"type":478,"value":958},{"type":473,"tag":510,"props":982,"children":983},{"style":712},[984],{"type":478,"value":862},{"type":473,"tag":510,"props":986,"children":987},{"style":782},[988],{"type":478,"value":834},{"type":473,"tag":510,"props":990,"children":991},{"style":723},[992],{"type":478,"value":993},"]) {\n",{"type":473,"tag":510,"props":995,"children":997},{"class":512,"line":996},13,[998,1003,1007,1011,1016],{"type":473,"tag":510,"props":999,"children":1000},{"style":767},[1001],{"type":478,"value":1002},"      r",{"type":473,"tag":510,"props":1004,"children":1005},{"style":712},[1006],{"type":478,"value":715},{"type":473,"tag":510,"props":1008,"children":1009},{"style":767},[1010],{"type":478,"value":893},{"type":473,"tag":510,"props":1012,"children":1013},{"style":788},[1014],{"type":478,"value":1015},";",{"type":473,"tag":510,"props":1017,"children":1018},{"style":639},[1019],{"type":478,"value":1020}," // 染蓝色\n",{"type":473,"tag":510,"props":1022,"children":1024},{"class":512,"line":1023},14,[1025,1030,1035],{"type":473,"tag":510,"props":1026,"children":1027},{"style":723},[1028],{"type":478,"value":1029},"    } ",{"type":473,"tag":510,"props":1031,"children":1032},{"style":845},[1033],{"type":478,"value":1034},"else",{"type":473,"tag":510,"props":1036,"children":1037},{"style":723},[1038],{"type":478,"value":1039}," {\n",{"type":473,"tag":510,"props":1041,"children":1043},{"class":512,"line":1042},15,[1044,1049,1053,1057,1061],{"type":473,"tag":510,"props":1045,"children":1046},{"style":767},[1047],{"type":478,"value":1048},"      l",{"type":473,"tag":510,"props":1050,"children":1051},{"style":712},[1052],{"type":478,"value":715},{"type":473,"tag":510,"props":1054,"children":1055},{"style":767},[1056],{"type":478,"value":893},{"type":473,"tag":510,"props":1058,"children":1059},{"style":788},[1060],{"type":478,"value":1015},{"type":473,"tag":510,"props":1062,"children":1063},{"style":639},[1064],{"type":478,"value":1065}," // 染红色\n",{"type":473,"tag":510,"props":1067,"children":1069},{"class":512,"line":1068},16,[1070],{"type":473,"tag":510,"props":1071,"children":1072},{"style":723},[1073],{"type":478,"value":1074},"    }\n",{"type":473,"tag":510,"props":1076,"children":1078},{"class":512,"line":1077},17,[1079],{"type":473,"tag":510,"props":1080,"children":1081},{"style":723},[1082],{"type":478,"value":1083},"  }\n",{"type":473,"tag":510,"props":1085,"children":1087},{"class":512,"line":1086},18,[1088,1093,1097],{"type":473,"tag":510,"props":1089,"children":1090},{"style":845},[1091],{"type":478,"value":1092},"  return",{"type":473,"tag":510,"props":1094,"children":1095},{"style":767},[1096],{"type":478,"value":804},{"type":473,"tag":510,"props":1098,"children":1099},{"style":788},[1100],{"type":478,"value":791},{"type":473,"tag":510,"props":1102,"children":1104},{"class":512,"line":1103},19,[1105,1110],{"type":473,"tag":510,"props":1106,"children":1107},{"style":723},[1108],{"type":478,"value":1109},"}",{"type":473,"tag":510,"props":1111,"children":1112},{"style":788},[1113],{"type":478,"value":791},{"type":473,"tag":1115,"props":1116,"children":1117},"style",{},[1118],{"type":478,"value":1119},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":696,"depth":696,"links":1121},[1122,1123],{"id":611,"depth":522,"text":611},{"id":616,"depth":522,"text":616,"children":1124},[1125],{"id":622,"depth":531,"text":622},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1132,1134],{"_path":186,"title":185,"description":1133},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":192,"title":191,"description":1135},"给你两个版本号 version1 和 version2 ，请你比较它们。",1713695847938]