[{"data":1,"prerenderedAt":1261},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":559,"/algorithm/leetcode/major/find-peak-element-surround":1256},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":191,"description":563,"url":564,"body":565,"_type":1251,"_id":1252,"_source":1253,"_file":1254,"_extension":1255},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":566,"children":567,"toc":1245},"root",[568,575,580,585,590,595,634,639,679,684,704,710,715,721,1239],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":569,"tag":570,"props":586,"children":587},{},[588],{"type":574,"value":589},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":569,"tag":570,"props":591,"children":592},{},[593],{"type":574,"value":594},"示例 1：",{"type":569,"tag":596,"props":597,"children":600},"pre",{"className":598,"code":599,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[601],{"type":569,"tag":602,"props":603,"children":604},"code",{"__ignoreMap":562},[605,616,625],{"type":569,"tag":606,"props":607,"children":610},"span",{"class":608,"line":609},"line",1,[611],{"type":569,"tag":606,"props":612,"children":613},{},[614],{"type":574,"value":615},"输入：nums = [1,2,3,1]\n",{"type":569,"tag":606,"props":617,"children":619},{"class":608,"line":618},2,[620],{"type":569,"tag":606,"props":621,"children":622},{},[623],{"type":574,"value":624},"输出：2\n",{"type":569,"tag":606,"props":626,"children":628},{"class":608,"line":627},3,[629],{"type":569,"tag":606,"props":630,"children":631},{},[632],{"type":574,"value":633},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":569,"tag":570,"props":635,"children":636},{},[637],{"type":574,"value":638},"示例 2：",{"type":569,"tag":596,"props":640,"children":642},{"className":598,"code":641,"language":574,"meta":562,"style":562},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[643],{"type":569,"tag":602,"props":644,"children":645},{"__ignoreMap":562},[646,654,662,670],{"type":569,"tag":606,"props":647,"children":648},{"class":608,"line":609},[649],{"type":569,"tag":606,"props":650,"children":651},{},[652],{"type":574,"value":653},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":569,"tag":606,"props":655,"children":656},{"class":608,"line":618},[657],{"type":569,"tag":606,"props":658,"children":659},{},[660],{"type":574,"value":661},"输出：1 或 5\n",{"type":569,"tag":606,"props":663,"children":664},{"class":608,"line":627},[665],{"type":569,"tag":606,"props":666,"children":667},{},[668],{"type":574,"value":669},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":569,"tag":606,"props":671,"children":673},{"class":608,"line":672},4,[674],{"type":569,"tag":606,"props":675,"children":676},{},[677],{"type":574,"value":678},"或者返回索引 5， 其峰值元素为 6。\n",{"type":569,"tag":570,"props":680,"children":681},{},[682],{"type":574,"value":683},"提示：",{"type":569,"tag":685,"props":686,"children":687},"ul",{},[688,694,699],{"type":569,"tag":689,"props":690,"children":691},"li",{},[692],{"type":574,"value":693},"1 \u003C= nums.length \u003C= 1000",{"type":569,"tag":689,"props":695,"children":696},{},[697],{"type":574,"value":698},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":569,"tag":689,"props":700,"children":701},{},[702],{"type":574,"value":703},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":569,"tag":705,"props":706,"children":708},"h2",{"id":707},"解题思路",[709],{"type":574,"value":707},{"type":569,"tag":705,"props":711,"children":713},{"id":712},"实现",[714],{"type":574,"value":712},{"type":569,"tag":716,"props":717,"children":719},"h3",{"id":718},"二分查找",[720],{"type":574,"value":718},{"type":569,"tag":596,"props":722,"children":726},{"className":723,"code":724,"language":725,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[727],{"type":569,"tag":602,"props":728,"children":729},{"__ignoreMap":562},[730,739,781,811,819,865,874,883,917,963,1007,1058,1124,1151,1169,1195,1204,1213,1230],{"type":569,"tag":606,"props":731,"children":732},{"class":608,"line":609},[733],{"type":569,"tag":606,"props":734,"children":736},{"style":735},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[737],{"type":574,"value":738},"/**\n",{"type":569,"tag":606,"props":740,"children":741},{"class":608,"line":618},[742,747,753,759,764,770,775],{"type":569,"tag":606,"props":743,"children":744},{"style":735},[745],{"type":574,"value":746}," * ",{"type":569,"tag":606,"props":748,"children":750},{"style":749},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[751],{"type":574,"value":752},"@",{"type":569,"tag":606,"props":754,"children":756},{"style":755},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[757],{"type":574,"value":758},"param",{"type":569,"tag":606,"props":760,"children":761},{"style":749},[762],{"type":574,"value":763}," {",{"type":569,"tag":606,"props":765,"children":767},{"style":766},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[768],{"type":574,"value":769},"number[]",{"type":569,"tag":606,"props":771,"children":772},{"style":749},[773],{"type":574,"value":774},"}",{"type":569,"tag":606,"props":776,"children":778},{"style":777},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[779],{"type":574,"value":780}," nums\n",{"type":569,"tag":606,"props":782,"children":783},{"class":608,"line":627},[784,788,792,797,801,806],{"type":569,"tag":606,"props":785,"children":786},{"style":735},[787],{"type":574,"value":746},{"type":569,"tag":606,"props":789,"children":790},{"style":749},[791],{"type":574,"value":752},{"type":569,"tag":606,"props":793,"children":794},{"style":755},[795],{"type":574,"value":796},"return",{"type":569,"tag":606,"props":798,"children":799},{"style":749},[800],{"type":574,"value":763},{"type":569,"tag":606,"props":802,"children":803},{"style":766},[804],{"type":574,"value":805},"number",{"type":569,"tag":606,"props":807,"children":808},{"style":749},[809],{"type":574,"value":810},"}\n",{"type":569,"tag":606,"props":812,"children":813},{"class":608,"line":672},[814],{"type":569,"tag":606,"props":815,"children":816},{"style":735},[817],{"type":574,"value":818}," */\n",{"type":569,"tag":606,"props":820,"children":822},{"class":608,"line":821},5,[823,829,835,840,845,850,855,860],{"type":569,"tag":606,"props":824,"children":826},{"style":825},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[827],{"type":574,"value":828},"var",{"type":569,"tag":606,"props":830,"children":832},{"style":831},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[833],{"type":574,"value":834}," findPeakElement",{"type":569,"tag":606,"props":836,"children":837},{"style":749},[838],{"type":574,"value":839}," =",{"type":569,"tag":606,"props":841,"children":842},{"style":825},[843],{"type":574,"value":844}," function",{"type":569,"tag":606,"props":846,"children":847},{"style":749},[848],{"type":574,"value":849}," (",{"type":569,"tag":606,"props":851,"children":852},{"style":777},[853],{"type":574,"value":854},"nums",{"type":569,"tag":606,"props":856,"children":857},{"style":749},[858],{"type":574,"value":859},")",{"type":569,"tag":606,"props":861,"children":862},{"style":749},[863],{"type":574,"value":864}," {\n",{"type":569,"tag":606,"props":866,"children":868},{"class":608,"line":867},6,[869],{"type":569,"tag":606,"props":870,"children":871},{"style":735},[872],{"type":574,"value":873},"  // [0, n - 2]\n",{"type":569,"tag":606,"props":875,"children":877},{"class":608,"line":876},7,[878],{"type":569,"tag":606,"props":879,"children":880},{"style":735},[881],{"type":574,"value":882},"  // (-1, n - 1) 开区间写法\n",{"type":569,"tag":606,"props":884,"children":886},{"class":608,"line":885},8,[887,892,897,901,906,912],{"type":569,"tag":606,"props":888,"children":889},{"style":825},[890],{"type":574,"value":891},"  let",{"type":569,"tag":606,"props":893,"children":894},{"style":777},[895],{"type":574,"value":896}," l",{"type":569,"tag":606,"props":898,"children":899},{"style":749},[900],{"type":574,"value":839},{"type":569,"tag":606,"props":902,"children":903},{"style":825},[904],{"type":574,"value":905}," -",{"type":569,"tag":606,"props":907,"children":909},{"style":908},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[910],{"type":574,"value":911},"1",{"type":569,"tag":606,"props":913,"children":914},{"style":749},[915],{"type":574,"value":916},";\n",{"type":569,"tag":606,"props":918,"children":920},{"class":608,"line":919},9,[921,925,930,934,939,944,950,954,959],{"type":569,"tag":606,"props":922,"children":923},{"style":825},[924],{"type":574,"value":891},{"type":569,"tag":606,"props":926,"children":927},{"style":777},[928],{"type":574,"value":929}," r",{"type":569,"tag":606,"props":931,"children":932},{"style":749},[933],{"type":574,"value":839},{"type":569,"tag":606,"props":935,"children":936},{"style":777},[937],{"type":574,"value":938}," nums",{"type":569,"tag":606,"props":940,"children":941},{"style":749},[942],{"type":574,"value":943},".",{"type":569,"tag":606,"props":945,"children":947},{"style":946},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[948],{"type":574,"value":949},"length",{"type":569,"tag":606,"props":951,"children":952},{"style":825},[953],{"type":574,"value":905},{"type":569,"tag":606,"props":955,"children":956},{"style":908},[957],{"type":574,"value":958}," 1",{"type":569,"tag":606,"props":960,"children":961},{"style":749},[962],{"type":574,"value":916},{"type":569,"tag":606,"props":964,"children":966},{"class":608,"line":965},10,[967,972,976,981,986,990,995,999,1003],{"type":569,"tag":606,"props":968,"children":969},{"style":755},[970],{"type":574,"value":971},"  while",{"type":569,"tag":606,"props":973,"children":974},{"style":749},[975],{"type":574,"value":849},{"type":569,"tag":606,"props":977,"children":978},{"style":777},[979],{"type":574,"value":980},"l",{"type":569,"tag":606,"props":982,"children":983},{"style":825},[984],{"type":574,"value":985}," +",{"type":569,"tag":606,"props":987,"children":988},{"style":908},[989],{"type":574,"value":958},{"type":569,"tag":606,"props":991,"children":992},{"style":749},[993],{"type":574,"value":994}," \u003C",{"type":569,"tag":606,"props":996,"children":997},{"style":777},[998],{"type":574,"value":929},{"type":569,"tag":606,"props":1000,"children":1001},{"style":749},[1002],{"type":574,"value":859},{"type":569,"tag":606,"props":1004,"children":1005},{"style":749},[1006],{"type":574,"value":864},{"type":569,"tag":606,"props":1008,"children":1010},{"class":608,"line":1009},11,[1011,1016,1021,1025,1029,1033,1037,1041,1045,1050,1054],{"type":569,"tag":606,"props":1012,"children":1013},{"style":825},[1014],{"type":574,"value":1015},"    let",{"type":569,"tag":606,"props":1017,"children":1018},{"style":777},[1019],{"type":574,"value":1020}," mid",{"type":569,"tag":606,"props":1022,"children":1023},{"style":749},[1024],{"type":574,"value":839},{"type":569,"tag":606,"props":1026,"children":1027},{"style":749},[1028],{"type":574,"value":849},{"type":569,"tag":606,"props":1030,"children":1031},{"style":777},[1032],{"type":574,"value":980},{"type":569,"tag":606,"props":1034,"children":1035},{"style":825},[1036],{"type":574,"value":985},{"type":569,"tag":606,"props":1038,"children":1039},{"style":777},[1040],{"type":574,"value":929},{"type":569,"tag":606,"props":1042,"children":1043},{"style":749},[1044],{"type":574,"value":859},{"type":569,"tag":606,"props":1046,"children":1047},{"style":825},[1048],{"type":574,"value":1049}," >>",{"type":569,"tag":606,"props":1051,"children":1052},{"style":908},[1053],{"type":574,"value":958},{"type":569,"tag":606,"props":1055,"children":1056},{"style":749},[1057],{"type":574,"value":916},{"type":569,"tag":606,"props":1059,"children":1061},{"class":608,"line":1060},12,[1062,1067,1071,1075,1080,1085,1090,1095,1099,1103,1107,1111,1115,1120],{"type":569,"tag":606,"props":1063,"children":1064},{"style":755},[1065],{"type":574,"value":1066},"    if",{"type":569,"tag":606,"props":1068,"children":1069},{"style":749},[1070],{"type":574,"value":849},{"type":569,"tag":606,"props":1072,"children":1073},{"style":777},[1074],{"type":574,"value":854},{"type":569,"tag":606,"props":1076,"children":1077},{"style":749},[1078],{"type":574,"value":1079},"[",{"type":569,"tag":606,"props":1081,"children":1082},{"style":777},[1083],{"type":574,"value":1084},"mid",{"type":569,"tag":606,"props":1086,"children":1087},{"style":749},[1088],{"type":574,"value":1089},"]",{"type":569,"tag":606,"props":1091,"children":1092},{"style":749},[1093],{"type":574,"value":1094}," >",{"type":569,"tag":606,"props":1096,"children":1097},{"style":777},[1098],{"type":574,"value":938},{"type":569,"tag":606,"props":1100,"children":1101},{"style":749},[1102],{"type":574,"value":1079},{"type":569,"tag":606,"props":1104,"children":1105},{"style":777},[1106],{"type":574,"value":1084},{"type":569,"tag":606,"props":1108,"children":1109},{"style":825},[1110],{"type":574,"value":985},{"type":569,"tag":606,"props":1112,"children":1113},{"style":908},[1114],{"type":574,"value":958},{"type":569,"tag":606,"props":1116,"children":1117},{"style":749},[1118],{"type":574,"value":1119},"])",{"type":569,"tag":606,"props":1121,"children":1122},{"style":749},[1123],{"type":574,"value":864},{"type":569,"tag":606,"props":1125,"children":1127},{"class":608,"line":1126},13,[1128,1133,1137,1141,1146],{"type":569,"tag":606,"props":1129,"children":1130},{"style":777},[1131],{"type":574,"value":1132},"      r",{"type":569,"tag":606,"props":1134,"children":1135},{"style":749},[1136],{"type":574,"value":839},{"type":569,"tag":606,"props":1138,"children":1139},{"style":777},[1140],{"type":574,"value":1020},{"type":569,"tag":606,"props":1142,"children":1143},{"style":749},[1144],{"type":574,"value":1145},";",{"type":569,"tag":606,"props":1147,"children":1148},{"style":735},[1149],{"type":574,"value":1150}," // 染蓝色\n",{"type":569,"tag":606,"props":1152,"children":1154},{"class":608,"line":1153},14,[1155,1160,1165],{"type":569,"tag":606,"props":1156,"children":1157},{"style":749},[1158],{"type":574,"value":1159},"    }",{"type":569,"tag":606,"props":1161,"children":1162},{"style":755},[1163],{"type":574,"value":1164}," else",{"type":569,"tag":606,"props":1166,"children":1167},{"style":749},[1168],{"type":574,"value":864},{"type":569,"tag":606,"props":1170,"children":1172},{"class":608,"line":1171},15,[1173,1178,1182,1186,1190],{"type":569,"tag":606,"props":1174,"children":1175},{"style":777},[1176],{"type":574,"value":1177},"      l",{"type":569,"tag":606,"props":1179,"children":1180},{"style":749},[1181],{"type":574,"value":839},{"type":569,"tag":606,"props":1183,"children":1184},{"style":777},[1185],{"type":574,"value":1020},{"type":569,"tag":606,"props":1187,"children":1188},{"style":749},[1189],{"type":574,"value":1145},{"type":569,"tag":606,"props":1191,"children":1192},{"style":735},[1193],{"type":574,"value":1194}," // 染红色\n",{"type":569,"tag":606,"props":1196,"children":1198},{"class":608,"line":1197},16,[1199],{"type":569,"tag":606,"props":1200,"children":1201},{"style":749},[1202],{"type":574,"value":1203},"    }\n",{"type":569,"tag":606,"props":1205,"children":1207},{"class":608,"line":1206},17,[1208],{"type":569,"tag":606,"props":1209,"children":1210},{"style":749},[1211],{"type":574,"value":1212},"  }\n",{"type":569,"tag":606,"props":1214,"children":1216},{"class":608,"line":1215},18,[1217,1222,1226],{"type":569,"tag":606,"props":1218,"children":1219},{"style":755},[1220],{"type":574,"value":1221},"  return",{"type":569,"tag":606,"props":1223,"children":1224},{"style":777},[1225],{"type":574,"value":929},{"type":569,"tag":606,"props":1227,"children":1228},{"style":749},[1229],{"type":574,"value":916},{"type":569,"tag":606,"props":1231,"children":1233},{"class":608,"line":1232},19,[1234],{"type":569,"tag":606,"props":1235,"children":1236},{"style":749},[1237],{"type":574,"value":1238},"};\n",{"type":569,"tag":1240,"props":1241,"children":1242},"style",{},[1243],{"type":574,"value":1244},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":821,"depth":821,"links":1246},[1247,1248],{"id":707,"depth":618,"text":707},{"id":712,"depth":618,"text":712,"children":1249},[1250],{"id":718,"depth":627,"text":718},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1257,1259],{"_path":189,"title":188,"description":1258},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1260},"给你两个版本号 version1 和 version2 ，请你比较它们。",1717731140222]