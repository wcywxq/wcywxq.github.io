[{"data":1,"prerenderedAt":1133},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":460,"/algorithm/leetcode/major/find-peak-element-surround":1128},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":186,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":185,"description":464,"url":465,"body":466,"_type":1123,"_id":1124,"_source":1125,"_file":1126,"_extension":1127},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":467,"children":468,"toc":1117},"root",[469,476,481,486,491,496,535,540,580,585,605,611,616,622,1111],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":470,"tag":471,"props":487,"children":488},{},[489],{"type":475,"value":490},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":470,"tag":471,"props":492,"children":493},{},[494],{"type":475,"value":495},"示例 1：",{"type":470,"tag":497,"props":498,"children":501},"pre",{"className":499,"code":500,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[502],{"type":470,"tag":503,"props":504,"children":505},"code",{"__ignoreMap":463},[506,517,526],{"type":470,"tag":507,"props":508,"children":511},"span",{"class":509,"line":510},"line",1,[512],{"type":470,"tag":507,"props":513,"children":514},{},[515],{"type":475,"value":516},"输入：nums = [1,2,3,1]\n",{"type":470,"tag":507,"props":518,"children":520},{"class":509,"line":519},2,[521],{"type":470,"tag":507,"props":522,"children":523},{},[524],{"type":475,"value":525},"输出：2\n",{"type":470,"tag":507,"props":527,"children":529},{"class":509,"line":528},3,[530],{"type":470,"tag":507,"props":531,"children":532},{},[533],{"type":475,"value":534},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":470,"tag":471,"props":536,"children":537},{},[538],{"type":475,"value":539},"示例 2：",{"type":470,"tag":497,"props":541,"children":543},{"className":499,"code":542,"language":475,"meta":463,"style":463},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[544],{"type":470,"tag":503,"props":545,"children":546},{"__ignoreMap":463},[547,555,563,571],{"type":470,"tag":507,"props":548,"children":549},{"class":509,"line":510},[550],{"type":470,"tag":507,"props":551,"children":552},{},[553],{"type":475,"value":554},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":470,"tag":507,"props":556,"children":557},{"class":509,"line":519},[558],{"type":470,"tag":507,"props":559,"children":560},{},[561],{"type":475,"value":562},"输出：1 或 5\n",{"type":470,"tag":507,"props":564,"children":565},{"class":509,"line":528},[566],{"type":470,"tag":507,"props":567,"children":568},{},[569],{"type":475,"value":570},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":470,"tag":507,"props":572,"children":574},{"class":509,"line":573},4,[575],{"type":470,"tag":507,"props":576,"children":577},{},[578],{"type":475,"value":579},"或者返回索引 5， 其峰值元素为 6。\n",{"type":470,"tag":471,"props":581,"children":582},{},[583],{"type":475,"value":584},"提示：",{"type":470,"tag":586,"props":587,"children":588},"ul",{},[589,595,600],{"type":470,"tag":590,"props":591,"children":592},"li",{},[593],{"type":475,"value":594},"1 \u003C= nums.length \u003C= 1000",{"type":470,"tag":590,"props":596,"children":597},{},[598],{"type":475,"value":599},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":470,"tag":590,"props":601,"children":602},{},[603],{"type":475,"value":604},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":470,"tag":606,"props":607,"children":609},"h2",{"id":608},"解题思路",[610],{"type":475,"value":608},{"type":470,"tag":606,"props":612,"children":614},{"id":613},"实现",[615],{"type":475,"value":613},{"type":470,"tag":617,"props":618,"children":620},"h3",{"id":619},"二分查找",[621],{"type":475,"value":619},{"type":470,"tag":497,"props":623,"children":627},{"className":624,"code":625,"language":626,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[628],{"type":470,"tag":503,"props":629,"children":630},{"__ignoreMap":463},[631,640,666,683,691,735,744,753,789,836,877,929,991,1018,1037,1063,1072,1081,1098],{"type":470,"tag":507,"props":632,"children":633},{"class":509,"line":510},[634],{"type":470,"tag":507,"props":635,"children":637},{"style":636},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[638],{"type":475,"value":639},"/**\n",{"type":470,"tag":507,"props":641,"children":642},{"class":509,"line":519},[643,648,654,660],{"type":470,"tag":507,"props":644,"children":645},{"style":636},[646],{"type":475,"value":647}," * ",{"type":470,"tag":507,"props":649,"children":651},{"style":650},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[652],{"type":475,"value":653},"@param",{"type":470,"tag":507,"props":655,"children":657},{"style":656},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[658],{"type":475,"value":659}," {number[]}",{"type":470,"tag":507,"props":661,"children":663},{"style":662},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[664],{"type":475,"value":665}," nums\n",{"type":470,"tag":507,"props":667,"children":668},{"class":509,"line":528},[669,673,678],{"type":470,"tag":507,"props":670,"children":671},{"style":636},[672],{"type":475,"value":647},{"type":470,"tag":507,"props":674,"children":675},{"style":650},[676],{"type":475,"value":677},"@return",{"type":470,"tag":507,"props":679,"children":680},{"style":656},[681],{"type":475,"value":682}," {number}\n",{"type":470,"tag":507,"props":684,"children":685},{"class":509,"line":573},[686],{"type":470,"tag":507,"props":687,"children":688},{"style":636},[689],{"type":475,"value":690}," */\n",{"type":470,"tag":507,"props":692,"children":694},{"class":509,"line":693},5,[695,701,707,713,718,724,730],{"type":470,"tag":507,"props":696,"children":698},{"style":697},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[699],{"type":475,"value":700},"var",{"type":470,"tag":507,"props":702,"children":704},{"style":703},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[705],{"type":475,"value":706}," findPeakElement",{"type":470,"tag":507,"props":708,"children":710},{"style":709},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[711],{"type":475,"value":712}," =",{"type":470,"tag":507,"props":714,"children":715},{"style":697},[716],{"type":475,"value":717}," function",{"type":470,"tag":507,"props":719,"children":721},{"style":720},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[722],{"type":475,"value":723}," (",{"type":470,"tag":507,"props":725,"children":727},{"style":726},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[728],{"type":475,"value":729},"nums",{"type":470,"tag":507,"props":731,"children":732},{"style":720},[733],{"type":475,"value":734},") {\n",{"type":470,"tag":507,"props":736,"children":738},{"class":509,"line":737},6,[739],{"type":470,"tag":507,"props":740,"children":741},{"style":636},[742],{"type":475,"value":743},"  // [0, n - 2]\n",{"type":470,"tag":507,"props":745,"children":747},{"class":509,"line":746},7,[748],{"type":470,"tag":507,"props":749,"children":750},{"style":636},[751],{"type":475,"value":752},"  // (-1, n - 1) 开区间写法\n",{"type":470,"tag":507,"props":754,"children":756},{"class":509,"line":755},8,[757,762,768,772,777,783],{"type":470,"tag":507,"props":758,"children":759},{"style":697},[760],{"type":475,"value":761},"  let",{"type":470,"tag":507,"props":763,"children":765},{"style":764},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[766],{"type":475,"value":767}," l",{"type":470,"tag":507,"props":769,"children":770},{"style":709},[771],{"type":475,"value":712},{"type":470,"tag":507,"props":773,"children":774},{"style":709},[775],{"type":475,"value":776}," -",{"type":470,"tag":507,"props":778,"children":780},{"style":779},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[781],{"type":475,"value":782},"1",{"type":470,"tag":507,"props":784,"children":786},{"style":785},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[787],{"type":475,"value":788},";\n",{"type":470,"tag":507,"props":790,"children":792},{"class":509,"line":791},9,[793,797,802,806,811,817,822,827,832],{"type":470,"tag":507,"props":794,"children":795},{"style":697},[796],{"type":475,"value":761},{"type":470,"tag":507,"props":798,"children":799},{"style":764},[800],{"type":475,"value":801}," r",{"type":470,"tag":507,"props":803,"children":804},{"style":709},[805],{"type":475,"value":712},{"type":470,"tag":507,"props":807,"children":808},{"style":764},[809],{"type":475,"value":810}," nums",{"type":470,"tag":507,"props":812,"children":814},{"style":813},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[815],{"type":475,"value":816},".",{"type":470,"tag":507,"props":818,"children":819},{"style":720},[820],{"type":475,"value":821},"length ",{"type":470,"tag":507,"props":823,"children":824},{"style":709},[825],{"type":475,"value":826},"-",{"type":470,"tag":507,"props":828,"children":829},{"style":779},[830],{"type":475,"value":831}," 1",{"type":470,"tag":507,"props":833,"children":834},{"style":785},[835],{"type":475,"value":788},{"type":470,"tag":507,"props":837,"children":839},{"class":509,"line":838},10,[840,846,850,855,860,864,869,873],{"type":470,"tag":507,"props":841,"children":843},{"style":842},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[844],{"type":475,"value":845},"  while",{"type":470,"tag":507,"props":847,"children":848},{"style":720},[849],{"type":475,"value":723},{"type":470,"tag":507,"props":851,"children":852},{"style":764},[853],{"type":475,"value":854},"l",{"type":470,"tag":507,"props":856,"children":857},{"style":709},[858],{"type":475,"value":859}," +",{"type":470,"tag":507,"props":861,"children":862},{"style":779},[863],{"type":475,"value":831},{"type":470,"tag":507,"props":865,"children":866},{"style":709},[867],{"type":475,"value":868}," \u003C",{"type":470,"tag":507,"props":870,"children":871},{"style":764},[872],{"type":475,"value":801},{"type":470,"tag":507,"props":874,"children":875},{"style":720},[876],{"type":475,"value":734},{"type":470,"tag":507,"props":878,"children":880},{"class":509,"line":879},11,[881,886,891,895,899,903,907,911,916,921,925],{"type":470,"tag":507,"props":882,"children":883},{"style":697},[884],{"type":475,"value":885},"    let",{"type":470,"tag":507,"props":887,"children":888},{"style":764},[889],{"type":475,"value":890}," mid",{"type":470,"tag":507,"props":892,"children":893},{"style":709},[894],{"type":475,"value":712},{"type":470,"tag":507,"props":896,"children":897},{"style":720},[898],{"type":475,"value":723},{"type":470,"tag":507,"props":900,"children":901},{"style":764},[902],{"type":475,"value":854},{"type":470,"tag":507,"props":904,"children":905},{"style":709},[906],{"type":475,"value":859},{"type":470,"tag":507,"props":908,"children":909},{"style":764},[910],{"type":475,"value":801},{"type":470,"tag":507,"props":912,"children":913},{"style":720},[914],{"type":475,"value":915},") ",{"type":470,"tag":507,"props":917,"children":918},{"style":709},[919],{"type":475,"value":920},">>",{"type":470,"tag":507,"props":922,"children":923},{"style":779},[924],{"type":475,"value":831},{"type":470,"tag":507,"props":926,"children":927},{"style":785},[928],{"type":475,"value":788},{"type":470,"tag":507,"props":930,"children":932},{"class":509,"line":931},12,[933,938,942,946,951,956,961,966,970,974,978,982,986],{"type":470,"tag":507,"props":934,"children":935},{"style":842},[936],{"type":475,"value":937},"    if",{"type":470,"tag":507,"props":939,"children":940},{"style":720},[941],{"type":475,"value":723},{"type":470,"tag":507,"props":943,"children":944},{"style":764},[945],{"type":475,"value":729},{"type":470,"tag":507,"props":947,"children":948},{"style":720},[949],{"type":475,"value":950},"[",{"type":470,"tag":507,"props":952,"children":953},{"style":764},[954],{"type":475,"value":955},"mid",{"type":470,"tag":507,"props":957,"children":958},{"style":720},[959],{"type":475,"value":960},"] ",{"type":470,"tag":507,"props":962,"children":963},{"style":709},[964],{"type":475,"value":965},">",{"type":470,"tag":507,"props":967,"children":968},{"style":764},[969],{"type":475,"value":810},{"type":470,"tag":507,"props":971,"children":972},{"style":720},[973],{"type":475,"value":950},{"type":470,"tag":507,"props":975,"children":976},{"style":764},[977],{"type":475,"value":955},{"type":470,"tag":507,"props":979,"children":980},{"style":709},[981],{"type":475,"value":859},{"type":470,"tag":507,"props":983,"children":984},{"style":779},[985],{"type":475,"value":831},{"type":470,"tag":507,"props":987,"children":988},{"style":720},[989],{"type":475,"value":990},"]) {\n",{"type":470,"tag":507,"props":992,"children":994},{"class":509,"line":993},13,[995,1000,1004,1008,1013],{"type":470,"tag":507,"props":996,"children":997},{"style":764},[998],{"type":475,"value":999},"      r",{"type":470,"tag":507,"props":1001,"children":1002},{"style":709},[1003],{"type":475,"value":712},{"type":470,"tag":507,"props":1005,"children":1006},{"style":764},[1007],{"type":475,"value":890},{"type":470,"tag":507,"props":1009,"children":1010},{"style":785},[1011],{"type":475,"value":1012},";",{"type":470,"tag":507,"props":1014,"children":1015},{"style":636},[1016],{"type":475,"value":1017}," // 染蓝色\n",{"type":470,"tag":507,"props":1019,"children":1021},{"class":509,"line":1020},14,[1022,1027,1032],{"type":470,"tag":507,"props":1023,"children":1024},{"style":720},[1025],{"type":475,"value":1026},"    } ",{"type":470,"tag":507,"props":1028,"children":1029},{"style":842},[1030],{"type":475,"value":1031},"else",{"type":470,"tag":507,"props":1033,"children":1034},{"style":720},[1035],{"type":475,"value":1036}," {\n",{"type":470,"tag":507,"props":1038,"children":1040},{"class":509,"line":1039},15,[1041,1046,1050,1054,1058],{"type":470,"tag":507,"props":1042,"children":1043},{"style":764},[1044],{"type":475,"value":1045},"      l",{"type":470,"tag":507,"props":1047,"children":1048},{"style":709},[1049],{"type":475,"value":712},{"type":470,"tag":507,"props":1051,"children":1052},{"style":764},[1053],{"type":475,"value":890},{"type":470,"tag":507,"props":1055,"children":1056},{"style":785},[1057],{"type":475,"value":1012},{"type":470,"tag":507,"props":1059,"children":1060},{"style":636},[1061],{"type":475,"value":1062}," // 染红色\n",{"type":470,"tag":507,"props":1064,"children":1066},{"class":509,"line":1065},16,[1067],{"type":470,"tag":507,"props":1068,"children":1069},{"style":720},[1070],{"type":475,"value":1071},"    }\n",{"type":470,"tag":507,"props":1073,"children":1075},{"class":509,"line":1074},17,[1076],{"type":470,"tag":507,"props":1077,"children":1078},{"style":720},[1079],{"type":475,"value":1080},"  }\n",{"type":470,"tag":507,"props":1082,"children":1084},{"class":509,"line":1083},18,[1085,1090,1094],{"type":470,"tag":507,"props":1086,"children":1087},{"style":842},[1088],{"type":475,"value":1089},"  return",{"type":470,"tag":507,"props":1091,"children":1092},{"style":764},[1093],{"type":475,"value":801},{"type":470,"tag":507,"props":1095,"children":1096},{"style":785},[1097],{"type":475,"value":788},{"type":470,"tag":507,"props":1099,"children":1101},{"class":509,"line":1100},19,[1102,1107],{"type":470,"tag":507,"props":1103,"children":1104},{"style":720},[1105],{"type":475,"value":1106},"}",{"type":470,"tag":507,"props":1108,"children":1109},{"style":785},[1110],{"type":475,"value":788},{"type":470,"tag":1112,"props":1113,"children":1114},"style",{},[1115],{"type":475,"value":1116},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":693,"depth":693,"links":1118},[1119,1120],{"id":608,"depth":519,"text":608},{"id":613,"depth":519,"text":613,"children":1121},[1122],{"id":619,"depth":528,"text":619},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1129,1131],{"_path":183,"title":182,"description":1130},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":189,"title":188,"description":1132},"给你两个版本号 version1 和 version2 ，请你比较它们。",1713626054389]