[{"data":1,"prerenderedAt":1251},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":549,"/algorithm/leetcode/major/find-peak-element-surround":1246},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":191,"description":553,"url":554,"body":555,"_type":1241,"_id":1242,"_source":1243,"_file":1244,"_extension":1245},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":556,"children":557,"toc":1235},"root",[558,565,570,575,580,585,624,629,669,674,694,700,705,711,1229],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":559,"tag":560,"props":576,"children":577},{},[578],{"type":564,"value":579},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":559,"tag":560,"props":581,"children":582},{},[583],{"type":564,"value":584},"示例 1：",{"type":559,"tag":586,"props":587,"children":590},"pre",{"className":588,"code":589,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[591],{"type":559,"tag":592,"props":593,"children":594},"code",{"__ignoreMap":552},[595,606,615],{"type":559,"tag":596,"props":597,"children":600},"span",{"class":598,"line":599},"line",1,[601],{"type":559,"tag":596,"props":602,"children":603},{},[604],{"type":564,"value":605},"输入：nums = [1,2,3,1]\n",{"type":559,"tag":596,"props":607,"children":609},{"class":598,"line":608},2,[610],{"type":559,"tag":596,"props":611,"children":612},{},[613],{"type":564,"value":614},"输出：2\n",{"type":559,"tag":596,"props":616,"children":618},{"class":598,"line":617},3,[619],{"type":559,"tag":596,"props":620,"children":621},{},[622],{"type":564,"value":623},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":559,"tag":560,"props":625,"children":626},{},[627],{"type":564,"value":628},"示例 2：",{"type":559,"tag":586,"props":630,"children":632},{"className":588,"code":631,"language":564,"meta":552,"style":552},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[633],{"type":559,"tag":592,"props":634,"children":635},{"__ignoreMap":552},[636,644,652,660],{"type":559,"tag":596,"props":637,"children":638},{"class":598,"line":599},[639],{"type":559,"tag":596,"props":640,"children":641},{},[642],{"type":564,"value":643},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":559,"tag":596,"props":645,"children":646},{"class":598,"line":608},[647],{"type":559,"tag":596,"props":648,"children":649},{},[650],{"type":564,"value":651},"输出：1 或 5\n",{"type":559,"tag":596,"props":653,"children":654},{"class":598,"line":617},[655],{"type":559,"tag":596,"props":656,"children":657},{},[658],{"type":564,"value":659},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":559,"tag":596,"props":661,"children":663},{"class":598,"line":662},4,[664],{"type":559,"tag":596,"props":665,"children":666},{},[667],{"type":564,"value":668},"或者返回索引 5， 其峰值元素为 6。\n",{"type":559,"tag":560,"props":670,"children":671},{},[672],{"type":564,"value":673},"提示：",{"type":559,"tag":675,"props":676,"children":677},"ul",{},[678,684,689],{"type":559,"tag":679,"props":680,"children":681},"li",{},[682],{"type":564,"value":683},"1 \u003C= nums.length \u003C= 1000",{"type":559,"tag":679,"props":685,"children":686},{},[687],{"type":564,"value":688},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":559,"tag":679,"props":690,"children":691},{},[692],{"type":564,"value":693},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":559,"tag":695,"props":696,"children":698},"h2",{"id":697},"解题思路",[699],{"type":564,"value":697},{"type":559,"tag":695,"props":701,"children":703},{"id":702},"实现",[704],{"type":564,"value":702},{"type":559,"tag":706,"props":707,"children":709},"h3",{"id":708},"二分查找",[710],{"type":564,"value":708},{"type":559,"tag":586,"props":712,"children":716},{"className":713,"code":714,"language":715,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[717],{"type":559,"tag":592,"props":718,"children":719},{"__ignoreMap":552},[720,729,771,801,809,855,864,873,907,953,997,1048,1114,1141,1159,1185,1194,1203,1220],{"type":559,"tag":596,"props":721,"children":722},{"class":598,"line":599},[723],{"type":559,"tag":596,"props":724,"children":726},{"style":725},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[727],{"type":564,"value":728},"/**\n",{"type":559,"tag":596,"props":730,"children":731},{"class":598,"line":608},[732,737,743,749,754,760,765],{"type":559,"tag":596,"props":733,"children":734},{"style":725},[735],{"type":564,"value":736}," * ",{"type":559,"tag":596,"props":738,"children":740},{"style":739},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[741],{"type":564,"value":742},"@",{"type":559,"tag":596,"props":744,"children":746},{"style":745},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[747],{"type":564,"value":748},"param",{"type":559,"tag":596,"props":750,"children":751},{"style":739},[752],{"type":564,"value":753}," {",{"type":559,"tag":596,"props":755,"children":757},{"style":756},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[758],{"type":564,"value":759},"number[]",{"type":559,"tag":596,"props":761,"children":762},{"style":739},[763],{"type":564,"value":764},"}",{"type":559,"tag":596,"props":766,"children":768},{"style":767},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[769],{"type":564,"value":770}," nums\n",{"type":559,"tag":596,"props":772,"children":773},{"class":598,"line":617},[774,778,782,787,791,796],{"type":559,"tag":596,"props":775,"children":776},{"style":725},[777],{"type":564,"value":736},{"type":559,"tag":596,"props":779,"children":780},{"style":739},[781],{"type":564,"value":742},{"type":559,"tag":596,"props":783,"children":784},{"style":745},[785],{"type":564,"value":786},"return",{"type":559,"tag":596,"props":788,"children":789},{"style":739},[790],{"type":564,"value":753},{"type":559,"tag":596,"props":792,"children":793},{"style":756},[794],{"type":564,"value":795},"number",{"type":559,"tag":596,"props":797,"children":798},{"style":739},[799],{"type":564,"value":800},"}\n",{"type":559,"tag":596,"props":802,"children":803},{"class":598,"line":662},[804],{"type":559,"tag":596,"props":805,"children":806},{"style":725},[807],{"type":564,"value":808}," */\n",{"type":559,"tag":596,"props":810,"children":812},{"class":598,"line":811},5,[813,819,825,830,835,840,845,850],{"type":559,"tag":596,"props":814,"children":816},{"style":815},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[817],{"type":564,"value":818},"var",{"type":559,"tag":596,"props":820,"children":822},{"style":821},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[823],{"type":564,"value":824}," findPeakElement",{"type":559,"tag":596,"props":826,"children":827},{"style":739},[828],{"type":564,"value":829}," =",{"type":559,"tag":596,"props":831,"children":832},{"style":815},[833],{"type":564,"value":834}," function",{"type":559,"tag":596,"props":836,"children":837},{"style":739},[838],{"type":564,"value":839}," (",{"type":559,"tag":596,"props":841,"children":842},{"style":767},[843],{"type":564,"value":844},"nums",{"type":559,"tag":596,"props":846,"children":847},{"style":739},[848],{"type":564,"value":849},")",{"type":559,"tag":596,"props":851,"children":852},{"style":739},[853],{"type":564,"value":854}," {\n",{"type":559,"tag":596,"props":856,"children":858},{"class":598,"line":857},6,[859],{"type":559,"tag":596,"props":860,"children":861},{"style":725},[862],{"type":564,"value":863},"  // [0, n - 2]\n",{"type":559,"tag":596,"props":865,"children":867},{"class":598,"line":866},7,[868],{"type":559,"tag":596,"props":869,"children":870},{"style":725},[871],{"type":564,"value":872},"  // (-1, n - 1) 开区间写法\n",{"type":559,"tag":596,"props":874,"children":876},{"class":598,"line":875},8,[877,882,887,891,896,902],{"type":559,"tag":596,"props":878,"children":879},{"style":815},[880],{"type":564,"value":881},"  let",{"type":559,"tag":596,"props":883,"children":884},{"style":767},[885],{"type":564,"value":886}," l",{"type":559,"tag":596,"props":888,"children":889},{"style":739},[890],{"type":564,"value":829},{"type":559,"tag":596,"props":892,"children":893},{"style":815},[894],{"type":564,"value":895}," -",{"type":559,"tag":596,"props":897,"children":899},{"style":898},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[900],{"type":564,"value":901},"1",{"type":559,"tag":596,"props":903,"children":904},{"style":739},[905],{"type":564,"value":906},";\n",{"type":559,"tag":596,"props":908,"children":910},{"class":598,"line":909},9,[911,915,920,924,929,934,940,944,949],{"type":559,"tag":596,"props":912,"children":913},{"style":815},[914],{"type":564,"value":881},{"type":559,"tag":596,"props":916,"children":917},{"style":767},[918],{"type":564,"value":919}," r",{"type":559,"tag":596,"props":921,"children":922},{"style":739},[923],{"type":564,"value":829},{"type":559,"tag":596,"props":925,"children":926},{"style":767},[927],{"type":564,"value":928}," nums",{"type":559,"tag":596,"props":930,"children":931},{"style":739},[932],{"type":564,"value":933},".",{"type":559,"tag":596,"props":935,"children":937},{"style":936},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[938],{"type":564,"value":939},"length",{"type":559,"tag":596,"props":941,"children":942},{"style":815},[943],{"type":564,"value":895},{"type":559,"tag":596,"props":945,"children":946},{"style":898},[947],{"type":564,"value":948}," 1",{"type":559,"tag":596,"props":950,"children":951},{"style":739},[952],{"type":564,"value":906},{"type":559,"tag":596,"props":954,"children":956},{"class":598,"line":955},10,[957,962,966,971,976,980,985,989,993],{"type":559,"tag":596,"props":958,"children":959},{"style":745},[960],{"type":564,"value":961},"  while",{"type":559,"tag":596,"props":963,"children":964},{"style":739},[965],{"type":564,"value":839},{"type":559,"tag":596,"props":967,"children":968},{"style":767},[969],{"type":564,"value":970},"l",{"type":559,"tag":596,"props":972,"children":973},{"style":815},[974],{"type":564,"value":975}," +",{"type":559,"tag":596,"props":977,"children":978},{"style":898},[979],{"type":564,"value":948},{"type":559,"tag":596,"props":981,"children":982},{"style":739},[983],{"type":564,"value":984}," \u003C",{"type":559,"tag":596,"props":986,"children":987},{"style":767},[988],{"type":564,"value":919},{"type":559,"tag":596,"props":990,"children":991},{"style":739},[992],{"type":564,"value":849},{"type":559,"tag":596,"props":994,"children":995},{"style":739},[996],{"type":564,"value":854},{"type":559,"tag":596,"props":998,"children":1000},{"class":598,"line":999},11,[1001,1006,1011,1015,1019,1023,1027,1031,1035,1040,1044],{"type":559,"tag":596,"props":1002,"children":1003},{"style":815},[1004],{"type":564,"value":1005},"    let",{"type":559,"tag":596,"props":1007,"children":1008},{"style":767},[1009],{"type":564,"value":1010}," mid",{"type":559,"tag":596,"props":1012,"children":1013},{"style":739},[1014],{"type":564,"value":829},{"type":559,"tag":596,"props":1016,"children":1017},{"style":739},[1018],{"type":564,"value":839},{"type":559,"tag":596,"props":1020,"children":1021},{"style":767},[1022],{"type":564,"value":970},{"type":559,"tag":596,"props":1024,"children":1025},{"style":815},[1026],{"type":564,"value":975},{"type":559,"tag":596,"props":1028,"children":1029},{"style":767},[1030],{"type":564,"value":919},{"type":559,"tag":596,"props":1032,"children":1033},{"style":739},[1034],{"type":564,"value":849},{"type":559,"tag":596,"props":1036,"children":1037},{"style":815},[1038],{"type":564,"value":1039}," >>",{"type":559,"tag":596,"props":1041,"children":1042},{"style":898},[1043],{"type":564,"value":948},{"type":559,"tag":596,"props":1045,"children":1046},{"style":739},[1047],{"type":564,"value":906},{"type":559,"tag":596,"props":1049,"children":1051},{"class":598,"line":1050},12,[1052,1057,1061,1065,1070,1075,1080,1085,1089,1093,1097,1101,1105,1110],{"type":559,"tag":596,"props":1053,"children":1054},{"style":745},[1055],{"type":564,"value":1056},"    if",{"type":559,"tag":596,"props":1058,"children":1059},{"style":739},[1060],{"type":564,"value":839},{"type":559,"tag":596,"props":1062,"children":1063},{"style":767},[1064],{"type":564,"value":844},{"type":559,"tag":596,"props":1066,"children":1067},{"style":739},[1068],{"type":564,"value":1069},"[",{"type":559,"tag":596,"props":1071,"children":1072},{"style":767},[1073],{"type":564,"value":1074},"mid",{"type":559,"tag":596,"props":1076,"children":1077},{"style":739},[1078],{"type":564,"value":1079},"]",{"type":559,"tag":596,"props":1081,"children":1082},{"style":739},[1083],{"type":564,"value":1084}," >",{"type":559,"tag":596,"props":1086,"children":1087},{"style":767},[1088],{"type":564,"value":928},{"type":559,"tag":596,"props":1090,"children":1091},{"style":739},[1092],{"type":564,"value":1069},{"type":559,"tag":596,"props":1094,"children":1095},{"style":767},[1096],{"type":564,"value":1074},{"type":559,"tag":596,"props":1098,"children":1099},{"style":815},[1100],{"type":564,"value":975},{"type":559,"tag":596,"props":1102,"children":1103},{"style":898},[1104],{"type":564,"value":948},{"type":559,"tag":596,"props":1106,"children":1107},{"style":739},[1108],{"type":564,"value":1109},"])",{"type":559,"tag":596,"props":1111,"children":1112},{"style":739},[1113],{"type":564,"value":854},{"type":559,"tag":596,"props":1115,"children":1117},{"class":598,"line":1116},13,[1118,1123,1127,1131,1136],{"type":559,"tag":596,"props":1119,"children":1120},{"style":767},[1121],{"type":564,"value":1122},"      r",{"type":559,"tag":596,"props":1124,"children":1125},{"style":739},[1126],{"type":564,"value":829},{"type":559,"tag":596,"props":1128,"children":1129},{"style":767},[1130],{"type":564,"value":1010},{"type":559,"tag":596,"props":1132,"children":1133},{"style":739},[1134],{"type":564,"value":1135},";",{"type":559,"tag":596,"props":1137,"children":1138},{"style":725},[1139],{"type":564,"value":1140}," // 染蓝色\n",{"type":559,"tag":596,"props":1142,"children":1144},{"class":598,"line":1143},14,[1145,1150,1155],{"type":559,"tag":596,"props":1146,"children":1147},{"style":739},[1148],{"type":564,"value":1149},"    }",{"type":559,"tag":596,"props":1151,"children":1152},{"style":745},[1153],{"type":564,"value":1154}," else",{"type":559,"tag":596,"props":1156,"children":1157},{"style":739},[1158],{"type":564,"value":854},{"type":559,"tag":596,"props":1160,"children":1162},{"class":598,"line":1161},15,[1163,1168,1172,1176,1180],{"type":559,"tag":596,"props":1164,"children":1165},{"style":767},[1166],{"type":564,"value":1167},"      l",{"type":559,"tag":596,"props":1169,"children":1170},{"style":739},[1171],{"type":564,"value":829},{"type":559,"tag":596,"props":1173,"children":1174},{"style":767},[1175],{"type":564,"value":1010},{"type":559,"tag":596,"props":1177,"children":1178},{"style":739},[1179],{"type":564,"value":1135},{"type":559,"tag":596,"props":1181,"children":1182},{"style":725},[1183],{"type":564,"value":1184}," // 染红色\n",{"type":559,"tag":596,"props":1186,"children":1188},{"class":598,"line":1187},16,[1189],{"type":559,"tag":596,"props":1190,"children":1191},{"style":739},[1192],{"type":564,"value":1193},"    }\n",{"type":559,"tag":596,"props":1195,"children":1197},{"class":598,"line":1196},17,[1198],{"type":559,"tag":596,"props":1199,"children":1200},{"style":739},[1201],{"type":564,"value":1202},"  }\n",{"type":559,"tag":596,"props":1204,"children":1206},{"class":598,"line":1205},18,[1207,1212,1216],{"type":559,"tag":596,"props":1208,"children":1209},{"style":745},[1210],{"type":564,"value":1211},"  return",{"type":559,"tag":596,"props":1213,"children":1214},{"style":767},[1215],{"type":564,"value":919},{"type":559,"tag":596,"props":1217,"children":1218},{"style":739},[1219],{"type":564,"value":906},{"type":559,"tag":596,"props":1221,"children":1223},{"class":598,"line":1222},19,[1224],{"type":559,"tag":596,"props":1225,"children":1226},{"style":739},[1227],{"type":564,"value":1228},"};\n",{"type":559,"tag":1230,"props":1231,"children":1232},"style",{},[1233],{"type":564,"value":1234},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":811,"depth":811,"links":1236},[1237,1238],{"id":697,"depth":608,"text":697},{"id":702,"depth":608,"text":702,"children":1239},[1240],{"id":708,"depth":617,"text":708},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1247,1249],{"_path":189,"title":188,"description":1248},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1250},"给你两个版本号 version1 和 version2 ，请你比较它们。",1715008126037]