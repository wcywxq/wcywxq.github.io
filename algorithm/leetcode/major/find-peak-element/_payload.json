[{"data":1,"prerenderedAt":1245},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":543,"/algorithm/leetcode/major/find-peak-element-surround":1240},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":191,"description":547,"url":548,"body":549,"_type":1235,"_id":1236,"_source":1237,"_file":1238,"_extension":1239},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":550,"children":551,"toc":1229},"root",[552,559,564,569,574,579,618,623,663,668,688,694,699,705,1223],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":553,"tag":554,"props":570,"children":571},{},[572],{"type":558,"value":573},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":553,"tag":554,"props":575,"children":576},{},[577],{"type":558,"value":578},"示例 1：",{"type":553,"tag":580,"props":581,"children":584},"pre",{"className":582,"code":583,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[585],{"type":553,"tag":586,"props":587,"children":588},"code",{"__ignoreMap":546},[589,600,609],{"type":553,"tag":590,"props":591,"children":594},"span",{"class":592,"line":593},"line",1,[595],{"type":553,"tag":590,"props":596,"children":597},{},[598],{"type":558,"value":599},"输入：nums = [1,2,3,1]\n",{"type":553,"tag":590,"props":601,"children":603},{"class":592,"line":602},2,[604],{"type":553,"tag":590,"props":605,"children":606},{},[607],{"type":558,"value":608},"输出：2\n",{"type":553,"tag":590,"props":610,"children":612},{"class":592,"line":611},3,[613],{"type":553,"tag":590,"props":614,"children":615},{},[616],{"type":558,"value":617},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":553,"tag":554,"props":619,"children":620},{},[621],{"type":558,"value":622},"示例 2：",{"type":553,"tag":580,"props":624,"children":626},{"className":582,"code":625,"language":558,"meta":546,"style":546},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[627],{"type":553,"tag":586,"props":628,"children":629},{"__ignoreMap":546},[630,638,646,654],{"type":553,"tag":590,"props":631,"children":632},{"class":592,"line":593},[633],{"type":553,"tag":590,"props":634,"children":635},{},[636],{"type":558,"value":637},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":553,"tag":590,"props":639,"children":640},{"class":592,"line":602},[641],{"type":553,"tag":590,"props":642,"children":643},{},[644],{"type":558,"value":645},"输出：1 或 5\n",{"type":553,"tag":590,"props":647,"children":648},{"class":592,"line":611},[649],{"type":553,"tag":590,"props":650,"children":651},{},[652],{"type":558,"value":653},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":553,"tag":590,"props":655,"children":657},{"class":592,"line":656},4,[658],{"type":553,"tag":590,"props":659,"children":660},{},[661],{"type":558,"value":662},"或者返回索引 5， 其峰值元素为 6。\n",{"type":553,"tag":554,"props":664,"children":665},{},[666],{"type":558,"value":667},"提示：",{"type":553,"tag":669,"props":670,"children":671},"ul",{},[672,678,683],{"type":553,"tag":673,"props":674,"children":675},"li",{},[676],{"type":558,"value":677},"1 \u003C= nums.length \u003C= 1000",{"type":553,"tag":673,"props":679,"children":680},{},[681],{"type":558,"value":682},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":553,"tag":673,"props":684,"children":685},{},[686],{"type":558,"value":687},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":553,"tag":689,"props":690,"children":692},"h2",{"id":691},"解题思路",[693],{"type":558,"value":691},{"type":553,"tag":689,"props":695,"children":697},{"id":696},"实现",[698],{"type":558,"value":696},{"type":553,"tag":700,"props":701,"children":703},"h3",{"id":702},"二分查找",[704],{"type":558,"value":702},{"type":553,"tag":580,"props":706,"children":710},{"className":707,"code":708,"language":709,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[711],{"type":553,"tag":586,"props":712,"children":713},{"__ignoreMap":546},[714,723,765,795,803,849,858,867,901,947,991,1042,1108,1135,1153,1179,1188,1197,1214],{"type":553,"tag":590,"props":715,"children":716},{"class":592,"line":593},[717],{"type":553,"tag":590,"props":718,"children":720},{"style":719},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[721],{"type":558,"value":722},"/**\n",{"type":553,"tag":590,"props":724,"children":725},{"class":592,"line":602},[726,731,737,743,748,754,759],{"type":553,"tag":590,"props":727,"children":728},{"style":719},[729],{"type":558,"value":730}," * ",{"type":553,"tag":590,"props":732,"children":734},{"style":733},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[735],{"type":558,"value":736},"@",{"type":553,"tag":590,"props":738,"children":740},{"style":739},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[741],{"type":558,"value":742},"param",{"type":553,"tag":590,"props":744,"children":745},{"style":733},[746],{"type":558,"value":747}," {",{"type":553,"tag":590,"props":749,"children":751},{"style":750},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[752],{"type":558,"value":753},"number[]",{"type":553,"tag":590,"props":755,"children":756},{"style":733},[757],{"type":558,"value":758},"}",{"type":553,"tag":590,"props":760,"children":762},{"style":761},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[763],{"type":558,"value":764}," nums\n",{"type":553,"tag":590,"props":766,"children":767},{"class":592,"line":611},[768,772,776,781,785,790],{"type":553,"tag":590,"props":769,"children":770},{"style":719},[771],{"type":558,"value":730},{"type":553,"tag":590,"props":773,"children":774},{"style":733},[775],{"type":558,"value":736},{"type":553,"tag":590,"props":777,"children":778},{"style":739},[779],{"type":558,"value":780},"return",{"type":553,"tag":590,"props":782,"children":783},{"style":733},[784],{"type":558,"value":747},{"type":553,"tag":590,"props":786,"children":787},{"style":750},[788],{"type":558,"value":789},"number",{"type":553,"tag":590,"props":791,"children":792},{"style":733},[793],{"type":558,"value":794},"}\n",{"type":553,"tag":590,"props":796,"children":797},{"class":592,"line":656},[798],{"type":553,"tag":590,"props":799,"children":800},{"style":719},[801],{"type":558,"value":802}," */\n",{"type":553,"tag":590,"props":804,"children":806},{"class":592,"line":805},5,[807,813,819,824,829,834,839,844],{"type":553,"tag":590,"props":808,"children":810},{"style":809},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[811],{"type":558,"value":812},"var",{"type":553,"tag":590,"props":814,"children":816},{"style":815},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[817],{"type":558,"value":818}," findPeakElement",{"type":553,"tag":590,"props":820,"children":821},{"style":733},[822],{"type":558,"value":823}," =",{"type":553,"tag":590,"props":825,"children":826},{"style":809},[827],{"type":558,"value":828}," function",{"type":553,"tag":590,"props":830,"children":831},{"style":733},[832],{"type":558,"value":833}," (",{"type":553,"tag":590,"props":835,"children":836},{"style":761},[837],{"type":558,"value":838},"nums",{"type":553,"tag":590,"props":840,"children":841},{"style":733},[842],{"type":558,"value":843},")",{"type":553,"tag":590,"props":845,"children":846},{"style":733},[847],{"type":558,"value":848}," {\n",{"type":553,"tag":590,"props":850,"children":852},{"class":592,"line":851},6,[853],{"type":553,"tag":590,"props":854,"children":855},{"style":719},[856],{"type":558,"value":857},"  // [0, n - 2]\n",{"type":553,"tag":590,"props":859,"children":861},{"class":592,"line":860},7,[862],{"type":553,"tag":590,"props":863,"children":864},{"style":719},[865],{"type":558,"value":866},"  // (-1, n - 1) 开区间写法\n",{"type":553,"tag":590,"props":868,"children":870},{"class":592,"line":869},8,[871,876,881,885,890,896],{"type":553,"tag":590,"props":872,"children":873},{"style":809},[874],{"type":558,"value":875},"  let",{"type":553,"tag":590,"props":877,"children":878},{"style":761},[879],{"type":558,"value":880}," l",{"type":553,"tag":590,"props":882,"children":883},{"style":733},[884],{"type":558,"value":823},{"type":553,"tag":590,"props":886,"children":887},{"style":809},[888],{"type":558,"value":889}," -",{"type":553,"tag":590,"props":891,"children":893},{"style":892},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[894],{"type":558,"value":895},"1",{"type":553,"tag":590,"props":897,"children":898},{"style":733},[899],{"type":558,"value":900},";\n",{"type":553,"tag":590,"props":902,"children":904},{"class":592,"line":903},9,[905,909,914,918,923,928,934,938,943],{"type":553,"tag":590,"props":906,"children":907},{"style":809},[908],{"type":558,"value":875},{"type":553,"tag":590,"props":910,"children":911},{"style":761},[912],{"type":558,"value":913}," r",{"type":553,"tag":590,"props":915,"children":916},{"style":733},[917],{"type":558,"value":823},{"type":553,"tag":590,"props":919,"children":920},{"style":761},[921],{"type":558,"value":922}," nums",{"type":553,"tag":590,"props":924,"children":925},{"style":733},[926],{"type":558,"value":927},".",{"type":553,"tag":590,"props":929,"children":931},{"style":930},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[932],{"type":558,"value":933},"length",{"type":553,"tag":590,"props":935,"children":936},{"style":809},[937],{"type":558,"value":889},{"type":553,"tag":590,"props":939,"children":940},{"style":892},[941],{"type":558,"value":942}," 1",{"type":553,"tag":590,"props":944,"children":945},{"style":733},[946],{"type":558,"value":900},{"type":553,"tag":590,"props":948,"children":950},{"class":592,"line":949},10,[951,956,960,965,970,974,979,983,987],{"type":553,"tag":590,"props":952,"children":953},{"style":739},[954],{"type":558,"value":955},"  while",{"type":553,"tag":590,"props":957,"children":958},{"style":733},[959],{"type":558,"value":833},{"type":553,"tag":590,"props":961,"children":962},{"style":761},[963],{"type":558,"value":964},"l",{"type":553,"tag":590,"props":966,"children":967},{"style":809},[968],{"type":558,"value":969}," +",{"type":553,"tag":590,"props":971,"children":972},{"style":892},[973],{"type":558,"value":942},{"type":553,"tag":590,"props":975,"children":976},{"style":733},[977],{"type":558,"value":978}," \u003C",{"type":553,"tag":590,"props":980,"children":981},{"style":761},[982],{"type":558,"value":913},{"type":553,"tag":590,"props":984,"children":985},{"style":733},[986],{"type":558,"value":843},{"type":553,"tag":590,"props":988,"children":989},{"style":733},[990],{"type":558,"value":848},{"type":553,"tag":590,"props":992,"children":994},{"class":592,"line":993},11,[995,1000,1005,1009,1013,1017,1021,1025,1029,1034,1038],{"type":553,"tag":590,"props":996,"children":997},{"style":809},[998],{"type":558,"value":999},"    let",{"type":553,"tag":590,"props":1001,"children":1002},{"style":761},[1003],{"type":558,"value":1004}," mid",{"type":553,"tag":590,"props":1006,"children":1007},{"style":733},[1008],{"type":558,"value":823},{"type":553,"tag":590,"props":1010,"children":1011},{"style":733},[1012],{"type":558,"value":833},{"type":553,"tag":590,"props":1014,"children":1015},{"style":761},[1016],{"type":558,"value":964},{"type":553,"tag":590,"props":1018,"children":1019},{"style":809},[1020],{"type":558,"value":969},{"type":553,"tag":590,"props":1022,"children":1023},{"style":761},[1024],{"type":558,"value":913},{"type":553,"tag":590,"props":1026,"children":1027},{"style":733},[1028],{"type":558,"value":843},{"type":553,"tag":590,"props":1030,"children":1031},{"style":809},[1032],{"type":558,"value":1033}," >>",{"type":553,"tag":590,"props":1035,"children":1036},{"style":892},[1037],{"type":558,"value":942},{"type":553,"tag":590,"props":1039,"children":1040},{"style":733},[1041],{"type":558,"value":900},{"type":553,"tag":590,"props":1043,"children":1045},{"class":592,"line":1044},12,[1046,1051,1055,1059,1064,1069,1074,1079,1083,1087,1091,1095,1099,1104],{"type":553,"tag":590,"props":1047,"children":1048},{"style":739},[1049],{"type":558,"value":1050},"    if",{"type":553,"tag":590,"props":1052,"children":1053},{"style":733},[1054],{"type":558,"value":833},{"type":553,"tag":590,"props":1056,"children":1057},{"style":761},[1058],{"type":558,"value":838},{"type":553,"tag":590,"props":1060,"children":1061},{"style":733},[1062],{"type":558,"value":1063},"[",{"type":553,"tag":590,"props":1065,"children":1066},{"style":761},[1067],{"type":558,"value":1068},"mid",{"type":553,"tag":590,"props":1070,"children":1071},{"style":733},[1072],{"type":558,"value":1073},"]",{"type":553,"tag":590,"props":1075,"children":1076},{"style":733},[1077],{"type":558,"value":1078}," >",{"type":553,"tag":590,"props":1080,"children":1081},{"style":761},[1082],{"type":558,"value":922},{"type":553,"tag":590,"props":1084,"children":1085},{"style":733},[1086],{"type":558,"value":1063},{"type":553,"tag":590,"props":1088,"children":1089},{"style":761},[1090],{"type":558,"value":1068},{"type":553,"tag":590,"props":1092,"children":1093},{"style":809},[1094],{"type":558,"value":969},{"type":553,"tag":590,"props":1096,"children":1097},{"style":892},[1098],{"type":558,"value":942},{"type":553,"tag":590,"props":1100,"children":1101},{"style":733},[1102],{"type":558,"value":1103},"])",{"type":553,"tag":590,"props":1105,"children":1106},{"style":733},[1107],{"type":558,"value":848},{"type":553,"tag":590,"props":1109,"children":1111},{"class":592,"line":1110},13,[1112,1117,1121,1125,1130],{"type":553,"tag":590,"props":1113,"children":1114},{"style":761},[1115],{"type":558,"value":1116},"      r",{"type":553,"tag":590,"props":1118,"children":1119},{"style":733},[1120],{"type":558,"value":823},{"type":553,"tag":590,"props":1122,"children":1123},{"style":761},[1124],{"type":558,"value":1004},{"type":553,"tag":590,"props":1126,"children":1127},{"style":733},[1128],{"type":558,"value":1129},";",{"type":553,"tag":590,"props":1131,"children":1132},{"style":719},[1133],{"type":558,"value":1134}," // 染蓝色\n",{"type":553,"tag":590,"props":1136,"children":1138},{"class":592,"line":1137},14,[1139,1144,1149],{"type":553,"tag":590,"props":1140,"children":1141},{"style":733},[1142],{"type":558,"value":1143},"    }",{"type":553,"tag":590,"props":1145,"children":1146},{"style":739},[1147],{"type":558,"value":1148}," else",{"type":553,"tag":590,"props":1150,"children":1151},{"style":733},[1152],{"type":558,"value":848},{"type":553,"tag":590,"props":1154,"children":1156},{"class":592,"line":1155},15,[1157,1162,1166,1170,1174],{"type":553,"tag":590,"props":1158,"children":1159},{"style":761},[1160],{"type":558,"value":1161},"      l",{"type":553,"tag":590,"props":1163,"children":1164},{"style":733},[1165],{"type":558,"value":823},{"type":553,"tag":590,"props":1167,"children":1168},{"style":761},[1169],{"type":558,"value":1004},{"type":553,"tag":590,"props":1171,"children":1172},{"style":733},[1173],{"type":558,"value":1129},{"type":553,"tag":590,"props":1175,"children":1176},{"style":719},[1177],{"type":558,"value":1178}," // 染红色\n",{"type":553,"tag":590,"props":1180,"children":1182},{"class":592,"line":1181},16,[1183],{"type":553,"tag":590,"props":1184,"children":1185},{"style":733},[1186],{"type":558,"value":1187},"    }\n",{"type":553,"tag":590,"props":1189,"children":1191},{"class":592,"line":1190},17,[1192],{"type":553,"tag":590,"props":1193,"children":1194},{"style":733},[1195],{"type":558,"value":1196},"  }\n",{"type":553,"tag":590,"props":1198,"children":1200},{"class":592,"line":1199},18,[1201,1206,1210],{"type":553,"tag":590,"props":1202,"children":1203},{"style":739},[1204],{"type":558,"value":1205},"  return",{"type":553,"tag":590,"props":1207,"children":1208},{"style":761},[1209],{"type":558,"value":913},{"type":553,"tag":590,"props":1211,"children":1212},{"style":733},[1213],{"type":558,"value":900},{"type":553,"tag":590,"props":1215,"children":1217},{"class":592,"line":1216},19,[1218],{"type":553,"tag":590,"props":1219,"children":1220},{"style":733},[1221],{"type":558,"value":1222},"};\n",{"type":553,"tag":1224,"props":1225,"children":1226},"style",{},[1227],{"type":558,"value":1228},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":805,"depth":805,"links":1230},[1231,1232],{"id":691,"depth":602,"text":691},{"id":696,"depth":602,"text":696,"children":1233},[1234],{"id":702,"depth":611,"text":702},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1241,1243],{"_path":189,"title":188,"description":1242},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1244},"给你两个版本号 version1 和 version2 ，请你比较它们。",1714099679106]