[{"data":1,"prerenderedAt":1242},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":540,"/algorithm/leetcode/major/find-peak-element-surround":1237},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":191,"description":544,"url":545,"body":546,"_type":1232,"_id":1233,"_source":1234,"_file":1235,"_extension":1236},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":547,"children":548,"toc":1226},"root",[549,556,561,566,571,576,615,620,660,665,685,691,696,702,1220],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":550,"tag":551,"props":567,"children":568},{},[569],{"type":555,"value":570},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":550,"tag":551,"props":572,"children":573},{},[574],{"type":555,"value":575},"示例 1：",{"type":550,"tag":577,"props":578,"children":581},"pre",{"className":579,"code":580,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[582],{"type":550,"tag":583,"props":584,"children":585},"code",{"__ignoreMap":543},[586,597,606],{"type":550,"tag":587,"props":588,"children":591},"span",{"class":589,"line":590},"line",1,[592],{"type":550,"tag":587,"props":593,"children":594},{},[595],{"type":555,"value":596},"输入：nums = [1,2,3,1]\n",{"type":550,"tag":587,"props":598,"children":600},{"class":589,"line":599},2,[601],{"type":550,"tag":587,"props":602,"children":603},{},[604],{"type":555,"value":605},"输出：2\n",{"type":550,"tag":587,"props":607,"children":609},{"class":589,"line":608},3,[610],{"type":550,"tag":587,"props":611,"children":612},{},[613],{"type":555,"value":614},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":550,"tag":551,"props":616,"children":617},{},[618],{"type":555,"value":619},"示例 2：",{"type":550,"tag":577,"props":621,"children":623},{"className":579,"code":622,"language":555,"meta":543,"style":543},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[624],{"type":550,"tag":583,"props":625,"children":626},{"__ignoreMap":543},[627,635,643,651],{"type":550,"tag":587,"props":628,"children":629},{"class":589,"line":590},[630],{"type":550,"tag":587,"props":631,"children":632},{},[633],{"type":555,"value":634},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":550,"tag":587,"props":636,"children":637},{"class":589,"line":599},[638],{"type":550,"tag":587,"props":639,"children":640},{},[641],{"type":555,"value":642},"输出：1 或 5\n",{"type":550,"tag":587,"props":644,"children":645},{"class":589,"line":608},[646],{"type":550,"tag":587,"props":647,"children":648},{},[649],{"type":555,"value":650},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":550,"tag":587,"props":652,"children":654},{"class":589,"line":653},4,[655],{"type":550,"tag":587,"props":656,"children":657},{},[658],{"type":555,"value":659},"或者返回索引 5， 其峰值元素为 6。\n",{"type":550,"tag":551,"props":661,"children":662},{},[663],{"type":555,"value":664},"提示：",{"type":550,"tag":666,"props":667,"children":668},"ul",{},[669,675,680],{"type":550,"tag":670,"props":671,"children":672},"li",{},[673],{"type":555,"value":674},"1 \u003C= nums.length \u003C= 1000",{"type":550,"tag":670,"props":676,"children":677},{},[678],{"type":555,"value":679},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":550,"tag":670,"props":681,"children":682},{},[683],{"type":555,"value":684},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":550,"tag":686,"props":687,"children":689},"h2",{"id":688},"解题思路",[690],{"type":555,"value":688},{"type":550,"tag":686,"props":692,"children":694},{"id":693},"实现",[695],{"type":555,"value":693},{"type":550,"tag":697,"props":698,"children":700},"h3",{"id":699},"二分查找",[701],{"type":555,"value":699},{"type":550,"tag":577,"props":703,"children":707},{"className":704,"code":705,"language":706,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[708],{"type":550,"tag":583,"props":709,"children":710},{"__ignoreMap":543},[711,720,762,792,800,846,855,864,898,944,988,1039,1105,1132,1150,1176,1185,1194,1211],{"type":550,"tag":587,"props":712,"children":713},{"class":589,"line":590},[714],{"type":550,"tag":587,"props":715,"children":717},{"style":716},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[718],{"type":555,"value":719},"/**\n",{"type":550,"tag":587,"props":721,"children":722},{"class":589,"line":599},[723,728,734,740,745,751,756],{"type":550,"tag":587,"props":724,"children":725},{"style":716},[726],{"type":555,"value":727}," * ",{"type":550,"tag":587,"props":729,"children":731},{"style":730},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[732],{"type":555,"value":733},"@",{"type":550,"tag":587,"props":735,"children":737},{"style":736},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[738],{"type":555,"value":739},"param",{"type":550,"tag":587,"props":741,"children":742},{"style":730},[743],{"type":555,"value":744}," {",{"type":550,"tag":587,"props":746,"children":748},{"style":747},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[749],{"type":555,"value":750},"number[]",{"type":550,"tag":587,"props":752,"children":753},{"style":730},[754],{"type":555,"value":755},"}",{"type":550,"tag":587,"props":757,"children":759},{"style":758},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[760],{"type":555,"value":761}," nums\n",{"type":550,"tag":587,"props":763,"children":764},{"class":589,"line":608},[765,769,773,778,782,787],{"type":550,"tag":587,"props":766,"children":767},{"style":716},[768],{"type":555,"value":727},{"type":550,"tag":587,"props":770,"children":771},{"style":730},[772],{"type":555,"value":733},{"type":550,"tag":587,"props":774,"children":775},{"style":736},[776],{"type":555,"value":777},"return",{"type":550,"tag":587,"props":779,"children":780},{"style":730},[781],{"type":555,"value":744},{"type":550,"tag":587,"props":783,"children":784},{"style":747},[785],{"type":555,"value":786},"number",{"type":550,"tag":587,"props":788,"children":789},{"style":730},[790],{"type":555,"value":791},"}\n",{"type":550,"tag":587,"props":793,"children":794},{"class":589,"line":653},[795],{"type":550,"tag":587,"props":796,"children":797},{"style":716},[798],{"type":555,"value":799}," */\n",{"type":550,"tag":587,"props":801,"children":803},{"class":589,"line":802},5,[804,810,816,821,826,831,836,841],{"type":550,"tag":587,"props":805,"children":807},{"style":806},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[808],{"type":555,"value":809},"var",{"type":550,"tag":587,"props":811,"children":813},{"style":812},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[814],{"type":555,"value":815}," findPeakElement",{"type":550,"tag":587,"props":817,"children":818},{"style":730},[819],{"type":555,"value":820}," =",{"type":550,"tag":587,"props":822,"children":823},{"style":806},[824],{"type":555,"value":825}," function",{"type":550,"tag":587,"props":827,"children":828},{"style":730},[829],{"type":555,"value":830}," (",{"type":550,"tag":587,"props":832,"children":833},{"style":758},[834],{"type":555,"value":835},"nums",{"type":550,"tag":587,"props":837,"children":838},{"style":730},[839],{"type":555,"value":840},")",{"type":550,"tag":587,"props":842,"children":843},{"style":730},[844],{"type":555,"value":845}," {\n",{"type":550,"tag":587,"props":847,"children":849},{"class":589,"line":848},6,[850],{"type":550,"tag":587,"props":851,"children":852},{"style":716},[853],{"type":555,"value":854},"  // [0, n - 2]\n",{"type":550,"tag":587,"props":856,"children":858},{"class":589,"line":857},7,[859],{"type":550,"tag":587,"props":860,"children":861},{"style":716},[862],{"type":555,"value":863},"  // (-1, n - 1) 开区间写法\n",{"type":550,"tag":587,"props":865,"children":867},{"class":589,"line":866},8,[868,873,878,882,887,893],{"type":550,"tag":587,"props":869,"children":870},{"style":806},[871],{"type":555,"value":872},"  let",{"type":550,"tag":587,"props":874,"children":875},{"style":758},[876],{"type":555,"value":877}," l",{"type":550,"tag":587,"props":879,"children":880},{"style":730},[881],{"type":555,"value":820},{"type":550,"tag":587,"props":883,"children":884},{"style":806},[885],{"type":555,"value":886}," -",{"type":550,"tag":587,"props":888,"children":890},{"style":889},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[891],{"type":555,"value":892},"1",{"type":550,"tag":587,"props":894,"children":895},{"style":730},[896],{"type":555,"value":897},";\n",{"type":550,"tag":587,"props":899,"children":901},{"class":589,"line":900},9,[902,906,911,915,920,925,931,935,940],{"type":550,"tag":587,"props":903,"children":904},{"style":806},[905],{"type":555,"value":872},{"type":550,"tag":587,"props":907,"children":908},{"style":758},[909],{"type":555,"value":910}," r",{"type":550,"tag":587,"props":912,"children":913},{"style":730},[914],{"type":555,"value":820},{"type":550,"tag":587,"props":916,"children":917},{"style":758},[918],{"type":555,"value":919}," nums",{"type":550,"tag":587,"props":921,"children":922},{"style":730},[923],{"type":555,"value":924},".",{"type":550,"tag":587,"props":926,"children":928},{"style":927},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[929],{"type":555,"value":930},"length",{"type":550,"tag":587,"props":932,"children":933},{"style":806},[934],{"type":555,"value":886},{"type":550,"tag":587,"props":936,"children":937},{"style":889},[938],{"type":555,"value":939}," 1",{"type":550,"tag":587,"props":941,"children":942},{"style":730},[943],{"type":555,"value":897},{"type":550,"tag":587,"props":945,"children":947},{"class":589,"line":946},10,[948,953,957,962,967,971,976,980,984],{"type":550,"tag":587,"props":949,"children":950},{"style":736},[951],{"type":555,"value":952},"  while",{"type":550,"tag":587,"props":954,"children":955},{"style":730},[956],{"type":555,"value":830},{"type":550,"tag":587,"props":958,"children":959},{"style":758},[960],{"type":555,"value":961},"l",{"type":550,"tag":587,"props":963,"children":964},{"style":806},[965],{"type":555,"value":966}," +",{"type":550,"tag":587,"props":968,"children":969},{"style":889},[970],{"type":555,"value":939},{"type":550,"tag":587,"props":972,"children":973},{"style":730},[974],{"type":555,"value":975}," \u003C",{"type":550,"tag":587,"props":977,"children":978},{"style":758},[979],{"type":555,"value":910},{"type":550,"tag":587,"props":981,"children":982},{"style":730},[983],{"type":555,"value":840},{"type":550,"tag":587,"props":985,"children":986},{"style":730},[987],{"type":555,"value":845},{"type":550,"tag":587,"props":989,"children":991},{"class":589,"line":990},11,[992,997,1002,1006,1010,1014,1018,1022,1026,1031,1035],{"type":550,"tag":587,"props":993,"children":994},{"style":806},[995],{"type":555,"value":996},"    let",{"type":550,"tag":587,"props":998,"children":999},{"style":758},[1000],{"type":555,"value":1001}," mid",{"type":550,"tag":587,"props":1003,"children":1004},{"style":730},[1005],{"type":555,"value":820},{"type":550,"tag":587,"props":1007,"children":1008},{"style":730},[1009],{"type":555,"value":830},{"type":550,"tag":587,"props":1011,"children":1012},{"style":758},[1013],{"type":555,"value":961},{"type":550,"tag":587,"props":1015,"children":1016},{"style":806},[1017],{"type":555,"value":966},{"type":550,"tag":587,"props":1019,"children":1020},{"style":758},[1021],{"type":555,"value":910},{"type":550,"tag":587,"props":1023,"children":1024},{"style":730},[1025],{"type":555,"value":840},{"type":550,"tag":587,"props":1027,"children":1028},{"style":806},[1029],{"type":555,"value":1030}," >>",{"type":550,"tag":587,"props":1032,"children":1033},{"style":889},[1034],{"type":555,"value":939},{"type":550,"tag":587,"props":1036,"children":1037},{"style":730},[1038],{"type":555,"value":897},{"type":550,"tag":587,"props":1040,"children":1042},{"class":589,"line":1041},12,[1043,1048,1052,1056,1061,1066,1071,1076,1080,1084,1088,1092,1096,1101],{"type":550,"tag":587,"props":1044,"children":1045},{"style":736},[1046],{"type":555,"value":1047},"    if",{"type":550,"tag":587,"props":1049,"children":1050},{"style":730},[1051],{"type":555,"value":830},{"type":550,"tag":587,"props":1053,"children":1054},{"style":758},[1055],{"type":555,"value":835},{"type":550,"tag":587,"props":1057,"children":1058},{"style":730},[1059],{"type":555,"value":1060},"[",{"type":550,"tag":587,"props":1062,"children":1063},{"style":758},[1064],{"type":555,"value":1065},"mid",{"type":550,"tag":587,"props":1067,"children":1068},{"style":730},[1069],{"type":555,"value":1070},"]",{"type":550,"tag":587,"props":1072,"children":1073},{"style":730},[1074],{"type":555,"value":1075}," >",{"type":550,"tag":587,"props":1077,"children":1078},{"style":758},[1079],{"type":555,"value":919},{"type":550,"tag":587,"props":1081,"children":1082},{"style":730},[1083],{"type":555,"value":1060},{"type":550,"tag":587,"props":1085,"children":1086},{"style":758},[1087],{"type":555,"value":1065},{"type":550,"tag":587,"props":1089,"children":1090},{"style":806},[1091],{"type":555,"value":966},{"type":550,"tag":587,"props":1093,"children":1094},{"style":889},[1095],{"type":555,"value":939},{"type":550,"tag":587,"props":1097,"children":1098},{"style":730},[1099],{"type":555,"value":1100},"])",{"type":550,"tag":587,"props":1102,"children":1103},{"style":730},[1104],{"type":555,"value":845},{"type":550,"tag":587,"props":1106,"children":1108},{"class":589,"line":1107},13,[1109,1114,1118,1122,1127],{"type":550,"tag":587,"props":1110,"children":1111},{"style":758},[1112],{"type":555,"value":1113},"      r",{"type":550,"tag":587,"props":1115,"children":1116},{"style":730},[1117],{"type":555,"value":820},{"type":550,"tag":587,"props":1119,"children":1120},{"style":758},[1121],{"type":555,"value":1001},{"type":550,"tag":587,"props":1123,"children":1124},{"style":730},[1125],{"type":555,"value":1126},";",{"type":550,"tag":587,"props":1128,"children":1129},{"style":716},[1130],{"type":555,"value":1131}," // 染蓝色\n",{"type":550,"tag":587,"props":1133,"children":1135},{"class":589,"line":1134},14,[1136,1141,1146],{"type":550,"tag":587,"props":1137,"children":1138},{"style":730},[1139],{"type":555,"value":1140},"    }",{"type":550,"tag":587,"props":1142,"children":1143},{"style":736},[1144],{"type":555,"value":1145}," else",{"type":550,"tag":587,"props":1147,"children":1148},{"style":730},[1149],{"type":555,"value":845},{"type":550,"tag":587,"props":1151,"children":1153},{"class":589,"line":1152},15,[1154,1159,1163,1167,1171],{"type":550,"tag":587,"props":1155,"children":1156},{"style":758},[1157],{"type":555,"value":1158},"      l",{"type":550,"tag":587,"props":1160,"children":1161},{"style":730},[1162],{"type":555,"value":820},{"type":550,"tag":587,"props":1164,"children":1165},{"style":758},[1166],{"type":555,"value":1001},{"type":550,"tag":587,"props":1168,"children":1169},{"style":730},[1170],{"type":555,"value":1126},{"type":550,"tag":587,"props":1172,"children":1173},{"style":716},[1174],{"type":555,"value":1175}," // 染红色\n",{"type":550,"tag":587,"props":1177,"children":1179},{"class":589,"line":1178},16,[1180],{"type":550,"tag":587,"props":1181,"children":1182},{"style":730},[1183],{"type":555,"value":1184},"    }\n",{"type":550,"tag":587,"props":1186,"children":1188},{"class":589,"line":1187},17,[1189],{"type":550,"tag":587,"props":1190,"children":1191},{"style":730},[1192],{"type":555,"value":1193},"  }\n",{"type":550,"tag":587,"props":1195,"children":1197},{"class":589,"line":1196},18,[1198,1203,1207],{"type":550,"tag":587,"props":1199,"children":1200},{"style":736},[1201],{"type":555,"value":1202},"  return",{"type":550,"tag":587,"props":1204,"children":1205},{"style":758},[1206],{"type":555,"value":910},{"type":550,"tag":587,"props":1208,"children":1209},{"style":730},[1210],{"type":555,"value":897},{"type":550,"tag":587,"props":1212,"children":1214},{"class":589,"line":1213},19,[1215],{"type":550,"tag":587,"props":1216,"children":1217},{"style":730},[1218],{"type":555,"value":1219},"};\n",{"type":550,"tag":1221,"props":1222,"children":1223},"style",{},[1224],{"type":555,"value":1225},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":802,"depth":802,"links":1227},[1228,1229],{"id":688,"depth":599,"text":688},{"id":693,"depth":599,"text":693,"children":1230},[1231],{"id":699,"depth":608,"text":699},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1238,1240],{"_path":189,"title":188,"description":1239},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1241},"给你两个版本号 version1 和 version2 ，请你比较它们。",1714099276071]