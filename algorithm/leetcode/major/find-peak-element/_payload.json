[{"data":1,"prerenderedAt":1211},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":509,"/algorithm/leetcode/major/find-peak-element-surround":1206},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":191,"description":513,"url":514,"body":515,"_type":1201,"_id":1202,"_source":1203,"_file":1204,"_extension":1205},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":516,"children":517,"toc":1195},"root",[518,525,530,535,540,545,584,589,629,634,654,660,665,671,1189],{"type":519,"tag":520,"props":521,"children":522},"element","p",{},[523],{"type":524,"value":513},"text",{"type":519,"tag":520,"props":526,"children":527},{},[528],{"type":524,"value":529},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":519,"tag":520,"props":531,"children":532},{},[533],{"type":524,"value":534},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":519,"tag":520,"props":536,"children":537},{},[538],{"type":524,"value":539},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":519,"tag":520,"props":541,"children":542},{},[543],{"type":524,"value":544},"示例 1：",{"type":519,"tag":546,"props":547,"children":550},"pre",{"className":548,"code":549,"language":524,"meta":512,"style":512},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[551],{"type":519,"tag":552,"props":553,"children":554},"code",{"__ignoreMap":512},[555,566,575],{"type":519,"tag":556,"props":557,"children":560},"span",{"class":558,"line":559},"line",1,[561],{"type":519,"tag":556,"props":562,"children":563},{},[564],{"type":524,"value":565},"输入：nums = [1,2,3,1]\n",{"type":519,"tag":556,"props":567,"children":569},{"class":558,"line":568},2,[570],{"type":519,"tag":556,"props":571,"children":572},{},[573],{"type":524,"value":574},"输出：2\n",{"type":519,"tag":556,"props":576,"children":578},{"class":558,"line":577},3,[579],{"type":519,"tag":556,"props":580,"children":581},{},[582],{"type":524,"value":583},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":519,"tag":520,"props":585,"children":586},{},[587],{"type":524,"value":588},"示例 2：",{"type":519,"tag":546,"props":590,"children":592},{"className":548,"code":591,"language":524,"meta":512,"style":512},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[593],{"type":519,"tag":552,"props":594,"children":595},{"__ignoreMap":512},[596,604,612,620],{"type":519,"tag":556,"props":597,"children":598},{"class":558,"line":559},[599],{"type":519,"tag":556,"props":600,"children":601},{},[602],{"type":524,"value":603},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":519,"tag":556,"props":605,"children":606},{"class":558,"line":568},[607],{"type":519,"tag":556,"props":608,"children":609},{},[610],{"type":524,"value":611},"输出：1 或 5\n",{"type":519,"tag":556,"props":613,"children":614},{"class":558,"line":577},[615],{"type":519,"tag":556,"props":616,"children":617},{},[618],{"type":524,"value":619},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":519,"tag":556,"props":621,"children":623},{"class":558,"line":622},4,[624],{"type":519,"tag":556,"props":625,"children":626},{},[627],{"type":524,"value":628},"或者返回索引 5， 其峰值元素为 6。\n",{"type":519,"tag":520,"props":630,"children":631},{},[632],{"type":524,"value":633},"提示：",{"type":519,"tag":635,"props":636,"children":637},"ul",{},[638,644,649],{"type":519,"tag":639,"props":640,"children":641},"li",{},[642],{"type":524,"value":643},"1 \u003C= nums.length \u003C= 1000",{"type":519,"tag":639,"props":645,"children":646},{},[647],{"type":524,"value":648},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":519,"tag":639,"props":650,"children":651},{},[652],{"type":524,"value":653},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":519,"tag":655,"props":656,"children":658},"h2",{"id":657},"解题思路",[659],{"type":524,"value":657},{"type":519,"tag":655,"props":661,"children":663},{"id":662},"实现",[664],{"type":524,"value":662},{"type":519,"tag":666,"props":667,"children":669},"h3",{"id":668},"二分查找",[670],{"type":524,"value":668},{"type":519,"tag":546,"props":672,"children":676},{"className":673,"code":674,"language":675,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[677],{"type":519,"tag":552,"props":678,"children":679},{"__ignoreMap":512},[680,689,731,761,769,815,824,833,867,913,957,1008,1074,1101,1119,1145,1154,1163,1180],{"type":519,"tag":556,"props":681,"children":682},{"class":558,"line":559},[683],{"type":519,"tag":556,"props":684,"children":686},{"style":685},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[687],{"type":524,"value":688},"/**\n",{"type":519,"tag":556,"props":690,"children":691},{"class":558,"line":568},[692,697,703,709,714,720,725],{"type":519,"tag":556,"props":693,"children":694},{"style":685},[695],{"type":524,"value":696}," * ",{"type":519,"tag":556,"props":698,"children":700},{"style":699},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[701],{"type":524,"value":702},"@",{"type":519,"tag":556,"props":704,"children":706},{"style":705},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[707],{"type":524,"value":708},"param",{"type":519,"tag":556,"props":710,"children":711},{"style":699},[712],{"type":524,"value":713}," {",{"type":519,"tag":556,"props":715,"children":717},{"style":716},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[718],{"type":524,"value":719},"number[]",{"type":519,"tag":556,"props":721,"children":722},{"style":699},[723],{"type":524,"value":724},"}",{"type":519,"tag":556,"props":726,"children":728},{"style":727},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[729],{"type":524,"value":730}," nums\n",{"type":519,"tag":556,"props":732,"children":733},{"class":558,"line":577},[734,738,742,747,751,756],{"type":519,"tag":556,"props":735,"children":736},{"style":685},[737],{"type":524,"value":696},{"type":519,"tag":556,"props":739,"children":740},{"style":699},[741],{"type":524,"value":702},{"type":519,"tag":556,"props":743,"children":744},{"style":705},[745],{"type":524,"value":746},"return",{"type":519,"tag":556,"props":748,"children":749},{"style":699},[750],{"type":524,"value":713},{"type":519,"tag":556,"props":752,"children":753},{"style":716},[754],{"type":524,"value":755},"number",{"type":519,"tag":556,"props":757,"children":758},{"style":699},[759],{"type":524,"value":760},"}\n",{"type":519,"tag":556,"props":762,"children":763},{"class":558,"line":622},[764],{"type":519,"tag":556,"props":765,"children":766},{"style":685},[767],{"type":524,"value":768}," */\n",{"type":519,"tag":556,"props":770,"children":772},{"class":558,"line":771},5,[773,779,785,790,795,800,805,810],{"type":519,"tag":556,"props":774,"children":776},{"style":775},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[777],{"type":524,"value":778},"var",{"type":519,"tag":556,"props":780,"children":782},{"style":781},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[783],{"type":524,"value":784}," findPeakElement",{"type":519,"tag":556,"props":786,"children":787},{"style":699},[788],{"type":524,"value":789}," =",{"type":519,"tag":556,"props":791,"children":792},{"style":775},[793],{"type":524,"value":794}," function",{"type":519,"tag":556,"props":796,"children":797},{"style":699},[798],{"type":524,"value":799}," (",{"type":519,"tag":556,"props":801,"children":802},{"style":727},[803],{"type":524,"value":804},"nums",{"type":519,"tag":556,"props":806,"children":807},{"style":699},[808],{"type":524,"value":809},")",{"type":519,"tag":556,"props":811,"children":812},{"style":699},[813],{"type":524,"value":814}," {\n",{"type":519,"tag":556,"props":816,"children":818},{"class":558,"line":817},6,[819],{"type":519,"tag":556,"props":820,"children":821},{"style":685},[822],{"type":524,"value":823},"  // [0, n - 2]\n",{"type":519,"tag":556,"props":825,"children":827},{"class":558,"line":826},7,[828],{"type":519,"tag":556,"props":829,"children":830},{"style":685},[831],{"type":524,"value":832},"  // (-1, n - 1) 开区间写法\n",{"type":519,"tag":556,"props":834,"children":836},{"class":558,"line":835},8,[837,842,847,851,856,862],{"type":519,"tag":556,"props":838,"children":839},{"style":775},[840],{"type":524,"value":841},"  let",{"type":519,"tag":556,"props":843,"children":844},{"style":727},[845],{"type":524,"value":846}," l",{"type":519,"tag":556,"props":848,"children":849},{"style":699},[850],{"type":524,"value":789},{"type":519,"tag":556,"props":852,"children":853},{"style":775},[854],{"type":524,"value":855}," -",{"type":519,"tag":556,"props":857,"children":859},{"style":858},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[860],{"type":524,"value":861},"1",{"type":519,"tag":556,"props":863,"children":864},{"style":699},[865],{"type":524,"value":866},";\n",{"type":519,"tag":556,"props":868,"children":870},{"class":558,"line":869},9,[871,875,880,884,889,894,900,904,909],{"type":519,"tag":556,"props":872,"children":873},{"style":775},[874],{"type":524,"value":841},{"type":519,"tag":556,"props":876,"children":877},{"style":727},[878],{"type":524,"value":879}," r",{"type":519,"tag":556,"props":881,"children":882},{"style":699},[883],{"type":524,"value":789},{"type":519,"tag":556,"props":885,"children":886},{"style":727},[887],{"type":524,"value":888}," nums",{"type":519,"tag":556,"props":890,"children":891},{"style":699},[892],{"type":524,"value":893},".",{"type":519,"tag":556,"props":895,"children":897},{"style":896},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[898],{"type":524,"value":899},"length",{"type":519,"tag":556,"props":901,"children":902},{"style":775},[903],{"type":524,"value":855},{"type":519,"tag":556,"props":905,"children":906},{"style":858},[907],{"type":524,"value":908}," 1",{"type":519,"tag":556,"props":910,"children":911},{"style":699},[912],{"type":524,"value":866},{"type":519,"tag":556,"props":914,"children":916},{"class":558,"line":915},10,[917,922,926,931,936,940,945,949,953],{"type":519,"tag":556,"props":918,"children":919},{"style":705},[920],{"type":524,"value":921},"  while",{"type":519,"tag":556,"props":923,"children":924},{"style":699},[925],{"type":524,"value":799},{"type":519,"tag":556,"props":927,"children":928},{"style":727},[929],{"type":524,"value":930},"l",{"type":519,"tag":556,"props":932,"children":933},{"style":775},[934],{"type":524,"value":935}," +",{"type":519,"tag":556,"props":937,"children":938},{"style":858},[939],{"type":524,"value":908},{"type":519,"tag":556,"props":941,"children":942},{"style":699},[943],{"type":524,"value":944}," \u003C",{"type":519,"tag":556,"props":946,"children":947},{"style":727},[948],{"type":524,"value":879},{"type":519,"tag":556,"props":950,"children":951},{"style":699},[952],{"type":524,"value":809},{"type":519,"tag":556,"props":954,"children":955},{"style":699},[956],{"type":524,"value":814},{"type":519,"tag":556,"props":958,"children":960},{"class":558,"line":959},11,[961,966,971,975,979,983,987,991,995,1000,1004],{"type":519,"tag":556,"props":962,"children":963},{"style":775},[964],{"type":524,"value":965},"    let",{"type":519,"tag":556,"props":967,"children":968},{"style":727},[969],{"type":524,"value":970}," mid",{"type":519,"tag":556,"props":972,"children":973},{"style":699},[974],{"type":524,"value":789},{"type":519,"tag":556,"props":976,"children":977},{"style":699},[978],{"type":524,"value":799},{"type":519,"tag":556,"props":980,"children":981},{"style":727},[982],{"type":524,"value":930},{"type":519,"tag":556,"props":984,"children":985},{"style":775},[986],{"type":524,"value":935},{"type":519,"tag":556,"props":988,"children":989},{"style":727},[990],{"type":524,"value":879},{"type":519,"tag":556,"props":992,"children":993},{"style":699},[994],{"type":524,"value":809},{"type":519,"tag":556,"props":996,"children":997},{"style":775},[998],{"type":524,"value":999}," >>",{"type":519,"tag":556,"props":1001,"children":1002},{"style":858},[1003],{"type":524,"value":908},{"type":519,"tag":556,"props":1005,"children":1006},{"style":699},[1007],{"type":524,"value":866},{"type":519,"tag":556,"props":1009,"children":1011},{"class":558,"line":1010},12,[1012,1017,1021,1025,1030,1035,1040,1045,1049,1053,1057,1061,1065,1070],{"type":519,"tag":556,"props":1013,"children":1014},{"style":705},[1015],{"type":524,"value":1016},"    if",{"type":519,"tag":556,"props":1018,"children":1019},{"style":699},[1020],{"type":524,"value":799},{"type":519,"tag":556,"props":1022,"children":1023},{"style":727},[1024],{"type":524,"value":804},{"type":519,"tag":556,"props":1026,"children":1027},{"style":699},[1028],{"type":524,"value":1029},"[",{"type":519,"tag":556,"props":1031,"children":1032},{"style":727},[1033],{"type":524,"value":1034},"mid",{"type":519,"tag":556,"props":1036,"children":1037},{"style":699},[1038],{"type":524,"value":1039},"]",{"type":519,"tag":556,"props":1041,"children":1042},{"style":699},[1043],{"type":524,"value":1044}," >",{"type":519,"tag":556,"props":1046,"children":1047},{"style":727},[1048],{"type":524,"value":888},{"type":519,"tag":556,"props":1050,"children":1051},{"style":699},[1052],{"type":524,"value":1029},{"type":519,"tag":556,"props":1054,"children":1055},{"style":727},[1056],{"type":524,"value":1034},{"type":519,"tag":556,"props":1058,"children":1059},{"style":775},[1060],{"type":524,"value":935},{"type":519,"tag":556,"props":1062,"children":1063},{"style":858},[1064],{"type":524,"value":908},{"type":519,"tag":556,"props":1066,"children":1067},{"style":699},[1068],{"type":524,"value":1069},"])",{"type":519,"tag":556,"props":1071,"children":1072},{"style":699},[1073],{"type":524,"value":814},{"type":519,"tag":556,"props":1075,"children":1077},{"class":558,"line":1076},13,[1078,1083,1087,1091,1096],{"type":519,"tag":556,"props":1079,"children":1080},{"style":727},[1081],{"type":524,"value":1082},"      r",{"type":519,"tag":556,"props":1084,"children":1085},{"style":699},[1086],{"type":524,"value":789},{"type":519,"tag":556,"props":1088,"children":1089},{"style":727},[1090],{"type":524,"value":970},{"type":519,"tag":556,"props":1092,"children":1093},{"style":699},[1094],{"type":524,"value":1095},";",{"type":519,"tag":556,"props":1097,"children":1098},{"style":685},[1099],{"type":524,"value":1100}," // 染蓝色\n",{"type":519,"tag":556,"props":1102,"children":1104},{"class":558,"line":1103},14,[1105,1110,1115],{"type":519,"tag":556,"props":1106,"children":1107},{"style":699},[1108],{"type":524,"value":1109},"    }",{"type":519,"tag":556,"props":1111,"children":1112},{"style":705},[1113],{"type":524,"value":1114}," else",{"type":519,"tag":556,"props":1116,"children":1117},{"style":699},[1118],{"type":524,"value":814},{"type":519,"tag":556,"props":1120,"children":1122},{"class":558,"line":1121},15,[1123,1128,1132,1136,1140],{"type":519,"tag":556,"props":1124,"children":1125},{"style":727},[1126],{"type":524,"value":1127},"      l",{"type":519,"tag":556,"props":1129,"children":1130},{"style":699},[1131],{"type":524,"value":789},{"type":519,"tag":556,"props":1133,"children":1134},{"style":727},[1135],{"type":524,"value":970},{"type":519,"tag":556,"props":1137,"children":1138},{"style":699},[1139],{"type":524,"value":1095},{"type":519,"tag":556,"props":1141,"children":1142},{"style":685},[1143],{"type":524,"value":1144}," // 染红色\n",{"type":519,"tag":556,"props":1146,"children":1148},{"class":558,"line":1147},16,[1149],{"type":519,"tag":556,"props":1150,"children":1151},{"style":699},[1152],{"type":524,"value":1153},"    }\n",{"type":519,"tag":556,"props":1155,"children":1157},{"class":558,"line":1156},17,[1158],{"type":519,"tag":556,"props":1159,"children":1160},{"style":699},[1161],{"type":524,"value":1162},"  }\n",{"type":519,"tag":556,"props":1164,"children":1166},{"class":558,"line":1165},18,[1167,1172,1176],{"type":519,"tag":556,"props":1168,"children":1169},{"style":705},[1170],{"type":524,"value":1171},"  return",{"type":519,"tag":556,"props":1173,"children":1174},{"style":727},[1175],{"type":524,"value":879},{"type":519,"tag":556,"props":1177,"children":1178},{"style":699},[1179],{"type":524,"value":866},{"type":519,"tag":556,"props":1181,"children":1183},{"class":558,"line":1182},19,[1184],{"type":519,"tag":556,"props":1185,"children":1186},{"style":699},[1187],{"type":524,"value":1188},"};\n",{"type":519,"tag":1190,"props":1191,"children":1192},"style",{},[1193],{"type":524,"value":1194},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":771,"depth":771,"links":1196},[1197,1198],{"id":657,"depth":568,"text":657},{"id":662,"depth":568,"text":662,"children":1199},[1200],{"id":668,"depth":577,"text":668},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1207,1209],{"_path":189,"title":188,"description":1208},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1210},"给你两个版本号 version1 和 version2 ，请你比较它们。",1714059005418]