[{"data":1,"prerenderedAt":1205},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":503,"/algorithm/leetcode/major/find-peak-element-surround":1200},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":192,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":191,"description":507,"url":508,"body":509,"_type":1195,"_id":1196,"_source":1197,"_file":1198,"_extension":1199},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":510,"children":511,"toc":1189},"root",[512,519,524,529,534,539,578,583,623,628,648,654,659,665,1183],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522],{"type":518,"value":523},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":513,"tag":514,"props":525,"children":526},{},[527],{"type":518,"value":528},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":513,"tag":514,"props":530,"children":531},{},[532],{"type":518,"value":533},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":513,"tag":514,"props":535,"children":536},{},[537],{"type":518,"value":538},"示例 1：",{"type":513,"tag":540,"props":541,"children":544},"pre",{"className":542,"code":543,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[545],{"type":513,"tag":546,"props":547,"children":548},"code",{"__ignoreMap":506},[549,560,569],{"type":513,"tag":550,"props":551,"children":554},"span",{"class":552,"line":553},"line",1,[555],{"type":513,"tag":550,"props":556,"children":557},{},[558],{"type":518,"value":559},"输入：nums = [1,2,3,1]\n",{"type":513,"tag":550,"props":561,"children":563},{"class":552,"line":562},2,[564],{"type":513,"tag":550,"props":565,"children":566},{},[567],{"type":518,"value":568},"输出：2\n",{"type":513,"tag":550,"props":570,"children":572},{"class":552,"line":571},3,[573],{"type":513,"tag":550,"props":574,"children":575},{},[576],{"type":518,"value":577},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":513,"tag":514,"props":579,"children":580},{},[581],{"type":518,"value":582},"示例 2：",{"type":513,"tag":540,"props":584,"children":586},{"className":542,"code":585,"language":518,"meta":506,"style":506},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[587],{"type":513,"tag":546,"props":588,"children":589},{"__ignoreMap":506},[590,598,606,614],{"type":513,"tag":550,"props":591,"children":592},{"class":552,"line":553},[593],{"type":513,"tag":550,"props":594,"children":595},{},[596],{"type":518,"value":597},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":513,"tag":550,"props":599,"children":600},{"class":552,"line":562},[601],{"type":513,"tag":550,"props":602,"children":603},{},[604],{"type":518,"value":605},"输出：1 或 5\n",{"type":513,"tag":550,"props":607,"children":608},{"class":552,"line":571},[609],{"type":513,"tag":550,"props":610,"children":611},{},[612],{"type":518,"value":613},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":513,"tag":550,"props":615,"children":617},{"class":552,"line":616},4,[618],{"type":513,"tag":550,"props":619,"children":620},{},[621],{"type":518,"value":622},"或者返回索引 5， 其峰值元素为 6。\n",{"type":513,"tag":514,"props":624,"children":625},{},[626],{"type":518,"value":627},"提示：",{"type":513,"tag":629,"props":630,"children":631},"ul",{},[632,638,643],{"type":513,"tag":633,"props":634,"children":635},"li",{},[636],{"type":518,"value":637},"1 \u003C= nums.length \u003C= 1000",{"type":513,"tag":633,"props":639,"children":640},{},[641],{"type":518,"value":642},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":513,"tag":633,"props":644,"children":645},{},[646],{"type":518,"value":647},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":513,"tag":649,"props":650,"children":652},"h2",{"id":651},"解题思路",[653],{"type":518,"value":651},{"type":513,"tag":649,"props":655,"children":657},{"id":656},"实现",[658],{"type":518,"value":656},{"type":513,"tag":660,"props":661,"children":663},"h3",{"id":662},"二分查找",[664],{"type":518,"value":662},{"type":513,"tag":540,"props":666,"children":670},{"className":667,"code":668,"language":669,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[671],{"type":513,"tag":546,"props":672,"children":673},{"__ignoreMap":506},[674,683,725,755,763,809,818,827,861,907,951,1002,1068,1095,1113,1139,1148,1157,1174],{"type":513,"tag":550,"props":675,"children":676},{"class":552,"line":553},[677],{"type":513,"tag":550,"props":678,"children":680},{"style":679},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[681],{"type":518,"value":682},"/**\n",{"type":513,"tag":550,"props":684,"children":685},{"class":552,"line":562},[686,691,697,703,708,714,719],{"type":513,"tag":550,"props":687,"children":688},{"style":679},[689],{"type":518,"value":690}," * ",{"type":513,"tag":550,"props":692,"children":694},{"style":693},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[695],{"type":518,"value":696},"@",{"type":513,"tag":550,"props":698,"children":700},{"style":699},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[701],{"type":518,"value":702},"param",{"type":513,"tag":550,"props":704,"children":705},{"style":693},[706],{"type":518,"value":707}," {",{"type":513,"tag":550,"props":709,"children":711},{"style":710},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[712],{"type":518,"value":713},"number[]",{"type":513,"tag":550,"props":715,"children":716},{"style":693},[717],{"type":518,"value":718},"}",{"type":513,"tag":550,"props":720,"children":722},{"style":721},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[723],{"type":518,"value":724}," nums\n",{"type":513,"tag":550,"props":726,"children":727},{"class":552,"line":571},[728,732,736,741,745,750],{"type":513,"tag":550,"props":729,"children":730},{"style":679},[731],{"type":518,"value":690},{"type":513,"tag":550,"props":733,"children":734},{"style":693},[735],{"type":518,"value":696},{"type":513,"tag":550,"props":737,"children":738},{"style":699},[739],{"type":518,"value":740},"return",{"type":513,"tag":550,"props":742,"children":743},{"style":693},[744],{"type":518,"value":707},{"type":513,"tag":550,"props":746,"children":747},{"style":710},[748],{"type":518,"value":749},"number",{"type":513,"tag":550,"props":751,"children":752},{"style":693},[753],{"type":518,"value":754},"}\n",{"type":513,"tag":550,"props":756,"children":757},{"class":552,"line":616},[758],{"type":513,"tag":550,"props":759,"children":760},{"style":679},[761],{"type":518,"value":762}," */\n",{"type":513,"tag":550,"props":764,"children":766},{"class":552,"line":765},5,[767,773,779,784,789,794,799,804],{"type":513,"tag":550,"props":768,"children":770},{"style":769},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[771],{"type":518,"value":772},"var",{"type":513,"tag":550,"props":774,"children":776},{"style":775},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[777],{"type":518,"value":778}," findPeakElement",{"type":513,"tag":550,"props":780,"children":781},{"style":693},[782],{"type":518,"value":783}," =",{"type":513,"tag":550,"props":785,"children":786},{"style":769},[787],{"type":518,"value":788}," function",{"type":513,"tag":550,"props":790,"children":791},{"style":693},[792],{"type":518,"value":793}," (",{"type":513,"tag":550,"props":795,"children":796},{"style":721},[797],{"type":518,"value":798},"nums",{"type":513,"tag":550,"props":800,"children":801},{"style":693},[802],{"type":518,"value":803},")",{"type":513,"tag":550,"props":805,"children":806},{"style":693},[807],{"type":518,"value":808}," {\n",{"type":513,"tag":550,"props":810,"children":812},{"class":552,"line":811},6,[813],{"type":513,"tag":550,"props":814,"children":815},{"style":679},[816],{"type":518,"value":817},"  // [0, n - 2]\n",{"type":513,"tag":550,"props":819,"children":821},{"class":552,"line":820},7,[822],{"type":513,"tag":550,"props":823,"children":824},{"style":679},[825],{"type":518,"value":826},"  // (-1, n - 1) 开区间写法\n",{"type":513,"tag":550,"props":828,"children":830},{"class":552,"line":829},8,[831,836,841,845,850,856],{"type":513,"tag":550,"props":832,"children":833},{"style":769},[834],{"type":518,"value":835},"  let",{"type":513,"tag":550,"props":837,"children":838},{"style":721},[839],{"type":518,"value":840}," l",{"type":513,"tag":550,"props":842,"children":843},{"style":693},[844],{"type":518,"value":783},{"type":513,"tag":550,"props":846,"children":847},{"style":769},[848],{"type":518,"value":849}," -",{"type":513,"tag":550,"props":851,"children":853},{"style":852},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[854],{"type":518,"value":855},"1",{"type":513,"tag":550,"props":857,"children":858},{"style":693},[859],{"type":518,"value":860},";\n",{"type":513,"tag":550,"props":862,"children":864},{"class":552,"line":863},9,[865,869,874,878,883,888,894,898,903],{"type":513,"tag":550,"props":866,"children":867},{"style":769},[868],{"type":518,"value":835},{"type":513,"tag":550,"props":870,"children":871},{"style":721},[872],{"type":518,"value":873}," r",{"type":513,"tag":550,"props":875,"children":876},{"style":693},[877],{"type":518,"value":783},{"type":513,"tag":550,"props":879,"children":880},{"style":721},[881],{"type":518,"value":882}," nums",{"type":513,"tag":550,"props":884,"children":885},{"style":693},[886],{"type":518,"value":887},".",{"type":513,"tag":550,"props":889,"children":891},{"style":890},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[892],{"type":518,"value":893},"length",{"type":513,"tag":550,"props":895,"children":896},{"style":769},[897],{"type":518,"value":849},{"type":513,"tag":550,"props":899,"children":900},{"style":852},[901],{"type":518,"value":902}," 1",{"type":513,"tag":550,"props":904,"children":905},{"style":693},[906],{"type":518,"value":860},{"type":513,"tag":550,"props":908,"children":910},{"class":552,"line":909},10,[911,916,920,925,930,934,939,943,947],{"type":513,"tag":550,"props":912,"children":913},{"style":699},[914],{"type":518,"value":915},"  while",{"type":513,"tag":550,"props":917,"children":918},{"style":693},[919],{"type":518,"value":793},{"type":513,"tag":550,"props":921,"children":922},{"style":721},[923],{"type":518,"value":924},"l",{"type":513,"tag":550,"props":926,"children":927},{"style":769},[928],{"type":518,"value":929}," +",{"type":513,"tag":550,"props":931,"children":932},{"style":852},[933],{"type":518,"value":902},{"type":513,"tag":550,"props":935,"children":936},{"style":693},[937],{"type":518,"value":938}," \u003C",{"type":513,"tag":550,"props":940,"children":941},{"style":721},[942],{"type":518,"value":873},{"type":513,"tag":550,"props":944,"children":945},{"style":693},[946],{"type":518,"value":803},{"type":513,"tag":550,"props":948,"children":949},{"style":693},[950],{"type":518,"value":808},{"type":513,"tag":550,"props":952,"children":954},{"class":552,"line":953},11,[955,960,965,969,973,977,981,985,989,994,998],{"type":513,"tag":550,"props":956,"children":957},{"style":769},[958],{"type":518,"value":959},"    let",{"type":513,"tag":550,"props":961,"children":962},{"style":721},[963],{"type":518,"value":964}," mid",{"type":513,"tag":550,"props":966,"children":967},{"style":693},[968],{"type":518,"value":783},{"type":513,"tag":550,"props":970,"children":971},{"style":693},[972],{"type":518,"value":793},{"type":513,"tag":550,"props":974,"children":975},{"style":721},[976],{"type":518,"value":924},{"type":513,"tag":550,"props":978,"children":979},{"style":769},[980],{"type":518,"value":929},{"type":513,"tag":550,"props":982,"children":983},{"style":721},[984],{"type":518,"value":873},{"type":513,"tag":550,"props":986,"children":987},{"style":693},[988],{"type":518,"value":803},{"type":513,"tag":550,"props":990,"children":991},{"style":769},[992],{"type":518,"value":993}," >>",{"type":513,"tag":550,"props":995,"children":996},{"style":852},[997],{"type":518,"value":902},{"type":513,"tag":550,"props":999,"children":1000},{"style":693},[1001],{"type":518,"value":860},{"type":513,"tag":550,"props":1003,"children":1005},{"class":552,"line":1004},12,[1006,1011,1015,1019,1024,1029,1034,1039,1043,1047,1051,1055,1059,1064],{"type":513,"tag":550,"props":1007,"children":1008},{"style":699},[1009],{"type":518,"value":1010},"    if",{"type":513,"tag":550,"props":1012,"children":1013},{"style":693},[1014],{"type":518,"value":793},{"type":513,"tag":550,"props":1016,"children":1017},{"style":721},[1018],{"type":518,"value":798},{"type":513,"tag":550,"props":1020,"children":1021},{"style":693},[1022],{"type":518,"value":1023},"[",{"type":513,"tag":550,"props":1025,"children":1026},{"style":721},[1027],{"type":518,"value":1028},"mid",{"type":513,"tag":550,"props":1030,"children":1031},{"style":693},[1032],{"type":518,"value":1033},"]",{"type":513,"tag":550,"props":1035,"children":1036},{"style":693},[1037],{"type":518,"value":1038}," >",{"type":513,"tag":550,"props":1040,"children":1041},{"style":721},[1042],{"type":518,"value":882},{"type":513,"tag":550,"props":1044,"children":1045},{"style":693},[1046],{"type":518,"value":1023},{"type":513,"tag":550,"props":1048,"children":1049},{"style":721},[1050],{"type":518,"value":1028},{"type":513,"tag":550,"props":1052,"children":1053},{"style":769},[1054],{"type":518,"value":929},{"type":513,"tag":550,"props":1056,"children":1057},{"style":852},[1058],{"type":518,"value":902},{"type":513,"tag":550,"props":1060,"children":1061},{"style":693},[1062],{"type":518,"value":1063},"])",{"type":513,"tag":550,"props":1065,"children":1066},{"style":693},[1067],{"type":518,"value":808},{"type":513,"tag":550,"props":1069,"children":1071},{"class":552,"line":1070},13,[1072,1077,1081,1085,1090],{"type":513,"tag":550,"props":1073,"children":1074},{"style":721},[1075],{"type":518,"value":1076},"      r",{"type":513,"tag":550,"props":1078,"children":1079},{"style":693},[1080],{"type":518,"value":783},{"type":513,"tag":550,"props":1082,"children":1083},{"style":721},[1084],{"type":518,"value":964},{"type":513,"tag":550,"props":1086,"children":1087},{"style":693},[1088],{"type":518,"value":1089},";",{"type":513,"tag":550,"props":1091,"children":1092},{"style":679},[1093],{"type":518,"value":1094}," // 染蓝色\n",{"type":513,"tag":550,"props":1096,"children":1098},{"class":552,"line":1097},14,[1099,1104,1109],{"type":513,"tag":550,"props":1100,"children":1101},{"style":693},[1102],{"type":518,"value":1103},"    }",{"type":513,"tag":550,"props":1105,"children":1106},{"style":699},[1107],{"type":518,"value":1108}," else",{"type":513,"tag":550,"props":1110,"children":1111},{"style":693},[1112],{"type":518,"value":808},{"type":513,"tag":550,"props":1114,"children":1116},{"class":552,"line":1115},15,[1117,1122,1126,1130,1134],{"type":513,"tag":550,"props":1118,"children":1119},{"style":721},[1120],{"type":518,"value":1121},"      l",{"type":513,"tag":550,"props":1123,"children":1124},{"style":693},[1125],{"type":518,"value":783},{"type":513,"tag":550,"props":1127,"children":1128},{"style":721},[1129],{"type":518,"value":964},{"type":513,"tag":550,"props":1131,"children":1132},{"style":693},[1133],{"type":518,"value":1089},{"type":513,"tag":550,"props":1135,"children":1136},{"style":679},[1137],{"type":518,"value":1138}," // 染红色\n",{"type":513,"tag":550,"props":1140,"children":1142},{"class":552,"line":1141},16,[1143],{"type":513,"tag":550,"props":1144,"children":1145},{"style":693},[1146],{"type":518,"value":1147},"    }\n",{"type":513,"tag":550,"props":1149,"children":1151},{"class":552,"line":1150},17,[1152],{"type":513,"tag":550,"props":1153,"children":1154},{"style":693},[1155],{"type":518,"value":1156},"  }\n",{"type":513,"tag":550,"props":1158,"children":1160},{"class":552,"line":1159},18,[1161,1166,1170],{"type":513,"tag":550,"props":1162,"children":1163},{"style":699},[1164],{"type":518,"value":1165},"  return",{"type":513,"tag":550,"props":1167,"children":1168},{"style":721},[1169],{"type":518,"value":873},{"type":513,"tag":550,"props":1171,"children":1172},{"style":693},[1173],{"type":518,"value":860},{"type":513,"tag":550,"props":1175,"children":1177},{"class":552,"line":1176},19,[1178],{"type":513,"tag":550,"props":1179,"children":1180},{"style":693},[1181],{"type":518,"value":1182},"};\n",{"type":513,"tag":1184,"props":1185,"children":1186},"style",{},[1187],{"type":518,"value":1188},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":765,"depth":765,"links":1190},[1191,1192],{"id":651,"depth":562,"text":651},{"id":656,"depth":562,"text":656,"children":1193},[1194],{"id":662,"depth":571,"text":662},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1201,1203],{"_path":189,"title":188,"description":1202},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":195,"title":194,"description":1204},"给你两个版本号 version1 和 version2 ，请你比较它们。",1714056095158]