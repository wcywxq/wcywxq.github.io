[{"data":1,"prerenderedAt":1130},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/find-peak-element":457,"/algorithm/leetcode/major/find-peak-element-surround":1125},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":183,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":182,"description":461,"url":462,"body":463,"_type":1120,"_id":1121,"_source":1122,"_file":1123,"_extension":1124},"major",false,"","峰值元素是指其值严格大于左右相邻值的元素。","https://leetcode.cn/problems/find-peak-element",{"type":464,"children":465,"toc":1114},"root",[466,473,478,483,488,493,532,537,577,582,602,608,613,619,1108],{"type":467,"tag":468,"props":469,"children":470},"element","p",{},[471],{"type":472,"value":461},"text",{"type":467,"tag":468,"props":474,"children":475},{},[476],{"type":472,"value":477},"给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。",{"type":467,"tag":468,"props":479,"children":480},{},[481],{"type":472,"value":482},"你可以假设 nums[-1] = nums[n] = -∞ 。",{"type":467,"tag":468,"props":484,"children":485},{},[486],{"type":472,"value":487},"你必须实现时间复杂度为 O(log n) 的算法来解决此问题。",{"type":467,"tag":468,"props":489,"children":490},{},[491],{"type":472,"value":492},"示例 1：",{"type":467,"tag":494,"props":495,"children":498},"pre",{"className":496,"code":497,"language":472,"meta":460,"style":460},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。\n",[499],{"type":467,"tag":500,"props":501,"children":502},"code",{"__ignoreMap":460},[503,514,523],{"type":467,"tag":504,"props":505,"children":508},"span",{"class":506,"line":507},"line",1,[509],{"type":467,"tag":504,"props":510,"children":511},{},[512],{"type":472,"value":513},"输入：nums = [1,2,3,1]\n",{"type":467,"tag":504,"props":515,"children":517},{"class":506,"line":516},2,[518],{"type":467,"tag":504,"props":519,"children":520},{},[521],{"type":472,"value":522},"输出：2\n",{"type":467,"tag":504,"props":524,"children":526},{"class":506,"line":525},3,[527],{"type":467,"tag":504,"props":528,"children":529},{},[530],{"type":472,"value":531},"解释：3 是峰值元素，你的函数应该返回其索引 2。\n",{"type":467,"tag":468,"props":533,"children":534},{},[535],{"type":472,"value":536},"示例 2：",{"type":467,"tag":494,"props":538,"children":540},{"className":496,"code":539,"language":472,"meta":460,"style":460},"输入：nums = [1,2,1,3,5,6,4]\n输出：1 或 5\n解释：你的函数可以返回索引 1，其峰值元素为 2；\n或者返回索引 5， 其峰值元素为 6。\n",[541],{"type":467,"tag":500,"props":542,"children":543},{"__ignoreMap":460},[544,552,560,568],{"type":467,"tag":504,"props":545,"children":546},{"class":506,"line":507},[547],{"type":467,"tag":504,"props":548,"children":549},{},[550],{"type":472,"value":551},"输入：nums = [1,2,1,3,5,6,4]\n",{"type":467,"tag":504,"props":553,"children":554},{"class":506,"line":516},[555],{"type":467,"tag":504,"props":556,"children":557},{},[558],{"type":472,"value":559},"输出：1 或 5\n",{"type":467,"tag":504,"props":561,"children":562},{"class":506,"line":525},[563],{"type":467,"tag":504,"props":564,"children":565},{},[566],{"type":472,"value":567},"解释：你的函数可以返回索引 1，其峰值元素为 2；\n",{"type":467,"tag":504,"props":569,"children":571},{"class":506,"line":570},4,[572],{"type":467,"tag":504,"props":573,"children":574},{},[575],{"type":472,"value":576},"或者返回索引 5， 其峰值元素为 6。\n",{"type":467,"tag":468,"props":578,"children":579},{},[580],{"type":472,"value":581},"提示：",{"type":467,"tag":583,"props":584,"children":585},"ul",{},[586,592,597],{"type":467,"tag":587,"props":588,"children":589},"li",{},[590],{"type":472,"value":591},"1 \u003C= nums.length \u003C= 1000",{"type":467,"tag":587,"props":593,"children":594},{},[595],{"type":472,"value":596},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":467,"tag":587,"props":598,"children":599},{},[600],{"type":472,"value":601},"对于所有有效的 i 都有 nums[i] != nums[i + 1]",{"type":467,"tag":603,"props":604,"children":606},"h2",{"id":605},"解题思路",[607],{"type":472,"value":605},{"type":467,"tag":603,"props":609,"children":611},{"id":610},"实现",[612],{"type":472,"value":610},{"type":467,"tag":614,"props":615,"children":617},"h3",{"id":616},"二分查找",[618],{"type":472,"value":616},{"type":467,"tag":494,"props":620,"children":624},{"className":621,"code":622,"language":623,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function (nums) {\n  // [0, n - 2]\n  // (-1, n - 1) 开区间写法\n  let l = -1;\n  let r = nums.length - 1;\n  while (l + 1 \u003C r) {\n    let mid = (l + r) >> 1;\n    if (nums[mid] > nums[mid + 1]) {\n      r = mid; // 染蓝色\n    } else {\n      l = mid; // 染红色\n    }\n  }\n  return r;\n};\n","js",[625],{"type":467,"tag":500,"props":626,"children":627},{"__ignoreMap":460},[628,637,663,680,688,732,741,750,786,833,874,926,988,1015,1034,1060,1069,1078,1095],{"type":467,"tag":504,"props":629,"children":630},{"class":506,"line":507},[631],{"type":467,"tag":504,"props":632,"children":634},{"style":633},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[635],{"type":472,"value":636},"/**\n",{"type":467,"tag":504,"props":638,"children":639},{"class":506,"line":516},[640,645,651,657],{"type":467,"tag":504,"props":641,"children":642},{"style":633},[643],{"type":472,"value":644}," * ",{"type":467,"tag":504,"props":646,"children":648},{"style":647},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[649],{"type":472,"value":650},"@param",{"type":467,"tag":504,"props":652,"children":654},{"style":653},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[655],{"type":472,"value":656}," {number[]}",{"type":467,"tag":504,"props":658,"children":660},{"style":659},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[661],{"type":472,"value":662}," nums\n",{"type":467,"tag":504,"props":664,"children":665},{"class":506,"line":525},[666,670,675],{"type":467,"tag":504,"props":667,"children":668},{"style":633},[669],{"type":472,"value":644},{"type":467,"tag":504,"props":671,"children":672},{"style":647},[673],{"type":472,"value":674},"@return",{"type":467,"tag":504,"props":676,"children":677},{"style":653},[678],{"type":472,"value":679}," {number}\n",{"type":467,"tag":504,"props":681,"children":682},{"class":506,"line":570},[683],{"type":467,"tag":504,"props":684,"children":685},{"style":633},[686],{"type":472,"value":687}," */\n",{"type":467,"tag":504,"props":689,"children":691},{"class":506,"line":690},5,[692,698,704,710,715,721,727],{"type":467,"tag":504,"props":693,"children":695},{"style":694},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[696],{"type":472,"value":697},"var",{"type":467,"tag":504,"props":699,"children":701},{"style":700},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[702],{"type":472,"value":703}," findPeakElement",{"type":467,"tag":504,"props":705,"children":707},{"style":706},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[708],{"type":472,"value":709}," =",{"type":467,"tag":504,"props":711,"children":712},{"style":694},[713],{"type":472,"value":714}," function",{"type":467,"tag":504,"props":716,"children":718},{"style":717},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[719],{"type":472,"value":720}," (",{"type":467,"tag":504,"props":722,"children":724},{"style":723},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[725],{"type":472,"value":726},"nums",{"type":467,"tag":504,"props":728,"children":729},{"style":717},[730],{"type":472,"value":731},") {\n",{"type":467,"tag":504,"props":733,"children":735},{"class":506,"line":734},6,[736],{"type":467,"tag":504,"props":737,"children":738},{"style":633},[739],{"type":472,"value":740},"  // [0, n - 2]\n",{"type":467,"tag":504,"props":742,"children":744},{"class":506,"line":743},7,[745],{"type":467,"tag":504,"props":746,"children":747},{"style":633},[748],{"type":472,"value":749},"  // (-1, n - 1) 开区间写法\n",{"type":467,"tag":504,"props":751,"children":753},{"class":506,"line":752},8,[754,759,765,769,774,780],{"type":467,"tag":504,"props":755,"children":756},{"style":694},[757],{"type":472,"value":758},"  let",{"type":467,"tag":504,"props":760,"children":762},{"style":761},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[763],{"type":472,"value":764}," l",{"type":467,"tag":504,"props":766,"children":767},{"style":706},[768],{"type":472,"value":709},{"type":467,"tag":504,"props":770,"children":771},{"style":706},[772],{"type":472,"value":773}," -",{"type":467,"tag":504,"props":775,"children":777},{"style":776},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[778],{"type":472,"value":779},"1",{"type":467,"tag":504,"props":781,"children":783},{"style":782},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[784],{"type":472,"value":785},";\n",{"type":467,"tag":504,"props":787,"children":789},{"class":506,"line":788},9,[790,794,799,803,808,814,819,824,829],{"type":467,"tag":504,"props":791,"children":792},{"style":694},[793],{"type":472,"value":758},{"type":467,"tag":504,"props":795,"children":796},{"style":761},[797],{"type":472,"value":798}," r",{"type":467,"tag":504,"props":800,"children":801},{"style":706},[802],{"type":472,"value":709},{"type":467,"tag":504,"props":804,"children":805},{"style":761},[806],{"type":472,"value":807}," nums",{"type":467,"tag":504,"props":809,"children":811},{"style":810},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[812],{"type":472,"value":813},".",{"type":467,"tag":504,"props":815,"children":816},{"style":717},[817],{"type":472,"value":818},"length ",{"type":467,"tag":504,"props":820,"children":821},{"style":706},[822],{"type":472,"value":823},"-",{"type":467,"tag":504,"props":825,"children":826},{"style":776},[827],{"type":472,"value":828}," 1",{"type":467,"tag":504,"props":830,"children":831},{"style":782},[832],{"type":472,"value":785},{"type":467,"tag":504,"props":834,"children":836},{"class":506,"line":835},10,[837,843,847,852,857,861,866,870],{"type":467,"tag":504,"props":838,"children":840},{"style":839},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[841],{"type":472,"value":842},"  while",{"type":467,"tag":504,"props":844,"children":845},{"style":717},[846],{"type":472,"value":720},{"type":467,"tag":504,"props":848,"children":849},{"style":761},[850],{"type":472,"value":851},"l",{"type":467,"tag":504,"props":853,"children":854},{"style":706},[855],{"type":472,"value":856}," +",{"type":467,"tag":504,"props":858,"children":859},{"style":776},[860],{"type":472,"value":828},{"type":467,"tag":504,"props":862,"children":863},{"style":706},[864],{"type":472,"value":865}," \u003C",{"type":467,"tag":504,"props":867,"children":868},{"style":761},[869],{"type":472,"value":798},{"type":467,"tag":504,"props":871,"children":872},{"style":717},[873],{"type":472,"value":731},{"type":467,"tag":504,"props":875,"children":877},{"class":506,"line":876},11,[878,883,888,892,896,900,904,908,913,918,922],{"type":467,"tag":504,"props":879,"children":880},{"style":694},[881],{"type":472,"value":882},"    let",{"type":467,"tag":504,"props":884,"children":885},{"style":761},[886],{"type":472,"value":887}," mid",{"type":467,"tag":504,"props":889,"children":890},{"style":706},[891],{"type":472,"value":709},{"type":467,"tag":504,"props":893,"children":894},{"style":717},[895],{"type":472,"value":720},{"type":467,"tag":504,"props":897,"children":898},{"style":761},[899],{"type":472,"value":851},{"type":467,"tag":504,"props":901,"children":902},{"style":706},[903],{"type":472,"value":856},{"type":467,"tag":504,"props":905,"children":906},{"style":761},[907],{"type":472,"value":798},{"type":467,"tag":504,"props":909,"children":910},{"style":717},[911],{"type":472,"value":912},") ",{"type":467,"tag":504,"props":914,"children":915},{"style":706},[916],{"type":472,"value":917},">>",{"type":467,"tag":504,"props":919,"children":920},{"style":776},[921],{"type":472,"value":828},{"type":467,"tag":504,"props":923,"children":924},{"style":782},[925],{"type":472,"value":785},{"type":467,"tag":504,"props":927,"children":929},{"class":506,"line":928},12,[930,935,939,943,948,953,958,963,967,971,975,979,983],{"type":467,"tag":504,"props":931,"children":932},{"style":839},[933],{"type":472,"value":934},"    if",{"type":467,"tag":504,"props":936,"children":937},{"style":717},[938],{"type":472,"value":720},{"type":467,"tag":504,"props":940,"children":941},{"style":761},[942],{"type":472,"value":726},{"type":467,"tag":504,"props":944,"children":945},{"style":717},[946],{"type":472,"value":947},"[",{"type":467,"tag":504,"props":949,"children":950},{"style":761},[951],{"type":472,"value":952},"mid",{"type":467,"tag":504,"props":954,"children":955},{"style":717},[956],{"type":472,"value":957},"] ",{"type":467,"tag":504,"props":959,"children":960},{"style":706},[961],{"type":472,"value":962},">",{"type":467,"tag":504,"props":964,"children":965},{"style":761},[966],{"type":472,"value":807},{"type":467,"tag":504,"props":968,"children":969},{"style":717},[970],{"type":472,"value":947},{"type":467,"tag":504,"props":972,"children":973},{"style":761},[974],{"type":472,"value":952},{"type":467,"tag":504,"props":976,"children":977},{"style":706},[978],{"type":472,"value":856},{"type":467,"tag":504,"props":980,"children":981},{"style":776},[982],{"type":472,"value":828},{"type":467,"tag":504,"props":984,"children":985},{"style":717},[986],{"type":472,"value":987},"]) {\n",{"type":467,"tag":504,"props":989,"children":991},{"class":506,"line":990},13,[992,997,1001,1005,1010],{"type":467,"tag":504,"props":993,"children":994},{"style":761},[995],{"type":472,"value":996},"      r",{"type":467,"tag":504,"props":998,"children":999},{"style":706},[1000],{"type":472,"value":709},{"type":467,"tag":504,"props":1002,"children":1003},{"style":761},[1004],{"type":472,"value":887},{"type":467,"tag":504,"props":1006,"children":1007},{"style":782},[1008],{"type":472,"value":1009},";",{"type":467,"tag":504,"props":1011,"children":1012},{"style":633},[1013],{"type":472,"value":1014}," // 染蓝色\n",{"type":467,"tag":504,"props":1016,"children":1018},{"class":506,"line":1017},14,[1019,1024,1029],{"type":467,"tag":504,"props":1020,"children":1021},{"style":717},[1022],{"type":472,"value":1023},"    } ",{"type":467,"tag":504,"props":1025,"children":1026},{"style":839},[1027],{"type":472,"value":1028},"else",{"type":467,"tag":504,"props":1030,"children":1031},{"style":717},[1032],{"type":472,"value":1033}," {\n",{"type":467,"tag":504,"props":1035,"children":1037},{"class":506,"line":1036},15,[1038,1043,1047,1051,1055],{"type":467,"tag":504,"props":1039,"children":1040},{"style":761},[1041],{"type":472,"value":1042},"      l",{"type":467,"tag":504,"props":1044,"children":1045},{"style":706},[1046],{"type":472,"value":709},{"type":467,"tag":504,"props":1048,"children":1049},{"style":761},[1050],{"type":472,"value":887},{"type":467,"tag":504,"props":1052,"children":1053},{"style":782},[1054],{"type":472,"value":1009},{"type":467,"tag":504,"props":1056,"children":1057},{"style":633},[1058],{"type":472,"value":1059}," // 染红色\n",{"type":467,"tag":504,"props":1061,"children":1063},{"class":506,"line":1062},16,[1064],{"type":467,"tag":504,"props":1065,"children":1066},{"style":717},[1067],{"type":472,"value":1068},"    }\n",{"type":467,"tag":504,"props":1070,"children":1072},{"class":506,"line":1071},17,[1073],{"type":467,"tag":504,"props":1074,"children":1075},{"style":717},[1076],{"type":472,"value":1077},"  }\n",{"type":467,"tag":504,"props":1079,"children":1081},{"class":506,"line":1080},18,[1082,1087,1091],{"type":467,"tag":504,"props":1083,"children":1084},{"style":839},[1085],{"type":472,"value":1086},"  return",{"type":467,"tag":504,"props":1088,"children":1089},{"style":761},[1090],{"type":472,"value":798},{"type":467,"tag":504,"props":1092,"children":1093},{"style":782},[1094],{"type":472,"value":785},{"type":467,"tag":504,"props":1096,"children":1098},{"class":506,"line":1097},19,[1099,1104],{"type":467,"tag":504,"props":1100,"children":1101},{"style":717},[1102],{"type":472,"value":1103},"}",{"type":467,"tag":504,"props":1105,"children":1106},{"style":782},[1107],{"type":472,"value":785},{"type":467,"tag":1109,"props":1110,"children":1111},"style",{},[1112],{"type":472,"value":1113},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":690,"depth":690,"links":1115},[1116,1117],{"id":605,"depth":516,"text":605},{"id":610,"depth":516,"text":610,"children":1118},[1119],{"id":616,"depth":525,"text":616},"markdown","content:1.algorithm:3.leetcode:3.major:162.find-peak-element.md","content","1.algorithm/3.leetcode/3.major/162.find-peak-element.md","md",[1126,1128],{"_path":180,"title":179,"description":1127},"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。",{"_path":186,"title":185,"description":1129},"给你两个版本号 version1 和 version2 ，请你比较它们。",1713624719361]