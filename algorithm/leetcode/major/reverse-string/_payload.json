[{"data":1,"prerenderedAt":995},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-string":463,"/algorithm/leetcode/major/reverse-string-surround":990},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":222,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":221,"description":467,"url":468,"body":469,"_type":985,"_id":986,"_source":987,"_file":988,"_extension":989},"major",false,"","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。","https://leetcode.cn/problems/reverse-string",{"type":470,"children":471,"toc":979},"root",[472,479,484,489,519,524,547,552,567,573,578,584,973],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。",{"type":473,"tag":474,"props":485,"children":486},{},[487],{"type":478,"value":488},"示例 1：",{"type":473,"tag":490,"props":491,"children":494},"pre",{"className":492,"code":493,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",[495],{"type":473,"tag":496,"props":497,"children":498},"code",{"__ignoreMap":466},[499,510],{"type":473,"tag":500,"props":501,"children":504},"span",{"class":502,"line":503},"line",1,[505],{"type":473,"tag":500,"props":506,"children":507},{},[508],{"type":478,"value":509},"输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n",{"type":473,"tag":500,"props":511,"children":513},{"class":502,"line":512},2,[514],{"type":473,"tag":500,"props":515,"children":516},{},[517],{"type":478,"value":518},"输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",{"type":473,"tag":474,"props":520,"children":521},{},[522],{"type":478,"value":523},"示例 2：",{"type":473,"tag":490,"props":525,"children":527},{"className":492,"code":526,"language":478,"meta":466,"style":466},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",[528],{"type":473,"tag":496,"props":529,"children":530},{"__ignoreMap":466},[531,539],{"type":473,"tag":500,"props":532,"children":533},{"class":502,"line":503},[534],{"type":473,"tag":500,"props":535,"children":536},{},[537],{"type":478,"value":538},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n",{"type":473,"tag":500,"props":540,"children":541},{"class":502,"line":512},[542],{"type":473,"tag":500,"props":543,"children":544},{},[545],{"type":478,"value":546},"输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",{"type":473,"tag":474,"props":548,"children":549},{},[550],{"type":478,"value":551},"提示：",{"type":473,"tag":553,"props":554,"children":555},"ul",{},[556,562],{"type":473,"tag":557,"props":558,"children":559},"li",{},[560],{"type":478,"value":561},"1 \u003C= s.length \u003C= 10^5",{"type":473,"tag":557,"props":563,"children":564},{},[565],{"type":478,"value":566},"s[i] 都是 ASCII 码表中的可打印字符",{"type":473,"tag":568,"props":569,"children":571},"h2",{"id":570},"解题思路",[572],{"type":478,"value":570},{"type":473,"tag":568,"props":574,"children":576},{"id":575},"实现",[577],{"type":478,"value":575},{"type":473,"tag":579,"props":580,"children":582},"h3",{"id":581},"双指针",[583],{"type":478,"value":581},{"type":473,"tag":490,"props":585,"children":589},{"className":586,"code":587,"language":588,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function (s) {\n  let left = 0;\n  let right = s.length - 1;\n  while (left \u003C right) {\n    [s[left], s[right]] = [s[right], s[left]];\n    left++;\n    right--;\n  }\n};\n","js",[590],{"type":473,"tag":496,"props":591,"children":592},{"__ignoreMap":466},[593,602,628,651,660,704,735,782,814,915,933,951,960],{"type":473,"tag":500,"props":594,"children":595},{"class":502,"line":503},[596],{"type":473,"tag":500,"props":597,"children":599},{"style":598},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[600],{"type":478,"value":601},"/**\n",{"type":473,"tag":500,"props":603,"children":604},{"class":502,"line":512},[605,610,616,622],{"type":473,"tag":500,"props":606,"children":607},{"style":598},[608],{"type":478,"value":609}," * ",{"type":473,"tag":500,"props":611,"children":613},{"style":612},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[614],{"type":478,"value":615},"@param",{"type":473,"tag":500,"props":617,"children":619},{"style":618},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[620],{"type":478,"value":621}," {character[]}",{"type":473,"tag":500,"props":623,"children":625},{"style":624},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[626],{"type":478,"value":627}," s\n",{"type":473,"tag":500,"props":629,"children":631},{"class":502,"line":630},3,[632,636,641,646],{"type":473,"tag":500,"props":633,"children":634},{"style":598},[635],{"type":478,"value":609},{"type":473,"tag":500,"props":637,"children":638},{"style":612},[639],{"type":478,"value":640},"@return",{"type":473,"tag":500,"props":642,"children":643},{"style":618},[644],{"type":478,"value":645}," {void}",{"type":473,"tag":500,"props":647,"children":648},{"style":598},[649],{"type":478,"value":650}," Do not return anything, modify s in-place instead.\n",{"type":473,"tag":500,"props":652,"children":654},{"class":502,"line":653},4,[655],{"type":473,"tag":500,"props":656,"children":657},{"style":598},[658],{"type":478,"value":659}," */\n",{"type":473,"tag":500,"props":661,"children":663},{"class":502,"line":662},5,[664,670,676,682,687,693,699],{"type":473,"tag":500,"props":665,"children":667},{"style":666},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[668],{"type":478,"value":669},"var",{"type":473,"tag":500,"props":671,"children":673},{"style":672},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[674],{"type":478,"value":675}," reverseString",{"type":473,"tag":500,"props":677,"children":679},{"style":678},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[680],{"type":478,"value":681}," =",{"type":473,"tag":500,"props":683,"children":684},{"style":666},[685],{"type":478,"value":686}," function",{"type":473,"tag":500,"props":688,"children":690},{"style":689},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[691],{"type":478,"value":692}," (",{"type":473,"tag":500,"props":694,"children":696},{"style":695},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[697],{"type":478,"value":698},"s",{"type":473,"tag":500,"props":700,"children":701},{"style":689},[702],{"type":478,"value":703},") {\n",{"type":473,"tag":500,"props":705,"children":707},{"class":502,"line":706},6,[708,713,719,723,729],{"type":473,"tag":500,"props":709,"children":710},{"style":666},[711],{"type":478,"value":712},"  let",{"type":473,"tag":500,"props":714,"children":716},{"style":715},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[717],{"type":478,"value":718}," left",{"type":473,"tag":500,"props":720,"children":721},{"style":678},[722],{"type":478,"value":681},{"type":473,"tag":500,"props":724,"children":726},{"style":725},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[727],{"type":478,"value":728}," 0",{"type":473,"tag":500,"props":730,"children":732},{"style":731},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[733],{"type":478,"value":734},";\n",{"type":473,"tag":500,"props":736,"children":738},{"class":502,"line":737},7,[739,743,748,752,757,763,768,773,778],{"type":473,"tag":500,"props":740,"children":741},{"style":666},[742],{"type":478,"value":712},{"type":473,"tag":500,"props":744,"children":745},{"style":715},[746],{"type":478,"value":747}," right",{"type":473,"tag":500,"props":749,"children":750},{"style":678},[751],{"type":478,"value":681},{"type":473,"tag":500,"props":753,"children":754},{"style":715},[755],{"type":478,"value":756}," s",{"type":473,"tag":500,"props":758,"children":760},{"style":759},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[761],{"type":478,"value":762},".",{"type":473,"tag":500,"props":764,"children":765},{"style":689},[766],{"type":478,"value":767},"length ",{"type":473,"tag":500,"props":769,"children":770},{"style":678},[771],{"type":478,"value":772},"-",{"type":473,"tag":500,"props":774,"children":775},{"style":725},[776],{"type":478,"value":777}," 1",{"type":473,"tag":500,"props":779,"children":780},{"style":731},[781],{"type":478,"value":734},{"type":473,"tag":500,"props":783,"children":785},{"class":502,"line":784},8,[786,792,796,801,806,810],{"type":473,"tag":500,"props":787,"children":789},{"style":788},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[790],{"type":478,"value":791},"  while",{"type":473,"tag":500,"props":793,"children":794},{"style":689},[795],{"type":478,"value":692},{"type":473,"tag":500,"props":797,"children":798},{"style":715},[799],{"type":478,"value":800},"left",{"type":473,"tag":500,"props":802,"children":803},{"style":678},[804],{"type":478,"value":805}," \u003C",{"type":473,"tag":500,"props":807,"children":808},{"style":715},[809],{"type":478,"value":747},{"type":473,"tag":500,"props":811,"children":812},{"style":689},[813],{"type":478,"value":703},{"type":473,"tag":500,"props":815,"children":817},{"class":502,"line":816},9,[818,823,827,832,836,841,846,850,854,859,864,869,874,878,882,886,890,894,898,902,906,911],{"type":473,"tag":500,"props":819,"children":820},{"style":689},[821],{"type":478,"value":822},"    [",{"type":473,"tag":500,"props":824,"children":825},{"style":715},[826],{"type":478,"value":698},{"type":473,"tag":500,"props":828,"children":829},{"style":689},[830],{"type":478,"value":831},"[",{"type":473,"tag":500,"props":833,"children":834},{"style":715},[835],{"type":478,"value":800},{"type":473,"tag":500,"props":837,"children":838},{"style":689},[839],{"type":478,"value":840},"]",{"type":473,"tag":500,"props":842,"children":843},{"style":731},[844],{"type":478,"value":845},",",{"type":473,"tag":500,"props":847,"children":848},{"style":715},[849],{"type":478,"value":756},{"type":473,"tag":500,"props":851,"children":852},{"style":689},[853],{"type":478,"value":831},{"type":473,"tag":500,"props":855,"children":856},{"style":715},[857],{"type":478,"value":858},"right",{"type":473,"tag":500,"props":860,"children":861},{"style":689},[862],{"type":478,"value":863},"]] ",{"type":473,"tag":500,"props":865,"children":866},{"style":678},[867],{"type":478,"value":868},"=",{"type":473,"tag":500,"props":870,"children":871},{"style":689},[872],{"type":478,"value":873}," [",{"type":473,"tag":500,"props":875,"children":876},{"style":715},[877],{"type":478,"value":698},{"type":473,"tag":500,"props":879,"children":880},{"style":689},[881],{"type":478,"value":831},{"type":473,"tag":500,"props":883,"children":884},{"style":715},[885],{"type":478,"value":858},{"type":473,"tag":500,"props":887,"children":888},{"style":689},[889],{"type":478,"value":840},{"type":473,"tag":500,"props":891,"children":892},{"style":731},[893],{"type":478,"value":845},{"type":473,"tag":500,"props":895,"children":896},{"style":715},[897],{"type":478,"value":756},{"type":473,"tag":500,"props":899,"children":900},{"style":689},[901],{"type":478,"value":831},{"type":473,"tag":500,"props":903,"children":904},{"style":715},[905],{"type":478,"value":800},{"type":473,"tag":500,"props":907,"children":908},{"style":689},[909],{"type":478,"value":910},"]]",{"type":473,"tag":500,"props":912,"children":913},{"style":731},[914],{"type":478,"value":734},{"type":473,"tag":500,"props":916,"children":918},{"class":502,"line":917},10,[919,924,929],{"type":473,"tag":500,"props":920,"children":921},{"style":715},[922],{"type":478,"value":923},"    left",{"type":473,"tag":500,"props":925,"children":926},{"style":678},[927],{"type":478,"value":928},"++",{"type":473,"tag":500,"props":930,"children":931},{"style":731},[932],{"type":478,"value":734},{"type":473,"tag":500,"props":934,"children":936},{"class":502,"line":935},11,[937,942,947],{"type":473,"tag":500,"props":938,"children":939},{"style":715},[940],{"type":478,"value":941},"    right",{"type":473,"tag":500,"props":943,"children":944},{"style":678},[945],{"type":478,"value":946},"--",{"type":473,"tag":500,"props":948,"children":949},{"style":731},[950],{"type":478,"value":734},{"type":473,"tag":500,"props":952,"children":954},{"class":502,"line":953},12,[955],{"type":473,"tag":500,"props":956,"children":957},{"style":689},[958],{"type":478,"value":959},"  }\n",{"type":473,"tag":500,"props":961,"children":963},{"class":502,"line":962},13,[964,969],{"type":473,"tag":500,"props":965,"children":966},{"style":689},[967],{"type":478,"value":968},"}",{"type":473,"tag":500,"props":970,"children":971},{"style":731},[972],{"type":478,"value":734},{"type":473,"tag":974,"props":975,"children":976},"style",{},[977],{"type":478,"value":978},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":662,"depth":662,"links":980},[981,982],{"id":570,"depth":512,"text":570},{"id":575,"depth":512,"text":575,"children":983},[984],{"id":581,"depth":630,"text":581},"markdown","content:1.algorithm:3.leetcode:3.major:344.reverse-string.md","content","1.algorithm/3.leetcode/3.major/344.reverse-string.md","md",[991,993],{"_path":219,"title":218,"description":992},"给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。",{"_path":225,"title":224,"description":994},"给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。",1713695848903]