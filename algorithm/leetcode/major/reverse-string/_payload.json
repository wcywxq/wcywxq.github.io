[{"data":1,"prerenderedAt":1054},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-string":509,"/algorithm/leetcode/major/reverse-string-surround":1049},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":225,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":224,"description":513,"url":514,"body":515,"_type":1044,"_id":1045,"_source":1046,"_file":1047,"_extension":1048},"major",false,"","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。","https://leetcode.cn/problems/reverse-string",{"type":516,"children":517,"toc":1038},"root",[518,525,530,535,565,570,593,598,613,619,624,630,1032],{"type":519,"tag":520,"props":521,"children":522},"element","p",{},[523],{"type":524,"value":513},"text",{"type":519,"tag":520,"props":526,"children":527},{},[528],{"type":524,"value":529},"不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。",{"type":519,"tag":520,"props":531,"children":532},{},[533],{"type":524,"value":534},"示例 1：",{"type":519,"tag":536,"props":537,"children":540},"pre",{"className":538,"code":539,"language":524,"meta":512,"style":512},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",[541],{"type":519,"tag":542,"props":543,"children":544},"code",{"__ignoreMap":512},[545,556],{"type":519,"tag":546,"props":547,"children":550},"span",{"class":548,"line":549},"line",1,[551],{"type":519,"tag":546,"props":552,"children":553},{},[554],{"type":524,"value":555},"输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n",{"type":519,"tag":546,"props":557,"children":559},{"class":548,"line":558},2,[560],{"type":519,"tag":546,"props":561,"children":562},{},[563],{"type":524,"value":564},"输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",{"type":519,"tag":520,"props":566,"children":567},{},[568],{"type":524,"value":569},"示例 2：",{"type":519,"tag":536,"props":571,"children":573},{"className":538,"code":572,"language":524,"meta":512,"style":512},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",[574],{"type":519,"tag":542,"props":575,"children":576},{"__ignoreMap":512},[577,585],{"type":519,"tag":546,"props":578,"children":579},{"class":548,"line":549},[580],{"type":519,"tag":546,"props":581,"children":582},{},[583],{"type":524,"value":584},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n",{"type":519,"tag":546,"props":586,"children":587},{"class":548,"line":558},[588],{"type":519,"tag":546,"props":589,"children":590},{},[591],{"type":524,"value":592},"输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",{"type":519,"tag":520,"props":594,"children":595},{},[596],{"type":524,"value":597},"提示：",{"type":519,"tag":599,"props":600,"children":601},"ul",{},[602,608],{"type":519,"tag":603,"props":604,"children":605},"li",{},[606],{"type":524,"value":607},"1 \u003C= s.length \u003C= 10^5",{"type":519,"tag":603,"props":609,"children":610},{},[611],{"type":524,"value":612},"s[i] 都是 ASCII 码表中的可打印字符",{"type":519,"tag":614,"props":615,"children":617},"h2",{"id":616},"解题思路",[618],{"type":524,"value":616},{"type":519,"tag":614,"props":620,"children":622},{"id":621},"实现",[623],{"type":524,"value":621},{"type":519,"tag":625,"props":626,"children":628},"h3",{"id":627},"双指针",[629],{"type":524,"value":627},{"type":519,"tag":536,"props":631,"children":635},{"className":632,"code":633,"language":634,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function (s) {\n  let left = 0;\n  let right = s.length - 1;\n  while (left \u003C right) {\n    [s[left], s[right]] = [s[right], s[left]];\n    left++;\n    right--;\n  }\n};\n","js",[636],{"type":519,"tag":542,"props":637,"children":638},{"__ignoreMap":512},[639,648,690,725,734,780,809,856,891,978,996,1014,1023],{"type":519,"tag":546,"props":640,"children":641},{"class":548,"line":549},[642],{"type":519,"tag":546,"props":643,"children":645},{"style":644},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[646],{"type":524,"value":647},"/**\n",{"type":519,"tag":546,"props":649,"children":650},{"class":548,"line":558},[651,656,662,668,673,679,684],{"type":519,"tag":546,"props":652,"children":653},{"style":644},[654],{"type":524,"value":655}," * ",{"type":519,"tag":546,"props":657,"children":659},{"style":658},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[660],{"type":524,"value":661},"@",{"type":519,"tag":546,"props":663,"children":665},{"style":664},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[666],{"type":524,"value":667},"param",{"type":519,"tag":546,"props":669,"children":670},{"style":658},[671],{"type":524,"value":672}," {",{"type":519,"tag":546,"props":674,"children":676},{"style":675},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[677],{"type":524,"value":678},"character[]",{"type":519,"tag":546,"props":680,"children":681},{"style":658},[682],{"type":524,"value":683},"}",{"type":519,"tag":546,"props":685,"children":687},{"style":686},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[688],{"type":524,"value":689}," s\n",{"type":519,"tag":546,"props":691,"children":693},{"class":548,"line":692},3,[694,698,702,707,711,716,720],{"type":519,"tag":546,"props":695,"children":696},{"style":644},[697],{"type":524,"value":655},{"type":519,"tag":546,"props":699,"children":700},{"style":658},[701],{"type":524,"value":661},{"type":519,"tag":546,"props":703,"children":704},{"style":664},[705],{"type":524,"value":706},"return",{"type":519,"tag":546,"props":708,"children":709},{"style":658},[710],{"type":524,"value":672},{"type":519,"tag":546,"props":712,"children":713},{"style":675},[714],{"type":524,"value":715},"void",{"type":519,"tag":546,"props":717,"children":718},{"style":658},[719],{"type":524,"value":683},{"type":519,"tag":546,"props":721,"children":722},{"style":644},[723],{"type":524,"value":724}," Do not return anything, modify s in-place instead.\n",{"type":519,"tag":546,"props":726,"children":728},{"class":548,"line":727},4,[729],{"type":519,"tag":546,"props":730,"children":731},{"style":644},[732],{"type":524,"value":733}," */\n",{"type":519,"tag":546,"props":735,"children":737},{"class":548,"line":736},5,[738,744,750,755,760,765,770,775],{"type":519,"tag":546,"props":739,"children":741},{"style":740},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[742],{"type":524,"value":743},"var",{"type":519,"tag":546,"props":745,"children":747},{"style":746},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[748],{"type":524,"value":749}," reverseString",{"type":519,"tag":546,"props":751,"children":752},{"style":658},[753],{"type":524,"value":754}," =",{"type":519,"tag":546,"props":756,"children":757},{"style":740},[758],{"type":524,"value":759}," function",{"type":519,"tag":546,"props":761,"children":762},{"style":658},[763],{"type":524,"value":764}," (",{"type":519,"tag":546,"props":766,"children":767},{"style":686},[768],{"type":524,"value":769},"s",{"type":519,"tag":546,"props":771,"children":772},{"style":658},[773],{"type":524,"value":774},")",{"type":519,"tag":546,"props":776,"children":777},{"style":658},[778],{"type":524,"value":779}," {\n",{"type":519,"tag":546,"props":781,"children":783},{"class":548,"line":782},6,[784,789,794,798,804],{"type":519,"tag":546,"props":785,"children":786},{"style":740},[787],{"type":524,"value":788},"  let",{"type":519,"tag":546,"props":790,"children":791},{"style":686},[792],{"type":524,"value":793}," left",{"type":519,"tag":546,"props":795,"children":796},{"style":658},[797],{"type":524,"value":754},{"type":519,"tag":546,"props":799,"children":801},{"style":800},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[802],{"type":524,"value":803}," 0",{"type":519,"tag":546,"props":805,"children":806},{"style":658},[807],{"type":524,"value":808},";\n",{"type":519,"tag":546,"props":810,"children":812},{"class":548,"line":811},7,[813,817,822,826,831,836,842,847,852],{"type":519,"tag":546,"props":814,"children":815},{"style":740},[816],{"type":524,"value":788},{"type":519,"tag":546,"props":818,"children":819},{"style":686},[820],{"type":524,"value":821}," right",{"type":519,"tag":546,"props":823,"children":824},{"style":658},[825],{"type":524,"value":754},{"type":519,"tag":546,"props":827,"children":828},{"style":686},[829],{"type":524,"value":830}," s",{"type":519,"tag":546,"props":832,"children":833},{"style":658},[834],{"type":524,"value":835},".",{"type":519,"tag":546,"props":837,"children":839},{"style":838},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[840],{"type":524,"value":841},"length",{"type":519,"tag":546,"props":843,"children":844},{"style":740},[845],{"type":524,"value":846}," -",{"type":519,"tag":546,"props":848,"children":849},{"style":800},[850],{"type":524,"value":851}," 1",{"type":519,"tag":546,"props":853,"children":854},{"style":658},[855],{"type":524,"value":808},{"type":519,"tag":546,"props":857,"children":859},{"class":548,"line":858},8,[860,865,869,874,879,883,887],{"type":519,"tag":546,"props":861,"children":862},{"style":664},[863],{"type":524,"value":864},"  while",{"type":519,"tag":546,"props":866,"children":867},{"style":658},[868],{"type":524,"value":764},{"type":519,"tag":546,"props":870,"children":871},{"style":686},[872],{"type":524,"value":873},"left",{"type":519,"tag":546,"props":875,"children":876},{"style":658},[877],{"type":524,"value":878}," \u003C",{"type":519,"tag":546,"props":880,"children":881},{"style":686},[882],{"type":524,"value":821},{"type":519,"tag":546,"props":884,"children":885},{"style":658},[886],{"type":524,"value":774},{"type":519,"tag":546,"props":888,"children":889},{"style":658},[890],{"type":524,"value":779},{"type":519,"tag":546,"props":892,"children":894},{"class":548,"line":893},9,[895,900,904,909,913,918,922,926,931,936,940,945,949,953,957,961,965,969,973],{"type":519,"tag":546,"props":896,"children":897},{"style":658},[898],{"type":524,"value":899},"    [",{"type":519,"tag":546,"props":901,"children":902},{"style":686},[903],{"type":524,"value":769},{"type":519,"tag":546,"props":905,"children":906},{"style":658},[907],{"type":524,"value":908},"[",{"type":519,"tag":546,"props":910,"children":911},{"style":686},[912],{"type":524,"value":873},{"type":519,"tag":546,"props":914,"children":915},{"style":658},[916],{"type":524,"value":917},"],",{"type":519,"tag":546,"props":919,"children":920},{"style":686},[921],{"type":524,"value":830},{"type":519,"tag":546,"props":923,"children":924},{"style":658},[925],{"type":524,"value":908},{"type":519,"tag":546,"props":927,"children":928},{"style":686},[929],{"type":524,"value":930},"right",{"type":519,"tag":546,"props":932,"children":933},{"style":658},[934],{"type":524,"value":935},"]]",{"type":519,"tag":546,"props":937,"children":938},{"style":658},[939],{"type":524,"value":754},{"type":519,"tag":546,"props":941,"children":942},{"style":658},[943],{"type":524,"value":944}," [",{"type":519,"tag":546,"props":946,"children":947},{"style":686},[948],{"type":524,"value":769},{"type":519,"tag":546,"props":950,"children":951},{"style":658},[952],{"type":524,"value":908},{"type":519,"tag":546,"props":954,"children":955},{"style":686},[956],{"type":524,"value":930},{"type":519,"tag":546,"props":958,"children":959},{"style":658},[960],{"type":524,"value":917},{"type":519,"tag":546,"props":962,"children":963},{"style":686},[964],{"type":524,"value":830},{"type":519,"tag":546,"props":966,"children":967},{"style":658},[968],{"type":524,"value":908},{"type":519,"tag":546,"props":970,"children":971},{"style":686},[972],{"type":524,"value":873},{"type":519,"tag":546,"props":974,"children":975},{"style":658},[976],{"type":524,"value":977},"]];\n",{"type":519,"tag":546,"props":979,"children":981},{"class":548,"line":980},10,[982,987,992],{"type":519,"tag":546,"props":983,"children":984},{"style":686},[985],{"type":524,"value":986},"    left",{"type":519,"tag":546,"props":988,"children":989},{"style":740},[990],{"type":524,"value":991},"++",{"type":519,"tag":546,"props":993,"children":994},{"style":658},[995],{"type":524,"value":808},{"type":519,"tag":546,"props":997,"children":999},{"class":548,"line":998},11,[1000,1005,1010],{"type":519,"tag":546,"props":1001,"children":1002},{"style":686},[1003],{"type":524,"value":1004},"    right",{"type":519,"tag":546,"props":1006,"children":1007},{"style":740},[1008],{"type":524,"value":1009},"--",{"type":519,"tag":546,"props":1011,"children":1012},{"style":658},[1013],{"type":524,"value":808},{"type":519,"tag":546,"props":1015,"children":1017},{"class":548,"line":1016},12,[1018],{"type":519,"tag":546,"props":1019,"children":1020},{"style":658},[1021],{"type":524,"value":1022},"  }\n",{"type":519,"tag":546,"props":1024,"children":1026},{"class":548,"line":1025},13,[1027],{"type":519,"tag":546,"props":1028,"children":1029},{"style":658},[1030],{"type":524,"value":1031},"};\n",{"type":519,"tag":1033,"props":1034,"children":1035},"style",{},[1036],{"type":524,"value":1037},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":736,"depth":736,"links":1039},[1040,1041],{"id":616,"depth":558,"text":616},{"id":621,"depth":558,"text":621,"children":1042},[1043],{"id":627,"depth":692,"text":627},"markdown","content:1.algorithm:3.leetcode:3.major:344.reverse-string.md","content","1.algorithm/3.leetcode/3.major/344.reverse-string.md","md",[1050,1052],{"_path":222,"title":221,"description":1051},"给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。",{"_path":228,"title":227,"description":1053},"给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。",1714059006564]