[{"data":1,"prerenderedAt":1088},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-string":543,"/algorithm/leetcode/major/reverse-string-surround":1083},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":225,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":224,"description":547,"url":548,"body":549,"_type":1078,"_id":1079,"_source":1080,"_file":1081,"_extension":1082},"major",false,"","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。","https://leetcode.cn/problems/reverse-string",{"type":550,"children":551,"toc":1072},"root",[552,559,564,569,599,604,627,632,647,653,658,664,1066],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"示例 1：",{"type":553,"tag":570,"props":571,"children":574},"pre",{"className":572,"code":573,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",[575],{"type":553,"tag":576,"props":577,"children":578},"code",{"__ignoreMap":546},[579,590],{"type":553,"tag":580,"props":581,"children":584},"span",{"class":582,"line":583},"line",1,[585],{"type":553,"tag":580,"props":586,"children":587},{},[588],{"type":558,"value":589},"输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n",{"type":553,"tag":580,"props":591,"children":593},{"class":582,"line":592},2,[594],{"type":553,"tag":580,"props":595,"children":596},{},[597],{"type":558,"value":598},"输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",{"type":553,"tag":554,"props":600,"children":601},{},[602],{"type":558,"value":603},"示例 2：",{"type":553,"tag":570,"props":605,"children":607},{"className":572,"code":606,"language":558,"meta":546,"style":546},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",[608],{"type":553,"tag":576,"props":609,"children":610},{"__ignoreMap":546},[611,619],{"type":553,"tag":580,"props":612,"children":613},{"class":582,"line":583},[614],{"type":553,"tag":580,"props":615,"children":616},{},[617],{"type":558,"value":618},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n",{"type":553,"tag":580,"props":620,"children":621},{"class":582,"line":592},[622],{"type":553,"tag":580,"props":623,"children":624},{},[625],{"type":558,"value":626},"输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",{"type":553,"tag":554,"props":628,"children":629},{},[630],{"type":558,"value":631},"提示：",{"type":553,"tag":633,"props":634,"children":635},"ul",{},[636,642],{"type":553,"tag":637,"props":638,"children":639},"li",{},[640],{"type":558,"value":641},"1 \u003C= s.length \u003C= 10^5",{"type":553,"tag":637,"props":643,"children":644},{},[645],{"type":558,"value":646},"s[i] 都是 ASCII 码表中的可打印字符",{"type":553,"tag":648,"props":649,"children":651},"h2",{"id":650},"解题思路",[652],{"type":558,"value":650},{"type":553,"tag":648,"props":654,"children":656},{"id":655},"实现",[657],{"type":558,"value":655},{"type":553,"tag":659,"props":660,"children":662},"h3",{"id":661},"双指针",[663],{"type":558,"value":661},{"type":553,"tag":570,"props":665,"children":669},{"className":666,"code":667,"language":668,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function (s) {\n  let left = 0;\n  let right = s.length - 1;\n  while (left \u003C right) {\n    [s[left], s[right]] = [s[right], s[left]];\n    left++;\n    right--;\n  }\n};\n","js",[670],{"type":553,"tag":576,"props":671,"children":672},{"__ignoreMap":546},[673,682,724,759,768,814,843,890,925,1012,1030,1048,1057],{"type":553,"tag":580,"props":674,"children":675},{"class":582,"line":583},[676],{"type":553,"tag":580,"props":677,"children":679},{"style":678},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[680],{"type":558,"value":681},"/**\n",{"type":553,"tag":580,"props":683,"children":684},{"class":582,"line":592},[685,690,696,702,707,713,718],{"type":553,"tag":580,"props":686,"children":687},{"style":678},[688],{"type":558,"value":689}," * ",{"type":553,"tag":580,"props":691,"children":693},{"style":692},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[694],{"type":558,"value":695},"@",{"type":553,"tag":580,"props":697,"children":699},{"style":698},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[700],{"type":558,"value":701},"param",{"type":553,"tag":580,"props":703,"children":704},{"style":692},[705],{"type":558,"value":706}," {",{"type":553,"tag":580,"props":708,"children":710},{"style":709},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[711],{"type":558,"value":712},"character[]",{"type":553,"tag":580,"props":714,"children":715},{"style":692},[716],{"type":558,"value":717},"}",{"type":553,"tag":580,"props":719,"children":721},{"style":720},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[722],{"type":558,"value":723}," s\n",{"type":553,"tag":580,"props":725,"children":727},{"class":582,"line":726},3,[728,732,736,741,745,750,754],{"type":553,"tag":580,"props":729,"children":730},{"style":678},[731],{"type":558,"value":689},{"type":553,"tag":580,"props":733,"children":734},{"style":692},[735],{"type":558,"value":695},{"type":553,"tag":580,"props":737,"children":738},{"style":698},[739],{"type":558,"value":740},"return",{"type":553,"tag":580,"props":742,"children":743},{"style":692},[744],{"type":558,"value":706},{"type":553,"tag":580,"props":746,"children":747},{"style":709},[748],{"type":558,"value":749},"void",{"type":553,"tag":580,"props":751,"children":752},{"style":692},[753],{"type":558,"value":717},{"type":553,"tag":580,"props":755,"children":756},{"style":678},[757],{"type":558,"value":758}," Do not return anything, modify s in-place instead.\n",{"type":553,"tag":580,"props":760,"children":762},{"class":582,"line":761},4,[763],{"type":553,"tag":580,"props":764,"children":765},{"style":678},[766],{"type":558,"value":767}," */\n",{"type":553,"tag":580,"props":769,"children":771},{"class":582,"line":770},5,[772,778,784,789,794,799,804,809],{"type":553,"tag":580,"props":773,"children":775},{"style":774},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[776],{"type":558,"value":777},"var",{"type":553,"tag":580,"props":779,"children":781},{"style":780},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[782],{"type":558,"value":783}," reverseString",{"type":553,"tag":580,"props":785,"children":786},{"style":692},[787],{"type":558,"value":788}," =",{"type":553,"tag":580,"props":790,"children":791},{"style":774},[792],{"type":558,"value":793}," function",{"type":553,"tag":580,"props":795,"children":796},{"style":692},[797],{"type":558,"value":798}," (",{"type":553,"tag":580,"props":800,"children":801},{"style":720},[802],{"type":558,"value":803},"s",{"type":553,"tag":580,"props":805,"children":806},{"style":692},[807],{"type":558,"value":808},")",{"type":553,"tag":580,"props":810,"children":811},{"style":692},[812],{"type":558,"value":813}," {\n",{"type":553,"tag":580,"props":815,"children":817},{"class":582,"line":816},6,[818,823,828,832,838],{"type":553,"tag":580,"props":819,"children":820},{"style":774},[821],{"type":558,"value":822},"  let",{"type":553,"tag":580,"props":824,"children":825},{"style":720},[826],{"type":558,"value":827}," left",{"type":553,"tag":580,"props":829,"children":830},{"style":692},[831],{"type":558,"value":788},{"type":553,"tag":580,"props":833,"children":835},{"style":834},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[836],{"type":558,"value":837}," 0",{"type":553,"tag":580,"props":839,"children":840},{"style":692},[841],{"type":558,"value":842},";\n",{"type":553,"tag":580,"props":844,"children":846},{"class":582,"line":845},7,[847,851,856,860,865,870,876,881,886],{"type":553,"tag":580,"props":848,"children":849},{"style":774},[850],{"type":558,"value":822},{"type":553,"tag":580,"props":852,"children":853},{"style":720},[854],{"type":558,"value":855}," right",{"type":553,"tag":580,"props":857,"children":858},{"style":692},[859],{"type":558,"value":788},{"type":553,"tag":580,"props":861,"children":862},{"style":720},[863],{"type":558,"value":864}," s",{"type":553,"tag":580,"props":866,"children":867},{"style":692},[868],{"type":558,"value":869},".",{"type":553,"tag":580,"props":871,"children":873},{"style":872},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[874],{"type":558,"value":875},"length",{"type":553,"tag":580,"props":877,"children":878},{"style":774},[879],{"type":558,"value":880}," -",{"type":553,"tag":580,"props":882,"children":883},{"style":834},[884],{"type":558,"value":885}," 1",{"type":553,"tag":580,"props":887,"children":888},{"style":692},[889],{"type":558,"value":842},{"type":553,"tag":580,"props":891,"children":893},{"class":582,"line":892},8,[894,899,903,908,913,917,921],{"type":553,"tag":580,"props":895,"children":896},{"style":698},[897],{"type":558,"value":898},"  while",{"type":553,"tag":580,"props":900,"children":901},{"style":692},[902],{"type":558,"value":798},{"type":553,"tag":580,"props":904,"children":905},{"style":720},[906],{"type":558,"value":907},"left",{"type":553,"tag":580,"props":909,"children":910},{"style":692},[911],{"type":558,"value":912}," \u003C",{"type":553,"tag":580,"props":914,"children":915},{"style":720},[916],{"type":558,"value":855},{"type":553,"tag":580,"props":918,"children":919},{"style":692},[920],{"type":558,"value":808},{"type":553,"tag":580,"props":922,"children":923},{"style":692},[924],{"type":558,"value":813},{"type":553,"tag":580,"props":926,"children":928},{"class":582,"line":927},9,[929,934,938,943,947,952,956,960,965,970,974,979,983,987,991,995,999,1003,1007],{"type":553,"tag":580,"props":930,"children":931},{"style":692},[932],{"type":558,"value":933},"    [",{"type":553,"tag":580,"props":935,"children":936},{"style":720},[937],{"type":558,"value":803},{"type":553,"tag":580,"props":939,"children":940},{"style":692},[941],{"type":558,"value":942},"[",{"type":553,"tag":580,"props":944,"children":945},{"style":720},[946],{"type":558,"value":907},{"type":553,"tag":580,"props":948,"children":949},{"style":692},[950],{"type":558,"value":951},"],",{"type":553,"tag":580,"props":953,"children":954},{"style":720},[955],{"type":558,"value":864},{"type":553,"tag":580,"props":957,"children":958},{"style":692},[959],{"type":558,"value":942},{"type":553,"tag":580,"props":961,"children":962},{"style":720},[963],{"type":558,"value":964},"right",{"type":553,"tag":580,"props":966,"children":967},{"style":692},[968],{"type":558,"value":969},"]]",{"type":553,"tag":580,"props":971,"children":972},{"style":692},[973],{"type":558,"value":788},{"type":553,"tag":580,"props":975,"children":976},{"style":692},[977],{"type":558,"value":978}," [",{"type":553,"tag":580,"props":980,"children":981},{"style":720},[982],{"type":558,"value":803},{"type":553,"tag":580,"props":984,"children":985},{"style":692},[986],{"type":558,"value":942},{"type":553,"tag":580,"props":988,"children":989},{"style":720},[990],{"type":558,"value":964},{"type":553,"tag":580,"props":992,"children":993},{"style":692},[994],{"type":558,"value":951},{"type":553,"tag":580,"props":996,"children":997},{"style":720},[998],{"type":558,"value":864},{"type":553,"tag":580,"props":1000,"children":1001},{"style":692},[1002],{"type":558,"value":942},{"type":553,"tag":580,"props":1004,"children":1005},{"style":720},[1006],{"type":558,"value":907},{"type":553,"tag":580,"props":1008,"children":1009},{"style":692},[1010],{"type":558,"value":1011},"]];\n",{"type":553,"tag":580,"props":1013,"children":1015},{"class":582,"line":1014},10,[1016,1021,1026],{"type":553,"tag":580,"props":1017,"children":1018},{"style":720},[1019],{"type":558,"value":1020},"    left",{"type":553,"tag":580,"props":1022,"children":1023},{"style":774},[1024],{"type":558,"value":1025},"++",{"type":553,"tag":580,"props":1027,"children":1028},{"style":692},[1029],{"type":558,"value":842},{"type":553,"tag":580,"props":1031,"children":1033},{"class":582,"line":1032},11,[1034,1039,1044],{"type":553,"tag":580,"props":1035,"children":1036},{"style":720},[1037],{"type":558,"value":1038},"    right",{"type":553,"tag":580,"props":1040,"children":1041},{"style":774},[1042],{"type":558,"value":1043},"--",{"type":553,"tag":580,"props":1045,"children":1046},{"style":692},[1047],{"type":558,"value":842},{"type":553,"tag":580,"props":1049,"children":1051},{"class":582,"line":1050},12,[1052],{"type":553,"tag":580,"props":1053,"children":1054},{"style":692},[1055],{"type":558,"value":1056},"  }\n",{"type":553,"tag":580,"props":1058,"children":1060},{"class":582,"line":1059},13,[1061],{"type":553,"tag":580,"props":1062,"children":1063},{"style":692},[1064],{"type":558,"value":1065},"};\n",{"type":553,"tag":1067,"props":1068,"children":1069},"style",{},[1070],{"type":558,"value":1071},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":770,"depth":770,"links":1073},[1074,1075],{"id":650,"depth":592,"text":650},{"id":655,"depth":592,"text":655,"children":1076},[1077],{"id":661,"depth":726,"text":661},"markdown","content:1.algorithm:3.leetcode:3.major:344.reverse-string.md","content","1.algorithm/3.leetcode/3.major/344.reverse-string.md","md",[1084,1086],{"_path":222,"title":221,"description":1085},"给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。",{"_path":228,"title":227,"description":1087},"给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。",1714099680263]