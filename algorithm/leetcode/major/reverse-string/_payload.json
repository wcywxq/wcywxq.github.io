[{"data":1,"prerenderedAt":1085},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-string":540,"/algorithm/leetcode/major/reverse-string-surround":1080},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":225,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":224,"description":544,"url":545,"body":546,"_type":1075,"_id":1076,"_source":1077,"_file":1078,"_extension":1079},"major",false,"","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。","https://leetcode.cn/problems/reverse-string",{"type":547,"children":548,"toc":1069},"root",[549,556,561,566,596,601,624,629,644,650,655,661,1063],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"示例 1：",{"type":550,"tag":567,"props":568,"children":571},"pre",{"className":569,"code":570,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",[572],{"type":550,"tag":573,"props":574,"children":575},"code",{"__ignoreMap":543},[576,587],{"type":550,"tag":577,"props":578,"children":581},"span",{"class":579,"line":580},"line",1,[582],{"type":550,"tag":577,"props":583,"children":584},{},[585],{"type":555,"value":586},"输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n",{"type":550,"tag":577,"props":588,"children":590},{"class":579,"line":589},2,[591],{"type":550,"tag":577,"props":592,"children":593},{},[594],{"type":555,"value":595},"输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",{"type":550,"tag":551,"props":597,"children":598},{},[599],{"type":555,"value":600},"示例 2：",{"type":550,"tag":567,"props":602,"children":604},{"className":569,"code":603,"language":555,"meta":543,"style":543},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",[605],{"type":550,"tag":573,"props":606,"children":607},{"__ignoreMap":543},[608,616],{"type":550,"tag":577,"props":609,"children":610},{"class":579,"line":580},[611],{"type":550,"tag":577,"props":612,"children":613},{},[614],{"type":555,"value":615},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n",{"type":550,"tag":577,"props":617,"children":618},{"class":579,"line":589},[619],{"type":550,"tag":577,"props":620,"children":621},{},[622],{"type":555,"value":623},"输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",{"type":550,"tag":551,"props":625,"children":626},{},[627],{"type":555,"value":628},"提示：",{"type":550,"tag":630,"props":631,"children":632},"ul",{},[633,639],{"type":550,"tag":634,"props":635,"children":636},"li",{},[637],{"type":555,"value":638},"1 \u003C= s.length \u003C= 10^5",{"type":550,"tag":634,"props":640,"children":641},{},[642],{"type":555,"value":643},"s[i] 都是 ASCII 码表中的可打印字符",{"type":550,"tag":645,"props":646,"children":648},"h2",{"id":647},"解题思路",[649],{"type":555,"value":647},{"type":550,"tag":645,"props":651,"children":653},{"id":652},"实现",[654],{"type":555,"value":652},{"type":550,"tag":656,"props":657,"children":659},"h3",{"id":658},"双指针",[660],{"type":555,"value":658},{"type":550,"tag":567,"props":662,"children":666},{"className":663,"code":664,"language":665,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function (s) {\n  let left = 0;\n  let right = s.length - 1;\n  while (left \u003C right) {\n    [s[left], s[right]] = [s[right], s[left]];\n    left++;\n    right--;\n  }\n};\n","js",[667],{"type":550,"tag":573,"props":668,"children":669},{"__ignoreMap":543},[670,679,721,756,765,811,840,887,922,1009,1027,1045,1054],{"type":550,"tag":577,"props":671,"children":672},{"class":579,"line":580},[673],{"type":550,"tag":577,"props":674,"children":676},{"style":675},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[677],{"type":555,"value":678},"/**\n",{"type":550,"tag":577,"props":680,"children":681},{"class":579,"line":589},[682,687,693,699,704,710,715],{"type":550,"tag":577,"props":683,"children":684},{"style":675},[685],{"type":555,"value":686}," * ",{"type":550,"tag":577,"props":688,"children":690},{"style":689},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[691],{"type":555,"value":692},"@",{"type":550,"tag":577,"props":694,"children":696},{"style":695},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[697],{"type":555,"value":698},"param",{"type":550,"tag":577,"props":700,"children":701},{"style":689},[702],{"type":555,"value":703}," {",{"type":550,"tag":577,"props":705,"children":707},{"style":706},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[708],{"type":555,"value":709},"character[]",{"type":550,"tag":577,"props":711,"children":712},{"style":689},[713],{"type":555,"value":714},"}",{"type":550,"tag":577,"props":716,"children":718},{"style":717},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[719],{"type":555,"value":720}," s\n",{"type":550,"tag":577,"props":722,"children":724},{"class":579,"line":723},3,[725,729,733,738,742,747,751],{"type":550,"tag":577,"props":726,"children":727},{"style":675},[728],{"type":555,"value":686},{"type":550,"tag":577,"props":730,"children":731},{"style":689},[732],{"type":555,"value":692},{"type":550,"tag":577,"props":734,"children":735},{"style":695},[736],{"type":555,"value":737},"return",{"type":550,"tag":577,"props":739,"children":740},{"style":689},[741],{"type":555,"value":703},{"type":550,"tag":577,"props":743,"children":744},{"style":706},[745],{"type":555,"value":746},"void",{"type":550,"tag":577,"props":748,"children":749},{"style":689},[750],{"type":555,"value":714},{"type":550,"tag":577,"props":752,"children":753},{"style":675},[754],{"type":555,"value":755}," Do not return anything, modify s in-place instead.\n",{"type":550,"tag":577,"props":757,"children":759},{"class":579,"line":758},4,[760],{"type":550,"tag":577,"props":761,"children":762},{"style":675},[763],{"type":555,"value":764}," */\n",{"type":550,"tag":577,"props":766,"children":768},{"class":579,"line":767},5,[769,775,781,786,791,796,801,806],{"type":550,"tag":577,"props":770,"children":772},{"style":771},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[773],{"type":555,"value":774},"var",{"type":550,"tag":577,"props":776,"children":778},{"style":777},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[779],{"type":555,"value":780}," reverseString",{"type":550,"tag":577,"props":782,"children":783},{"style":689},[784],{"type":555,"value":785}," =",{"type":550,"tag":577,"props":787,"children":788},{"style":771},[789],{"type":555,"value":790}," function",{"type":550,"tag":577,"props":792,"children":793},{"style":689},[794],{"type":555,"value":795}," (",{"type":550,"tag":577,"props":797,"children":798},{"style":717},[799],{"type":555,"value":800},"s",{"type":550,"tag":577,"props":802,"children":803},{"style":689},[804],{"type":555,"value":805},")",{"type":550,"tag":577,"props":807,"children":808},{"style":689},[809],{"type":555,"value":810}," {\n",{"type":550,"tag":577,"props":812,"children":814},{"class":579,"line":813},6,[815,820,825,829,835],{"type":550,"tag":577,"props":816,"children":817},{"style":771},[818],{"type":555,"value":819},"  let",{"type":550,"tag":577,"props":821,"children":822},{"style":717},[823],{"type":555,"value":824}," left",{"type":550,"tag":577,"props":826,"children":827},{"style":689},[828],{"type":555,"value":785},{"type":550,"tag":577,"props":830,"children":832},{"style":831},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[833],{"type":555,"value":834}," 0",{"type":550,"tag":577,"props":836,"children":837},{"style":689},[838],{"type":555,"value":839},";\n",{"type":550,"tag":577,"props":841,"children":843},{"class":579,"line":842},7,[844,848,853,857,862,867,873,878,883],{"type":550,"tag":577,"props":845,"children":846},{"style":771},[847],{"type":555,"value":819},{"type":550,"tag":577,"props":849,"children":850},{"style":717},[851],{"type":555,"value":852}," right",{"type":550,"tag":577,"props":854,"children":855},{"style":689},[856],{"type":555,"value":785},{"type":550,"tag":577,"props":858,"children":859},{"style":717},[860],{"type":555,"value":861}," s",{"type":550,"tag":577,"props":863,"children":864},{"style":689},[865],{"type":555,"value":866},".",{"type":550,"tag":577,"props":868,"children":870},{"style":869},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[871],{"type":555,"value":872},"length",{"type":550,"tag":577,"props":874,"children":875},{"style":771},[876],{"type":555,"value":877}," -",{"type":550,"tag":577,"props":879,"children":880},{"style":831},[881],{"type":555,"value":882}," 1",{"type":550,"tag":577,"props":884,"children":885},{"style":689},[886],{"type":555,"value":839},{"type":550,"tag":577,"props":888,"children":890},{"class":579,"line":889},8,[891,896,900,905,910,914,918],{"type":550,"tag":577,"props":892,"children":893},{"style":695},[894],{"type":555,"value":895},"  while",{"type":550,"tag":577,"props":897,"children":898},{"style":689},[899],{"type":555,"value":795},{"type":550,"tag":577,"props":901,"children":902},{"style":717},[903],{"type":555,"value":904},"left",{"type":550,"tag":577,"props":906,"children":907},{"style":689},[908],{"type":555,"value":909}," \u003C",{"type":550,"tag":577,"props":911,"children":912},{"style":717},[913],{"type":555,"value":852},{"type":550,"tag":577,"props":915,"children":916},{"style":689},[917],{"type":555,"value":805},{"type":550,"tag":577,"props":919,"children":920},{"style":689},[921],{"type":555,"value":810},{"type":550,"tag":577,"props":923,"children":925},{"class":579,"line":924},9,[926,931,935,940,944,949,953,957,962,967,971,976,980,984,988,992,996,1000,1004],{"type":550,"tag":577,"props":927,"children":928},{"style":689},[929],{"type":555,"value":930},"    [",{"type":550,"tag":577,"props":932,"children":933},{"style":717},[934],{"type":555,"value":800},{"type":550,"tag":577,"props":936,"children":937},{"style":689},[938],{"type":555,"value":939},"[",{"type":550,"tag":577,"props":941,"children":942},{"style":717},[943],{"type":555,"value":904},{"type":550,"tag":577,"props":945,"children":946},{"style":689},[947],{"type":555,"value":948},"],",{"type":550,"tag":577,"props":950,"children":951},{"style":717},[952],{"type":555,"value":861},{"type":550,"tag":577,"props":954,"children":955},{"style":689},[956],{"type":555,"value":939},{"type":550,"tag":577,"props":958,"children":959},{"style":717},[960],{"type":555,"value":961},"right",{"type":550,"tag":577,"props":963,"children":964},{"style":689},[965],{"type":555,"value":966},"]]",{"type":550,"tag":577,"props":968,"children":969},{"style":689},[970],{"type":555,"value":785},{"type":550,"tag":577,"props":972,"children":973},{"style":689},[974],{"type":555,"value":975}," [",{"type":550,"tag":577,"props":977,"children":978},{"style":717},[979],{"type":555,"value":800},{"type":550,"tag":577,"props":981,"children":982},{"style":689},[983],{"type":555,"value":939},{"type":550,"tag":577,"props":985,"children":986},{"style":717},[987],{"type":555,"value":961},{"type":550,"tag":577,"props":989,"children":990},{"style":689},[991],{"type":555,"value":948},{"type":550,"tag":577,"props":993,"children":994},{"style":717},[995],{"type":555,"value":861},{"type":550,"tag":577,"props":997,"children":998},{"style":689},[999],{"type":555,"value":939},{"type":550,"tag":577,"props":1001,"children":1002},{"style":717},[1003],{"type":555,"value":904},{"type":550,"tag":577,"props":1005,"children":1006},{"style":689},[1007],{"type":555,"value":1008},"]];\n",{"type":550,"tag":577,"props":1010,"children":1012},{"class":579,"line":1011},10,[1013,1018,1023],{"type":550,"tag":577,"props":1014,"children":1015},{"style":717},[1016],{"type":555,"value":1017},"    left",{"type":550,"tag":577,"props":1019,"children":1020},{"style":771},[1021],{"type":555,"value":1022},"++",{"type":550,"tag":577,"props":1024,"children":1025},{"style":689},[1026],{"type":555,"value":839},{"type":550,"tag":577,"props":1028,"children":1030},{"class":579,"line":1029},11,[1031,1036,1041],{"type":550,"tag":577,"props":1032,"children":1033},{"style":717},[1034],{"type":555,"value":1035},"    right",{"type":550,"tag":577,"props":1037,"children":1038},{"style":771},[1039],{"type":555,"value":1040},"--",{"type":550,"tag":577,"props":1042,"children":1043},{"style":689},[1044],{"type":555,"value":839},{"type":550,"tag":577,"props":1046,"children":1048},{"class":579,"line":1047},12,[1049],{"type":550,"tag":577,"props":1050,"children":1051},{"style":689},[1052],{"type":555,"value":1053},"  }\n",{"type":550,"tag":577,"props":1055,"children":1057},{"class":579,"line":1056},13,[1058],{"type":550,"tag":577,"props":1059,"children":1060},{"style":689},[1061],{"type":555,"value":1062},"};\n",{"type":550,"tag":1064,"props":1065,"children":1066},"style",{},[1067],{"type":555,"value":1068},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":767,"depth":767,"links":1070},[1071,1072],{"id":647,"depth":589,"text":647},{"id":652,"depth":589,"text":652,"children":1073},[1074],{"id":658,"depth":723,"text":658},"markdown","content:1.algorithm:3.leetcode:3.major:344.reverse-string.md","content","1.algorithm/3.leetcode/3.major/344.reverse-string.md","md",[1081,1083],{"_path":222,"title":221,"description":1082},"给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。",{"_path":228,"title":227,"description":1084},"给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。",1714099277191]