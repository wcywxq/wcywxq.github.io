[{"data":1,"prerenderedAt":1096},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-string":551,"/algorithm/leetcode/major/reverse-string-surround":1091},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":228,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":227,"description":555,"url":556,"body":557,"_type":1086,"_id":1087,"_source":1088,"_file":1089,"_extension":1090},"major",false,"","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。","https://leetcode.cn/problems/reverse-string",{"type":558,"children":559,"toc":1080},"root",[560,567,572,577,607,612,635,640,655,661,666,672,1074],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":566,"value":576},"示例 1：",{"type":561,"tag":578,"props":579,"children":582},"pre",{"className":580,"code":581,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",[583],{"type":561,"tag":584,"props":585,"children":586},"code",{"__ignoreMap":554},[587,598],{"type":561,"tag":588,"props":589,"children":592},"span",{"class":590,"line":591},"line",1,[593],{"type":561,"tag":588,"props":594,"children":595},{},[596],{"type":566,"value":597},"输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n",{"type":561,"tag":588,"props":599,"children":601},{"class":590,"line":600},2,[602],{"type":561,"tag":588,"props":603,"children":604},{},[605],{"type":566,"value":606},"输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",{"type":561,"tag":562,"props":608,"children":609},{},[610],{"type":566,"value":611},"示例 2：",{"type":561,"tag":578,"props":613,"children":615},{"className":580,"code":614,"language":566,"meta":554,"style":554},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",[616],{"type":561,"tag":584,"props":617,"children":618},{"__ignoreMap":554},[619,627],{"type":561,"tag":588,"props":620,"children":621},{"class":590,"line":591},[622],{"type":561,"tag":588,"props":623,"children":624},{},[625],{"type":566,"value":626},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n",{"type":561,"tag":588,"props":628,"children":629},{"class":590,"line":600},[630],{"type":561,"tag":588,"props":631,"children":632},{},[633],{"type":566,"value":634},"输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",{"type":561,"tag":562,"props":636,"children":637},{},[638],{"type":566,"value":639},"提示：",{"type":561,"tag":641,"props":642,"children":643},"ul",{},[644,650],{"type":561,"tag":645,"props":646,"children":647},"li",{},[648],{"type":566,"value":649},"1 \u003C= s.length \u003C= 10^5",{"type":561,"tag":645,"props":651,"children":652},{},[653],{"type":566,"value":654},"s[i] 都是 ASCII 码表中的可打印字符",{"type":561,"tag":656,"props":657,"children":659},"h2",{"id":658},"解题思路",[660],{"type":566,"value":658},{"type":561,"tag":656,"props":662,"children":664},{"id":663},"实现",[665],{"type":566,"value":663},{"type":561,"tag":667,"props":668,"children":670},"h3",{"id":669},"双指针",[671],{"type":566,"value":669},{"type":561,"tag":578,"props":673,"children":677},{"className":674,"code":675,"language":676,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function (s) {\n  let left = 0;\n  let right = s.length - 1;\n  while (left \u003C right) {\n    [s[left], s[right]] = [s[right], s[left]];\n    left++;\n    right--;\n  }\n};\n","js",[678],{"type":561,"tag":584,"props":679,"children":680},{"__ignoreMap":554},[681,690,732,767,776,822,851,898,933,1020,1038,1056,1065],{"type":561,"tag":588,"props":682,"children":683},{"class":590,"line":591},[684],{"type":561,"tag":588,"props":685,"children":687},{"style":686},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[688],{"type":566,"value":689},"/**\n",{"type":561,"tag":588,"props":691,"children":692},{"class":590,"line":600},[693,698,704,710,715,721,726],{"type":561,"tag":588,"props":694,"children":695},{"style":686},[696],{"type":566,"value":697}," * ",{"type":561,"tag":588,"props":699,"children":701},{"style":700},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[702],{"type":566,"value":703},"@",{"type":561,"tag":588,"props":705,"children":707},{"style":706},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[708],{"type":566,"value":709},"param",{"type":561,"tag":588,"props":711,"children":712},{"style":700},[713],{"type":566,"value":714}," {",{"type":561,"tag":588,"props":716,"children":718},{"style":717},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[719],{"type":566,"value":720},"character[]",{"type":561,"tag":588,"props":722,"children":723},{"style":700},[724],{"type":566,"value":725},"}",{"type":561,"tag":588,"props":727,"children":729},{"style":728},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[730],{"type":566,"value":731}," s\n",{"type":561,"tag":588,"props":733,"children":735},{"class":590,"line":734},3,[736,740,744,749,753,758,762],{"type":561,"tag":588,"props":737,"children":738},{"style":686},[739],{"type":566,"value":697},{"type":561,"tag":588,"props":741,"children":742},{"style":700},[743],{"type":566,"value":703},{"type":561,"tag":588,"props":745,"children":746},{"style":706},[747],{"type":566,"value":748},"return",{"type":561,"tag":588,"props":750,"children":751},{"style":700},[752],{"type":566,"value":714},{"type":561,"tag":588,"props":754,"children":755},{"style":717},[756],{"type":566,"value":757},"void",{"type":561,"tag":588,"props":759,"children":760},{"style":700},[761],{"type":566,"value":725},{"type":561,"tag":588,"props":763,"children":764},{"style":686},[765],{"type":566,"value":766}," Do not return anything, modify s in-place instead.\n",{"type":561,"tag":588,"props":768,"children":770},{"class":590,"line":769},4,[771],{"type":561,"tag":588,"props":772,"children":773},{"style":686},[774],{"type":566,"value":775}," */\n",{"type":561,"tag":588,"props":777,"children":779},{"class":590,"line":778},5,[780,786,792,797,802,807,812,817],{"type":561,"tag":588,"props":781,"children":783},{"style":782},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[784],{"type":566,"value":785},"var",{"type":561,"tag":588,"props":787,"children":789},{"style":788},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[790],{"type":566,"value":791}," reverseString",{"type":561,"tag":588,"props":793,"children":794},{"style":700},[795],{"type":566,"value":796}," =",{"type":561,"tag":588,"props":798,"children":799},{"style":782},[800],{"type":566,"value":801}," function",{"type":561,"tag":588,"props":803,"children":804},{"style":700},[805],{"type":566,"value":806}," (",{"type":561,"tag":588,"props":808,"children":809},{"style":728},[810],{"type":566,"value":811},"s",{"type":561,"tag":588,"props":813,"children":814},{"style":700},[815],{"type":566,"value":816},")",{"type":561,"tag":588,"props":818,"children":819},{"style":700},[820],{"type":566,"value":821}," {\n",{"type":561,"tag":588,"props":823,"children":825},{"class":590,"line":824},6,[826,831,836,840,846],{"type":561,"tag":588,"props":827,"children":828},{"style":782},[829],{"type":566,"value":830},"  let",{"type":561,"tag":588,"props":832,"children":833},{"style":728},[834],{"type":566,"value":835}," left",{"type":561,"tag":588,"props":837,"children":838},{"style":700},[839],{"type":566,"value":796},{"type":561,"tag":588,"props":841,"children":843},{"style":842},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[844],{"type":566,"value":845}," 0",{"type":561,"tag":588,"props":847,"children":848},{"style":700},[849],{"type":566,"value":850},";\n",{"type":561,"tag":588,"props":852,"children":854},{"class":590,"line":853},7,[855,859,864,868,873,878,884,889,894],{"type":561,"tag":588,"props":856,"children":857},{"style":782},[858],{"type":566,"value":830},{"type":561,"tag":588,"props":860,"children":861},{"style":728},[862],{"type":566,"value":863}," right",{"type":561,"tag":588,"props":865,"children":866},{"style":700},[867],{"type":566,"value":796},{"type":561,"tag":588,"props":869,"children":870},{"style":728},[871],{"type":566,"value":872}," s",{"type":561,"tag":588,"props":874,"children":875},{"style":700},[876],{"type":566,"value":877},".",{"type":561,"tag":588,"props":879,"children":881},{"style":880},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[882],{"type":566,"value":883},"length",{"type":561,"tag":588,"props":885,"children":886},{"style":782},[887],{"type":566,"value":888}," -",{"type":561,"tag":588,"props":890,"children":891},{"style":842},[892],{"type":566,"value":893}," 1",{"type":561,"tag":588,"props":895,"children":896},{"style":700},[897],{"type":566,"value":850},{"type":561,"tag":588,"props":899,"children":901},{"class":590,"line":900},8,[902,907,911,916,921,925,929],{"type":561,"tag":588,"props":903,"children":904},{"style":706},[905],{"type":566,"value":906},"  while",{"type":561,"tag":588,"props":908,"children":909},{"style":700},[910],{"type":566,"value":806},{"type":561,"tag":588,"props":912,"children":913},{"style":728},[914],{"type":566,"value":915},"left",{"type":561,"tag":588,"props":917,"children":918},{"style":700},[919],{"type":566,"value":920}," \u003C",{"type":561,"tag":588,"props":922,"children":923},{"style":728},[924],{"type":566,"value":863},{"type":561,"tag":588,"props":926,"children":927},{"style":700},[928],{"type":566,"value":816},{"type":561,"tag":588,"props":930,"children":931},{"style":700},[932],{"type":566,"value":821},{"type":561,"tag":588,"props":934,"children":936},{"class":590,"line":935},9,[937,942,946,951,955,960,964,968,973,978,982,987,991,995,999,1003,1007,1011,1015],{"type":561,"tag":588,"props":938,"children":939},{"style":700},[940],{"type":566,"value":941},"    [",{"type":561,"tag":588,"props":943,"children":944},{"style":728},[945],{"type":566,"value":811},{"type":561,"tag":588,"props":947,"children":948},{"style":700},[949],{"type":566,"value":950},"[",{"type":561,"tag":588,"props":952,"children":953},{"style":728},[954],{"type":566,"value":915},{"type":561,"tag":588,"props":956,"children":957},{"style":700},[958],{"type":566,"value":959},"],",{"type":561,"tag":588,"props":961,"children":962},{"style":728},[963],{"type":566,"value":872},{"type":561,"tag":588,"props":965,"children":966},{"style":700},[967],{"type":566,"value":950},{"type":561,"tag":588,"props":969,"children":970},{"style":728},[971],{"type":566,"value":972},"right",{"type":561,"tag":588,"props":974,"children":975},{"style":700},[976],{"type":566,"value":977},"]]",{"type":561,"tag":588,"props":979,"children":980},{"style":700},[981],{"type":566,"value":796},{"type":561,"tag":588,"props":983,"children":984},{"style":700},[985],{"type":566,"value":986}," [",{"type":561,"tag":588,"props":988,"children":989},{"style":728},[990],{"type":566,"value":811},{"type":561,"tag":588,"props":992,"children":993},{"style":700},[994],{"type":566,"value":950},{"type":561,"tag":588,"props":996,"children":997},{"style":728},[998],{"type":566,"value":972},{"type":561,"tag":588,"props":1000,"children":1001},{"style":700},[1002],{"type":566,"value":959},{"type":561,"tag":588,"props":1004,"children":1005},{"style":728},[1006],{"type":566,"value":872},{"type":561,"tag":588,"props":1008,"children":1009},{"style":700},[1010],{"type":566,"value":950},{"type":561,"tag":588,"props":1012,"children":1013},{"style":728},[1014],{"type":566,"value":915},{"type":561,"tag":588,"props":1016,"children":1017},{"style":700},[1018],{"type":566,"value":1019},"]];\n",{"type":561,"tag":588,"props":1021,"children":1023},{"class":590,"line":1022},10,[1024,1029,1034],{"type":561,"tag":588,"props":1025,"children":1026},{"style":728},[1027],{"type":566,"value":1028},"    left",{"type":561,"tag":588,"props":1030,"children":1031},{"style":782},[1032],{"type":566,"value":1033},"++",{"type":561,"tag":588,"props":1035,"children":1036},{"style":700},[1037],{"type":566,"value":850},{"type":561,"tag":588,"props":1039,"children":1041},{"class":590,"line":1040},11,[1042,1047,1052],{"type":561,"tag":588,"props":1043,"children":1044},{"style":728},[1045],{"type":566,"value":1046},"    right",{"type":561,"tag":588,"props":1048,"children":1049},{"style":782},[1050],{"type":566,"value":1051},"--",{"type":561,"tag":588,"props":1053,"children":1054},{"style":700},[1055],{"type":566,"value":850},{"type":561,"tag":588,"props":1057,"children":1059},{"class":590,"line":1058},12,[1060],{"type":561,"tag":588,"props":1061,"children":1062},{"style":700},[1063],{"type":566,"value":1064},"  }\n",{"type":561,"tag":588,"props":1066,"children":1068},{"class":590,"line":1067},13,[1069],{"type":561,"tag":588,"props":1070,"children":1071},{"style":700},[1072],{"type":566,"value":1073},"};\n",{"type":561,"tag":1075,"props":1076,"children":1077},"style",{},[1078],{"type":566,"value":1079},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":778,"depth":778,"links":1081},[1082,1083],{"id":658,"depth":600,"text":658},{"id":663,"depth":600,"text":663,"children":1084},[1085],{"id":669,"depth":734,"text":669},"markdown","content:1.algorithm:3.leetcode:3.major:344.reverse-string.md","content","1.algorithm/3.leetcode/3.major/344.reverse-string.md","md",[1092,1094],{"_path":225,"title":224,"description":1093},"给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。",{"_path":231,"title":230,"description":1095},"给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。",1715094972318]