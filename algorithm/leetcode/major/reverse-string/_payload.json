[{"data":1,"prerenderedAt":989},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-string":457,"/algorithm/leetcode/major/reverse-string-surround":984},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":216,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":215,"description":461,"url":462,"body":463,"_type":979,"_id":980,"_source":981,"_file":982,"_extension":983},"major",false,"","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。","https://leetcode.cn/problems/reverse-string",{"type":464,"children":465,"toc":973},"root",[466,473,478,483,513,518,541,546,561,567,572,578,967],{"type":467,"tag":468,"props":469,"children":470},"element","p",{},[471],{"type":472,"value":461},"text",{"type":467,"tag":468,"props":474,"children":475},{},[476],{"type":472,"value":477},"不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。",{"type":467,"tag":468,"props":479,"children":480},{},[481],{"type":472,"value":482},"示例 1：",{"type":467,"tag":484,"props":485,"children":488},"pre",{"className":486,"code":487,"language":472,"meta":460,"style":460},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",[489],{"type":467,"tag":490,"props":491,"children":492},"code",{"__ignoreMap":460},[493,504],{"type":467,"tag":494,"props":495,"children":498},"span",{"class":496,"line":497},"line",1,[499],{"type":467,"tag":494,"props":500,"children":501},{},[502],{"type":472,"value":503},"输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n",{"type":467,"tag":494,"props":505,"children":507},{"class":496,"line":506},2,[508],{"type":467,"tag":494,"props":509,"children":510},{},[511],{"type":472,"value":512},"输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",{"type":467,"tag":468,"props":514,"children":515},{},[516],{"type":472,"value":517},"示例 2：",{"type":467,"tag":484,"props":519,"children":521},{"className":486,"code":520,"language":472,"meta":460,"style":460},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",[522],{"type":467,"tag":490,"props":523,"children":524},{"__ignoreMap":460},[525,533],{"type":467,"tag":494,"props":526,"children":527},{"class":496,"line":497},[528],{"type":467,"tag":494,"props":529,"children":530},{},[531],{"type":472,"value":532},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n",{"type":467,"tag":494,"props":534,"children":535},{"class":496,"line":506},[536],{"type":467,"tag":494,"props":537,"children":538},{},[539],{"type":472,"value":540},"输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",{"type":467,"tag":468,"props":542,"children":543},{},[544],{"type":472,"value":545},"提示：",{"type":467,"tag":547,"props":548,"children":549},"ul",{},[550,556],{"type":467,"tag":551,"props":552,"children":553},"li",{},[554],{"type":472,"value":555},"1 \u003C= s.length \u003C= 10^5",{"type":467,"tag":551,"props":557,"children":558},{},[559],{"type":472,"value":560},"s[i] 都是 ASCII 码表中的可打印字符",{"type":467,"tag":562,"props":563,"children":565},"h2",{"id":564},"解题思路",[566],{"type":472,"value":564},{"type":467,"tag":562,"props":568,"children":570},{"id":569},"实现",[571],{"type":472,"value":569},{"type":467,"tag":573,"props":574,"children":576},"h3",{"id":575},"双指针",[577],{"type":472,"value":575},{"type":467,"tag":484,"props":579,"children":583},{"className":580,"code":581,"language":582,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function (s) {\n  let left = 0;\n  let right = s.length - 1;\n  while (left \u003C right) {\n    [s[left], s[right]] = [s[right], s[left]];\n    left++;\n    right--;\n  }\n};\n","js",[584],{"type":467,"tag":490,"props":585,"children":586},{"__ignoreMap":460},[587,596,622,645,654,698,729,776,808,909,927,945,954],{"type":467,"tag":494,"props":588,"children":589},{"class":496,"line":497},[590],{"type":467,"tag":494,"props":591,"children":593},{"style":592},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[594],{"type":472,"value":595},"/**\n",{"type":467,"tag":494,"props":597,"children":598},{"class":496,"line":506},[599,604,610,616],{"type":467,"tag":494,"props":600,"children":601},{"style":592},[602],{"type":472,"value":603}," * ",{"type":467,"tag":494,"props":605,"children":607},{"style":606},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[608],{"type":472,"value":609},"@param",{"type":467,"tag":494,"props":611,"children":613},{"style":612},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[614],{"type":472,"value":615}," {character[]}",{"type":467,"tag":494,"props":617,"children":619},{"style":618},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[620],{"type":472,"value":621}," s\n",{"type":467,"tag":494,"props":623,"children":625},{"class":496,"line":624},3,[626,630,635,640],{"type":467,"tag":494,"props":627,"children":628},{"style":592},[629],{"type":472,"value":603},{"type":467,"tag":494,"props":631,"children":632},{"style":606},[633],{"type":472,"value":634},"@return",{"type":467,"tag":494,"props":636,"children":637},{"style":612},[638],{"type":472,"value":639}," {void}",{"type":467,"tag":494,"props":641,"children":642},{"style":592},[643],{"type":472,"value":644}," Do not return anything, modify s in-place instead.\n",{"type":467,"tag":494,"props":646,"children":648},{"class":496,"line":647},4,[649],{"type":467,"tag":494,"props":650,"children":651},{"style":592},[652],{"type":472,"value":653}," */\n",{"type":467,"tag":494,"props":655,"children":657},{"class":496,"line":656},5,[658,664,670,676,681,687,693],{"type":467,"tag":494,"props":659,"children":661},{"style":660},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[662],{"type":472,"value":663},"var",{"type":467,"tag":494,"props":665,"children":667},{"style":666},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[668],{"type":472,"value":669}," reverseString",{"type":467,"tag":494,"props":671,"children":673},{"style":672},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[674],{"type":472,"value":675}," =",{"type":467,"tag":494,"props":677,"children":678},{"style":660},[679],{"type":472,"value":680}," function",{"type":467,"tag":494,"props":682,"children":684},{"style":683},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[685],{"type":472,"value":686}," (",{"type":467,"tag":494,"props":688,"children":690},{"style":689},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[691],{"type":472,"value":692},"s",{"type":467,"tag":494,"props":694,"children":695},{"style":683},[696],{"type":472,"value":697},") {\n",{"type":467,"tag":494,"props":699,"children":701},{"class":496,"line":700},6,[702,707,713,717,723],{"type":467,"tag":494,"props":703,"children":704},{"style":660},[705],{"type":472,"value":706},"  let",{"type":467,"tag":494,"props":708,"children":710},{"style":709},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[711],{"type":472,"value":712}," left",{"type":467,"tag":494,"props":714,"children":715},{"style":672},[716],{"type":472,"value":675},{"type":467,"tag":494,"props":718,"children":720},{"style":719},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[721],{"type":472,"value":722}," 0",{"type":467,"tag":494,"props":724,"children":726},{"style":725},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[727],{"type":472,"value":728},";\n",{"type":467,"tag":494,"props":730,"children":732},{"class":496,"line":731},7,[733,737,742,746,751,757,762,767,772],{"type":467,"tag":494,"props":734,"children":735},{"style":660},[736],{"type":472,"value":706},{"type":467,"tag":494,"props":738,"children":739},{"style":709},[740],{"type":472,"value":741}," right",{"type":467,"tag":494,"props":743,"children":744},{"style":672},[745],{"type":472,"value":675},{"type":467,"tag":494,"props":747,"children":748},{"style":709},[749],{"type":472,"value":750}," s",{"type":467,"tag":494,"props":752,"children":754},{"style":753},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[755],{"type":472,"value":756},".",{"type":467,"tag":494,"props":758,"children":759},{"style":683},[760],{"type":472,"value":761},"length ",{"type":467,"tag":494,"props":763,"children":764},{"style":672},[765],{"type":472,"value":766},"-",{"type":467,"tag":494,"props":768,"children":769},{"style":719},[770],{"type":472,"value":771}," 1",{"type":467,"tag":494,"props":773,"children":774},{"style":725},[775],{"type":472,"value":728},{"type":467,"tag":494,"props":777,"children":779},{"class":496,"line":778},8,[780,786,790,795,800,804],{"type":467,"tag":494,"props":781,"children":783},{"style":782},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[784],{"type":472,"value":785},"  while",{"type":467,"tag":494,"props":787,"children":788},{"style":683},[789],{"type":472,"value":686},{"type":467,"tag":494,"props":791,"children":792},{"style":709},[793],{"type":472,"value":794},"left",{"type":467,"tag":494,"props":796,"children":797},{"style":672},[798],{"type":472,"value":799}," \u003C",{"type":467,"tag":494,"props":801,"children":802},{"style":709},[803],{"type":472,"value":741},{"type":467,"tag":494,"props":805,"children":806},{"style":683},[807],{"type":472,"value":697},{"type":467,"tag":494,"props":809,"children":811},{"class":496,"line":810},9,[812,817,821,826,830,835,840,844,848,853,858,863,868,872,876,880,884,888,892,896,900,905],{"type":467,"tag":494,"props":813,"children":814},{"style":683},[815],{"type":472,"value":816},"    [",{"type":467,"tag":494,"props":818,"children":819},{"style":709},[820],{"type":472,"value":692},{"type":467,"tag":494,"props":822,"children":823},{"style":683},[824],{"type":472,"value":825},"[",{"type":467,"tag":494,"props":827,"children":828},{"style":709},[829],{"type":472,"value":794},{"type":467,"tag":494,"props":831,"children":832},{"style":683},[833],{"type":472,"value":834},"]",{"type":467,"tag":494,"props":836,"children":837},{"style":725},[838],{"type":472,"value":839},",",{"type":467,"tag":494,"props":841,"children":842},{"style":709},[843],{"type":472,"value":750},{"type":467,"tag":494,"props":845,"children":846},{"style":683},[847],{"type":472,"value":825},{"type":467,"tag":494,"props":849,"children":850},{"style":709},[851],{"type":472,"value":852},"right",{"type":467,"tag":494,"props":854,"children":855},{"style":683},[856],{"type":472,"value":857},"]] ",{"type":467,"tag":494,"props":859,"children":860},{"style":672},[861],{"type":472,"value":862},"=",{"type":467,"tag":494,"props":864,"children":865},{"style":683},[866],{"type":472,"value":867}," [",{"type":467,"tag":494,"props":869,"children":870},{"style":709},[871],{"type":472,"value":692},{"type":467,"tag":494,"props":873,"children":874},{"style":683},[875],{"type":472,"value":825},{"type":467,"tag":494,"props":877,"children":878},{"style":709},[879],{"type":472,"value":852},{"type":467,"tag":494,"props":881,"children":882},{"style":683},[883],{"type":472,"value":834},{"type":467,"tag":494,"props":885,"children":886},{"style":725},[887],{"type":472,"value":839},{"type":467,"tag":494,"props":889,"children":890},{"style":709},[891],{"type":472,"value":750},{"type":467,"tag":494,"props":893,"children":894},{"style":683},[895],{"type":472,"value":825},{"type":467,"tag":494,"props":897,"children":898},{"style":709},[899],{"type":472,"value":794},{"type":467,"tag":494,"props":901,"children":902},{"style":683},[903],{"type":472,"value":904},"]]",{"type":467,"tag":494,"props":906,"children":907},{"style":725},[908],{"type":472,"value":728},{"type":467,"tag":494,"props":910,"children":912},{"class":496,"line":911},10,[913,918,923],{"type":467,"tag":494,"props":914,"children":915},{"style":709},[916],{"type":472,"value":917},"    left",{"type":467,"tag":494,"props":919,"children":920},{"style":672},[921],{"type":472,"value":922},"++",{"type":467,"tag":494,"props":924,"children":925},{"style":725},[926],{"type":472,"value":728},{"type":467,"tag":494,"props":928,"children":930},{"class":496,"line":929},11,[931,936,941],{"type":467,"tag":494,"props":932,"children":933},{"style":709},[934],{"type":472,"value":935},"    right",{"type":467,"tag":494,"props":937,"children":938},{"style":672},[939],{"type":472,"value":940},"--",{"type":467,"tag":494,"props":942,"children":943},{"style":725},[944],{"type":472,"value":728},{"type":467,"tag":494,"props":946,"children":948},{"class":496,"line":947},12,[949],{"type":467,"tag":494,"props":950,"children":951},{"style":683},[952],{"type":472,"value":953},"  }\n",{"type":467,"tag":494,"props":955,"children":957},{"class":496,"line":956},13,[958,963],{"type":467,"tag":494,"props":959,"children":960},{"style":683},[961],{"type":472,"value":962},"}",{"type":467,"tag":494,"props":964,"children":965},{"style":725},[966],{"type":472,"value":728},{"type":467,"tag":968,"props":969,"children":970},"style",{},[971],{"type":472,"value":972},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":656,"depth":656,"links":974},[975,976],{"id":564,"depth":506,"text":564},{"id":569,"depth":506,"text":569,"children":977},[978],{"id":575,"depth":624,"text":575},"markdown","content:1.algorithm:3.leetcode:3.major:344.reverse-string.md","content","1.algorithm/3.leetcode/3.major/344.reverse-string.md","md",[985,987],{"_path":213,"title":212,"description":986},"给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。",{"_path":219,"title":218,"description":988},"给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。",1713597607925]