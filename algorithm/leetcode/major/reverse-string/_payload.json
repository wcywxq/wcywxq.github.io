[{"data":1,"prerenderedAt":1069},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-string":524,"/algorithm/leetcode/major/reverse-string-surround":1064},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":225,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":224,"description":528,"url":529,"body":530,"_type":1059,"_id":1060,"_source":1061,"_file":1062,"_extension":1063},"major",false,"","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。","https://leetcode.cn/problems/reverse-string",{"type":531,"children":532,"toc":1053},"root",[533,540,545,550,580,585,608,613,628,634,639,645,1047],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":539,"value":549},"示例 1：",{"type":534,"tag":551,"props":552,"children":555},"pre",{"className":553,"code":554,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",[556],{"type":534,"tag":557,"props":558,"children":559},"code",{"__ignoreMap":527},[560,571],{"type":534,"tag":561,"props":562,"children":565},"span",{"class":563,"line":564},"line",1,[566],{"type":534,"tag":561,"props":567,"children":568},{},[569],{"type":539,"value":570},"输入：s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\n",{"type":534,"tag":561,"props":572,"children":574},{"class":563,"line":573},2,[575],{"type":534,"tag":561,"props":576,"children":577},{},[578],{"type":539,"value":579},"输出：[\"o\",\"l\",\"l\",\"e\",\"h\"]\n",{"type":534,"tag":535,"props":581,"children":582},{},[583],{"type":539,"value":584},"示例 2：",{"type":534,"tag":551,"props":586,"children":588},{"className":553,"code":587,"language":539,"meta":527,"style":527},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",[589],{"type":534,"tag":557,"props":590,"children":591},{"__ignoreMap":527},[592,600],{"type":534,"tag":561,"props":593,"children":594},{"class":563,"line":564},[595],{"type":534,"tag":561,"props":596,"children":597},{},[598],{"type":539,"value":599},"输入：s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n",{"type":534,"tag":561,"props":601,"children":602},{"class":563,"line":573},[603],{"type":534,"tag":561,"props":604,"children":605},{},[606],{"type":539,"value":607},"输出：[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n",{"type":534,"tag":535,"props":609,"children":610},{},[611],{"type":539,"value":612},"提示：",{"type":534,"tag":614,"props":615,"children":616},"ul",{},[617,623],{"type":534,"tag":618,"props":619,"children":620},"li",{},[621],{"type":539,"value":622},"1 \u003C= s.length \u003C= 10^5",{"type":534,"tag":618,"props":624,"children":625},{},[626],{"type":539,"value":627},"s[i] 都是 ASCII 码表中的可打印字符",{"type":534,"tag":629,"props":630,"children":632},"h2",{"id":631},"解题思路",[633],{"type":539,"value":631},{"type":534,"tag":629,"props":635,"children":637},{"id":636},"实现",[638],{"type":539,"value":636},{"type":534,"tag":640,"props":641,"children":643},"h3",{"id":642},"双指针",[644],{"type":539,"value":642},{"type":534,"tag":551,"props":646,"children":650},{"className":647,"code":648,"language":649,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function (s) {\n  let left = 0;\n  let right = s.length - 1;\n  while (left \u003C right) {\n    [s[left], s[right]] = [s[right], s[left]];\n    left++;\n    right--;\n  }\n};\n","js",[651],{"type":534,"tag":557,"props":652,"children":653},{"__ignoreMap":527},[654,663,705,740,749,795,824,871,906,993,1011,1029,1038],{"type":534,"tag":561,"props":655,"children":656},{"class":563,"line":564},[657],{"type":534,"tag":561,"props":658,"children":660},{"style":659},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[661],{"type":539,"value":662},"/**\n",{"type":534,"tag":561,"props":664,"children":665},{"class":563,"line":573},[666,671,677,683,688,694,699],{"type":534,"tag":561,"props":667,"children":668},{"style":659},[669],{"type":539,"value":670}," * ",{"type":534,"tag":561,"props":672,"children":674},{"style":673},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[675],{"type":539,"value":676},"@",{"type":534,"tag":561,"props":678,"children":680},{"style":679},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[681],{"type":539,"value":682},"param",{"type":534,"tag":561,"props":684,"children":685},{"style":673},[686],{"type":539,"value":687}," {",{"type":534,"tag":561,"props":689,"children":691},{"style":690},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[692],{"type":539,"value":693},"character[]",{"type":534,"tag":561,"props":695,"children":696},{"style":673},[697],{"type":539,"value":698},"}",{"type":534,"tag":561,"props":700,"children":702},{"style":701},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[703],{"type":539,"value":704}," s\n",{"type":534,"tag":561,"props":706,"children":708},{"class":563,"line":707},3,[709,713,717,722,726,731,735],{"type":534,"tag":561,"props":710,"children":711},{"style":659},[712],{"type":539,"value":670},{"type":534,"tag":561,"props":714,"children":715},{"style":673},[716],{"type":539,"value":676},{"type":534,"tag":561,"props":718,"children":719},{"style":679},[720],{"type":539,"value":721},"return",{"type":534,"tag":561,"props":723,"children":724},{"style":673},[725],{"type":539,"value":687},{"type":534,"tag":561,"props":727,"children":728},{"style":690},[729],{"type":539,"value":730},"void",{"type":534,"tag":561,"props":732,"children":733},{"style":673},[734],{"type":539,"value":698},{"type":534,"tag":561,"props":736,"children":737},{"style":659},[738],{"type":539,"value":739}," Do not return anything, modify s in-place instead.\n",{"type":534,"tag":561,"props":741,"children":743},{"class":563,"line":742},4,[744],{"type":534,"tag":561,"props":745,"children":746},{"style":659},[747],{"type":539,"value":748}," */\n",{"type":534,"tag":561,"props":750,"children":752},{"class":563,"line":751},5,[753,759,765,770,775,780,785,790],{"type":534,"tag":561,"props":754,"children":756},{"style":755},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[757],{"type":539,"value":758},"var",{"type":534,"tag":561,"props":760,"children":762},{"style":761},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[763],{"type":539,"value":764}," reverseString",{"type":534,"tag":561,"props":766,"children":767},{"style":673},[768],{"type":539,"value":769}," =",{"type":534,"tag":561,"props":771,"children":772},{"style":755},[773],{"type":539,"value":774}," function",{"type":534,"tag":561,"props":776,"children":777},{"style":673},[778],{"type":539,"value":779}," (",{"type":534,"tag":561,"props":781,"children":782},{"style":701},[783],{"type":539,"value":784},"s",{"type":534,"tag":561,"props":786,"children":787},{"style":673},[788],{"type":539,"value":789},")",{"type":534,"tag":561,"props":791,"children":792},{"style":673},[793],{"type":539,"value":794}," {\n",{"type":534,"tag":561,"props":796,"children":798},{"class":563,"line":797},6,[799,804,809,813,819],{"type":534,"tag":561,"props":800,"children":801},{"style":755},[802],{"type":539,"value":803},"  let",{"type":534,"tag":561,"props":805,"children":806},{"style":701},[807],{"type":539,"value":808}," left",{"type":534,"tag":561,"props":810,"children":811},{"style":673},[812],{"type":539,"value":769},{"type":534,"tag":561,"props":814,"children":816},{"style":815},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[817],{"type":539,"value":818}," 0",{"type":534,"tag":561,"props":820,"children":821},{"style":673},[822],{"type":539,"value":823},";\n",{"type":534,"tag":561,"props":825,"children":827},{"class":563,"line":826},7,[828,832,837,841,846,851,857,862,867],{"type":534,"tag":561,"props":829,"children":830},{"style":755},[831],{"type":539,"value":803},{"type":534,"tag":561,"props":833,"children":834},{"style":701},[835],{"type":539,"value":836}," right",{"type":534,"tag":561,"props":838,"children":839},{"style":673},[840],{"type":539,"value":769},{"type":534,"tag":561,"props":842,"children":843},{"style":701},[844],{"type":539,"value":845}," s",{"type":534,"tag":561,"props":847,"children":848},{"style":673},[849],{"type":539,"value":850},".",{"type":534,"tag":561,"props":852,"children":854},{"style":853},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[855],{"type":539,"value":856},"length",{"type":534,"tag":561,"props":858,"children":859},{"style":755},[860],{"type":539,"value":861}," -",{"type":534,"tag":561,"props":863,"children":864},{"style":815},[865],{"type":539,"value":866}," 1",{"type":534,"tag":561,"props":868,"children":869},{"style":673},[870],{"type":539,"value":823},{"type":534,"tag":561,"props":872,"children":874},{"class":563,"line":873},8,[875,880,884,889,894,898,902],{"type":534,"tag":561,"props":876,"children":877},{"style":679},[878],{"type":539,"value":879},"  while",{"type":534,"tag":561,"props":881,"children":882},{"style":673},[883],{"type":539,"value":779},{"type":534,"tag":561,"props":885,"children":886},{"style":701},[887],{"type":539,"value":888},"left",{"type":534,"tag":561,"props":890,"children":891},{"style":673},[892],{"type":539,"value":893}," \u003C",{"type":534,"tag":561,"props":895,"children":896},{"style":701},[897],{"type":539,"value":836},{"type":534,"tag":561,"props":899,"children":900},{"style":673},[901],{"type":539,"value":789},{"type":534,"tag":561,"props":903,"children":904},{"style":673},[905],{"type":539,"value":794},{"type":534,"tag":561,"props":907,"children":909},{"class":563,"line":908},9,[910,915,919,924,928,933,937,941,946,951,955,960,964,968,972,976,980,984,988],{"type":534,"tag":561,"props":911,"children":912},{"style":673},[913],{"type":539,"value":914},"    [",{"type":534,"tag":561,"props":916,"children":917},{"style":701},[918],{"type":539,"value":784},{"type":534,"tag":561,"props":920,"children":921},{"style":673},[922],{"type":539,"value":923},"[",{"type":534,"tag":561,"props":925,"children":926},{"style":701},[927],{"type":539,"value":888},{"type":534,"tag":561,"props":929,"children":930},{"style":673},[931],{"type":539,"value":932},"],",{"type":534,"tag":561,"props":934,"children":935},{"style":701},[936],{"type":539,"value":845},{"type":534,"tag":561,"props":938,"children":939},{"style":673},[940],{"type":539,"value":923},{"type":534,"tag":561,"props":942,"children":943},{"style":701},[944],{"type":539,"value":945},"right",{"type":534,"tag":561,"props":947,"children":948},{"style":673},[949],{"type":539,"value":950},"]]",{"type":534,"tag":561,"props":952,"children":953},{"style":673},[954],{"type":539,"value":769},{"type":534,"tag":561,"props":956,"children":957},{"style":673},[958],{"type":539,"value":959}," [",{"type":534,"tag":561,"props":961,"children":962},{"style":701},[963],{"type":539,"value":784},{"type":534,"tag":561,"props":965,"children":966},{"style":673},[967],{"type":539,"value":923},{"type":534,"tag":561,"props":969,"children":970},{"style":701},[971],{"type":539,"value":945},{"type":534,"tag":561,"props":973,"children":974},{"style":673},[975],{"type":539,"value":932},{"type":534,"tag":561,"props":977,"children":978},{"style":701},[979],{"type":539,"value":845},{"type":534,"tag":561,"props":981,"children":982},{"style":673},[983],{"type":539,"value":923},{"type":534,"tag":561,"props":985,"children":986},{"style":701},[987],{"type":539,"value":888},{"type":534,"tag":561,"props":989,"children":990},{"style":673},[991],{"type":539,"value":992},"]];\n",{"type":534,"tag":561,"props":994,"children":996},{"class":563,"line":995},10,[997,1002,1007],{"type":534,"tag":561,"props":998,"children":999},{"style":701},[1000],{"type":539,"value":1001},"    left",{"type":534,"tag":561,"props":1003,"children":1004},{"style":755},[1005],{"type":539,"value":1006},"++",{"type":534,"tag":561,"props":1008,"children":1009},{"style":673},[1010],{"type":539,"value":823},{"type":534,"tag":561,"props":1012,"children":1014},{"class":563,"line":1013},11,[1015,1020,1025],{"type":534,"tag":561,"props":1016,"children":1017},{"style":701},[1018],{"type":539,"value":1019},"    right",{"type":534,"tag":561,"props":1021,"children":1022},{"style":755},[1023],{"type":539,"value":1024},"--",{"type":534,"tag":561,"props":1026,"children":1027},{"style":673},[1028],{"type":539,"value":823},{"type":534,"tag":561,"props":1030,"children":1032},{"class":563,"line":1031},12,[1033],{"type":534,"tag":561,"props":1034,"children":1035},{"style":673},[1036],{"type":539,"value":1037},"  }\n",{"type":534,"tag":561,"props":1039,"children":1041},{"class":563,"line":1040},13,[1042],{"type":534,"tag":561,"props":1043,"children":1044},{"style":673},[1045],{"type":539,"value":1046},"};\n",{"type":534,"tag":1048,"props":1049,"children":1050},"style",{},[1051],{"type":539,"value":1052},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":751,"depth":751,"links":1054},[1055,1056],{"id":631,"depth":573,"text":631},{"id":636,"depth":573,"text":636,"children":1057},[1058],{"id":642,"depth":707,"text":642},"markdown","content:1.algorithm:3.leetcode:3.major:344.reverse-string.md","content","1.algorithm/3.leetcode/3.major/344.reverse-string.md","md",[1065,1067],{"_path":222,"title":221,"description":1066},"给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。",{"_path":228,"title":227,"description":1068},"给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。",1714096145403]