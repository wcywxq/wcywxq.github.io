[{"data":1,"prerenderedAt":1353},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/generate-parentheses":460,"/algorithm/leetcode/major/generate-parentheses-surround":1348},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":87,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":86,"description":464,"url":465,"body":466,"_type":1343,"_id":1344,"_source":1345,"_file":1346,"_extension":1347},"major",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":467,"children":468,"toc":1337},"root",[469,476,481,511,516,539,544,554,560,565,578,583,589,1331],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"示例 1：",{"type":470,"tag":482,"props":483,"children":486},"pre",{"className":484,"code":485,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[487],{"type":470,"tag":488,"props":489,"children":490},"code",{"__ignoreMap":463},[491,502],{"type":470,"tag":492,"props":493,"children":496},"span",{"class":494,"line":495},"line",1,[497],{"type":470,"tag":492,"props":498,"children":499},{},[500],{"type":475,"value":501},"输入：n = 3\n",{"type":470,"tag":492,"props":503,"children":505},{"class":494,"line":504},2,[506],{"type":470,"tag":492,"props":507,"children":508},{},[509],{"type":475,"value":510},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":470,"tag":471,"props":512,"children":513},{},[514],{"type":475,"value":515},"示例 2：",{"type":470,"tag":482,"props":517,"children":519},{"className":484,"code":518,"language":475,"meta":463,"style":463},"输入：n = 1\n输出：[\"()\"]\n",[520],{"type":470,"tag":488,"props":521,"children":522},{"__ignoreMap":463},[523,531],{"type":470,"tag":492,"props":524,"children":525},{"class":494,"line":495},[526],{"type":470,"tag":492,"props":527,"children":528},{},[529],{"type":475,"value":530},"输入：n = 1\n",{"type":470,"tag":492,"props":532,"children":533},{"class":494,"line":504},[534],{"type":470,"tag":492,"props":535,"children":536},{},[537],{"type":475,"value":538},"输出：[\"()\"]\n",{"type":470,"tag":471,"props":540,"children":541},{},[542],{"type":475,"value":543},"提示：",{"type":470,"tag":545,"props":546,"children":547},"ul",{},[548],{"type":470,"tag":549,"props":550,"children":551},"li",{},[552],{"type":475,"value":553},"1 \u003C= n \u003C= 8",{"type":470,"tag":555,"props":556,"children":558},"h2",{"id":557},"解题思路",[559],{"type":475,"value":557},{"type":470,"tag":471,"props":561,"children":562},{},[563],{"type":475,"value":564},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":470,"tag":545,"props":566,"children":567},{},[568,573],{"type":470,"tag":549,"props":569,"children":570},{},[571],{"type":475,"value":572},"左括号数目 = 右括号数目",{"type":470,"tag":549,"props":574,"children":575},{},[576],{"type":475,"value":577},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":470,"tag":555,"props":579,"children":581},{"id":580},"实现",[582],{"type":475,"value":580},{"type":470,"tag":584,"props":585,"children":587},"h3",{"id":586},"回溯",[588],{"type":475,"value":586},{"type":470,"tag":482,"props":590,"children":594},{"className":591,"code":592,"language":593,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[595],{"type":470,"tag":488,"props":596,"children":597},{"__ignoreMap":463},[598,607,633,651,660,704,734,744,753,776,798,820,829,874,923,965,974,983,1022,1031,1059,1121,1129,1138,1167,1224,1232,1241,1249,1293,1301,1318],{"type":470,"tag":492,"props":599,"children":600},{"class":494,"line":495},[601],{"type":470,"tag":492,"props":602,"children":604},{"style":603},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[605],{"type":475,"value":606},"/**\n",{"type":470,"tag":492,"props":608,"children":609},{"class":494,"line":504},[610,615,621,627],{"type":470,"tag":492,"props":611,"children":612},{"style":603},[613],{"type":475,"value":614}," * ",{"type":470,"tag":492,"props":616,"children":618},{"style":617},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[619],{"type":475,"value":620},"@param",{"type":470,"tag":492,"props":622,"children":624},{"style":623},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[625],{"type":475,"value":626}," {number}",{"type":470,"tag":492,"props":628,"children":630},{"style":629},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[631],{"type":475,"value":632}," n\n",{"type":470,"tag":492,"props":634,"children":636},{"class":494,"line":635},3,[637,641,646],{"type":470,"tag":492,"props":638,"children":639},{"style":603},[640],{"type":475,"value":614},{"type":470,"tag":492,"props":642,"children":643},{"style":617},[644],{"type":475,"value":645},"@return",{"type":470,"tag":492,"props":647,"children":648},{"style":623},[649],{"type":475,"value":650}," {string[]}\n",{"type":470,"tag":492,"props":652,"children":654},{"class":494,"line":653},4,[655],{"type":470,"tag":492,"props":656,"children":657},{"style":603},[658],{"type":475,"value":659}," */\n",{"type":470,"tag":492,"props":661,"children":663},{"class":494,"line":662},5,[664,670,676,682,687,693,699],{"type":470,"tag":492,"props":665,"children":667},{"style":666},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[668],{"type":475,"value":669},"var",{"type":470,"tag":492,"props":671,"children":673},{"style":672},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[674],{"type":475,"value":675}," generateParenthesis",{"type":470,"tag":492,"props":677,"children":679},{"style":678},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[680],{"type":475,"value":681}," =",{"type":470,"tag":492,"props":683,"children":684},{"style":666},[685],{"type":475,"value":686}," function",{"type":470,"tag":492,"props":688,"children":690},{"style":689},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[691],{"type":475,"value":692}," (",{"type":470,"tag":492,"props":694,"children":696},{"style":695},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[697],{"type":475,"value":698},"n",{"type":470,"tag":492,"props":700,"children":701},{"style":689},[702],{"type":475,"value":703},") {\n",{"type":470,"tag":492,"props":705,"children":707},{"class":494,"line":706},6,[708,713,719,723,728],{"type":470,"tag":492,"props":709,"children":710},{"style":666},[711],{"type":475,"value":712},"  const",{"type":470,"tag":492,"props":714,"children":716},{"style":715},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[717],{"type":475,"value":718}," res",{"type":470,"tag":492,"props":720,"children":721},{"style":678},[722],{"type":475,"value":681},{"type":470,"tag":492,"props":724,"children":725},{"style":689},[726],{"type":475,"value":727}," []",{"type":470,"tag":492,"props":729,"children":731},{"style":730},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[732],{"type":475,"value":733},";\n",{"type":470,"tag":492,"props":735,"children":737},{"class":494,"line":736},7,[738],{"type":470,"tag":492,"props":739,"children":741},{"emptyLinePlaceholder":740},true,[742],{"type":475,"value":743},"\n",{"type":470,"tag":492,"props":745,"children":747},{"class":494,"line":746},8,[748],{"type":470,"tag":492,"props":749,"children":750},{"style":603},[751],{"type":475,"value":752},"  /**\n",{"type":470,"tag":492,"props":754,"children":756},{"class":494,"line":755},9,[757,762,766,771],{"type":470,"tag":492,"props":758,"children":759},{"style":603},[760],{"type":475,"value":761},"   * ",{"type":470,"tag":492,"props":763,"children":764},{"style":617},[765],{"type":475,"value":620},{"type":470,"tag":492,"props":767,"children":768},{"style":629},[769],{"type":475,"value":770}," l",{"type":470,"tag":492,"props":772,"children":773},{"style":603},[774],{"type":475,"value":775}," 左侧括号已经用了几个\n",{"type":470,"tag":492,"props":777,"children":779},{"class":494,"line":778},10,[780,784,788,793],{"type":470,"tag":492,"props":781,"children":782},{"style":603},[783],{"type":475,"value":761},{"type":470,"tag":492,"props":785,"children":786},{"style":617},[787],{"type":475,"value":620},{"type":470,"tag":492,"props":789,"children":790},{"style":629},[791],{"type":475,"value":792}," r",{"type":470,"tag":492,"props":794,"children":795},{"style":603},[796],{"type":475,"value":797}," 右侧括号已经用了几个\n",{"type":470,"tag":492,"props":799,"children":801},{"class":494,"line":800},11,[802,806,810,815],{"type":470,"tag":492,"props":803,"children":804},{"style":603},[805],{"type":475,"value":761},{"type":470,"tag":492,"props":807,"children":808},{"style":617},[809],{"type":475,"value":620},{"type":470,"tag":492,"props":811,"children":812},{"style":629},[813],{"type":475,"value":814}," str",{"type":470,"tag":492,"props":816,"children":817},{"style":603},[818],{"type":475,"value":819}," 当前递归得到的拼接字符串结果\n",{"type":470,"tag":492,"props":821,"children":823},{"class":494,"line":822},12,[824],{"type":470,"tag":492,"props":825,"children":826},{"style":603},[827],{"type":475,"value":828},"   */\n",{"type":470,"tag":492,"props":830,"children":832},{"class":494,"line":831},13,[833,838,843,848,853,858,862,866,870],{"type":470,"tag":492,"props":834,"children":835},{"style":666},[836],{"type":475,"value":837},"  function",{"type":470,"tag":492,"props":839,"children":840},{"style":672},[841],{"type":475,"value":842}," dfs",{"type":470,"tag":492,"props":844,"children":845},{"style":689},[846],{"type":475,"value":847},"(",{"type":470,"tag":492,"props":849,"children":850},{"style":695},[851],{"type":475,"value":852},"l",{"type":470,"tag":492,"props":854,"children":855},{"style":730},[856],{"type":475,"value":857},",",{"type":470,"tag":492,"props":859,"children":860},{"style":695},[861],{"type":475,"value":792},{"type":470,"tag":492,"props":863,"children":864},{"style":730},[865],{"type":475,"value":857},{"type":470,"tag":492,"props":867,"children":868},{"style":695},[869],{"type":475,"value":814},{"type":470,"tag":492,"props":871,"children":872},{"style":689},[873],{"type":475,"value":703},{"type":470,"tag":492,"props":875,"children":877},{"class":494,"line":876},14,[878,884,888,892,897,902,907,911,915,919],{"type":470,"tag":492,"props":879,"children":881},{"style":880},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[882],{"type":475,"value":883},"    if",{"type":470,"tag":492,"props":885,"children":886},{"style":689},[887],{"type":475,"value":692},{"type":470,"tag":492,"props":889,"children":890},{"style":715},[891],{"type":475,"value":852},{"type":470,"tag":492,"props":893,"children":894},{"style":678},[895],{"type":475,"value":896}," ===",{"type":470,"tag":492,"props":898,"children":899},{"style":715},[900],{"type":475,"value":901}," n",{"type":470,"tag":492,"props":903,"children":904},{"style":678},[905],{"type":475,"value":906}," &&",{"type":470,"tag":492,"props":908,"children":909},{"style":715},[910],{"type":475,"value":792},{"type":470,"tag":492,"props":912,"children":913},{"style":678},[914],{"type":475,"value":896},{"type":470,"tag":492,"props":916,"children":917},{"style":715},[918],{"type":475,"value":901},{"type":470,"tag":492,"props":920,"children":921},{"style":689},[922],{"type":475,"value":703},{"type":470,"tag":492,"props":924,"children":926},{"class":494,"line":925},15,[927,932,936,942,947,951,956,961],{"type":470,"tag":492,"props":928,"children":929},{"style":880},[930],{"type":475,"value":931},"      return",{"type":470,"tag":492,"props":933,"children":934},{"style":715},[935],{"type":475,"value":718},{"type":470,"tag":492,"props":937,"children":939},{"style":938},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[940],{"type":475,"value":941},".",{"type":470,"tag":492,"props":943,"children":944},{"style":672},[945],{"type":475,"value":946},"push",{"type":470,"tag":492,"props":948,"children":949},{"style":689},[950],{"type":475,"value":847},{"type":470,"tag":492,"props":952,"children":953},{"style":715},[954],{"type":475,"value":955},"str",{"type":470,"tag":492,"props":957,"children":958},{"style":689},[959],{"type":475,"value":960},")",{"type":470,"tag":492,"props":962,"children":963},{"style":730},[964],{"type":475,"value":733},{"type":470,"tag":492,"props":966,"children":968},{"class":494,"line":967},16,[969],{"type":470,"tag":492,"props":970,"children":971},{"style":689},[972],{"type":475,"value":973},"    }\n",{"type":470,"tag":492,"props":975,"children":977},{"class":494,"line":976},17,[978],{"type":470,"tag":492,"props":979,"children":980},{"style":603},[981],{"type":475,"value":982},"    // l \u003C r 时不满足条件，剪枝\n",{"type":470,"tag":492,"props":984,"children":986},{"class":494,"line":985},18,[987,991,995,999,1004,1008,1013,1018],{"type":470,"tag":492,"props":988,"children":989},{"style":880},[990],{"type":475,"value":883},{"type":470,"tag":492,"props":992,"children":993},{"style":689},[994],{"type":475,"value":692},{"type":470,"tag":492,"props":996,"children":997},{"style":715},[998],{"type":475,"value":852},{"type":470,"tag":492,"props":1000,"children":1001},{"style":678},[1002],{"type":475,"value":1003}," \u003C",{"type":470,"tag":492,"props":1005,"children":1006},{"style":715},[1007],{"type":475,"value":792},{"type":470,"tag":492,"props":1009,"children":1010},{"style":689},[1011],{"type":475,"value":1012},") ",{"type":470,"tag":492,"props":1014,"children":1015},{"style":880},[1016],{"type":475,"value":1017},"return",{"type":470,"tag":492,"props":1019,"children":1020},{"style":730},[1021],{"type":475,"value":733},{"type":470,"tag":492,"props":1023,"children":1025},{"class":494,"line":1024},19,[1026],{"type":470,"tag":492,"props":1027,"children":1028},{"style":603},[1029],{"type":475,"value":1030},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":470,"tag":492,"props":1032,"children":1034},{"class":494,"line":1033},20,[1035,1039,1043,1047,1051,1055],{"type":470,"tag":492,"props":1036,"children":1037},{"style":880},[1038],{"type":475,"value":883},{"type":470,"tag":492,"props":1040,"children":1041},{"style":689},[1042],{"type":475,"value":692},{"type":470,"tag":492,"props":1044,"children":1045},{"style":715},[1046],{"type":475,"value":852},{"type":470,"tag":492,"props":1048,"children":1049},{"style":678},[1050],{"type":475,"value":1003},{"type":470,"tag":492,"props":1052,"children":1053},{"style":715},[1054],{"type":475,"value":901},{"type":470,"tag":492,"props":1056,"children":1057},{"style":689},[1058],{"type":475,"value":703},{"type":470,"tag":492,"props":1060,"children":1062},{"class":494,"line":1061},21,[1063,1068,1072,1076,1081,1087,1091,1095,1099,1103,1107,1113,1117],{"type":470,"tag":492,"props":1064,"children":1065},{"style":672},[1066],{"type":475,"value":1067},"      dfs",{"type":470,"tag":492,"props":1069,"children":1070},{"style":689},[1071],{"type":475,"value":847},{"type":470,"tag":492,"props":1073,"children":1074},{"style":715},[1075],{"type":475,"value":852},{"type":470,"tag":492,"props":1077,"children":1078},{"style":678},[1079],{"type":475,"value":1080}," +",{"type":470,"tag":492,"props":1082,"children":1084},{"style":1083},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1085],{"type":475,"value":1086}," 1",{"type":470,"tag":492,"props":1088,"children":1089},{"style":730},[1090],{"type":475,"value":857},{"type":470,"tag":492,"props":1092,"children":1093},{"style":715},[1094],{"type":475,"value":792},{"type":470,"tag":492,"props":1096,"children":1097},{"style":730},[1098],{"type":475,"value":857},{"type":470,"tag":492,"props":1100,"children":1101},{"style":715},[1102],{"type":475,"value":814},{"type":470,"tag":492,"props":1104,"children":1105},{"style":678},[1106],{"type":475,"value":1080},{"type":470,"tag":492,"props":1108,"children":1110},{"style":1109},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[1111],{"type":475,"value":1112}," \"(\"",{"type":470,"tag":492,"props":1114,"children":1115},{"style":689},[1116],{"type":475,"value":960},{"type":470,"tag":492,"props":1118,"children":1119},{"style":730},[1120],{"type":475,"value":733},{"type":470,"tag":492,"props":1122,"children":1124},{"class":494,"line":1123},22,[1125],{"type":470,"tag":492,"props":1126,"children":1127},{"style":689},[1128],{"type":475,"value":973},{"type":470,"tag":492,"props":1130,"children":1132},{"class":494,"line":1131},23,[1133],{"type":470,"tag":492,"props":1134,"children":1135},{"style":603},[1136],{"type":475,"value":1137},"    // r \u003C l 时，可以插入右括号\n",{"type":470,"tag":492,"props":1139,"children":1141},{"class":494,"line":1140},24,[1142,1146,1150,1155,1159,1163],{"type":470,"tag":492,"props":1143,"children":1144},{"style":880},[1145],{"type":475,"value":883},{"type":470,"tag":492,"props":1147,"children":1148},{"style":689},[1149],{"type":475,"value":692},{"type":470,"tag":492,"props":1151,"children":1152},{"style":715},[1153],{"type":475,"value":1154},"r",{"type":470,"tag":492,"props":1156,"children":1157},{"style":678},[1158],{"type":475,"value":1003},{"type":470,"tag":492,"props":1160,"children":1161},{"style":715},[1162],{"type":475,"value":770},{"type":470,"tag":492,"props":1164,"children":1165},{"style":689},[1166],{"type":475,"value":703},{"type":470,"tag":492,"props":1168,"children":1170},{"class":494,"line":1169},25,[1171,1175,1179,1183,1187,1191,1195,1199,1203,1207,1211,1216,1220],{"type":470,"tag":492,"props":1172,"children":1173},{"style":672},[1174],{"type":475,"value":1067},{"type":470,"tag":492,"props":1176,"children":1177},{"style":689},[1178],{"type":475,"value":847},{"type":470,"tag":492,"props":1180,"children":1181},{"style":715},[1182],{"type":475,"value":852},{"type":470,"tag":492,"props":1184,"children":1185},{"style":730},[1186],{"type":475,"value":857},{"type":470,"tag":492,"props":1188,"children":1189},{"style":715},[1190],{"type":475,"value":792},{"type":470,"tag":492,"props":1192,"children":1193},{"style":678},[1194],{"type":475,"value":1080},{"type":470,"tag":492,"props":1196,"children":1197},{"style":1083},[1198],{"type":475,"value":1086},{"type":470,"tag":492,"props":1200,"children":1201},{"style":730},[1202],{"type":475,"value":857},{"type":470,"tag":492,"props":1204,"children":1205},{"style":715},[1206],{"type":475,"value":814},{"type":470,"tag":492,"props":1208,"children":1209},{"style":678},[1210],{"type":475,"value":1080},{"type":470,"tag":492,"props":1212,"children":1213},{"style":1109},[1214],{"type":475,"value":1215}," \")\"",{"type":470,"tag":492,"props":1217,"children":1218},{"style":689},[1219],{"type":475,"value":960},{"type":470,"tag":492,"props":1221,"children":1222},{"style":730},[1223],{"type":475,"value":733},{"type":470,"tag":492,"props":1225,"children":1227},{"class":494,"line":1226},26,[1228],{"type":470,"tag":492,"props":1229,"children":1230},{"style":689},[1231],{"type":475,"value":973},{"type":470,"tag":492,"props":1233,"children":1235},{"class":494,"line":1234},27,[1236],{"type":470,"tag":492,"props":1237,"children":1238},{"style":689},[1239],{"type":475,"value":1240},"  }\n",{"type":470,"tag":492,"props":1242,"children":1244},{"class":494,"line":1243},28,[1245],{"type":470,"tag":492,"props":1246,"children":1247},{"emptyLinePlaceholder":740},[1248],{"type":475,"value":743},{"type":470,"tag":492,"props":1250,"children":1252},{"class":494,"line":1251},29,[1253,1258,1262,1267,1271,1276,1280,1285,1289],{"type":470,"tag":492,"props":1254,"children":1255},{"style":672},[1256],{"type":475,"value":1257},"  dfs",{"type":470,"tag":492,"props":1259,"children":1260},{"style":689},[1261],{"type":475,"value":847},{"type":470,"tag":492,"props":1263,"children":1264},{"style":1083},[1265],{"type":475,"value":1266},"0",{"type":470,"tag":492,"props":1268,"children":1269},{"style":730},[1270],{"type":475,"value":857},{"type":470,"tag":492,"props":1272,"children":1273},{"style":1083},[1274],{"type":475,"value":1275}," 0",{"type":470,"tag":492,"props":1277,"children":1278},{"style":730},[1279],{"type":475,"value":857},{"type":470,"tag":492,"props":1281,"children":1282},{"style":1109},[1283],{"type":475,"value":1284}," \"\"",{"type":470,"tag":492,"props":1286,"children":1287},{"style":689},[1288],{"type":475,"value":960},{"type":470,"tag":492,"props":1290,"children":1291},{"style":730},[1292],{"type":475,"value":733},{"type":470,"tag":492,"props":1294,"children":1296},{"class":494,"line":1295},30,[1297],{"type":470,"tag":492,"props":1298,"children":1299},{"emptyLinePlaceholder":740},[1300],{"type":475,"value":743},{"type":470,"tag":492,"props":1302,"children":1304},{"class":494,"line":1303},31,[1305,1310,1314],{"type":470,"tag":492,"props":1306,"children":1307},{"style":880},[1308],{"type":475,"value":1309},"  return",{"type":470,"tag":492,"props":1311,"children":1312},{"style":715},[1313],{"type":475,"value":718},{"type":470,"tag":492,"props":1315,"children":1316},{"style":730},[1317],{"type":475,"value":733},{"type":470,"tag":492,"props":1319,"children":1321},{"class":494,"line":1320},32,[1322,1327],{"type":470,"tag":492,"props":1323,"children":1324},{"style":689},[1325],{"type":475,"value":1326},"}",{"type":470,"tag":492,"props":1328,"children":1329},{"style":730},[1330],{"type":475,"value":733},{"type":470,"tag":1332,"props":1333,"children":1334},"style",{},[1335],{"type":475,"value":1336},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":662,"depth":662,"links":1338},[1339,1340],{"id":557,"depth":504,"text":557},{"id":580,"depth":504,"text":580,"children":1341},[1342],{"id":586,"depth":635,"text":586},"markdown","content:1.algorithm:3.leetcode:3.major:22.generate-parentheses.md","content","1.algorithm/3.leetcode/3.major/22.generate-parentheses.md","md",[1349,1351],{"_path":84,"title":83,"description":1350},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":90,"title":89,"description":1352},"给你一个链表数组，每个链表都已经按升序排列。",1713626052468]