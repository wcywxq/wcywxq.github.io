[{"data":1,"prerenderedAt":1359},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/generate-parentheses":466,"/algorithm/leetcode/major/generate-parentheses-surround":1354},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":93,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":92,"description":470,"url":471,"body":472,"_type":1349,"_id":1350,"_source":1351,"_file":1352,"_extension":1353},"major",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":473,"children":474,"toc":1343},"root",[475,482,487,517,522,545,550,560,566,571,584,589,595,1337],{"type":476,"tag":477,"props":478,"children":479},"element","p",{},[480],{"type":481,"value":470},"text",{"type":476,"tag":477,"props":483,"children":484},{},[485],{"type":481,"value":486},"示例 1：",{"type":476,"tag":488,"props":489,"children":492},"pre",{"className":490,"code":491,"language":481,"meta":469,"style":469},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[493],{"type":476,"tag":494,"props":495,"children":496},"code",{"__ignoreMap":469},[497,508],{"type":476,"tag":498,"props":499,"children":502},"span",{"class":500,"line":501},"line",1,[503],{"type":476,"tag":498,"props":504,"children":505},{},[506],{"type":481,"value":507},"输入：n = 3\n",{"type":476,"tag":498,"props":509,"children":511},{"class":500,"line":510},2,[512],{"type":476,"tag":498,"props":513,"children":514},{},[515],{"type":481,"value":516},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":476,"tag":477,"props":518,"children":519},{},[520],{"type":481,"value":521},"示例 2：",{"type":476,"tag":488,"props":523,"children":525},{"className":490,"code":524,"language":481,"meta":469,"style":469},"输入：n = 1\n输出：[\"()\"]\n",[526],{"type":476,"tag":494,"props":527,"children":528},{"__ignoreMap":469},[529,537],{"type":476,"tag":498,"props":530,"children":531},{"class":500,"line":501},[532],{"type":476,"tag":498,"props":533,"children":534},{},[535],{"type":481,"value":536},"输入：n = 1\n",{"type":476,"tag":498,"props":538,"children":539},{"class":500,"line":510},[540],{"type":476,"tag":498,"props":541,"children":542},{},[543],{"type":481,"value":544},"输出：[\"()\"]\n",{"type":476,"tag":477,"props":546,"children":547},{},[548],{"type":481,"value":549},"提示：",{"type":476,"tag":551,"props":552,"children":553},"ul",{},[554],{"type":476,"tag":555,"props":556,"children":557},"li",{},[558],{"type":481,"value":559},"1 \u003C= n \u003C= 8",{"type":476,"tag":561,"props":562,"children":564},"h2",{"id":563},"解题思路",[565],{"type":481,"value":563},{"type":476,"tag":477,"props":567,"children":568},{},[569],{"type":481,"value":570},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":476,"tag":551,"props":572,"children":573},{},[574,579],{"type":476,"tag":555,"props":575,"children":576},{},[577],{"type":481,"value":578},"左括号数目 = 右括号数目",{"type":476,"tag":555,"props":580,"children":581},{},[582],{"type":481,"value":583},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":476,"tag":561,"props":585,"children":587},{"id":586},"实现",[588],{"type":481,"value":586},{"type":476,"tag":590,"props":591,"children":593},"h3",{"id":592},"回溯",[594],{"type":481,"value":592},{"type":476,"tag":488,"props":596,"children":600},{"className":597,"code":598,"language":599,"meta":469,"style":469},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[601],{"type":476,"tag":494,"props":602,"children":603},{"__ignoreMap":469},[604,613,639,657,666,710,740,750,759,782,804,826,835,880,929,971,980,989,1028,1037,1065,1127,1135,1144,1173,1230,1238,1247,1255,1299,1307,1324],{"type":476,"tag":498,"props":605,"children":606},{"class":500,"line":501},[607],{"type":476,"tag":498,"props":608,"children":610},{"style":609},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[611],{"type":481,"value":612},"/**\n",{"type":476,"tag":498,"props":614,"children":615},{"class":500,"line":510},[616,621,627,633],{"type":476,"tag":498,"props":617,"children":618},{"style":609},[619],{"type":481,"value":620}," * ",{"type":476,"tag":498,"props":622,"children":624},{"style":623},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[625],{"type":481,"value":626},"@param",{"type":476,"tag":498,"props":628,"children":630},{"style":629},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[631],{"type":481,"value":632}," {number}",{"type":476,"tag":498,"props":634,"children":636},{"style":635},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[637],{"type":481,"value":638}," n\n",{"type":476,"tag":498,"props":640,"children":642},{"class":500,"line":641},3,[643,647,652],{"type":476,"tag":498,"props":644,"children":645},{"style":609},[646],{"type":481,"value":620},{"type":476,"tag":498,"props":648,"children":649},{"style":623},[650],{"type":481,"value":651},"@return",{"type":476,"tag":498,"props":653,"children":654},{"style":629},[655],{"type":481,"value":656}," {string[]}\n",{"type":476,"tag":498,"props":658,"children":660},{"class":500,"line":659},4,[661],{"type":476,"tag":498,"props":662,"children":663},{"style":609},[664],{"type":481,"value":665}," */\n",{"type":476,"tag":498,"props":667,"children":669},{"class":500,"line":668},5,[670,676,682,688,693,699,705],{"type":476,"tag":498,"props":671,"children":673},{"style":672},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[674],{"type":481,"value":675},"var",{"type":476,"tag":498,"props":677,"children":679},{"style":678},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[680],{"type":481,"value":681}," generateParenthesis",{"type":476,"tag":498,"props":683,"children":685},{"style":684},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[686],{"type":481,"value":687}," =",{"type":476,"tag":498,"props":689,"children":690},{"style":672},[691],{"type":481,"value":692}," function",{"type":476,"tag":498,"props":694,"children":696},{"style":695},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[697],{"type":481,"value":698}," (",{"type":476,"tag":498,"props":700,"children":702},{"style":701},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[703],{"type":481,"value":704},"n",{"type":476,"tag":498,"props":706,"children":707},{"style":695},[708],{"type":481,"value":709},") {\n",{"type":476,"tag":498,"props":711,"children":713},{"class":500,"line":712},6,[714,719,725,729,734],{"type":476,"tag":498,"props":715,"children":716},{"style":672},[717],{"type":481,"value":718},"  const",{"type":476,"tag":498,"props":720,"children":722},{"style":721},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[723],{"type":481,"value":724}," res",{"type":476,"tag":498,"props":726,"children":727},{"style":684},[728],{"type":481,"value":687},{"type":476,"tag":498,"props":730,"children":731},{"style":695},[732],{"type":481,"value":733}," []",{"type":476,"tag":498,"props":735,"children":737},{"style":736},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[738],{"type":481,"value":739},";\n",{"type":476,"tag":498,"props":741,"children":743},{"class":500,"line":742},7,[744],{"type":476,"tag":498,"props":745,"children":747},{"emptyLinePlaceholder":746},true,[748],{"type":481,"value":749},"\n",{"type":476,"tag":498,"props":751,"children":753},{"class":500,"line":752},8,[754],{"type":476,"tag":498,"props":755,"children":756},{"style":609},[757],{"type":481,"value":758},"  /**\n",{"type":476,"tag":498,"props":760,"children":762},{"class":500,"line":761},9,[763,768,772,777],{"type":476,"tag":498,"props":764,"children":765},{"style":609},[766],{"type":481,"value":767},"   * ",{"type":476,"tag":498,"props":769,"children":770},{"style":623},[771],{"type":481,"value":626},{"type":476,"tag":498,"props":773,"children":774},{"style":635},[775],{"type":481,"value":776}," l",{"type":476,"tag":498,"props":778,"children":779},{"style":609},[780],{"type":481,"value":781}," 左侧括号已经用了几个\n",{"type":476,"tag":498,"props":783,"children":785},{"class":500,"line":784},10,[786,790,794,799],{"type":476,"tag":498,"props":787,"children":788},{"style":609},[789],{"type":481,"value":767},{"type":476,"tag":498,"props":791,"children":792},{"style":623},[793],{"type":481,"value":626},{"type":476,"tag":498,"props":795,"children":796},{"style":635},[797],{"type":481,"value":798}," r",{"type":476,"tag":498,"props":800,"children":801},{"style":609},[802],{"type":481,"value":803}," 右侧括号已经用了几个\n",{"type":476,"tag":498,"props":805,"children":807},{"class":500,"line":806},11,[808,812,816,821],{"type":476,"tag":498,"props":809,"children":810},{"style":609},[811],{"type":481,"value":767},{"type":476,"tag":498,"props":813,"children":814},{"style":623},[815],{"type":481,"value":626},{"type":476,"tag":498,"props":817,"children":818},{"style":635},[819],{"type":481,"value":820}," str",{"type":476,"tag":498,"props":822,"children":823},{"style":609},[824],{"type":481,"value":825}," 当前递归得到的拼接字符串结果\n",{"type":476,"tag":498,"props":827,"children":829},{"class":500,"line":828},12,[830],{"type":476,"tag":498,"props":831,"children":832},{"style":609},[833],{"type":481,"value":834},"   */\n",{"type":476,"tag":498,"props":836,"children":838},{"class":500,"line":837},13,[839,844,849,854,859,864,868,872,876],{"type":476,"tag":498,"props":840,"children":841},{"style":672},[842],{"type":481,"value":843},"  function",{"type":476,"tag":498,"props":845,"children":846},{"style":678},[847],{"type":481,"value":848}," dfs",{"type":476,"tag":498,"props":850,"children":851},{"style":695},[852],{"type":481,"value":853},"(",{"type":476,"tag":498,"props":855,"children":856},{"style":701},[857],{"type":481,"value":858},"l",{"type":476,"tag":498,"props":860,"children":861},{"style":736},[862],{"type":481,"value":863},",",{"type":476,"tag":498,"props":865,"children":866},{"style":701},[867],{"type":481,"value":798},{"type":476,"tag":498,"props":869,"children":870},{"style":736},[871],{"type":481,"value":863},{"type":476,"tag":498,"props":873,"children":874},{"style":701},[875],{"type":481,"value":820},{"type":476,"tag":498,"props":877,"children":878},{"style":695},[879],{"type":481,"value":709},{"type":476,"tag":498,"props":881,"children":883},{"class":500,"line":882},14,[884,890,894,898,903,908,913,917,921,925],{"type":476,"tag":498,"props":885,"children":887},{"style":886},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[888],{"type":481,"value":889},"    if",{"type":476,"tag":498,"props":891,"children":892},{"style":695},[893],{"type":481,"value":698},{"type":476,"tag":498,"props":895,"children":896},{"style":721},[897],{"type":481,"value":858},{"type":476,"tag":498,"props":899,"children":900},{"style":684},[901],{"type":481,"value":902}," ===",{"type":476,"tag":498,"props":904,"children":905},{"style":721},[906],{"type":481,"value":907}," n",{"type":476,"tag":498,"props":909,"children":910},{"style":684},[911],{"type":481,"value":912}," &&",{"type":476,"tag":498,"props":914,"children":915},{"style":721},[916],{"type":481,"value":798},{"type":476,"tag":498,"props":918,"children":919},{"style":684},[920],{"type":481,"value":902},{"type":476,"tag":498,"props":922,"children":923},{"style":721},[924],{"type":481,"value":907},{"type":476,"tag":498,"props":926,"children":927},{"style":695},[928],{"type":481,"value":709},{"type":476,"tag":498,"props":930,"children":932},{"class":500,"line":931},15,[933,938,942,948,953,957,962,967],{"type":476,"tag":498,"props":934,"children":935},{"style":886},[936],{"type":481,"value":937},"      return",{"type":476,"tag":498,"props":939,"children":940},{"style":721},[941],{"type":481,"value":724},{"type":476,"tag":498,"props":943,"children":945},{"style":944},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[946],{"type":481,"value":947},".",{"type":476,"tag":498,"props":949,"children":950},{"style":678},[951],{"type":481,"value":952},"push",{"type":476,"tag":498,"props":954,"children":955},{"style":695},[956],{"type":481,"value":853},{"type":476,"tag":498,"props":958,"children":959},{"style":721},[960],{"type":481,"value":961},"str",{"type":476,"tag":498,"props":963,"children":964},{"style":695},[965],{"type":481,"value":966},")",{"type":476,"tag":498,"props":968,"children":969},{"style":736},[970],{"type":481,"value":739},{"type":476,"tag":498,"props":972,"children":974},{"class":500,"line":973},16,[975],{"type":476,"tag":498,"props":976,"children":977},{"style":695},[978],{"type":481,"value":979},"    }\n",{"type":476,"tag":498,"props":981,"children":983},{"class":500,"line":982},17,[984],{"type":476,"tag":498,"props":985,"children":986},{"style":609},[987],{"type":481,"value":988},"    // l \u003C r 时不满足条件，剪枝\n",{"type":476,"tag":498,"props":990,"children":992},{"class":500,"line":991},18,[993,997,1001,1005,1010,1014,1019,1024],{"type":476,"tag":498,"props":994,"children":995},{"style":886},[996],{"type":481,"value":889},{"type":476,"tag":498,"props":998,"children":999},{"style":695},[1000],{"type":481,"value":698},{"type":476,"tag":498,"props":1002,"children":1003},{"style":721},[1004],{"type":481,"value":858},{"type":476,"tag":498,"props":1006,"children":1007},{"style":684},[1008],{"type":481,"value":1009}," \u003C",{"type":476,"tag":498,"props":1011,"children":1012},{"style":721},[1013],{"type":481,"value":798},{"type":476,"tag":498,"props":1015,"children":1016},{"style":695},[1017],{"type":481,"value":1018},") ",{"type":476,"tag":498,"props":1020,"children":1021},{"style":886},[1022],{"type":481,"value":1023},"return",{"type":476,"tag":498,"props":1025,"children":1026},{"style":736},[1027],{"type":481,"value":739},{"type":476,"tag":498,"props":1029,"children":1031},{"class":500,"line":1030},19,[1032],{"type":476,"tag":498,"props":1033,"children":1034},{"style":609},[1035],{"type":481,"value":1036},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":476,"tag":498,"props":1038,"children":1040},{"class":500,"line":1039},20,[1041,1045,1049,1053,1057,1061],{"type":476,"tag":498,"props":1042,"children":1043},{"style":886},[1044],{"type":481,"value":889},{"type":476,"tag":498,"props":1046,"children":1047},{"style":695},[1048],{"type":481,"value":698},{"type":476,"tag":498,"props":1050,"children":1051},{"style":721},[1052],{"type":481,"value":858},{"type":476,"tag":498,"props":1054,"children":1055},{"style":684},[1056],{"type":481,"value":1009},{"type":476,"tag":498,"props":1058,"children":1059},{"style":721},[1060],{"type":481,"value":907},{"type":476,"tag":498,"props":1062,"children":1063},{"style":695},[1064],{"type":481,"value":709},{"type":476,"tag":498,"props":1066,"children":1068},{"class":500,"line":1067},21,[1069,1074,1078,1082,1087,1093,1097,1101,1105,1109,1113,1119,1123],{"type":476,"tag":498,"props":1070,"children":1071},{"style":678},[1072],{"type":481,"value":1073},"      dfs",{"type":476,"tag":498,"props":1075,"children":1076},{"style":695},[1077],{"type":481,"value":853},{"type":476,"tag":498,"props":1079,"children":1080},{"style":721},[1081],{"type":481,"value":858},{"type":476,"tag":498,"props":1083,"children":1084},{"style":684},[1085],{"type":481,"value":1086}," +",{"type":476,"tag":498,"props":1088,"children":1090},{"style":1089},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1091],{"type":481,"value":1092}," 1",{"type":476,"tag":498,"props":1094,"children":1095},{"style":736},[1096],{"type":481,"value":863},{"type":476,"tag":498,"props":1098,"children":1099},{"style":721},[1100],{"type":481,"value":798},{"type":476,"tag":498,"props":1102,"children":1103},{"style":736},[1104],{"type":481,"value":863},{"type":476,"tag":498,"props":1106,"children":1107},{"style":721},[1108],{"type":481,"value":820},{"type":476,"tag":498,"props":1110,"children":1111},{"style":684},[1112],{"type":481,"value":1086},{"type":476,"tag":498,"props":1114,"children":1116},{"style":1115},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[1117],{"type":481,"value":1118}," \"(\"",{"type":476,"tag":498,"props":1120,"children":1121},{"style":695},[1122],{"type":481,"value":966},{"type":476,"tag":498,"props":1124,"children":1125},{"style":736},[1126],{"type":481,"value":739},{"type":476,"tag":498,"props":1128,"children":1130},{"class":500,"line":1129},22,[1131],{"type":476,"tag":498,"props":1132,"children":1133},{"style":695},[1134],{"type":481,"value":979},{"type":476,"tag":498,"props":1136,"children":1138},{"class":500,"line":1137},23,[1139],{"type":476,"tag":498,"props":1140,"children":1141},{"style":609},[1142],{"type":481,"value":1143},"    // r \u003C l 时，可以插入右括号\n",{"type":476,"tag":498,"props":1145,"children":1147},{"class":500,"line":1146},24,[1148,1152,1156,1161,1165,1169],{"type":476,"tag":498,"props":1149,"children":1150},{"style":886},[1151],{"type":481,"value":889},{"type":476,"tag":498,"props":1153,"children":1154},{"style":695},[1155],{"type":481,"value":698},{"type":476,"tag":498,"props":1157,"children":1158},{"style":721},[1159],{"type":481,"value":1160},"r",{"type":476,"tag":498,"props":1162,"children":1163},{"style":684},[1164],{"type":481,"value":1009},{"type":476,"tag":498,"props":1166,"children":1167},{"style":721},[1168],{"type":481,"value":776},{"type":476,"tag":498,"props":1170,"children":1171},{"style":695},[1172],{"type":481,"value":709},{"type":476,"tag":498,"props":1174,"children":1176},{"class":500,"line":1175},25,[1177,1181,1185,1189,1193,1197,1201,1205,1209,1213,1217,1222,1226],{"type":476,"tag":498,"props":1178,"children":1179},{"style":678},[1180],{"type":481,"value":1073},{"type":476,"tag":498,"props":1182,"children":1183},{"style":695},[1184],{"type":481,"value":853},{"type":476,"tag":498,"props":1186,"children":1187},{"style":721},[1188],{"type":481,"value":858},{"type":476,"tag":498,"props":1190,"children":1191},{"style":736},[1192],{"type":481,"value":863},{"type":476,"tag":498,"props":1194,"children":1195},{"style":721},[1196],{"type":481,"value":798},{"type":476,"tag":498,"props":1198,"children":1199},{"style":684},[1200],{"type":481,"value":1086},{"type":476,"tag":498,"props":1202,"children":1203},{"style":1089},[1204],{"type":481,"value":1092},{"type":476,"tag":498,"props":1206,"children":1207},{"style":736},[1208],{"type":481,"value":863},{"type":476,"tag":498,"props":1210,"children":1211},{"style":721},[1212],{"type":481,"value":820},{"type":476,"tag":498,"props":1214,"children":1215},{"style":684},[1216],{"type":481,"value":1086},{"type":476,"tag":498,"props":1218,"children":1219},{"style":1115},[1220],{"type":481,"value":1221}," \")\"",{"type":476,"tag":498,"props":1223,"children":1224},{"style":695},[1225],{"type":481,"value":966},{"type":476,"tag":498,"props":1227,"children":1228},{"style":736},[1229],{"type":481,"value":739},{"type":476,"tag":498,"props":1231,"children":1233},{"class":500,"line":1232},26,[1234],{"type":476,"tag":498,"props":1235,"children":1236},{"style":695},[1237],{"type":481,"value":979},{"type":476,"tag":498,"props":1239,"children":1241},{"class":500,"line":1240},27,[1242],{"type":476,"tag":498,"props":1243,"children":1244},{"style":695},[1245],{"type":481,"value":1246},"  }\n",{"type":476,"tag":498,"props":1248,"children":1250},{"class":500,"line":1249},28,[1251],{"type":476,"tag":498,"props":1252,"children":1253},{"emptyLinePlaceholder":746},[1254],{"type":481,"value":749},{"type":476,"tag":498,"props":1256,"children":1258},{"class":500,"line":1257},29,[1259,1264,1268,1273,1277,1282,1286,1291,1295],{"type":476,"tag":498,"props":1260,"children":1261},{"style":678},[1262],{"type":481,"value":1263},"  dfs",{"type":476,"tag":498,"props":1265,"children":1266},{"style":695},[1267],{"type":481,"value":853},{"type":476,"tag":498,"props":1269,"children":1270},{"style":1089},[1271],{"type":481,"value":1272},"0",{"type":476,"tag":498,"props":1274,"children":1275},{"style":736},[1276],{"type":481,"value":863},{"type":476,"tag":498,"props":1278,"children":1279},{"style":1089},[1280],{"type":481,"value":1281}," 0",{"type":476,"tag":498,"props":1283,"children":1284},{"style":736},[1285],{"type":481,"value":863},{"type":476,"tag":498,"props":1287,"children":1288},{"style":1115},[1289],{"type":481,"value":1290}," \"\"",{"type":476,"tag":498,"props":1292,"children":1293},{"style":695},[1294],{"type":481,"value":966},{"type":476,"tag":498,"props":1296,"children":1297},{"style":736},[1298],{"type":481,"value":739},{"type":476,"tag":498,"props":1300,"children":1302},{"class":500,"line":1301},30,[1303],{"type":476,"tag":498,"props":1304,"children":1305},{"emptyLinePlaceholder":746},[1306],{"type":481,"value":749},{"type":476,"tag":498,"props":1308,"children":1310},{"class":500,"line":1309},31,[1311,1316,1320],{"type":476,"tag":498,"props":1312,"children":1313},{"style":886},[1314],{"type":481,"value":1315},"  return",{"type":476,"tag":498,"props":1317,"children":1318},{"style":721},[1319],{"type":481,"value":724},{"type":476,"tag":498,"props":1321,"children":1322},{"style":736},[1323],{"type":481,"value":739},{"type":476,"tag":498,"props":1325,"children":1327},{"class":500,"line":1326},32,[1328,1333],{"type":476,"tag":498,"props":1329,"children":1330},{"style":695},[1331],{"type":481,"value":1332},"}",{"type":476,"tag":498,"props":1334,"children":1335},{"style":736},[1336],{"type":481,"value":739},{"type":476,"tag":1338,"props":1339,"children":1340},"style",{},[1341],{"type":481,"value":1342},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":668,"depth":668,"links":1344},[1345,1346],{"id":563,"depth":510,"text":563},{"id":586,"depth":510,"text":586,"children":1347},[1348],{"id":592,"depth":641,"text":592},"markdown","content:1.algorithm:3.leetcode:3.major:22.generate-parentheses.md","content","1.algorithm/3.leetcode/3.major/22.generate-parentheses.md","md",[1355,1357],{"_path":90,"title":89,"description":1356},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":96,"title":95,"description":1358},"给你一个链表数组，每个链表都已经按升序排列。",1714007213025]