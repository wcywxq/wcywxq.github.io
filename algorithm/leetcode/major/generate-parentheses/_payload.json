[{"data":1,"prerenderedAt":1418},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/generate-parentheses":478,"/algorithm/leetcode/major/generate-parentheses-surround":1413},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":93,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":92,"description":482,"url":483,"body":484,"_type":1408,"_id":1409,"_source":1410,"_file":1411,"_extension":1412},"major",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":485,"children":486,"toc":1402},"root",[487,494,499,529,534,557,562,572,578,583,596,601,607,1396],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"示例 1：",{"type":488,"tag":500,"props":501,"children":504},"pre",{"className":502,"code":503,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[505],{"type":488,"tag":506,"props":507,"children":508},"code",{"__ignoreMap":481},[509,520],{"type":488,"tag":510,"props":511,"children":514},"span",{"class":512,"line":513},"line",1,[515],{"type":488,"tag":510,"props":516,"children":517},{},[518],{"type":493,"value":519},"输入：n = 3\n",{"type":488,"tag":510,"props":521,"children":523},{"class":512,"line":522},2,[524],{"type":488,"tag":510,"props":525,"children":526},{},[527],{"type":493,"value":528},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":488,"tag":489,"props":530,"children":531},{},[532],{"type":493,"value":533},"示例 2：",{"type":488,"tag":500,"props":535,"children":537},{"className":502,"code":536,"language":493,"meta":481,"style":481},"输入：n = 1\n输出：[\"()\"]\n",[538],{"type":488,"tag":506,"props":539,"children":540},{"__ignoreMap":481},[541,549],{"type":488,"tag":510,"props":542,"children":543},{"class":512,"line":513},[544],{"type":488,"tag":510,"props":545,"children":546},{},[547],{"type":493,"value":548},"输入：n = 1\n",{"type":488,"tag":510,"props":550,"children":551},{"class":512,"line":522},[552],{"type":488,"tag":510,"props":553,"children":554},{},[555],{"type":493,"value":556},"输出：[\"()\"]\n",{"type":488,"tag":489,"props":558,"children":559},{},[560],{"type":493,"value":561},"提示：",{"type":488,"tag":563,"props":564,"children":565},"ul",{},[566],{"type":488,"tag":567,"props":568,"children":569},"li",{},[570],{"type":493,"value":571},"1 \u003C= n \u003C= 8",{"type":488,"tag":573,"props":574,"children":576},"h2",{"id":575},"解题思路",[577],{"type":493,"value":575},{"type":488,"tag":489,"props":579,"children":580},{},[581],{"type":493,"value":582},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":488,"tag":563,"props":584,"children":585},{},[586,591],{"type":488,"tag":567,"props":587,"children":588},{},[589],{"type":493,"value":590},"左括号数目 = 右括号数目",{"type":488,"tag":567,"props":592,"children":593},{},[594],{"type":493,"value":595},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":488,"tag":573,"props":597,"children":599},{"id":598},"实现",[600],{"type":493,"value":598},{"type":488,"tag":602,"props":603,"children":605},"h3",{"id":604},"回溯",[606],{"type":493,"value":604},{"type":488,"tag":500,"props":608,"children":612},{"className":609,"code":610,"language":611,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[613],{"type":488,"tag":506,"props":614,"children":615},{"__ignoreMap":481},[616,625,667,698,707,753,776,786,795,822,848,874,883,932,984,1021,1030,1039,1078,1087,1119,1187,1195,1204,1237,1297,1305,1314,1322,1362,1370,1387],{"type":488,"tag":510,"props":617,"children":618},{"class":512,"line":513},[619],{"type":488,"tag":510,"props":620,"children":622},{"style":621},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[623],{"type":493,"value":624},"/**\n",{"type":488,"tag":510,"props":626,"children":627},{"class":512,"line":522},[628,633,639,645,650,656,661],{"type":488,"tag":510,"props":629,"children":630},{"style":621},[631],{"type":493,"value":632}," * ",{"type":488,"tag":510,"props":634,"children":636},{"style":635},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[637],{"type":493,"value":638},"@",{"type":488,"tag":510,"props":640,"children":642},{"style":641},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[643],{"type":493,"value":644},"param",{"type":488,"tag":510,"props":646,"children":647},{"style":635},[648],{"type":493,"value":649}," {",{"type":488,"tag":510,"props":651,"children":653},{"style":652},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[654],{"type":493,"value":655},"number",{"type":488,"tag":510,"props":657,"children":658},{"style":635},[659],{"type":493,"value":660},"}",{"type":488,"tag":510,"props":662,"children":664},{"style":663},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[665],{"type":493,"value":666}," n\n",{"type":488,"tag":510,"props":668,"children":670},{"class":512,"line":669},3,[671,675,679,684,688,693],{"type":488,"tag":510,"props":672,"children":673},{"style":621},[674],{"type":493,"value":632},{"type":488,"tag":510,"props":676,"children":677},{"style":635},[678],{"type":493,"value":638},{"type":488,"tag":510,"props":680,"children":681},{"style":641},[682],{"type":493,"value":683},"return",{"type":488,"tag":510,"props":685,"children":686},{"style":635},[687],{"type":493,"value":649},{"type":488,"tag":510,"props":689,"children":690},{"style":652},[691],{"type":493,"value":692},"string[]",{"type":488,"tag":510,"props":694,"children":695},{"style":635},[696],{"type":493,"value":697},"}\n",{"type":488,"tag":510,"props":699,"children":701},{"class":512,"line":700},4,[702],{"type":488,"tag":510,"props":703,"children":704},{"style":621},[705],{"type":493,"value":706}," */\n",{"type":488,"tag":510,"props":708,"children":710},{"class":512,"line":709},5,[711,717,723,728,733,738,743,748],{"type":488,"tag":510,"props":712,"children":714},{"style":713},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[715],{"type":493,"value":716},"var",{"type":488,"tag":510,"props":718,"children":720},{"style":719},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[721],{"type":493,"value":722}," generateParenthesis",{"type":488,"tag":510,"props":724,"children":725},{"style":635},[726],{"type":493,"value":727}," =",{"type":488,"tag":510,"props":729,"children":730},{"style":713},[731],{"type":493,"value":732}," function",{"type":488,"tag":510,"props":734,"children":735},{"style":635},[736],{"type":493,"value":737}," (",{"type":488,"tag":510,"props":739,"children":740},{"style":663},[741],{"type":493,"value":742},"n",{"type":488,"tag":510,"props":744,"children":745},{"style":635},[746],{"type":493,"value":747},")",{"type":488,"tag":510,"props":749,"children":750},{"style":635},[751],{"type":493,"value":752}," {\n",{"type":488,"tag":510,"props":754,"children":756},{"class":512,"line":755},6,[757,762,767,771],{"type":488,"tag":510,"props":758,"children":759},{"style":713},[760],{"type":493,"value":761},"  const",{"type":488,"tag":510,"props":763,"children":764},{"style":663},[765],{"type":493,"value":766}," res",{"type":488,"tag":510,"props":768,"children":769},{"style":635},[770],{"type":493,"value":727},{"type":488,"tag":510,"props":772,"children":773},{"style":635},[774],{"type":493,"value":775}," [];\n",{"type":488,"tag":510,"props":777,"children":779},{"class":512,"line":778},7,[780],{"type":488,"tag":510,"props":781,"children":783},{"emptyLinePlaceholder":782},true,[784],{"type":493,"value":785},"\n",{"type":488,"tag":510,"props":787,"children":789},{"class":512,"line":788},8,[790],{"type":488,"tag":510,"props":791,"children":792},{"style":621},[793],{"type":493,"value":794},"  /**\n",{"type":488,"tag":510,"props":796,"children":798},{"class":512,"line":797},9,[799,804,808,812,817],{"type":488,"tag":510,"props":800,"children":801},{"style":621},[802],{"type":493,"value":803},"   * ",{"type":488,"tag":510,"props":805,"children":806},{"style":635},[807],{"type":493,"value":638},{"type":488,"tag":510,"props":809,"children":810},{"style":641},[811],{"type":493,"value":644},{"type":488,"tag":510,"props":813,"children":814},{"style":663},[815],{"type":493,"value":816}," l",{"type":488,"tag":510,"props":818,"children":819},{"style":621},[820],{"type":493,"value":821}," 左侧括号已经用了几个\n",{"type":488,"tag":510,"props":823,"children":825},{"class":512,"line":824},10,[826,830,834,838,843],{"type":488,"tag":510,"props":827,"children":828},{"style":621},[829],{"type":493,"value":803},{"type":488,"tag":510,"props":831,"children":832},{"style":635},[833],{"type":493,"value":638},{"type":488,"tag":510,"props":835,"children":836},{"style":641},[837],{"type":493,"value":644},{"type":488,"tag":510,"props":839,"children":840},{"style":663},[841],{"type":493,"value":842}," r",{"type":488,"tag":510,"props":844,"children":845},{"style":621},[846],{"type":493,"value":847}," 右侧括号已经用了几个\n",{"type":488,"tag":510,"props":849,"children":851},{"class":512,"line":850},11,[852,856,860,864,869],{"type":488,"tag":510,"props":853,"children":854},{"style":621},[855],{"type":493,"value":803},{"type":488,"tag":510,"props":857,"children":858},{"style":635},[859],{"type":493,"value":638},{"type":488,"tag":510,"props":861,"children":862},{"style":641},[863],{"type":493,"value":644},{"type":488,"tag":510,"props":865,"children":866},{"style":663},[867],{"type":493,"value":868}," str",{"type":488,"tag":510,"props":870,"children":871},{"style":621},[872],{"type":493,"value":873}," 当前递归得到的拼接字符串结果\n",{"type":488,"tag":510,"props":875,"children":877},{"class":512,"line":876},12,[878],{"type":488,"tag":510,"props":879,"children":880},{"style":621},[881],{"type":493,"value":882},"   */\n",{"type":488,"tag":510,"props":884,"children":886},{"class":512,"line":885},13,[887,892,897,902,907,912,916,920,924,928],{"type":488,"tag":510,"props":888,"children":889},{"style":713},[890],{"type":493,"value":891},"  function",{"type":488,"tag":510,"props":893,"children":894},{"style":719},[895],{"type":493,"value":896}," dfs",{"type":488,"tag":510,"props":898,"children":899},{"style":635},[900],{"type":493,"value":901},"(",{"type":488,"tag":510,"props":903,"children":904},{"style":663},[905],{"type":493,"value":906},"l",{"type":488,"tag":510,"props":908,"children":909},{"style":635},[910],{"type":493,"value":911},",",{"type":488,"tag":510,"props":913,"children":914},{"style":663},[915],{"type":493,"value":842},{"type":488,"tag":510,"props":917,"children":918},{"style":635},[919],{"type":493,"value":911},{"type":488,"tag":510,"props":921,"children":922},{"style":663},[923],{"type":493,"value":868},{"type":488,"tag":510,"props":925,"children":926},{"style":635},[927],{"type":493,"value":747},{"type":488,"tag":510,"props":929,"children":930},{"style":635},[931],{"type":493,"value":752},{"type":488,"tag":510,"props":933,"children":935},{"class":512,"line":934},14,[936,941,945,949,954,959,964,968,972,976,980],{"type":488,"tag":510,"props":937,"children":938},{"style":641},[939],{"type":493,"value":940},"    if",{"type":488,"tag":510,"props":942,"children":943},{"style":635},[944],{"type":493,"value":737},{"type":488,"tag":510,"props":946,"children":947},{"style":663},[948],{"type":493,"value":906},{"type":488,"tag":510,"props":950,"children":951},{"style":713},[952],{"type":493,"value":953}," ===",{"type":488,"tag":510,"props":955,"children":956},{"style":663},[957],{"type":493,"value":958}," n",{"type":488,"tag":510,"props":960,"children":961},{"style":713},[962],{"type":493,"value":963}," &&",{"type":488,"tag":510,"props":965,"children":966},{"style":663},[967],{"type":493,"value":842},{"type":488,"tag":510,"props":969,"children":970},{"style":713},[971],{"type":493,"value":953},{"type":488,"tag":510,"props":973,"children":974},{"style":663},[975],{"type":493,"value":958},{"type":488,"tag":510,"props":977,"children":978},{"style":635},[979],{"type":493,"value":747},{"type":488,"tag":510,"props":981,"children":982},{"style":635},[983],{"type":493,"value":752},{"type":488,"tag":510,"props":985,"children":987},{"class":512,"line":986},15,[988,993,997,1002,1007,1011,1016],{"type":488,"tag":510,"props":989,"children":990},{"style":641},[991],{"type":493,"value":992},"      return",{"type":488,"tag":510,"props":994,"children":995},{"style":663},[996],{"type":493,"value":766},{"type":488,"tag":510,"props":998,"children":999},{"style":635},[1000],{"type":493,"value":1001},".",{"type":488,"tag":510,"props":1003,"children":1004},{"style":719},[1005],{"type":493,"value":1006},"push",{"type":488,"tag":510,"props":1008,"children":1009},{"style":635},[1010],{"type":493,"value":901},{"type":488,"tag":510,"props":1012,"children":1013},{"style":663},[1014],{"type":493,"value":1015},"str",{"type":488,"tag":510,"props":1017,"children":1018},{"style":635},[1019],{"type":493,"value":1020},");\n",{"type":488,"tag":510,"props":1022,"children":1024},{"class":512,"line":1023},16,[1025],{"type":488,"tag":510,"props":1026,"children":1027},{"style":635},[1028],{"type":493,"value":1029},"    }\n",{"type":488,"tag":510,"props":1031,"children":1033},{"class":512,"line":1032},17,[1034],{"type":488,"tag":510,"props":1035,"children":1036},{"style":621},[1037],{"type":493,"value":1038},"    // l \u003C r 时不满足条件，剪枝\n",{"type":488,"tag":510,"props":1040,"children":1042},{"class":512,"line":1041},18,[1043,1047,1051,1055,1060,1064,1068,1073],{"type":488,"tag":510,"props":1044,"children":1045},{"style":641},[1046],{"type":493,"value":940},{"type":488,"tag":510,"props":1048,"children":1049},{"style":635},[1050],{"type":493,"value":737},{"type":488,"tag":510,"props":1052,"children":1053},{"style":663},[1054],{"type":493,"value":906},{"type":488,"tag":510,"props":1056,"children":1057},{"style":635},[1058],{"type":493,"value":1059}," \u003C",{"type":488,"tag":510,"props":1061,"children":1062},{"style":663},[1063],{"type":493,"value":842},{"type":488,"tag":510,"props":1065,"children":1066},{"style":635},[1067],{"type":493,"value":747},{"type":488,"tag":510,"props":1069,"children":1070},{"style":641},[1071],{"type":493,"value":1072}," return",{"type":488,"tag":510,"props":1074,"children":1075},{"style":635},[1076],{"type":493,"value":1077},";\n",{"type":488,"tag":510,"props":1079,"children":1081},{"class":512,"line":1080},19,[1082],{"type":488,"tag":510,"props":1083,"children":1084},{"style":621},[1085],{"type":493,"value":1086},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":488,"tag":510,"props":1088,"children":1090},{"class":512,"line":1089},20,[1091,1095,1099,1103,1107,1111,1115],{"type":488,"tag":510,"props":1092,"children":1093},{"style":641},[1094],{"type":493,"value":940},{"type":488,"tag":510,"props":1096,"children":1097},{"style":635},[1098],{"type":493,"value":737},{"type":488,"tag":510,"props":1100,"children":1101},{"style":663},[1102],{"type":493,"value":906},{"type":488,"tag":510,"props":1104,"children":1105},{"style":635},[1106],{"type":493,"value":1059},{"type":488,"tag":510,"props":1108,"children":1109},{"style":663},[1110],{"type":493,"value":958},{"type":488,"tag":510,"props":1112,"children":1113},{"style":635},[1114],{"type":493,"value":747},{"type":488,"tag":510,"props":1116,"children":1117},{"style":635},[1118],{"type":493,"value":752},{"type":488,"tag":510,"props":1120,"children":1122},{"class":512,"line":1121},21,[1123,1128,1132,1136,1141,1147,1151,1155,1159,1163,1167,1173,1178,1183],{"type":488,"tag":510,"props":1124,"children":1125},{"style":719},[1126],{"type":493,"value":1127},"      dfs",{"type":488,"tag":510,"props":1129,"children":1130},{"style":635},[1131],{"type":493,"value":901},{"type":488,"tag":510,"props":1133,"children":1134},{"style":663},[1135],{"type":493,"value":906},{"type":488,"tag":510,"props":1137,"children":1138},{"style":713},[1139],{"type":493,"value":1140}," +",{"type":488,"tag":510,"props":1142,"children":1144},{"style":1143},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1145],{"type":493,"value":1146}," 1",{"type":488,"tag":510,"props":1148,"children":1149},{"style":635},[1150],{"type":493,"value":911},{"type":488,"tag":510,"props":1152,"children":1153},{"style":663},[1154],{"type":493,"value":842},{"type":488,"tag":510,"props":1156,"children":1157},{"style":635},[1158],{"type":493,"value":911},{"type":488,"tag":510,"props":1160,"children":1161},{"style":663},[1162],{"type":493,"value":868},{"type":488,"tag":510,"props":1164,"children":1165},{"style":713},[1166],{"type":493,"value":1140},{"type":488,"tag":510,"props":1168,"children":1170},{"style":1169},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1171],{"type":493,"value":1172}," \"",{"type":488,"tag":510,"props":1174,"children":1176},{"style":1175},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1177],{"type":493,"value":901},{"type":488,"tag":510,"props":1179,"children":1180},{"style":1169},[1181],{"type":493,"value":1182},"\"",{"type":488,"tag":510,"props":1184,"children":1185},{"style":635},[1186],{"type":493,"value":1020},{"type":488,"tag":510,"props":1188,"children":1190},{"class":512,"line":1189},22,[1191],{"type":488,"tag":510,"props":1192,"children":1193},{"style":635},[1194],{"type":493,"value":1029},{"type":488,"tag":510,"props":1196,"children":1198},{"class":512,"line":1197},23,[1199],{"type":488,"tag":510,"props":1200,"children":1201},{"style":621},[1202],{"type":493,"value":1203},"    // r \u003C l 时，可以插入右括号\n",{"type":488,"tag":510,"props":1205,"children":1207},{"class":512,"line":1206},24,[1208,1212,1216,1221,1225,1229,1233],{"type":488,"tag":510,"props":1209,"children":1210},{"style":641},[1211],{"type":493,"value":940},{"type":488,"tag":510,"props":1213,"children":1214},{"style":635},[1215],{"type":493,"value":737},{"type":488,"tag":510,"props":1217,"children":1218},{"style":663},[1219],{"type":493,"value":1220},"r",{"type":488,"tag":510,"props":1222,"children":1223},{"style":635},[1224],{"type":493,"value":1059},{"type":488,"tag":510,"props":1226,"children":1227},{"style":663},[1228],{"type":493,"value":816},{"type":488,"tag":510,"props":1230,"children":1231},{"style":635},[1232],{"type":493,"value":747},{"type":488,"tag":510,"props":1234,"children":1235},{"style":635},[1236],{"type":493,"value":752},{"type":488,"tag":510,"props":1238,"children":1240},{"class":512,"line":1239},25,[1241,1245,1249,1253,1257,1261,1265,1269,1273,1277,1281,1285,1289,1293],{"type":488,"tag":510,"props":1242,"children":1243},{"style":719},[1244],{"type":493,"value":1127},{"type":488,"tag":510,"props":1246,"children":1247},{"style":635},[1248],{"type":493,"value":901},{"type":488,"tag":510,"props":1250,"children":1251},{"style":663},[1252],{"type":493,"value":906},{"type":488,"tag":510,"props":1254,"children":1255},{"style":635},[1256],{"type":493,"value":911},{"type":488,"tag":510,"props":1258,"children":1259},{"style":663},[1260],{"type":493,"value":842},{"type":488,"tag":510,"props":1262,"children":1263},{"style":713},[1264],{"type":493,"value":1140},{"type":488,"tag":510,"props":1266,"children":1267},{"style":1143},[1268],{"type":493,"value":1146},{"type":488,"tag":510,"props":1270,"children":1271},{"style":635},[1272],{"type":493,"value":911},{"type":488,"tag":510,"props":1274,"children":1275},{"style":663},[1276],{"type":493,"value":868},{"type":488,"tag":510,"props":1278,"children":1279},{"style":713},[1280],{"type":493,"value":1140},{"type":488,"tag":510,"props":1282,"children":1283},{"style":1169},[1284],{"type":493,"value":1172},{"type":488,"tag":510,"props":1286,"children":1287},{"style":1175},[1288],{"type":493,"value":747},{"type":488,"tag":510,"props":1290,"children":1291},{"style":1169},[1292],{"type":493,"value":1182},{"type":488,"tag":510,"props":1294,"children":1295},{"style":635},[1296],{"type":493,"value":1020},{"type":488,"tag":510,"props":1298,"children":1300},{"class":512,"line":1299},26,[1301],{"type":488,"tag":510,"props":1302,"children":1303},{"style":635},[1304],{"type":493,"value":1029},{"type":488,"tag":510,"props":1306,"children":1308},{"class":512,"line":1307},27,[1309],{"type":488,"tag":510,"props":1310,"children":1311},{"style":635},[1312],{"type":493,"value":1313},"  }\n",{"type":488,"tag":510,"props":1315,"children":1317},{"class":512,"line":1316},28,[1318],{"type":488,"tag":510,"props":1319,"children":1320},{"emptyLinePlaceholder":782},[1321],{"type":493,"value":785},{"type":488,"tag":510,"props":1323,"children":1325},{"class":512,"line":1324},29,[1326,1331,1335,1340,1344,1349,1353,1358],{"type":488,"tag":510,"props":1327,"children":1328},{"style":719},[1329],{"type":493,"value":1330},"  dfs",{"type":488,"tag":510,"props":1332,"children":1333},{"style":635},[1334],{"type":493,"value":901},{"type":488,"tag":510,"props":1336,"children":1337},{"style":1143},[1338],{"type":493,"value":1339},"0",{"type":488,"tag":510,"props":1341,"children":1342},{"style":635},[1343],{"type":493,"value":911},{"type":488,"tag":510,"props":1345,"children":1346},{"style":1143},[1347],{"type":493,"value":1348}," 0",{"type":488,"tag":510,"props":1350,"children":1351},{"style":635},[1352],{"type":493,"value":911},{"type":488,"tag":510,"props":1354,"children":1355},{"style":1169},[1356],{"type":493,"value":1357}," \"\"",{"type":488,"tag":510,"props":1359,"children":1360},{"style":635},[1361],{"type":493,"value":1020},{"type":488,"tag":510,"props":1363,"children":1365},{"class":512,"line":1364},30,[1366],{"type":488,"tag":510,"props":1367,"children":1368},{"emptyLinePlaceholder":782},[1369],{"type":493,"value":785},{"type":488,"tag":510,"props":1371,"children":1373},{"class":512,"line":1372},31,[1374,1379,1383],{"type":488,"tag":510,"props":1375,"children":1376},{"style":641},[1377],{"type":493,"value":1378},"  return",{"type":488,"tag":510,"props":1380,"children":1381},{"style":663},[1382],{"type":493,"value":766},{"type":488,"tag":510,"props":1384,"children":1385},{"style":635},[1386],{"type":493,"value":1077},{"type":488,"tag":510,"props":1388,"children":1390},{"class":512,"line":1389},32,[1391],{"type":488,"tag":510,"props":1392,"children":1393},{"style":635},[1394],{"type":493,"value":1395},"};\n",{"type":488,"tag":1397,"props":1398,"children":1399},"style",{},[1400],{"type":493,"value":1401},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":709,"depth":709,"links":1403},[1404,1405],{"id":575,"depth":522,"text":575},{"id":598,"depth":522,"text":598,"children":1406},[1407],{"id":604,"depth":669,"text":604},"markdown","content:1.algorithm:3.leetcode:3.major:22.generate-parentheses.md","content","1.algorithm/3.leetcode/3.major/22.generate-parentheses.md","md",[1414,1416],{"_path":90,"title":89,"description":1415},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":96,"title":95,"description":1417},"给你一个链表数组，每个链表都已经按升序排列。",1714046223832]