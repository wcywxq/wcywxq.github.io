[{"data":1,"prerenderedAt":1443},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/generate-parentheses":503,"/algorithm/leetcode/major/generate-parentheses-surround":1438},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":93,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":92,"description":507,"url":508,"body":509,"_type":1433,"_id":1434,"_source":1435,"_file":1436,"_extension":1437},"major",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":510,"children":511,"toc":1427},"root",[512,519,524,554,559,582,587,597,603,608,621,626,632,1421],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522],{"type":518,"value":523},"示例 1：",{"type":513,"tag":525,"props":526,"children":529},"pre",{"className":527,"code":528,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[530],{"type":513,"tag":531,"props":532,"children":533},"code",{"__ignoreMap":506},[534,545],{"type":513,"tag":535,"props":536,"children":539},"span",{"class":537,"line":538},"line",1,[540],{"type":513,"tag":535,"props":541,"children":542},{},[543],{"type":518,"value":544},"输入：n = 3\n",{"type":513,"tag":535,"props":546,"children":548},{"class":537,"line":547},2,[549],{"type":513,"tag":535,"props":550,"children":551},{},[552],{"type":518,"value":553},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":513,"tag":514,"props":555,"children":556},{},[557],{"type":518,"value":558},"示例 2：",{"type":513,"tag":525,"props":560,"children":562},{"className":527,"code":561,"language":518,"meta":506,"style":506},"输入：n = 1\n输出：[\"()\"]\n",[563],{"type":513,"tag":531,"props":564,"children":565},{"__ignoreMap":506},[566,574],{"type":513,"tag":535,"props":567,"children":568},{"class":537,"line":538},[569],{"type":513,"tag":535,"props":570,"children":571},{},[572],{"type":518,"value":573},"输入：n = 1\n",{"type":513,"tag":535,"props":575,"children":576},{"class":537,"line":547},[577],{"type":513,"tag":535,"props":578,"children":579},{},[580],{"type":518,"value":581},"输出：[\"()\"]\n",{"type":513,"tag":514,"props":583,"children":584},{},[585],{"type":518,"value":586},"提示：",{"type":513,"tag":588,"props":589,"children":590},"ul",{},[591],{"type":513,"tag":592,"props":593,"children":594},"li",{},[595],{"type":518,"value":596},"1 \u003C= n \u003C= 8",{"type":513,"tag":598,"props":599,"children":601},"h2",{"id":600},"解题思路",[602],{"type":518,"value":600},{"type":513,"tag":514,"props":604,"children":605},{},[606],{"type":518,"value":607},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":513,"tag":588,"props":609,"children":610},{},[611,616],{"type":513,"tag":592,"props":612,"children":613},{},[614],{"type":518,"value":615},"左括号数目 = 右括号数目",{"type":513,"tag":592,"props":617,"children":618},{},[619],{"type":518,"value":620},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":513,"tag":598,"props":622,"children":624},{"id":623},"实现",[625],{"type":518,"value":623},{"type":513,"tag":627,"props":628,"children":630},"h3",{"id":629},"回溯",[631],{"type":518,"value":629},{"type":513,"tag":525,"props":633,"children":637},{"className":634,"code":635,"language":636,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[638],{"type":513,"tag":531,"props":639,"children":640},{"__ignoreMap":506},[641,650,692,723,732,778,801,811,820,847,873,899,908,957,1009,1046,1055,1064,1103,1112,1144,1212,1220,1229,1262,1322,1330,1339,1347,1387,1395,1412],{"type":513,"tag":535,"props":642,"children":643},{"class":537,"line":538},[644],{"type":513,"tag":535,"props":645,"children":647},{"style":646},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[648],{"type":518,"value":649},"/**\n",{"type":513,"tag":535,"props":651,"children":652},{"class":537,"line":547},[653,658,664,670,675,681,686],{"type":513,"tag":535,"props":654,"children":655},{"style":646},[656],{"type":518,"value":657}," * ",{"type":513,"tag":535,"props":659,"children":661},{"style":660},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[662],{"type":518,"value":663},"@",{"type":513,"tag":535,"props":665,"children":667},{"style":666},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[668],{"type":518,"value":669},"param",{"type":513,"tag":535,"props":671,"children":672},{"style":660},[673],{"type":518,"value":674}," {",{"type":513,"tag":535,"props":676,"children":678},{"style":677},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[679],{"type":518,"value":680},"number",{"type":513,"tag":535,"props":682,"children":683},{"style":660},[684],{"type":518,"value":685},"}",{"type":513,"tag":535,"props":687,"children":689},{"style":688},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[690],{"type":518,"value":691}," n\n",{"type":513,"tag":535,"props":693,"children":695},{"class":537,"line":694},3,[696,700,704,709,713,718],{"type":513,"tag":535,"props":697,"children":698},{"style":646},[699],{"type":518,"value":657},{"type":513,"tag":535,"props":701,"children":702},{"style":660},[703],{"type":518,"value":663},{"type":513,"tag":535,"props":705,"children":706},{"style":666},[707],{"type":518,"value":708},"return",{"type":513,"tag":535,"props":710,"children":711},{"style":660},[712],{"type":518,"value":674},{"type":513,"tag":535,"props":714,"children":715},{"style":677},[716],{"type":518,"value":717},"string[]",{"type":513,"tag":535,"props":719,"children":720},{"style":660},[721],{"type":518,"value":722},"}\n",{"type":513,"tag":535,"props":724,"children":726},{"class":537,"line":725},4,[727],{"type":513,"tag":535,"props":728,"children":729},{"style":646},[730],{"type":518,"value":731}," */\n",{"type":513,"tag":535,"props":733,"children":735},{"class":537,"line":734},5,[736,742,748,753,758,763,768,773],{"type":513,"tag":535,"props":737,"children":739},{"style":738},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[740],{"type":518,"value":741},"var",{"type":513,"tag":535,"props":743,"children":745},{"style":744},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[746],{"type":518,"value":747}," generateParenthesis",{"type":513,"tag":535,"props":749,"children":750},{"style":660},[751],{"type":518,"value":752}," =",{"type":513,"tag":535,"props":754,"children":755},{"style":738},[756],{"type":518,"value":757}," function",{"type":513,"tag":535,"props":759,"children":760},{"style":660},[761],{"type":518,"value":762}," (",{"type":513,"tag":535,"props":764,"children":765},{"style":688},[766],{"type":518,"value":767},"n",{"type":513,"tag":535,"props":769,"children":770},{"style":660},[771],{"type":518,"value":772},")",{"type":513,"tag":535,"props":774,"children":775},{"style":660},[776],{"type":518,"value":777}," {\n",{"type":513,"tag":535,"props":779,"children":781},{"class":537,"line":780},6,[782,787,792,796],{"type":513,"tag":535,"props":783,"children":784},{"style":738},[785],{"type":518,"value":786},"  const",{"type":513,"tag":535,"props":788,"children":789},{"style":688},[790],{"type":518,"value":791}," res",{"type":513,"tag":535,"props":793,"children":794},{"style":660},[795],{"type":518,"value":752},{"type":513,"tag":535,"props":797,"children":798},{"style":660},[799],{"type":518,"value":800}," [];\n",{"type":513,"tag":535,"props":802,"children":804},{"class":537,"line":803},7,[805],{"type":513,"tag":535,"props":806,"children":808},{"emptyLinePlaceholder":807},true,[809],{"type":518,"value":810},"\n",{"type":513,"tag":535,"props":812,"children":814},{"class":537,"line":813},8,[815],{"type":513,"tag":535,"props":816,"children":817},{"style":646},[818],{"type":518,"value":819},"  /**\n",{"type":513,"tag":535,"props":821,"children":823},{"class":537,"line":822},9,[824,829,833,837,842],{"type":513,"tag":535,"props":825,"children":826},{"style":646},[827],{"type":518,"value":828},"   * ",{"type":513,"tag":535,"props":830,"children":831},{"style":660},[832],{"type":518,"value":663},{"type":513,"tag":535,"props":834,"children":835},{"style":666},[836],{"type":518,"value":669},{"type":513,"tag":535,"props":838,"children":839},{"style":688},[840],{"type":518,"value":841}," l",{"type":513,"tag":535,"props":843,"children":844},{"style":646},[845],{"type":518,"value":846}," 左侧括号已经用了几个\n",{"type":513,"tag":535,"props":848,"children":850},{"class":537,"line":849},10,[851,855,859,863,868],{"type":513,"tag":535,"props":852,"children":853},{"style":646},[854],{"type":518,"value":828},{"type":513,"tag":535,"props":856,"children":857},{"style":660},[858],{"type":518,"value":663},{"type":513,"tag":535,"props":860,"children":861},{"style":666},[862],{"type":518,"value":669},{"type":513,"tag":535,"props":864,"children":865},{"style":688},[866],{"type":518,"value":867}," r",{"type":513,"tag":535,"props":869,"children":870},{"style":646},[871],{"type":518,"value":872}," 右侧括号已经用了几个\n",{"type":513,"tag":535,"props":874,"children":876},{"class":537,"line":875},11,[877,881,885,889,894],{"type":513,"tag":535,"props":878,"children":879},{"style":646},[880],{"type":518,"value":828},{"type":513,"tag":535,"props":882,"children":883},{"style":660},[884],{"type":518,"value":663},{"type":513,"tag":535,"props":886,"children":887},{"style":666},[888],{"type":518,"value":669},{"type":513,"tag":535,"props":890,"children":891},{"style":688},[892],{"type":518,"value":893}," str",{"type":513,"tag":535,"props":895,"children":896},{"style":646},[897],{"type":518,"value":898}," 当前递归得到的拼接字符串结果\n",{"type":513,"tag":535,"props":900,"children":902},{"class":537,"line":901},12,[903],{"type":513,"tag":535,"props":904,"children":905},{"style":646},[906],{"type":518,"value":907},"   */\n",{"type":513,"tag":535,"props":909,"children":911},{"class":537,"line":910},13,[912,917,922,927,932,937,941,945,949,953],{"type":513,"tag":535,"props":913,"children":914},{"style":738},[915],{"type":518,"value":916},"  function",{"type":513,"tag":535,"props":918,"children":919},{"style":744},[920],{"type":518,"value":921}," dfs",{"type":513,"tag":535,"props":923,"children":924},{"style":660},[925],{"type":518,"value":926},"(",{"type":513,"tag":535,"props":928,"children":929},{"style":688},[930],{"type":518,"value":931},"l",{"type":513,"tag":535,"props":933,"children":934},{"style":660},[935],{"type":518,"value":936},",",{"type":513,"tag":535,"props":938,"children":939},{"style":688},[940],{"type":518,"value":867},{"type":513,"tag":535,"props":942,"children":943},{"style":660},[944],{"type":518,"value":936},{"type":513,"tag":535,"props":946,"children":947},{"style":688},[948],{"type":518,"value":893},{"type":513,"tag":535,"props":950,"children":951},{"style":660},[952],{"type":518,"value":772},{"type":513,"tag":535,"props":954,"children":955},{"style":660},[956],{"type":518,"value":777},{"type":513,"tag":535,"props":958,"children":960},{"class":537,"line":959},14,[961,966,970,974,979,984,989,993,997,1001,1005],{"type":513,"tag":535,"props":962,"children":963},{"style":666},[964],{"type":518,"value":965},"    if",{"type":513,"tag":535,"props":967,"children":968},{"style":660},[969],{"type":518,"value":762},{"type":513,"tag":535,"props":971,"children":972},{"style":688},[973],{"type":518,"value":931},{"type":513,"tag":535,"props":975,"children":976},{"style":738},[977],{"type":518,"value":978}," ===",{"type":513,"tag":535,"props":980,"children":981},{"style":688},[982],{"type":518,"value":983}," n",{"type":513,"tag":535,"props":985,"children":986},{"style":738},[987],{"type":518,"value":988}," &&",{"type":513,"tag":535,"props":990,"children":991},{"style":688},[992],{"type":518,"value":867},{"type":513,"tag":535,"props":994,"children":995},{"style":738},[996],{"type":518,"value":978},{"type":513,"tag":535,"props":998,"children":999},{"style":688},[1000],{"type":518,"value":983},{"type":513,"tag":535,"props":1002,"children":1003},{"style":660},[1004],{"type":518,"value":772},{"type":513,"tag":535,"props":1006,"children":1007},{"style":660},[1008],{"type":518,"value":777},{"type":513,"tag":535,"props":1010,"children":1012},{"class":537,"line":1011},15,[1013,1018,1022,1027,1032,1036,1041],{"type":513,"tag":535,"props":1014,"children":1015},{"style":666},[1016],{"type":518,"value":1017},"      return",{"type":513,"tag":535,"props":1019,"children":1020},{"style":688},[1021],{"type":518,"value":791},{"type":513,"tag":535,"props":1023,"children":1024},{"style":660},[1025],{"type":518,"value":1026},".",{"type":513,"tag":535,"props":1028,"children":1029},{"style":744},[1030],{"type":518,"value":1031},"push",{"type":513,"tag":535,"props":1033,"children":1034},{"style":660},[1035],{"type":518,"value":926},{"type":513,"tag":535,"props":1037,"children":1038},{"style":688},[1039],{"type":518,"value":1040},"str",{"type":513,"tag":535,"props":1042,"children":1043},{"style":660},[1044],{"type":518,"value":1045},");\n",{"type":513,"tag":535,"props":1047,"children":1049},{"class":537,"line":1048},16,[1050],{"type":513,"tag":535,"props":1051,"children":1052},{"style":660},[1053],{"type":518,"value":1054},"    }\n",{"type":513,"tag":535,"props":1056,"children":1058},{"class":537,"line":1057},17,[1059],{"type":513,"tag":535,"props":1060,"children":1061},{"style":646},[1062],{"type":518,"value":1063},"    // l \u003C r 时不满足条件，剪枝\n",{"type":513,"tag":535,"props":1065,"children":1067},{"class":537,"line":1066},18,[1068,1072,1076,1080,1085,1089,1093,1098],{"type":513,"tag":535,"props":1069,"children":1070},{"style":666},[1071],{"type":518,"value":965},{"type":513,"tag":535,"props":1073,"children":1074},{"style":660},[1075],{"type":518,"value":762},{"type":513,"tag":535,"props":1077,"children":1078},{"style":688},[1079],{"type":518,"value":931},{"type":513,"tag":535,"props":1081,"children":1082},{"style":660},[1083],{"type":518,"value":1084}," \u003C",{"type":513,"tag":535,"props":1086,"children":1087},{"style":688},[1088],{"type":518,"value":867},{"type":513,"tag":535,"props":1090,"children":1091},{"style":660},[1092],{"type":518,"value":772},{"type":513,"tag":535,"props":1094,"children":1095},{"style":666},[1096],{"type":518,"value":1097}," return",{"type":513,"tag":535,"props":1099,"children":1100},{"style":660},[1101],{"type":518,"value":1102},";\n",{"type":513,"tag":535,"props":1104,"children":1106},{"class":537,"line":1105},19,[1107],{"type":513,"tag":535,"props":1108,"children":1109},{"style":646},[1110],{"type":518,"value":1111},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":513,"tag":535,"props":1113,"children":1115},{"class":537,"line":1114},20,[1116,1120,1124,1128,1132,1136,1140],{"type":513,"tag":535,"props":1117,"children":1118},{"style":666},[1119],{"type":518,"value":965},{"type":513,"tag":535,"props":1121,"children":1122},{"style":660},[1123],{"type":518,"value":762},{"type":513,"tag":535,"props":1125,"children":1126},{"style":688},[1127],{"type":518,"value":931},{"type":513,"tag":535,"props":1129,"children":1130},{"style":660},[1131],{"type":518,"value":1084},{"type":513,"tag":535,"props":1133,"children":1134},{"style":688},[1135],{"type":518,"value":983},{"type":513,"tag":535,"props":1137,"children":1138},{"style":660},[1139],{"type":518,"value":772},{"type":513,"tag":535,"props":1141,"children":1142},{"style":660},[1143],{"type":518,"value":777},{"type":513,"tag":535,"props":1145,"children":1147},{"class":537,"line":1146},21,[1148,1153,1157,1161,1166,1172,1176,1180,1184,1188,1192,1198,1203,1208],{"type":513,"tag":535,"props":1149,"children":1150},{"style":744},[1151],{"type":518,"value":1152},"      dfs",{"type":513,"tag":535,"props":1154,"children":1155},{"style":660},[1156],{"type":518,"value":926},{"type":513,"tag":535,"props":1158,"children":1159},{"style":688},[1160],{"type":518,"value":931},{"type":513,"tag":535,"props":1162,"children":1163},{"style":738},[1164],{"type":518,"value":1165}," +",{"type":513,"tag":535,"props":1167,"children":1169},{"style":1168},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1170],{"type":518,"value":1171}," 1",{"type":513,"tag":535,"props":1173,"children":1174},{"style":660},[1175],{"type":518,"value":936},{"type":513,"tag":535,"props":1177,"children":1178},{"style":688},[1179],{"type":518,"value":867},{"type":513,"tag":535,"props":1181,"children":1182},{"style":660},[1183],{"type":518,"value":936},{"type":513,"tag":535,"props":1185,"children":1186},{"style":688},[1187],{"type":518,"value":893},{"type":513,"tag":535,"props":1189,"children":1190},{"style":738},[1191],{"type":518,"value":1165},{"type":513,"tag":535,"props":1193,"children":1195},{"style":1194},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1196],{"type":518,"value":1197}," \"",{"type":513,"tag":535,"props":1199,"children":1201},{"style":1200},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1202],{"type":518,"value":926},{"type":513,"tag":535,"props":1204,"children":1205},{"style":1194},[1206],{"type":518,"value":1207},"\"",{"type":513,"tag":535,"props":1209,"children":1210},{"style":660},[1211],{"type":518,"value":1045},{"type":513,"tag":535,"props":1213,"children":1215},{"class":537,"line":1214},22,[1216],{"type":513,"tag":535,"props":1217,"children":1218},{"style":660},[1219],{"type":518,"value":1054},{"type":513,"tag":535,"props":1221,"children":1223},{"class":537,"line":1222},23,[1224],{"type":513,"tag":535,"props":1225,"children":1226},{"style":646},[1227],{"type":518,"value":1228},"    // r \u003C l 时，可以插入右括号\n",{"type":513,"tag":535,"props":1230,"children":1232},{"class":537,"line":1231},24,[1233,1237,1241,1246,1250,1254,1258],{"type":513,"tag":535,"props":1234,"children":1235},{"style":666},[1236],{"type":518,"value":965},{"type":513,"tag":535,"props":1238,"children":1239},{"style":660},[1240],{"type":518,"value":762},{"type":513,"tag":535,"props":1242,"children":1243},{"style":688},[1244],{"type":518,"value":1245},"r",{"type":513,"tag":535,"props":1247,"children":1248},{"style":660},[1249],{"type":518,"value":1084},{"type":513,"tag":535,"props":1251,"children":1252},{"style":688},[1253],{"type":518,"value":841},{"type":513,"tag":535,"props":1255,"children":1256},{"style":660},[1257],{"type":518,"value":772},{"type":513,"tag":535,"props":1259,"children":1260},{"style":660},[1261],{"type":518,"value":777},{"type":513,"tag":535,"props":1263,"children":1265},{"class":537,"line":1264},25,[1266,1270,1274,1278,1282,1286,1290,1294,1298,1302,1306,1310,1314,1318],{"type":513,"tag":535,"props":1267,"children":1268},{"style":744},[1269],{"type":518,"value":1152},{"type":513,"tag":535,"props":1271,"children":1272},{"style":660},[1273],{"type":518,"value":926},{"type":513,"tag":535,"props":1275,"children":1276},{"style":688},[1277],{"type":518,"value":931},{"type":513,"tag":535,"props":1279,"children":1280},{"style":660},[1281],{"type":518,"value":936},{"type":513,"tag":535,"props":1283,"children":1284},{"style":688},[1285],{"type":518,"value":867},{"type":513,"tag":535,"props":1287,"children":1288},{"style":738},[1289],{"type":518,"value":1165},{"type":513,"tag":535,"props":1291,"children":1292},{"style":1168},[1293],{"type":518,"value":1171},{"type":513,"tag":535,"props":1295,"children":1296},{"style":660},[1297],{"type":518,"value":936},{"type":513,"tag":535,"props":1299,"children":1300},{"style":688},[1301],{"type":518,"value":893},{"type":513,"tag":535,"props":1303,"children":1304},{"style":738},[1305],{"type":518,"value":1165},{"type":513,"tag":535,"props":1307,"children":1308},{"style":1194},[1309],{"type":518,"value":1197},{"type":513,"tag":535,"props":1311,"children":1312},{"style":1200},[1313],{"type":518,"value":772},{"type":513,"tag":535,"props":1315,"children":1316},{"style":1194},[1317],{"type":518,"value":1207},{"type":513,"tag":535,"props":1319,"children":1320},{"style":660},[1321],{"type":518,"value":1045},{"type":513,"tag":535,"props":1323,"children":1325},{"class":537,"line":1324},26,[1326],{"type":513,"tag":535,"props":1327,"children":1328},{"style":660},[1329],{"type":518,"value":1054},{"type":513,"tag":535,"props":1331,"children":1333},{"class":537,"line":1332},27,[1334],{"type":513,"tag":535,"props":1335,"children":1336},{"style":660},[1337],{"type":518,"value":1338},"  }\n",{"type":513,"tag":535,"props":1340,"children":1342},{"class":537,"line":1341},28,[1343],{"type":513,"tag":535,"props":1344,"children":1345},{"emptyLinePlaceholder":807},[1346],{"type":518,"value":810},{"type":513,"tag":535,"props":1348,"children":1350},{"class":537,"line":1349},29,[1351,1356,1360,1365,1369,1374,1378,1383],{"type":513,"tag":535,"props":1352,"children":1353},{"style":744},[1354],{"type":518,"value":1355},"  dfs",{"type":513,"tag":535,"props":1357,"children":1358},{"style":660},[1359],{"type":518,"value":926},{"type":513,"tag":535,"props":1361,"children":1362},{"style":1168},[1363],{"type":518,"value":1364},"0",{"type":513,"tag":535,"props":1366,"children":1367},{"style":660},[1368],{"type":518,"value":936},{"type":513,"tag":535,"props":1370,"children":1371},{"style":1168},[1372],{"type":518,"value":1373}," 0",{"type":513,"tag":535,"props":1375,"children":1376},{"style":660},[1377],{"type":518,"value":936},{"type":513,"tag":535,"props":1379,"children":1380},{"style":1194},[1381],{"type":518,"value":1382}," \"\"",{"type":513,"tag":535,"props":1384,"children":1385},{"style":660},[1386],{"type":518,"value":1045},{"type":513,"tag":535,"props":1388,"children":1390},{"class":537,"line":1389},30,[1391],{"type":513,"tag":535,"props":1392,"children":1393},{"emptyLinePlaceholder":807},[1394],{"type":518,"value":810},{"type":513,"tag":535,"props":1396,"children":1398},{"class":537,"line":1397},31,[1399,1404,1408],{"type":513,"tag":535,"props":1400,"children":1401},{"style":666},[1402],{"type":518,"value":1403},"  return",{"type":513,"tag":535,"props":1405,"children":1406},{"style":688},[1407],{"type":518,"value":791},{"type":513,"tag":535,"props":1409,"children":1410},{"style":660},[1411],{"type":518,"value":1102},{"type":513,"tag":535,"props":1413,"children":1415},{"class":537,"line":1414},32,[1416],{"type":513,"tag":535,"props":1417,"children":1418},{"style":660},[1419],{"type":518,"value":1420},"};\n",{"type":513,"tag":1422,"props":1423,"children":1424},"style",{},[1425],{"type":518,"value":1426},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":734,"depth":734,"links":1428},[1429,1430],{"id":600,"depth":547,"text":600},{"id":623,"depth":547,"text":623,"children":1431},[1432],{"id":629,"depth":694,"text":629},"markdown","content:1.algorithm:3.leetcode:3.major:22.generate-parentheses.md","content","1.algorithm/3.leetcode/3.major/22.generate-parentheses.md","md",[1439,1441],{"_path":90,"title":89,"description":1440},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":96,"title":95,"description":1442},"给你一个链表数组，每个链表都已经按升序排列。",1714056092600]