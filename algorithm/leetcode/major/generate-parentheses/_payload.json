[{"data":1,"prerenderedAt":1449},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/generate-parentheses":509,"/algorithm/leetcode/major/generate-parentheses-surround":1444},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":93,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":92,"description":513,"url":514,"body":515,"_type":1439,"_id":1440,"_source":1441,"_file":1442,"_extension":1443},"major",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":516,"children":517,"toc":1433},"root",[518,525,530,560,565,588,593,603,609,614,627,632,638,1427],{"type":519,"tag":520,"props":521,"children":522},"element","p",{},[523],{"type":524,"value":513},"text",{"type":519,"tag":520,"props":526,"children":527},{},[528],{"type":524,"value":529},"示例 1：",{"type":519,"tag":531,"props":532,"children":535},"pre",{"className":533,"code":534,"language":524,"meta":512,"style":512},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[536],{"type":519,"tag":537,"props":538,"children":539},"code",{"__ignoreMap":512},[540,551],{"type":519,"tag":541,"props":542,"children":545},"span",{"class":543,"line":544},"line",1,[546],{"type":519,"tag":541,"props":547,"children":548},{},[549],{"type":524,"value":550},"输入：n = 3\n",{"type":519,"tag":541,"props":552,"children":554},{"class":543,"line":553},2,[555],{"type":519,"tag":541,"props":556,"children":557},{},[558],{"type":524,"value":559},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":519,"tag":520,"props":561,"children":562},{},[563],{"type":524,"value":564},"示例 2：",{"type":519,"tag":531,"props":566,"children":568},{"className":533,"code":567,"language":524,"meta":512,"style":512},"输入：n = 1\n输出：[\"()\"]\n",[569],{"type":519,"tag":537,"props":570,"children":571},{"__ignoreMap":512},[572,580],{"type":519,"tag":541,"props":573,"children":574},{"class":543,"line":544},[575],{"type":519,"tag":541,"props":576,"children":577},{},[578],{"type":524,"value":579},"输入：n = 1\n",{"type":519,"tag":541,"props":581,"children":582},{"class":543,"line":553},[583],{"type":519,"tag":541,"props":584,"children":585},{},[586],{"type":524,"value":587},"输出：[\"()\"]\n",{"type":519,"tag":520,"props":589,"children":590},{},[591],{"type":524,"value":592},"提示：",{"type":519,"tag":594,"props":595,"children":596},"ul",{},[597],{"type":519,"tag":598,"props":599,"children":600},"li",{},[601],{"type":524,"value":602},"1 \u003C= n \u003C= 8",{"type":519,"tag":604,"props":605,"children":607},"h2",{"id":606},"解题思路",[608],{"type":524,"value":606},{"type":519,"tag":520,"props":610,"children":611},{},[612],{"type":524,"value":613},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":519,"tag":594,"props":615,"children":616},{},[617,622],{"type":519,"tag":598,"props":618,"children":619},{},[620],{"type":524,"value":621},"左括号数目 = 右括号数目",{"type":519,"tag":598,"props":623,"children":624},{},[625],{"type":524,"value":626},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":519,"tag":604,"props":628,"children":630},{"id":629},"实现",[631],{"type":524,"value":629},{"type":519,"tag":633,"props":634,"children":636},"h3",{"id":635},"回溯",[637],{"type":524,"value":635},{"type":519,"tag":531,"props":639,"children":643},{"className":640,"code":641,"language":642,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[644],{"type":519,"tag":537,"props":645,"children":646},{"__ignoreMap":512},[647,656,698,729,738,784,807,817,826,853,879,905,914,963,1015,1052,1061,1070,1109,1118,1150,1218,1226,1235,1268,1328,1336,1345,1353,1393,1401,1418],{"type":519,"tag":541,"props":648,"children":649},{"class":543,"line":544},[650],{"type":519,"tag":541,"props":651,"children":653},{"style":652},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[654],{"type":524,"value":655},"/**\n",{"type":519,"tag":541,"props":657,"children":658},{"class":543,"line":553},[659,664,670,676,681,687,692],{"type":519,"tag":541,"props":660,"children":661},{"style":652},[662],{"type":524,"value":663}," * ",{"type":519,"tag":541,"props":665,"children":667},{"style":666},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[668],{"type":524,"value":669},"@",{"type":519,"tag":541,"props":671,"children":673},{"style":672},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[674],{"type":524,"value":675},"param",{"type":519,"tag":541,"props":677,"children":678},{"style":666},[679],{"type":524,"value":680}," {",{"type":519,"tag":541,"props":682,"children":684},{"style":683},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[685],{"type":524,"value":686},"number",{"type":519,"tag":541,"props":688,"children":689},{"style":666},[690],{"type":524,"value":691},"}",{"type":519,"tag":541,"props":693,"children":695},{"style":694},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[696],{"type":524,"value":697}," n\n",{"type":519,"tag":541,"props":699,"children":701},{"class":543,"line":700},3,[702,706,710,715,719,724],{"type":519,"tag":541,"props":703,"children":704},{"style":652},[705],{"type":524,"value":663},{"type":519,"tag":541,"props":707,"children":708},{"style":666},[709],{"type":524,"value":669},{"type":519,"tag":541,"props":711,"children":712},{"style":672},[713],{"type":524,"value":714},"return",{"type":519,"tag":541,"props":716,"children":717},{"style":666},[718],{"type":524,"value":680},{"type":519,"tag":541,"props":720,"children":721},{"style":683},[722],{"type":524,"value":723},"string[]",{"type":519,"tag":541,"props":725,"children":726},{"style":666},[727],{"type":524,"value":728},"}\n",{"type":519,"tag":541,"props":730,"children":732},{"class":543,"line":731},4,[733],{"type":519,"tag":541,"props":734,"children":735},{"style":652},[736],{"type":524,"value":737}," */\n",{"type":519,"tag":541,"props":739,"children":741},{"class":543,"line":740},5,[742,748,754,759,764,769,774,779],{"type":519,"tag":541,"props":743,"children":745},{"style":744},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[746],{"type":524,"value":747},"var",{"type":519,"tag":541,"props":749,"children":751},{"style":750},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[752],{"type":524,"value":753}," generateParenthesis",{"type":519,"tag":541,"props":755,"children":756},{"style":666},[757],{"type":524,"value":758}," =",{"type":519,"tag":541,"props":760,"children":761},{"style":744},[762],{"type":524,"value":763}," function",{"type":519,"tag":541,"props":765,"children":766},{"style":666},[767],{"type":524,"value":768}," (",{"type":519,"tag":541,"props":770,"children":771},{"style":694},[772],{"type":524,"value":773},"n",{"type":519,"tag":541,"props":775,"children":776},{"style":666},[777],{"type":524,"value":778},")",{"type":519,"tag":541,"props":780,"children":781},{"style":666},[782],{"type":524,"value":783}," {\n",{"type":519,"tag":541,"props":785,"children":787},{"class":543,"line":786},6,[788,793,798,802],{"type":519,"tag":541,"props":789,"children":790},{"style":744},[791],{"type":524,"value":792},"  const",{"type":519,"tag":541,"props":794,"children":795},{"style":694},[796],{"type":524,"value":797}," res",{"type":519,"tag":541,"props":799,"children":800},{"style":666},[801],{"type":524,"value":758},{"type":519,"tag":541,"props":803,"children":804},{"style":666},[805],{"type":524,"value":806}," [];\n",{"type":519,"tag":541,"props":808,"children":810},{"class":543,"line":809},7,[811],{"type":519,"tag":541,"props":812,"children":814},{"emptyLinePlaceholder":813},true,[815],{"type":524,"value":816},"\n",{"type":519,"tag":541,"props":818,"children":820},{"class":543,"line":819},8,[821],{"type":519,"tag":541,"props":822,"children":823},{"style":652},[824],{"type":524,"value":825},"  /**\n",{"type":519,"tag":541,"props":827,"children":829},{"class":543,"line":828},9,[830,835,839,843,848],{"type":519,"tag":541,"props":831,"children":832},{"style":652},[833],{"type":524,"value":834},"   * ",{"type":519,"tag":541,"props":836,"children":837},{"style":666},[838],{"type":524,"value":669},{"type":519,"tag":541,"props":840,"children":841},{"style":672},[842],{"type":524,"value":675},{"type":519,"tag":541,"props":844,"children":845},{"style":694},[846],{"type":524,"value":847}," l",{"type":519,"tag":541,"props":849,"children":850},{"style":652},[851],{"type":524,"value":852}," 左侧括号已经用了几个\n",{"type":519,"tag":541,"props":854,"children":856},{"class":543,"line":855},10,[857,861,865,869,874],{"type":519,"tag":541,"props":858,"children":859},{"style":652},[860],{"type":524,"value":834},{"type":519,"tag":541,"props":862,"children":863},{"style":666},[864],{"type":524,"value":669},{"type":519,"tag":541,"props":866,"children":867},{"style":672},[868],{"type":524,"value":675},{"type":519,"tag":541,"props":870,"children":871},{"style":694},[872],{"type":524,"value":873}," r",{"type":519,"tag":541,"props":875,"children":876},{"style":652},[877],{"type":524,"value":878}," 右侧括号已经用了几个\n",{"type":519,"tag":541,"props":880,"children":882},{"class":543,"line":881},11,[883,887,891,895,900],{"type":519,"tag":541,"props":884,"children":885},{"style":652},[886],{"type":524,"value":834},{"type":519,"tag":541,"props":888,"children":889},{"style":666},[890],{"type":524,"value":669},{"type":519,"tag":541,"props":892,"children":893},{"style":672},[894],{"type":524,"value":675},{"type":519,"tag":541,"props":896,"children":897},{"style":694},[898],{"type":524,"value":899}," str",{"type":519,"tag":541,"props":901,"children":902},{"style":652},[903],{"type":524,"value":904}," 当前递归得到的拼接字符串结果\n",{"type":519,"tag":541,"props":906,"children":908},{"class":543,"line":907},12,[909],{"type":519,"tag":541,"props":910,"children":911},{"style":652},[912],{"type":524,"value":913},"   */\n",{"type":519,"tag":541,"props":915,"children":917},{"class":543,"line":916},13,[918,923,928,933,938,943,947,951,955,959],{"type":519,"tag":541,"props":919,"children":920},{"style":744},[921],{"type":524,"value":922},"  function",{"type":519,"tag":541,"props":924,"children":925},{"style":750},[926],{"type":524,"value":927}," dfs",{"type":519,"tag":541,"props":929,"children":930},{"style":666},[931],{"type":524,"value":932},"(",{"type":519,"tag":541,"props":934,"children":935},{"style":694},[936],{"type":524,"value":937},"l",{"type":519,"tag":541,"props":939,"children":940},{"style":666},[941],{"type":524,"value":942},",",{"type":519,"tag":541,"props":944,"children":945},{"style":694},[946],{"type":524,"value":873},{"type":519,"tag":541,"props":948,"children":949},{"style":666},[950],{"type":524,"value":942},{"type":519,"tag":541,"props":952,"children":953},{"style":694},[954],{"type":524,"value":899},{"type":519,"tag":541,"props":956,"children":957},{"style":666},[958],{"type":524,"value":778},{"type":519,"tag":541,"props":960,"children":961},{"style":666},[962],{"type":524,"value":783},{"type":519,"tag":541,"props":964,"children":966},{"class":543,"line":965},14,[967,972,976,980,985,990,995,999,1003,1007,1011],{"type":519,"tag":541,"props":968,"children":969},{"style":672},[970],{"type":524,"value":971},"    if",{"type":519,"tag":541,"props":973,"children":974},{"style":666},[975],{"type":524,"value":768},{"type":519,"tag":541,"props":977,"children":978},{"style":694},[979],{"type":524,"value":937},{"type":519,"tag":541,"props":981,"children":982},{"style":744},[983],{"type":524,"value":984}," ===",{"type":519,"tag":541,"props":986,"children":987},{"style":694},[988],{"type":524,"value":989}," n",{"type":519,"tag":541,"props":991,"children":992},{"style":744},[993],{"type":524,"value":994}," &&",{"type":519,"tag":541,"props":996,"children":997},{"style":694},[998],{"type":524,"value":873},{"type":519,"tag":541,"props":1000,"children":1001},{"style":744},[1002],{"type":524,"value":984},{"type":519,"tag":541,"props":1004,"children":1005},{"style":694},[1006],{"type":524,"value":989},{"type":519,"tag":541,"props":1008,"children":1009},{"style":666},[1010],{"type":524,"value":778},{"type":519,"tag":541,"props":1012,"children":1013},{"style":666},[1014],{"type":524,"value":783},{"type":519,"tag":541,"props":1016,"children":1018},{"class":543,"line":1017},15,[1019,1024,1028,1033,1038,1042,1047],{"type":519,"tag":541,"props":1020,"children":1021},{"style":672},[1022],{"type":524,"value":1023},"      return",{"type":519,"tag":541,"props":1025,"children":1026},{"style":694},[1027],{"type":524,"value":797},{"type":519,"tag":541,"props":1029,"children":1030},{"style":666},[1031],{"type":524,"value":1032},".",{"type":519,"tag":541,"props":1034,"children":1035},{"style":750},[1036],{"type":524,"value":1037},"push",{"type":519,"tag":541,"props":1039,"children":1040},{"style":666},[1041],{"type":524,"value":932},{"type":519,"tag":541,"props":1043,"children":1044},{"style":694},[1045],{"type":524,"value":1046},"str",{"type":519,"tag":541,"props":1048,"children":1049},{"style":666},[1050],{"type":524,"value":1051},");\n",{"type":519,"tag":541,"props":1053,"children":1055},{"class":543,"line":1054},16,[1056],{"type":519,"tag":541,"props":1057,"children":1058},{"style":666},[1059],{"type":524,"value":1060},"    }\n",{"type":519,"tag":541,"props":1062,"children":1064},{"class":543,"line":1063},17,[1065],{"type":519,"tag":541,"props":1066,"children":1067},{"style":652},[1068],{"type":524,"value":1069},"    // l \u003C r 时不满足条件，剪枝\n",{"type":519,"tag":541,"props":1071,"children":1073},{"class":543,"line":1072},18,[1074,1078,1082,1086,1091,1095,1099,1104],{"type":519,"tag":541,"props":1075,"children":1076},{"style":672},[1077],{"type":524,"value":971},{"type":519,"tag":541,"props":1079,"children":1080},{"style":666},[1081],{"type":524,"value":768},{"type":519,"tag":541,"props":1083,"children":1084},{"style":694},[1085],{"type":524,"value":937},{"type":519,"tag":541,"props":1087,"children":1088},{"style":666},[1089],{"type":524,"value":1090}," \u003C",{"type":519,"tag":541,"props":1092,"children":1093},{"style":694},[1094],{"type":524,"value":873},{"type":519,"tag":541,"props":1096,"children":1097},{"style":666},[1098],{"type":524,"value":778},{"type":519,"tag":541,"props":1100,"children":1101},{"style":672},[1102],{"type":524,"value":1103}," return",{"type":519,"tag":541,"props":1105,"children":1106},{"style":666},[1107],{"type":524,"value":1108},";\n",{"type":519,"tag":541,"props":1110,"children":1112},{"class":543,"line":1111},19,[1113],{"type":519,"tag":541,"props":1114,"children":1115},{"style":652},[1116],{"type":524,"value":1117},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":519,"tag":541,"props":1119,"children":1121},{"class":543,"line":1120},20,[1122,1126,1130,1134,1138,1142,1146],{"type":519,"tag":541,"props":1123,"children":1124},{"style":672},[1125],{"type":524,"value":971},{"type":519,"tag":541,"props":1127,"children":1128},{"style":666},[1129],{"type":524,"value":768},{"type":519,"tag":541,"props":1131,"children":1132},{"style":694},[1133],{"type":524,"value":937},{"type":519,"tag":541,"props":1135,"children":1136},{"style":666},[1137],{"type":524,"value":1090},{"type":519,"tag":541,"props":1139,"children":1140},{"style":694},[1141],{"type":524,"value":989},{"type":519,"tag":541,"props":1143,"children":1144},{"style":666},[1145],{"type":524,"value":778},{"type":519,"tag":541,"props":1147,"children":1148},{"style":666},[1149],{"type":524,"value":783},{"type":519,"tag":541,"props":1151,"children":1153},{"class":543,"line":1152},21,[1154,1159,1163,1167,1172,1178,1182,1186,1190,1194,1198,1204,1209,1214],{"type":519,"tag":541,"props":1155,"children":1156},{"style":750},[1157],{"type":524,"value":1158},"      dfs",{"type":519,"tag":541,"props":1160,"children":1161},{"style":666},[1162],{"type":524,"value":932},{"type":519,"tag":541,"props":1164,"children":1165},{"style":694},[1166],{"type":524,"value":937},{"type":519,"tag":541,"props":1168,"children":1169},{"style":744},[1170],{"type":524,"value":1171}," +",{"type":519,"tag":541,"props":1173,"children":1175},{"style":1174},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1176],{"type":524,"value":1177}," 1",{"type":519,"tag":541,"props":1179,"children":1180},{"style":666},[1181],{"type":524,"value":942},{"type":519,"tag":541,"props":1183,"children":1184},{"style":694},[1185],{"type":524,"value":873},{"type":519,"tag":541,"props":1187,"children":1188},{"style":666},[1189],{"type":524,"value":942},{"type":519,"tag":541,"props":1191,"children":1192},{"style":694},[1193],{"type":524,"value":899},{"type":519,"tag":541,"props":1195,"children":1196},{"style":744},[1197],{"type":524,"value":1171},{"type":519,"tag":541,"props":1199,"children":1201},{"style":1200},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1202],{"type":524,"value":1203}," \"",{"type":519,"tag":541,"props":1205,"children":1207},{"style":1206},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1208],{"type":524,"value":932},{"type":519,"tag":541,"props":1210,"children":1211},{"style":1200},[1212],{"type":524,"value":1213},"\"",{"type":519,"tag":541,"props":1215,"children":1216},{"style":666},[1217],{"type":524,"value":1051},{"type":519,"tag":541,"props":1219,"children":1221},{"class":543,"line":1220},22,[1222],{"type":519,"tag":541,"props":1223,"children":1224},{"style":666},[1225],{"type":524,"value":1060},{"type":519,"tag":541,"props":1227,"children":1229},{"class":543,"line":1228},23,[1230],{"type":519,"tag":541,"props":1231,"children":1232},{"style":652},[1233],{"type":524,"value":1234},"    // r \u003C l 时，可以插入右括号\n",{"type":519,"tag":541,"props":1236,"children":1238},{"class":543,"line":1237},24,[1239,1243,1247,1252,1256,1260,1264],{"type":519,"tag":541,"props":1240,"children":1241},{"style":672},[1242],{"type":524,"value":971},{"type":519,"tag":541,"props":1244,"children":1245},{"style":666},[1246],{"type":524,"value":768},{"type":519,"tag":541,"props":1248,"children":1249},{"style":694},[1250],{"type":524,"value":1251},"r",{"type":519,"tag":541,"props":1253,"children":1254},{"style":666},[1255],{"type":524,"value":1090},{"type":519,"tag":541,"props":1257,"children":1258},{"style":694},[1259],{"type":524,"value":847},{"type":519,"tag":541,"props":1261,"children":1262},{"style":666},[1263],{"type":524,"value":778},{"type":519,"tag":541,"props":1265,"children":1266},{"style":666},[1267],{"type":524,"value":783},{"type":519,"tag":541,"props":1269,"children":1271},{"class":543,"line":1270},25,[1272,1276,1280,1284,1288,1292,1296,1300,1304,1308,1312,1316,1320,1324],{"type":519,"tag":541,"props":1273,"children":1274},{"style":750},[1275],{"type":524,"value":1158},{"type":519,"tag":541,"props":1277,"children":1278},{"style":666},[1279],{"type":524,"value":932},{"type":519,"tag":541,"props":1281,"children":1282},{"style":694},[1283],{"type":524,"value":937},{"type":519,"tag":541,"props":1285,"children":1286},{"style":666},[1287],{"type":524,"value":942},{"type":519,"tag":541,"props":1289,"children":1290},{"style":694},[1291],{"type":524,"value":873},{"type":519,"tag":541,"props":1293,"children":1294},{"style":744},[1295],{"type":524,"value":1171},{"type":519,"tag":541,"props":1297,"children":1298},{"style":1174},[1299],{"type":524,"value":1177},{"type":519,"tag":541,"props":1301,"children":1302},{"style":666},[1303],{"type":524,"value":942},{"type":519,"tag":541,"props":1305,"children":1306},{"style":694},[1307],{"type":524,"value":899},{"type":519,"tag":541,"props":1309,"children":1310},{"style":744},[1311],{"type":524,"value":1171},{"type":519,"tag":541,"props":1313,"children":1314},{"style":1200},[1315],{"type":524,"value":1203},{"type":519,"tag":541,"props":1317,"children":1318},{"style":1206},[1319],{"type":524,"value":778},{"type":519,"tag":541,"props":1321,"children":1322},{"style":1200},[1323],{"type":524,"value":1213},{"type":519,"tag":541,"props":1325,"children":1326},{"style":666},[1327],{"type":524,"value":1051},{"type":519,"tag":541,"props":1329,"children":1331},{"class":543,"line":1330},26,[1332],{"type":519,"tag":541,"props":1333,"children":1334},{"style":666},[1335],{"type":524,"value":1060},{"type":519,"tag":541,"props":1337,"children":1339},{"class":543,"line":1338},27,[1340],{"type":519,"tag":541,"props":1341,"children":1342},{"style":666},[1343],{"type":524,"value":1344},"  }\n",{"type":519,"tag":541,"props":1346,"children":1348},{"class":543,"line":1347},28,[1349],{"type":519,"tag":541,"props":1350,"children":1351},{"emptyLinePlaceholder":813},[1352],{"type":524,"value":816},{"type":519,"tag":541,"props":1354,"children":1356},{"class":543,"line":1355},29,[1357,1362,1366,1371,1375,1380,1384,1389],{"type":519,"tag":541,"props":1358,"children":1359},{"style":750},[1360],{"type":524,"value":1361},"  dfs",{"type":519,"tag":541,"props":1363,"children":1364},{"style":666},[1365],{"type":524,"value":932},{"type":519,"tag":541,"props":1367,"children":1368},{"style":1174},[1369],{"type":524,"value":1370},"0",{"type":519,"tag":541,"props":1372,"children":1373},{"style":666},[1374],{"type":524,"value":942},{"type":519,"tag":541,"props":1376,"children":1377},{"style":1174},[1378],{"type":524,"value":1379}," 0",{"type":519,"tag":541,"props":1381,"children":1382},{"style":666},[1383],{"type":524,"value":942},{"type":519,"tag":541,"props":1385,"children":1386},{"style":1200},[1387],{"type":524,"value":1388}," \"\"",{"type":519,"tag":541,"props":1390,"children":1391},{"style":666},[1392],{"type":524,"value":1051},{"type":519,"tag":541,"props":1394,"children":1396},{"class":543,"line":1395},30,[1397],{"type":519,"tag":541,"props":1398,"children":1399},{"emptyLinePlaceholder":813},[1400],{"type":524,"value":816},{"type":519,"tag":541,"props":1402,"children":1404},{"class":543,"line":1403},31,[1405,1410,1414],{"type":519,"tag":541,"props":1406,"children":1407},{"style":672},[1408],{"type":524,"value":1409},"  return",{"type":519,"tag":541,"props":1411,"children":1412},{"style":694},[1413],{"type":524,"value":797},{"type":519,"tag":541,"props":1415,"children":1416},{"style":666},[1417],{"type":524,"value":1108},{"type":519,"tag":541,"props":1419,"children":1421},{"class":543,"line":1420},32,[1422],{"type":519,"tag":541,"props":1423,"children":1424},{"style":666},[1425],{"type":524,"value":1426},"};\n",{"type":519,"tag":1428,"props":1429,"children":1430},"style",{},[1431],{"type":524,"value":1432},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":740,"depth":740,"links":1434},[1435,1436],{"id":606,"depth":553,"text":606},{"id":629,"depth":553,"text":629,"children":1437},[1438],{"id":635,"depth":700,"text":635},"markdown","content:1.algorithm:3.leetcode:3.major:22.generate-parentheses.md","content","1.algorithm/3.leetcode/3.major/22.generate-parentheses.md","md",[1445,1447],{"_path":90,"title":89,"description":1446},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":96,"title":95,"description":1448},"给你一个链表数组，每个链表都已经按升序排列。",1714059002891]