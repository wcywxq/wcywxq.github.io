[{"data":1,"prerenderedAt":1491},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/generate-parentheses":551,"/algorithm/leetcode/major/generate-parentheses-surround":1486},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":93,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":92,"description":555,"url":556,"body":557,"_type":1481,"_id":1482,"_source":1483,"_file":1484,"_extension":1485},"major",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":558,"children":559,"toc":1475},"root",[560,567,572,602,607,630,635,645,651,656,669,674,680,1469],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"示例 1：",{"type":561,"tag":573,"props":574,"children":577},"pre",{"className":575,"code":576,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[578],{"type":561,"tag":579,"props":580,"children":581},"code",{"__ignoreMap":554},[582,593],{"type":561,"tag":583,"props":584,"children":587},"span",{"class":585,"line":586},"line",1,[588],{"type":561,"tag":583,"props":589,"children":590},{},[591],{"type":566,"value":592},"输入：n = 3\n",{"type":561,"tag":583,"props":594,"children":596},{"class":585,"line":595},2,[597],{"type":561,"tag":583,"props":598,"children":599},{},[600],{"type":566,"value":601},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":561,"tag":562,"props":603,"children":604},{},[605],{"type":566,"value":606},"示例 2：",{"type":561,"tag":573,"props":608,"children":610},{"className":575,"code":609,"language":566,"meta":554,"style":554},"输入：n = 1\n输出：[\"()\"]\n",[611],{"type":561,"tag":579,"props":612,"children":613},{"__ignoreMap":554},[614,622],{"type":561,"tag":583,"props":615,"children":616},{"class":585,"line":586},[617],{"type":561,"tag":583,"props":618,"children":619},{},[620],{"type":566,"value":621},"输入：n = 1\n",{"type":561,"tag":583,"props":623,"children":624},{"class":585,"line":595},[625],{"type":561,"tag":583,"props":626,"children":627},{},[628],{"type":566,"value":629},"输出：[\"()\"]\n",{"type":561,"tag":562,"props":631,"children":632},{},[633],{"type":566,"value":634},"提示：",{"type":561,"tag":636,"props":637,"children":638},"ul",{},[639],{"type":561,"tag":640,"props":641,"children":642},"li",{},[643],{"type":566,"value":644},"1 \u003C= n \u003C= 8",{"type":561,"tag":646,"props":647,"children":649},"h2",{"id":648},"解题思路",[650],{"type":566,"value":648},{"type":561,"tag":562,"props":652,"children":653},{},[654],{"type":566,"value":655},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":561,"tag":636,"props":657,"children":658},{},[659,664],{"type":561,"tag":640,"props":660,"children":661},{},[662],{"type":566,"value":663},"左括号数目 = 右括号数目",{"type":561,"tag":640,"props":665,"children":666},{},[667],{"type":566,"value":668},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":561,"tag":646,"props":670,"children":672},{"id":671},"实现",[673],{"type":566,"value":671},{"type":561,"tag":675,"props":676,"children":678},"h3",{"id":677},"回溯",[679],{"type":566,"value":677},{"type":561,"tag":573,"props":681,"children":685},{"className":682,"code":683,"language":684,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[686],{"type":561,"tag":579,"props":687,"children":688},{"__ignoreMap":554},[689,698,740,771,780,826,849,859,868,895,921,947,956,1005,1057,1094,1103,1112,1151,1160,1192,1260,1268,1277,1310,1370,1378,1387,1395,1435,1443,1460],{"type":561,"tag":583,"props":690,"children":691},{"class":585,"line":586},[692],{"type":561,"tag":583,"props":693,"children":695},{"style":694},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[696],{"type":566,"value":697},"/**\n",{"type":561,"tag":583,"props":699,"children":700},{"class":585,"line":595},[701,706,712,718,723,729,734],{"type":561,"tag":583,"props":702,"children":703},{"style":694},[704],{"type":566,"value":705}," * ",{"type":561,"tag":583,"props":707,"children":709},{"style":708},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[710],{"type":566,"value":711},"@",{"type":561,"tag":583,"props":713,"children":715},{"style":714},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[716],{"type":566,"value":717},"param",{"type":561,"tag":583,"props":719,"children":720},{"style":708},[721],{"type":566,"value":722}," {",{"type":561,"tag":583,"props":724,"children":726},{"style":725},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[727],{"type":566,"value":728},"number",{"type":561,"tag":583,"props":730,"children":731},{"style":708},[732],{"type":566,"value":733},"}",{"type":561,"tag":583,"props":735,"children":737},{"style":736},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[738],{"type":566,"value":739}," n\n",{"type":561,"tag":583,"props":741,"children":743},{"class":585,"line":742},3,[744,748,752,757,761,766],{"type":561,"tag":583,"props":745,"children":746},{"style":694},[747],{"type":566,"value":705},{"type":561,"tag":583,"props":749,"children":750},{"style":708},[751],{"type":566,"value":711},{"type":561,"tag":583,"props":753,"children":754},{"style":714},[755],{"type":566,"value":756},"return",{"type":561,"tag":583,"props":758,"children":759},{"style":708},[760],{"type":566,"value":722},{"type":561,"tag":583,"props":762,"children":763},{"style":725},[764],{"type":566,"value":765},"string[]",{"type":561,"tag":583,"props":767,"children":768},{"style":708},[769],{"type":566,"value":770},"}\n",{"type":561,"tag":583,"props":772,"children":774},{"class":585,"line":773},4,[775],{"type":561,"tag":583,"props":776,"children":777},{"style":694},[778],{"type":566,"value":779}," */\n",{"type":561,"tag":583,"props":781,"children":783},{"class":585,"line":782},5,[784,790,796,801,806,811,816,821],{"type":561,"tag":583,"props":785,"children":787},{"style":786},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[788],{"type":566,"value":789},"var",{"type":561,"tag":583,"props":791,"children":793},{"style":792},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[794],{"type":566,"value":795}," generateParenthesis",{"type":561,"tag":583,"props":797,"children":798},{"style":708},[799],{"type":566,"value":800}," =",{"type":561,"tag":583,"props":802,"children":803},{"style":786},[804],{"type":566,"value":805}," function",{"type":561,"tag":583,"props":807,"children":808},{"style":708},[809],{"type":566,"value":810}," (",{"type":561,"tag":583,"props":812,"children":813},{"style":736},[814],{"type":566,"value":815},"n",{"type":561,"tag":583,"props":817,"children":818},{"style":708},[819],{"type":566,"value":820},")",{"type":561,"tag":583,"props":822,"children":823},{"style":708},[824],{"type":566,"value":825}," {\n",{"type":561,"tag":583,"props":827,"children":829},{"class":585,"line":828},6,[830,835,840,844],{"type":561,"tag":583,"props":831,"children":832},{"style":786},[833],{"type":566,"value":834},"  const",{"type":561,"tag":583,"props":836,"children":837},{"style":736},[838],{"type":566,"value":839}," res",{"type":561,"tag":583,"props":841,"children":842},{"style":708},[843],{"type":566,"value":800},{"type":561,"tag":583,"props":845,"children":846},{"style":708},[847],{"type":566,"value":848}," [];\n",{"type":561,"tag":583,"props":850,"children":852},{"class":585,"line":851},7,[853],{"type":561,"tag":583,"props":854,"children":856},{"emptyLinePlaceholder":855},true,[857],{"type":566,"value":858},"\n",{"type":561,"tag":583,"props":860,"children":862},{"class":585,"line":861},8,[863],{"type":561,"tag":583,"props":864,"children":865},{"style":694},[866],{"type":566,"value":867},"  /**\n",{"type":561,"tag":583,"props":869,"children":871},{"class":585,"line":870},9,[872,877,881,885,890],{"type":561,"tag":583,"props":873,"children":874},{"style":694},[875],{"type":566,"value":876},"   * ",{"type":561,"tag":583,"props":878,"children":879},{"style":708},[880],{"type":566,"value":711},{"type":561,"tag":583,"props":882,"children":883},{"style":714},[884],{"type":566,"value":717},{"type":561,"tag":583,"props":886,"children":887},{"style":736},[888],{"type":566,"value":889}," l",{"type":561,"tag":583,"props":891,"children":892},{"style":694},[893],{"type":566,"value":894}," 左侧括号已经用了几个\n",{"type":561,"tag":583,"props":896,"children":898},{"class":585,"line":897},10,[899,903,907,911,916],{"type":561,"tag":583,"props":900,"children":901},{"style":694},[902],{"type":566,"value":876},{"type":561,"tag":583,"props":904,"children":905},{"style":708},[906],{"type":566,"value":711},{"type":561,"tag":583,"props":908,"children":909},{"style":714},[910],{"type":566,"value":717},{"type":561,"tag":583,"props":912,"children":913},{"style":736},[914],{"type":566,"value":915}," r",{"type":561,"tag":583,"props":917,"children":918},{"style":694},[919],{"type":566,"value":920}," 右侧括号已经用了几个\n",{"type":561,"tag":583,"props":922,"children":924},{"class":585,"line":923},11,[925,929,933,937,942],{"type":561,"tag":583,"props":926,"children":927},{"style":694},[928],{"type":566,"value":876},{"type":561,"tag":583,"props":930,"children":931},{"style":708},[932],{"type":566,"value":711},{"type":561,"tag":583,"props":934,"children":935},{"style":714},[936],{"type":566,"value":717},{"type":561,"tag":583,"props":938,"children":939},{"style":736},[940],{"type":566,"value":941}," str",{"type":561,"tag":583,"props":943,"children":944},{"style":694},[945],{"type":566,"value":946}," 当前递归得到的拼接字符串结果\n",{"type":561,"tag":583,"props":948,"children":950},{"class":585,"line":949},12,[951],{"type":561,"tag":583,"props":952,"children":953},{"style":694},[954],{"type":566,"value":955},"   */\n",{"type":561,"tag":583,"props":957,"children":959},{"class":585,"line":958},13,[960,965,970,975,980,985,989,993,997,1001],{"type":561,"tag":583,"props":961,"children":962},{"style":786},[963],{"type":566,"value":964},"  function",{"type":561,"tag":583,"props":966,"children":967},{"style":792},[968],{"type":566,"value":969}," dfs",{"type":561,"tag":583,"props":971,"children":972},{"style":708},[973],{"type":566,"value":974},"(",{"type":561,"tag":583,"props":976,"children":977},{"style":736},[978],{"type":566,"value":979},"l",{"type":561,"tag":583,"props":981,"children":982},{"style":708},[983],{"type":566,"value":984},",",{"type":561,"tag":583,"props":986,"children":987},{"style":736},[988],{"type":566,"value":915},{"type":561,"tag":583,"props":990,"children":991},{"style":708},[992],{"type":566,"value":984},{"type":561,"tag":583,"props":994,"children":995},{"style":736},[996],{"type":566,"value":941},{"type":561,"tag":583,"props":998,"children":999},{"style":708},[1000],{"type":566,"value":820},{"type":561,"tag":583,"props":1002,"children":1003},{"style":708},[1004],{"type":566,"value":825},{"type":561,"tag":583,"props":1006,"children":1008},{"class":585,"line":1007},14,[1009,1014,1018,1022,1027,1032,1037,1041,1045,1049,1053],{"type":561,"tag":583,"props":1010,"children":1011},{"style":714},[1012],{"type":566,"value":1013},"    if",{"type":561,"tag":583,"props":1015,"children":1016},{"style":708},[1017],{"type":566,"value":810},{"type":561,"tag":583,"props":1019,"children":1020},{"style":736},[1021],{"type":566,"value":979},{"type":561,"tag":583,"props":1023,"children":1024},{"style":786},[1025],{"type":566,"value":1026}," ===",{"type":561,"tag":583,"props":1028,"children":1029},{"style":736},[1030],{"type":566,"value":1031}," n",{"type":561,"tag":583,"props":1033,"children":1034},{"style":786},[1035],{"type":566,"value":1036}," &&",{"type":561,"tag":583,"props":1038,"children":1039},{"style":736},[1040],{"type":566,"value":915},{"type":561,"tag":583,"props":1042,"children":1043},{"style":786},[1044],{"type":566,"value":1026},{"type":561,"tag":583,"props":1046,"children":1047},{"style":736},[1048],{"type":566,"value":1031},{"type":561,"tag":583,"props":1050,"children":1051},{"style":708},[1052],{"type":566,"value":820},{"type":561,"tag":583,"props":1054,"children":1055},{"style":708},[1056],{"type":566,"value":825},{"type":561,"tag":583,"props":1058,"children":1060},{"class":585,"line":1059},15,[1061,1066,1070,1075,1080,1084,1089],{"type":561,"tag":583,"props":1062,"children":1063},{"style":714},[1064],{"type":566,"value":1065},"      return",{"type":561,"tag":583,"props":1067,"children":1068},{"style":736},[1069],{"type":566,"value":839},{"type":561,"tag":583,"props":1071,"children":1072},{"style":708},[1073],{"type":566,"value":1074},".",{"type":561,"tag":583,"props":1076,"children":1077},{"style":792},[1078],{"type":566,"value":1079},"push",{"type":561,"tag":583,"props":1081,"children":1082},{"style":708},[1083],{"type":566,"value":974},{"type":561,"tag":583,"props":1085,"children":1086},{"style":736},[1087],{"type":566,"value":1088},"str",{"type":561,"tag":583,"props":1090,"children":1091},{"style":708},[1092],{"type":566,"value":1093},");\n",{"type":561,"tag":583,"props":1095,"children":1097},{"class":585,"line":1096},16,[1098],{"type":561,"tag":583,"props":1099,"children":1100},{"style":708},[1101],{"type":566,"value":1102},"    }\n",{"type":561,"tag":583,"props":1104,"children":1106},{"class":585,"line":1105},17,[1107],{"type":561,"tag":583,"props":1108,"children":1109},{"style":694},[1110],{"type":566,"value":1111},"    // l \u003C r 时不满足条件，剪枝\n",{"type":561,"tag":583,"props":1113,"children":1115},{"class":585,"line":1114},18,[1116,1120,1124,1128,1133,1137,1141,1146],{"type":561,"tag":583,"props":1117,"children":1118},{"style":714},[1119],{"type":566,"value":1013},{"type":561,"tag":583,"props":1121,"children":1122},{"style":708},[1123],{"type":566,"value":810},{"type":561,"tag":583,"props":1125,"children":1126},{"style":736},[1127],{"type":566,"value":979},{"type":561,"tag":583,"props":1129,"children":1130},{"style":708},[1131],{"type":566,"value":1132}," \u003C",{"type":561,"tag":583,"props":1134,"children":1135},{"style":736},[1136],{"type":566,"value":915},{"type":561,"tag":583,"props":1138,"children":1139},{"style":708},[1140],{"type":566,"value":820},{"type":561,"tag":583,"props":1142,"children":1143},{"style":714},[1144],{"type":566,"value":1145}," return",{"type":561,"tag":583,"props":1147,"children":1148},{"style":708},[1149],{"type":566,"value":1150},";\n",{"type":561,"tag":583,"props":1152,"children":1154},{"class":585,"line":1153},19,[1155],{"type":561,"tag":583,"props":1156,"children":1157},{"style":694},[1158],{"type":566,"value":1159},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":561,"tag":583,"props":1161,"children":1163},{"class":585,"line":1162},20,[1164,1168,1172,1176,1180,1184,1188],{"type":561,"tag":583,"props":1165,"children":1166},{"style":714},[1167],{"type":566,"value":1013},{"type":561,"tag":583,"props":1169,"children":1170},{"style":708},[1171],{"type":566,"value":810},{"type":561,"tag":583,"props":1173,"children":1174},{"style":736},[1175],{"type":566,"value":979},{"type":561,"tag":583,"props":1177,"children":1178},{"style":708},[1179],{"type":566,"value":1132},{"type":561,"tag":583,"props":1181,"children":1182},{"style":736},[1183],{"type":566,"value":1031},{"type":561,"tag":583,"props":1185,"children":1186},{"style":708},[1187],{"type":566,"value":820},{"type":561,"tag":583,"props":1189,"children":1190},{"style":708},[1191],{"type":566,"value":825},{"type":561,"tag":583,"props":1193,"children":1195},{"class":585,"line":1194},21,[1196,1201,1205,1209,1214,1220,1224,1228,1232,1236,1240,1246,1251,1256],{"type":561,"tag":583,"props":1197,"children":1198},{"style":792},[1199],{"type":566,"value":1200},"      dfs",{"type":561,"tag":583,"props":1202,"children":1203},{"style":708},[1204],{"type":566,"value":974},{"type":561,"tag":583,"props":1206,"children":1207},{"style":736},[1208],{"type":566,"value":979},{"type":561,"tag":583,"props":1210,"children":1211},{"style":786},[1212],{"type":566,"value":1213}," +",{"type":561,"tag":583,"props":1215,"children":1217},{"style":1216},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1218],{"type":566,"value":1219}," 1",{"type":561,"tag":583,"props":1221,"children":1222},{"style":708},[1223],{"type":566,"value":984},{"type":561,"tag":583,"props":1225,"children":1226},{"style":736},[1227],{"type":566,"value":915},{"type":561,"tag":583,"props":1229,"children":1230},{"style":708},[1231],{"type":566,"value":984},{"type":561,"tag":583,"props":1233,"children":1234},{"style":736},[1235],{"type":566,"value":941},{"type":561,"tag":583,"props":1237,"children":1238},{"style":786},[1239],{"type":566,"value":1213},{"type":561,"tag":583,"props":1241,"children":1243},{"style":1242},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1244],{"type":566,"value":1245}," \"",{"type":561,"tag":583,"props":1247,"children":1249},{"style":1248},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1250],{"type":566,"value":974},{"type":561,"tag":583,"props":1252,"children":1253},{"style":1242},[1254],{"type":566,"value":1255},"\"",{"type":561,"tag":583,"props":1257,"children":1258},{"style":708},[1259],{"type":566,"value":1093},{"type":561,"tag":583,"props":1261,"children":1263},{"class":585,"line":1262},22,[1264],{"type":561,"tag":583,"props":1265,"children":1266},{"style":708},[1267],{"type":566,"value":1102},{"type":561,"tag":583,"props":1269,"children":1271},{"class":585,"line":1270},23,[1272],{"type":561,"tag":583,"props":1273,"children":1274},{"style":694},[1275],{"type":566,"value":1276},"    // r \u003C l 时，可以插入右括号\n",{"type":561,"tag":583,"props":1278,"children":1280},{"class":585,"line":1279},24,[1281,1285,1289,1294,1298,1302,1306],{"type":561,"tag":583,"props":1282,"children":1283},{"style":714},[1284],{"type":566,"value":1013},{"type":561,"tag":583,"props":1286,"children":1287},{"style":708},[1288],{"type":566,"value":810},{"type":561,"tag":583,"props":1290,"children":1291},{"style":736},[1292],{"type":566,"value":1293},"r",{"type":561,"tag":583,"props":1295,"children":1296},{"style":708},[1297],{"type":566,"value":1132},{"type":561,"tag":583,"props":1299,"children":1300},{"style":736},[1301],{"type":566,"value":889},{"type":561,"tag":583,"props":1303,"children":1304},{"style":708},[1305],{"type":566,"value":820},{"type":561,"tag":583,"props":1307,"children":1308},{"style":708},[1309],{"type":566,"value":825},{"type":561,"tag":583,"props":1311,"children":1313},{"class":585,"line":1312},25,[1314,1318,1322,1326,1330,1334,1338,1342,1346,1350,1354,1358,1362,1366],{"type":561,"tag":583,"props":1315,"children":1316},{"style":792},[1317],{"type":566,"value":1200},{"type":561,"tag":583,"props":1319,"children":1320},{"style":708},[1321],{"type":566,"value":974},{"type":561,"tag":583,"props":1323,"children":1324},{"style":736},[1325],{"type":566,"value":979},{"type":561,"tag":583,"props":1327,"children":1328},{"style":708},[1329],{"type":566,"value":984},{"type":561,"tag":583,"props":1331,"children":1332},{"style":736},[1333],{"type":566,"value":915},{"type":561,"tag":583,"props":1335,"children":1336},{"style":786},[1337],{"type":566,"value":1213},{"type":561,"tag":583,"props":1339,"children":1340},{"style":1216},[1341],{"type":566,"value":1219},{"type":561,"tag":583,"props":1343,"children":1344},{"style":708},[1345],{"type":566,"value":984},{"type":561,"tag":583,"props":1347,"children":1348},{"style":736},[1349],{"type":566,"value":941},{"type":561,"tag":583,"props":1351,"children":1352},{"style":786},[1353],{"type":566,"value":1213},{"type":561,"tag":583,"props":1355,"children":1356},{"style":1242},[1357],{"type":566,"value":1245},{"type":561,"tag":583,"props":1359,"children":1360},{"style":1248},[1361],{"type":566,"value":820},{"type":561,"tag":583,"props":1363,"children":1364},{"style":1242},[1365],{"type":566,"value":1255},{"type":561,"tag":583,"props":1367,"children":1368},{"style":708},[1369],{"type":566,"value":1093},{"type":561,"tag":583,"props":1371,"children":1373},{"class":585,"line":1372},26,[1374],{"type":561,"tag":583,"props":1375,"children":1376},{"style":708},[1377],{"type":566,"value":1102},{"type":561,"tag":583,"props":1379,"children":1381},{"class":585,"line":1380},27,[1382],{"type":561,"tag":583,"props":1383,"children":1384},{"style":708},[1385],{"type":566,"value":1386},"  }\n",{"type":561,"tag":583,"props":1388,"children":1390},{"class":585,"line":1389},28,[1391],{"type":561,"tag":583,"props":1392,"children":1393},{"emptyLinePlaceholder":855},[1394],{"type":566,"value":858},{"type":561,"tag":583,"props":1396,"children":1398},{"class":585,"line":1397},29,[1399,1404,1408,1413,1417,1422,1426,1431],{"type":561,"tag":583,"props":1400,"children":1401},{"style":792},[1402],{"type":566,"value":1403},"  dfs",{"type":561,"tag":583,"props":1405,"children":1406},{"style":708},[1407],{"type":566,"value":974},{"type":561,"tag":583,"props":1409,"children":1410},{"style":1216},[1411],{"type":566,"value":1412},"0",{"type":561,"tag":583,"props":1414,"children":1415},{"style":708},[1416],{"type":566,"value":984},{"type":561,"tag":583,"props":1418,"children":1419},{"style":1216},[1420],{"type":566,"value":1421}," 0",{"type":561,"tag":583,"props":1423,"children":1424},{"style":708},[1425],{"type":566,"value":984},{"type":561,"tag":583,"props":1427,"children":1428},{"style":1242},[1429],{"type":566,"value":1430}," \"\"",{"type":561,"tag":583,"props":1432,"children":1433},{"style":708},[1434],{"type":566,"value":1093},{"type":561,"tag":583,"props":1436,"children":1438},{"class":585,"line":1437},30,[1439],{"type":561,"tag":583,"props":1440,"children":1441},{"emptyLinePlaceholder":855},[1442],{"type":566,"value":858},{"type":561,"tag":583,"props":1444,"children":1446},{"class":585,"line":1445},31,[1447,1452,1456],{"type":561,"tag":583,"props":1448,"children":1449},{"style":714},[1450],{"type":566,"value":1451},"  return",{"type":561,"tag":583,"props":1453,"children":1454},{"style":736},[1455],{"type":566,"value":839},{"type":561,"tag":583,"props":1457,"children":1458},{"style":708},[1459],{"type":566,"value":1150},{"type":561,"tag":583,"props":1461,"children":1463},{"class":585,"line":1462},32,[1464],{"type":561,"tag":583,"props":1465,"children":1466},{"style":708},[1467],{"type":566,"value":1468},"};\n",{"type":561,"tag":1470,"props":1471,"children":1472},"style",{},[1473],{"type":566,"value":1474},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":782,"depth":782,"links":1476},[1477,1478],{"id":648,"depth":595,"text":648},{"id":671,"depth":595,"text":671,"children":1479},[1480],{"id":677,"depth":742,"text":677},"markdown","content:1.algorithm:3.leetcode:3.major:22.generate-parentheses.md","content","1.algorithm/3.leetcode/3.major/22.generate-parentheses.md","md",[1487,1489],{"_path":90,"title":89,"description":1488},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":96,"title":95,"description":1490},"给你一个链表数组，每个链表都已经按升序排列。",1715135010578]