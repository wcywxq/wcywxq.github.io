[{"data":1,"prerenderedAt":1480},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/generate-parentheses":540,"/algorithm/leetcode/major/generate-parentheses-surround":1475},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":93,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":92,"description":544,"url":545,"body":546,"_type":1470,"_id":1471,"_source":1472,"_file":1473,"_extension":1474},"major",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":547,"children":548,"toc":1464},"root",[549,556,561,591,596,619,624,634,640,645,658,663,669,1458],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"示例 1：",{"type":550,"tag":562,"props":563,"children":566},"pre",{"className":564,"code":565,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[567],{"type":550,"tag":568,"props":569,"children":570},"code",{"__ignoreMap":543},[571,582],{"type":550,"tag":572,"props":573,"children":576},"span",{"class":574,"line":575},"line",1,[577],{"type":550,"tag":572,"props":578,"children":579},{},[580],{"type":555,"value":581},"输入：n = 3\n",{"type":550,"tag":572,"props":583,"children":585},{"class":574,"line":584},2,[586],{"type":550,"tag":572,"props":587,"children":588},{},[589],{"type":555,"value":590},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":550,"tag":551,"props":592,"children":593},{},[594],{"type":555,"value":595},"示例 2：",{"type":550,"tag":562,"props":597,"children":599},{"className":564,"code":598,"language":555,"meta":543,"style":543},"输入：n = 1\n输出：[\"()\"]\n",[600],{"type":550,"tag":568,"props":601,"children":602},{"__ignoreMap":543},[603,611],{"type":550,"tag":572,"props":604,"children":605},{"class":574,"line":575},[606],{"type":550,"tag":572,"props":607,"children":608},{},[609],{"type":555,"value":610},"输入：n = 1\n",{"type":550,"tag":572,"props":612,"children":613},{"class":574,"line":584},[614],{"type":550,"tag":572,"props":615,"children":616},{},[617],{"type":555,"value":618},"输出：[\"()\"]\n",{"type":550,"tag":551,"props":620,"children":621},{},[622],{"type":555,"value":623},"提示：",{"type":550,"tag":625,"props":626,"children":627},"ul",{},[628],{"type":550,"tag":629,"props":630,"children":631},"li",{},[632],{"type":555,"value":633},"1 \u003C= n \u003C= 8",{"type":550,"tag":635,"props":636,"children":638},"h2",{"id":637},"解题思路",[639],{"type":555,"value":637},{"type":550,"tag":551,"props":641,"children":642},{},[643],{"type":555,"value":644},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":550,"tag":625,"props":646,"children":647},{},[648,653],{"type":550,"tag":629,"props":649,"children":650},{},[651],{"type":555,"value":652},"左括号数目 = 右括号数目",{"type":550,"tag":629,"props":654,"children":655},{},[656],{"type":555,"value":657},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":550,"tag":635,"props":659,"children":661},{"id":660},"实现",[662],{"type":555,"value":660},{"type":550,"tag":664,"props":665,"children":667},"h3",{"id":666},"回溯",[668],{"type":555,"value":666},{"type":550,"tag":562,"props":670,"children":674},{"className":671,"code":672,"language":673,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[675],{"type":550,"tag":568,"props":676,"children":677},{"__ignoreMap":543},[678,687,729,760,769,815,838,848,857,884,910,936,945,994,1046,1083,1092,1101,1140,1149,1181,1249,1257,1266,1299,1359,1367,1376,1384,1424,1432,1449],{"type":550,"tag":572,"props":679,"children":680},{"class":574,"line":575},[681],{"type":550,"tag":572,"props":682,"children":684},{"style":683},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[685],{"type":555,"value":686},"/**\n",{"type":550,"tag":572,"props":688,"children":689},{"class":574,"line":584},[690,695,701,707,712,718,723],{"type":550,"tag":572,"props":691,"children":692},{"style":683},[693],{"type":555,"value":694}," * ",{"type":550,"tag":572,"props":696,"children":698},{"style":697},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[699],{"type":555,"value":700},"@",{"type":550,"tag":572,"props":702,"children":704},{"style":703},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[705],{"type":555,"value":706},"param",{"type":550,"tag":572,"props":708,"children":709},{"style":697},[710],{"type":555,"value":711}," {",{"type":550,"tag":572,"props":713,"children":715},{"style":714},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[716],{"type":555,"value":717},"number",{"type":550,"tag":572,"props":719,"children":720},{"style":697},[721],{"type":555,"value":722},"}",{"type":550,"tag":572,"props":724,"children":726},{"style":725},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[727],{"type":555,"value":728}," n\n",{"type":550,"tag":572,"props":730,"children":732},{"class":574,"line":731},3,[733,737,741,746,750,755],{"type":550,"tag":572,"props":734,"children":735},{"style":683},[736],{"type":555,"value":694},{"type":550,"tag":572,"props":738,"children":739},{"style":697},[740],{"type":555,"value":700},{"type":550,"tag":572,"props":742,"children":743},{"style":703},[744],{"type":555,"value":745},"return",{"type":550,"tag":572,"props":747,"children":748},{"style":697},[749],{"type":555,"value":711},{"type":550,"tag":572,"props":751,"children":752},{"style":714},[753],{"type":555,"value":754},"string[]",{"type":550,"tag":572,"props":756,"children":757},{"style":697},[758],{"type":555,"value":759},"}\n",{"type":550,"tag":572,"props":761,"children":763},{"class":574,"line":762},4,[764],{"type":550,"tag":572,"props":765,"children":766},{"style":683},[767],{"type":555,"value":768}," */\n",{"type":550,"tag":572,"props":770,"children":772},{"class":574,"line":771},5,[773,779,785,790,795,800,805,810],{"type":550,"tag":572,"props":774,"children":776},{"style":775},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[777],{"type":555,"value":778},"var",{"type":550,"tag":572,"props":780,"children":782},{"style":781},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[783],{"type":555,"value":784}," generateParenthesis",{"type":550,"tag":572,"props":786,"children":787},{"style":697},[788],{"type":555,"value":789}," =",{"type":550,"tag":572,"props":791,"children":792},{"style":775},[793],{"type":555,"value":794}," function",{"type":550,"tag":572,"props":796,"children":797},{"style":697},[798],{"type":555,"value":799}," (",{"type":550,"tag":572,"props":801,"children":802},{"style":725},[803],{"type":555,"value":804},"n",{"type":550,"tag":572,"props":806,"children":807},{"style":697},[808],{"type":555,"value":809},")",{"type":550,"tag":572,"props":811,"children":812},{"style":697},[813],{"type":555,"value":814}," {\n",{"type":550,"tag":572,"props":816,"children":818},{"class":574,"line":817},6,[819,824,829,833],{"type":550,"tag":572,"props":820,"children":821},{"style":775},[822],{"type":555,"value":823},"  const",{"type":550,"tag":572,"props":825,"children":826},{"style":725},[827],{"type":555,"value":828}," res",{"type":550,"tag":572,"props":830,"children":831},{"style":697},[832],{"type":555,"value":789},{"type":550,"tag":572,"props":834,"children":835},{"style":697},[836],{"type":555,"value":837}," [];\n",{"type":550,"tag":572,"props":839,"children":841},{"class":574,"line":840},7,[842],{"type":550,"tag":572,"props":843,"children":845},{"emptyLinePlaceholder":844},true,[846],{"type":555,"value":847},"\n",{"type":550,"tag":572,"props":849,"children":851},{"class":574,"line":850},8,[852],{"type":550,"tag":572,"props":853,"children":854},{"style":683},[855],{"type":555,"value":856},"  /**\n",{"type":550,"tag":572,"props":858,"children":860},{"class":574,"line":859},9,[861,866,870,874,879],{"type":550,"tag":572,"props":862,"children":863},{"style":683},[864],{"type":555,"value":865},"   * ",{"type":550,"tag":572,"props":867,"children":868},{"style":697},[869],{"type":555,"value":700},{"type":550,"tag":572,"props":871,"children":872},{"style":703},[873],{"type":555,"value":706},{"type":550,"tag":572,"props":875,"children":876},{"style":725},[877],{"type":555,"value":878}," l",{"type":550,"tag":572,"props":880,"children":881},{"style":683},[882],{"type":555,"value":883}," 左侧括号已经用了几个\n",{"type":550,"tag":572,"props":885,"children":887},{"class":574,"line":886},10,[888,892,896,900,905],{"type":550,"tag":572,"props":889,"children":890},{"style":683},[891],{"type":555,"value":865},{"type":550,"tag":572,"props":893,"children":894},{"style":697},[895],{"type":555,"value":700},{"type":550,"tag":572,"props":897,"children":898},{"style":703},[899],{"type":555,"value":706},{"type":550,"tag":572,"props":901,"children":902},{"style":725},[903],{"type":555,"value":904}," r",{"type":550,"tag":572,"props":906,"children":907},{"style":683},[908],{"type":555,"value":909}," 右侧括号已经用了几个\n",{"type":550,"tag":572,"props":911,"children":913},{"class":574,"line":912},11,[914,918,922,926,931],{"type":550,"tag":572,"props":915,"children":916},{"style":683},[917],{"type":555,"value":865},{"type":550,"tag":572,"props":919,"children":920},{"style":697},[921],{"type":555,"value":700},{"type":550,"tag":572,"props":923,"children":924},{"style":703},[925],{"type":555,"value":706},{"type":550,"tag":572,"props":927,"children":928},{"style":725},[929],{"type":555,"value":930}," str",{"type":550,"tag":572,"props":932,"children":933},{"style":683},[934],{"type":555,"value":935}," 当前递归得到的拼接字符串结果\n",{"type":550,"tag":572,"props":937,"children":939},{"class":574,"line":938},12,[940],{"type":550,"tag":572,"props":941,"children":942},{"style":683},[943],{"type":555,"value":944},"   */\n",{"type":550,"tag":572,"props":946,"children":948},{"class":574,"line":947},13,[949,954,959,964,969,974,978,982,986,990],{"type":550,"tag":572,"props":950,"children":951},{"style":775},[952],{"type":555,"value":953},"  function",{"type":550,"tag":572,"props":955,"children":956},{"style":781},[957],{"type":555,"value":958}," dfs",{"type":550,"tag":572,"props":960,"children":961},{"style":697},[962],{"type":555,"value":963},"(",{"type":550,"tag":572,"props":965,"children":966},{"style":725},[967],{"type":555,"value":968},"l",{"type":550,"tag":572,"props":970,"children":971},{"style":697},[972],{"type":555,"value":973},",",{"type":550,"tag":572,"props":975,"children":976},{"style":725},[977],{"type":555,"value":904},{"type":550,"tag":572,"props":979,"children":980},{"style":697},[981],{"type":555,"value":973},{"type":550,"tag":572,"props":983,"children":984},{"style":725},[985],{"type":555,"value":930},{"type":550,"tag":572,"props":987,"children":988},{"style":697},[989],{"type":555,"value":809},{"type":550,"tag":572,"props":991,"children":992},{"style":697},[993],{"type":555,"value":814},{"type":550,"tag":572,"props":995,"children":997},{"class":574,"line":996},14,[998,1003,1007,1011,1016,1021,1026,1030,1034,1038,1042],{"type":550,"tag":572,"props":999,"children":1000},{"style":703},[1001],{"type":555,"value":1002},"    if",{"type":550,"tag":572,"props":1004,"children":1005},{"style":697},[1006],{"type":555,"value":799},{"type":550,"tag":572,"props":1008,"children":1009},{"style":725},[1010],{"type":555,"value":968},{"type":550,"tag":572,"props":1012,"children":1013},{"style":775},[1014],{"type":555,"value":1015}," ===",{"type":550,"tag":572,"props":1017,"children":1018},{"style":725},[1019],{"type":555,"value":1020}," n",{"type":550,"tag":572,"props":1022,"children":1023},{"style":775},[1024],{"type":555,"value":1025}," &&",{"type":550,"tag":572,"props":1027,"children":1028},{"style":725},[1029],{"type":555,"value":904},{"type":550,"tag":572,"props":1031,"children":1032},{"style":775},[1033],{"type":555,"value":1015},{"type":550,"tag":572,"props":1035,"children":1036},{"style":725},[1037],{"type":555,"value":1020},{"type":550,"tag":572,"props":1039,"children":1040},{"style":697},[1041],{"type":555,"value":809},{"type":550,"tag":572,"props":1043,"children":1044},{"style":697},[1045],{"type":555,"value":814},{"type":550,"tag":572,"props":1047,"children":1049},{"class":574,"line":1048},15,[1050,1055,1059,1064,1069,1073,1078],{"type":550,"tag":572,"props":1051,"children":1052},{"style":703},[1053],{"type":555,"value":1054},"      return",{"type":550,"tag":572,"props":1056,"children":1057},{"style":725},[1058],{"type":555,"value":828},{"type":550,"tag":572,"props":1060,"children":1061},{"style":697},[1062],{"type":555,"value":1063},".",{"type":550,"tag":572,"props":1065,"children":1066},{"style":781},[1067],{"type":555,"value":1068},"push",{"type":550,"tag":572,"props":1070,"children":1071},{"style":697},[1072],{"type":555,"value":963},{"type":550,"tag":572,"props":1074,"children":1075},{"style":725},[1076],{"type":555,"value":1077},"str",{"type":550,"tag":572,"props":1079,"children":1080},{"style":697},[1081],{"type":555,"value":1082},");\n",{"type":550,"tag":572,"props":1084,"children":1086},{"class":574,"line":1085},16,[1087],{"type":550,"tag":572,"props":1088,"children":1089},{"style":697},[1090],{"type":555,"value":1091},"    }\n",{"type":550,"tag":572,"props":1093,"children":1095},{"class":574,"line":1094},17,[1096],{"type":550,"tag":572,"props":1097,"children":1098},{"style":683},[1099],{"type":555,"value":1100},"    // l \u003C r 时不满足条件，剪枝\n",{"type":550,"tag":572,"props":1102,"children":1104},{"class":574,"line":1103},18,[1105,1109,1113,1117,1122,1126,1130,1135],{"type":550,"tag":572,"props":1106,"children":1107},{"style":703},[1108],{"type":555,"value":1002},{"type":550,"tag":572,"props":1110,"children":1111},{"style":697},[1112],{"type":555,"value":799},{"type":550,"tag":572,"props":1114,"children":1115},{"style":725},[1116],{"type":555,"value":968},{"type":550,"tag":572,"props":1118,"children":1119},{"style":697},[1120],{"type":555,"value":1121}," \u003C",{"type":550,"tag":572,"props":1123,"children":1124},{"style":725},[1125],{"type":555,"value":904},{"type":550,"tag":572,"props":1127,"children":1128},{"style":697},[1129],{"type":555,"value":809},{"type":550,"tag":572,"props":1131,"children":1132},{"style":703},[1133],{"type":555,"value":1134}," return",{"type":550,"tag":572,"props":1136,"children":1137},{"style":697},[1138],{"type":555,"value":1139},";\n",{"type":550,"tag":572,"props":1141,"children":1143},{"class":574,"line":1142},19,[1144],{"type":550,"tag":572,"props":1145,"children":1146},{"style":683},[1147],{"type":555,"value":1148},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":550,"tag":572,"props":1150,"children":1152},{"class":574,"line":1151},20,[1153,1157,1161,1165,1169,1173,1177],{"type":550,"tag":572,"props":1154,"children":1155},{"style":703},[1156],{"type":555,"value":1002},{"type":550,"tag":572,"props":1158,"children":1159},{"style":697},[1160],{"type":555,"value":799},{"type":550,"tag":572,"props":1162,"children":1163},{"style":725},[1164],{"type":555,"value":968},{"type":550,"tag":572,"props":1166,"children":1167},{"style":697},[1168],{"type":555,"value":1121},{"type":550,"tag":572,"props":1170,"children":1171},{"style":725},[1172],{"type":555,"value":1020},{"type":550,"tag":572,"props":1174,"children":1175},{"style":697},[1176],{"type":555,"value":809},{"type":550,"tag":572,"props":1178,"children":1179},{"style":697},[1180],{"type":555,"value":814},{"type":550,"tag":572,"props":1182,"children":1184},{"class":574,"line":1183},21,[1185,1190,1194,1198,1203,1209,1213,1217,1221,1225,1229,1235,1240,1245],{"type":550,"tag":572,"props":1186,"children":1187},{"style":781},[1188],{"type":555,"value":1189},"      dfs",{"type":550,"tag":572,"props":1191,"children":1192},{"style":697},[1193],{"type":555,"value":963},{"type":550,"tag":572,"props":1195,"children":1196},{"style":725},[1197],{"type":555,"value":968},{"type":550,"tag":572,"props":1199,"children":1200},{"style":775},[1201],{"type":555,"value":1202}," +",{"type":550,"tag":572,"props":1204,"children":1206},{"style":1205},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1207],{"type":555,"value":1208}," 1",{"type":550,"tag":572,"props":1210,"children":1211},{"style":697},[1212],{"type":555,"value":973},{"type":550,"tag":572,"props":1214,"children":1215},{"style":725},[1216],{"type":555,"value":904},{"type":550,"tag":572,"props":1218,"children":1219},{"style":697},[1220],{"type":555,"value":973},{"type":550,"tag":572,"props":1222,"children":1223},{"style":725},[1224],{"type":555,"value":930},{"type":550,"tag":572,"props":1226,"children":1227},{"style":775},[1228],{"type":555,"value":1202},{"type":550,"tag":572,"props":1230,"children":1232},{"style":1231},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1233],{"type":555,"value":1234}," \"",{"type":550,"tag":572,"props":1236,"children":1238},{"style":1237},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1239],{"type":555,"value":963},{"type":550,"tag":572,"props":1241,"children":1242},{"style":1231},[1243],{"type":555,"value":1244},"\"",{"type":550,"tag":572,"props":1246,"children":1247},{"style":697},[1248],{"type":555,"value":1082},{"type":550,"tag":572,"props":1250,"children":1252},{"class":574,"line":1251},22,[1253],{"type":550,"tag":572,"props":1254,"children":1255},{"style":697},[1256],{"type":555,"value":1091},{"type":550,"tag":572,"props":1258,"children":1260},{"class":574,"line":1259},23,[1261],{"type":550,"tag":572,"props":1262,"children":1263},{"style":683},[1264],{"type":555,"value":1265},"    // r \u003C l 时，可以插入右括号\n",{"type":550,"tag":572,"props":1267,"children":1269},{"class":574,"line":1268},24,[1270,1274,1278,1283,1287,1291,1295],{"type":550,"tag":572,"props":1271,"children":1272},{"style":703},[1273],{"type":555,"value":1002},{"type":550,"tag":572,"props":1275,"children":1276},{"style":697},[1277],{"type":555,"value":799},{"type":550,"tag":572,"props":1279,"children":1280},{"style":725},[1281],{"type":555,"value":1282},"r",{"type":550,"tag":572,"props":1284,"children":1285},{"style":697},[1286],{"type":555,"value":1121},{"type":550,"tag":572,"props":1288,"children":1289},{"style":725},[1290],{"type":555,"value":878},{"type":550,"tag":572,"props":1292,"children":1293},{"style":697},[1294],{"type":555,"value":809},{"type":550,"tag":572,"props":1296,"children":1297},{"style":697},[1298],{"type":555,"value":814},{"type":550,"tag":572,"props":1300,"children":1302},{"class":574,"line":1301},25,[1303,1307,1311,1315,1319,1323,1327,1331,1335,1339,1343,1347,1351,1355],{"type":550,"tag":572,"props":1304,"children":1305},{"style":781},[1306],{"type":555,"value":1189},{"type":550,"tag":572,"props":1308,"children":1309},{"style":697},[1310],{"type":555,"value":963},{"type":550,"tag":572,"props":1312,"children":1313},{"style":725},[1314],{"type":555,"value":968},{"type":550,"tag":572,"props":1316,"children":1317},{"style":697},[1318],{"type":555,"value":973},{"type":550,"tag":572,"props":1320,"children":1321},{"style":725},[1322],{"type":555,"value":904},{"type":550,"tag":572,"props":1324,"children":1325},{"style":775},[1326],{"type":555,"value":1202},{"type":550,"tag":572,"props":1328,"children":1329},{"style":1205},[1330],{"type":555,"value":1208},{"type":550,"tag":572,"props":1332,"children":1333},{"style":697},[1334],{"type":555,"value":973},{"type":550,"tag":572,"props":1336,"children":1337},{"style":725},[1338],{"type":555,"value":930},{"type":550,"tag":572,"props":1340,"children":1341},{"style":775},[1342],{"type":555,"value":1202},{"type":550,"tag":572,"props":1344,"children":1345},{"style":1231},[1346],{"type":555,"value":1234},{"type":550,"tag":572,"props":1348,"children":1349},{"style":1237},[1350],{"type":555,"value":809},{"type":550,"tag":572,"props":1352,"children":1353},{"style":1231},[1354],{"type":555,"value":1244},{"type":550,"tag":572,"props":1356,"children":1357},{"style":697},[1358],{"type":555,"value":1082},{"type":550,"tag":572,"props":1360,"children":1362},{"class":574,"line":1361},26,[1363],{"type":550,"tag":572,"props":1364,"children":1365},{"style":697},[1366],{"type":555,"value":1091},{"type":550,"tag":572,"props":1368,"children":1370},{"class":574,"line":1369},27,[1371],{"type":550,"tag":572,"props":1372,"children":1373},{"style":697},[1374],{"type":555,"value":1375},"  }\n",{"type":550,"tag":572,"props":1377,"children":1379},{"class":574,"line":1378},28,[1380],{"type":550,"tag":572,"props":1381,"children":1382},{"emptyLinePlaceholder":844},[1383],{"type":555,"value":847},{"type":550,"tag":572,"props":1385,"children":1387},{"class":574,"line":1386},29,[1388,1393,1397,1402,1406,1411,1415,1420],{"type":550,"tag":572,"props":1389,"children":1390},{"style":781},[1391],{"type":555,"value":1392},"  dfs",{"type":550,"tag":572,"props":1394,"children":1395},{"style":697},[1396],{"type":555,"value":963},{"type":550,"tag":572,"props":1398,"children":1399},{"style":1205},[1400],{"type":555,"value":1401},"0",{"type":550,"tag":572,"props":1403,"children":1404},{"style":697},[1405],{"type":555,"value":973},{"type":550,"tag":572,"props":1407,"children":1408},{"style":1205},[1409],{"type":555,"value":1410}," 0",{"type":550,"tag":572,"props":1412,"children":1413},{"style":697},[1414],{"type":555,"value":973},{"type":550,"tag":572,"props":1416,"children":1417},{"style":1231},[1418],{"type":555,"value":1419}," \"\"",{"type":550,"tag":572,"props":1421,"children":1422},{"style":697},[1423],{"type":555,"value":1082},{"type":550,"tag":572,"props":1425,"children":1427},{"class":574,"line":1426},30,[1428],{"type":550,"tag":572,"props":1429,"children":1430},{"emptyLinePlaceholder":844},[1431],{"type":555,"value":847},{"type":550,"tag":572,"props":1433,"children":1435},{"class":574,"line":1434},31,[1436,1441,1445],{"type":550,"tag":572,"props":1437,"children":1438},{"style":703},[1439],{"type":555,"value":1440},"  return",{"type":550,"tag":572,"props":1442,"children":1443},{"style":725},[1444],{"type":555,"value":828},{"type":550,"tag":572,"props":1446,"children":1447},{"style":697},[1448],{"type":555,"value":1139},{"type":550,"tag":572,"props":1450,"children":1452},{"class":574,"line":1451},32,[1453],{"type":550,"tag":572,"props":1454,"children":1455},{"style":697},[1456],{"type":555,"value":1457},"};\n",{"type":550,"tag":1459,"props":1460,"children":1461},"style",{},[1462],{"type":555,"value":1463},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":771,"depth":771,"links":1465},[1466,1467],{"id":637,"depth":584,"text":637},{"id":660,"depth":584,"text":660,"children":1468},[1469],{"id":666,"depth":731,"text":666},"markdown","content:1.algorithm:3.leetcode:3.major:22.generate-parentheses.md","content","1.algorithm/3.leetcode/3.major/22.generate-parentheses.md","md",[1476,1478],{"_path":90,"title":89,"description":1477},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":96,"title":95,"description":1479},"给你一个链表数组，每个链表都已经按升序排列。",1714099212898]