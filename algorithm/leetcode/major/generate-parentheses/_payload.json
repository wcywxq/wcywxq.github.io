[{"data":1,"prerenderedAt":1440},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/generate-parentheses":500,"/algorithm/leetcode/major/generate-parentheses-surround":1435},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":93,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":92,"description":504,"url":505,"body":506,"_type":1430,"_id":1431,"_source":1432,"_file":1433,"_extension":1434},"major",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":507,"children":508,"toc":1424},"root",[509,516,521,551,556,579,584,594,600,605,618,623,629,1418],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"示例 1：",{"type":510,"tag":522,"props":523,"children":526},"pre",{"className":524,"code":525,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[527],{"type":510,"tag":528,"props":529,"children":530},"code",{"__ignoreMap":503},[531,542],{"type":510,"tag":532,"props":533,"children":536},"span",{"class":534,"line":535},"line",1,[537],{"type":510,"tag":532,"props":538,"children":539},{},[540],{"type":515,"value":541},"输入：n = 3\n",{"type":510,"tag":532,"props":543,"children":545},{"class":534,"line":544},2,[546],{"type":510,"tag":532,"props":547,"children":548},{},[549],{"type":515,"value":550},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":510,"tag":511,"props":552,"children":553},{},[554],{"type":515,"value":555},"示例 2：",{"type":510,"tag":522,"props":557,"children":559},{"className":524,"code":558,"language":515,"meta":503,"style":503},"输入：n = 1\n输出：[\"()\"]\n",[560],{"type":510,"tag":528,"props":561,"children":562},{"__ignoreMap":503},[563,571],{"type":510,"tag":532,"props":564,"children":565},{"class":534,"line":535},[566],{"type":510,"tag":532,"props":567,"children":568},{},[569],{"type":515,"value":570},"输入：n = 1\n",{"type":510,"tag":532,"props":572,"children":573},{"class":534,"line":544},[574],{"type":510,"tag":532,"props":575,"children":576},{},[577],{"type":515,"value":578},"输出：[\"()\"]\n",{"type":510,"tag":511,"props":580,"children":581},{},[582],{"type":515,"value":583},"提示：",{"type":510,"tag":585,"props":586,"children":587},"ul",{},[588],{"type":510,"tag":589,"props":590,"children":591},"li",{},[592],{"type":515,"value":593},"1 \u003C= n \u003C= 8",{"type":510,"tag":595,"props":596,"children":598},"h2",{"id":597},"解题思路",[599],{"type":515,"value":597},{"type":510,"tag":511,"props":601,"children":602},{},[603],{"type":515,"value":604},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":510,"tag":585,"props":606,"children":607},{},[608,613],{"type":510,"tag":589,"props":609,"children":610},{},[611],{"type":515,"value":612},"左括号数目 = 右括号数目",{"type":510,"tag":589,"props":614,"children":615},{},[616],{"type":515,"value":617},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":510,"tag":595,"props":619,"children":621},{"id":620},"实现",[622],{"type":515,"value":620},{"type":510,"tag":624,"props":625,"children":627},"h3",{"id":626},"回溯",[628],{"type":515,"value":626},{"type":510,"tag":522,"props":630,"children":634},{"className":631,"code":632,"language":633,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[635],{"type":510,"tag":528,"props":636,"children":637},{"__ignoreMap":503},[638,647,689,720,729,775,798,808,817,844,870,896,905,954,1006,1043,1052,1061,1100,1109,1141,1209,1217,1226,1259,1319,1327,1336,1344,1384,1392,1409],{"type":510,"tag":532,"props":639,"children":640},{"class":534,"line":535},[641],{"type":510,"tag":532,"props":642,"children":644},{"style":643},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[645],{"type":515,"value":646},"/**\n",{"type":510,"tag":532,"props":648,"children":649},{"class":534,"line":544},[650,655,661,667,672,678,683],{"type":510,"tag":532,"props":651,"children":652},{"style":643},[653],{"type":515,"value":654}," * ",{"type":510,"tag":532,"props":656,"children":658},{"style":657},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[659],{"type":515,"value":660},"@",{"type":510,"tag":532,"props":662,"children":664},{"style":663},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[665],{"type":515,"value":666},"param",{"type":510,"tag":532,"props":668,"children":669},{"style":657},[670],{"type":515,"value":671}," {",{"type":510,"tag":532,"props":673,"children":675},{"style":674},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[676],{"type":515,"value":677},"number",{"type":510,"tag":532,"props":679,"children":680},{"style":657},[681],{"type":515,"value":682},"}",{"type":510,"tag":532,"props":684,"children":686},{"style":685},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[687],{"type":515,"value":688}," n\n",{"type":510,"tag":532,"props":690,"children":692},{"class":534,"line":691},3,[693,697,701,706,710,715],{"type":510,"tag":532,"props":694,"children":695},{"style":643},[696],{"type":515,"value":654},{"type":510,"tag":532,"props":698,"children":699},{"style":657},[700],{"type":515,"value":660},{"type":510,"tag":532,"props":702,"children":703},{"style":663},[704],{"type":515,"value":705},"return",{"type":510,"tag":532,"props":707,"children":708},{"style":657},[709],{"type":515,"value":671},{"type":510,"tag":532,"props":711,"children":712},{"style":674},[713],{"type":515,"value":714},"string[]",{"type":510,"tag":532,"props":716,"children":717},{"style":657},[718],{"type":515,"value":719},"}\n",{"type":510,"tag":532,"props":721,"children":723},{"class":534,"line":722},4,[724],{"type":510,"tag":532,"props":725,"children":726},{"style":643},[727],{"type":515,"value":728}," */\n",{"type":510,"tag":532,"props":730,"children":732},{"class":534,"line":731},5,[733,739,745,750,755,760,765,770],{"type":510,"tag":532,"props":734,"children":736},{"style":735},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[737],{"type":515,"value":738},"var",{"type":510,"tag":532,"props":740,"children":742},{"style":741},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[743],{"type":515,"value":744}," generateParenthesis",{"type":510,"tag":532,"props":746,"children":747},{"style":657},[748],{"type":515,"value":749}," =",{"type":510,"tag":532,"props":751,"children":752},{"style":735},[753],{"type":515,"value":754}," function",{"type":510,"tag":532,"props":756,"children":757},{"style":657},[758],{"type":515,"value":759}," (",{"type":510,"tag":532,"props":761,"children":762},{"style":685},[763],{"type":515,"value":764},"n",{"type":510,"tag":532,"props":766,"children":767},{"style":657},[768],{"type":515,"value":769},")",{"type":510,"tag":532,"props":771,"children":772},{"style":657},[773],{"type":515,"value":774}," {\n",{"type":510,"tag":532,"props":776,"children":778},{"class":534,"line":777},6,[779,784,789,793],{"type":510,"tag":532,"props":780,"children":781},{"style":735},[782],{"type":515,"value":783},"  const",{"type":510,"tag":532,"props":785,"children":786},{"style":685},[787],{"type":515,"value":788}," res",{"type":510,"tag":532,"props":790,"children":791},{"style":657},[792],{"type":515,"value":749},{"type":510,"tag":532,"props":794,"children":795},{"style":657},[796],{"type":515,"value":797}," [];\n",{"type":510,"tag":532,"props":799,"children":801},{"class":534,"line":800},7,[802],{"type":510,"tag":532,"props":803,"children":805},{"emptyLinePlaceholder":804},true,[806],{"type":515,"value":807},"\n",{"type":510,"tag":532,"props":809,"children":811},{"class":534,"line":810},8,[812],{"type":510,"tag":532,"props":813,"children":814},{"style":643},[815],{"type":515,"value":816},"  /**\n",{"type":510,"tag":532,"props":818,"children":820},{"class":534,"line":819},9,[821,826,830,834,839],{"type":510,"tag":532,"props":822,"children":823},{"style":643},[824],{"type":515,"value":825},"   * ",{"type":510,"tag":532,"props":827,"children":828},{"style":657},[829],{"type":515,"value":660},{"type":510,"tag":532,"props":831,"children":832},{"style":663},[833],{"type":515,"value":666},{"type":510,"tag":532,"props":835,"children":836},{"style":685},[837],{"type":515,"value":838}," l",{"type":510,"tag":532,"props":840,"children":841},{"style":643},[842],{"type":515,"value":843}," 左侧括号已经用了几个\n",{"type":510,"tag":532,"props":845,"children":847},{"class":534,"line":846},10,[848,852,856,860,865],{"type":510,"tag":532,"props":849,"children":850},{"style":643},[851],{"type":515,"value":825},{"type":510,"tag":532,"props":853,"children":854},{"style":657},[855],{"type":515,"value":660},{"type":510,"tag":532,"props":857,"children":858},{"style":663},[859],{"type":515,"value":666},{"type":510,"tag":532,"props":861,"children":862},{"style":685},[863],{"type":515,"value":864}," r",{"type":510,"tag":532,"props":866,"children":867},{"style":643},[868],{"type":515,"value":869}," 右侧括号已经用了几个\n",{"type":510,"tag":532,"props":871,"children":873},{"class":534,"line":872},11,[874,878,882,886,891],{"type":510,"tag":532,"props":875,"children":876},{"style":643},[877],{"type":515,"value":825},{"type":510,"tag":532,"props":879,"children":880},{"style":657},[881],{"type":515,"value":660},{"type":510,"tag":532,"props":883,"children":884},{"style":663},[885],{"type":515,"value":666},{"type":510,"tag":532,"props":887,"children":888},{"style":685},[889],{"type":515,"value":890}," str",{"type":510,"tag":532,"props":892,"children":893},{"style":643},[894],{"type":515,"value":895}," 当前递归得到的拼接字符串结果\n",{"type":510,"tag":532,"props":897,"children":899},{"class":534,"line":898},12,[900],{"type":510,"tag":532,"props":901,"children":902},{"style":643},[903],{"type":515,"value":904},"   */\n",{"type":510,"tag":532,"props":906,"children":908},{"class":534,"line":907},13,[909,914,919,924,929,934,938,942,946,950],{"type":510,"tag":532,"props":910,"children":911},{"style":735},[912],{"type":515,"value":913},"  function",{"type":510,"tag":532,"props":915,"children":916},{"style":741},[917],{"type":515,"value":918}," dfs",{"type":510,"tag":532,"props":920,"children":921},{"style":657},[922],{"type":515,"value":923},"(",{"type":510,"tag":532,"props":925,"children":926},{"style":685},[927],{"type":515,"value":928},"l",{"type":510,"tag":532,"props":930,"children":931},{"style":657},[932],{"type":515,"value":933},",",{"type":510,"tag":532,"props":935,"children":936},{"style":685},[937],{"type":515,"value":864},{"type":510,"tag":532,"props":939,"children":940},{"style":657},[941],{"type":515,"value":933},{"type":510,"tag":532,"props":943,"children":944},{"style":685},[945],{"type":515,"value":890},{"type":510,"tag":532,"props":947,"children":948},{"style":657},[949],{"type":515,"value":769},{"type":510,"tag":532,"props":951,"children":952},{"style":657},[953],{"type":515,"value":774},{"type":510,"tag":532,"props":955,"children":957},{"class":534,"line":956},14,[958,963,967,971,976,981,986,990,994,998,1002],{"type":510,"tag":532,"props":959,"children":960},{"style":663},[961],{"type":515,"value":962},"    if",{"type":510,"tag":532,"props":964,"children":965},{"style":657},[966],{"type":515,"value":759},{"type":510,"tag":532,"props":968,"children":969},{"style":685},[970],{"type":515,"value":928},{"type":510,"tag":532,"props":972,"children":973},{"style":735},[974],{"type":515,"value":975}," ===",{"type":510,"tag":532,"props":977,"children":978},{"style":685},[979],{"type":515,"value":980}," n",{"type":510,"tag":532,"props":982,"children":983},{"style":735},[984],{"type":515,"value":985}," &&",{"type":510,"tag":532,"props":987,"children":988},{"style":685},[989],{"type":515,"value":864},{"type":510,"tag":532,"props":991,"children":992},{"style":735},[993],{"type":515,"value":975},{"type":510,"tag":532,"props":995,"children":996},{"style":685},[997],{"type":515,"value":980},{"type":510,"tag":532,"props":999,"children":1000},{"style":657},[1001],{"type":515,"value":769},{"type":510,"tag":532,"props":1003,"children":1004},{"style":657},[1005],{"type":515,"value":774},{"type":510,"tag":532,"props":1007,"children":1009},{"class":534,"line":1008},15,[1010,1015,1019,1024,1029,1033,1038],{"type":510,"tag":532,"props":1011,"children":1012},{"style":663},[1013],{"type":515,"value":1014},"      return",{"type":510,"tag":532,"props":1016,"children":1017},{"style":685},[1018],{"type":515,"value":788},{"type":510,"tag":532,"props":1020,"children":1021},{"style":657},[1022],{"type":515,"value":1023},".",{"type":510,"tag":532,"props":1025,"children":1026},{"style":741},[1027],{"type":515,"value":1028},"push",{"type":510,"tag":532,"props":1030,"children":1031},{"style":657},[1032],{"type":515,"value":923},{"type":510,"tag":532,"props":1034,"children":1035},{"style":685},[1036],{"type":515,"value":1037},"str",{"type":510,"tag":532,"props":1039,"children":1040},{"style":657},[1041],{"type":515,"value":1042},");\n",{"type":510,"tag":532,"props":1044,"children":1046},{"class":534,"line":1045},16,[1047],{"type":510,"tag":532,"props":1048,"children":1049},{"style":657},[1050],{"type":515,"value":1051},"    }\n",{"type":510,"tag":532,"props":1053,"children":1055},{"class":534,"line":1054},17,[1056],{"type":510,"tag":532,"props":1057,"children":1058},{"style":643},[1059],{"type":515,"value":1060},"    // l \u003C r 时不满足条件，剪枝\n",{"type":510,"tag":532,"props":1062,"children":1064},{"class":534,"line":1063},18,[1065,1069,1073,1077,1082,1086,1090,1095],{"type":510,"tag":532,"props":1066,"children":1067},{"style":663},[1068],{"type":515,"value":962},{"type":510,"tag":532,"props":1070,"children":1071},{"style":657},[1072],{"type":515,"value":759},{"type":510,"tag":532,"props":1074,"children":1075},{"style":685},[1076],{"type":515,"value":928},{"type":510,"tag":532,"props":1078,"children":1079},{"style":657},[1080],{"type":515,"value":1081}," \u003C",{"type":510,"tag":532,"props":1083,"children":1084},{"style":685},[1085],{"type":515,"value":864},{"type":510,"tag":532,"props":1087,"children":1088},{"style":657},[1089],{"type":515,"value":769},{"type":510,"tag":532,"props":1091,"children":1092},{"style":663},[1093],{"type":515,"value":1094}," return",{"type":510,"tag":532,"props":1096,"children":1097},{"style":657},[1098],{"type":515,"value":1099},";\n",{"type":510,"tag":532,"props":1101,"children":1103},{"class":534,"line":1102},19,[1104],{"type":510,"tag":532,"props":1105,"children":1106},{"style":643},[1107],{"type":515,"value":1108},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":510,"tag":532,"props":1110,"children":1112},{"class":534,"line":1111},20,[1113,1117,1121,1125,1129,1133,1137],{"type":510,"tag":532,"props":1114,"children":1115},{"style":663},[1116],{"type":515,"value":962},{"type":510,"tag":532,"props":1118,"children":1119},{"style":657},[1120],{"type":515,"value":759},{"type":510,"tag":532,"props":1122,"children":1123},{"style":685},[1124],{"type":515,"value":928},{"type":510,"tag":532,"props":1126,"children":1127},{"style":657},[1128],{"type":515,"value":1081},{"type":510,"tag":532,"props":1130,"children":1131},{"style":685},[1132],{"type":515,"value":980},{"type":510,"tag":532,"props":1134,"children":1135},{"style":657},[1136],{"type":515,"value":769},{"type":510,"tag":532,"props":1138,"children":1139},{"style":657},[1140],{"type":515,"value":774},{"type":510,"tag":532,"props":1142,"children":1144},{"class":534,"line":1143},21,[1145,1150,1154,1158,1163,1169,1173,1177,1181,1185,1189,1195,1200,1205],{"type":510,"tag":532,"props":1146,"children":1147},{"style":741},[1148],{"type":515,"value":1149},"      dfs",{"type":510,"tag":532,"props":1151,"children":1152},{"style":657},[1153],{"type":515,"value":923},{"type":510,"tag":532,"props":1155,"children":1156},{"style":685},[1157],{"type":515,"value":928},{"type":510,"tag":532,"props":1159,"children":1160},{"style":735},[1161],{"type":515,"value":1162}," +",{"type":510,"tag":532,"props":1164,"children":1166},{"style":1165},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1167],{"type":515,"value":1168}," 1",{"type":510,"tag":532,"props":1170,"children":1171},{"style":657},[1172],{"type":515,"value":933},{"type":510,"tag":532,"props":1174,"children":1175},{"style":685},[1176],{"type":515,"value":864},{"type":510,"tag":532,"props":1178,"children":1179},{"style":657},[1180],{"type":515,"value":933},{"type":510,"tag":532,"props":1182,"children":1183},{"style":685},[1184],{"type":515,"value":890},{"type":510,"tag":532,"props":1186,"children":1187},{"style":735},[1188],{"type":515,"value":1162},{"type":510,"tag":532,"props":1190,"children":1192},{"style":1191},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1193],{"type":515,"value":1194}," \"",{"type":510,"tag":532,"props":1196,"children":1198},{"style":1197},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1199],{"type":515,"value":923},{"type":510,"tag":532,"props":1201,"children":1202},{"style":1191},[1203],{"type":515,"value":1204},"\"",{"type":510,"tag":532,"props":1206,"children":1207},{"style":657},[1208],{"type":515,"value":1042},{"type":510,"tag":532,"props":1210,"children":1212},{"class":534,"line":1211},22,[1213],{"type":510,"tag":532,"props":1214,"children":1215},{"style":657},[1216],{"type":515,"value":1051},{"type":510,"tag":532,"props":1218,"children":1220},{"class":534,"line":1219},23,[1221],{"type":510,"tag":532,"props":1222,"children":1223},{"style":643},[1224],{"type":515,"value":1225},"    // r \u003C l 时，可以插入右括号\n",{"type":510,"tag":532,"props":1227,"children":1229},{"class":534,"line":1228},24,[1230,1234,1238,1243,1247,1251,1255],{"type":510,"tag":532,"props":1231,"children":1232},{"style":663},[1233],{"type":515,"value":962},{"type":510,"tag":532,"props":1235,"children":1236},{"style":657},[1237],{"type":515,"value":759},{"type":510,"tag":532,"props":1239,"children":1240},{"style":685},[1241],{"type":515,"value":1242},"r",{"type":510,"tag":532,"props":1244,"children":1245},{"style":657},[1246],{"type":515,"value":1081},{"type":510,"tag":532,"props":1248,"children":1249},{"style":685},[1250],{"type":515,"value":838},{"type":510,"tag":532,"props":1252,"children":1253},{"style":657},[1254],{"type":515,"value":769},{"type":510,"tag":532,"props":1256,"children":1257},{"style":657},[1258],{"type":515,"value":774},{"type":510,"tag":532,"props":1260,"children":1262},{"class":534,"line":1261},25,[1263,1267,1271,1275,1279,1283,1287,1291,1295,1299,1303,1307,1311,1315],{"type":510,"tag":532,"props":1264,"children":1265},{"style":741},[1266],{"type":515,"value":1149},{"type":510,"tag":532,"props":1268,"children":1269},{"style":657},[1270],{"type":515,"value":923},{"type":510,"tag":532,"props":1272,"children":1273},{"style":685},[1274],{"type":515,"value":928},{"type":510,"tag":532,"props":1276,"children":1277},{"style":657},[1278],{"type":515,"value":933},{"type":510,"tag":532,"props":1280,"children":1281},{"style":685},[1282],{"type":515,"value":864},{"type":510,"tag":532,"props":1284,"children":1285},{"style":735},[1286],{"type":515,"value":1162},{"type":510,"tag":532,"props":1288,"children":1289},{"style":1165},[1290],{"type":515,"value":1168},{"type":510,"tag":532,"props":1292,"children":1293},{"style":657},[1294],{"type":515,"value":933},{"type":510,"tag":532,"props":1296,"children":1297},{"style":685},[1298],{"type":515,"value":890},{"type":510,"tag":532,"props":1300,"children":1301},{"style":735},[1302],{"type":515,"value":1162},{"type":510,"tag":532,"props":1304,"children":1305},{"style":1191},[1306],{"type":515,"value":1194},{"type":510,"tag":532,"props":1308,"children":1309},{"style":1197},[1310],{"type":515,"value":769},{"type":510,"tag":532,"props":1312,"children":1313},{"style":1191},[1314],{"type":515,"value":1204},{"type":510,"tag":532,"props":1316,"children":1317},{"style":657},[1318],{"type":515,"value":1042},{"type":510,"tag":532,"props":1320,"children":1322},{"class":534,"line":1321},26,[1323],{"type":510,"tag":532,"props":1324,"children":1325},{"style":657},[1326],{"type":515,"value":1051},{"type":510,"tag":532,"props":1328,"children":1330},{"class":534,"line":1329},27,[1331],{"type":510,"tag":532,"props":1332,"children":1333},{"style":657},[1334],{"type":515,"value":1335},"  }\n",{"type":510,"tag":532,"props":1337,"children":1339},{"class":534,"line":1338},28,[1340],{"type":510,"tag":532,"props":1341,"children":1342},{"emptyLinePlaceholder":804},[1343],{"type":515,"value":807},{"type":510,"tag":532,"props":1345,"children":1347},{"class":534,"line":1346},29,[1348,1353,1357,1362,1366,1371,1375,1380],{"type":510,"tag":532,"props":1349,"children":1350},{"style":741},[1351],{"type":515,"value":1352},"  dfs",{"type":510,"tag":532,"props":1354,"children":1355},{"style":657},[1356],{"type":515,"value":923},{"type":510,"tag":532,"props":1358,"children":1359},{"style":1165},[1360],{"type":515,"value":1361},"0",{"type":510,"tag":532,"props":1363,"children":1364},{"style":657},[1365],{"type":515,"value":933},{"type":510,"tag":532,"props":1367,"children":1368},{"style":1165},[1369],{"type":515,"value":1370}," 0",{"type":510,"tag":532,"props":1372,"children":1373},{"style":657},[1374],{"type":515,"value":933},{"type":510,"tag":532,"props":1376,"children":1377},{"style":1191},[1378],{"type":515,"value":1379}," \"\"",{"type":510,"tag":532,"props":1381,"children":1382},{"style":657},[1383],{"type":515,"value":1042},{"type":510,"tag":532,"props":1385,"children":1387},{"class":534,"line":1386},30,[1388],{"type":510,"tag":532,"props":1389,"children":1390},{"emptyLinePlaceholder":804},[1391],{"type":515,"value":807},{"type":510,"tag":532,"props":1393,"children":1395},{"class":534,"line":1394},31,[1396,1401,1405],{"type":510,"tag":532,"props":1397,"children":1398},{"style":663},[1399],{"type":515,"value":1400},"  return",{"type":510,"tag":532,"props":1402,"children":1403},{"style":685},[1404],{"type":515,"value":788},{"type":510,"tag":532,"props":1406,"children":1407},{"style":657},[1408],{"type":515,"value":1099},{"type":510,"tag":532,"props":1410,"children":1412},{"class":534,"line":1411},32,[1413],{"type":510,"tag":532,"props":1414,"children":1415},{"style":657},[1416],{"type":515,"value":1417},"};\n",{"type":510,"tag":1419,"props":1420,"children":1421},"style",{},[1422],{"type":515,"value":1423},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":731,"depth":731,"links":1425},[1426,1427],{"id":597,"depth":544,"text":597},{"id":620,"depth":544,"text":620,"children":1428},[1429],{"id":626,"depth":691,"text":626},"markdown","content:1.algorithm:3.leetcode:3.major:22.generate-parentheses.md","content","1.algorithm/3.leetcode/3.major/22.generate-parentheses.md","md",[1436,1438],{"_path":90,"title":89,"description":1437},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":96,"title":95,"description":1439},"给你一个链表数组，每个链表都已经按升序排列。",1714054335683]