[{"data":1,"prerenderedAt":1446},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/generate-parentheses":506,"/algorithm/leetcode/major/generate-parentheses-surround":1441},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":93,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":92,"description":510,"url":511,"body":512,"_type":1436,"_id":1437,"_source":1438,"_file":1439,"_extension":1440},"major",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":513,"children":514,"toc":1430},"root",[515,522,527,557,562,585,590,600,606,611,624,629,635,1424],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"示例 1：",{"type":516,"tag":528,"props":529,"children":532},"pre",{"className":530,"code":531,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[533],{"type":516,"tag":534,"props":535,"children":536},"code",{"__ignoreMap":509},[537,548],{"type":516,"tag":538,"props":539,"children":542},"span",{"class":540,"line":541},"line",1,[543],{"type":516,"tag":538,"props":544,"children":545},{},[546],{"type":521,"value":547},"输入：n = 3\n",{"type":516,"tag":538,"props":549,"children":551},{"class":540,"line":550},2,[552],{"type":516,"tag":538,"props":553,"children":554},{},[555],{"type":521,"value":556},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":516,"tag":517,"props":558,"children":559},{},[560],{"type":521,"value":561},"示例 2：",{"type":516,"tag":528,"props":563,"children":565},{"className":530,"code":564,"language":521,"meta":509,"style":509},"输入：n = 1\n输出：[\"()\"]\n",[566],{"type":516,"tag":534,"props":567,"children":568},{"__ignoreMap":509},[569,577],{"type":516,"tag":538,"props":570,"children":571},{"class":540,"line":541},[572],{"type":516,"tag":538,"props":573,"children":574},{},[575],{"type":521,"value":576},"输入：n = 1\n",{"type":516,"tag":538,"props":578,"children":579},{"class":540,"line":550},[580],{"type":516,"tag":538,"props":581,"children":582},{},[583],{"type":521,"value":584},"输出：[\"()\"]\n",{"type":516,"tag":517,"props":586,"children":587},{},[588],{"type":521,"value":589},"提示：",{"type":516,"tag":591,"props":592,"children":593},"ul",{},[594],{"type":516,"tag":595,"props":596,"children":597},"li",{},[598],{"type":521,"value":599},"1 \u003C= n \u003C= 8",{"type":516,"tag":601,"props":602,"children":604},"h2",{"id":603},"解题思路",[605],{"type":521,"value":603},{"type":516,"tag":517,"props":607,"children":608},{},[609],{"type":521,"value":610},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":516,"tag":591,"props":612,"children":613},{},[614,619],{"type":516,"tag":595,"props":615,"children":616},{},[617],{"type":521,"value":618},"左括号数目 = 右括号数目",{"type":516,"tag":595,"props":620,"children":621},{},[622],{"type":521,"value":623},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":516,"tag":601,"props":625,"children":627},{"id":626},"实现",[628],{"type":521,"value":626},{"type":516,"tag":630,"props":631,"children":633},"h3",{"id":632},"回溯",[634],{"type":521,"value":632},{"type":516,"tag":528,"props":636,"children":640},{"className":637,"code":638,"language":639,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[641],{"type":516,"tag":534,"props":642,"children":643},{"__ignoreMap":509},[644,653,695,726,735,781,804,814,823,850,876,902,911,960,1012,1049,1058,1067,1106,1115,1147,1215,1223,1232,1265,1325,1333,1342,1350,1390,1398,1415],{"type":516,"tag":538,"props":645,"children":646},{"class":540,"line":541},[647],{"type":516,"tag":538,"props":648,"children":650},{"style":649},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[651],{"type":521,"value":652},"/**\n",{"type":516,"tag":538,"props":654,"children":655},{"class":540,"line":550},[656,661,667,673,678,684,689],{"type":516,"tag":538,"props":657,"children":658},{"style":649},[659],{"type":521,"value":660}," * ",{"type":516,"tag":538,"props":662,"children":664},{"style":663},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[665],{"type":521,"value":666},"@",{"type":516,"tag":538,"props":668,"children":670},{"style":669},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[671],{"type":521,"value":672},"param",{"type":516,"tag":538,"props":674,"children":675},{"style":663},[676],{"type":521,"value":677}," {",{"type":516,"tag":538,"props":679,"children":681},{"style":680},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[682],{"type":521,"value":683},"number",{"type":516,"tag":538,"props":685,"children":686},{"style":663},[687],{"type":521,"value":688},"}",{"type":516,"tag":538,"props":690,"children":692},{"style":691},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[693],{"type":521,"value":694}," n\n",{"type":516,"tag":538,"props":696,"children":698},{"class":540,"line":697},3,[699,703,707,712,716,721],{"type":516,"tag":538,"props":700,"children":701},{"style":649},[702],{"type":521,"value":660},{"type":516,"tag":538,"props":704,"children":705},{"style":663},[706],{"type":521,"value":666},{"type":516,"tag":538,"props":708,"children":709},{"style":669},[710],{"type":521,"value":711},"return",{"type":516,"tag":538,"props":713,"children":714},{"style":663},[715],{"type":521,"value":677},{"type":516,"tag":538,"props":717,"children":718},{"style":680},[719],{"type":521,"value":720},"string[]",{"type":516,"tag":538,"props":722,"children":723},{"style":663},[724],{"type":521,"value":725},"}\n",{"type":516,"tag":538,"props":727,"children":729},{"class":540,"line":728},4,[730],{"type":516,"tag":538,"props":731,"children":732},{"style":649},[733],{"type":521,"value":734}," */\n",{"type":516,"tag":538,"props":736,"children":738},{"class":540,"line":737},5,[739,745,751,756,761,766,771,776],{"type":516,"tag":538,"props":740,"children":742},{"style":741},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[743],{"type":521,"value":744},"var",{"type":516,"tag":538,"props":746,"children":748},{"style":747},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[749],{"type":521,"value":750}," generateParenthesis",{"type":516,"tag":538,"props":752,"children":753},{"style":663},[754],{"type":521,"value":755}," =",{"type":516,"tag":538,"props":757,"children":758},{"style":741},[759],{"type":521,"value":760}," function",{"type":516,"tag":538,"props":762,"children":763},{"style":663},[764],{"type":521,"value":765}," (",{"type":516,"tag":538,"props":767,"children":768},{"style":691},[769],{"type":521,"value":770},"n",{"type":516,"tag":538,"props":772,"children":773},{"style":663},[774],{"type":521,"value":775},")",{"type":516,"tag":538,"props":777,"children":778},{"style":663},[779],{"type":521,"value":780}," {\n",{"type":516,"tag":538,"props":782,"children":784},{"class":540,"line":783},6,[785,790,795,799],{"type":516,"tag":538,"props":786,"children":787},{"style":741},[788],{"type":521,"value":789},"  const",{"type":516,"tag":538,"props":791,"children":792},{"style":691},[793],{"type":521,"value":794}," res",{"type":516,"tag":538,"props":796,"children":797},{"style":663},[798],{"type":521,"value":755},{"type":516,"tag":538,"props":800,"children":801},{"style":663},[802],{"type":521,"value":803}," [];\n",{"type":516,"tag":538,"props":805,"children":807},{"class":540,"line":806},7,[808],{"type":516,"tag":538,"props":809,"children":811},{"emptyLinePlaceholder":810},true,[812],{"type":521,"value":813},"\n",{"type":516,"tag":538,"props":815,"children":817},{"class":540,"line":816},8,[818],{"type":516,"tag":538,"props":819,"children":820},{"style":649},[821],{"type":521,"value":822},"  /**\n",{"type":516,"tag":538,"props":824,"children":826},{"class":540,"line":825},9,[827,832,836,840,845],{"type":516,"tag":538,"props":828,"children":829},{"style":649},[830],{"type":521,"value":831},"   * ",{"type":516,"tag":538,"props":833,"children":834},{"style":663},[835],{"type":521,"value":666},{"type":516,"tag":538,"props":837,"children":838},{"style":669},[839],{"type":521,"value":672},{"type":516,"tag":538,"props":841,"children":842},{"style":691},[843],{"type":521,"value":844}," l",{"type":516,"tag":538,"props":846,"children":847},{"style":649},[848],{"type":521,"value":849}," 左侧括号已经用了几个\n",{"type":516,"tag":538,"props":851,"children":853},{"class":540,"line":852},10,[854,858,862,866,871],{"type":516,"tag":538,"props":855,"children":856},{"style":649},[857],{"type":521,"value":831},{"type":516,"tag":538,"props":859,"children":860},{"style":663},[861],{"type":521,"value":666},{"type":516,"tag":538,"props":863,"children":864},{"style":669},[865],{"type":521,"value":672},{"type":516,"tag":538,"props":867,"children":868},{"style":691},[869],{"type":521,"value":870}," r",{"type":516,"tag":538,"props":872,"children":873},{"style":649},[874],{"type":521,"value":875}," 右侧括号已经用了几个\n",{"type":516,"tag":538,"props":877,"children":879},{"class":540,"line":878},11,[880,884,888,892,897],{"type":516,"tag":538,"props":881,"children":882},{"style":649},[883],{"type":521,"value":831},{"type":516,"tag":538,"props":885,"children":886},{"style":663},[887],{"type":521,"value":666},{"type":516,"tag":538,"props":889,"children":890},{"style":669},[891],{"type":521,"value":672},{"type":516,"tag":538,"props":893,"children":894},{"style":691},[895],{"type":521,"value":896}," str",{"type":516,"tag":538,"props":898,"children":899},{"style":649},[900],{"type":521,"value":901}," 当前递归得到的拼接字符串结果\n",{"type":516,"tag":538,"props":903,"children":905},{"class":540,"line":904},12,[906],{"type":516,"tag":538,"props":907,"children":908},{"style":649},[909],{"type":521,"value":910},"   */\n",{"type":516,"tag":538,"props":912,"children":914},{"class":540,"line":913},13,[915,920,925,930,935,940,944,948,952,956],{"type":516,"tag":538,"props":916,"children":917},{"style":741},[918],{"type":521,"value":919},"  function",{"type":516,"tag":538,"props":921,"children":922},{"style":747},[923],{"type":521,"value":924}," dfs",{"type":516,"tag":538,"props":926,"children":927},{"style":663},[928],{"type":521,"value":929},"(",{"type":516,"tag":538,"props":931,"children":932},{"style":691},[933],{"type":521,"value":934},"l",{"type":516,"tag":538,"props":936,"children":937},{"style":663},[938],{"type":521,"value":939},",",{"type":516,"tag":538,"props":941,"children":942},{"style":691},[943],{"type":521,"value":870},{"type":516,"tag":538,"props":945,"children":946},{"style":663},[947],{"type":521,"value":939},{"type":516,"tag":538,"props":949,"children":950},{"style":691},[951],{"type":521,"value":896},{"type":516,"tag":538,"props":953,"children":954},{"style":663},[955],{"type":521,"value":775},{"type":516,"tag":538,"props":957,"children":958},{"style":663},[959],{"type":521,"value":780},{"type":516,"tag":538,"props":961,"children":963},{"class":540,"line":962},14,[964,969,973,977,982,987,992,996,1000,1004,1008],{"type":516,"tag":538,"props":965,"children":966},{"style":669},[967],{"type":521,"value":968},"    if",{"type":516,"tag":538,"props":970,"children":971},{"style":663},[972],{"type":521,"value":765},{"type":516,"tag":538,"props":974,"children":975},{"style":691},[976],{"type":521,"value":934},{"type":516,"tag":538,"props":978,"children":979},{"style":741},[980],{"type":521,"value":981}," ===",{"type":516,"tag":538,"props":983,"children":984},{"style":691},[985],{"type":521,"value":986}," n",{"type":516,"tag":538,"props":988,"children":989},{"style":741},[990],{"type":521,"value":991}," &&",{"type":516,"tag":538,"props":993,"children":994},{"style":691},[995],{"type":521,"value":870},{"type":516,"tag":538,"props":997,"children":998},{"style":741},[999],{"type":521,"value":981},{"type":516,"tag":538,"props":1001,"children":1002},{"style":691},[1003],{"type":521,"value":986},{"type":516,"tag":538,"props":1005,"children":1006},{"style":663},[1007],{"type":521,"value":775},{"type":516,"tag":538,"props":1009,"children":1010},{"style":663},[1011],{"type":521,"value":780},{"type":516,"tag":538,"props":1013,"children":1015},{"class":540,"line":1014},15,[1016,1021,1025,1030,1035,1039,1044],{"type":516,"tag":538,"props":1017,"children":1018},{"style":669},[1019],{"type":521,"value":1020},"      return",{"type":516,"tag":538,"props":1022,"children":1023},{"style":691},[1024],{"type":521,"value":794},{"type":516,"tag":538,"props":1026,"children":1027},{"style":663},[1028],{"type":521,"value":1029},".",{"type":516,"tag":538,"props":1031,"children":1032},{"style":747},[1033],{"type":521,"value":1034},"push",{"type":516,"tag":538,"props":1036,"children":1037},{"style":663},[1038],{"type":521,"value":929},{"type":516,"tag":538,"props":1040,"children":1041},{"style":691},[1042],{"type":521,"value":1043},"str",{"type":516,"tag":538,"props":1045,"children":1046},{"style":663},[1047],{"type":521,"value":1048},");\n",{"type":516,"tag":538,"props":1050,"children":1052},{"class":540,"line":1051},16,[1053],{"type":516,"tag":538,"props":1054,"children":1055},{"style":663},[1056],{"type":521,"value":1057},"    }\n",{"type":516,"tag":538,"props":1059,"children":1061},{"class":540,"line":1060},17,[1062],{"type":516,"tag":538,"props":1063,"children":1064},{"style":649},[1065],{"type":521,"value":1066},"    // l \u003C r 时不满足条件，剪枝\n",{"type":516,"tag":538,"props":1068,"children":1070},{"class":540,"line":1069},18,[1071,1075,1079,1083,1088,1092,1096,1101],{"type":516,"tag":538,"props":1072,"children":1073},{"style":669},[1074],{"type":521,"value":968},{"type":516,"tag":538,"props":1076,"children":1077},{"style":663},[1078],{"type":521,"value":765},{"type":516,"tag":538,"props":1080,"children":1081},{"style":691},[1082],{"type":521,"value":934},{"type":516,"tag":538,"props":1084,"children":1085},{"style":663},[1086],{"type":521,"value":1087}," \u003C",{"type":516,"tag":538,"props":1089,"children":1090},{"style":691},[1091],{"type":521,"value":870},{"type":516,"tag":538,"props":1093,"children":1094},{"style":663},[1095],{"type":521,"value":775},{"type":516,"tag":538,"props":1097,"children":1098},{"style":669},[1099],{"type":521,"value":1100}," return",{"type":516,"tag":538,"props":1102,"children":1103},{"style":663},[1104],{"type":521,"value":1105},";\n",{"type":516,"tag":538,"props":1107,"children":1109},{"class":540,"line":1108},19,[1110],{"type":516,"tag":538,"props":1111,"children":1112},{"style":649},[1113],{"type":521,"value":1114},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":516,"tag":538,"props":1116,"children":1118},{"class":540,"line":1117},20,[1119,1123,1127,1131,1135,1139,1143],{"type":516,"tag":538,"props":1120,"children":1121},{"style":669},[1122],{"type":521,"value":968},{"type":516,"tag":538,"props":1124,"children":1125},{"style":663},[1126],{"type":521,"value":765},{"type":516,"tag":538,"props":1128,"children":1129},{"style":691},[1130],{"type":521,"value":934},{"type":516,"tag":538,"props":1132,"children":1133},{"style":663},[1134],{"type":521,"value":1087},{"type":516,"tag":538,"props":1136,"children":1137},{"style":691},[1138],{"type":521,"value":986},{"type":516,"tag":538,"props":1140,"children":1141},{"style":663},[1142],{"type":521,"value":775},{"type":516,"tag":538,"props":1144,"children":1145},{"style":663},[1146],{"type":521,"value":780},{"type":516,"tag":538,"props":1148,"children":1150},{"class":540,"line":1149},21,[1151,1156,1160,1164,1169,1175,1179,1183,1187,1191,1195,1201,1206,1211],{"type":516,"tag":538,"props":1152,"children":1153},{"style":747},[1154],{"type":521,"value":1155},"      dfs",{"type":516,"tag":538,"props":1157,"children":1158},{"style":663},[1159],{"type":521,"value":929},{"type":516,"tag":538,"props":1161,"children":1162},{"style":691},[1163],{"type":521,"value":934},{"type":516,"tag":538,"props":1165,"children":1166},{"style":741},[1167],{"type":521,"value":1168}," +",{"type":516,"tag":538,"props":1170,"children":1172},{"style":1171},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1173],{"type":521,"value":1174}," 1",{"type":516,"tag":538,"props":1176,"children":1177},{"style":663},[1178],{"type":521,"value":939},{"type":516,"tag":538,"props":1180,"children":1181},{"style":691},[1182],{"type":521,"value":870},{"type":516,"tag":538,"props":1184,"children":1185},{"style":663},[1186],{"type":521,"value":939},{"type":516,"tag":538,"props":1188,"children":1189},{"style":691},[1190],{"type":521,"value":896},{"type":516,"tag":538,"props":1192,"children":1193},{"style":741},[1194],{"type":521,"value":1168},{"type":516,"tag":538,"props":1196,"children":1198},{"style":1197},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1199],{"type":521,"value":1200}," \"",{"type":516,"tag":538,"props":1202,"children":1204},{"style":1203},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1205],{"type":521,"value":929},{"type":516,"tag":538,"props":1207,"children":1208},{"style":1197},[1209],{"type":521,"value":1210},"\"",{"type":516,"tag":538,"props":1212,"children":1213},{"style":663},[1214],{"type":521,"value":1048},{"type":516,"tag":538,"props":1216,"children":1218},{"class":540,"line":1217},22,[1219],{"type":516,"tag":538,"props":1220,"children":1221},{"style":663},[1222],{"type":521,"value":1057},{"type":516,"tag":538,"props":1224,"children":1226},{"class":540,"line":1225},23,[1227],{"type":516,"tag":538,"props":1228,"children":1229},{"style":649},[1230],{"type":521,"value":1231},"    // r \u003C l 时，可以插入右括号\n",{"type":516,"tag":538,"props":1233,"children":1235},{"class":540,"line":1234},24,[1236,1240,1244,1249,1253,1257,1261],{"type":516,"tag":538,"props":1237,"children":1238},{"style":669},[1239],{"type":521,"value":968},{"type":516,"tag":538,"props":1241,"children":1242},{"style":663},[1243],{"type":521,"value":765},{"type":516,"tag":538,"props":1245,"children":1246},{"style":691},[1247],{"type":521,"value":1248},"r",{"type":516,"tag":538,"props":1250,"children":1251},{"style":663},[1252],{"type":521,"value":1087},{"type":516,"tag":538,"props":1254,"children":1255},{"style":691},[1256],{"type":521,"value":844},{"type":516,"tag":538,"props":1258,"children":1259},{"style":663},[1260],{"type":521,"value":775},{"type":516,"tag":538,"props":1262,"children":1263},{"style":663},[1264],{"type":521,"value":780},{"type":516,"tag":538,"props":1266,"children":1268},{"class":540,"line":1267},25,[1269,1273,1277,1281,1285,1289,1293,1297,1301,1305,1309,1313,1317,1321],{"type":516,"tag":538,"props":1270,"children":1271},{"style":747},[1272],{"type":521,"value":1155},{"type":516,"tag":538,"props":1274,"children":1275},{"style":663},[1276],{"type":521,"value":929},{"type":516,"tag":538,"props":1278,"children":1279},{"style":691},[1280],{"type":521,"value":934},{"type":516,"tag":538,"props":1282,"children":1283},{"style":663},[1284],{"type":521,"value":939},{"type":516,"tag":538,"props":1286,"children":1287},{"style":691},[1288],{"type":521,"value":870},{"type":516,"tag":538,"props":1290,"children":1291},{"style":741},[1292],{"type":521,"value":1168},{"type":516,"tag":538,"props":1294,"children":1295},{"style":1171},[1296],{"type":521,"value":1174},{"type":516,"tag":538,"props":1298,"children":1299},{"style":663},[1300],{"type":521,"value":939},{"type":516,"tag":538,"props":1302,"children":1303},{"style":691},[1304],{"type":521,"value":896},{"type":516,"tag":538,"props":1306,"children":1307},{"style":741},[1308],{"type":521,"value":1168},{"type":516,"tag":538,"props":1310,"children":1311},{"style":1197},[1312],{"type":521,"value":1200},{"type":516,"tag":538,"props":1314,"children":1315},{"style":1203},[1316],{"type":521,"value":775},{"type":516,"tag":538,"props":1318,"children":1319},{"style":1197},[1320],{"type":521,"value":1210},{"type":516,"tag":538,"props":1322,"children":1323},{"style":663},[1324],{"type":521,"value":1048},{"type":516,"tag":538,"props":1326,"children":1328},{"class":540,"line":1327},26,[1329],{"type":516,"tag":538,"props":1330,"children":1331},{"style":663},[1332],{"type":521,"value":1057},{"type":516,"tag":538,"props":1334,"children":1336},{"class":540,"line":1335},27,[1337],{"type":516,"tag":538,"props":1338,"children":1339},{"style":663},[1340],{"type":521,"value":1341},"  }\n",{"type":516,"tag":538,"props":1343,"children":1345},{"class":540,"line":1344},28,[1346],{"type":516,"tag":538,"props":1347,"children":1348},{"emptyLinePlaceholder":810},[1349],{"type":521,"value":813},{"type":516,"tag":538,"props":1351,"children":1353},{"class":540,"line":1352},29,[1354,1359,1363,1368,1372,1377,1381,1386],{"type":516,"tag":538,"props":1355,"children":1356},{"style":747},[1357],{"type":521,"value":1358},"  dfs",{"type":516,"tag":538,"props":1360,"children":1361},{"style":663},[1362],{"type":521,"value":929},{"type":516,"tag":538,"props":1364,"children":1365},{"style":1171},[1366],{"type":521,"value":1367},"0",{"type":516,"tag":538,"props":1369,"children":1370},{"style":663},[1371],{"type":521,"value":939},{"type":516,"tag":538,"props":1373,"children":1374},{"style":1171},[1375],{"type":521,"value":1376}," 0",{"type":516,"tag":538,"props":1378,"children":1379},{"style":663},[1380],{"type":521,"value":939},{"type":516,"tag":538,"props":1382,"children":1383},{"style":1197},[1384],{"type":521,"value":1385}," \"\"",{"type":516,"tag":538,"props":1387,"children":1388},{"style":663},[1389],{"type":521,"value":1048},{"type":516,"tag":538,"props":1391,"children":1393},{"class":540,"line":1392},30,[1394],{"type":516,"tag":538,"props":1395,"children":1396},{"emptyLinePlaceholder":810},[1397],{"type":521,"value":813},{"type":516,"tag":538,"props":1399,"children":1401},{"class":540,"line":1400},31,[1402,1407,1411],{"type":516,"tag":538,"props":1403,"children":1404},{"style":669},[1405],{"type":521,"value":1406},"  return",{"type":516,"tag":538,"props":1408,"children":1409},{"style":691},[1410],{"type":521,"value":794},{"type":516,"tag":538,"props":1412,"children":1413},{"style":663},[1414],{"type":521,"value":1105},{"type":516,"tag":538,"props":1416,"children":1418},{"class":540,"line":1417},32,[1419],{"type":516,"tag":538,"props":1420,"children":1421},{"style":663},[1422],{"type":521,"value":1423},"};\n",{"type":516,"tag":1425,"props":1426,"children":1427},"style",{},[1428],{"type":521,"value":1429},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":737,"depth":737,"links":1431},[1432,1433],{"id":603,"depth":550,"text":603},{"id":626,"depth":550,"text":626,"children":1434},[1435],{"id":632,"depth":697,"text":632},"markdown","content:1.algorithm:3.leetcode:3.major:22.generate-parentheses.md","content","1.algorithm/3.leetcode/3.major/22.generate-parentheses.md","md",[1442,1444],{"_path":90,"title":89,"description":1443},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":96,"title":95,"description":1445},"给你一个链表数组，每个链表都已经按升序排列。",1714058125145]