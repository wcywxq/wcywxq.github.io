[{"data":1,"prerenderedAt":1492},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/generate-parentheses":552,"/algorithm/leetcode/major/generate-parentheses-surround":1487},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":93,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":92,"description":556,"url":557,"body":558,"_type":1482,"_id":1483,"_source":1484,"_file":1485,"_extension":1486},"major",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":559,"children":560,"toc":1476},"root",[561,568,573,603,608,631,636,646,652,657,670,675,681,1470],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"示例 1：",{"type":562,"tag":574,"props":575,"children":578},"pre",{"className":576,"code":577,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[579],{"type":562,"tag":580,"props":581,"children":582},"code",{"__ignoreMap":555},[583,594],{"type":562,"tag":584,"props":585,"children":588},"span",{"class":586,"line":587},"line",1,[589],{"type":562,"tag":584,"props":590,"children":591},{},[592],{"type":567,"value":593},"输入：n = 3\n",{"type":562,"tag":584,"props":595,"children":597},{"class":586,"line":596},2,[598],{"type":562,"tag":584,"props":599,"children":600},{},[601],{"type":567,"value":602},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":562,"tag":563,"props":604,"children":605},{},[606],{"type":567,"value":607},"示例 2：",{"type":562,"tag":574,"props":609,"children":611},{"className":576,"code":610,"language":567,"meta":555,"style":555},"输入：n = 1\n输出：[\"()\"]\n",[612],{"type":562,"tag":580,"props":613,"children":614},{"__ignoreMap":555},[615,623],{"type":562,"tag":584,"props":616,"children":617},{"class":586,"line":587},[618],{"type":562,"tag":584,"props":619,"children":620},{},[621],{"type":567,"value":622},"输入：n = 1\n",{"type":562,"tag":584,"props":624,"children":625},{"class":586,"line":596},[626],{"type":562,"tag":584,"props":627,"children":628},{},[629],{"type":567,"value":630},"输出：[\"()\"]\n",{"type":562,"tag":563,"props":632,"children":633},{},[634],{"type":567,"value":635},"提示：",{"type":562,"tag":637,"props":638,"children":639},"ul",{},[640],{"type":562,"tag":641,"props":642,"children":643},"li",{},[644],{"type":567,"value":645},"1 \u003C= n \u003C= 8",{"type":562,"tag":647,"props":648,"children":650},"h2",{"id":649},"解题思路",[651],{"type":567,"value":649},{"type":562,"tag":563,"props":653,"children":654},{},[655],{"type":567,"value":656},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":562,"tag":637,"props":658,"children":659},{},[660,665],{"type":562,"tag":641,"props":661,"children":662},{},[663],{"type":567,"value":664},"左括号数目 = 右括号数目",{"type":562,"tag":641,"props":666,"children":667},{},[668],{"type":567,"value":669},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":562,"tag":647,"props":671,"children":673},{"id":672},"实现",[674],{"type":567,"value":672},{"type":562,"tag":676,"props":677,"children":679},"h3",{"id":678},"回溯",[680],{"type":567,"value":678},{"type":562,"tag":574,"props":682,"children":686},{"className":683,"code":684,"language":685,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[687],{"type":562,"tag":580,"props":688,"children":689},{"__ignoreMap":555},[690,699,741,772,781,827,850,860,869,896,922,948,957,1006,1058,1095,1104,1113,1152,1161,1193,1261,1269,1278,1311,1371,1379,1388,1396,1436,1444,1461],{"type":562,"tag":584,"props":691,"children":692},{"class":586,"line":587},[693],{"type":562,"tag":584,"props":694,"children":696},{"style":695},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[697],{"type":567,"value":698},"/**\n",{"type":562,"tag":584,"props":700,"children":701},{"class":586,"line":596},[702,707,713,719,724,730,735],{"type":562,"tag":584,"props":703,"children":704},{"style":695},[705],{"type":567,"value":706}," * ",{"type":562,"tag":584,"props":708,"children":710},{"style":709},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[711],{"type":567,"value":712},"@",{"type":562,"tag":584,"props":714,"children":716},{"style":715},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[717],{"type":567,"value":718},"param",{"type":562,"tag":584,"props":720,"children":721},{"style":709},[722],{"type":567,"value":723}," {",{"type":562,"tag":584,"props":725,"children":727},{"style":726},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[728],{"type":567,"value":729},"number",{"type":562,"tag":584,"props":731,"children":732},{"style":709},[733],{"type":567,"value":734},"}",{"type":562,"tag":584,"props":736,"children":738},{"style":737},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[739],{"type":567,"value":740}," n\n",{"type":562,"tag":584,"props":742,"children":744},{"class":586,"line":743},3,[745,749,753,758,762,767],{"type":562,"tag":584,"props":746,"children":747},{"style":695},[748],{"type":567,"value":706},{"type":562,"tag":584,"props":750,"children":751},{"style":709},[752],{"type":567,"value":712},{"type":562,"tag":584,"props":754,"children":755},{"style":715},[756],{"type":567,"value":757},"return",{"type":562,"tag":584,"props":759,"children":760},{"style":709},[761],{"type":567,"value":723},{"type":562,"tag":584,"props":763,"children":764},{"style":726},[765],{"type":567,"value":766},"string[]",{"type":562,"tag":584,"props":768,"children":769},{"style":709},[770],{"type":567,"value":771},"}\n",{"type":562,"tag":584,"props":773,"children":775},{"class":586,"line":774},4,[776],{"type":562,"tag":584,"props":777,"children":778},{"style":695},[779],{"type":567,"value":780}," */\n",{"type":562,"tag":584,"props":782,"children":784},{"class":586,"line":783},5,[785,791,797,802,807,812,817,822],{"type":562,"tag":584,"props":786,"children":788},{"style":787},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[789],{"type":567,"value":790},"var",{"type":562,"tag":584,"props":792,"children":794},{"style":793},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[795],{"type":567,"value":796}," generateParenthesis",{"type":562,"tag":584,"props":798,"children":799},{"style":709},[800],{"type":567,"value":801}," =",{"type":562,"tag":584,"props":803,"children":804},{"style":787},[805],{"type":567,"value":806}," function",{"type":562,"tag":584,"props":808,"children":809},{"style":709},[810],{"type":567,"value":811}," (",{"type":562,"tag":584,"props":813,"children":814},{"style":737},[815],{"type":567,"value":816},"n",{"type":562,"tag":584,"props":818,"children":819},{"style":709},[820],{"type":567,"value":821},")",{"type":562,"tag":584,"props":823,"children":824},{"style":709},[825],{"type":567,"value":826}," {\n",{"type":562,"tag":584,"props":828,"children":830},{"class":586,"line":829},6,[831,836,841,845],{"type":562,"tag":584,"props":832,"children":833},{"style":787},[834],{"type":567,"value":835},"  const",{"type":562,"tag":584,"props":837,"children":838},{"style":737},[839],{"type":567,"value":840}," res",{"type":562,"tag":584,"props":842,"children":843},{"style":709},[844],{"type":567,"value":801},{"type":562,"tag":584,"props":846,"children":847},{"style":709},[848],{"type":567,"value":849}," [];\n",{"type":562,"tag":584,"props":851,"children":853},{"class":586,"line":852},7,[854],{"type":562,"tag":584,"props":855,"children":857},{"emptyLinePlaceholder":856},true,[858],{"type":567,"value":859},"\n",{"type":562,"tag":584,"props":861,"children":863},{"class":586,"line":862},8,[864],{"type":562,"tag":584,"props":865,"children":866},{"style":695},[867],{"type":567,"value":868},"  /**\n",{"type":562,"tag":584,"props":870,"children":872},{"class":586,"line":871},9,[873,878,882,886,891],{"type":562,"tag":584,"props":874,"children":875},{"style":695},[876],{"type":567,"value":877},"   * ",{"type":562,"tag":584,"props":879,"children":880},{"style":709},[881],{"type":567,"value":712},{"type":562,"tag":584,"props":883,"children":884},{"style":715},[885],{"type":567,"value":718},{"type":562,"tag":584,"props":887,"children":888},{"style":737},[889],{"type":567,"value":890}," l",{"type":562,"tag":584,"props":892,"children":893},{"style":695},[894],{"type":567,"value":895}," 左侧括号已经用了几个\n",{"type":562,"tag":584,"props":897,"children":899},{"class":586,"line":898},10,[900,904,908,912,917],{"type":562,"tag":584,"props":901,"children":902},{"style":695},[903],{"type":567,"value":877},{"type":562,"tag":584,"props":905,"children":906},{"style":709},[907],{"type":567,"value":712},{"type":562,"tag":584,"props":909,"children":910},{"style":715},[911],{"type":567,"value":718},{"type":562,"tag":584,"props":913,"children":914},{"style":737},[915],{"type":567,"value":916}," r",{"type":562,"tag":584,"props":918,"children":919},{"style":695},[920],{"type":567,"value":921}," 右侧括号已经用了几个\n",{"type":562,"tag":584,"props":923,"children":925},{"class":586,"line":924},11,[926,930,934,938,943],{"type":562,"tag":584,"props":927,"children":928},{"style":695},[929],{"type":567,"value":877},{"type":562,"tag":584,"props":931,"children":932},{"style":709},[933],{"type":567,"value":712},{"type":562,"tag":584,"props":935,"children":936},{"style":715},[937],{"type":567,"value":718},{"type":562,"tag":584,"props":939,"children":940},{"style":737},[941],{"type":567,"value":942}," str",{"type":562,"tag":584,"props":944,"children":945},{"style":695},[946],{"type":567,"value":947}," 当前递归得到的拼接字符串结果\n",{"type":562,"tag":584,"props":949,"children":951},{"class":586,"line":950},12,[952],{"type":562,"tag":584,"props":953,"children":954},{"style":695},[955],{"type":567,"value":956},"   */\n",{"type":562,"tag":584,"props":958,"children":960},{"class":586,"line":959},13,[961,966,971,976,981,986,990,994,998,1002],{"type":562,"tag":584,"props":962,"children":963},{"style":787},[964],{"type":567,"value":965},"  function",{"type":562,"tag":584,"props":967,"children":968},{"style":793},[969],{"type":567,"value":970}," dfs",{"type":562,"tag":584,"props":972,"children":973},{"style":709},[974],{"type":567,"value":975},"(",{"type":562,"tag":584,"props":977,"children":978},{"style":737},[979],{"type":567,"value":980},"l",{"type":562,"tag":584,"props":982,"children":983},{"style":709},[984],{"type":567,"value":985},",",{"type":562,"tag":584,"props":987,"children":988},{"style":737},[989],{"type":567,"value":916},{"type":562,"tag":584,"props":991,"children":992},{"style":709},[993],{"type":567,"value":985},{"type":562,"tag":584,"props":995,"children":996},{"style":737},[997],{"type":567,"value":942},{"type":562,"tag":584,"props":999,"children":1000},{"style":709},[1001],{"type":567,"value":821},{"type":562,"tag":584,"props":1003,"children":1004},{"style":709},[1005],{"type":567,"value":826},{"type":562,"tag":584,"props":1007,"children":1009},{"class":586,"line":1008},14,[1010,1015,1019,1023,1028,1033,1038,1042,1046,1050,1054],{"type":562,"tag":584,"props":1011,"children":1012},{"style":715},[1013],{"type":567,"value":1014},"    if",{"type":562,"tag":584,"props":1016,"children":1017},{"style":709},[1018],{"type":567,"value":811},{"type":562,"tag":584,"props":1020,"children":1021},{"style":737},[1022],{"type":567,"value":980},{"type":562,"tag":584,"props":1024,"children":1025},{"style":787},[1026],{"type":567,"value":1027}," ===",{"type":562,"tag":584,"props":1029,"children":1030},{"style":737},[1031],{"type":567,"value":1032}," n",{"type":562,"tag":584,"props":1034,"children":1035},{"style":787},[1036],{"type":567,"value":1037}," &&",{"type":562,"tag":584,"props":1039,"children":1040},{"style":737},[1041],{"type":567,"value":916},{"type":562,"tag":584,"props":1043,"children":1044},{"style":787},[1045],{"type":567,"value":1027},{"type":562,"tag":584,"props":1047,"children":1048},{"style":737},[1049],{"type":567,"value":1032},{"type":562,"tag":584,"props":1051,"children":1052},{"style":709},[1053],{"type":567,"value":821},{"type":562,"tag":584,"props":1055,"children":1056},{"style":709},[1057],{"type":567,"value":826},{"type":562,"tag":584,"props":1059,"children":1061},{"class":586,"line":1060},15,[1062,1067,1071,1076,1081,1085,1090],{"type":562,"tag":584,"props":1063,"children":1064},{"style":715},[1065],{"type":567,"value":1066},"      return",{"type":562,"tag":584,"props":1068,"children":1069},{"style":737},[1070],{"type":567,"value":840},{"type":562,"tag":584,"props":1072,"children":1073},{"style":709},[1074],{"type":567,"value":1075},".",{"type":562,"tag":584,"props":1077,"children":1078},{"style":793},[1079],{"type":567,"value":1080},"push",{"type":562,"tag":584,"props":1082,"children":1083},{"style":709},[1084],{"type":567,"value":975},{"type":562,"tag":584,"props":1086,"children":1087},{"style":737},[1088],{"type":567,"value":1089},"str",{"type":562,"tag":584,"props":1091,"children":1092},{"style":709},[1093],{"type":567,"value":1094},");\n",{"type":562,"tag":584,"props":1096,"children":1098},{"class":586,"line":1097},16,[1099],{"type":562,"tag":584,"props":1100,"children":1101},{"style":709},[1102],{"type":567,"value":1103},"    }\n",{"type":562,"tag":584,"props":1105,"children":1107},{"class":586,"line":1106},17,[1108],{"type":562,"tag":584,"props":1109,"children":1110},{"style":695},[1111],{"type":567,"value":1112},"    // l \u003C r 时不满足条件，剪枝\n",{"type":562,"tag":584,"props":1114,"children":1116},{"class":586,"line":1115},18,[1117,1121,1125,1129,1134,1138,1142,1147],{"type":562,"tag":584,"props":1118,"children":1119},{"style":715},[1120],{"type":567,"value":1014},{"type":562,"tag":584,"props":1122,"children":1123},{"style":709},[1124],{"type":567,"value":811},{"type":562,"tag":584,"props":1126,"children":1127},{"style":737},[1128],{"type":567,"value":980},{"type":562,"tag":584,"props":1130,"children":1131},{"style":709},[1132],{"type":567,"value":1133}," \u003C",{"type":562,"tag":584,"props":1135,"children":1136},{"style":737},[1137],{"type":567,"value":916},{"type":562,"tag":584,"props":1139,"children":1140},{"style":709},[1141],{"type":567,"value":821},{"type":562,"tag":584,"props":1143,"children":1144},{"style":715},[1145],{"type":567,"value":1146}," return",{"type":562,"tag":584,"props":1148,"children":1149},{"style":709},[1150],{"type":567,"value":1151},";\n",{"type":562,"tag":584,"props":1153,"children":1155},{"class":586,"line":1154},19,[1156],{"type":562,"tag":584,"props":1157,"children":1158},{"style":695},[1159],{"type":567,"value":1160},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":562,"tag":584,"props":1162,"children":1164},{"class":586,"line":1163},20,[1165,1169,1173,1177,1181,1185,1189],{"type":562,"tag":584,"props":1166,"children":1167},{"style":715},[1168],{"type":567,"value":1014},{"type":562,"tag":584,"props":1170,"children":1171},{"style":709},[1172],{"type":567,"value":811},{"type":562,"tag":584,"props":1174,"children":1175},{"style":737},[1176],{"type":567,"value":980},{"type":562,"tag":584,"props":1178,"children":1179},{"style":709},[1180],{"type":567,"value":1133},{"type":562,"tag":584,"props":1182,"children":1183},{"style":737},[1184],{"type":567,"value":1032},{"type":562,"tag":584,"props":1186,"children":1187},{"style":709},[1188],{"type":567,"value":821},{"type":562,"tag":584,"props":1190,"children":1191},{"style":709},[1192],{"type":567,"value":826},{"type":562,"tag":584,"props":1194,"children":1196},{"class":586,"line":1195},21,[1197,1202,1206,1210,1215,1221,1225,1229,1233,1237,1241,1247,1252,1257],{"type":562,"tag":584,"props":1198,"children":1199},{"style":793},[1200],{"type":567,"value":1201},"      dfs",{"type":562,"tag":584,"props":1203,"children":1204},{"style":709},[1205],{"type":567,"value":975},{"type":562,"tag":584,"props":1207,"children":1208},{"style":737},[1209],{"type":567,"value":980},{"type":562,"tag":584,"props":1211,"children":1212},{"style":787},[1213],{"type":567,"value":1214}," +",{"type":562,"tag":584,"props":1216,"children":1218},{"style":1217},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1219],{"type":567,"value":1220}," 1",{"type":562,"tag":584,"props":1222,"children":1223},{"style":709},[1224],{"type":567,"value":985},{"type":562,"tag":584,"props":1226,"children":1227},{"style":737},[1228],{"type":567,"value":916},{"type":562,"tag":584,"props":1230,"children":1231},{"style":709},[1232],{"type":567,"value":985},{"type":562,"tag":584,"props":1234,"children":1235},{"style":737},[1236],{"type":567,"value":942},{"type":562,"tag":584,"props":1238,"children":1239},{"style":787},[1240],{"type":567,"value":1214},{"type":562,"tag":584,"props":1242,"children":1244},{"style":1243},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1245],{"type":567,"value":1246}," \"",{"type":562,"tag":584,"props":1248,"children":1250},{"style":1249},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1251],{"type":567,"value":975},{"type":562,"tag":584,"props":1253,"children":1254},{"style":1243},[1255],{"type":567,"value":1256},"\"",{"type":562,"tag":584,"props":1258,"children":1259},{"style":709},[1260],{"type":567,"value":1094},{"type":562,"tag":584,"props":1262,"children":1264},{"class":586,"line":1263},22,[1265],{"type":562,"tag":584,"props":1266,"children":1267},{"style":709},[1268],{"type":567,"value":1103},{"type":562,"tag":584,"props":1270,"children":1272},{"class":586,"line":1271},23,[1273],{"type":562,"tag":584,"props":1274,"children":1275},{"style":695},[1276],{"type":567,"value":1277},"    // r \u003C l 时，可以插入右括号\n",{"type":562,"tag":584,"props":1279,"children":1281},{"class":586,"line":1280},24,[1282,1286,1290,1295,1299,1303,1307],{"type":562,"tag":584,"props":1283,"children":1284},{"style":715},[1285],{"type":567,"value":1014},{"type":562,"tag":584,"props":1287,"children":1288},{"style":709},[1289],{"type":567,"value":811},{"type":562,"tag":584,"props":1291,"children":1292},{"style":737},[1293],{"type":567,"value":1294},"r",{"type":562,"tag":584,"props":1296,"children":1297},{"style":709},[1298],{"type":567,"value":1133},{"type":562,"tag":584,"props":1300,"children":1301},{"style":737},[1302],{"type":567,"value":890},{"type":562,"tag":584,"props":1304,"children":1305},{"style":709},[1306],{"type":567,"value":821},{"type":562,"tag":584,"props":1308,"children":1309},{"style":709},[1310],{"type":567,"value":826},{"type":562,"tag":584,"props":1312,"children":1314},{"class":586,"line":1313},25,[1315,1319,1323,1327,1331,1335,1339,1343,1347,1351,1355,1359,1363,1367],{"type":562,"tag":584,"props":1316,"children":1317},{"style":793},[1318],{"type":567,"value":1201},{"type":562,"tag":584,"props":1320,"children":1321},{"style":709},[1322],{"type":567,"value":975},{"type":562,"tag":584,"props":1324,"children":1325},{"style":737},[1326],{"type":567,"value":980},{"type":562,"tag":584,"props":1328,"children":1329},{"style":709},[1330],{"type":567,"value":985},{"type":562,"tag":584,"props":1332,"children":1333},{"style":737},[1334],{"type":567,"value":916},{"type":562,"tag":584,"props":1336,"children":1337},{"style":787},[1338],{"type":567,"value":1214},{"type":562,"tag":584,"props":1340,"children":1341},{"style":1217},[1342],{"type":567,"value":1220},{"type":562,"tag":584,"props":1344,"children":1345},{"style":709},[1346],{"type":567,"value":985},{"type":562,"tag":584,"props":1348,"children":1349},{"style":737},[1350],{"type":567,"value":942},{"type":562,"tag":584,"props":1352,"children":1353},{"style":787},[1354],{"type":567,"value":1214},{"type":562,"tag":584,"props":1356,"children":1357},{"style":1243},[1358],{"type":567,"value":1246},{"type":562,"tag":584,"props":1360,"children":1361},{"style":1249},[1362],{"type":567,"value":821},{"type":562,"tag":584,"props":1364,"children":1365},{"style":1243},[1366],{"type":567,"value":1256},{"type":562,"tag":584,"props":1368,"children":1369},{"style":709},[1370],{"type":567,"value":1094},{"type":562,"tag":584,"props":1372,"children":1374},{"class":586,"line":1373},26,[1375],{"type":562,"tag":584,"props":1376,"children":1377},{"style":709},[1378],{"type":567,"value":1103},{"type":562,"tag":584,"props":1380,"children":1382},{"class":586,"line":1381},27,[1383],{"type":562,"tag":584,"props":1384,"children":1385},{"style":709},[1386],{"type":567,"value":1387},"  }\n",{"type":562,"tag":584,"props":1389,"children":1391},{"class":586,"line":1390},28,[1392],{"type":562,"tag":584,"props":1393,"children":1394},{"emptyLinePlaceholder":856},[1395],{"type":567,"value":859},{"type":562,"tag":584,"props":1397,"children":1399},{"class":586,"line":1398},29,[1400,1405,1409,1414,1418,1423,1427,1432],{"type":562,"tag":584,"props":1401,"children":1402},{"style":793},[1403],{"type":567,"value":1404},"  dfs",{"type":562,"tag":584,"props":1406,"children":1407},{"style":709},[1408],{"type":567,"value":975},{"type":562,"tag":584,"props":1410,"children":1411},{"style":1217},[1412],{"type":567,"value":1413},"0",{"type":562,"tag":584,"props":1415,"children":1416},{"style":709},[1417],{"type":567,"value":985},{"type":562,"tag":584,"props":1419,"children":1420},{"style":1217},[1421],{"type":567,"value":1422}," 0",{"type":562,"tag":584,"props":1424,"children":1425},{"style":709},[1426],{"type":567,"value":985},{"type":562,"tag":584,"props":1428,"children":1429},{"style":1243},[1430],{"type":567,"value":1431}," \"\"",{"type":562,"tag":584,"props":1433,"children":1434},{"style":709},[1435],{"type":567,"value":1094},{"type":562,"tag":584,"props":1437,"children":1439},{"class":586,"line":1438},30,[1440],{"type":562,"tag":584,"props":1441,"children":1442},{"emptyLinePlaceholder":856},[1443],{"type":567,"value":859},{"type":562,"tag":584,"props":1445,"children":1447},{"class":586,"line":1446},31,[1448,1453,1457],{"type":562,"tag":584,"props":1449,"children":1450},{"style":715},[1451],{"type":567,"value":1452},"  return",{"type":562,"tag":584,"props":1454,"children":1455},{"style":737},[1456],{"type":567,"value":840},{"type":562,"tag":584,"props":1458,"children":1459},{"style":709},[1460],{"type":567,"value":1151},{"type":562,"tag":584,"props":1462,"children":1464},{"class":586,"line":1463},32,[1465],{"type":562,"tag":584,"props":1466,"children":1467},{"style":709},[1468],{"type":567,"value":1469},"};\n",{"type":562,"tag":1471,"props":1472,"children":1473},"style",{},[1474],{"type":567,"value":1475},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":783,"depth":783,"links":1477},[1478,1479],{"id":649,"depth":596,"text":649},{"id":672,"depth":596,"text":672,"children":1480},[1481],{"id":678,"depth":743,"text":678},"markdown","content:1.algorithm:3.leetcode:3.major:22.generate-parentheses.md","content","1.algorithm/3.leetcode/3.major/22.generate-parentheses.md","md",[1488,1490],{"_path":90,"title":89,"description":1489},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":96,"title":95,"description":1491},"给你一个链表数组，每个链表都已经按升序排列。",1716810723872]