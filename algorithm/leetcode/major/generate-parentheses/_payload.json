[{"data":1,"prerenderedAt":1356},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/generate-parentheses":463,"/algorithm/leetcode/major/generate-parentheses-surround":1351},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":90,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":89,"description":467,"url":468,"body":469,"_type":1346,"_id":1347,"_source":1348,"_file":1349,"_extension":1350},"major",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":470,"children":471,"toc":1340},"root",[472,479,484,514,519,542,547,557,563,568,581,586,592,1334],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"示例 1：",{"type":473,"tag":485,"props":486,"children":489},"pre",{"className":487,"code":488,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[490],{"type":473,"tag":491,"props":492,"children":493},"code",{"__ignoreMap":466},[494,505],{"type":473,"tag":495,"props":496,"children":499},"span",{"class":497,"line":498},"line",1,[500],{"type":473,"tag":495,"props":501,"children":502},{},[503],{"type":478,"value":504},"输入：n = 3\n",{"type":473,"tag":495,"props":506,"children":508},{"class":497,"line":507},2,[509],{"type":473,"tag":495,"props":510,"children":511},{},[512],{"type":478,"value":513},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":473,"tag":474,"props":515,"children":516},{},[517],{"type":478,"value":518},"示例 2：",{"type":473,"tag":485,"props":520,"children":522},{"className":487,"code":521,"language":478,"meta":466,"style":466},"输入：n = 1\n输出：[\"()\"]\n",[523],{"type":473,"tag":491,"props":524,"children":525},{"__ignoreMap":466},[526,534],{"type":473,"tag":495,"props":527,"children":528},{"class":497,"line":498},[529],{"type":473,"tag":495,"props":530,"children":531},{},[532],{"type":478,"value":533},"输入：n = 1\n",{"type":473,"tag":495,"props":535,"children":536},{"class":497,"line":507},[537],{"type":473,"tag":495,"props":538,"children":539},{},[540],{"type":478,"value":541},"输出：[\"()\"]\n",{"type":473,"tag":474,"props":543,"children":544},{},[545],{"type":478,"value":546},"提示：",{"type":473,"tag":548,"props":549,"children":550},"ul",{},[551],{"type":473,"tag":552,"props":553,"children":554},"li",{},[555],{"type":478,"value":556},"1 \u003C= n \u003C= 8",{"type":473,"tag":558,"props":559,"children":561},"h2",{"id":560},"解题思路",[562],{"type":478,"value":560},{"type":473,"tag":474,"props":564,"children":565},{},[566],{"type":478,"value":567},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":473,"tag":548,"props":569,"children":570},{},[571,576],{"type":473,"tag":552,"props":572,"children":573},{},[574],{"type":478,"value":575},"左括号数目 = 右括号数目",{"type":473,"tag":552,"props":577,"children":578},{},[579],{"type":478,"value":580},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":473,"tag":558,"props":582,"children":584},{"id":583},"实现",[585],{"type":478,"value":583},{"type":473,"tag":587,"props":588,"children":590},"h3",{"id":589},"回溯",[591],{"type":478,"value":589},{"type":473,"tag":485,"props":593,"children":597},{"className":594,"code":595,"language":596,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[598],{"type":473,"tag":491,"props":599,"children":600},{"__ignoreMap":466},[601,610,636,654,663,707,737,747,756,779,801,823,832,877,926,968,977,986,1025,1034,1062,1124,1132,1141,1170,1227,1235,1244,1252,1296,1304,1321],{"type":473,"tag":495,"props":602,"children":603},{"class":497,"line":498},[604],{"type":473,"tag":495,"props":605,"children":607},{"style":606},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[608],{"type":478,"value":609},"/**\n",{"type":473,"tag":495,"props":611,"children":612},{"class":497,"line":507},[613,618,624,630],{"type":473,"tag":495,"props":614,"children":615},{"style":606},[616],{"type":478,"value":617}," * ",{"type":473,"tag":495,"props":619,"children":621},{"style":620},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[622],{"type":478,"value":623},"@param",{"type":473,"tag":495,"props":625,"children":627},{"style":626},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[628],{"type":478,"value":629}," {number}",{"type":473,"tag":495,"props":631,"children":633},{"style":632},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[634],{"type":478,"value":635}," n\n",{"type":473,"tag":495,"props":637,"children":639},{"class":497,"line":638},3,[640,644,649],{"type":473,"tag":495,"props":641,"children":642},{"style":606},[643],{"type":478,"value":617},{"type":473,"tag":495,"props":645,"children":646},{"style":620},[647],{"type":478,"value":648},"@return",{"type":473,"tag":495,"props":650,"children":651},{"style":626},[652],{"type":478,"value":653}," {string[]}\n",{"type":473,"tag":495,"props":655,"children":657},{"class":497,"line":656},4,[658],{"type":473,"tag":495,"props":659,"children":660},{"style":606},[661],{"type":478,"value":662}," */\n",{"type":473,"tag":495,"props":664,"children":666},{"class":497,"line":665},5,[667,673,679,685,690,696,702],{"type":473,"tag":495,"props":668,"children":670},{"style":669},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[671],{"type":478,"value":672},"var",{"type":473,"tag":495,"props":674,"children":676},{"style":675},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[677],{"type":478,"value":678}," generateParenthesis",{"type":473,"tag":495,"props":680,"children":682},{"style":681},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[683],{"type":478,"value":684}," =",{"type":473,"tag":495,"props":686,"children":687},{"style":669},[688],{"type":478,"value":689}," function",{"type":473,"tag":495,"props":691,"children":693},{"style":692},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[694],{"type":478,"value":695}," (",{"type":473,"tag":495,"props":697,"children":699},{"style":698},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[700],{"type":478,"value":701},"n",{"type":473,"tag":495,"props":703,"children":704},{"style":692},[705],{"type":478,"value":706},") {\n",{"type":473,"tag":495,"props":708,"children":710},{"class":497,"line":709},6,[711,716,722,726,731],{"type":473,"tag":495,"props":712,"children":713},{"style":669},[714],{"type":478,"value":715},"  const",{"type":473,"tag":495,"props":717,"children":719},{"style":718},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[720],{"type":478,"value":721}," res",{"type":473,"tag":495,"props":723,"children":724},{"style":681},[725],{"type":478,"value":684},{"type":473,"tag":495,"props":727,"children":728},{"style":692},[729],{"type":478,"value":730}," []",{"type":473,"tag":495,"props":732,"children":734},{"style":733},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[735],{"type":478,"value":736},";\n",{"type":473,"tag":495,"props":738,"children":740},{"class":497,"line":739},7,[741],{"type":473,"tag":495,"props":742,"children":744},{"emptyLinePlaceholder":743},true,[745],{"type":478,"value":746},"\n",{"type":473,"tag":495,"props":748,"children":750},{"class":497,"line":749},8,[751],{"type":473,"tag":495,"props":752,"children":753},{"style":606},[754],{"type":478,"value":755},"  /**\n",{"type":473,"tag":495,"props":757,"children":759},{"class":497,"line":758},9,[760,765,769,774],{"type":473,"tag":495,"props":761,"children":762},{"style":606},[763],{"type":478,"value":764},"   * ",{"type":473,"tag":495,"props":766,"children":767},{"style":620},[768],{"type":478,"value":623},{"type":473,"tag":495,"props":770,"children":771},{"style":632},[772],{"type":478,"value":773}," l",{"type":473,"tag":495,"props":775,"children":776},{"style":606},[777],{"type":478,"value":778}," 左侧括号已经用了几个\n",{"type":473,"tag":495,"props":780,"children":782},{"class":497,"line":781},10,[783,787,791,796],{"type":473,"tag":495,"props":784,"children":785},{"style":606},[786],{"type":478,"value":764},{"type":473,"tag":495,"props":788,"children":789},{"style":620},[790],{"type":478,"value":623},{"type":473,"tag":495,"props":792,"children":793},{"style":632},[794],{"type":478,"value":795}," r",{"type":473,"tag":495,"props":797,"children":798},{"style":606},[799],{"type":478,"value":800}," 右侧括号已经用了几个\n",{"type":473,"tag":495,"props":802,"children":804},{"class":497,"line":803},11,[805,809,813,818],{"type":473,"tag":495,"props":806,"children":807},{"style":606},[808],{"type":478,"value":764},{"type":473,"tag":495,"props":810,"children":811},{"style":620},[812],{"type":478,"value":623},{"type":473,"tag":495,"props":814,"children":815},{"style":632},[816],{"type":478,"value":817}," str",{"type":473,"tag":495,"props":819,"children":820},{"style":606},[821],{"type":478,"value":822}," 当前递归得到的拼接字符串结果\n",{"type":473,"tag":495,"props":824,"children":826},{"class":497,"line":825},12,[827],{"type":473,"tag":495,"props":828,"children":829},{"style":606},[830],{"type":478,"value":831},"   */\n",{"type":473,"tag":495,"props":833,"children":835},{"class":497,"line":834},13,[836,841,846,851,856,861,865,869,873],{"type":473,"tag":495,"props":837,"children":838},{"style":669},[839],{"type":478,"value":840},"  function",{"type":473,"tag":495,"props":842,"children":843},{"style":675},[844],{"type":478,"value":845}," dfs",{"type":473,"tag":495,"props":847,"children":848},{"style":692},[849],{"type":478,"value":850},"(",{"type":473,"tag":495,"props":852,"children":853},{"style":698},[854],{"type":478,"value":855},"l",{"type":473,"tag":495,"props":857,"children":858},{"style":733},[859],{"type":478,"value":860},",",{"type":473,"tag":495,"props":862,"children":863},{"style":698},[864],{"type":478,"value":795},{"type":473,"tag":495,"props":866,"children":867},{"style":733},[868],{"type":478,"value":860},{"type":473,"tag":495,"props":870,"children":871},{"style":698},[872],{"type":478,"value":817},{"type":473,"tag":495,"props":874,"children":875},{"style":692},[876],{"type":478,"value":706},{"type":473,"tag":495,"props":878,"children":880},{"class":497,"line":879},14,[881,887,891,895,900,905,910,914,918,922],{"type":473,"tag":495,"props":882,"children":884},{"style":883},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[885],{"type":478,"value":886},"    if",{"type":473,"tag":495,"props":888,"children":889},{"style":692},[890],{"type":478,"value":695},{"type":473,"tag":495,"props":892,"children":893},{"style":718},[894],{"type":478,"value":855},{"type":473,"tag":495,"props":896,"children":897},{"style":681},[898],{"type":478,"value":899}," ===",{"type":473,"tag":495,"props":901,"children":902},{"style":718},[903],{"type":478,"value":904}," n",{"type":473,"tag":495,"props":906,"children":907},{"style":681},[908],{"type":478,"value":909}," &&",{"type":473,"tag":495,"props":911,"children":912},{"style":718},[913],{"type":478,"value":795},{"type":473,"tag":495,"props":915,"children":916},{"style":681},[917],{"type":478,"value":899},{"type":473,"tag":495,"props":919,"children":920},{"style":718},[921],{"type":478,"value":904},{"type":473,"tag":495,"props":923,"children":924},{"style":692},[925],{"type":478,"value":706},{"type":473,"tag":495,"props":927,"children":929},{"class":497,"line":928},15,[930,935,939,945,950,954,959,964],{"type":473,"tag":495,"props":931,"children":932},{"style":883},[933],{"type":478,"value":934},"      return",{"type":473,"tag":495,"props":936,"children":937},{"style":718},[938],{"type":478,"value":721},{"type":473,"tag":495,"props":940,"children":942},{"style":941},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[943],{"type":478,"value":944},".",{"type":473,"tag":495,"props":946,"children":947},{"style":675},[948],{"type":478,"value":949},"push",{"type":473,"tag":495,"props":951,"children":952},{"style":692},[953],{"type":478,"value":850},{"type":473,"tag":495,"props":955,"children":956},{"style":718},[957],{"type":478,"value":958},"str",{"type":473,"tag":495,"props":960,"children":961},{"style":692},[962],{"type":478,"value":963},")",{"type":473,"tag":495,"props":965,"children":966},{"style":733},[967],{"type":478,"value":736},{"type":473,"tag":495,"props":969,"children":971},{"class":497,"line":970},16,[972],{"type":473,"tag":495,"props":973,"children":974},{"style":692},[975],{"type":478,"value":976},"    }\n",{"type":473,"tag":495,"props":978,"children":980},{"class":497,"line":979},17,[981],{"type":473,"tag":495,"props":982,"children":983},{"style":606},[984],{"type":478,"value":985},"    // l \u003C r 时不满足条件，剪枝\n",{"type":473,"tag":495,"props":987,"children":989},{"class":497,"line":988},18,[990,994,998,1002,1007,1011,1016,1021],{"type":473,"tag":495,"props":991,"children":992},{"style":883},[993],{"type":478,"value":886},{"type":473,"tag":495,"props":995,"children":996},{"style":692},[997],{"type":478,"value":695},{"type":473,"tag":495,"props":999,"children":1000},{"style":718},[1001],{"type":478,"value":855},{"type":473,"tag":495,"props":1003,"children":1004},{"style":681},[1005],{"type":478,"value":1006}," \u003C",{"type":473,"tag":495,"props":1008,"children":1009},{"style":718},[1010],{"type":478,"value":795},{"type":473,"tag":495,"props":1012,"children":1013},{"style":692},[1014],{"type":478,"value":1015},") ",{"type":473,"tag":495,"props":1017,"children":1018},{"style":883},[1019],{"type":478,"value":1020},"return",{"type":473,"tag":495,"props":1022,"children":1023},{"style":733},[1024],{"type":478,"value":736},{"type":473,"tag":495,"props":1026,"children":1028},{"class":497,"line":1027},19,[1029],{"type":473,"tag":495,"props":1030,"children":1031},{"style":606},[1032],{"type":478,"value":1033},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":473,"tag":495,"props":1035,"children":1037},{"class":497,"line":1036},20,[1038,1042,1046,1050,1054,1058],{"type":473,"tag":495,"props":1039,"children":1040},{"style":883},[1041],{"type":478,"value":886},{"type":473,"tag":495,"props":1043,"children":1044},{"style":692},[1045],{"type":478,"value":695},{"type":473,"tag":495,"props":1047,"children":1048},{"style":718},[1049],{"type":478,"value":855},{"type":473,"tag":495,"props":1051,"children":1052},{"style":681},[1053],{"type":478,"value":1006},{"type":473,"tag":495,"props":1055,"children":1056},{"style":718},[1057],{"type":478,"value":904},{"type":473,"tag":495,"props":1059,"children":1060},{"style":692},[1061],{"type":478,"value":706},{"type":473,"tag":495,"props":1063,"children":1065},{"class":497,"line":1064},21,[1066,1071,1075,1079,1084,1090,1094,1098,1102,1106,1110,1116,1120],{"type":473,"tag":495,"props":1067,"children":1068},{"style":675},[1069],{"type":478,"value":1070},"      dfs",{"type":473,"tag":495,"props":1072,"children":1073},{"style":692},[1074],{"type":478,"value":850},{"type":473,"tag":495,"props":1076,"children":1077},{"style":718},[1078],{"type":478,"value":855},{"type":473,"tag":495,"props":1080,"children":1081},{"style":681},[1082],{"type":478,"value":1083}," +",{"type":473,"tag":495,"props":1085,"children":1087},{"style":1086},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1088],{"type":478,"value":1089}," 1",{"type":473,"tag":495,"props":1091,"children":1092},{"style":733},[1093],{"type":478,"value":860},{"type":473,"tag":495,"props":1095,"children":1096},{"style":718},[1097],{"type":478,"value":795},{"type":473,"tag":495,"props":1099,"children":1100},{"style":733},[1101],{"type":478,"value":860},{"type":473,"tag":495,"props":1103,"children":1104},{"style":718},[1105],{"type":478,"value":817},{"type":473,"tag":495,"props":1107,"children":1108},{"style":681},[1109],{"type":478,"value":1083},{"type":473,"tag":495,"props":1111,"children":1113},{"style":1112},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[1114],{"type":478,"value":1115}," \"(\"",{"type":473,"tag":495,"props":1117,"children":1118},{"style":692},[1119],{"type":478,"value":963},{"type":473,"tag":495,"props":1121,"children":1122},{"style":733},[1123],{"type":478,"value":736},{"type":473,"tag":495,"props":1125,"children":1127},{"class":497,"line":1126},22,[1128],{"type":473,"tag":495,"props":1129,"children":1130},{"style":692},[1131],{"type":478,"value":976},{"type":473,"tag":495,"props":1133,"children":1135},{"class":497,"line":1134},23,[1136],{"type":473,"tag":495,"props":1137,"children":1138},{"style":606},[1139],{"type":478,"value":1140},"    // r \u003C l 时，可以插入右括号\n",{"type":473,"tag":495,"props":1142,"children":1144},{"class":497,"line":1143},24,[1145,1149,1153,1158,1162,1166],{"type":473,"tag":495,"props":1146,"children":1147},{"style":883},[1148],{"type":478,"value":886},{"type":473,"tag":495,"props":1150,"children":1151},{"style":692},[1152],{"type":478,"value":695},{"type":473,"tag":495,"props":1154,"children":1155},{"style":718},[1156],{"type":478,"value":1157},"r",{"type":473,"tag":495,"props":1159,"children":1160},{"style":681},[1161],{"type":478,"value":1006},{"type":473,"tag":495,"props":1163,"children":1164},{"style":718},[1165],{"type":478,"value":773},{"type":473,"tag":495,"props":1167,"children":1168},{"style":692},[1169],{"type":478,"value":706},{"type":473,"tag":495,"props":1171,"children":1173},{"class":497,"line":1172},25,[1174,1178,1182,1186,1190,1194,1198,1202,1206,1210,1214,1219,1223],{"type":473,"tag":495,"props":1175,"children":1176},{"style":675},[1177],{"type":478,"value":1070},{"type":473,"tag":495,"props":1179,"children":1180},{"style":692},[1181],{"type":478,"value":850},{"type":473,"tag":495,"props":1183,"children":1184},{"style":718},[1185],{"type":478,"value":855},{"type":473,"tag":495,"props":1187,"children":1188},{"style":733},[1189],{"type":478,"value":860},{"type":473,"tag":495,"props":1191,"children":1192},{"style":718},[1193],{"type":478,"value":795},{"type":473,"tag":495,"props":1195,"children":1196},{"style":681},[1197],{"type":478,"value":1083},{"type":473,"tag":495,"props":1199,"children":1200},{"style":1086},[1201],{"type":478,"value":1089},{"type":473,"tag":495,"props":1203,"children":1204},{"style":733},[1205],{"type":478,"value":860},{"type":473,"tag":495,"props":1207,"children":1208},{"style":718},[1209],{"type":478,"value":817},{"type":473,"tag":495,"props":1211,"children":1212},{"style":681},[1213],{"type":478,"value":1083},{"type":473,"tag":495,"props":1215,"children":1216},{"style":1112},[1217],{"type":478,"value":1218}," \")\"",{"type":473,"tag":495,"props":1220,"children":1221},{"style":692},[1222],{"type":478,"value":963},{"type":473,"tag":495,"props":1224,"children":1225},{"style":733},[1226],{"type":478,"value":736},{"type":473,"tag":495,"props":1228,"children":1230},{"class":497,"line":1229},26,[1231],{"type":473,"tag":495,"props":1232,"children":1233},{"style":692},[1234],{"type":478,"value":976},{"type":473,"tag":495,"props":1236,"children":1238},{"class":497,"line":1237},27,[1239],{"type":473,"tag":495,"props":1240,"children":1241},{"style":692},[1242],{"type":478,"value":1243},"  }\n",{"type":473,"tag":495,"props":1245,"children":1247},{"class":497,"line":1246},28,[1248],{"type":473,"tag":495,"props":1249,"children":1250},{"emptyLinePlaceholder":743},[1251],{"type":478,"value":746},{"type":473,"tag":495,"props":1253,"children":1255},{"class":497,"line":1254},29,[1256,1261,1265,1270,1274,1279,1283,1288,1292],{"type":473,"tag":495,"props":1257,"children":1258},{"style":675},[1259],{"type":478,"value":1260},"  dfs",{"type":473,"tag":495,"props":1262,"children":1263},{"style":692},[1264],{"type":478,"value":850},{"type":473,"tag":495,"props":1266,"children":1267},{"style":1086},[1268],{"type":478,"value":1269},"0",{"type":473,"tag":495,"props":1271,"children":1272},{"style":733},[1273],{"type":478,"value":860},{"type":473,"tag":495,"props":1275,"children":1276},{"style":1086},[1277],{"type":478,"value":1278}," 0",{"type":473,"tag":495,"props":1280,"children":1281},{"style":733},[1282],{"type":478,"value":860},{"type":473,"tag":495,"props":1284,"children":1285},{"style":1112},[1286],{"type":478,"value":1287}," \"\"",{"type":473,"tag":495,"props":1289,"children":1290},{"style":692},[1291],{"type":478,"value":963},{"type":473,"tag":495,"props":1293,"children":1294},{"style":733},[1295],{"type":478,"value":736},{"type":473,"tag":495,"props":1297,"children":1299},{"class":497,"line":1298},30,[1300],{"type":473,"tag":495,"props":1301,"children":1302},{"emptyLinePlaceholder":743},[1303],{"type":478,"value":746},{"type":473,"tag":495,"props":1305,"children":1307},{"class":497,"line":1306},31,[1308,1313,1317],{"type":473,"tag":495,"props":1309,"children":1310},{"style":883},[1311],{"type":478,"value":1312},"  return",{"type":473,"tag":495,"props":1314,"children":1315},{"style":718},[1316],{"type":478,"value":721},{"type":473,"tag":495,"props":1318,"children":1319},{"style":733},[1320],{"type":478,"value":736},{"type":473,"tag":495,"props":1322,"children":1324},{"class":497,"line":1323},32,[1325,1330],{"type":473,"tag":495,"props":1326,"children":1327},{"style":692},[1328],{"type":478,"value":1329},"}",{"type":473,"tag":495,"props":1331,"children":1332},{"style":733},[1333],{"type":478,"value":736},{"type":473,"tag":1335,"props":1336,"children":1337},"style",{},[1338],{"type":478,"value":1339},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":665,"depth":665,"links":1341},[1342,1343],{"id":560,"depth":507,"text":560},{"id":583,"depth":507,"text":583,"children":1344},[1345],{"id":589,"depth":638,"text":589},"markdown","content:1.algorithm:3.leetcode:3.major:22.generate-parentheses.md","content","1.algorithm/3.leetcode/3.major/22.generate-parentheses.md","md",[1352,1354],{"_path":87,"title":86,"description":1353},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":93,"title":92,"description":1355},"给你一个链表数组，每个链表都已经按升序排列。",1713695845833]