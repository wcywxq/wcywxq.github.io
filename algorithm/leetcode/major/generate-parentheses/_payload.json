[{"data":1,"prerenderedAt":1489},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/generate-parentheses":549,"/algorithm/leetcode/major/generate-parentheses-surround":1484},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":93,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":92,"description":553,"url":554,"body":555,"_type":1479,"_id":1480,"_source":1481,"_file":1482,"_extension":1483},"major",false,"","数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。","https://leetcode.cn/problems/generate-parentheses",{"type":556,"children":557,"toc":1473},"root",[558,565,570,600,605,628,633,643,649,654,667,672,678,1467],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"示例 1：",{"type":559,"tag":571,"props":572,"children":575},"pre",{"className":573,"code":574,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：n = 3\n输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",[576],{"type":559,"tag":577,"props":578,"children":579},"code",{"__ignoreMap":552},[580,591],{"type":559,"tag":581,"props":582,"children":585},"span",{"class":583,"line":584},"line",1,[586],{"type":559,"tag":581,"props":587,"children":588},{},[589],{"type":564,"value":590},"输入：n = 3\n",{"type":559,"tag":581,"props":592,"children":594},{"class":583,"line":593},2,[595],{"type":559,"tag":581,"props":596,"children":597},{},[598],{"type":564,"value":599},"输出：[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n",{"type":559,"tag":560,"props":601,"children":602},{},[603],{"type":564,"value":604},"示例 2：",{"type":559,"tag":571,"props":606,"children":608},{"className":573,"code":607,"language":564,"meta":552,"style":552},"输入：n = 1\n输出：[\"()\"]\n",[609],{"type":559,"tag":577,"props":610,"children":611},{"__ignoreMap":552},[612,620],{"type":559,"tag":581,"props":613,"children":614},{"class":583,"line":584},[615],{"type":559,"tag":581,"props":616,"children":617},{},[618],{"type":564,"value":619},"输入：n = 1\n",{"type":559,"tag":581,"props":621,"children":622},{"class":583,"line":593},[623],{"type":559,"tag":581,"props":624,"children":625},{},[626],{"type":564,"value":627},"输出：[\"()\"]\n",{"type":559,"tag":560,"props":629,"children":630},{},[631],{"type":564,"value":632},"提示：",{"type":559,"tag":634,"props":635,"children":636},"ul",{},[637],{"type":559,"tag":638,"props":639,"children":640},"li",{},[641],{"type":564,"value":642},"1 \u003C= n \u003C= 8",{"type":559,"tag":644,"props":645,"children":647},"h2",{"id":646},"解题思路",[648],{"type":564,"value":646},{"type":559,"tag":560,"props":650,"children":651},{},[652],{"type":564,"value":653},"由于需要求解所有的可能，因此回溯就不难想到，回溯的思路和写法相对比较固定，并且回溯的优化手段大多是剪枝。\n不难想到，如果左括号的数据小于右括号，我们可以提前退出，这就是这道题的剪枝。例如：())...，后面就不用看了，直接退出即可。回溯的退出条件也不难想到：",{"type":559,"tag":634,"props":655,"children":656},{},[657,662],{"type":559,"tag":638,"props":658,"children":659},{},[660],{"type":564,"value":661},"左括号数目 = 右括号数目",{"type":559,"tag":638,"props":663,"children":664},{},[665],{"type":564,"value":666},"左括号数据 + 右括号数据 = 2 * n\n因此这道题可以使用深度优先搜索（回溯思想），从空字符串开始构造，做加法，即 dfs(左括号数目，右括号数据，路径)，我们从 dfs(0, 0, \"\") 开始",{"type":559,"tag":644,"props":668,"children":670},{"id":669},"实现",[671],{"type":564,"value":669},{"type":559,"tag":673,"props":674,"children":676},"h3",{"id":675},"回溯",[677],{"type":564,"value":675},{"type":559,"tag":571,"props":679,"children":683},{"className":680,"code":681,"language":682,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function (n) {\n  const res = [];\n\n  /**\n   * @param l 左侧括号已经用了几个\n   * @param r 右侧括号已经用了几个\n   * @param str 当前递归得到的拼接字符串结果\n   */\n  function dfs(l, r, str) {\n    if (l === n && r === n) {\n      return res.push(str);\n    }\n    // l \u003C r 时不满足条件，剪枝\n    if (l \u003C r) return;\n    // l \u003C n 时可插入左括号，最多可以插入 n 个\n    if (l \u003C n) {\n      dfs(l + 1, r, str + \"(\");\n    }\n    // r \u003C l 时，可以插入右括号\n    if (r \u003C l) {\n      dfs(l, r + 1, str + \")\");\n    }\n  }\n\n  dfs(0, 0, \"\");\n\n  return res;\n};\n","js",[684],{"type":559,"tag":577,"props":685,"children":686},{"__ignoreMap":552},[687,696,738,769,778,824,847,857,866,893,919,945,954,1003,1055,1092,1101,1110,1149,1158,1190,1258,1266,1275,1308,1368,1376,1385,1393,1433,1441,1458],{"type":559,"tag":581,"props":688,"children":689},{"class":583,"line":584},[690],{"type":559,"tag":581,"props":691,"children":693},{"style":692},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[694],{"type":564,"value":695},"/**\n",{"type":559,"tag":581,"props":697,"children":698},{"class":583,"line":593},[699,704,710,716,721,727,732],{"type":559,"tag":581,"props":700,"children":701},{"style":692},[702],{"type":564,"value":703}," * ",{"type":559,"tag":581,"props":705,"children":707},{"style":706},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[708],{"type":564,"value":709},"@",{"type":559,"tag":581,"props":711,"children":713},{"style":712},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[714],{"type":564,"value":715},"param",{"type":559,"tag":581,"props":717,"children":718},{"style":706},[719],{"type":564,"value":720}," {",{"type":559,"tag":581,"props":722,"children":724},{"style":723},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[725],{"type":564,"value":726},"number",{"type":559,"tag":581,"props":728,"children":729},{"style":706},[730],{"type":564,"value":731},"}",{"type":559,"tag":581,"props":733,"children":735},{"style":734},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[736],{"type":564,"value":737}," n\n",{"type":559,"tag":581,"props":739,"children":741},{"class":583,"line":740},3,[742,746,750,755,759,764],{"type":559,"tag":581,"props":743,"children":744},{"style":692},[745],{"type":564,"value":703},{"type":559,"tag":581,"props":747,"children":748},{"style":706},[749],{"type":564,"value":709},{"type":559,"tag":581,"props":751,"children":752},{"style":712},[753],{"type":564,"value":754},"return",{"type":559,"tag":581,"props":756,"children":757},{"style":706},[758],{"type":564,"value":720},{"type":559,"tag":581,"props":760,"children":761},{"style":723},[762],{"type":564,"value":763},"string[]",{"type":559,"tag":581,"props":765,"children":766},{"style":706},[767],{"type":564,"value":768},"}\n",{"type":559,"tag":581,"props":770,"children":772},{"class":583,"line":771},4,[773],{"type":559,"tag":581,"props":774,"children":775},{"style":692},[776],{"type":564,"value":777}," */\n",{"type":559,"tag":581,"props":779,"children":781},{"class":583,"line":780},5,[782,788,794,799,804,809,814,819],{"type":559,"tag":581,"props":783,"children":785},{"style":784},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[786],{"type":564,"value":787},"var",{"type":559,"tag":581,"props":789,"children":791},{"style":790},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[792],{"type":564,"value":793}," generateParenthesis",{"type":559,"tag":581,"props":795,"children":796},{"style":706},[797],{"type":564,"value":798}," =",{"type":559,"tag":581,"props":800,"children":801},{"style":784},[802],{"type":564,"value":803}," function",{"type":559,"tag":581,"props":805,"children":806},{"style":706},[807],{"type":564,"value":808}," (",{"type":559,"tag":581,"props":810,"children":811},{"style":734},[812],{"type":564,"value":813},"n",{"type":559,"tag":581,"props":815,"children":816},{"style":706},[817],{"type":564,"value":818},")",{"type":559,"tag":581,"props":820,"children":821},{"style":706},[822],{"type":564,"value":823}," {\n",{"type":559,"tag":581,"props":825,"children":827},{"class":583,"line":826},6,[828,833,838,842],{"type":559,"tag":581,"props":829,"children":830},{"style":784},[831],{"type":564,"value":832},"  const",{"type":559,"tag":581,"props":834,"children":835},{"style":734},[836],{"type":564,"value":837}," res",{"type":559,"tag":581,"props":839,"children":840},{"style":706},[841],{"type":564,"value":798},{"type":559,"tag":581,"props":843,"children":844},{"style":706},[845],{"type":564,"value":846}," [];\n",{"type":559,"tag":581,"props":848,"children":850},{"class":583,"line":849},7,[851],{"type":559,"tag":581,"props":852,"children":854},{"emptyLinePlaceholder":853},true,[855],{"type":564,"value":856},"\n",{"type":559,"tag":581,"props":858,"children":860},{"class":583,"line":859},8,[861],{"type":559,"tag":581,"props":862,"children":863},{"style":692},[864],{"type":564,"value":865},"  /**\n",{"type":559,"tag":581,"props":867,"children":869},{"class":583,"line":868},9,[870,875,879,883,888],{"type":559,"tag":581,"props":871,"children":872},{"style":692},[873],{"type":564,"value":874},"   * ",{"type":559,"tag":581,"props":876,"children":877},{"style":706},[878],{"type":564,"value":709},{"type":559,"tag":581,"props":880,"children":881},{"style":712},[882],{"type":564,"value":715},{"type":559,"tag":581,"props":884,"children":885},{"style":734},[886],{"type":564,"value":887}," l",{"type":559,"tag":581,"props":889,"children":890},{"style":692},[891],{"type":564,"value":892}," 左侧括号已经用了几个\n",{"type":559,"tag":581,"props":894,"children":896},{"class":583,"line":895},10,[897,901,905,909,914],{"type":559,"tag":581,"props":898,"children":899},{"style":692},[900],{"type":564,"value":874},{"type":559,"tag":581,"props":902,"children":903},{"style":706},[904],{"type":564,"value":709},{"type":559,"tag":581,"props":906,"children":907},{"style":712},[908],{"type":564,"value":715},{"type":559,"tag":581,"props":910,"children":911},{"style":734},[912],{"type":564,"value":913}," r",{"type":559,"tag":581,"props":915,"children":916},{"style":692},[917],{"type":564,"value":918}," 右侧括号已经用了几个\n",{"type":559,"tag":581,"props":920,"children":922},{"class":583,"line":921},11,[923,927,931,935,940],{"type":559,"tag":581,"props":924,"children":925},{"style":692},[926],{"type":564,"value":874},{"type":559,"tag":581,"props":928,"children":929},{"style":706},[930],{"type":564,"value":709},{"type":559,"tag":581,"props":932,"children":933},{"style":712},[934],{"type":564,"value":715},{"type":559,"tag":581,"props":936,"children":937},{"style":734},[938],{"type":564,"value":939}," str",{"type":559,"tag":581,"props":941,"children":942},{"style":692},[943],{"type":564,"value":944}," 当前递归得到的拼接字符串结果\n",{"type":559,"tag":581,"props":946,"children":948},{"class":583,"line":947},12,[949],{"type":559,"tag":581,"props":950,"children":951},{"style":692},[952],{"type":564,"value":953},"   */\n",{"type":559,"tag":581,"props":955,"children":957},{"class":583,"line":956},13,[958,963,968,973,978,983,987,991,995,999],{"type":559,"tag":581,"props":959,"children":960},{"style":784},[961],{"type":564,"value":962},"  function",{"type":559,"tag":581,"props":964,"children":965},{"style":790},[966],{"type":564,"value":967}," dfs",{"type":559,"tag":581,"props":969,"children":970},{"style":706},[971],{"type":564,"value":972},"(",{"type":559,"tag":581,"props":974,"children":975},{"style":734},[976],{"type":564,"value":977},"l",{"type":559,"tag":581,"props":979,"children":980},{"style":706},[981],{"type":564,"value":982},",",{"type":559,"tag":581,"props":984,"children":985},{"style":734},[986],{"type":564,"value":913},{"type":559,"tag":581,"props":988,"children":989},{"style":706},[990],{"type":564,"value":982},{"type":559,"tag":581,"props":992,"children":993},{"style":734},[994],{"type":564,"value":939},{"type":559,"tag":581,"props":996,"children":997},{"style":706},[998],{"type":564,"value":818},{"type":559,"tag":581,"props":1000,"children":1001},{"style":706},[1002],{"type":564,"value":823},{"type":559,"tag":581,"props":1004,"children":1006},{"class":583,"line":1005},14,[1007,1012,1016,1020,1025,1030,1035,1039,1043,1047,1051],{"type":559,"tag":581,"props":1008,"children":1009},{"style":712},[1010],{"type":564,"value":1011},"    if",{"type":559,"tag":581,"props":1013,"children":1014},{"style":706},[1015],{"type":564,"value":808},{"type":559,"tag":581,"props":1017,"children":1018},{"style":734},[1019],{"type":564,"value":977},{"type":559,"tag":581,"props":1021,"children":1022},{"style":784},[1023],{"type":564,"value":1024}," ===",{"type":559,"tag":581,"props":1026,"children":1027},{"style":734},[1028],{"type":564,"value":1029}," n",{"type":559,"tag":581,"props":1031,"children":1032},{"style":784},[1033],{"type":564,"value":1034}," &&",{"type":559,"tag":581,"props":1036,"children":1037},{"style":734},[1038],{"type":564,"value":913},{"type":559,"tag":581,"props":1040,"children":1041},{"style":784},[1042],{"type":564,"value":1024},{"type":559,"tag":581,"props":1044,"children":1045},{"style":734},[1046],{"type":564,"value":1029},{"type":559,"tag":581,"props":1048,"children":1049},{"style":706},[1050],{"type":564,"value":818},{"type":559,"tag":581,"props":1052,"children":1053},{"style":706},[1054],{"type":564,"value":823},{"type":559,"tag":581,"props":1056,"children":1058},{"class":583,"line":1057},15,[1059,1064,1068,1073,1078,1082,1087],{"type":559,"tag":581,"props":1060,"children":1061},{"style":712},[1062],{"type":564,"value":1063},"      return",{"type":559,"tag":581,"props":1065,"children":1066},{"style":734},[1067],{"type":564,"value":837},{"type":559,"tag":581,"props":1069,"children":1070},{"style":706},[1071],{"type":564,"value":1072},".",{"type":559,"tag":581,"props":1074,"children":1075},{"style":790},[1076],{"type":564,"value":1077},"push",{"type":559,"tag":581,"props":1079,"children":1080},{"style":706},[1081],{"type":564,"value":972},{"type":559,"tag":581,"props":1083,"children":1084},{"style":734},[1085],{"type":564,"value":1086},"str",{"type":559,"tag":581,"props":1088,"children":1089},{"style":706},[1090],{"type":564,"value":1091},");\n",{"type":559,"tag":581,"props":1093,"children":1095},{"class":583,"line":1094},16,[1096],{"type":559,"tag":581,"props":1097,"children":1098},{"style":706},[1099],{"type":564,"value":1100},"    }\n",{"type":559,"tag":581,"props":1102,"children":1104},{"class":583,"line":1103},17,[1105],{"type":559,"tag":581,"props":1106,"children":1107},{"style":692},[1108],{"type":564,"value":1109},"    // l \u003C r 时不满足条件，剪枝\n",{"type":559,"tag":581,"props":1111,"children":1113},{"class":583,"line":1112},18,[1114,1118,1122,1126,1131,1135,1139,1144],{"type":559,"tag":581,"props":1115,"children":1116},{"style":712},[1117],{"type":564,"value":1011},{"type":559,"tag":581,"props":1119,"children":1120},{"style":706},[1121],{"type":564,"value":808},{"type":559,"tag":581,"props":1123,"children":1124},{"style":734},[1125],{"type":564,"value":977},{"type":559,"tag":581,"props":1127,"children":1128},{"style":706},[1129],{"type":564,"value":1130}," \u003C",{"type":559,"tag":581,"props":1132,"children":1133},{"style":734},[1134],{"type":564,"value":913},{"type":559,"tag":581,"props":1136,"children":1137},{"style":706},[1138],{"type":564,"value":818},{"type":559,"tag":581,"props":1140,"children":1141},{"style":712},[1142],{"type":564,"value":1143}," return",{"type":559,"tag":581,"props":1145,"children":1146},{"style":706},[1147],{"type":564,"value":1148},";\n",{"type":559,"tag":581,"props":1150,"children":1152},{"class":583,"line":1151},19,[1153],{"type":559,"tag":581,"props":1154,"children":1155},{"style":692},[1156],{"type":564,"value":1157},"    // l \u003C n 时可插入左括号，最多可以插入 n 个\n",{"type":559,"tag":581,"props":1159,"children":1161},{"class":583,"line":1160},20,[1162,1166,1170,1174,1178,1182,1186],{"type":559,"tag":581,"props":1163,"children":1164},{"style":712},[1165],{"type":564,"value":1011},{"type":559,"tag":581,"props":1167,"children":1168},{"style":706},[1169],{"type":564,"value":808},{"type":559,"tag":581,"props":1171,"children":1172},{"style":734},[1173],{"type":564,"value":977},{"type":559,"tag":581,"props":1175,"children":1176},{"style":706},[1177],{"type":564,"value":1130},{"type":559,"tag":581,"props":1179,"children":1180},{"style":734},[1181],{"type":564,"value":1029},{"type":559,"tag":581,"props":1183,"children":1184},{"style":706},[1185],{"type":564,"value":818},{"type":559,"tag":581,"props":1187,"children":1188},{"style":706},[1189],{"type":564,"value":823},{"type":559,"tag":581,"props":1191,"children":1193},{"class":583,"line":1192},21,[1194,1199,1203,1207,1212,1218,1222,1226,1230,1234,1238,1244,1249,1254],{"type":559,"tag":581,"props":1195,"children":1196},{"style":790},[1197],{"type":564,"value":1198},"      dfs",{"type":559,"tag":581,"props":1200,"children":1201},{"style":706},[1202],{"type":564,"value":972},{"type":559,"tag":581,"props":1204,"children":1205},{"style":734},[1206],{"type":564,"value":977},{"type":559,"tag":581,"props":1208,"children":1209},{"style":784},[1210],{"type":564,"value":1211}," +",{"type":559,"tag":581,"props":1213,"children":1215},{"style":1214},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1216],{"type":564,"value":1217}," 1",{"type":559,"tag":581,"props":1219,"children":1220},{"style":706},[1221],{"type":564,"value":982},{"type":559,"tag":581,"props":1223,"children":1224},{"style":734},[1225],{"type":564,"value":913},{"type":559,"tag":581,"props":1227,"children":1228},{"style":706},[1229],{"type":564,"value":982},{"type":559,"tag":581,"props":1231,"children":1232},{"style":734},[1233],{"type":564,"value":939},{"type":559,"tag":581,"props":1235,"children":1236},{"style":784},[1237],{"type":564,"value":1211},{"type":559,"tag":581,"props":1239,"children":1241},{"style":1240},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1242],{"type":564,"value":1243}," \"",{"type":559,"tag":581,"props":1245,"children":1247},{"style":1246},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1248],{"type":564,"value":972},{"type":559,"tag":581,"props":1250,"children":1251},{"style":1240},[1252],{"type":564,"value":1253},"\"",{"type":559,"tag":581,"props":1255,"children":1256},{"style":706},[1257],{"type":564,"value":1091},{"type":559,"tag":581,"props":1259,"children":1261},{"class":583,"line":1260},22,[1262],{"type":559,"tag":581,"props":1263,"children":1264},{"style":706},[1265],{"type":564,"value":1100},{"type":559,"tag":581,"props":1267,"children":1269},{"class":583,"line":1268},23,[1270],{"type":559,"tag":581,"props":1271,"children":1272},{"style":692},[1273],{"type":564,"value":1274},"    // r \u003C l 时，可以插入右括号\n",{"type":559,"tag":581,"props":1276,"children":1278},{"class":583,"line":1277},24,[1279,1283,1287,1292,1296,1300,1304],{"type":559,"tag":581,"props":1280,"children":1281},{"style":712},[1282],{"type":564,"value":1011},{"type":559,"tag":581,"props":1284,"children":1285},{"style":706},[1286],{"type":564,"value":808},{"type":559,"tag":581,"props":1288,"children":1289},{"style":734},[1290],{"type":564,"value":1291},"r",{"type":559,"tag":581,"props":1293,"children":1294},{"style":706},[1295],{"type":564,"value":1130},{"type":559,"tag":581,"props":1297,"children":1298},{"style":734},[1299],{"type":564,"value":887},{"type":559,"tag":581,"props":1301,"children":1302},{"style":706},[1303],{"type":564,"value":818},{"type":559,"tag":581,"props":1305,"children":1306},{"style":706},[1307],{"type":564,"value":823},{"type":559,"tag":581,"props":1309,"children":1311},{"class":583,"line":1310},25,[1312,1316,1320,1324,1328,1332,1336,1340,1344,1348,1352,1356,1360,1364],{"type":559,"tag":581,"props":1313,"children":1314},{"style":790},[1315],{"type":564,"value":1198},{"type":559,"tag":581,"props":1317,"children":1318},{"style":706},[1319],{"type":564,"value":972},{"type":559,"tag":581,"props":1321,"children":1322},{"style":734},[1323],{"type":564,"value":977},{"type":559,"tag":581,"props":1325,"children":1326},{"style":706},[1327],{"type":564,"value":982},{"type":559,"tag":581,"props":1329,"children":1330},{"style":734},[1331],{"type":564,"value":913},{"type":559,"tag":581,"props":1333,"children":1334},{"style":784},[1335],{"type":564,"value":1211},{"type":559,"tag":581,"props":1337,"children":1338},{"style":1214},[1339],{"type":564,"value":1217},{"type":559,"tag":581,"props":1341,"children":1342},{"style":706},[1343],{"type":564,"value":982},{"type":559,"tag":581,"props":1345,"children":1346},{"style":734},[1347],{"type":564,"value":939},{"type":559,"tag":581,"props":1349,"children":1350},{"style":784},[1351],{"type":564,"value":1211},{"type":559,"tag":581,"props":1353,"children":1354},{"style":1240},[1355],{"type":564,"value":1243},{"type":559,"tag":581,"props":1357,"children":1358},{"style":1246},[1359],{"type":564,"value":818},{"type":559,"tag":581,"props":1361,"children":1362},{"style":1240},[1363],{"type":564,"value":1253},{"type":559,"tag":581,"props":1365,"children":1366},{"style":706},[1367],{"type":564,"value":1091},{"type":559,"tag":581,"props":1369,"children":1371},{"class":583,"line":1370},26,[1372],{"type":559,"tag":581,"props":1373,"children":1374},{"style":706},[1375],{"type":564,"value":1100},{"type":559,"tag":581,"props":1377,"children":1379},{"class":583,"line":1378},27,[1380],{"type":559,"tag":581,"props":1381,"children":1382},{"style":706},[1383],{"type":564,"value":1384},"  }\n",{"type":559,"tag":581,"props":1386,"children":1388},{"class":583,"line":1387},28,[1389],{"type":559,"tag":581,"props":1390,"children":1391},{"emptyLinePlaceholder":853},[1392],{"type":564,"value":856},{"type":559,"tag":581,"props":1394,"children":1396},{"class":583,"line":1395},29,[1397,1402,1406,1411,1415,1420,1424,1429],{"type":559,"tag":581,"props":1398,"children":1399},{"style":790},[1400],{"type":564,"value":1401},"  dfs",{"type":559,"tag":581,"props":1403,"children":1404},{"style":706},[1405],{"type":564,"value":972},{"type":559,"tag":581,"props":1407,"children":1408},{"style":1214},[1409],{"type":564,"value":1410},"0",{"type":559,"tag":581,"props":1412,"children":1413},{"style":706},[1414],{"type":564,"value":982},{"type":559,"tag":581,"props":1416,"children":1417},{"style":1214},[1418],{"type":564,"value":1419}," 0",{"type":559,"tag":581,"props":1421,"children":1422},{"style":706},[1423],{"type":564,"value":982},{"type":559,"tag":581,"props":1425,"children":1426},{"style":1240},[1427],{"type":564,"value":1428}," \"\"",{"type":559,"tag":581,"props":1430,"children":1431},{"style":706},[1432],{"type":564,"value":1091},{"type":559,"tag":581,"props":1434,"children":1436},{"class":583,"line":1435},30,[1437],{"type":559,"tag":581,"props":1438,"children":1439},{"emptyLinePlaceholder":853},[1440],{"type":564,"value":856},{"type":559,"tag":581,"props":1442,"children":1444},{"class":583,"line":1443},31,[1445,1450,1454],{"type":559,"tag":581,"props":1446,"children":1447},{"style":712},[1448],{"type":564,"value":1449},"  return",{"type":559,"tag":581,"props":1451,"children":1452},{"style":734},[1453],{"type":564,"value":837},{"type":559,"tag":581,"props":1455,"children":1456},{"style":706},[1457],{"type":564,"value":1148},{"type":559,"tag":581,"props":1459,"children":1461},{"class":583,"line":1460},32,[1462],{"type":559,"tag":581,"props":1463,"children":1464},{"style":706},[1465],{"type":564,"value":1466},"};\n",{"type":559,"tag":1468,"props":1469,"children":1470},"style",{},[1471],{"type":564,"value":1472},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":780,"depth":780,"links":1474},[1475,1476],{"id":646,"depth":593,"text":646},{"id":669,"depth":593,"text":669,"children":1477},[1478],{"id":675,"depth":740,"text":675},"markdown","content:1.algorithm:3.leetcode:3.major:22.generate-parentheses.md","content","1.algorithm/3.leetcode/3.major/22.generate-parentheses.md","md",[1485,1487],{"_path":90,"title":89,"description":1486},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",{"_path":96,"title":95,"description":1488},"给你一个链表数组，每个链表都已经按升序排列。",1715007650753]