[{"data":1,"prerenderedAt":2056},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-tree-inorder-traversal":559,"/algorithm/leetcode/major/binary-tree-inorder-traversal-surround":2051},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":147,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":146,"description":563,"url":564,"body":565,"_type":2046,"_id":2047,"_source":2048,"_file":2049,"_extension":2050},"major",false,"","给定一个二叉树的根节点 root ，返回 它的 中序 遍历 。","https://leetcode.cn/problems/binary-tree-inorder-traversal",{"type":566,"children":567,"toc":2039},"root",[568,575,580,589,619,624,647,652,675,680,695,700,706,711,718,1386,1392,2033],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"示例 1：",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":569,"tag":584,"props":585,"children":588},"img",{"alt":586,"src":587},"inorder_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.94_inorder_1.png",[],{"type":569,"tag":590,"props":591,"children":594},"pre",{"className":592,"code":593,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [1,null,2,3]\n输出：[1,3,2]\n",[595],{"type":569,"tag":596,"props":597,"children":598},"code",{"__ignoreMap":562},[599,610],{"type":569,"tag":600,"props":601,"children":604},"span",{"class":602,"line":603},"line",1,[605],{"type":569,"tag":600,"props":606,"children":607},{},[608],{"type":574,"value":609},"输入：root = [1,null,2,3]\n",{"type":569,"tag":600,"props":611,"children":613},{"class":602,"line":612},2,[614],{"type":569,"tag":600,"props":615,"children":616},{},[617],{"type":574,"value":618},"输出：[1,3,2]\n",{"type":569,"tag":570,"props":620,"children":621},{},[622],{"type":574,"value":623},"示例 2：",{"type":569,"tag":590,"props":625,"children":627},{"className":592,"code":626,"language":574,"meta":562,"style":562},"输入：root = []\n输出：[]\n",[628],{"type":569,"tag":596,"props":629,"children":630},{"__ignoreMap":562},[631,639],{"type":569,"tag":600,"props":632,"children":633},{"class":602,"line":603},[634],{"type":569,"tag":600,"props":635,"children":636},{},[637],{"type":574,"value":638},"输入：root = []\n",{"type":569,"tag":600,"props":640,"children":641},{"class":602,"line":612},[642],{"type":569,"tag":600,"props":643,"children":644},{},[645],{"type":574,"value":646},"输出：[]\n",{"type":569,"tag":570,"props":648,"children":649},{},[650],{"type":574,"value":651},"示例 3：",{"type":569,"tag":590,"props":653,"children":655},{"className":592,"code":654,"language":574,"meta":562,"style":562},"输入：root = [1]\n输出：[1]\n",[656],{"type":569,"tag":596,"props":657,"children":658},{"__ignoreMap":562},[659,667],{"type":569,"tag":600,"props":660,"children":661},{"class":602,"line":603},[662],{"type":569,"tag":600,"props":663,"children":664},{},[665],{"type":574,"value":666},"输入：root = [1]\n",{"type":569,"tag":600,"props":668,"children":669},{"class":602,"line":612},[670],{"type":569,"tag":600,"props":671,"children":672},{},[673],{"type":574,"value":674},"输出：[1]\n",{"type":569,"tag":570,"props":676,"children":677},{},[678],{"type":574,"value":679},"提示：",{"type":569,"tag":681,"props":682,"children":683},"ul",{},[684,690],{"type":569,"tag":685,"props":686,"children":687},"li",{},[688],{"type":574,"value":689},"树中节点数目在范围 [0, 100] 内",{"type":569,"tag":685,"props":691,"children":692},{},[693],{"type":574,"value":694},"-100 \u003C= Node.val \u003C= 100",{"type":569,"tag":570,"props":696,"children":697},{},[698],{"type":574,"value":699},"进阶: 递归算法很简单，你可以通过迭代算法完成吗？",{"type":569,"tag":701,"props":702,"children":704},"h2",{"id":703},"解题思路",[705],{"type":574,"value":703},{"type":569,"tag":701,"props":707,"children":709},{"id":708},"实现",[710],{"type":574,"value":708},{"type":569,"tag":712,"props":713,"children":715},"h3",{"id":714},"深度优先搜索-dfs",[716],{"type":574,"value":717},"深度优先搜索 - dfs",{"type":569,"tag":590,"props":719,"children":723},{"className":720,"code":721,"language":722,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * dfs\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar inorderTraversal = function (root) {\n  let res = [];\n  const dfs = (node) => {\n    if (!node) return;\n    dfs(node.left);\n    res.push(node.val);\n    dfs(node.right);\n  };\n  dfs(root);\n  return res;\n};\n","js",[724],{"type":569,"tag":596,"props":725,"children":726},{"__ignoreMap":562},[727,736,744,753,810,874,928,981,990,1000,1008,1017,1058,1088,1096,1136,1159,1199,1234,1264,1302,1330,1339,1360,1377],{"type":569,"tag":600,"props":728,"children":729},{"class":602,"line":603},[730],{"type":569,"tag":600,"props":731,"children":733},{"style":732},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[734],{"type":574,"value":735},"/**\n",{"type":569,"tag":600,"props":737,"children":738},{"class":602,"line":612},[739],{"type":569,"tag":600,"props":740,"children":741},{"style":732},[742],{"type":574,"value":743}," * Definition for a binary tree node.\n",{"type":569,"tag":600,"props":745,"children":747},{"class":602,"line":746},3,[748],{"type":569,"tag":600,"props":749,"children":750},{"style":732},[751],{"type":574,"value":752}," */\n",{"type":569,"tag":600,"props":754,"children":756},{"class":602,"line":755},4,[757,763,769,775,781,786,791,795,800,805],{"type":569,"tag":600,"props":758,"children":760},{"style":759},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[761],{"type":574,"value":762},"function",{"type":569,"tag":600,"props":764,"children":766},{"style":765},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[767],{"type":574,"value":768}," TreeNode",{"type":569,"tag":600,"props":770,"children":772},{"style":771},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[773],{"type":574,"value":774},"(",{"type":569,"tag":600,"props":776,"children":778},{"style":777},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[779],{"type":574,"value":780},"val",{"type":569,"tag":600,"props":782,"children":783},{"style":771},[784],{"type":574,"value":785},",",{"type":569,"tag":600,"props":787,"children":788},{"style":777},[789],{"type":574,"value":790}," left",{"type":569,"tag":600,"props":792,"children":793},{"style":771},[794],{"type":574,"value":785},{"type":569,"tag":600,"props":796,"children":797},{"style":777},[798],{"type":574,"value":799}," right",{"type":569,"tag":600,"props":801,"children":802},{"style":771},[803],{"type":574,"value":804},")",{"type":569,"tag":600,"props":806,"children":807},{"style":771},[808],{"type":574,"value":809}," {\n",{"type":569,"tag":600,"props":811,"children":813},{"class":602,"line":812},5,[814,820,825,829,834,839,844,849,854,860,865,869],{"type":569,"tag":600,"props":815,"children":817},{"style":816},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[818],{"type":574,"value":819},"  this",{"type":569,"tag":600,"props":821,"children":822},{"style":771},[823],{"type":574,"value":824},".",{"type":569,"tag":600,"props":826,"children":827},{"style":777},[828],{"type":574,"value":780},{"type":569,"tag":600,"props":830,"children":831},{"style":771},[832],{"type":574,"value":833}," =",{"type":569,"tag":600,"props":835,"children":836},{"style":777},[837],{"type":574,"value":838}," val",{"type":569,"tag":600,"props":840,"children":841},{"style":759},[842],{"type":574,"value":843}," ===",{"type":569,"tag":600,"props":845,"children":846},{"style":759},[847],{"type":574,"value":848}," undefined",{"type":569,"tag":600,"props":850,"children":851},{"style":759},[852],{"type":574,"value":853}," ?",{"type":569,"tag":600,"props":855,"children":857},{"style":856},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[858],{"type":574,"value":859}," 0",{"type":569,"tag":600,"props":861,"children":862},{"style":759},[863],{"type":574,"value":864}," :",{"type":569,"tag":600,"props":866,"children":867},{"style":777},[868],{"type":574,"value":838},{"type":569,"tag":600,"props":870,"children":871},{"style":771},[872],{"type":574,"value":873},";\n",{"type":569,"tag":600,"props":875,"children":877},{"class":602,"line":876},6,[878,882,886,891,895,899,903,907,911,916,920,924],{"type":569,"tag":600,"props":879,"children":880},{"style":816},[881],{"type":574,"value":819},{"type":569,"tag":600,"props":883,"children":884},{"style":771},[885],{"type":574,"value":824},{"type":569,"tag":600,"props":887,"children":888},{"style":777},[889],{"type":574,"value":890},"left",{"type":569,"tag":600,"props":892,"children":893},{"style":771},[894],{"type":574,"value":833},{"type":569,"tag":600,"props":896,"children":897},{"style":777},[898],{"type":574,"value":790},{"type":569,"tag":600,"props":900,"children":901},{"style":759},[902],{"type":574,"value":843},{"type":569,"tag":600,"props":904,"children":905},{"style":759},[906],{"type":574,"value":848},{"type":569,"tag":600,"props":908,"children":909},{"style":759},[910],{"type":574,"value":853},{"type":569,"tag":600,"props":912,"children":913},{"style":759},[914],{"type":574,"value":915}," null",{"type":569,"tag":600,"props":917,"children":918},{"style":759},[919],{"type":574,"value":864},{"type":569,"tag":600,"props":921,"children":922},{"style":777},[923],{"type":574,"value":790},{"type":569,"tag":600,"props":925,"children":926},{"style":771},[927],{"type":574,"value":873},{"type":569,"tag":600,"props":929,"children":931},{"class":602,"line":930},7,[932,936,940,945,949,953,957,961,965,969,973,977],{"type":569,"tag":600,"props":933,"children":934},{"style":816},[935],{"type":574,"value":819},{"type":569,"tag":600,"props":937,"children":938},{"style":771},[939],{"type":574,"value":824},{"type":569,"tag":600,"props":941,"children":942},{"style":777},[943],{"type":574,"value":944},"right",{"type":569,"tag":600,"props":946,"children":947},{"style":771},[948],{"type":574,"value":833},{"type":569,"tag":600,"props":950,"children":951},{"style":777},[952],{"type":574,"value":799},{"type":569,"tag":600,"props":954,"children":955},{"style":759},[956],{"type":574,"value":843},{"type":569,"tag":600,"props":958,"children":959},{"style":759},[960],{"type":574,"value":848},{"type":569,"tag":600,"props":962,"children":963},{"style":759},[964],{"type":574,"value":853},{"type":569,"tag":600,"props":966,"children":967},{"style":759},[968],{"type":574,"value":915},{"type":569,"tag":600,"props":970,"children":971},{"style":759},[972],{"type":574,"value":864},{"type":569,"tag":600,"props":974,"children":975},{"style":777},[976],{"type":574,"value":799},{"type":569,"tag":600,"props":978,"children":979},{"style":771},[980],{"type":574,"value":873},{"type":569,"tag":600,"props":982,"children":984},{"class":602,"line":983},8,[985],{"type":569,"tag":600,"props":986,"children":987},{"style":771},[988],{"type":574,"value":989},"}\n",{"type":569,"tag":600,"props":991,"children":993},{"class":602,"line":992},9,[994],{"type":569,"tag":600,"props":995,"children":997},{"emptyLinePlaceholder":996},true,[998],{"type":574,"value":999},"\n",{"type":569,"tag":600,"props":1001,"children":1003},{"class":602,"line":1002},10,[1004],{"type":569,"tag":600,"props":1005,"children":1006},{"style":732},[1007],{"type":574,"value":735},{"type":569,"tag":600,"props":1009,"children":1011},{"class":602,"line":1010},11,[1012],{"type":569,"tag":600,"props":1013,"children":1014},{"style":732},[1015],{"type":574,"value":1016}," * dfs\n",{"type":569,"tag":600,"props":1018,"children":1020},{"class":602,"line":1019},12,[1021,1026,1031,1037,1042,1048,1053],{"type":569,"tag":600,"props":1022,"children":1023},{"style":732},[1024],{"type":574,"value":1025}," * ",{"type":569,"tag":600,"props":1027,"children":1028},{"style":771},[1029],{"type":574,"value":1030},"@",{"type":569,"tag":600,"props":1032,"children":1034},{"style":1033},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1035],{"type":574,"value":1036},"param",{"type":569,"tag":600,"props":1038,"children":1039},{"style":771},[1040],{"type":574,"value":1041}," {",{"type":569,"tag":600,"props":1043,"children":1045},{"style":1044},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1046],{"type":574,"value":1047},"TreeNode",{"type":569,"tag":600,"props":1049,"children":1050},{"style":771},[1051],{"type":574,"value":1052},"}",{"type":569,"tag":600,"props":1054,"children":1055},{"style":777},[1056],{"type":574,"value":1057}," root\n",{"type":569,"tag":600,"props":1059,"children":1061},{"class":602,"line":1060},13,[1062,1066,1070,1075,1079,1084],{"type":569,"tag":600,"props":1063,"children":1064},{"style":732},[1065],{"type":574,"value":1025},{"type":569,"tag":600,"props":1067,"children":1068},{"style":771},[1069],{"type":574,"value":1030},{"type":569,"tag":600,"props":1071,"children":1072},{"style":1033},[1073],{"type":574,"value":1074},"return",{"type":569,"tag":600,"props":1076,"children":1077},{"style":771},[1078],{"type":574,"value":1041},{"type":569,"tag":600,"props":1080,"children":1081},{"style":1044},[1082],{"type":574,"value":1083},"number[]",{"type":569,"tag":600,"props":1085,"children":1086},{"style":771},[1087],{"type":574,"value":989},{"type":569,"tag":600,"props":1089,"children":1091},{"class":602,"line":1090},14,[1092],{"type":569,"tag":600,"props":1093,"children":1094},{"style":732},[1095],{"type":574,"value":752},{"type":569,"tag":600,"props":1097,"children":1099},{"class":602,"line":1098},15,[1100,1105,1110,1114,1119,1124,1128,1132],{"type":569,"tag":600,"props":1101,"children":1102},{"style":759},[1103],{"type":574,"value":1104},"var",{"type":569,"tag":600,"props":1106,"children":1107},{"style":765},[1108],{"type":574,"value":1109}," inorderTraversal",{"type":569,"tag":600,"props":1111,"children":1112},{"style":771},[1113],{"type":574,"value":833},{"type":569,"tag":600,"props":1115,"children":1116},{"style":759},[1117],{"type":574,"value":1118}," function",{"type":569,"tag":600,"props":1120,"children":1121},{"style":771},[1122],{"type":574,"value":1123}," (",{"type":569,"tag":600,"props":1125,"children":1126},{"style":777},[1127],{"type":574,"value":566},{"type":569,"tag":600,"props":1129,"children":1130},{"style":771},[1131],{"type":574,"value":804},{"type":569,"tag":600,"props":1133,"children":1134},{"style":771},[1135],{"type":574,"value":809},{"type":569,"tag":600,"props":1137,"children":1139},{"class":602,"line":1138},16,[1140,1145,1150,1154],{"type":569,"tag":600,"props":1141,"children":1142},{"style":759},[1143],{"type":574,"value":1144},"  let",{"type":569,"tag":600,"props":1146,"children":1147},{"style":777},[1148],{"type":574,"value":1149}," res",{"type":569,"tag":600,"props":1151,"children":1152},{"style":771},[1153],{"type":574,"value":833},{"type":569,"tag":600,"props":1155,"children":1156},{"style":771},[1157],{"type":574,"value":1158}," [];\n",{"type":569,"tag":600,"props":1160,"children":1162},{"class":602,"line":1161},17,[1163,1168,1173,1177,1181,1186,1190,1195],{"type":569,"tag":600,"props":1164,"children":1165},{"style":759},[1166],{"type":574,"value":1167},"  const",{"type":569,"tag":600,"props":1169,"children":1170},{"style":765},[1171],{"type":574,"value":1172}," dfs",{"type":569,"tag":600,"props":1174,"children":1175},{"style":771},[1176],{"type":574,"value":833},{"type":569,"tag":600,"props":1178,"children":1179},{"style":771},[1180],{"type":574,"value":1123},{"type":569,"tag":600,"props":1182,"children":1183},{"style":777},[1184],{"type":574,"value":1185},"node",{"type":569,"tag":600,"props":1187,"children":1188},{"style":771},[1189],{"type":574,"value":804},{"type":569,"tag":600,"props":1191,"children":1192},{"style":771},[1193],{"type":574,"value":1194}," =>",{"type":569,"tag":600,"props":1196,"children":1197},{"style":771},[1198],{"type":574,"value":809},{"type":569,"tag":600,"props":1200,"children":1202},{"class":602,"line":1201},18,[1203,1208,1212,1217,1221,1225,1230],{"type":569,"tag":600,"props":1204,"children":1205},{"style":1033},[1206],{"type":574,"value":1207},"    if",{"type":569,"tag":600,"props":1209,"children":1210},{"style":771},[1211],{"type":574,"value":1123},{"type":569,"tag":600,"props":1213,"children":1214},{"style":759},[1215],{"type":574,"value":1216},"!",{"type":569,"tag":600,"props":1218,"children":1219},{"style":777},[1220],{"type":574,"value":1185},{"type":569,"tag":600,"props":1222,"children":1223},{"style":771},[1224],{"type":574,"value":804},{"type":569,"tag":600,"props":1226,"children":1227},{"style":1033},[1228],{"type":574,"value":1229}," return",{"type":569,"tag":600,"props":1231,"children":1232},{"style":771},[1233],{"type":574,"value":873},{"type":569,"tag":600,"props":1235,"children":1237},{"class":602,"line":1236},19,[1238,1243,1247,1251,1255,1259],{"type":569,"tag":600,"props":1239,"children":1240},{"style":765},[1241],{"type":574,"value":1242},"    dfs",{"type":569,"tag":600,"props":1244,"children":1245},{"style":771},[1246],{"type":574,"value":774},{"type":569,"tag":600,"props":1248,"children":1249},{"style":777},[1250],{"type":574,"value":1185},{"type":569,"tag":600,"props":1252,"children":1253},{"style":771},[1254],{"type":574,"value":824},{"type":569,"tag":600,"props":1256,"children":1257},{"style":777},[1258],{"type":574,"value":890},{"type":569,"tag":600,"props":1260,"children":1261},{"style":771},[1262],{"type":574,"value":1263},");\n",{"type":569,"tag":600,"props":1265,"children":1267},{"class":602,"line":1266},20,[1268,1273,1277,1282,1286,1290,1294,1298],{"type":569,"tag":600,"props":1269,"children":1270},{"style":777},[1271],{"type":574,"value":1272},"    res",{"type":569,"tag":600,"props":1274,"children":1275},{"style":771},[1276],{"type":574,"value":824},{"type":569,"tag":600,"props":1278,"children":1279},{"style":765},[1280],{"type":574,"value":1281},"push",{"type":569,"tag":600,"props":1283,"children":1284},{"style":771},[1285],{"type":574,"value":774},{"type":569,"tag":600,"props":1287,"children":1288},{"style":777},[1289],{"type":574,"value":1185},{"type":569,"tag":600,"props":1291,"children":1292},{"style":771},[1293],{"type":574,"value":824},{"type":569,"tag":600,"props":1295,"children":1296},{"style":777},[1297],{"type":574,"value":780},{"type":569,"tag":600,"props":1299,"children":1300},{"style":771},[1301],{"type":574,"value":1263},{"type":569,"tag":600,"props":1303,"children":1305},{"class":602,"line":1304},21,[1306,1310,1314,1318,1322,1326],{"type":569,"tag":600,"props":1307,"children":1308},{"style":765},[1309],{"type":574,"value":1242},{"type":569,"tag":600,"props":1311,"children":1312},{"style":771},[1313],{"type":574,"value":774},{"type":569,"tag":600,"props":1315,"children":1316},{"style":777},[1317],{"type":574,"value":1185},{"type":569,"tag":600,"props":1319,"children":1320},{"style":771},[1321],{"type":574,"value":824},{"type":569,"tag":600,"props":1323,"children":1324},{"style":777},[1325],{"type":574,"value":944},{"type":569,"tag":600,"props":1327,"children":1328},{"style":771},[1329],{"type":574,"value":1263},{"type":569,"tag":600,"props":1331,"children":1333},{"class":602,"line":1332},22,[1334],{"type":569,"tag":600,"props":1335,"children":1336},{"style":771},[1337],{"type":574,"value":1338},"  };\n",{"type":569,"tag":600,"props":1340,"children":1342},{"class":602,"line":1341},23,[1343,1348,1352,1356],{"type":569,"tag":600,"props":1344,"children":1345},{"style":765},[1346],{"type":574,"value":1347},"  dfs",{"type":569,"tag":600,"props":1349,"children":1350},{"style":771},[1351],{"type":574,"value":774},{"type":569,"tag":600,"props":1353,"children":1354},{"style":777},[1355],{"type":574,"value":566},{"type":569,"tag":600,"props":1357,"children":1358},{"style":771},[1359],{"type":574,"value":1263},{"type":569,"tag":600,"props":1361,"children":1363},{"class":602,"line":1362},24,[1364,1369,1373],{"type":569,"tag":600,"props":1365,"children":1366},{"style":1033},[1367],{"type":574,"value":1368},"  return",{"type":569,"tag":600,"props":1370,"children":1371},{"style":777},[1372],{"type":574,"value":1149},{"type":569,"tag":600,"props":1374,"children":1375},{"style":771},[1376],{"type":574,"value":873},{"type":569,"tag":600,"props":1378,"children":1380},{"class":602,"line":1379},25,[1381],{"type":569,"tag":600,"props":1382,"children":1383},{"style":771},[1384],{"type":574,"value":1385},"};\n",{"type":569,"tag":712,"props":1387,"children":1389},{"id":1388},"广度优先搜索-bfs",[1390],{"type":574,"value":1391},"广度优先搜索 - bfs",{"type":569,"tag":590,"props":1393,"children":1395},{"className":720,"code":1394,"language":722,"meta":562,"style":562},"/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar inorderTraversal = function (root) {\n  let stack = [];\n  let res = [];\n  while (stack.length || root) {\n    while (root) {\n      stack.push(root);\n      root = root.left;\n    }\n    root = stack.pop();\n    res.push(root.val);\n    root = root.right;\n  }\n  return res;\n};\n",[1396],{"type":569,"tag":596,"props":1397,"children":1398},{"__ignoreMap":562},[1399,1406,1413,1420,1463,1514,1565,1616,1623,1630,1637,1668,1695,1702,1737,1757,1776,1821,1845,1873,1901,1909,1939,1974,2001,2009,2025],{"type":569,"tag":600,"props":1400,"children":1401},{"class":602,"line":603},[1402],{"type":569,"tag":600,"props":1403,"children":1404},{"style":732},[1405],{"type":574,"value":735},{"type":569,"tag":600,"props":1407,"children":1408},{"class":602,"line":612},[1409],{"type":569,"tag":600,"props":1410,"children":1411},{"style":732},[1412],{"type":574,"value":743},{"type":569,"tag":600,"props":1414,"children":1415},{"class":602,"line":746},[1416],{"type":569,"tag":600,"props":1417,"children":1418},{"style":732},[1419],{"type":574,"value":752},{"type":569,"tag":600,"props":1421,"children":1422},{"class":602,"line":755},[1423,1427,1431,1435,1439,1443,1447,1451,1455,1459],{"type":569,"tag":600,"props":1424,"children":1425},{"style":759},[1426],{"type":574,"value":762},{"type":569,"tag":600,"props":1428,"children":1429},{"style":765},[1430],{"type":574,"value":768},{"type":569,"tag":600,"props":1432,"children":1433},{"style":771},[1434],{"type":574,"value":774},{"type":569,"tag":600,"props":1436,"children":1437},{"style":777},[1438],{"type":574,"value":780},{"type":569,"tag":600,"props":1440,"children":1441},{"style":771},[1442],{"type":574,"value":785},{"type":569,"tag":600,"props":1444,"children":1445},{"style":777},[1446],{"type":574,"value":790},{"type":569,"tag":600,"props":1448,"children":1449},{"style":771},[1450],{"type":574,"value":785},{"type":569,"tag":600,"props":1452,"children":1453},{"style":777},[1454],{"type":574,"value":799},{"type":569,"tag":600,"props":1456,"children":1457},{"style":771},[1458],{"type":574,"value":804},{"type":569,"tag":600,"props":1460,"children":1461},{"style":771},[1462],{"type":574,"value":809},{"type":569,"tag":600,"props":1464,"children":1465},{"class":602,"line":812},[1466,1470,1474,1478,1482,1486,1490,1494,1498,1502,1506,1510],{"type":569,"tag":600,"props":1467,"children":1468},{"style":816},[1469],{"type":574,"value":819},{"type":569,"tag":600,"props":1471,"children":1472},{"style":771},[1473],{"type":574,"value":824},{"type":569,"tag":600,"props":1475,"children":1476},{"style":777},[1477],{"type":574,"value":780},{"type":569,"tag":600,"props":1479,"children":1480},{"style":771},[1481],{"type":574,"value":833},{"type":569,"tag":600,"props":1483,"children":1484},{"style":777},[1485],{"type":574,"value":838},{"type":569,"tag":600,"props":1487,"children":1488},{"style":759},[1489],{"type":574,"value":843},{"type":569,"tag":600,"props":1491,"children":1492},{"style":759},[1493],{"type":574,"value":848},{"type":569,"tag":600,"props":1495,"children":1496},{"style":759},[1497],{"type":574,"value":853},{"type":569,"tag":600,"props":1499,"children":1500},{"style":856},[1501],{"type":574,"value":859},{"type":569,"tag":600,"props":1503,"children":1504},{"style":759},[1505],{"type":574,"value":864},{"type":569,"tag":600,"props":1507,"children":1508},{"style":777},[1509],{"type":574,"value":838},{"type":569,"tag":600,"props":1511,"children":1512},{"style":771},[1513],{"type":574,"value":873},{"type":569,"tag":600,"props":1515,"children":1516},{"class":602,"line":876},[1517,1521,1525,1529,1533,1537,1541,1545,1549,1553,1557,1561],{"type":569,"tag":600,"props":1518,"children":1519},{"style":816},[1520],{"type":574,"value":819},{"type":569,"tag":600,"props":1522,"children":1523},{"style":771},[1524],{"type":574,"value":824},{"type":569,"tag":600,"props":1526,"children":1527},{"style":777},[1528],{"type":574,"value":890},{"type":569,"tag":600,"props":1530,"children":1531},{"style":771},[1532],{"type":574,"value":833},{"type":569,"tag":600,"props":1534,"children":1535},{"style":777},[1536],{"type":574,"value":790},{"type":569,"tag":600,"props":1538,"children":1539},{"style":759},[1540],{"type":574,"value":843},{"type":569,"tag":600,"props":1542,"children":1543},{"style":759},[1544],{"type":574,"value":848},{"type":569,"tag":600,"props":1546,"children":1547},{"style":759},[1548],{"type":574,"value":853},{"type":569,"tag":600,"props":1550,"children":1551},{"style":759},[1552],{"type":574,"value":915},{"type":569,"tag":600,"props":1554,"children":1555},{"style":759},[1556],{"type":574,"value":864},{"type":569,"tag":600,"props":1558,"children":1559},{"style":777},[1560],{"type":574,"value":790},{"type":569,"tag":600,"props":1562,"children":1563},{"style":771},[1564],{"type":574,"value":873},{"type":569,"tag":600,"props":1566,"children":1567},{"class":602,"line":930},[1568,1572,1576,1580,1584,1588,1592,1596,1600,1604,1608,1612],{"type":569,"tag":600,"props":1569,"children":1570},{"style":816},[1571],{"type":574,"value":819},{"type":569,"tag":600,"props":1573,"children":1574},{"style":771},[1575],{"type":574,"value":824},{"type":569,"tag":600,"props":1577,"children":1578},{"style":777},[1579],{"type":574,"value":944},{"type":569,"tag":600,"props":1581,"children":1582},{"style":771},[1583],{"type":574,"value":833},{"type":569,"tag":600,"props":1585,"children":1586},{"style":777},[1587],{"type":574,"value":799},{"type":569,"tag":600,"props":1589,"children":1590},{"style":759},[1591],{"type":574,"value":843},{"type":569,"tag":600,"props":1593,"children":1594},{"style":759},[1595],{"type":574,"value":848},{"type":569,"tag":600,"props":1597,"children":1598},{"style":759},[1599],{"type":574,"value":853},{"type":569,"tag":600,"props":1601,"children":1602},{"style":759},[1603],{"type":574,"value":915},{"type":569,"tag":600,"props":1605,"children":1606},{"style":759},[1607],{"type":574,"value":864},{"type":569,"tag":600,"props":1609,"children":1610},{"style":777},[1611],{"type":574,"value":799},{"type":569,"tag":600,"props":1613,"children":1614},{"style":771},[1615],{"type":574,"value":873},{"type":569,"tag":600,"props":1617,"children":1618},{"class":602,"line":983},[1619],{"type":569,"tag":600,"props":1620,"children":1621},{"style":771},[1622],{"type":574,"value":989},{"type":569,"tag":600,"props":1624,"children":1625},{"class":602,"line":992},[1626],{"type":569,"tag":600,"props":1627,"children":1628},{"emptyLinePlaceholder":996},[1629],{"type":574,"value":999},{"type":569,"tag":600,"props":1631,"children":1632},{"class":602,"line":1002},[1633],{"type":569,"tag":600,"props":1634,"children":1635},{"style":732},[1636],{"type":574,"value":735},{"type":569,"tag":600,"props":1638,"children":1639},{"class":602,"line":1010},[1640,1644,1648,1652,1656,1660,1664],{"type":569,"tag":600,"props":1641,"children":1642},{"style":732},[1643],{"type":574,"value":1025},{"type":569,"tag":600,"props":1645,"children":1646},{"style":771},[1647],{"type":574,"value":1030},{"type":569,"tag":600,"props":1649,"children":1650},{"style":1033},[1651],{"type":574,"value":1036},{"type":569,"tag":600,"props":1653,"children":1654},{"style":771},[1655],{"type":574,"value":1041},{"type":569,"tag":600,"props":1657,"children":1658},{"style":1044},[1659],{"type":574,"value":1047},{"type":569,"tag":600,"props":1661,"children":1662},{"style":771},[1663],{"type":574,"value":1052},{"type":569,"tag":600,"props":1665,"children":1666},{"style":777},[1667],{"type":574,"value":1057},{"type":569,"tag":600,"props":1669,"children":1670},{"class":602,"line":1019},[1671,1675,1679,1683,1687,1691],{"type":569,"tag":600,"props":1672,"children":1673},{"style":732},[1674],{"type":574,"value":1025},{"type":569,"tag":600,"props":1676,"children":1677},{"style":771},[1678],{"type":574,"value":1030},{"type":569,"tag":600,"props":1680,"children":1681},{"style":1033},[1682],{"type":574,"value":1074},{"type":569,"tag":600,"props":1684,"children":1685},{"style":771},[1686],{"type":574,"value":1041},{"type":569,"tag":600,"props":1688,"children":1689},{"style":1044},[1690],{"type":574,"value":1083},{"type":569,"tag":600,"props":1692,"children":1693},{"style":771},[1694],{"type":574,"value":989},{"type":569,"tag":600,"props":1696,"children":1697},{"class":602,"line":1060},[1698],{"type":569,"tag":600,"props":1699,"children":1700},{"style":732},[1701],{"type":574,"value":752},{"type":569,"tag":600,"props":1703,"children":1704},{"class":602,"line":1090},[1705,1709,1713,1717,1721,1725,1729,1733],{"type":569,"tag":600,"props":1706,"children":1707},{"style":759},[1708],{"type":574,"value":1104},{"type":569,"tag":600,"props":1710,"children":1711},{"style":765},[1712],{"type":574,"value":1109},{"type":569,"tag":600,"props":1714,"children":1715},{"style":771},[1716],{"type":574,"value":833},{"type":569,"tag":600,"props":1718,"children":1719},{"style":759},[1720],{"type":574,"value":1118},{"type":569,"tag":600,"props":1722,"children":1723},{"style":771},[1724],{"type":574,"value":1123},{"type":569,"tag":600,"props":1726,"children":1727},{"style":777},[1728],{"type":574,"value":566},{"type":569,"tag":600,"props":1730,"children":1731},{"style":771},[1732],{"type":574,"value":804},{"type":569,"tag":600,"props":1734,"children":1735},{"style":771},[1736],{"type":574,"value":809},{"type":569,"tag":600,"props":1738,"children":1739},{"class":602,"line":1098},[1740,1744,1749,1753],{"type":569,"tag":600,"props":1741,"children":1742},{"style":759},[1743],{"type":574,"value":1144},{"type":569,"tag":600,"props":1745,"children":1746},{"style":777},[1747],{"type":574,"value":1748}," stack",{"type":569,"tag":600,"props":1750,"children":1751},{"style":771},[1752],{"type":574,"value":833},{"type":569,"tag":600,"props":1754,"children":1755},{"style":771},[1756],{"type":574,"value":1158},{"type":569,"tag":600,"props":1758,"children":1759},{"class":602,"line":1138},[1760,1764,1768,1772],{"type":569,"tag":600,"props":1761,"children":1762},{"style":759},[1763],{"type":574,"value":1144},{"type":569,"tag":600,"props":1765,"children":1766},{"style":777},[1767],{"type":574,"value":1149},{"type":569,"tag":600,"props":1769,"children":1770},{"style":771},[1771],{"type":574,"value":833},{"type":569,"tag":600,"props":1773,"children":1774},{"style":771},[1775],{"type":574,"value":1158},{"type":569,"tag":600,"props":1777,"children":1778},{"class":602,"line":1161},[1779,1784,1788,1793,1797,1803,1808,1813,1817],{"type":569,"tag":600,"props":1780,"children":1781},{"style":1033},[1782],{"type":574,"value":1783},"  while",{"type":569,"tag":600,"props":1785,"children":1786},{"style":771},[1787],{"type":574,"value":1123},{"type":569,"tag":600,"props":1789,"children":1790},{"style":777},[1791],{"type":574,"value":1792},"stack",{"type":569,"tag":600,"props":1794,"children":1795},{"style":771},[1796],{"type":574,"value":824},{"type":569,"tag":600,"props":1798,"children":1800},{"style":1799},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1801],{"type":574,"value":1802},"length",{"type":569,"tag":600,"props":1804,"children":1805},{"style":759},[1806],{"type":574,"value":1807}," ||",{"type":569,"tag":600,"props":1809,"children":1810},{"style":777},[1811],{"type":574,"value":1812}," root",{"type":569,"tag":600,"props":1814,"children":1815},{"style":771},[1816],{"type":574,"value":804},{"type":569,"tag":600,"props":1818,"children":1819},{"style":771},[1820],{"type":574,"value":809},{"type":569,"tag":600,"props":1822,"children":1823},{"class":602,"line":1201},[1824,1829,1833,1837,1841],{"type":569,"tag":600,"props":1825,"children":1826},{"style":1033},[1827],{"type":574,"value":1828},"    while",{"type":569,"tag":600,"props":1830,"children":1831},{"style":771},[1832],{"type":574,"value":1123},{"type":569,"tag":600,"props":1834,"children":1835},{"style":777},[1836],{"type":574,"value":566},{"type":569,"tag":600,"props":1838,"children":1839},{"style":771},[1840],{"type":574,"value":804},{"type":569,"tag":600,"props":1842,"children":1843},{"style":771},[1844],{"type":574,"value":809},{"type":569,"tag":600,"props":1846,"children":1847},{"class":602,"line":1236},[1848,1853,1857,1861,1865,1869],{"type":569,"tag":600,"props":1849,"children":1850},{"style":777},[1851],{"type":574,"value":1852},"      stack",{"type":569,"tag":600,"props":1854,"children":1855},{"style":771},[1856],{"type":574,"value":824},{"type":569,"tag":600,"props":1858,"children":1859},{"style":765},[1860],{"type":574,"value":1281},{"type":569,"tag":600,"props":1862,"children":1863},{"style":771},[1864],{"type":574,"value":774},{"type":569,"tag":600,"props":1866,"children":1867},{"style":777},[1868],{"type":574,"value":566},{"type":569,"tag":600,"props":1870,"children":1871},{"style":771},[1872],{"type":574,"value":1263},{"type":569,"tag":600,"props":1874,"children":1875},{"class":602,"line":1266},[1876,1881,1885,1889,1893,1897],{"type":569,"tag":600,"props":1877,"children":1878},{"style":777},[1879],{"type":574,"value":1880},"      root",{"type":569,"tag":600,"props":1882,"children":1883},{"style":771},[1884],{"type":574,"value":833},{"type":569,"tag":600,"props":1886,"children":1887},{"style":777},[1888],{"type":574,"value":1812},{"type":569,"tag":600,"props":1890,"children":1891},{"style":771},[1892],{"type":574,"value":824},{"type":569,"tag":600,"props":1894,"children":1895},{"style":777},[1896],{"type":574,"value":890},{"type":569,"tag":600,"props":1898,"children":1899},{"style":771},[1900],{"type":574,"value":873},{"type":569,"tag":600,"props":1902,"children":1903},{"class":602,"line":1304},[1904],{"type":569,"tag":600,"props":1905,"children":1906},{"style":771},[1907],{"type":574,"value":1908},"    }\n",{"type":569,"tag":600,"props":1910,"children":1911},{"class":602,"line":1332},[1912,1917,1921,1925,1929,1934],{"type":569,"tag":600,"props":1913,"children":1914},{"style":777},[1915],{"type":574,"value":1916},"    root",{"type":569,"tag":600,"props":1918,"children":1919},{"style":771},[1920],{"type":574,"value":833},{"type":569,"tag":600,"props":1922,"children":1923},{"style":777},[1924],{"type":574,"value":1748},{"type":569,"tag":600,"props":1926,"children":1927},{"style":771},[1928],{"type":574,"value":824},{"type":569,"tag":600,"props":1930,"children":1931},{"style":765},[1932],{"type":574,"value":1933},"pop",{"type":569,"tag":600,"props":1935,"children":1936},{"style":771},[1937],{"type":574,"value":1938},"();\n",{"type":569,"tag":600,"props":1940,"children":1941},{"class":602,"line":1341},[1942,1946,1950,1954,1958,1962,1966,1970],{"type":569,"tag":600,"props":1943,"children":1944},{"style":777},[1945],{"type":574,"value":1272},{"type":569,"tag":600,"props":1947,"children":1948},{"style":771},[1949],{"type":574,"value":824},{"type":569,"tag":600,"props":1951,"children":1952},{"style":765},[1953],{"type":574,"value":1281},{"type":569,"tag":600,"props":1955,"children":1956},{"style":771},[1957],{"type":574,"value":774},{"type":569,"tag":600,"props":1959,"children":1960},{"style":777},[1961],{"type":574,"value":566},{"type":569,"tag":600,"props":1963,"children":1964},{"style":771},[1965],{"type":574,"value":824},{"type":569,"tag":600,"props":1967,"children":1968},{"style":777},[1969],{"type":574,"value":780},{"type":569,"tag":600,"props":1971,"children":1972},{"style":771},[1973],{"type":574,"value":1263},{"type":569,"tag":600,"props":1975,"children":1976},{"class":602,"line":1362},[1977,1981,1985,1989,1993,1997],{"type":569,"tag":600,"props":1978,"children":1979},{"style":777},[1980],{"type":574,"value":1916},{"type":569,"tag":600,"props":1982,"children":1983},{"style":771},[1984],{"type":574,"value":833},{"type":569,"tag":600,"props":1986,"children":1987},{"style":777},[1988],{"type":574,"value":1812},{"type":569,"tag":600,"props":1990,"children":1991},{"style":771},[1992],{"type":574,"value":824},{"type":569,"tag":600,"props":1994,"children":1995},{"style":777},[1996],{"type":574,"value":944},{"type":569,"tag":600,"props":1998,"children":1999},{"style":771},[2000],{"type":574,"value":873},{"type":569,"tag":600,"props":2002,"children":2003},{"class":602,"line":1379},[2004],{"type":569,"tag":600,"props":2005,"children":2006},{"style":771},[2007],{"type":574,"value":2008},"  }\n",{"type":569,"tag":600,"props":2010,"children":2012},{"class":602,"line":2011},26,[2013,2017,2021],{"type":569,"tag":600,"props":2014,"children":2015},{"style":1033},[2016],{"type":574,"value":1368},{"type":569,"tag":600,"props":2018,"children":2019},{"style":777},[2020],{"type":574,"value":1149},{"type":569,"tag":600,"props":2022,"children":2023},{"style":771},[2024],{"type":574,"value":873},{"type":569,"tag":600,"props":2026,"children":2028},{"class":602,"line":2027},27,[2029],{"type":569,"tag":600,"props":2030,"children":2031},{"style":771},[2032],{"type":574,"value":1385},{"type":569,"tag":2034,"props":2035,"children":2036},"style",{},[2037],{"type":574,"value":2038},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":812,"depth":812,"links":2040},[2041,2042],{"id":703,"depth":612,"text":703},{"id":708,"depth":612,"text":708,"children":2043},[2044,2045],{"id":714,"depth":746,"text":717},{"id":1388,"depth":746,"text":1391},"markdown","content:1.algorithm:3.leetcode:3.major:94.binary-tree-inorder-traversal.md","content","1.algorithm/3.leetcode/3.major/94.binary-tree-inorder-traversal.md","md",[2052,2054],{"_path":144,"title":143,"description":2053},"给你单链表的头指针 head 和两个整数 left 和 right ，其中 left \u003C= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。",{"_path":150,"title":149,"description":2055},"给你一个二叉树的根节点 root ， 检查它是否轴对称。",1717731138977]