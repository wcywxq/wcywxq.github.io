[{"data":1,"prerenderedAt":1439},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":452,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1434},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":159,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":158,"description":456,"url":457,"body":458,"_type":1429,"_id":1430,"_source":1431,"_file":1432,"_extension":1433},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":459,"children":460,"toc":1423},"root",[461,468,473,478,483,492,558,563,571,634,639,659,665,670,677,1417],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":462,"tag":463,"props":474,"children":475},{},[476],{"type":467,"value":477},"叶节点 是指没有子节点的节点。",{"type":462,"tag":463,"props":479,"children":480},{},[481],{"type":467,"value":482},"示例 1：",{"type":462,"tag":463,"props":484,"children":485},{},[486],{"type":462,"tag":487,"props":488,"children":491},"img",{"alt":489,"src":490},"num1tree","/img/code_leetcode_No.129_num1tree.png",[],{"type":462,"tag":493,"props":494,"children":497},"pre",{"className":495,"code":496,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[498],{"type":462,"tag":499,"props":500,"children":501},"code",{"__ignoreMap":455},[502,513,522,531,540,549],{"type":462,"tag":503,"props":504,"children":507},"span",{"class":505,"line":506},"line",1,[508],{"type":462,"tag":503,"props":509,"children":510},{},[511],{"type":467,"value":512},"输入：root = [1,2,3]\n",{"type":462,"tag":503,"props":514,"children":516},{"class":505,"line":515},2,[517],{"type":462,"tag":503,"props":518,"children":519},{},[520],{"type":467,"value":521},"输出：25\n",{"type":462,"tag":503,"props":523,"children":525},{"class":505,"line":524},3,[526],{"type":462,"tag":503,"props":527,"children":528},{},[529],{"type":467,"value":530},"解释：\n",{"type":462,"tag":503,"props":532,"children":534},{"class":505,"line":533},4,[535],{"type":462,"tag":503,"props":536,"children":537},{},[538],{"type":467,"value":539},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":462,"tag":503,"props":541,"children":543},{"class":505,"line":542},5,[544],{"type":462,"tag":503,"props":545,"children":546},{},[547],{"type":467,"value":548},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":462,"tag":503,"props":550,"children":552},{"class":505,"line":551},6,[553],{"type":462,"tag":503,"props":554,"children":555},{},[556],{"type":467,"value":557},"因此，数字总和 = 12 + 13 = 25\n",{"type":462,"tag":463,"props":559,"children":560},{},[561],{"type":467,"value":562},"示例 2：",{"type":462,"tag":463,"props":564,"children":565},{},[566],{"type":462,"tag":487,"props":567,"children":570},{"alt":568,"src":569},"num2tree","/img/code_leetcode_No.129_num2tree.png",[],{"type":462,"tag":493,"props":572,"children":574},{"className":495,"code":573,"language":467,"meta":455,"style":455},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[575],{"type":462,"tag":499,"props":576,"children":577},{"__ignoreMap":455},[578,586,594,601,609,617,625],{"type":462,"tag":503,"props":579,"children":580},{"class":505,"line":506},[581],{"type":462,"tag":503,"props":582,"children":583},{},[584],{"type":467,"value":585},"输入：root = [4,9,0,5,1]\n",{"type":462,"tag":503,"props":587,"children":588},{"class":505,"line":515},[589],{"type":462,"tag":503,"props":590,"children":591},{},[592],{"type":467,"value":593},"输出：1026\n",{"type":462,"tag":503,"props":595,"children":596},{"class":505,"line":524},[597],{"type":462,"tag":503,"props":598,"children":599},{},[600],{"type":467,"value":530},{"type":462,"tag":503,"props":602,"children":603},{"class":505,"line":533},[604],{"type":462,"tag":503,"props":605,"children":606},{},[607],{"type":467,"value":608},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":462,"tag":503,"props":610,"children":611},{"class":505,"line":542},[612],{"type":462,"tag":503,"props":613,"children":614},{},[615],{"type":467,"value":616},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":462,"tag":503,"props":618,"children":619},{"class":505,"line":551},[620],{"type":462,"tag":503,"props":621,"children":622},{},[623],{"type":467,"value":624},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":462,"tag":503,"props":626,"children":628},{"class":505,"line":627},7,[629],{"type":462,"tag":503,"props":630,"children":631},{},[632],{"type":467,"value":633},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":462,"tag":463,"props":635,"children":636},{},[637],{"type":467,"value":638},"提示：",{"type":462,"tag":640,"props":641,"children":642},"ul",{},[643,649,654],{"type":462,"tag":644,"props":645,"children":646},"li",{},[647],{"type":467,"value":648},"树中节点的数目在范围 [1, 1000] 内",{"type":462,"tag":644,"props":650,"children":651},{},[652],{"type":467,"value":653},"0 \u003C= Node.val \u003C= 9",{"type":462,"tag":644,"props":655,"children":656},{},[657],{"type":467,"value":658},"树的深度不超过 10",{"type":462,"tag":660,"props":661,"children":663},"h2",{"id":662},"解题思路",[664],{"type":467,"value":662},{"type":462,"tag":660,"props":666,"children":668},{"id":667},"实现",[669],{"type":467,"value":667},{"type":462,"tag":671,"props":672,"children":674},"h3",{"id":673},"深度优先搜素-dfs",[675],{"type":467,"value":676},"深度优先搜素 - dfs",{"type":462,"tag":493,"props":678,"children":682},{"className":679,"code":680,"language":681,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[683],{"type":462,"tag":499,"props":684,"children":685},{"__ignoreMap":455},[686,695,703,711,763,829,882,934,943,953,961,988,1006,1014,1050,1101,1144,1198,1271,1354,1367,1404],{"type":462,"tag":503,"props":687,"children":688},{"class":505,"line":506},[689],{"type":462,"tag":503,"props":690,"children":692},{"style":691},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[693],{"type":467,"value":694},"/**\n",{"type":462,"tag":503,"props":696,"children":697},{"class":505,"line":515},[698],{"type":462,"tag":503,"props":699,"children":700},{"style":691},[701],{"type":467,"value":702}," * Definition for a binary tree node.\n",{"type":462,"tag":503,"props":704,"children":705},{"class":505,"line":524},[706],{"type":462,"tag":503,"props":707,"children":708},{"style":691},[709],{"type":467,"value":710}," */\n",{"type":462,"tag":503,"props":712,"children":713},{"class":505,"line":533},[714,720,726,732,738,744,749,753,758],{"type":462,"tag":503,"props":715,"children":717},{"style":716},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[718],{"type":467,"value":719},"function",{"type":462,"tag":503,"props":721,"children":723},{"style":722},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[724],{"type":467,"value":725}," TreeNode",{"type":462,"tag":503,"props":727,"children":729},{"style":728},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[730],{"type":467,"value":731},"(",{"type":462,"tag":503,"props":733,"children":735},{"style":734},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[736],{"type":467,"value":737},"val",{"type":462,"tag":503,"props":739,"children":741},{"style":740},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[742],{"type":467,"value":743},",",{"type":462,"tag":503,"props":745,"children":746},{"style":734},[747],{"type":467,"value":748}," left",{"type":462,"tag":503,"props":750,"children":751},{"style":740},[752],{"type":467,"value":743},{"type":462,"tag":503,"props":754,"children":755},{"style":734},[756],{"type":467,"value":757}," right",{"type":462,"tag":503,"props":759,"children":760},{"style":728},[761],{"type":467,"value":762},") {\n",{"type":462,"tag":503,"props":764,"children":765},{"class":505,"line":542},[766,772,778,783,789,794,799,805,810,815,820,824],{"type":462,"tag":503,"props":767,"children":769},{"style":768},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[770],{"type":467,"value":771},"  this",{"type":462,"tag":503,"props":773,"children":775},{"style":774},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[776],{"type":467,"value":777},".",{"type":462,"tag":503,"props":779,"children":781},{"style":780},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[782],{"type":467,"value":737},{"type":462,"tag":503,"props":784,"children":786},{"style":785},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[787],{"type":467,"value":788}," =",{"type":462,"tag":503,"props":790,"children":791},{"style":780},[792],{"type":467,"value":793}," val",{"type":462,"tag":503,"props":795,"children":796},{"style":785},[797],{"type":467,"value":798}," ===",{"type":462,"tag":503,"props":800,"children":802},{"style":801},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[803],{"type":467,"value":804}," undefined",{"type":462,"tag":503,"props":806,"children":807},{"style":785},[808],{"type":467,"value":809}," ?",{"type":462,"tag":503,"props":811,"children":812},{"style":801},[813],{"type":467,"value":814}," 0",{"type":462,"tag":503,"props":816,"children":817},{"style":785},[818],{"type":467,"value":819}," :",{"type":462,"tag":503,"props":821,"children":822},{"style":780},[823],{"type":467,"value":793},{"type":462,"tag":503,"props":825,"children":826},{"style":740},[827],{"type":467,"value":828},";\n",{"type":462,"tag":503,"props":830,"children":831},{"class":505,"line":551},[832,836,840,845,849,853,857,861,865,870,874,878],{"type":462,"tag":503,"props":833,"children":834},{"style":768},[835],{"type":467,"value":771},{"type":462,"tag":503,"props":837,"children":838},{"style":774},[839],{"type":467,"value":777},{"type":462,"tag":503,"props":841,"children":842},{"style":780},[843],{"type":467,"value":844},"left",{"type":462,"tag":503,"props":846,"children":847},{"style":785},[848],{"type":467,"value":788},{"type":462,"tag":503,"props":850,"children":851},{"style":780},[852],{"type":467,"value":748},{"type":462,"tag":503,"props":854,"children":855},{"style":785},[856],{"type":467,"value":798},{"type":462,"tag":503,"props":858,"children":859},{"style":801},[860],{"type":467,"value":804},{"type":462,"tag":503,"props":862,"children":863},{"style":785},[864],{"type":467,"value":809},{"type":462,"tag":503,"props":866,"children":867},{"style":801},[868],{"type":467,"value":869}," null",{"type":462,"tag":503,"props":871,"children":872},{"style":785},[873],{"type":467,"value":819},{"type":462,"tag":503,"props":875,"children":876},{"style":780},[877],{"type":467,"value":748},{"type":462,"tag":503,"props":879,"children":880},{"style":740},[881],{"type":467,"value":828},{"type":462,"tag":503,"props":883,"children":884},{"class":505,"line":627},[885,889,893,898,902,906,910,914,918,922,926,930],{"type":462,"tag":503,"props":886,"children":887},{"style":768},[888],{"type":467,"value":771},{"type":462,"tag":503,"props":890,"children":891},{"style":774},[892],{"type":467,"value":777},{"type":462,"tag":503,"props":894,"children":895},{"style":780},[896],{"type":467,"value":897},"right",{"type":462,"tag":503,"props":899,"children":900},{"style":785},[901],{"type":467,"value":788},{"type":462,"tag":503,"props":903,"children":904},{"style":780},[905],{"type":467,"value":757},{"type":462,"tag":503,"props":907,"children":908},{"style":785},[909],{"type":467,"value":798},{"type":462,"tag":503,"props":911,"children":912},{"style":801},[913],{"type":467,"value":804},{"type":462,"tag":503,"props":915,"children":916},{"style":785},[917],{"type":467,"value":809},{"type":462,"tag":503,"props":919,"children":920},{"style":801},[921],{"type":467,"value":869},{"type":462,"tag":503,"props":923,"children":924},{"style":785},[925],{"type":467,"value":819},{"type":462,"tag":503,"props":927,"children":928},{"style":780},[929],{"type":467,"value":757},{"type":462,"tag":503,"props":931,"children":932},{"style":740},[933],{"type":467,"value":828},{"type":462,"tag":503,"props":935,"children":937},{"class":505,"line":936},8,[938],{"type":462,"tag":503,"props":939,"children":940},{"style":728},[941],{"type":467,"value":942},"}\n",{"type":462,"tag":503,"props":944,"children":946},{"class":505,"line":945},9,[947],{"type":462,"tag":503,"props":948,"children":950},{"emptyLinePlaceholder":949},true,[951],{"type":467,"value":952},"\n",{"type":462,"tag":503,"props":954,"children":956},{"class":505,"line":955},10,[957],{"type":462,"tag":503,"props":958,"children":959},{"style":691},[960],{"type":467,"value":694},{"type":462,"tag":503,"props":962,"children":964},{"class":505,"line":963},11,[965,970,976,982],{"type":462,"tag":503,"props":966,"children":967},{"style":691},[968],{"type":467,"value":969}," * ",{"type":462,"tag":503,"props":971,"children":973},{"style":972},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[974],{"type":467,"value":975},"@param",{"type":462,"tag":503,"props":977,"children":979},{"style":978},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[980],{"type":467,"value":981}," {TreeNode}",{"type":462,"tag":503,"props":983,"children":985},{"style":984},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[986],{"type":467,"value":987}," root\n",{"type":462,"tag":503,"props":989,"children":991},{"class":505,"line":990},12,[992,996,1001],{"type":462,"tag":503,"props":993,"children":994},{"style":691},[995],{"type":467,"value":969},{"type":462,"tag":503,"props":997,"children":998},{"style":972},[999],{"type":467,"value":1000},"@return",{"type":462,"tag":503,"props":1002,"children":1003},{"style":978},[1004],{"type":467,"value":1005}," {number}\n",{"type":462,"tag":503,"props":1007,"children":1009},{"class":505,"line":1008},13,[1010],{"type":462,"tag":503,"props":1011,"children":1012},{"style":691},[1013],{"type":467,"value":710},{"type":462,"tag":503,"props":1015,"children":1017},{"class":505,"line":1016},14,[1018,1023,1028,1032,1037,1042,1046],{"type":462,"tag":503,"props":1019,"children":1020},{"style":716},[1021],{"type":467,"value":1022},"var",{"type":462,"tag":503,"props":1024,"children":1025},{"style":722},[1026],{"type":467,"value":1027}," sumNumbers",{"type":462,"tag":503,"props":1029,"children":1030},{"style":785},[1031],{"type":467,"value":788},{"type":462,"tag":503,"props":1033,"children":1034},{"style":716},[1035],{"type":467,"value":1036}," function",{"type":462,"tag":503,"props":1038,"children":1039},{"style":728},[1040],{"type":467,"value":1041}," (",{"type":462,"tag":503,"props":1043,"children":1044},{"style":734},[1045],{"type":467,"value":459},{"type":462,"tag":503,"props":1047,"children":1048},{"style":728},[1049],{"type":467,"value":762},{"type":462,"tag":503,"props":1051,"children":1053},{"class":505,"line":1052},15,[1054,1059,1064,1068,1072,1077,1081,1086,1091,1096],{"type":462,"tag":503,"props":1055,"children":1056},{"style":716},[1057],{"type":467,"value":1058},"  const",{"type":462,"tag":503,"props":1060,"children":1061},{"style":722},[1062],{"type":467,"value":1063}," dfs",{"type":462,"tag":503,"props":1065,"children":1066},{"style":785},[1067],{"type":467,"value":788},{"type":462,"tag":503,"props":1069,"children":1070},{"style":728},[1071],{"type":467,"value":1041},{"type":462,"tag":503,"props":1073,"children":1074},{"style":734},[1075],{"type":467,"value":1076},"node",{"type":462,"tag":503,"props":1078,"children":1079},{"style":740},[1080],{"type":467,"value":743},{"type":462,"tag":503,"props":1082,"children":1083},{"style":734},[1084],{"type":467,"value":1085}," prev",{"type":462,"tag":503,"props":1087,"children":1088},{"style":728},[1089],{"type":467,"value":1090},") ",{"type":462,"tag":503,"props":1092,"children":1093},{"style":716},[1094],{"type":467,"value":1095},"=>",{"type":462,"tag":503,"props":1097,"children":1098},{"style":728},[1099],{"type":467,"value":1100}," {\n",{"type":462,"tag":503,"props":1102,"children":1104},{"class":505,"line":1103},16,[1105,1111,1115,1119,1123,1127,1131,1136,1140],{"type":462,"tag":503,"props":1106,"children":1108},{"style":1107},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1109],{"type":467,"value":1110},"    if",{"type":462,"tag":503,"props":1112,"children":1113},{"style":728},[1114],{"type":467,"value":1041},{"type":462,"tag":503,"props":1116,"children":1117},{"style":780},[1118],{"type":467,"value":1076},{"type":462,"tag":503,"props":1120,"children":1121},{"style":785},[1122],{"type":467,"value":798},{"type":462,"tag":503,"props":1124,"children":1125},{"style":801},[1126],{"type":467,"value":869},{"type":462,"tag":503,"props":1128,"children":1129},{"style":728},[1130],{"type":467,"value":1090},{"type":462,"tag":503,"props":1132,"children":1133},{"style":1107},[1134],{"type":467,"value":1135},"return",{"type":462,"tag":503,"props":1137,"children":1138},{"style":801},[1139],{"type":467,"value":814},{"type":462,"tag":503,"props":1141,"children":1142},{"style":740},[1143],{"type":467,"value":828},{"type":462,"tag":503,"props":1145,"children":1147},{"class":505,"line":1146},17,[1148,1153,1158,1162,1166,1171,1176,1181,1186,1190,1194],{"type":462,"tag":503,"props":1149,"children":1150},{"style":716},[1151],{"type":467,"value":1152},"    let",{"type":462,"tag":503,"props":1154,"children":1155},{"style":780},[1156],{"type":467,"value":1157}," sum",{"type":462,"tag":503,"props":1159,"children":1160},{"style":785},[1161],{"type":467,"value":788},{"type":462,"tag":503,"props":1163,"children":1164},{"style":780},[1165],{"type":467,"value":1085},{"type":462,"tag":503,"props":1167,"children":1168},{"style":785},[1169],{"type":467,"value":1170}," *",{"type":462,"tag":503,"props":1172,"children":1173},{"style":801},[1174],{"type":467,"value":1175}," 10",{"type":462,"tag":503,"props":1177,"children":1178},{"style":785},[1179],{"type":467,"value":1180}," +",{"type":462,"tag":503,"props":1182,"children":1183},{"style":780},[1184],{"type":467,"value":1185}," node",{"type":462,"tag":503,"props":1187,"children":1188},{"style":774},[1189],{"type":467,"value":777},{"type":462,"tag":503,"props":1191,"children":1192},{"style":780},[1193],{"type":467,"value":737},{"type":462,"tag":503,"props":1195,"children":1196},{"style":740},[1197],{"type":467,"value":828},{"type":462,"tag":503,"props":1199,"children":1201},{"class":505,"line":1200},18,[1202,1206,1210,1214,1218,1222,1226,1230,1235,1239,1243,1247,1251,1255,1259,1263,1267],{"type":462,"tag":503,"props":1203,"children":1204},{"style":1107},[1205],{"type":467,"value":1110},{"type":462,"tag":503,"props":1207,"children":1208},{"style":728},[1209],{"type":467,"value":1041},{"type":462,"tag":503,"props":1211,"children":1212},{"style":780},[1213],{"type":467,"value":1076},{"type":462,"tag":503,"props":1215,"children":1216},{"style":774},[1217],{"type":467,"value":777},{"type":462,"tag":503,"props":1219,"children":1220},{"style":780},[1221],{"type":467,"value":844},{"type":462,"tag":503,"props":1223,"children":1224},{"style":785},[1225],{"type":467,"value":798},{"type":462,"tag":503,"props":1227,"children":1228},{"style":801},[1229],{"type":467,"value":869},{"type":462,"tag":503,"props":1231,"children":1232},{"style":785},[1233],{"type":467,"value":1234}," &&",{"type":462,"tag":503,"props":1236,"children":1237},{"style":780},[1238],{"type":467,"value":1185},{"type":462,"tag":503,"props":1240,"children":1241},{"style":774},[1242],{"type":467,"value":777},{"type":462,"tag":503,"props":1244,"children":1245},{"style":780},[1246],{"type":467,"value":897},{"type":462,"tag":503,"props":1248,"children":1249},{"style":785},[1250],{"type":467,"value":798},{"type":462,"tag":503,"props":1252,"children":1253},{"style":801},[1254],{"type":467,"value":869},{"type":462,"tag":503,"props":1256,"children":1257},{"style":728},[1258],{"type":467,"value":1090},{"type":462,"tag":503,"props":1260,"children":1261},{"style":1107},[1262],{"type":467,"value":1135},{"type":462,"tag":503,"props":1264,"children":1265},{"style":780},[1266],{"type":467,"value":1157},{"type":462,"tag":503,"props":1268,"children":1269},{"style":740},[1270],{"type":467,"value":828},{"type":462,"tag":503,"props":1272,"children":1274},{"class":505,"line":1273},19,[1275,1280,1284,1288,1292,1296,1300,1304,1308,1312,1317,1321,1325,1329,1333,1337,1341,1345,1350],{"type":462,"tag":503,"props":1276,"children":1277},{"style":1107},[1278],{"type":467,"value":1279},"    return",{"type":462,"tag":503,"props":1281,"children":1282},{"style":722},[1283],{"type":467,"value":1063},{"type":462,"tag":503,"props":1285,"children":1286},{"style":728},[1287],{"type":467,"value":731},{"type":462,"tag":503,"props":1289,"children":1290},{"style":780},[1291],{"type":467,"value":1076},{"type":462,"tag":503,"props":1293,"children":1294},{"style":774},[1295],{"type":467,"value":777},{"type":462,"tag":503,"props":1297,"children":1298},{"style":780},[1299],{"type":467,"value":844},{"type":462,"tag":503,"props":1301,"children":1302},{"style":740},[1303],{"type":467,"value":743},{"type":462,"tag":503,"props":1305,"children":1306},{"style":780},[1307],{"type":467,"value":1157},{"type":462,"tag":503,"props":1309,"children":1310},{"style":728},[1311],{"type":467,"value":1090},{"type":462,"tag":503,"props":1313,"children":1314},{"style":785},[1315],{"type":467,"value":1316},"+",{"type":462,"tag":503,"props":1318,"children":1319},{"style":722},[1320],{"type":467,"value":1063},{"type":462,"tag":503,"props":1322,"children":1323},{"style":728},[1324],{"type":467,"value":731},{"type":462,"tag":503,"props":1326,"children":1327},{"style":780},[1328],{"type":467,"value":1076},{"type":462,"tag":503,"props":1330,"children":1331},{"style":774},[1332],{"type":467,"value":777},{"type":462,"tag":503,"props":1334,"children":1335},{"style":780},[1336],{"type":467,"value":897},{"type":462,"tag":503,"props":1338,"children":1339},{"style":740},[1340],{"type":467,"value":743},{"type":462,"tag":503,"props":1342,"children":1343},{"style":780},[1344],{"type":467,"value":1157},{"type":462,"tag":503,"props":1346,"children":1347},{"style":728},[1348],{"type":467,"value":1349},")",{"type":462,"tag":503,"props":1351,"children":1352},{"style":740},[1353],{"type":467,"value":828},{"type":462,"tag":503,"props":1355,"children":1357},{"class":505,"line":1356},20,[1358,1363],{"type":462,"tag":503,"props":1359,"children":1360},{"style":728},[1361],{"type":467,"value":1362},"  }",{"type":462,"tag":503,"props":1364,"children":1365},{"style":740},[1366],{"type":467,"value":828},{"type":462,"tag":503,"props":1368,"children":1370},{"class":505,"line":1369},21,[1371,1376,1380,1384,1388,1392,1396,1400],{"type":462,"tag":503,"props":1372,"children":1373},{"style":1107},[1374],{"type":467,"value":1375},"  return",{"type":462,"tag":503,"props":1377,"children":1378},{"style":722},[1379],{"type":467,"value":1063},{"type":462,"tag":503,"props":1381,"children":1382},{"style":728},[1383],{"type":467,"value":731},{"type":462,"tag":503,"props":1385,"children":1386},{"style":780},[1387],{"type":467,"value":459},{"type":462,"tag":503,"props":1389,"children":1390},{"style":740},[1391],{"type":467,"value":743},{"type":462,"tag":503,"props":1393,"children":1394},{"style":801},[1395],{"type":467,"value":814},{"type":462,"tag":503,"props":1397,"children":1398},{"style":728},[1399],{"type":467,"value":1349},{"type":462,"tag":503,"props":1401,"children":1402},{"style":740},[1403],{"type":467,"value":828},{"type":462,"tag":503,"props":1405,"children":1407},{"class":505,"line":1406},22,[1408,1413],{"type":462,"tag":503,"props":1409,"children":1410},{"style":728},[1411],{"type":467,"value":1412},"}",{"type":462,"tag":503,"props":1414,"children":1415},{"style":740},[1416],{"type":467,"value":828},{"type":462,"tag":1418,"props":1419,"children":1420},"style",{},[1421],{"type":467,"value":1422},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":542,"depth":542,"links":1424},[1425,1426],{"id":662,"depth":515,"text":662},{"id":667,"depth":515,"text":667,"children":1427},[1428],{"id":673,"depth":524,"text":676},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1435,1437],{"_path":156,"title":155,"description":1436},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":162,"title":161,"description":1438},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1713457421834]