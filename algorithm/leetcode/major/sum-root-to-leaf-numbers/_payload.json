[{"data":1,"prerenderedAt":1522},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":524,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1517},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":168,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":167,"description":528,"url":529,"body":530,"_type":1512,"_id":1513,"_source":1514,"_file":1515,"_extension":1516},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":531,"children":532,"toc":1506},"root",[533,540,545,550,555,564,630,635,643,706,711,731,737,742,749,1500],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":539,"value":549},"叶节点 是指没有子节点的节点。",{"type":534,"tag":535,"props":551,"children":552},{},[553],{"type":539,"value":554},"示例 1：",{"type":534,"tag":535,"props":556,"children":557},{},[558],{"type":534,"tag":559,"props":560,"children":563},"img",{"alt":561,"src":562},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":534,"tag":565,"props":566,"children":569},"pre",{"className":567,"code":568,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[570],{"type":534,"tag":571,"props":572,"children":573},"code",{"__ignoreMap":527},[574,585,594,603,612,621],{"type":534,"tag":575,"props":576,"children":579},"span",{"class":577,"line":578},"line",1,[580],{"type":534,"tag":575,"props":581,"children":582},{},[583],{"type":539,"value":584},"输入：root = [1,2,3]\n",{"type":534,"tag":575,"props":586,"children":588},{"class":577,"line":587},2,[589],{"type":534,"tag":575,"props":590,"children":591},{},[592],{"type":539,"value":593},"输出：25\n",{"type":534,"tag":575,"props":595,"children":597},{"class":577,"line":596},3,[598],{"type":534,"tag":575,"props":599,"children":600},{},[601],{"type":539,"value":602},"解释：\n",{"type":534,"tag":575,"props":604,"children":606},{"class":577,"line":605},4,[607],{"type":534,"tag":575,"props":608,"children":609},{},[610],{"type":539,"value":611},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":534,"tag":575,"props":613,"children":615},{"class":577,"line":614},5,[616],{"type":534,"tag":575,"props":617,"children":618},{},[619],{"type":539,"value":620},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":534,"tag":575,"props":622,"children":624},{"class":577,"line":623},6,[625],{"type":534,"tag":575,"props":626,"children":627},{},[628],{"type":539,"value":629},"因此，数字总和 = 12 + 13 = 25\n",{"type":534,"tag":535,"props":631,"children":632},{},[633],{"type":539,"value":634},"示例 2：",{"type":534,"tag":535,"props":636,"children":637},{},[638],{"type":534,"tag":559,"props":639,"children":642},{"alt":640,"src":641},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":534,"tag":565,"props":644,"children":646},{"className":567,"code":645,"language":539,"meta":527,"style":527},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[647],{"type":534,"tag":571,"props":648,"children":649},{"__ignoreMap":527},[650,658,666,673,681,689,697],{"type":534,"tag":575,"props":651,"children":652},{"class":577,"line":578},[653],{"type":534,"tag":575,"props":654,"children":655},{},[656],{"type":539,"value":657},"输入：root = [4,9,0,5,1]\n",{"type":534,"tag":575,"props":659,"children":660},{"class":577,"line":587},[661],{"type":534,"tag":575,"props":662,"children":663},{},[664],{"type":539,"value":665},"输出：1026\n",{"type":534,"tag":575,"props":667,"children":668},{"class":577,"line":596},[669],{"type":534,"tag":575,"props":670,"children":671},{},[672],{"type":539,"value":602},{"type":534,"tag":575,"props":674,"children":675},{"class":577,"line":605},[676],{"type":534,"tag":575,"props":677,"children":678},{},[679],{"type":539,"value":680},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":534,"tag":575,"props":682,"children":683},{"class":577,"line":614},[684],{"type":534,"tag":575,"props":685,"children":686},{},[687],{"type":539,"value":688},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":534,"tag":575,"props":690,"children":691},{"class":577,"line":623},[692],{"type":534,"tag":575,"props":693,"children":694},{},[695],{"type":539,"value":696},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":534,"tag":575,"props":698,"children":700},{"class":577,"line":699},7,[701],{"type":534,"tag":575,"props":702,"children":703},{},[704],{"type":539,"value":705},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":534,"tag":535,"props":707,"children":708},{},[709],{"type":539,"value":710},"提示：",{"type":534,"tag":712,"props":713,"children":714},"ul",{},[715,721,726],{"type":534,"tag":716,"props":717,"children":718},"li",{},[719],{"type":539,"value":720},"树中节点的数目在范围 [1, 1000] 内",{"type":534,"tag":716,"props":722,"children":723},{},[724],{"type":539,"value":725},"0 \u003C= Node.val \u003C= 9",{"type":534,"tag":716,"props":727,"children":728},{},[729],{"type":539,"value":730},"树的深度不超过 10",{"type":534,"tag":732,"props":733,"children":735},"h2",{"id":734},"解题思路",[736],{"type":539,"value":734},{"type":534,"tag":732,"props":738,"children":740},{"id":739},"实现",[741],{"type":539,"value":739},{"type":534,"tag":743,"props":744,"children":746},"h3",{"id":745},"深度优先搜素-dfs",[747],{"type":539,"value":748},"深度优先搜素 - dfs",{"type":534,"tag":565,"props":750,"children":754},{"className":751,"code":752,"language":753,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[755],{"type":534,"tag":571,"props":756,"children":757},{"__ignoreMap":527},[758,767,775,783,839,902,955,1007,1016,1026,1034,1075,1105,1113,1153,1202,1244,1298,1371,1449,1458,1491],{"type":534,"tag":575,"props":759,"children":760},{"class":577,"line":578},[761],{"type":534,"tag":575,"props":762,"children":764},{"style":763},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[765],{"type":539,"value":766},"/**\n",{"type":534,"tag":575,"props":768,"children":769},{"class":577,"line":587},[770],{"type":534,"tag":575,"props":771,"children":772},{"style":763},[773],{"type":539,"value":774}," * Definition for a binary tree node.\n",{"type":534,"tag":575,"props":776,"children":777},{"class":577,"line":596},[778],{"type":534,"tag":575,"props":779,"children":780},{"style":763},[781],{"type":539,"value":782}," */\n",{"type":534,"tag":575,"props":784,"children":785},{"class":577,"line":605},[786,792,798,804,810,815,820,824,829,834],{"type":534,"tag":575,"props":787,"children":789},{"style":788},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[790],{"type":539,"value":791},"function",{"type":534,"tag":575,"props":793,"children":795},{"style":794},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[796],{"type":539,"value":797}," TreeNode",{"type":534,"tag":575,"props":799,"children":801},{"style":800},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[802],{"type":539,"value":803},"(",{"type":534,"tag":575,"props":805,"children":807},{"style":806},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[808],{"type":539,"value":809},"val",{"type":534,"tag":575,"props":811,"children":812},{"style":800},[813],{"type":539,"value":814},",",{"type":534,"tag":575,"props":816,"children":817},{"style":806},[818],{"type":539,"value":819}," left",{"type":534,"tag":575,"props":821,"children":822},{"style":800},[823],{"type":539,"value":814},{"type":534,"tag":575,"props":825,"children":826},{"style":806},[827],{"type":539,"value":828}," right",{"type":534,"tag":575,"props":830,"children":831},{"style":800},[832],{"type":539,"value":833},")",{"type":534,"tag":575,"props":835,"children":836},{"style":800},[837],{"type":539,"value":838}," {\n",{"type":534,"tag":575,"props":840,"children":841},{"class":577,"line":614},[842,848,853,857,862,867,872,877,882,888,893,897],{"type":534,"tag":575,"props":843,"children":845},{"style":844},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[846],{"type":539,"value":847},"  this",{"type":534,"tag":575,"props":849,"children":850},{"style":800},[851],{"type":539,"value":852},".",{"type":534,"tag":575,"props":854,"children":855},{"style":806},[856],{"type":539,"value":809},{"type":534,"tag":575,"props":858,"children":859},{"style":800},[860],{"type":539,"value":861}," =",{"type":534,"tag":575,"props":863,"children":864},{"style":806},[865],{"type":539,"value":866}," val",{"type":534,"tag":575,"props":868,"children":869},{"style":788},[870],{"type":539,"value":871}," ===",{"type":534,"tag":575,"props":873,"children":874},{"style":788},[875],{"type":539,"value":876}," undefined",{"type":534,"tag":575,"props":878,"children":879},{"style":788},[880],{"type":539,"value":881}," ?",{"type":534,"tag":575,"props":883,"children":885},{"style":884},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[886],{"type":539,"value":887}," 0",{"type":534,"tag":575,"props":889,"children":890},{"style":788},[891],{"type":539,"value":892}," :",{"type":534,"tag":575,"props":894,"children":895},{"style":806},[896],{"type":539,"value":866},{"type":534,"tag":575,"props":898,"children":899},{"style":800},[900],{"type":539,"value":901},";\n",{"type":534,"tag":575,"props":903,"children":904},{"class":577,"line":623},[905,909,913,918,922,926,930,934,938,943,947,951],{"type":534,"tag":575,"props":906,"children":907},{"style":844},[908],{"type":539,"value":847},{"type":534,"tag":575,"props":910,"children":911},{"style":800},[912],{"type":539,"value":852},{"type":534,"tag":575,"props":914,"children":915},{"style":806},[916],{"type":539,"value":917},"left",{"type":534,"tag":575,"props":919,"children":920},{"style":800},[921],{"type":539,"value":861},{"type":534,"tag":575,"props":923,"children":924},{"style":806},[925],{"type":539,"value":819},{"type":534,"tag":575,"props":927,"children":928},{"style":788},[929],{"type":539,"value":871},{"type":534,"tag":575,"props":931,"children":932},{"style":788},[933],{"type":539,"value":876},{"type":534,"tag":575,"props":935,"children":936},{"style":788},[937],{"type":539,"value":881},{"type":534,"tag":575,"props":939,"children":940},{"style":788},[941],{"type":539,"value":942}," null",{"type":534,"tag":575,"props":944,"children":945},{"style":788},[946],{"type":539,"value":892},{"type":534,"tag":575,"props":948,"children":949},{"style":806},[950],{"type":539,"value":819},{"type":534,"tag":575,"props":952,"children":953},{"style":800},[954],{"type":539,"value":901},{"type":534,"tag":575,"props":956,"children":957},{"class":577,"line":699},[958,962,966,971,975,979,983,987,991,995,999,1003],{"type":534,"tag":575,"props":959,"children":960},{"style":844},[961],{"type":539,"value":847},{"type":534,"tag":575,"props":963,"children":964},{"style":800},[965],{"type":539,"value":852},{"type":534,"tag":575,"props":967,"children":968},{"style":806},[969],{"type":539,"value":970},"right",{"type":534,"tag":575,"props":972,"children":973},{"style":800},[974],{"type":539,"value":861},{"type":534,"tag":575,"props":976,"children":977},{"style":806},[978],{"type":539,"value":828},{"type":534,"tag":575,"props":980,"children":981},{"style":788},[982],{"type":539,"value":871},{"type":534,"tag":575,"props":984,"children":985},{"style":788},[986],{"type":539,"value":876},{"type":534,"tag":575,"props":988,"children":989},{"style":788},[990],{"type":539,"value":881},{"type":534,"tag":575,"props":992,"children":993},{"style":788},[994],{"type":539,"value":942},{"type":534,"tag":575,"props":996,"children":997},{"style":788},[998],{"type":539,"value":892},{"type":534,"tag":575,"props":1000,"children":1001},{"style":806},[1002],{"type":539,"value":828},{"type":534,"tag":575,"props":1004,"children":1005},{"style":800},[1006],{"type":539,"value":901},{"type":534,"tag":575,"props":1008,"children":1010},{"class":577,"line":1009},8,[1011],{"type":534,"tag":575,"props":1012,"children":1013},{"style":800},[1014],{"type":539,"value":1015},"}\n",{"type":534,"tag":575,"props":1017,"children":1019},{"class":577,"line":1018},9,[1020],{"type":534,"tag":575,"props":1021,"children":1023},{"emptyLinePlaceholder":1022},true,[1024],{"type":539,"value":1025},"\n",{"type":534,"tag":575,"props":1027,"children":1029},{"class":577,"line":1028},10,[1030],{"type":534,"tag":575,"props":1031,"children":1032},{"style":763},[1033],{"type":539,"value":766},{"type":534,"tag":575,"props":1035,"children":1037},{"class":577,"line":1036},11,[1038,1043,1048,1054,1059,1065,1070],{"type":534,"tag":575,"props":1039,"children":1040},{"style":763},[1041],{"type":539,"value":1042}," * ",{"type":534,"tag":575,"props":1044,"children":1045},{"style":800},[1046],{"type":539,"value":1047},"@",{"type":534,"tag":575,"props":1049,"children":1051},{"style":1050},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1052],{"type":539,"value":1053},"param",{"type":534,"tag":575,"props":1055,"children":1056},{"style":800},[1057],{"type":539,"value":1058}," {",{"type":534,"tag":575,"props":1060,"children":1062},{"style":1061},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1063],{"type":539,"value":1064},"TreeNode",{"type":534,"tag":575,"props":1066,"children":1067},{"style":800},[1068],{"type":539,"value":1069},"}",{"type":534,"tag":575,"props":1071,"children":1072},{"style":806},[1073],{"type":539,"value":1074}," root\n",{"type":534,"tag":575,"props":1076,"children":1078},{"class":577,"line":1077},12,[1079,1083,1087,1092,1096,1101],{"type":534,"tag":575,"props":1080,"children":1081},{"style":763},[1082],{"type":539,"value":1042},{"type":534,"tag":575,"props":1084,"children":1085},{"style":800},[1086],{"type":539,"value":1047},{"type":534,"tag":575,"props":1088,"children":1089},{"style":1050},[1090],{"type":539,"value":1091},"return",{"type":534,"tag":575,"props":1093,"children":1094},{"style":800},[1095],{"type":539,"value":1058},{"type":534,"tag":575,"props":1097,"children":1098},{"style":1061},[1099],{"type":539,"value":1100},"number",{"type":534,"tag":575,"props":1102,"children":1103},{"style":800},[1104],{"type":539,"value":1015},{"type":534,"tag":575,"props":1106,"children":1108},{"class":577,"line":1107},13,[1109],{"type":534,"tag":575,"props":1110,"children":1111},{"style":763},[1112],{"type":539,"value":782},{"type":534,"tag":575,"props":1114,"children":1116},{"class":577,"line":1115},14,[1117,1122,1127,1131,1136,1141,1145,1149],{"type":534,"tag":575,"props":1118,"children":1119},{"style":788},[1120],{"type":539,"value":1121},"var",{"type":534,"tag":575,"props":1123,"children":1124},{"style":794},[1125],{"type":539,"value":1126}," sumNumbers",{"type":534,"tag":575,"props":1128,"children":1129},{"style":800},[1130],{"type":539,"value":861},{"type":534,"tag":575,"props":1132,"children":1133},{"style":788},[1134],{"type":539,"value":1135}," function",{"type":534,"tag":575,"props":1137,"children":1138},{"style":800},[1139],{"type":539,"value":1140}," (",{"type":534,"tag":575,"props":1142,"children":1143},{"style":806},[1144],{"type":539,"value":531},{"type":534,"tag":575,"props":1146,"children":1147},{"style":800},[1148],{"type":539,"value":833},{"type":534,"tag":575,"props":1150,"children":1151},{"style":800},[1152],{"type":539,"value":838},{"type":534,"tag":575,"props":1154,"children":1156},{"class":577,"line":1155},15,[1157,1162,1167,1171,1175,1180,1184,1189,1193,1198],{"type":534,"tag":575,"props":1158,"children":1159},{"style":788},[1160],{"type":539,"value":1161},"  const",{"type":534,"tag":575,"props":1163,"children":1164},{"style":794},[1165],{"type":539,"value":1166}," dfs",{"type":534,"tag":575,"props":1168,"children":1169},{"style":800},[1170],{"type":539,"value":861},{"type":534,"tag":575,"props":1172,"children":1173},{"style":800},[1174],{"type":539,"value":1140},{"type":534,"tag":575,"props":1176,"children":1177},{"style":806},[1178],{"type":539,"value":1179},"node",{"type":534,"tag":575,"props":1181,"children":1182},{"style":800},[1183],{"type":539,"value":814},{"type":534,"tag":575,"props":1185,"children":1186},{"style":806},[1187],{"type":539,"value":1188}," prev",{"type":534,"tag":575,"props":1190,"children":1191},{"style":800},[1192],{"type":539,"value":833},{"type":534,"tag":575,"props":1194,"children":1195},{"style":800},[1196],{"type":539,"value":1197}," =>",{"type":534,"tag":575,"props":1199,"children":1200},{"style":800},[1201],{"type":539,"value":838},{"type":534,"tag":575,"props":1203,"children":1205},{"class":577,"line":1204},16,[1206,1211,1215,1219,1223,1227,1231,1236,1240],{"type":534,"tag":575,"props":1207,"children":1208},{"style":1050},[1209],{"type":539,"value":1210},"    if",{"type":534,"tag":575,"props":1212,"children":1213},{"style":800},[1214],{"type":539,"value":1140},{"type":534,"tag":575,"props":1216,"children":1217},{"style":806},[1218],{"type":539,"value":1179},{"type":534,"tag":575,"props":1220,"children":1221},{"style":788},[1222],{"type":539,"value":871},{"type":534,"tag":575,"props":1224,"children":1225},{"style":788},[1226],{"type":539,"value":942},{"type":534,"tag":575,"props":1228,"children":1229},{"style":800},[1230],{"type":539,"value":833},{"type":534,"tag":575,"props":1232,"children":1233},{"style":1050},[1234],{"type":539,"value":1235}," return",{"type":534,"tag":575,"props":1237,"children":1238},{"style":884},[1239],{"type":539,"value":887},{"type":534,"tag":575,"props":1241,"children":1242},{"style":800},[1243],{"type":539,"value":901},{"type":534,"tag":575,"props":1245,"children":1247},{"class":577,"line":1246},17,[1248,1253,1258,1262,1266,1271,1276,1281,1286,1290,1294],{"type":534,"tag":575,"props":1249,"children":1250},{"style":788},[1251],{"type":539,"value":1252},"    let",{"type":534,"tag":575,"props":1254,"children":1255},{"style":806},[1256],{"type":539,"value":1257}," sum",{"type":534,"tag":575,"props":1259,"children":1260},{"style":800},[1261],{"type":539,"value":861},{"type":534,"tag":575,"props":1263,"children":1264},{"style":806},[1265],{"type":539,"value":1188},{"type":534,"tag":575,"props":1267,"children":1268},{"style":788},[1269],{"type":539,"value":1270}," *",{"type":534,"tag":575,"props":1272,"children":1273},{"style":884},[1274],{"type":539,"value":1275}," 10",{"type":534,"tag":575,"props":1277,"children":1278},{"style":788},[1279],{"type":539,"value":1280}," +",{"type":534,"tag":575,"props":1282,"children":1283},{"style":806},[1284],{"type":539,"value":1285}," node",{"type":534,"tag":575,"props":1287,"children":1288},{"style":800},[1289],{"type":539,"value":852},{"type":534,"tag":575,"props":1291,"children":1292},{"style":806},[1293],{"type":539,"value":809},{"type":534,"tag":575,"props":1295,"children":1296},{"style":800},[1297],{"type":539,"value":901},{"type":534,"tag":575,"props":1299,"children":1301},{"class":577,"line":1300},18,[1302,1306,1310,1314,1318,1322,1326,1330,1335,1339,1343,1347,1351,1355,1359,1363,1367],{"type":534,"tag":575,"props":1303,"children":1304},{"style":1050},[1305],{"type":539,"value":1210},{"type":534,"tag":575,"props":1307,"children":1308},{"style":800},[1309],{"type":539,"value":1140},{"type":534,"tag":575,"props":1311,"children":1312},{"style":806},[1313],{"type":539,"value":1179},{"type":534,"tag":575,"props":1315,"children":1316},{"style":800},[1317],{"type":539,"value":852},{"type":534,"tag":575,"props":1319,"children":1320},{"style":806},[1321],{"type":539,"value":917},{"type":534,"tag":575,"props":1323,"children":1324},{"style":788},[1325],{"type":539,"value":871},{"type":534,"tag":575,"props":1327,"children":1328},{"style":788},[1329],{"type":539,"value":942},{"type":534,"tag":575,"props":1331,"children":1332},{"style":788},[1333],{"type":539,"value":1334}," &&",{"type":534,"tag":575,"props":1336,"children":1337},{"style":806},[1338],{"type":539,"value":1285},{"type":534,"tag":575,"props":1340,"children":1341},{"style":800},[1342],{"type":539,"value":852},{"type":534,"tag":575,"props":1344,"children":1345},{"style":806},[1346],{"type":539,"value":970},{"type":534,"tag":575,"props":1348,"children":1349},{"style":788},[1350],{"type":539,"value":871},{"type":534,"tag":575,"props":1352,"children":1353},{"style":788},[1354],{"type":539,"value":942},{"type":534,"tag":575,"props":1356,"children":1357},{"style":800},[1358],{"type":539,"value":833},{"type":534,"tag":575,"props":1360,"children":1361},{"style":1050},[1362],{"type":539,"value":1235},{"type":534,"tag":575,"props":1364,"children":1365},{"style":806},[1366],{"type":539,"value":1257},{"type":534,"tag":575,"props":1368,"children":1369},{"style":800},[1370],{"type":539,"value":901},{"type":534,"tag":575,"props":1372,"children":1374},{"class":577,"line":1373},19,[1375,1380,1384,1388,1392,1396,1400,1404,1408,1412,1416,1420,1424,1428,1432,1436,1440,1444],{"type":534,"tag":575,"props":1376,"children":1377},{"style":1050},[1378],{"type":539,"value":1379},"    return",{"type":534,"tag":575,"props":1381,"children":1382},{"style":794},[1383],{"type":539,"value":1166},{"type":534,"tag":575,"props":1385,"children":1386},{"style":800},[1387],{"type":539,"value":803},{"type":534,"tag":575,"props":1389,"children":1390},{"style":806},[1391],{"type":539,"value":1179},{"type":534,"tag":575,"props":1393,"children":1394},{"style":800},[1395],{"type":539,"value":852},{"type":534,"tag":575,"props":1397,"children":1398},{"style":806},[1399],{"type":539,"value":917},{"type":534,"tag":575,"props":1401,"children":1402},{"style":800},[1403],{"type":539,"value":814},{"type":534,"tag":575,"props":1405,"children":1406},{"style":806},[1407],{"type":539,"value":1257},{"type":534,"tag":575,"props":1409,"children":1410},{"style":800},[1411],{"type":539,"value":833},{"type":534,"tag":575,"props":1413,"children":1414},{"style":788},[1415],{"type":539,"value":1280},{"type":534,"tag":575,"props":1417,"children":1418},{"style":794},[1419],{"type":539,"value":1166},{"type":534,"tag":575,"props":1421,"children":1422},{"style":800},[1423],{"type":539,"value":803},{"type":534,"tag":575,"props":1425,"children":1426},{"style":806},[1427],{"type":539,"value":1179},{"type":534,"tag":575,"props":1429,"children":1430},{"style":800},[1431],{"type":539,"value":852},{"type":534,"tag":575,"props":1433,"children":1434},{"style":806},[1435],{"type":539,"value":970},{"type":534,"tag":575,"props":1437,"children":1438},{"style":800},[1439],{"type":539,"value":814},{"type":534,"tag":575,"props":1441,"children":1442},{"style":806},[1443],{"type":539,"value":1257},{"type":534,"tag":575,"props":1445,"children":1446},{"style":800},[1447],{"type":539,"value":1448},");\n",{"type":534,"tag":575,"props":1450,"children":1452},{"class":577,"line":1451},20,[1453],{"type":534,"tag":575,"props":1454,"children":1455},{"style":800},[1456],{"type":539,"value":1457},"  };\n",{"type":534,"tag":575,"props":1459,"children":1461},{"class":577,"line":1460},21,[1462,1467,1471,1475,1479,1483,1487],{"type":534,"tag":575,"props":1463,"children":1464},{"style":1050},[1465],{"type":539,"value":1466},"  return",{"type":534,"tag":575,"props":1468,"children":1469},{"style":794},[1470],{"type":539,"value":1166},{"type":534,"tag":575,"props":1472,"children":1473},{"style":800},[1474],{"type":539,"value":803},{"type":534,"tag":575,"props":1476,"children":1477},{"style":806},[1478],{"type":539,"value":531},{"type":534,"tag":575,"props":1480,"children":1481},{"style":800},[1482],{"type":539,"value":814},{"type":534,"tag":575,"props":1484,"children":1485},{"style":884},[1486],{"type":539,"value":887},{"type":534,"tag":575,"props":1488,"children":1489},{"style":800},[1490],{"type":539,"value":1448},{"type":534,"tag":575,"props":1492,"children":1494},{"class":577,"line":1493},22,[1495],{"type":534,"tag":575,"props":1496,"children":1497},{"style":800},[1498],{"type":539,"value":1499},"};\n",{"type":534,"tag":1501,"props":1502,"children":1503},"style",{},[1504],{"type":539,"value":1505},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":614,"depth":614,"links":1507},[1508,1509],{"id":734,"depth":587,"text":734},{"id":739,"depth":587,"text":739,"children":1510},[1511],{"id":745,"depth":596,"text":748},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1518,1520],{"_path":165,"title":164,"description":1519},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":171,"title":170,"description":1521},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1714096143424]