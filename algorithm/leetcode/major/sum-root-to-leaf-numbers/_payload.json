[{"data":1,"prerenderedAt":1538},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":540,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1533},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":168,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":167,"description":544,"url":545,"body":546,"_type":1528,"_id":1529,"_source":1530,"_file":1531,"_extension":1532},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":547,"children":548,"toc":1522},"root",[549,556,561,566,571,580,646,651,659,722,727,747,753,758,765,1516],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"叶节点 是指没有子节点的节点。",{"type":550,"tag":551,"props":567,"children":568},{},[569],{"type":555,"value":570},"示例 1：",{"type":550,"tag":551,"props":572,"children":573},{},[574],{"type":550,"tag":575,"props":576,"children":579},"img",{"alt":577,"src":578},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":550,"tag":581,"props":582,"children":585},"pre",{"className":583,"code":584,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[586],{"type":550,"tag":587,"props":588,"children":589},"code",{"__ignoreMap":543},[590,601,610,619,628,637],{"type":550,"tag":591,"props":592,"children":595},"span",{"class":593,"line":594},"line",1,[596],{"type":550,"tag":591,"props":597,"children":598},{},[599],{"type":555,"value":600},"输入：root = [1,2,3]\n",{"type":550,"tag":591,"props":602,"children":604},{"class":593,"line":603},2,[605],{"type":550,"tag":591,"props":606,"children":607},{},[608],{"type":555,"value":609},"输出：25\n",{"type":550,"tag":591,"props":611,"children":613},{"class":593,"line":612},3,[614],{"type":550,"tag":591,"props":615,"children":616},{},[617],{"type":555,"value":618},"解释：\n",{"type":550,"tag":591,"props":620,"children":622},{"class":593,"line":621},4,[623],{"type":550,"tag":591,"props":624,"children":625},{},[626],{"type":555,"value":627},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":550,"tag":591,"props":629,"children":631},{"class":593,"line":630},5,[632],{"type":550,"tag":591,"props":633,"children":634},{},[635],{"type":555,"value":636},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":550,"tag":591,"props":638,"children":640},{"class":593,"line":639},6,[641],{"type":550,"tag":591,"props":642,"children":643},{},[644],{"type":555,"value":645},"因此，数字总和 = 12 + 13 = 25\n",{"type":550,"tag":551,"props":647,"children":648},{},[649],{"type":555,"value":650},"示例 2：",{"type":550,"tag":551,"props":652,"children":653},{},[654],{"type":550,"tag":575,"props":655,"children":658},{"alt":656,"src":657},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":550,"tag":581,"props":660,"children":662},{"className":583,"code":661,"language":555,"meta":543,"style":543},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[663],{"type":550,"tag":587,"props":664,"children":665},{"__ignoreMap":543},[666,674,682,689,697,705,713],{"type":550,"tag":591,"props":667,"children":668},{"class":593,"line":594},[669],{"type":550,"tag":591,"props":670,"children":671},{},[672],{"type":555,"value":673},"输入：root = [4,9,0,5,1]\n",{"type":550,"tag":591,"props":675,"children":676},{"class":593,"line":603},[677],{"type":550,"tag":591,"props":678,"children":679},{},[680],{"type":555,"value":681},"输出：1026\n",{"type":550,"tag":591,"props":683,"children":684},{"class":593,"line":612},[685],{"type":550,"tag":591,"props":686,"children":687},{},[688],{"type":555,"value":618},{"type":550,"tag":591,"props":690,"children":691},{"class":593,"line":621},[692],{"type":550,"tag":591,"props":693,"children":694},{},[695],{"type":555,"value":696},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":550,"tag":591,"props":698,"children":699},{"class":593,"line":630},[700],{"type":550,"tag":591,"props":701,"children":702},{},[703],{"type":555,"value":704},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":550,"tag":591,"props":706,"children":707},{"class":593,"line":639},[708],{"type":550,"tag":591,"props":709,"children":710},{},[711],{"type":555,"value":712},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":550,"tag":591,"props":714,"children":716},{"class":593,"line":715},7,[717],{"type":550,"tag":591,"props":718,"children":719},{},[720],{"type":555,"value":721},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":550,"tag":551,"props":723,"children":724},{},[725],{"type":555,"value":726},"提示：",{"type":550,"tag":728,"props":729,"children":730},"ul",{},[731,737,742],{"type":550,"tag":732,"props":733,"children":734},"li",{},[735],{"type":555,"value":736},"树中节点的数目在范围 [1, 1000] 内",{"type":550,"tag":732,"props":738,"children":739},{},[740],{"type":555,"value":741},"0 \u003C= Node.val \u003C= 9",{"type":550,"tag":732,"props":743,"children":744},{},[745],{"type":555,"value":746},"树的深度不超过 10",{"type":550,"tag":748,"props":749,"children":751},"h2",{"id":750},"解题思路",[752],{"type":555,"value":750},{"type":550,"tag":748,"props":754,"children":756},{"id":755},"实现",[757],{"type":555,"value":755},{"type":550,"tag":759,"props":760,"children":762},"h3",{"id":761},"深度优先搜素-dfs",[763],{"type":555,"value":764},"深度优先搜素 - dfs",{"type":550,"tag":581,"props":766,"children":770},{"className":767,"code":768,"language":769,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[771],{"type":550,"tag":587,"props":772,"children":773},{"__ignoreMap":543},[774,783,791,799,855,918,971,1023,1032,1042,1050,1091,1121,1129,1169,1218,1260,1314,1387,1465,1474,1507],{"type":550,"tag":591,"props":775,"children":776},{"class":593,"line":594},[777],{"type":550,"tag":591,"props":778,"children":780},{"style":779},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[781],{"type":555,"value":782},"/**\n",{"type":550,"tag":591,"props":784,"children":785},{"class":593,"line":603},[786],{"type":550,"tag":591,"props":787,"children":788},{"style":779},[789],{"type":555,"value":790}," * Definition for a binary tree node.\n",{"type":550,"tag":591,"props":792,"children":793},{"class":593,"line":612},[794],{"type":550,"tag":591,"props":795,"children":796},{"style":779},[797],{"type":555,"value":798}," */\n",{"type":550,"tag":591,"props":800,"children":801},{"class":593,"line":621},[802,808,814,820,826,831,836,840,845,850],{"type":550,"tag":591,"props":803,"children":805},{"style":804},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[806],{"type":555,"value":807},"function",{"type":550,"tag":591,"props":809,"children":811},{"style":810},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[812],{"type":555,"value":813}," TreeNode",{"type":550,"tag":591,"props":815,"children":817},{"style":816},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[818],{"type":555,"value":819},"(",{"type":550,"tag":591,"props":821,"children":823},{"style":822},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[824],{"type":555,"value":825},"val",{"type":550,"tag":591,"props":827,"children":828},{"style":816},[829],{"type":555,"value":830},",",{"type":550,"tag":591,"props":832,"children":833},{"style":822},[834],{"type":555,"value":835}," left",{"type":550,"tag":591,"props":837,"children":838},{"style":816},[839],{"type":555,"value":830},{"type":550,"tag":591,"props":841,"children":842},{"style":822},[843],{"type":555,"value":844}," right",{"type":550,"tag":591,"props":846,"children":847},{"style":816},[848],{"type":555,"value":849},")",{"type":550,"tag":591,"props":851,"children":852},{"style":816},[853],{"type":555,"value":854}," {\n",{"type":550,"tag":591,"props":856,"children":857},{"class":593,"line":630},[858,864,869,873,878,883,888,893,898,904,909,913],{"type":550,"tag":591,"props":859,"children":861},{"style":860},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[862],{"type":555,"value":863},"  this",{"type":550,"tag":591,"props":865,"children":866},{"style":816},[867],{"type":555,"value":868},".",{"type":550,"tag":591,"props":870,"children":871},{"style":822},[872],{"type":555,"value":825},{"type":550,"tag":591,"props":874,"children":875},{"style":816},[876],{"type":555,"value":877}," =",{"type":550,"tag":591,"props":879,"children":880},{"style":822},[881],{"type":555,"value":882}," val",{"type":550,"tag":591,"props":884,"children":885},{"style":804},[886],{"type":555,"value":887}," ===",{"type":550,"tag":591,"props":889,"children":890},{"style":804},[891],{"type":555,"value":892}," undefined",{"type":550,"tag":591,"props":894,"children":895},{"style":804},[896],{"type":555,"value":897}," ?",{"type":550,"tag":591,"props":899,"children":901},{"style":900},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[902],{"type":555,"value":903}," 0",{"type":550,"tag":591,"props":905,"children":906},{"style":804},[907],{"type":555,"value":908}," :",{"type":550,"tag":591,"props":910,"children":911},{"style":822},[912],{"type":555,"value":882},{"type":550,"tag":591,"props":914,"children":915},{"style":816},[916],{"type":555,"value":917},";\n",{"type":550,"tag":591,"props":919,"children":920},{"class":593,"line":639},[921,925,929,934,938,942,946,950,954,959,963,967],{"type":550,"tag":591,"props":922,"children":923},{"style":860},[924],{"type":555,"value":863},{"type":550,"tag":591,"props":926,"children":927},{"style":816},[928],{"type":555,"value":868},{"type":550,"tag":591,"props":930,"children":931},{"style":822},[932],{"type":555,"value":933},"left",{"type":550,"tag":591,"props":935,"children":936},{"style":816},[937],{"type":555,"value":877},{"type":550,"tag":591,"props":939,"children":940},{"style":822},[941],{"type":555,"value":835},{"type":550,"tag":591,"props":943,"children":944},{"style":804},[945],{"type":555,"value":887},{"type":550,"tag":591,"props":947,"children":948},{"style":804},[949],{"type":555,"value":892},{"type":550,"tag":591,"props":951,"children":952},{"style":804},[953],{"type":555,"value":897},{"type":550,"tag":591,"props":955,"children":956},{"style":804},[957],{"type":555,"value":958}," null",{"type":550,"tag":591,"props":960,"children":961},{"style":804},[962],{"type":555,"value":908},{"type":550,"tag":591,"props":964,"children":965},{"style":822},[966],{"type":555,"value":835},{"type":550,"tag":591,"props":968,"children":969},{"style":816},[970],{"type":555,"value":917},{"type":550,"tag":591,"props":972,"children":973},{"class":593,"line":715},[974,978,982,987,991,995,999,1003,1007,1011,1015,1019],{"type":550,"tag":591,"props":975,"children":976},{"style":860},[977],{"type":555,"value":863},{"type":550,"tag":591,"props":979,"children":980},{"style":816},[981],{"type":555,"value":868},{"type":550,"tag":591,"props":983,"children":984},{"style":822},[985],{"type":555,"value":986},"right",{"type":550,"tag":591,"props":988,"children":989},{"style":816},[990],{"type":555,"value":877},{"type":550,"tag":591,"props":992,"children":993},{"style":822},[994],{"type":555,"value":844},{"type":550,"tag":591,"props":996,"children":997},{"style":804},[998],{"type":555,"value":887},{"type":550,"tag":591,"props":1000,"children":1001},{"style":804},[1002],{"type":555,"value":892},{"type":550,"tag":591,"props":1004,"children":1005},{"style":804},[1006],{"type":555,"value":897},{"type":550,"tag":591,"props":1008,"children":1009},{"style":804},[1010],{"type":555,"value":958},{"type":550,"tag":591,"props":1012,"children":1013},{"style":804},[1014],{"type":555,"value":908},{"type":550,"tag":591,"props":1016,"children":1017},{"style":822},[1018],{"type":555,"value":844},{"type":550,"tag":591,"props":1020,"children":1021},{"style":816},[1022],{"type":555,"value":917},{"type":550,"tag":591,"props":1024,"children":1026},{"class":593,"line":1025},8,[1027],{"type":550,"tag":591,"props":1028,"children":1029},{"style":816},[1030],{"type":555,"value":1031},"}\n",{"type":550,"tag":591,"props":1033,"children":1035},{"class":593,"line":1034},9,[1036],{"type":550,"tag":591,"props":1037,"children":1039},{"emptyLinePlaceholder":1038},true,[1040],{"type":555,"value":1041},"\n",{"type":550,"tag":591,"props":1043,"children":1045},{"class":593,"line":1044},10,[1046],{"type":550,"tag":591,"props":1047,"children":1048},{"style":779},[1049],{"type":555,"value":782},{"type":550,"tag":591,"props":1051,"children":1053},{"class":593,"line":1052},11,[1054,1059,1064,1070,1075,1081,1086],{"type":550,"tag":591,"props":1055,"children":1056},{"style":779},[1057],{"type":555,"value":1058}," * ",{"type":550,"tag":591,"props":1060,"children":1061},{"style":816},[1062],{"type":555,"value":1063},"@",{"type":550,"tag":591,"props":1065,"children":1067},{"style":1066},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1068],{"type":555,"value":1069},"param",{"type":550,"tag":591,"props":1071,"children":1072},{"style":816},[1073],{"type":555,"value":1074}," {",{"type":550,"tag":591,"props":1076,"children":1078},{"style":1077},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1079],{"type":555,"value":1080},"TreeNode",{"type":550,"tag":591,"props":1082,"children":1083},{"style":816},[1084],{"type":555,"value":1085},"}",{"type":550,"tag":591,"props":1087,"children":1088},{"style":822},[1089],{"type":555,"value":1090}," root\n",{"type":550,"tag":591,"props":1092,"children":1094},{"class":593,"line":1093},12,[1095,1099,1103,1108,1112,1117],{"type":550,"tag":591,"props":1096,"children":1097},{"style":779},[1098],{"type":555,"value":1058},{"type":550,"tag":591,"props":1100,"children":1101},{"style":816},[1102],{"type":555,"value":1063},{"type":550,"tag":591,"props":1104,"children":1105},{"style":1066},[1106],{"type":555,"value":1107},"return",{"type":550,"tag":591,"props":1109,"children":1110},{"style":816},[1111],{"type":555,"value":1074},{"type":550,"tag":591,"props":1113,"children":1114},{"style":1077},[1115],{"type":555,"value":1116},"number",{"type":550,"tag":591,"props":1118,"children":1119},{"style":816},[1120],{"type":555,"value":1031},{"type":550,"tag":591,"props":1122,"children":1124},{"class":593,"line":1123},13,[1125],{"type":550,"tag":591,"props":1126,"children":1127},{"style":779},[1128],{"type":555,"value":798},{"type":550,"tag":591,"props":1130,"children":1132},{"class":593,"line":1131},14,[1133,1138,1143,1147,1152,1157,1161,1165],{"type":550,"tag":591,"props":1134,"children":1135},{"style":804},[1136],{"type":555,"value":1137},"var",{"type":550,"tag":591,"props":1139,"children":1140},{"style":810},[1141],{"type":555,"value":1142}," sumNumbers",{"type":550,"tag":591,"props":1144,"children":1145},{"style":816},[1146],{"type":555,"value":877},{"type":550,"tag":591,"props":1148,"children":1149},{"style":804},[1150],{"type":555,"value":1151}," function",{"type":550,"tag":591,"props":1153,"children":1154},{"style":816},[1155],{"type":555,"value":1156}," (",{"type":550,"tag":591,"props":1158,"children":1159},{"style":822},[1160],{"type":555,"value":547},{"type":550,"tag":591,"props":1162,"children":1163},{"style":816},[1164],{"type":555,"value":849},{"type":550,"tag":591,"props":1166,"children":1167},{"style":816},[1168],{"type":555,"value":854},{"type":550,"tag":591,"props":1170,"children":1172},{"class":593,"line":1171},15,[1173,1178,1183,1187,1191,1196,1200,1205,1209,1214],{"type":550,"tag":591,"props":1174,"children":1175},{"style":804},[1176],{"type":555,"value":1177},"  const",{"type":550,"tag":591,"props":1179,"children":1180},{"style":810},[1181],{"type":555,"value":1182}," dfs",{"type":550,"tag":591,"props":1184,"children":1185},{"style":816},[1186],{"type":555,"value":877},{"type":550,"tag":591,"props":1188,"children":1189},{"style":816},[1190],{"type":555,"value":1156},{"type":550,"tag":591,"props":1192,"children":1193},{"style":822},[1194],{"type":555,"value":1195},"node",{"type":550,"tag":591,"props":1197,"children":1198},{"style":816},[1199],{"type":555,"value":830},{"type":550,"tag":591,"props":1201,"children":1202},{"style":822},[1203],{"type":555,"value":1204}," prev",{"type":550,"tag":591,"props":1206,"children":1207},{"style":816},[1208],{"type":555,"value":849},{"type":550,"tag":591,"props":1210,"children":1211},{"style":816},[1212],{"type":555,"value":1213}," =>",{"type":550,"tag":591,"props":1215,"children":1216},{"style":816},[1217],{"type":555,"value":854},{"type":550,"tag":591,"props":1219,"children":1221},{"class":593,"line":1220},16,[1222,1227,1231,1235,1239,1243,1247,1252,1256],{"type":550,"tag":591,"props":1223,"children":1224},{"style":1066},[1225],{"type":555,"value":1226},"    if",{"type":550,"tag":591,"props":1228,"children":1229},{"style":816},[1230],{"type":555,"value":1156},{"type":550,"tag":591,"props":1232,"children":1233},{"style":822},[1234],{"type":555,"value":1195},{"type":550,"tag":591,"props":1236,"children":1237},{"style":804},[1238],{"type":555,"value":887},{"type":550,"tag":591,"props":1240,"children":1241},{"style":804},[1242],{"type":555,"value":958},{"type":550,"tag":591,"props":1244,"children":1245},{"style":816},[1246],{"type":555,"value":849},{"type":550,"tag":591,"props":1248,"children":1249},{"style":1066},[1250],{"type":555,"value":1251}," return",{"type":550,"tag":591,"props":1253,"children":1254},{"style":900},[1255],{"type":555,"value":903},{"type":550,"tag":591,"props":1257,"children":1258},{"style":816},[1259],{"type":555,"value":917},{"type":550,"tag":591,"props":1261,"children":1263},{"class":593,"line":1262},17,[1264,1269,1274,1278,1282,1287,1292,1297,1302,1306,1310],{"type":550,"tag":591,"props":1265,"children":1266},{"style":804},[1267],{"type":555,"value":1268},"    let",{"type":550,"tag":591,"props":1270,"children":1271},{"style":822},[1272],{"type":555,"value":1273}," sum",{"type":550,"tag":591,"props":1275,"children":1276},{"style":816},[1277],{"type":555,"value":877},{"type":550,"tag":591,"props":1279,"children":1280},{"style":822},[1281],{"type":555,"value":1204},{"type":550,"tag":591,"props":1283,"children":1284},{"style":804},[1285],{"type":555,"value":1286}," *",{"type":550,"tag":591,"props":1288,"children":1289},{"style":900},[1290],{"type":555,"value":1291}," 10",{"type":550,"tag":591,"props":1293,"children":1294},{"style":804},[1295],{"type":555,"value":1296}," +",{"type":550,"tag":591,"props":1298,"children":1299},{"style":822},[1300],{"type":555,"value":1301}," node",{"type":550,"tag":591,"props":1303,"children":1304},{"style":816},[1305],{"type":555,"value":868},{"type":550,"tag":591,"props":1307,"children":1308},{"style":822},[1309],{"type":555,"value":825},{"type":550,"tag":591,"props":1311,"children":1312},{"style":816},[1313],{"type":555,"value":917},{"type":550,"tag":591,"props":1315,"children":1317},{"class":593,"line":1316},18,[1318,1322,1326,1330,1334,1338,1342,1346,1351,1355,1359,1363,1367,1371,1375,1379,1383],{"type":550,"tag":591,"props":1319,"children":1320},{"style":1066},[1321],{"type":555,"value":1226},{"type":550,"tag":591,"props":1323,"children":1324},{"style":816},[1325],{"type":555,"value":1156},{"type":550,"tag":591,"props":1327,"children":1328},{"style":822},[1329],{"type":555,"value":1195},{"type":550,"tag":591,"props":1331,"children":1332},{"style":816},[1333],{"type":555,"value":868},{"type":550,"tag":591,"props":1335,"children":1336},{"style":822},[1337],{"type":555,"value":933},{"type":550,"tag":591,"props":1339,"children":1340},{"style":804},[1341],{"type":555,"value":887},{"type":550,"tag":591,"props":1343,"children":1344},{"style":804},[1345],{"type":555,"value":958},{"type":550,"tag":591,"props":1347,"children":1348},{"style":804},[1349],{"type":555,"value":1350}," &&",{"type":550,"tag":591,"props":1352,"children":1353},{"style":822},[1354],{"type":555,"value":1301},{"type":550,"tag":591,"props":1356,"children":1357},{"style":816},[1358],{"type":555,"value":868},{"type":550,"tag":591,"props":1360,"children":1361},{"style":822},[1362],{"type":555,"value":986},{"type":550,"tag":591,"props":1364,"children":1365},{"style":804},[1366],{"type":555,"value":887},{"type":550,"tag":591,"props":1368,"children":1369},{"style":804},[1370],{"type":555,"value":958},{"type":550,"tag":591,"props":1372,"children":1373},{"style":816},[1374],{"type":555,"value":849},{"type":550,"tag":591,"props":1376,"children":1377},{"style":1066},[1378],{"type":555,"value":1251},{"type":550,"tag":591,"props":1380,"children":1381},{"style":822},[1382],{"type":555,"value":1273},{"type":550,"tag":591,"props":1384,"children":1385},{"style":816},[1386],{"type":555,"value":917},{"type":550,"tag":591,"props":1388,"children":1390},{"class":593,"line":1389},19,[1391,1396,1400,1404,1408,1412,1416,1420,1424,1428,1432,1436,1440,1444,1448,1452,1456,1460],{"type":550,"tag":591,"props":1392,"children":1393},{"style":1066},[1394],{"type":555,"value":1395},"    return",{"type":550,"tag":591,"props":1397,"children":1398},{"style":810},[1399],{"type":555,"value":1182},{"type":550,"tag":591,"props":1401,"children":1402},{"style":816},[1403],{"type":555,"value":819},{"type":550,"tag":591,"props":1405,"children":1406},{"style":822},[1407],{"type":555,"value":1195},{"type":550,"tag":591,"props":1409,"children":1410},{"style":816},[1411],{"type":555,"value":868},{"type":550,"tag":591,"props":1413,"children":1414},{"style":822},[1415],{"type":555,"value":933},{"type":550,"tag":591,"props":1417,"children":1418},{"style":816},[1419],{"type":555,"value":830},{"type":550,"tag":591,"props":1421,"children":1422},{"style":822},[1423],{"type":555,"value":1273},{"type":550,"tag":591,"props":1425,"children":1426},{"style":816},[1427],{"type":555,"value":849},{"type":550,"tag":591,"props":1429,"children":1430},{"style":804},[1431],{"type":555,"value":1296},{"type":550,"tag":591,"props":1433,"children":1434},{"style":810},[1435],{"type":555,"value":1182},{"type":550,"tag":591,"props":1437,"children":1438},{"style":816},[1439],{"type":555,"value":819},{"type":550,"tag":591,"props":1441,"children":1442},{"style":822},[1443],{"type":555,"value":1195},{"type":550,"tag":591,"props":1445,"children":1446},{"style":816},[1447],{"type":555,"value":868},{"type":550,"tag":591,"props":1449,"children":1450},{"style":822},[1451],{"type":555,"value":986},{"type":550,"tag":591,"props":1453,"children":1454},{"style":816},[1455],{"type":555,"value":830},{"type":550,"tag":591,"props":1457,"children":1458},{"style":822},[1459],{"type":555,"value":1273},{"type":550,"tag":591,"props":1461,"children":1462},{"style":816},[1463],{"type":555,"value":1464},");\n",{"type":550,"tag":591,"props":1466,"children":1468},{"class":593,"line":1467},20,[1469],{"type":550,"tag":591,"props":1470,"children":1471},{"style":816},[1472],{"type":555,"value":1473},"  };\n",{"type":550,"tag":591,"props":1475,"children":1477},{"class":593,"line":1476},21,[1478,1483,1487,1491,1495,1499,1503],{"type":550,"tag":591,"props":1479,"children":1480},{"style":1066},[1481],{"type":555,"value":1482},"  return",{"type":550,"tag":591,"props":1484,"children":1485},{"style":810},[1486],{"type":555,"value":1182},{"type":550,"tag":591,"props":1488,"children":1489},{"style":816},[1490],{"type":555,"value":819},{"type":550,"tag":591,"props":1492,"children":1493},{"style":822},[1494],{"type":555,"value":547},{"type":550,"tag":591,"props":1496,"children":1497},{"style":816},[1498],{"type":555,"value":830},{"type":550,"tag":591,"props":1500,"children":1501},{"style":900},[1502],{"type":555,"value":903},{"type":550,"tag":591,"props":1504,"children":1505},{"style":816},[1506],{"type":555,"value":1464},{"type":550,"tag":591,"props":1508,"children":1510},{"class":593,"line":1509},22,[1511],{"type":550,"tag":591,"props":1512,"children":1513},{"style":816},[1514],{"type":555,"value":1515},"};\n",{"type":550,"tag":1517,"props":1518,"children":1519},"style",{},[1520],{"type":555,"value":1521},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":630,"depth":630,"links":1523},[1524,1525],{"id":750,"depth":603,"text":750},{"id":755,"depth":603,"text":755,"children":1526},[1527],{"id":761,"depth":612,"text":764},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1534,1536],{"_path":165,"title":164,"description":1535},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":171,"title":170,"description":1537},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1714099275236]