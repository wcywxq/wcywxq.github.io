[{"data":1,"prerenderedAt":1550},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":552,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1545},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":168,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":167,"description":556,"url":557,"body":558,"_type":1540,"_id":1541,"_source":1542,"_file":1543,"_extension":1544},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":559,"children":560,"toc":1534},"root",[561,568,573,578,583,592,658,663,671,734,739,759,765,770,777,1528],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"叶节点 是指没有子节点的节点。",{"type":562,"tag":563,"props":579,"children":580},{},[581],{"type":567,"value":582},"示例 1：",{"type":562,"tag":563,"props":584,"children":585},{},[586],{"type":562,"tag":587,"props":588,"children":591},"img",{"alt":589,"src":590},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":562,"tag":593,"props":594,"children":597},"pre",{"className":595,"code":596,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[598],{"type":562,"tag":599,"props":600,"children":601},"code",{"__ignoreMap":555},[602,613,622,631,640,649],{"type":562,"tag":603,"props":604,"children":607},"span",{"class":605,"line":606},"line",1,[608],{"type":562,"tag":603,"props":609,"children":610},{},[611],{"type":567,"value":612},"输入：root = [1,2,3]\n",{"type":562,"tag":603,"props":614,"children":616},{"class":605,"line":615},2,[617],{"type":562,"tag":603,"props":618,"children":619},{},[620],{"type":567,"value":621},"输出：25\n",{"type":562,"tag":603,"props":623,"children":625},{"class":605,"line":624},3,[626],{"type":562,"tag":603,"props":627,"children":628},{},[629],{"type":567,"value":630},"解释：\n",{"type":562,"tag":603,"props":632,"children":634},{"class":605,"line":633},4,[635],{"type":562,"tag":603,"props":636,"children":637},{},[638],{"type":567,"value":639},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":562,"tag":603,"props":641,"children":643},{"class":605,"line":642},5,[644],{"type":562,"tag":603,"props":645,"children":646},{},[647],{"type":567,"value":648},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":562,"tag":603,"props":650,"children":652},{"class":605,"line":651},6,[653],{"type":562,"tag":603,"props":654,"children":655},{},[656],{"type":567,"value":657},"因此，数字总和 = 12 + 13 = 25\n",{"type":562,"tag":563,"props":659,"children":660},{},[661],{"type":567,"value":662},"示例 2：",{"type":562,"tag":563,"props":664,"children":665},{},[666],{"type":562,"tag":587,"props":667,"children":670},{"alt":668,"src":669},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":562,"tag":593,"props":672,"children":674},{"className":595,"code":673,"language":567,"meta":555,"style":555},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[675],{"type":562,"tag":599,"props":676,"children":677},{"__ignoreMap":555},[678,686,694,701,709,717,725],{"type":562,"tag":603,"props":679,"children":680},{"class":605,"line":606},[681],{"type":562,"tag":603,"props":682,"children":683},{},[684],{"type":567,"value":685},"输入：root = [4,9,0,5,1]\n",{"type":562,"tag":603,"props":687,"children":688},{"class":605,"line":615},[689],{"type":562,"tag":603,"props":690,"children":691},{},[692],{"type":567,"value":693},"输出：1026\n",{"type":562,"tag":603,"props":695,"children":696},{"class":605,"line":624},[697],{"type":562,"tag":603,"props":698,"children":699},{},[700],{"type":567,"value":630},{"type":562,"tag":603,"props":702,"children":703},{"class":605,"line":633},[704],{"type":562,"tag":603,"props":705,"children":706},{},[707],{"type":567,"value":708},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":562,"tag":603,"props":710,"children":711},{"class":605,"line":642},[712],{"type":562,"tag":603,"props":713,"children":714},{},[715],{"type":567,"value":716},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":562,"tag":603,"props":718,"children":719},{"class":605,"line":651},[720],{"type":562,"tag":603,"props":721,"children":722},{},[723],{"type":567,"value":724},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":562,"tag":603,"props":726,"children":728},{"class":605,"line":727},7,[729],{"type":562,"tag":603,"props":730,"children":731},{},[732],{"type":567,"value":733},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":562,"tag":563,"props":735,"children":736},{},[737],{"type":567,"value":738},"提示：",{"type":562,"tag":740,"props":741,"children":742},"ul",{},[743,749,754],{"type":562,"tag":744,"props":745,"children":746},"li",{},[747],{"type":567,"value":748},"树中节点的数目在范围 [1, 1000] 内",{"type":562,"tag":744,"props":750,"children":751},{},[752],{"type":567,"value":753},"0 \u003C= Node.val \u003C= 9",{"type":562,"tag":744,"props":755,"children":756},{},[757],{"type":567,"value":758},"树的深度不超过 10",{"type":562,"tag":760,"props":761,"children":763},"h2",{"id":762},"解题思路",[764],{"type":567,"value":762},{"type":562,"tag":760,"props":766,"children":768},{"id":767},"实现",[769],{"type":567,"value":767},{"type":562,"tag":771,"props":772,"children":774},"h3",{"id":773},"深度优先搜素-dfs",[775],{"type":567,"value":776},"深度优先搜素 - dfs",{"type":562,"tag":593,"props":778,"children":782},{"className":779,"code":780,"language":781,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[783],{"type":562,"tag":599,"props":784,"children":785},{"__ignoreMap":555},[786,795,803,811,867,930,983,1035,1044,1054,1062,1103,1133,1141,1181,1230,1272,1326,1399,1477,1486,1519],{"type":562,"tag":603,"props":787,"children":788},{"class":605,"line":606},[789],{"type":562,"tag":603,"props":790,"children":792},{"style":791},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[793],{"type":567,"value":794},"/**\n",{"type":562,"tag":603,"props":796,"children":797},{"class":605,"line":615},[798],{"type":562,"tag":603,"props":799,"children":800},{"style":791},[801],{"type":567,"value":802}," * Definition for a binary tree node.\n",{"type":562,"tag":603,"props":804,"children":805},{"class":605,"line":624},[806],{"type":562,"tag":603,"props":807,"children":808},{"style":791},[809],{"type":567,"value":810}," */\n",{"type":562,"tag":603,"props":812,"children":813},{"class":605,"line":633},[814,820,826,832,838,843,848,852,857,862],{"type":562,"tag":603,"props":815,"children":817},{"style":816},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[818],{"type":567,"value":819},"function",{"type":562,"tag":603,"props":821,"children":823},{"style":822},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[824],{"type":567,"value":825}," TreeNode",{"type":562,"tag":603,"props":827,"children":829},{"style":828},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[830],{"type":567,"value":831},"(",{"type":562,"tag":603,"props":833,"children":835},{"style":834},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[836],{"type":567,"value":837},"val",{"type":562,"tag":603,"props":839,"children":840},{"style":828},[841],{"type":567,"value":842},",",{"type":562,"tag":603,"props":844,"children":845},{"style":834},[846],{"type":567,"value":847}," left",{"type":562,"tag":603,"props":849,"children":850},{"style":828},[851],{"type":567,"value":842},{"type":562,"tag":603,"props":853,"children":854},{"style":834},[855],{"type":567,"value":856}," right",{"type":562,"tag":603,"props":858,"children":859},{"style":828},[860],{"type":567,"value":861},")",{"type":562,"tag":603,"props":863,"children":864},{"style":828},[865],{"type":567,"value":866}," {\n",{"type":562,"tag":603,"props":868,"children":869},{"class":605,"line":642},[870,876,881,885,890,895,900,905,910,916,921,925],{"type":562,"tag":603,"props":871,"children":873},{"style":872},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[874],{"type":567,"value":875},"  this",{"type":562,"tag":603,"props":877,"children":878},{"style":828},[879],{"type":567,"value":880},".",{"type":562,"tag":603,"props":882,"children":883},{"style":834},[884],{"type":567,"value":837},{"type":562,"tag":603,"props":886,"children":887},{"style":828},[888],{"type":567,"value":889}," =",{"type":562,"tag":603,"props":891,"children":892},{"style":834},[893],{"type":567,"value":894}," val",{"type":562,"tag":603,"props":896,"children":897},{"style":816},[898],{"type":567,"value":899}," ===",{"type":562,"tag":603,"props":901,"children":902},{"style":816},[903],{"type":567,"value":904}," undefined",{"type":562,"tag":603,"props":906,"children":907},{"style":816},[908],{"type":567,"value":909}," ?",{"type":562,"tag":603,"props":911,"children":913},{"style":912},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[914],{"type":567,"value":915}," 0",{"type":562,"tag":603,"props":917,"children":918},{"style":816},[919],{"type":567,"value":920}," :",{"type":562,"tag":603,"props":922,"children":923},{"style":834},[924],{"type":567,"value":894},{"type":562,"tag":603,"props":926,"children":927},{"style":828},[928],{"type":567,"value":929},";\n",{"type":562,"tag":603,"props":931,"children":932},{"class":605,"line":651},[933,937,941,946,950,954,958,962,966,971,975,979],{"type":562,"tag":603,"props":934,"children":935},{"style":872},[936],{"type":567,"value":875},{"type":562,"tag":603,"props":938,"children":939},{"style":828},[940],{"type":567,"value":880},{"type":562,"tag":603,"props":942,"children":943},{"style":834},[944],{"type":567,"value":945},"left",{"type":562,"tag":603,"props":947,"children":948},{"style":828},[949],{"type":567,"value":889},{"type":562,"tag":603,"props":951,"children":952},{"style":834},[953],{"type":567,"value":847},{"type":562,"tag":603,"props":955,"children":956},{"style":816},[957],{"type":567,"value":899},{"type":562,"tag":603,"props":959,"children":960},{"style":816},[961],{"type":567,"value":904},{"type":562,"tag":603,"props":963,"children":964},{"style":816},[965],{"type":567,"value":909},{"type":562,"tag":603,"props":967,"children":968},{"style":816},[969],{"type":567,"value":970}," null",{"type":562,"tag":603,"props":972,"children":973},{"style":816},[974],{"type":567,"value":920},{"type":562,"tag":603,"props":976,"children":977},{"style":834},[978],{"type":567,"value":847},{"type":562,"tag":603,"props":980,"children":981},{"style":828},[982],{"type":567,"value":929},{"type":562,"tag":603,"props":984,"children":985},{"class":605,"line":727},[986,990,994,999,1003,1007,1011,1015,1019,1023,1027,1031],{"type":562,"tag":603,"props":987,"children":988},{"style":872},[989],{"type":567,"value":875},{"type":562,"tag":603,"props":991,"children":992},{"style":828},[993],{"type":567,"value":880},{"type":562,"tag":603,"props":995,"children":996},{"style":834},[997],{"type":567,"value":998},"right",{"type":562,"tag":603,"props":1000,"children":1001},{"style":828},[1002],{"type":567,"value":889},{"type":562,"tag":603,"props":1004,"children":1005},{"style":834},[1006],{"type":567,"value":856},{"type":562,"tag":603,"props":1008,"children":1009},{"style":816},[1010],{"type":567,"value":899},{"type":562,"tag":603,"props":1012,"children":1013},{"style":816},[1014],{"type":567,"value":904},{"type":562,"tag":603,"props":1016,"children":1017},{"style":816},[1018],{"type":567,"value":909},{"type":562,"tag":603,"props":1020,"children":1021},{"style":816},[1022],{"type":567,"value":970},{"type":562,"tag":603,"props":1024,"children":1025},{"style":816},[1026],{"type":567,"value":920},{"type":562,"tag":603,"props":1028,"children":1029},{"style":834},[1030],{"type":567,"value":856},{"type":562,"tag":603,"props":1032,"children":1033},{"style":828},[1034],{"type":567,"value":929},{"type":562,"tag":603,"props":1036,"children":1038},{"class":605,"line":1037},8,[1039],{"type":562,"tag":603,"props":1040,"children":1041},{"style":828},[1042],{"type":567,"value":1043},"}\n",{"type":562,"tag":603,"props":1045,"children":1047},{"class":605,"line":1046},9,[1048],{"type":562,"tag":603,"props":1049,"children":1051},{"emptyLinePlaceholder":1050},true,[1052],{"type":567,"value":1053},"\n",{"type":562,"tag":603,"props":1055,"children":1057},{"class":605,"line":1056},10,[1058],{"type":562,"tag":603,"props":1059,"children":1060},{"style":791},[1061],{"type":567,"value":794},{"type":562,"tag":603,"props":1063,"children":1065},{"class":605,"line":1064},11,[1066,1071,1076,1082,1087,1093,1098],{"type":562,"tag":603,"props":1067,"children":1068},{"style":791},[1069],{"type":567,"value":1070}," * ",{"type":562,"tag":603,"props":1072,"children":1073},{"style":828},[1074],{"type":567,"value":1075},"@",{"type":562,"tag":603,"props":1077,"children":1079},{"style":1078},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1080],{"type":567,"value":1081},"param",{"type":562,"tag":603,"props":1083,"children":1084},{"style":828},[1085],{"type":567,"value":1086}," {",{"type":562,"tag":603,"props":1088,"children":1090},{"style":1089},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1091],{"type":567,"value":1092},"TreeNode",{"type":562,"tag":603,"props":1094,"children":1095},{"style":828},[1096],{"type":567,"value":1097},"}",{"type":562,"tag":603,"props":1099,"children":1100},{"style":834},[1101],{"type":567,"value":1102}," root\n",{"type":562,"tag":603,"props":1104,"children":1106},{"class":605,"line":1105},12,[1107,1111,1115,1120,1124,1129],{"type":562,"tag":603,"props":1108,"children":1109},{"style":791},[1110],{"type":567,"value":1070},{"type":562,"tag":603,"props":1112,"children":1113},{"style":828},[1114],{"type":567,"value":1075},{"type":562,"tag":603,"props":1116,"children":1117},{"style":1078},[1118],{"type":567,"value":1119},"return",{"type":562,"tag":603,"props":1121,"children":1122},{"style":828},[1123],{"type":567,"value":1086},{"type":562,"tag":603,"props":1125,"children":1126},{"style":1089},[1127],{"type":567,"value":1128},"number",{"type":562,"tag":603,"props":1130,"children":1131},{"style":828},[1132],{"type":567,"value":1043},{"type":562,"tag":603,"props":1134,"children":1136},{"class":605,"line":1135},13,[1137],{"type":562,"tag":603,"props":1138,"children":1139},{"style":791},[1140],{"type":567,"value":810},{"type":562,"tag":603,"props":1142,"children":1144},{"class":605,"line":1143},14,[1145,1150,1155,1159,1164,1169,1173,1177],{"type":562,"tag":603,"props":1146,"children":1147},{"style":816},[1148],{"type":567,"value":1149},"var",{"type":562,"tag":603,"props":1151,"children":1152},{"style":822},[1153],{"type":567,"value":1154}," sumNumbers",{"type":562,"tag":603,"props":1156,"children":1157},{"style":828},[1158],{"type":567,"value":889},{"type":562,"tag":603,"props":1160,"children":1161},{"style":816},[1162],{"type":567,"value":1163}," function",{"type":562,"tag":603,"props":1165,"children":1166},{"style":828},[1167],{"type":567,"value":1168}," (",{"type":562,"tag":603,"props":1170,"children":1171},{"style":834},[1172],{"type":567,"value":559},{"type":562,"tag":603,"props":1174,"children":1175},{"style":828},[1176],{"type":567,"value":861},{"type":562,"tag":603,"props":1178,"children":1179},{"style":828},[1180],{"type":567,"value":866},{"type":562,"tag":603,"props":1182,"children":1184},{"class":605,"line":1183},15,[1185,1190,1195,1199,1203,1208,1212,1217,1221,1226],{"type":562,"tag":603,"props":1186,"children":1187},{"style":816},[1188],{"type":567,"value":1189},"  const",{"type":562,"tag":603,"props":1191,"children":1192},{"style":822},[1193],{"type":567,"value":1194}," dfs",{"type":562,"tag":603,"props":1196,"children":1197},{"style":828},[1198],{"type":567,"value":889},{"type":562,"tag":603,"props":1200,"children":1201},{"style":828},[1202],{"type":567,"value":1168},{"type":562,"tag":603,"props":1204,"children":1205},{"style":834},[1206],{"type":567,"value":1207},"node",{"type":562,"tag":603,"props":1209,"children":1210},{"style":828},[1211],{"type":567,"value":842},{"type":562,"tag":603,"props":1213,"children":1214},{"style":834},[1215],{"type":567,"value":1216}," prev",{"type":562,"tag":603,"props":1218,"children":1219},{"style":828},[1220],{"type":567,"value":861},{"type":562,"tag":603,"props":1222,"children":1223},{"style":828},[1224],{"type":567,"value":1225}," =>",{"type":562,"tag":603,"props":1227,"children":1228},{"style":828},[1229],{"type":567,"value":866},{"type":562,"tag":603,"props":1231,"children":1233},{"class":605,"line":1232},16,[1234,1239,1243,1247,1251,1255,1259,1264,1268],{"type":562,"tag":603,"props":1235,"children":1236},{"style":1078},[1237],{"type":567,"value":1238},"    if",{"type":562,"tag":603,"props":1240,"children":1241},{"style":828},[1242],{"type":567,"value":1168},{"type":562,"tag":603,"props":1244,"children":1245},{"style":834},[1246],{"type":567,"value":1207},{"type":562,"tag":603,"props":1248,"children":1249},{"style":816},[1250],{"type":567,"value":899},{"type":562,"tag":603,"props":1252,"children":1253},{"style":816},[1254],{"type":567,"value":970},{"type":562,"tag":603,"props":1256,"children":1257},{"style":828},[1258],{"type":567,"value":861},{"type":562,"tag":603,"props":1260,"children":1261},{"style":1078},[1262],{"type":567,"value":1263}," return",{"type":562,"tag":603,"props":1265,"children":1266},{"style":912},[1267],{"type":567,"value":915},{"type":562,"tag":603,"props":1269,"children":1270},{"style":828},[1271],{"type":567,"value":929},{"type":562,"tag":603,"props":1273,"children":1275},{"class":605,"line":1274},17,[1276,1281,1286,1290,1294,1299,1304,1309,1314,1318,1322],{"type":562,"tag":603,"props":1277,"children":1278},{"style":816},[1279],{"type":567,"value":1280},"    let",{"type":562,"tag":603,"props":1282,"children":1283},{"style":834},[1284],{"type":567,"value":1285}," sum",{"type":562,"tag":603,"props":1287,"children":1288},{"style":828},[1289],{"type":567,"value":889},{"type":562,"tag":603,"props":1291,"children":1292},{"style":834},[1293],{"type":567,"value":1216},{"type":562,"tag":603,"props":1295,"children":1296},{"style":816},[1297],{"type":567,"value":1298}," *",{"type":562,"tag":603,"props":1300,"children":1301},{"style":912},[1302],{"type":567,"value":1303}," 10",{"type":562,"tag":603,"props":1305,"children":1306},{"style":816},[1307],{"type":567,"value":1308}," +",{"type":562,"tag":603,"props":1310,"children":1311},{"style":834},[1312],{"type":567,"value":1313}," node",{"type":562,"tag":603,"props":1315,"children":1316},{"style":828},[1317],{"type":567,"value":880},{"type":562,"tag":603,"props":1319,"children":1320},{"style":834},[1321],{"type":567,"value":837},{"type":562,"tag":603,"props":1323,"children":1324},{"style":828},[1325],{"type":567,"value":929},{"type":562,"tag":603,"props":1327,"children":1329},{"class":605,"line":1328},18,[1330,1334,1338,1342,1346,1350,1354,1358,1363,1367,1371,1375,1379,1383,1387,1391,1395],{"type":562,"tag":603,"props":1331,"children":1332},{"style":1078},[1333],{"type":567,"value":1238},{"type":562,"tag":603,"props":1335,"children":1336},{"style":828},[1337],{"type":567,"value":1168},{"type":562,"tag":603,"props":1339,"children":1340},{"style":834},[1341],{"type":567,"value":1207},{"type":562,"tag":603,"props":1343,"children":1344},{"style":828},[1345],{"type":567,"value":880},{"type":562,"tag":603,"props":1347,"children":1348},{"style":834},[1349],{"type":567,"value":945},{"type":562,"tag":603,"props":1351,"children":1352},{"style":816},[1353],{"type":567,"value":899},{"type":562,"tag":603,"props":1355,"children":1356},{"style":816},[1357],{"type":567,"value":970},{"type":562,"tag":603,"props":1359,"children":1360},{"style":816},[1361],{"type":567,"value":1362}," &&",{"type":562,"tag":603,"props":1364,"children":1365},{"style":834},[1366],{"type":567,"value":1313},{"type":562,"tag":603,"props":1368,"children":1369},{"style":828},[1370],{"type":567,"value":880},{"type":562,"tag":603,"props":1372,"children":1373},{"style":834},[1374],{"type":567,"value":998},{"type":562,"tag":603,"props":1376,"children":1377},{"style":816},[1378],{"type":567,"value":899},{"type":562,"tag":603,"props":1380,"children":1381},{"style":816},[1382],{"type":567,"value":970},{"type":562,"tag":603,"props":1384,"children":1385},{"style":828},[1386],{"type":567,"value":861},{"type":562,"tag":603,"props":1388,"children":1389},{"style":1078},[1390],{"type":567,"value":1263},{"type":562,"tag":603,"props":1392,"children":1393},{"style":834},[1394],{"type":567,"value":1285},{"type":562,"tag":603,"props":1396,"children":1397},{"style":828},[1398],{"type":567,"value":929},{"type":562,"tag":603,"props":1400,"children":1402},{"class":605,"line":1401},19,[1403,1408,1412,1416,1420,1424,1428,1432,1436,1440,1444,1448,1452,1456,1460,1464,1468,1472],{"type":562,"tag":603,"props":1404,"children":1405},{"style":1078},[1406],{"type":567,"value":1407},"    return",{"type":562,"tag":603,"props":1409,"children":1410},{"style":822},[1411],{"type":567,"value":1194},{"type":562,"tag":603,"props":1413,"children":1414},{"style":828},[1415],{"type":567,"value":831},{"type":562,"tag":603,"props":1417,"children":1418},{"style":834},[1419],{"type":567,"value":1207},{"type":562,"tag":603,"props":1421,"children":1422},{"style":828},[1423],{"type":567,"value":880},{"type":562,"tag":603,"props":1425,"children":1426},{"style":834},[1427],{"type":567,"value":945},{"type":562,"tag":603,"props":1429,"children":1430},{"style":828},[1431],{"type":567,"value":842},{"type":562,"tag":603,"props":1433,"children":1434},{"style":834},[1435],{"type":567,"value":1285},{"type":562,"tag":603,"props":1437,"children":1438},{"style":828},[1439],{"type":567,"value":861},{"type":562,"tag":603,"props":1441,"children":1442},{"style":816},[1443],{"type":567,"value":1308},{"type":562,"tag":603,"props":1445,"children":1446},{"style":822},[1447],{"type":567,"value":1194},{"type":562,"tag":603,"props":1449,"children":1450},{"style":828},[1451],{"type":567,"value":831},{"type":562,"tag":603,"props":1453,"children":1454},{"style":834},[1455],{"type":567,"value":1207},{"type":562,"tag":603,"props":1457,"children":1458},{"style":828},[1459],{"type":567,"value":880},{"type":562,"tag":603,"props":1461,"children":1462},{"style":834},[1463],{"type":567,"value":998},{"type":562,"tag":603,"props":1465,"children":1466},{"style":828},[1467],{"type":567,"value":842},{"type":562,"tag":603,"props":1469,"children":1470},{"style":834},[1471],{"type":567,"value":1285},{"type":562,"tag":603,"props":1473,"children":1474},{"style":828},[1475],{"type":567,"value":1476},");\n",{"type":562,"tag":603,"props":1478,"children":1480},{"class":605,"line":1479},20,[1481],{"type":562,"tag":603,"props":1482,"children":1483},{"style":828},[1484],{"type":567,"value":1485},"  };\n",{"type":562,"tag":603,"props":1487,"children":1489},{"class":605,"line":1488},21,[1490,1495,1499,1503,1507,1511,1515],{"type":562,"tag":603,"props":1491,"children":1492},{"style":1078},[1493],{"type":567,"value":1494},"  return",{"type":562,"tag":603,"props":1496,"children":1497},{"style":822},[1498],{"type":567,"value":1194},{"type":562,"tag":603,"props":1500,"children":1501},{"style":828},[1502],{"type":567,"value":831},{"type":562,"tag":603,"props":1504,"children":1505},{"style":834},[1506],{"type":567,"value":559},{"type":562,"tag":603,"props":1508,"children":1509},{"style":828},[1510],{"type":567,"value":842},{"type":562,"tag":603,"props":1512,"children":1513},{"style":912},[1514],{"type":567,"value":915},{"type":562,"tag":603,"props":1516,"children":1517},{"style":828},[1518],{"type":567,"value":1476},{"type":562,"tag":603,"props":1520,"children":1522},{"class":605,"line":1521},22,[1523],{"type":562,"tag":603,"props":1524,"children":1525},{"style":828},[1526],{"type":567,"value":1527},"};\n",{"type":562,"tag":1529,"props":1530,"children":1531},"style",{},[1532],{"type":567,"value":1533},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":642,"depth":642,"links":1535},[1536,1537],{"id":762,"depth":615,"text":762},{"id":767,"depth":615,"text":767,"children":1538},[1539],{"id":773,"depth":624,"text":776},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1546,1548],{"_path":165,"title":164,"description":1547},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":171,"title":170,"description":1549},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1716810725815]