[{"data":1,"prerenderedAt":1547},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":549,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1542},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":168,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":167,"description":553,"url":554,"body":555,"_type":1537,"_id":1538,"_source":1539,"_file":1540,"_extension":1541},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":556,"children":557,"toc":1531},"root",[558,565,570,575,580,589,655,660,668,731,736,756,762,767,774,1525],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"叶节点 是指没有子节点的节点。",{"type":559,"tag":560,"props":576,"children":577},{},[578],{"type":564,"value":579},"示例 1：",{"type":559,"tag":560,"props":581,"children":582},{},[583],{"type":559,"tag":584,"props":585,"children":588},"img",{"alt":586,"src":587},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":559,"tag":590,"props":591,"children":594},"pre",{"className":592,"code":593,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[595],{"type":559,"tag":596,"props":597,"children":598},"code",{"__ignoreMap":552},[599,610,619,628,637,646],{"type":559,"tag":600,"props":601,"children":604},"span",{"class":602,"line":603},"line",1,[605],{"type":559,"tag":600,"props":606,"children":607},{},[608],{"type":564,"value":609},"输入：root = [1,2,3]\n",{"type":559,"tag":600,"props":611,"children":613},{"class":602,"line":612},2,[614],{"type":559,"tag":600,"props":615,"children":616},{},[617],{"type":564,"value":618},"输出：25\n",{"type":559,"tag":600,"props":620,"children":622},{"class":602,"line":621},3,[623],{"type":559,"tag":600,"props":624,"children":625},{},[626],{"type":564,"value":627},"解释：\n",{"type":559,"tag":600,"props":629,"children":631},{"class":602,"line":630},4,[632],{"type":559,"tag":600,"props":633,"children":634},{},[635],{"type":564,"value":636},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":559,"tag":600,"props":638,"children":640},{"class":602,"line":639},5,[641],{"type":559,"tag":600,"props":642,"children":643},{},[644],{"type":564,"value":645},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":559,"tag":600,"props":647,"children":649},{"class":602,"line":648},6,[650],{"type":559,"tag":600,"props":651,"children":652},{},[653],{"type":564,"value":654},"因此，数字总和 = 12 + 13 = 25\n",{"type":559,"tag":560,"props":656,"children":657},{},[658],{"type":564,"value":659},"示例 2：",{"type":559,"tag":560,"props":661,"children":662},{},[663],{"type":559,"tag":584,"props":664,"children":667},{"alt":665,"src":666},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":559,"tag":590,"props":669,"children":671},{"className":592,"code":670,"language":564,"meta":552,"style":552},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[672],{"type":559,"tag":596,"props":673,"children":674},{"__ignoreMap":552},[675,683,691,698,706,714,722],{"type":559,"tag":600,"props":676,"children":677},{"class":602,"line":603},[678],{"type":559,"tag":600,"props":679,"children":680},{},[681],{"type":564,"value":682},"输入：root = [4,9,0,5,1]\n",{"type":559,"tag":600,"props":684,"children":685},{"class":602,"line":612},[686],{"type":559,"tag":600,"props":687,"children":688},{},[689],{"type":564,"value":690},"输出：1026\n",{"type":559,"tag":600,"props":692,"children":693},{"class":602,"line":621},[694],{"type":559,"tag":600,"props":695,"children":696},{},[697],{"type":564,"value":627},{"type":559,"tag":600,"props":699,"children":700},{"class":602,"line":630},[701],{"type":559,"tag":600,"props":702,"children":703},{},[704],{"type":564,"value":705},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":559,"tag":600,"props":707,"children":708},{"class":602,"line":639},[709],{"type":559,"tag":600,"props":710,"children":711},{},[712],{"type":564,"value":713},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":559,"tag":600,"props":715,"children":716},{"class":602,"line":648},[717],{"type":559,"tag":600,"props":718,"children":719},{},[720],{"type":564,"value":721},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":559,"tag":600,"props":723,"children":725},{"class":602,"line":724},7,[726],{"type":559,"tag":600,"props":727,"children":728},{},[729],{"type":564,"value":730},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":559,"tag":560,"props":732,"children":733},{},[734],{"type":564,"value":735},"提示：",{"type":559,"tag":737,"props":738,"children":739},"ul",{},[740,746,751],{"type":559,"tag":741,"props":742,"children":743},"li",{},[744],{"type":564,"value":745},"树中节点的数目在范围 [1, 1000] 内",{"type":559,"tag":741,"props":747,"children":748},{},[749],{"type":564,"value":750},"0 \u003C= Node.val \u003C= 9",{"type":559,"tag":741,"props":752,"children":753},{},[754],{"type":564,"value":755},"树的深度不超过 10",{"type":559,"tag":757,"props":758,"children":760},"h2",{"id":759},"解题思路",[761],{"type":564,"value":759},{"type":559,"tag":757,"props":763,"children":765},{"id":764},"实现",[766],{"type":564,"value":764},{"type":559,"tag":768,"props":769,"children":771},"h3",{"id":770},"深度优先搜素-dfs",[772],{"type":564,"value":773},"深度优先搜素 - dfs",{"type":559,"tag":590,"props":775,"children":779},{"className":776,"code":777,"language":778,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[780],{"type":559,"tag":596,"props":781,"children":782},{"__ignoreMap":552},[783,792,800,808,864,927,980,1032,1041,1051,1059,1100,1130,1138,1178,1227,1269,1323,1396,1474,1483,1516],{"type":559,"tag":600,"props":784,"children":785},{"class":602,"line":603},[786],{"type":559,"tag":600,"props":787,"children":789},{"style":788},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[790],{"type":564,"value":791},"/**\n",{"type":559,"tag":600,"props":793,"children":794},{"class":602,"line":612},[795],{"type":559,"tag":600,"props":796,"children":797},{"style":788},[798],{"type":564,"value":799}," * Definition for a binary tree node.\n",{"type":559,"tag":600,"props":801,"children":802},{"class":602,"line":621},[803],{"type":559,"tag":600,"props":804,"children":805},{"style":788},[806],{"type":564,"value":807}," */\n",{"type":559,"tag":600,"props":809,"children":810},{"class":602,"line":630},[811,817,823,829,835,840,845,849,854,859],{"type":559,"tag":600,"props":812,"children":814},{"style":813},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[815],{"type":564,"value":816},"function",{"type":559,"tag":600,"props":818,"children":820},{"style":819},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[821],{"type":564,"value":822}," TreeNode",{"type":559,"tag":600,"props":824,"children":826},{"style":825},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[827],{"type":564,"value":828},"(",{"type":559,"tag":600,"props":830,"children":832},{"style":831},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[833],{"type":564,"value":834},"val",{"type":559,"tag":600,"props":836,"children":837},{"style":825},[838],{"type":564,"value":839},",",{"type":559,"tag":600,"props":841,"children":842},{"style":831},[843],{"type":564,"value":844}," left",{"type":559,"tag":600,"props":846,"children":847},{"style":825},[848],{"type":564,"value":839},{"type":559,"tag":600,"props":850,"children":851},{"style":831},[852],{"type":564,"value":853}," right",{"type":559,"tag":600,"props":855,"children":856},{"style":825},[857],{"type":564,"value":858},")",{"type":559,"tag":600,"props":860,"children":861},{"style":825},[862],{"type":564,"value":863}," {\n",{"type":559,"tag":600,"props":865,"children":866},{"class":602,"line":639},[867,873,878,882,887,892,897,902,907,913,918,922],{"type":559,"tag":600,"props":868,"children":870},{"style":869},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[871],{"type":564,"value":872},"  this",{"type":559,"tag":600,"props":874,"children":875},{"style":825},[876],{"type":564,"value":877},".",{"type":559,"tag":600,"props":879,"children":880},{"style":831},[881],{"type":564,"value":834},{"type":559,"tag":600,"props":883,"children":884},{"style":825},[885],{"type":564,"value":886}," =",{"type":559,"tag":600,"props":888,"children":889},{"style":831},[890],{"type":564,"value":891}," val",{"type":559,"tag":600,"props":893,"children":894},{"style":813},[895],{"type":564,"value":896}," ===",{"type":559,"tag":600,"props":898,"children":899},{"style":813},[900],{"type":564,"value":901}," undefined",{"type":559,"tag":600,"props":903,"children":904},{"style":813},[905],{"type":564,"value":906}," ?",{"type":559,"tag":600,"props":908,"children":910},{"style":909},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[911],{"type":564,"value":912}," 0",{"type":559,"tag":600,"props":914,"children":915},{"style":813},[916],{"type":564,"value":917}," :",{"type":559,"tag":600,"props":919,"children":920},{"style":831},[921],{"type":564,"value":891},{"type":559,"tag":600,"props":923,"children":924},{"style":825},[925],{"type":564,"value":926},";\n",{"type":559,"tag":600,"props":928,"children":929},{"class":602,"line":648},[930,934,938,943,947,951,955,959,963,968,972,976],{"type":559,"tag":600,"props":931,"children":932},{"style":869},[933],{"type":564,"value":872},{"type":559,"tag":600,"props":935,"children":936},{"style":825},[937],{"type":564,"value":877},{"type":559,"tag":600,"props":939,"children":940},{"style":831},[941],{"type":564,"value":942},"left",{"type":559,"tag":600,"props":944,"children":945},{"style":825},[946],{"type":564,"value":886},{"type":559,"tag":600,"props":948,"children":949},{"style":831},[950],{"type":564,"value":844},{"type":559,"tag":600,"props":952,"children":953},{"style":813},[954],{"type":564,"value":896},{"type":559,"tag":600,"props":956,"children":957},{"style":813},[958],{"type":564,"value":901},{"type":559,"tag":600,"props":960,"children":961},{"style":813},[962],{"type":564,"value":906},{"type":559,"tag":600,"props":964,"children":965},{"style":813},[966],{"type":564,"value":967}," null",{"type":559,"tag":600,"props":969,"children":970},{"style":813},[971],{"type":564,"value":917},{"type":559,"tag":600,"props":973,"children":974},{"style":831},[975],{"type":564,"value":844},{"type":559,"tag":600,"props":977,"children":978},{"style":825},[979],{"type":564,"value":926},{"type":559,"tag":600,"props":981,"children":982},{"class":602,"line":724},[983,987,991,996,1000,1004,1008,1012,1016,1020,1024,1028],{"type":559,"tag":600,"props":984,"children":985},{"style":869},[986],{"type":564,"value":872},{"type":559,"tag":600,"props":988,"children":989},{"style":825},[990],{"type":564,"value":877},{"type":559,"tag":600,"props":992,"children":993},{"style":831},[994],{"type":564,"value":995},"right",{"type":559,"tag":600,"props":997,"children":998},{"style":825},[999],{"type":564,"value":886},{"type":559,"tag":600,"props":1001,"children":1002},{"style":831},[1003],{"type":564,"value":853},{"type":559,"tag":600,"props":1005,"children":1006},{"style":813},[1007],{"type":564,"value":896},{"type":559,"tag":600,"props":1009,"children":1010},{"style":813},[1011],{"type":564,"value":901},{"type":559,"tag":600,"props":1013,"children":1014},{"style":813},[1015],{"type":564,"value":906},{"type":559,"tag":600,"props":1017,"children":1018},{"style":813},[1019],{"type":564,"value":967},{"type":559,"tag":600,"props":1021,"children":1022},{"style":813},[1023],{"type":564,"value":917},{"type":559,"tag":600,"props":1025,"children":1026},{"style":831},[1027],{"type":564,"value":853},{"type":559,"tag":600,"props":1029,"children":1030},{"style":825},[1031],{"type":564,"value":926},{"type":559,"tag":600,"props":1033,"children":1035},{"class":602,"line":1034},8,[1036],{"type":559,"tag":600,"props":1037,"children":1038},{"style":825},[1039],{"type":564,"value":1040},"}\n",{"type":559,"tag":600,"props":1042,"children":1044},{"class":602,"line":1043},9,[1045],{"type":559,"tag":600,"props":1046,"children":1048},{"emptyLinePlaceholder":1047},true,[1049],{"type":564,"value":1050},"\n",{"type":559,"tag":600,"props":1052,"children":1054},{"class":602,"line":1053},10,[1055],{"type":559,"tag":600,"props":1056,"children":1057},{"style":788},[1058],{"type":564,"value":791},{"type":559,"tag":600,"props":1060,"children":1062},{"class":602,"line":1061},11,[1063,1068,1073,1079,1084,1090,1095],{"type":559,"tag":600,"props":1064,"children":1065},{"style":788},[1066],{"type":564,"value":1067}," * ",{"type":559,"tag":600,"props":1069,"children":1070},{"style":825},[1071],{"type":564,"value":1072},"@",{"type":559,"tag":600,"props":1074,"children":1076},{"style":1075},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1077],{"type":564,"value":1078},"param",{"type":559,"tag":600,"props":1080,"children":1081},{"style":825},[1082],{"type":564,"value":1083}," {",{"type":559,"tag":600,"props":1085,"children":1087},{"style":1086},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1088],{"type":564,"value":1089},"TreeNode",{"type":559,"tag":600,"props":1091,"children":1092},{"style":825},[1093],{"type":564,"value":1094},"}",{"type":559,"tag":600,"props":1096,"children":1097},{"style":831},[1098],{"type":564,"value":1099}," root\n",{"type":559,"tag":600,"props":1101,"children":1103},{"class":602,"line":1102},12,[1104,1108,1112,1117,1121,1126],{"type":559,"tag":600,"props":1105,"children":1106},{"style":788},[1107],{"type":564,"value":1067},{"type":559,"tag":600,"props":1109,"children":1110},{"style":825},[1111],{"type":564,"value":1072},{"type":559,"tag":600,"props":1113,"children":1114},{"style":1075},[1115],{"type":564,"value":1116},"return",{"type":559,"tag":600,"props":1118,"children":1119},{"style":825},[1120],{"type":564,"value":1083},{"type":559,"tag":600,"props":1122,"children":1123},{"style":1086},[1124],{"type":564,"value":1125},"number",{"type":559,"tag":600,"props":1127,"children":1128},{"style":825},[1129],{"type":564,"value":1040},{"type":559,"tag":600,"props":1131,"children":1133},{"class":602,"line":1132},13,[1134],{"type":559,"tag":600,"props":1135,"children":1136},{"style":788},[1137],{"type":564,"value":807},{"type":559,"tag":600,"props":1139,"children":1141},{"class":602,"line":1140},14,[1142,1147,1152,1156,1161,1166,1170,1174],{"type":559,"tag":600,"props":1143,"children":1144},{"style":813},[1145],{"type":564,"value":1146},"var",{"type":559,"tag":600,"props":1148,"children":1149},{"style":819},[1150],{"type":564,"value":1151}," sumNumbers",{"type":559,"tag":600,"props":1153,"children":1154},{"style":825},[1155],{"type":564,"value":886},{"type":559,"tag":600,"props":1157,"children":1158},{"style":813},[1159],{"type":564,"value":1160}," function",{"type":559,"tag":600,"props":1162,"children":1163},{"style":825},[1164],{"type":564,"value":1165}," (",{"type":559,"tag":600,"props":1167,"children":1168},{"style":831},[1169],{"type":564,"value":556},{"type":559,"tag":600,"props":1171,"children":1172},{"style":825},[1173],{"type":564,"value":858},{"type":559,"tag":600,"props":1175,"children":1176},{"style":825},[1177],{"type":564,"value":863},{"type":559,"tag":600,"props":1179,"children":1181},{"class":602,"line":1180},15,[1182,1187,1192,1196,1200,1205,1209,1214,1218,1223],{"type":559,"tag":600,"props":1183,"children":1184},{"style":813},[1185],{"type":564,"value":1186},"  const",{"type":559,"tag":600,"props":1188,"children":1189},{"style":819},[1190],{"type":564,"value":1191}," dfs",{"type":559,"tag":600,"props":1193,"children":1194},{"style":825},[1195],{"type":564,"value":886},{"type":559,"tag":600,"props":1197,"children":1198},{"style":825},[1199],{"type":564,"value":1165},{"type":559,"tag":600,"props":1201,"children":1202},{"style":831},[1203],{"type":564,"value":1204},"node",{"type":559,"tag":600,"props":1206,"children":1207},{"style":825},[1208],{"type":564,"value":839},{"type":559,"tag":600,"props":1210,"children":1211},{"style":831},[1212],{"type":564,"value":1213}," prev",{"type":559,"tag":600,"props":1215,"children":1216},{"style":825},[1217],{"type":564,"value":858},{"type":559,"tag":600,"props":1219,"children":1220},{"style":825},[1221],{"type":564,"value":1222}," =>",{"type":559,"tag":600,"props":1224,"children":1225},{"style":825},[1226],{"type":564,"value":863},{"type":559,"tag":600,"props":1228,"children":1230},{"class":602,"line":1229},16,[1231,1236,1240,1244,1248,1252,1256,1261,1265],{"type":559,"tag":600,"props":1232,"children":1233},{"style":1075},[1234],{"type":564,"value":1235},"    if",{"type":559,"tag":600,"props":1237,"children":1238},{"style":825},[1239],{"type":564,"value":1165},{"type":559,"tag":600,"props":1241,"children":1242},{"style":831},[1243],{"type":564,"value":1204},{"type":559,"tag":600,"props":1245,"children":1246},{"style":813},[1247],{"type":564,"value":896},{"type":559,"tag":600,"props":1249,"children":1250},{"style":813},[1251],{"type":564,"value":967},{"type":559,"tag":600,"props":1253,"children":1254},{"style":825},[1255],{"type":564,"value":858},{"type":559,"tag":600,"props":1257,"children":1258},{"style":1075},[1259],{"type":564,"value":1260}," return",{"type":559,"tag":600,"props":1262,"children":1263},{"style":909},[1264],{"type":564,"value":912},{"type":559,"tag":600,"props":1266,"children":1267},{"style":825},[1268],{"type":564,"value":926},{"type":559,"tag":600,"props":1270,"children":1272},{"class":602,"line":1271},17,[1273,1278,1283,1287,1291,1296,1301,1306,1311,1315,1319],{"type":559,"tag":600,"props":1274,"children":1275},{"style":813},[1276],{"type":564,"value":1277},"    let",{"type":559,"tag":600,"props":1279,"children":1280},{"style":831},[1281],{"type":564,"value":1282}," sum",{"type":559,"tag":600,"props":1284,"children":1285},{"style":825},[1286],{"type":564,"value":886},{"type":559,"tag":600,"props":1288,"children":1289},{"style":831},[1290],{"type":564,"value":1213},{"type":559,"tag":600,"props":1292,"children":1293},{"style":813},[1294],{"type":564,"value":1295}," *",{"type":559,"tag":600,"props":1297,"children":1298},{"style":909},[1299],{"type":564,"value":1300}," 10",{"type":559,"tag":600,"props":1302,"children":1303},{"style":813},[1304],{"type":564,"value":1305}," +",{"type":559,"tag":600,"props":1307,"children":1308},{"style":831},[1309],{"type":564,"value":1310}," node",{"type":559,"tag":600,"props":1312,"children":1313},{"style":825},[1314],{"type":564,"value":877},{"type":559,"tag":600,"props":1316,"children":1317},{"style":831},[1318],{"type":564,"value":834},{"type":559,"tag":600,"props":1320,"children":1321},{"style":825},[1322],{"type":564,"value":926},{"type":559,"tag":600,"props":1324,"children":1326},{"class":602,"line":1325},18,[1327,1331,1335,1339,1343,1347,1351,1355,1360,1364,1368,1372,1376,1380,1384,1388,1392],{"type":559,"tag":600,"props":1328,"children":1329},{"style":1075},[1330],{"type":564,"value":1235},{"type":559,"tag":600,"props":1332,"children":1333},{"style":825},[1334],{"type":564,"value":1165},{"type":559,"tag":600,"props":1336,"children":1337},{"style":831},[1338],{"type":564,"value":1204},{"type":559,"tag":600,"props":1340,"children":1341},{"style":825},[1342],{"type":564,"value":877},{"type":559,"tag":600,"props":1344,"children":1345},{"style":831},[1346],{"type":564,"value":942},{"type":559,"tag":600,"props":1348,"children":1349},{"style":813},[1350],{"type":564,"value":896},{"type":559,"tag":600,"props":1352,"children":1353},{"style":813},[1354],{"type":564,"value":967},{"type":559,"tag":600,"props":1356,"children":1357},{"style":813},[1358],{"type":564,"value":1359}," &&",{"type":559,"tag":600,"props":1361,"children":1362},{"style":831},[1363],{"type":564,"value":1310},{"type":559,"tag":600,"props":1365,"children":1366},{"style":825},[1367],{"type":564,"value":877},{"type":559,"tag":600,"props":1369,"children":1370},{"style":831},[1371],{"type":564,"value":995},{"type":559,"tag":600,"props":1373,"children":1374},{"style":813},[1375],{"type":564,"value":896},{"type":559,"tag":600,"props":1377,"children":1378},{"style":813},[1379],{"type":564,"value":967},{"type":559,"tag":600,"props":1381,"children":1382},{"style":825},[1383],{"type":564,"value":858},{"type":559,"tag":600,"props":1385,"children":1386},{"style":1075},[1387],{"type":564,"value":1260},{"type":559,"tag":600,"props":1389,"children":1390},{"style":831},[1391],{"type":564,"value":1282},{"type":559,"tag":600,"props":1393,"children":1394},{"style":825},[1395],{"type":564,"value":926},{"type":559,"tag":600,"props":1397,"children":1399},{"class":602,"line":1398},19,[1400,1405,1409,1413,1417,1421,1425,1429,1433,1437,1441,1445,1449,1453,1457,1461,1465,1469],{"type":559,"tag":600,"props":1401,"children":1402},{"style":1075},[1403],{"type":564,"value":1404},"    return",{"type":559,"tag":600,"props":1406,"children":1407},{"style":819},[1408],{"type":564,"value":1191},{"type":559,"tag":600,"props":1410,"children":1411},{"style":825},[1412],{"type":564,"value":828},{"type":559,"tag":600,"props":1414,"children":1415},{"style":831},[1416],{"type":564,"value":1204},{"type":559,"tag":600,"props":1418,"children":1419},{"style":825},[1420],{"type":564,"value":877},{"type":559,"tag":600,"props":1422,"children":1423},{"style":831},[1424],{"type":564,"value":942},{"type":559,"tag":600,"props":1426,"children":1427},{"style":825},[1428],{"type":564,"value":839},{"type":559,"tag":600,"props":1430,"children":1431},{"style":831},[1432],{"type":564,"value":1282},{"type":559,"tag":600,"props":1434,"children":1435},{"style":825},[1436],{"type":564,"value":858},{"type":559,"tag":600,"props":1438,"children":1439},{"style":813},[1440],{"type":564,"value":1305},{"type":559,"tag":600,"props":1442,"children":1443},{"style":819},[1444],{"type":564,"value":1191},{"type":559,"tag":600,"props":1446,"children":1447},{"style":825},[1448],{"type":564,"value":828},{"type":559,"tag":600,"props":1450,"children":1451},{"style":831},[1452],{"type":564,"value":1204},{"type":559,"tag":600,"props":1454,"children":1455},{"style":825},[1456],{"type":564,"value":877},{"type":559,"tag":600,"props":1458,"children":1459},{"style":831},[1460],{"type":564,"value":995},{"type":559,"tag":600,"props":1462,"children":1463},{"style":825},[1464],{"type":564,"value":839},{"type":559,"tag":600,"props":1466,"children":1467},{"style":831},[1468],{"type":564,"value":1282},{"type":559,"tag":600,"props":1470,"children":1471},{"style":825},[1472],{"type":564,"value":1473},");\n",{"type":559,"tag":600,"props":1475,"children":1477},{"class":602,"line":1476},20,[1478],{"type":559,"tag":600,"props":1479,"children":1480},{"style":825},[1481],{"type":564,"value":1482},"  };\n",{"type":559,"tag":600,"props":1484,"children":1486},{"class":602,"line":1485},21,[1487,1492,1496,1500,1504,1508,1512],{"type":559,"tag":600,"props":1488,"children":1489},{"style":1075},[1490],{"type":564,"value":1491},"  return",{"type":559,"tag":600,"props":1493,"children":1494},{"style":819},[1495],{"type":564,"value":1191},{"type":559,"tag":600,"props":1497,"children":1498},{"style":825},[1499],{"type":564,"value":828},{"type":559,"tag":600,"props":1501,"children":1502},{"style":831},[1503],{"type":564,"value":556},{"type":559,"tag":600,"props":1505,"children":1506},{"style":825},[1507],{"type":564,"value":839},{"type":559,"tag":600,"props":1509,"children":1510},{"style":909},[1511],{"type":564,"value":912},{"type":559,"tag":600,"props":1513,"children":1514},{"style":825},[1515],{"type":564,"value":1473},{"type":559,"tag":600,"props":1517,"children":1519},{"class":602,"line":1518},22,[1520],{"type":559,"tag":600,"props":1521,"children":1522},{"style":825},[1523],{"type":564,"value":1524},"};\n",{"type":559,"tag":1526,"props":1527,"children":1528},"style",{},[1529],{"type":564,"value":1530},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":639,"depth":639,"links":1532},[1533,1534],{"id":759,"depth":612,"text":759},{"id":764,"depth":612,"text":764,"children":1535},[1536],{"id":770,"depth":621,"text":773},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1543,1545],{"_path":165,"title":164,"description":1544},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":171,"title":170,"description":1546},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1715007495644]