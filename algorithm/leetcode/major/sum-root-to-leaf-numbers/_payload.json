[{"data":1,"prerenderedAt":1501},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":503,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1496},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":168,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":167,"description":507,"url":508,"body":509,"_type":1491,"_id":1492,"_source":1493,"_file":1494,"_extension":1495},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":510,"children":511,"toc":1485},"root",[512,519,524,529,534,543,609,614,622,685,690,710,716,721,728,1479],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522],{"type":518,"value":523},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":513,"tag":514,"props":525,"children":526},{},[527],{"type":518,"value":528},"叶节点 是指没有子节点的节点。",{"type":513,"tag":514,"props":530,"children":531},{},[532],{"type":518,"value":533},"示例 1：",{"type":513,"tag":514,"props":535,"children":536},{},[537],{"type":513,"tag":538,"props":539,"children":542},"img",{"alt":540,"src":541},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":513,"tag":544,"props":545,"children":548},"pre",{"className":546,"code":547,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[549],{"type":513,"tag":550,"props":551,"children":552},"code",{"__ignoreMap":506},[553,564,573,582,591,600],{"type":513,"tag":554,"props":555,"children":558},"span",{"class":556,"line":557},"line",1,[559],{"type":513,"tag":554,"props":560,"children":561},{},[562],{"type":518,"value":563},"输入：root = [1,2,3]\n",{"type":513,"tag":554,"props":565,"children":567},{"class":556,"line":566},2,[568],{"type":513,"tag":554,"props":569,"children":570},{},[571],{"type":518,"value":572},"输出：25\n",{"type":513,"tag":554,"props":574,"children":576},{"class":556,"line":575},3,[577],{"type":513,"tag":554,"props":578,"children":579},{},[580],{"type":518,"value":581},"解释：\n",{"type":513,"tag":554,"props":583,"children":585},{"class":556,"line":584},4,[586],{"type":513,"tag":554,"props":587,"children":588},{},[589],{"type":518,"value":590},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":513,"tag":554,"props":592,"children":594},{"class":556,"line":593},5,[595],{"type":513,"tag":554,"props":596,"children":597},{},[598],{"type":518,"value":599},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":513,"tag":554,"props":601,"children":603},{"class":556,"line":602},6,[604],{"type":513,"tag":554,"props":605,"children":606},{},[607],{"type":518,"value":608},"因此，数字总和 = 12 + 13 = 25\n",{"type":513,"tag":514,"props":610,"children":611},{},[612],{"type":518,"value":613},"示例 2：",{"type":513,"tag":514,"props":615,"children":616},{},[617],{"type":513,"tag":538,"props":618,"children":621},{"alt":619,"src":620},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":513,"tag":544,"props":623,"children":625},{"className":546,"code":624,"language":518,"meta":506,"style":506},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[626],{"type":513,"tag":550,"props":627,"children":628},{"__ignoreMap":506},[629,637,645,652,660,668,676],{"type":513,"tag":554,"props":630,"children":631},{"class":556,"line":557},[632],{"type":513,"tag":554,"props":633,"children":634},{},[635],{"type":518,"value":636},"输入：root = [4,9,0,5,1]\n",{"type":513,"tag":554,"props":638,"children":639},{"class":556,"line":566},[640],{"type":513,"tag":554,"props":641,"children":642},{},[643],{"type":518,"value":644},"输出：1026\n",{"type":513,"tag":554,"props":646,"children":647},{"class":556,"line":575},[648],{"type":513,"tag":554,"props":649,"children":650},{},[651],{"type":518,"value":581},{"type":513,"tag":554,"props":653,"children":654},{"class":556,"line":584},[655],{"type":513,"tag":554,"props":656,"children":657},{},[658],{"type":518,"value":659},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":513,"tag":554,"props":661,"children":662},{"class":556,"line":593},[663],{"type":513,"tag":554,"props":664,"children":665},{},[666],{"type":518,"value":667},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":513,"tag":554,"props":669,"children":670},{"class":556,"line":602},[671],{"type":513,"tag":554,"props":672,"children":673},{},[674],{"type":518,"value":675},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":513,"tag":554,"props":677,"children":679},{"class":556,"line":678},7,[680],{"type":513,"tag":554,"props":681,"children":682},{},[683],{"type":518,"value":684},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":513,"tag":514,"props":686,"children":687},{},[688],{"type":518,"value":689},"提示：",{"type":513,"tag":691,"props":692,"children":693},"ul",{},[694,700,705],{"type":513,"tag":695,"props":696,"children":697},"li",{},[698],{"type":518,"value":699},"树中节点的数目在范围 [1, 1000] 内",{"type":513,"tag":695,"props":701,"children":702},{},[703],{"type":518,"value":704},"0 \u003C= Node.val \u003C= 9",{"type":513,"tag":695,"props":706,"children":707},{},[708],{"type":518,"value":709},"树的深度不超过 10",{"type":513,"tag":711,"props":712,"children":714},"h2",{"id":713},"解题思路",[715],{"type":518,"value":713},{"type":513,"tag":711,"props":717,"children":719},{"id":718},"实现",[720],{"type":518,"value":718},{"type":513,"tag":722,"props":723,"children":725},"h3",{"id":724},"深度优先搜素-dfs",[726],{"type":518,"value":727},"深度优先搜素 - dfs",{"type":513,"tag":544,"props":729,"children":733},{"className":730,"code":731,"language":732,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[734],{"type":513,"tag":550,"props":735,"children":736},{"__ignoreMap":506},[737,746,754,762,818,881,934,986,995,1005,1013,1054,1084,1092,1132,1181,1223,1277,1350,1428,1437,1470],{"type":513,"tag":554,"props":738,"children":739},{"class":556,"line":557},[740],{"type":513,"tag":554,"props":741,"children":743},{"style":742},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[744],{"type":518,"value":745},"/**\n",{"type":513,"tag":554,"props":747,"children":748},{"class":556,"line":566},[749],{"type":513,"tag":554,"props":750,"children":751},{"style":742},[752],{"type":518,"value":753}," * Definition for a binary tree node.\n",{"type":513,"tag":554,"props":755,"children":756},{"class":556,"line":575},[757],{"type":513,"tag":554,"props":758,"children":759},{"style":742},[760],{"type":518,"value":761}," */\n",{"type":513,"tag":554,"props":763,"children":764},{"class":556,"line":584},[765,771,777,783,789,794,799,803,808,813],{"type":513,"tag":554,"props":766,"children":768},{"style":767},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[769],{"type":518,"value":770},"function",{"type":513,"tag":554,"props":772,"children":774},{"style":773},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[775],{"type":518,"value":776}," TreeNode",{"type":513,"tag":554,"props":778,"children":780},{"style":779},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[781],{"type":518,"value":782},"(",{"type":513,"tag":554,"props":784,"children":786},{"style":785},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[787],{"type":518,"value":788},"val",{"type":513,"tag":554,"props":790,"children":791},{"style":779},[792],{"type":518,"value":793},",",{"type":513,"tag":554,"props":795,"children":796},{"style":785},[797],{"type":518,"value":798}," left",{"type":513,"tag":554,"props":800,"children":801},{"style":779},[802],{"type":518,"value":793},{"type":513,"tag":554,"props":804,"children":805},{"style":785},[806],{"type":518,"value":807}," right",{"type":513,"tag":554,"props":809,"children":810},{"style":779},[811],{"type":518,"value":812},")",{"type":513,"tag":554,"props":814,"children":815},{"style":779},[816],{"type":518,"value":817}," {\n",{"type":513,"tag":554,"props":819,"children":820},{"class":556,"line":593},[821,827,832,836,841,846,851,856,861,867,872,876],{"type":513,"tag":554,"props":822,"children":824},{"style":823},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[825],{"type":518,"value":826},"  this",{"type":513,"tag":554,"props":828,"children":829},{"style":779},[830],{"type":518,"value":831},".",{"type":513,"tag":554,"props":833,"children":834},{"style":785},[835],{"type":518,"value":788},{"type":513,"tag":554,"props":837,"children":838},{"style":779},[839],{"type":518,"value":840}," =",{"type":513,"tag":554,"props":842,"children":843},{"style":785},[844],{"type":518,"value":845}," val",{"type":513,"tag":554,"props":847,"children":848},{"style":767},[849],{"type":518,"value":850}," ===",{"type":513,"tag":554,"props":852,"children":853},{"style":767},[854],{"type":518,"value":855}," undefined",{"type":513,"tag":554,"props":857,"children":858},{"style":767},[859],{"type":518,"value":860}," ?",{"type":513,"tag":554,"props":862,"children":864},{"style":863},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[865],{"type":518,"value":866}," 0",{"type":513,"tag":554,"props":868,"children":869},{"style":767},[870],{"type":518,"value":871}," :",{"type":513,"tag":554,"props":873,"children":874},{"style":785},[875],{"type":518,"value":845},{"type":513,"tag":554,"props":877,"children":878},{"style":779},[879],{"type":518,"value":880},";\n",{"type":513,"tag":554,"props":882,"children":883},{"class":556,"line":602},[884,888,892,897,901,905,909,913,917,922,926,930],{"type":513,"tag":554,"props":885,"children":886},{"style":823},[887],{"type":518,"value":826},{"type":513,"tag":554,"props":889,"children":890},{"style":779},[891],{"type":518,"value":831},{"type":513,"tag":554,"props":893,"children":894},{"style":785},[895],{"type":518,"value":896},"left",{"type":513,"tag":554,"props":898,"children":899},{"style":779},[900],{"type":518,"value":840},{"type":513,"tag":554,"props":902,"children":903},{"style":785},[904],{"type":518,"value":798},{"type":513,"tag":554,"props":906,"children":907},{"style":767},[908],{"type":518,"value":850},{"type":513,"tag":554,"props":910,"children":911},{"style":767},[912],{"type":518,"value":855},{"type":513,"tag":554,"props":914,"children":915},{"style":767},[916],{"type":518,"value":860},{"type":513,"tag":554,"props":918,"children":919},{"style":767},[920],{"type":518,"value":921}," null",{"type":513,"tag":554,"props":923,"children":924},{"style":767},[925],{"type":518,"value":871},{"type":513,"tag":554,"props":927,"children":928},{"style":785},[929],{"type":518,"value":798},{"type":513,"tag":554,"props":931,"children":932},{"style":779},[933],{"type":518,"value":880},{"type":513,"tag":554,"props":935,"children":936},{"class":556,"line":678},[937,941,945,950,954,958,962,966,970,974,978,982],{"type":513,"tag":554,"props":938,"children":939},{"style":823},[940],{"type":518,"value":826},{"type":513,"tag":554,"props":942,"children":943},{"style":779},[944],{"type":518,"value":831},{"type":513,"tag":554,"props":946,"children":947},{"style":785},[948],{"type":518,"value":949},"right",{"type":513,"tag":554,"props":951,"children":952},{"style":779},[953],{"type":518,"value":840},{"type":513,"tag":554,"props":955,"children":956},{"style":785},[957],{"type":518,"value":807},{"type":513,"tag":554,"props":959,"children":960},{"style":767},[961],{"type":518,"value":850},{"type":513,"tag":554,"props":963,"children":964},{"style":767},[965],{"type":518,"value":855},{"type":513,"tag":554,"props":967,"children":968},{"style":767},[969],{"type":518,"value":860},{"type":513,"tag":554,"props":971,"children":972},{"style":767},[973],{"type":518,"value":921},{"type":513,"tag":554,"props":975,"children":976},{"style":767},[977],{"type":518,"value":871},{"type":513,"tag":554,"props":979,"children":980},{"style":785},[981],{"type":518,"value":807},{"type":513,"tag":554,"props":983,"children":984},{"style":779},[985],{"type":518,"value":880},{"type":513,"tag":554,"props":987,"children":989},{"class":556,"line":988},8,[990],{"type":513,"tag":554,"props":991,"children":992},{"style":779},[993],{"type":518,"value":994},"}\n",{"type":513,"tag":554,"props":996,"children":998},{"class":556,"line":997},9,[999],{"type":513,"tag":554,"props":1000,"children":1002},{"emptyLinePlaceholder":1001},true,[1003],{"type":518,"value":1004},"\n",{"type":513,"tag":554,"props":1006,"children":1008},{"class":556,"line":1007},10,[1009],{"type":513,"tag":554,"props":1010,"children":1011},{"style":742},[1012],{"type":518,"value":745},{"type":513,"tag":554,"props":1014,"children":1016},{"class":556,"line":1015},11,[1017,1022,1027,1033,1038,1044,1049],{"type":513,"tag":554,"props":1018,"children":1019},{"style":742},[1020],{"type":518,"value":1021}," * ",{"type":513,"tag":554,"props":1023,"children":1024},{"style":779},[1025],{"type":518,"value":1026},"@",{"type":513,"tag":554,"props":1028,"children":1030},{"style":1029},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1031],{"type":518,"value":1032},"param",{"type":513,"tag":554,"props":1034,"children":1035},{"style":779},[1036],{"type":518,"value":1037}," {",{"type":513,"tag":554,"props":1039,"children":1041},{"style":1040},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1042],{"type":518,"value":1043},"TreeNode",{"type":513,"tag":554,"props":1045,"children":1046},{"style":779},[1047],{"type":518,"value":1048},"}",{"type":513,"tag":554,"props":1050,"children":1051},{"style":785},[1052],{"type":518,"value":1053}," root\n",{"type":513,"tag":554,"props":1055,"children":1057},{"class":556,"line":1056},12,[1058,1062,1066,1071,1075,1080],{"type":513,"tag":554,"props":1059,"children":1060},{"style":742},[1061],{"type":518,"value":1021},{"type":513,"tag":554,"props":1063,"children":1064},{"style":779},[1065],{"type":518,"value":1026},{"type":513,"tag":554,"props":1067,"children":1068},{"style":1029},[1069],{"type":518,"value":1070},"return",{"type":513,"tag":554,"props":1072,"children":1073},{"style":779},[1074],{"type":518,"value":1037},{"type":513,"tag":554,"props":1076,"children":1077},{"style":1040},[1078],{"type":518,"value":1079},"number",{"type":513,"tag":554,"props":1081,"children":1082},{"style":779},[1083],{"type":518,"value":994},{"type":513,"tag":554,"props":1085,"children":1087},{"class":556,"line":1086},13,[1088],{"type":513,"tag":554,"props":1089,"children":1090},{"style":742},[1091],{"type":518,"value":761},{"type":513,"tag":554,"props":1093,"children":1095},{"class":556,"line":1094},14,[1096,1101,1106,1110,1115,1120,1124,1128],{"type":513,"tag":554,"props":1097,"children":1098},{"style":767},[1099],{"type":518,"value":1100},"var",{"type":513,"tag":554,"props":1102,"children":1103},{"style":773},[1104],{"type":518,"value":1105}," sumNumbers",{"type":513,"tag":554,"props":1107,"children":1108},{"style":779},[1109],{"type":518,"value":840},{"type":513,"tag":554,"props":1111,"children":1112},{"style":767},[1113],{"type":518,"value":1114}," function",{"type":513,"tag":554,"props":1116,"children":1117},{"style":779},[1118],{"type":518,"value":1119}," (",{"type":513,"tag":554,"props":1121,"children":1122},{"style":785},[1123],{"type":518,"value":510},{"type":513,"tag":554,"props":1125,"children":1126},{"style":779},[1127],{"type":518,"value":812},{"type":513,"tag":554,"props":1129,"children":1130},{"style":779},[1131],{"type":518,"value":817},{"type":513,"tag":554,"props":1133,"children":1135},{"class":556,"line":1134},15,[1136,1141,1146,1150,1154,1159,1163,1168,1172,1177],{"type":513,"tag":554,"props":1137,"children":1138},{"style":767},[1139],{"type":518,"value":1140},"  const",{"type":513,"tag":554,"props":1142,"children":1143},{"style":773},[1144],{"type":518,"value":1145}," dfs",{"type":513,"tag":554,"props":1147,"children":1148},{"style":779},[1149],{"type":518,"value":840},{"type":513,"tag":554,"props":1151,"children":1152},{"style":779},[1153],{"type":518,"value":1119},{"type":513,"tag":554,"props":1155,"children":1156},{"style":785},[1157],{"type":518,"value":1158},"node",{"type":513,"tag":554,"props":1160,"children":1161},{"style":779},[1162],{"type":518,"value":793},{"type":513,"tag":554,"props":1164,"children":1165},{"style":785},[1166],{"type":518,"value":1167}," prev",{"type":513,"tag":554,"props":1169,"children":1170},{"style":779},[1171],{"type":518,"value":812},{"type":513,"tag":554,"props":1173,"children":1174},{"style":779},[1175],{"type":518,"value":1176}," =>",{"type":513,"tag":554,"props":1178,"children":1179},{"style":779},[1180],{"type":518,"value":817},{"type":513,"tag":554,"props":1182,"children":1184},{"class":556,"line":1183},16,[1185,1190,1194,1198,1202,1206,1210,1215,1219],{"type":513,"tag":554,"props":1186,"children":1187},{"style":1029},[1188],{"type":518,"value":1189},"    if",{"type":513,"tag":554,"props":1191,"children":1192},{"style":779},[1193],{"type":518,"value":1119},{"type":513,"tag":554,"props":1195,"children":1196},{"style":785},[1197],{"type":518,"value":1158},{"type":513,"tag":554,"props":1199,"children":1200},{"style":767},[1201],{"type":518,"value":850},{"type":513,"tag":554,"props":1203,"children":1204},{"style":767},[1205],{"type":518,"value":921},{"type":513,"tag":554,"props":1207,"children":1208},{"style":779},[1209],{"type":518,"value":812},{"type":513,"tag":554,"props":1211,"children":1212},{"style":1029},[1213],{"type":518,"value":1214}," return",{"type":513,"tag":554,"props":1216,"children":1217},{"style":863},[1218],{"type":518,"value":866},{"type":513,"tag":554,"props":1220,"children":1221},{"style":779},[1222],{"type":518,"value":880},{"type":513,"tag":554,"props":1224,"children":1226},{"class":556,"line":1225},17,[1227,1232,1237,1241,1245,1250,1255,1260,1265,1269,1273],{"type":513,"tag":554,"props":1228,"children":1229},{"style":767},[1230],{"type":518,"value":1231},"    let",{"type":513,"tag":554,"props":1233,"children":1234},{"style":785},[1235],{"type":518,"value":1236}," sum",{"type":513,"tag":554,"props":1238,"children":1239},{"style":779},[1240],{"type":518,"value":840},{"type":513,"tag":554,"props":1242,"children":1243},{"style":785},[1244],{"type":518,"value":1167},{"type":513,"tag":554,"props":1246,"children":1247},{"style":767},[1248],{"type":518,"value":1249}," *",{"type":513,"tag":554,"props":1251,"children":1252},{"style":863},[1253],{"type":518,"value":1254}," 10",{"type":513,"tag":554,"props":1256,"children":1257},{"style":767},[1258],{"type":518,"value":1259}," +",{"type":513,"tag":554,"props":1261,"children":1262},{"style":785},[1263],{"type":518,"value":1264}," node",{"type":513,"tag":554,"props":1266,"children":1267},{"style":779},[1268],{"type":518,"value":831},{"type":513,"tag":554,"props":1270,"children":1271},{"style":785},[1272],{"type":518,"value":788},{"type":513,"tag":554,"props":1274,"children":1275},{"style":779},[1276],{"type":518,"value":880},{"type":513,"tag":554,"props":1278,"children":1280},{"class":556,"line":1279},18,[1281,1285,1289,1293,1297,1301,1305,1309,1314,1318,1322,1326,1330,1334,1338,1342,1346],{"type":513,"tag":554,"props":1282,"children":1283},{"style":1029},[1284],{"type":518,"value":1189},{"type":513,"tag":554,"props":1286,"children":1287},{"style":779},[1288],{"type":518,"value":1119},{"type":513,"tag":554,"props":1290,"children":1291},{"style":785},[1292],{"type":518,"value":1158},{"type":513,"tag":554,"props":1294,"children":1295},{"style":779},[1296],{"type":518,"value":831},{"type":513,"tag":554,"props":1298,"children":1299},{"style":785},[1300],{"type":518,"value":896},{"type":513,"tag":554,"props":1302,"children":1303},{"style":767},[1304],{"type":518,"value":850},{"type":513,"tag":554,"props":1306,"children":1307},{"style":767},[1308],{"type":518,"value":921},{"type":513,"tag":554,"props":1310,"children":1311},{"style":767},[1312],{"type":518,"value":1313}," &&",{"type":513,"tag":554,"props":1315,"children":1316},{"style":785},[1317],{"type":518,"value":1264},{"type":513,"tag":554,"props":1319,"children":1320},{"style":779},[1321],{"type":518,"value":831},{"type":513,"tag":554,"props":1323,"children":1324},{"style":785},[1325],{"type":518,"value":949},{"type":513,"tag":554,"props":1327,"children":1328},{"style":767},[1329],{"type":518,"value":850},{"type":513,"tag":554,"props":1331,"children":1332},{"style":767},[1333],{"type":518,"value":921},{"type":513,"tag":554,"props":1335,"children":1336},{"style":779},[1337],{"type":518,"value":812},{"type":513,"tag":554,"props":1339,"children":1340},{"style":1029},[1341],{"type":518,"value":1214},{"type":513,"tag":554,"props":1343,"children":1344},{"style":785},[1345],{"type":518,"value":1236},{"type":513,"tag":554,"props":1347,"children":1348},{"style":779},[1349],{"type":518,"value":880},{"type":513,"tag":554,"props":1351,"children":1353},{"class":556,"line":1352},19,[1354,1359,1363,1367,1371,1375,1379,1383,1387,1391,1395,1399,1403,1407,1411,1415,1419,1423],{"type":513,"tag":554,"props":1355,"children":1356},{"style":1029},[1357],{"type":518,"value":1358},"    return",{"type":513,"tag":554,"props":1360,"children":1361},{"style":773},[1362],{"type":518,"value":1145},{"type":513,"tag":554,"props":1364,"children":1365},{"style":779},[1366],{"type":518,"value":782},{"type":513,"tag":554,"props":1368,"children":1369},{"style":785},[1370],{"type":518,"value":1158},{"type":513,"tag":554,"props":1372,"children":1373},{"style":779},[1374],{"type":518,"value":831},{"type":513,"tag":554,"props":1376,"children":1377},{"style":785},[1378],{"type":518,"value":896},{"type":513,"tag":554,"props":1380,"children":1381},{"style":779},[1382],{"type":518,"value":793},{"type":513,"tag":554,"props":1384,"children":1385},{"style":785},[1386],{"type":518,"value":1236},{"type":513,"tag":554,"props":1388,"children":1389},{"style":779},[1390],{"type":518,"value":812},{"type":513,"tag":554,"props":1392,"children":1393},{"style":767},[1394],{"type":518,"value":1259},{"type":513,"tag":554,"props":1396,"children":1397},{"style":773},[1398],{"type":518,"value":1145},{"type":513,"tag":554,"props":1400,"children":1401},{"style":779},[1402],{"type":518,"value":782},{"type":513,"tag":554,"props":1404,"children":1405},{"style":785},[1406],{"type":518,"value":1158},{"type":513,"tag":554,"props":1408,"children":1409},{"style":779},[1410],{"type":518,"value":831},{"type":513,"tag":554,"props":1412,"children":1413},{"style":785},[1414],{"type":518,"value":949},{"type":513,"tag":554,"props":1416,"children":1417},{"style":779},[1418],{"type":518,"value":793},{"type":513,"tag":554,"props":1420,"children":1421},{"style":785},[1422],{"type":518,"value":1236},{"type":513,"tag":554,"props":1424,"children":1425},{"style":779},[1426],{"type":518,"value":1427},");\n",{"type":513,"tag":554,"props":1429,"children":1431},{"class":556,"line":1430},20,[1432],{"type":513,"tag":554,"props":1433,"children":1434},{"style":779},[1435],{"type":518,"value":1436},"  };\n",{"type":513,"tag":554,"props":1438,"children":1440},{"class":556,"line":1439},21,[1441,1446,1450,1454,1458,1462,1466],{"type":513,"tag":554,"props":1442,"children":1443},{"style":1029},[1444],{"type":518,"value":1445},"  return",{"type":513,"tag":554,"props":1447,"children":1448},{"style":773},[1449],{"type":518,"value":1145},{"type":513,"tag":554,"props":1451,"children":1452},{"style":779},[1453],{"type":518,"value":782},{"type":513,"tag":554,"props":1455,"children":1456},{"style":785},[1457],{"type":518,"value":510},{"type":513,"tag":554,"props":1459,"children":1460},{"style":779},[1461],{"type":518,"value":793},{"type":513,"tag":554,"props":1463,"children":1464},{"style":863},[1465],{"type":518,"value":866},{"type":513,"tag":554,"props":1467,"children":1468},{"style":779},[1469],{"type":518,"value":1427},{"type":513,"tag":554,"props":1471,"children":1473},{"class":556,"line":1472},22,[1474],{"type":513,"tag":554,"props":1475,"children":1476},{"style":779},[1477],{"type":518,"value":1478},"};\n",{"type":513,"tag":1480,"props":1481,"children":1482},"style",{},[1483],{"type":518,"value":1484},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":593,"depth":593,"links":1486},[1487,1488],{"id":713,"depth":566,"text":713},{"id":718,"depth":566,"text":718,"children":1489},[1490],{"id":724,"depth":575,"text":727},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1497,1499],{"_path":165,"title":164,"description":1498},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":171,"title":170,"description":1500},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1714056094299]