[{"data":1,"prerenderedAt":1453},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":466,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1448},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":168,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":167,"description":470,"url":471,"body":472,"_type":1443,"_id":1444,"_source":1445,"_file":1446,"_extension":1447},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":473,"children":474,"toc":1437},"root",[475,482,487,492,497,506,572,577,585,648,653,673,679,684,691,1431],{"type":476,"tag":477,"props":478,"children":479},"element","p",{},[480],{"type":481,"value":470},"text",{"type":476,"tag":477,"props":483,"children":484},{},[485],{"type":481,"value":486},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":476,"tag":477,"props":488,"children":489},{},[490],{"type":481,"value":491},"叶节点 是指没有子节点的节点。",{"type":476,"tag":477,"props":493,"children":494},{},[495],{"type":481,"value":496},"示例 1：",{"type":476,"tag":477,"props":498,"children":499},{},[500],{"type":476,"tag":501,"props":502,"children":505},"img",{"alt":503,"src":504},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":476,"tag":507,"props":508,"children":511},"pre",{"className":509,"code":510,"language":481,"meta":469,"style":469},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[512],{"type":476,"tag":513,"props":514,"children":515},"code",{"__ignoreMap":469},[516,527,536,545,554,563],{"type":476,"tag":517,"props":518,"children":521},"span",{"class":519,"line":520},"line",1,[522],{"type":476,"tag":517,"props":523,"children":524},{},[525],{"type":481,"value":526},"输入：root = [1,2,3]\n",{"type":476,"tag":517,"props":528,"children":530},{"class":519,"line":529},2,[531],{"type":476,"tag":517,"props":532,"children":533},{},[534],{"type":481,"value":535},"输出：25\n",{"type":476,"tag":517,"props":537,"children":539},{"class":519,"line":538},3,[540],{"type":476,"tag":517,"props":541,"children":542},{},[543],{"type":481,"value":544},"解释：\n",{"type":476,"tag":517,"props":546,"children":548},{"class":519,"line":547},4,[549],{"type":476,"tag":517,"props":550,"children":551},{},[552],{"type":481,"value":553},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":476,"tag":517,"props":555,"children":557},{"class":519,"line":556},5,[558],{"type":476,"tag":517,"props":559,"children":560},{},[561],{"type":481,"value":562},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":476,"tag":517,"props":564,"children":566},{"class":519,"line":565},6,[567],{"type":476,"tag":517,"props":568,"children":569},{},[570],{"type":481,"value":571},"因此，数字总和 = 12 + 13 = 25\n",{"type":476,"tag":477,"props":573,"children":574},{},[575],{"type":481,"value":576},"示例 2：",{"type":476,"tag":477,"props":578,"children":579},{},[580],{"type":476,"tag":501,"props":581,"children":584},{"alt":582,"src":583},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":476,"tag":507,"props":586,"children":588},{"className":509,"code":587,"language":481,"meta":469,"style":469},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[589],{"type":476,"tag":513,"props":590,"children":591},{"__ignoreMap":469},[592,600,608,615,623,631,639],{"type":476,"tag":517,"props":593,"children":594},{"class":519,"line":520},[595],{"type":476,"tag":517,"props":596,"children":597},{},[598],{"type":481,"value":599},"输入：root = [4,9,0,5,1]\n",{"type":476,"tag":517,"props":601,"children":602},{"class":519,"line":529},[603],{"type":476,"tag":517,"props":604,"children":605},{},[606],{"type":481,"value":607},"输出：1026\n",{"type":476,"tag":517,"props":609,"children":610},{"class":519,"line":538},[611],{"type":476,"tag":517,"props":612,"children":613},{},[614],{"type":481,"value":544},{"type":476,"tag":517,"props":616,"children":617},{"class":519,"line":547},[618],{"type":476,"tag":517,"props":619,"children":620},{},[621],{"type":481,"value":622},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":476,"tag":517,"props":624,"children":625},{"class":519,"line":556},[626],{"type":476,"tag":517,"props":627,"children":628},{},[629],{"type":481,"value":630},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":476,"tag":517,"props":632,"children":633},{"class":519,"line":565},[634],{"type":476,"tag":517,"props":635,"children":636},{},[637],{"type":481,"value":638},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":476,"tag":517,"props":640,"children":642},{"class":519,"line":641},7,[643],{"type":476,"tag":517,"props":644,"children":645},{},[646],{"type":481,"value":647},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":476,"tag":477,"props":649,"children":650},{},[651],{"type":481,"value":652},"提示：",{"type":476,"tag":654,"props":655,"children":656},"ul",{},[657,663,668],{"type":476,"tag":658,"props":659,"children":660},"li",{},[661],{"type":481,"value":662},"树中节点的数目在范围 [1, 1000] 内",{"type":476,"tag":658,"props":664,"children":665},{},[666],{"type":481,"value":667},"0 \u003C= Node.val \u003C= 9",{"type":476,"tag":658,"props":669,"children":670},{},[671],{"type":481,"value":672},"树的深度不超过 10",{"type":476,"tag":674,"props":675,"children":677},"h2",{"id":676},"解题思路",[678],{"type":481,"value":676},{"type":476,"tag":674,"props":680,"children":682},{"id":681},"实现",[683],{"type":481,"value":681},{"type":476,"tag":685,"props":686,"children":688},"h3",{"id":687},"深度优先搜素-dfs",[689],{"type":481,"value":690},"深度优先搜素 - dfs",{"type":476,"tag":507,"props":692,"children":696},{"className":693,"code":694,"language":695,"meta":469,"style":469},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[697],{"type":476,"tag":513,"props":698,"children":699},{"__ignoreMap":469},[700,709,717,725,777,843,896,948,957,967,975,1002,1020,1028,1064,1115,1158,1212,1285,1368,1381,1418],{"type":476,"tag":517,"props":701,"children":702},{"class":519,"line":520},[703],{"type":476,"tag":517,"props":704,"children":706},{"style":705},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[707],{"type":481,"value":708},"/**\n",{"type":476,"tag":517,"props":710,"children":711},{"class":519,"line":529},[712],{"type":476,"tag":517,"props":713,"children":714},{"style":705},[715],{"type":481,"value":716}," * Definition for a binary tree node.\n",{"type":476,"tag":517,"props":718,"children":719},{"class":519,"line":538},[720],{"type":476,"tag":517,"props":721,"children":722},{"style":705},[723],{"type":481,"value":724}," */\n",{"type":476,"tag":517,"props":726,"children":727},{"class":519,"line":547},[728,734,740,746,752,758,763,767,772],{"type":476,"tag":517,"props":729,"children":731},{"style":730},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[732],{"type":481,"value":733},"function",{"type":476,"tag":517,"props":735,"children":737},{"style":736},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[738],{"type":481,"value":739}," TreeNode",{"type":476,"tag":517,"props":741,"children":743},{"style":742},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[744],{"type":481,"value":745},"(",{"type":476,"tag":517,"props":747,"children":749},{"style":748},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[750],{"type":481,"value":751},"val",{"type":476,"tag":517,"props":753,"children":755},{"style":754},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[756],{"type":481,"value":757},",",{"type":476,"tag":517,"props":759,"children":760},{"style":748},[761],{"type":481,"value":762}," left",{"type":476,"tag":517,"props":764,"children":765},{"style":754},[766],{"type":481,"value":757},{"type":476,"tag":517,"props":768,"children":769},{"style":748},[770],{"type":481,"value":771}," right",{"type":476,"tag":517,"props":773,"children":774},{"style":742},[775],{"type":481,"value":776},") {\n",{"type":476,"tag":517,"props":778,"children":779},{"class":519,"line":556},[780,786,792,797,803,808,813,819,824,829,834,838],{"type":476,"tag":517,"props":781,"children":783},{"style":782},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[784],{"type":481,"value":785},"  this",{"type":476,"tag":517,"props":787,"children":789},{"style":788},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[790],{"type":481,"value":791},".",{"type":476,"tag":517,"props":793,"children":795},{"style":794},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[796],{"type":481,"value":751},{"type":476,"tag":517,"props":798,"children":800},{"style":799},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[801],{"type":481,"value":802}," =",{"type":476,"tag":517,"props":804,"children":805},{"style":794},[806],{"type":481,"value":807}," val",{"type":476,"tag":517,"props":809,"children":810},{"style":799},[811],{"type":481,"value":812}," ===",{"type":476,"tag":517,"props":814,"children":816},{"style":815},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[817],{"type":481,"value":818}," undefined",{"type":476,"tag":517,"props":820,"children":821},{"style":799},[822],{"type":481,"value":823}," ?",{"type":476,"tag":517,"props":825,"children":826},{"style":815},[827],{"type":481,"value":828}," 0",{"type":476,"tag":517,"props":830,"children":831},{"style":799},[832],{"type":481,"value":833}," :",{"type":476,"tag":517,"props":835,"children":836},{"style":794},[837],{"type":481,"value":807},{"type":476,"tag":517,"props":839,"children":840},{"style":754},[841],{"type":481,"value":842},";\n",{"type":476,"tag":517,"props":844,"children":845},{"class":519,"line":565},[846,850,854,859,863,867,871,875,879,884,888,892],{"type":476,"tag":517,"props":847,"children":848},{"style":782},[849],{"type":481,"value":785},{"type":476,"tag":517,"props":851,"children":852},{"style":788},[853],{"type":481,"value":791},{"type":476,"tag":517,"props":855,"children":856},{"style":794},[857],{"type":481,"value":858},"left",{"type":476,"tag":517,"props":860,"children":861},{"style":799},[862],{"type":481,"value":802},{"type":476,"tag":517,"props":864,"children":865},{"style":794},[866],{"type":481,"value":762},{"type":476,"tag":517,"props":868,"children":869},{"style":799},[870],{"type":481,"value":812},{"type":476,"tag":517,"props":872,"children":873},{"style":815},[874],{"type":481,"value":818},{"type":476,"tag":517,"props":876,"children":877},{"style":799},[878],{"type":481,"value":823},{"type":476,"tag":517,"props":880,"children":881},{"style":815},[882],{"type":481,"value":883}," null",{"type":476,"tag":517,"props":885,"children":886},{"style":799},[887],{"type":481,"value":833},{"type":476,"tag":517,"props":889,"children":890},{"style":794},[891],{"type":481,"value":762},{"type":476,"tag":517,"props":893,"children":894},{"style":754},[895],{"type":481,"value":842},{"type":476,"tag":517,"props":897,"children":898},{"class":519,"line":641},[899,903,907,912,916,920,924,928,932,936,940,944],{"type":476,"tag":517,"props":900,"children":901},{"style":782},[902],{"type":481,"value":785},{"type":476,"tag":517,"props":904,"children":905},{"style":788},[906],{"type":481,"value":791},{"type":476,"tag":517,"props":908,"children":909},{"style":794},[910],{"type":481,"value":911},"right",{"type":476,"tag":517,"props":913,"children":914},{"style":799},[915],{"type":481,"value":802},{"type":476,"tag":517,"props":917,"children":918},{"style":794},[919],{"type":481,"value":771},{"type":476,"tag":517,"props":921,"children":922},{"style":799},[923],{"type":481,"value":812},{"type":476,"tag":517,"props":925,"children":926},{"style":815},[927],{"type":481,"value":818},{"type":476,"tag":517,"props":929,"children":930},{"style":799},[931],{"type":481,"value":823},{"type":476,"tag":517,"props":933,"children":934},{"style":815},[935],{"type":481,"value":883},{"type":476,"tag":517,"props":937,"children":938},{"style":799},[939],{"type":481,"value":833},{"type":476,"tag":517,"props":941,"children":942},{"style":794},[943],{"type":481,"value":771},{"type":476,"tag":517,"props":945,"children":946},{"style":754},[947],{"type":481,"value":842},{"type":476,"tag":517,"props":949,"children":951},{"class":519,"line":950},8,[952],{"type":476,"tag":517,"props":953,"children":954},{"style":742},[955],{"type":481,"value":956},"}\n",{"type":476,"tag":517,"props":958,"children":960},{"class":519,"line":959},9,[961],{"type":476,"tag":517,"props":962,"children":964},{"emptyLinePlaceholder":963},true,[965],{"type":481,"value":966},"\n",{"type":476,"tag":517,"props":968,"children":970},{"class":519,"line":969},10,[971],{"type":476,"tag":517,"props":972,"children":973},{"style":705},[974],{"type":481,"value":708},{"type":476,"tag":517,"props":976,"children":978},{"class":519,"line":977},11,[979,984,990,996],{"type":476,"tag":517,"props":980,"children":981},{"style":705},[982],{"type":481,"value":983}," * ",{"type":476,"tag":517,"props":985,"children":987},{"style":986},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[988],{"type":481,"value":989},"@param",{"type":476,"tag":517,"props":991,"children":993},{"style":992},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[994],{"type":481,"value":995}," {TreeNode}",{"type":476,"tag":517,"props":997,"children":999},{"style":998},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[1000],{"type":481,"value":1001}," root\n",{"type":476,"tag":517,"props":1003,"children":1005},{"class":519,"line":1004},12,[1006,1010,1015],{"type":476,"tag":517,"props":1007,"children":1008},{"style":705},[1009],{"type":481,"value":983},{"type":476,"tag":517,"props":1011,"children":1012},{"style":986},[1013],{"type":481,"value":1014},"@return",{"type":476,"tag":517,"props":1016,"children":1017},{"style":992},[1018],{"type":481,"value":1019}," {number}\n",{"type":476,"tag":517,"props":1021,"children":1023},{"class":519,"line":1022},13,[1024],{"type":476,"tag":517,"props":1025,"children":1026},{"style":705},[1027],{"type":481,"value":724},{"type":476,"tag":517,"props":1029,"children":1031},{"class":519,"line":1030},14,[1032,1037,1042,1046,1051,1056,1060],{"type":476,"tag":517,"props":1033,"children":1034},{"style":730},[1035],{"type":481,"value":1036},"var",{"type":476,"tag":517,"props":1038,"children":1039},{"style":736},[1040],{"type":481,"value":1041}," sumNumbers",{"type":476,"tag":517,"props":1043,"children":1044},{"style":799},[1045],{"type":481,"value":802},{"type":476,"tag":517,"props":1047,"children":1048},{"style":730},[1049],{"type":481,"value":1050}," function",{"type":476,"tag":517,"props":1052,"children":1053},{"style":742},[1054],{"type":481,"value":1055}," (",{"type":476,"tag":517,"props":1057,"children":1058},{"style":748},[1059],{"type":481,"value":473},{"type":476,"tag":517,"props":1061,"children":1062},{"style":742},[1063],{"type":481,"value":776},{"type":476,"tag":517,"props":1065,"children":1067},{"class":519,"line":1066},15,[1068,1073,1078,1082,1086,1091,1095,1100,1105,1110],{"type":476,"tag":517,"props":1069,"children":1070},{"style":730},[1071],{"type":481,"value":1072},"  const",{"type":476,"tag":517,"props":1074,"children":1075},{"style":736},[1076],{"type":481,"value":1077}," dfs",{"type":476,"tag":517,"props":1079,"children":1080},{"style":799},[1081],{"type":481,"value":802},{"type":476,"tag":517,"props":1083,"children":1084},{"style":742},[1085],{"type":481,"value":1055},{"type":476,"tag":517,"props":1087,"children":1088},{"style":748},[1089],{"type":481,"value":1090},"node",{"type":476,"tag":517,"props":1092,"children":1093},{"style":754},[1094],{"type":481,"value":757},{"type":476,"tag":517,"props":1096,"children":1097},{"style":748},[1098],{"type":481,"value":1099}," prev",{"type":476,"tag":517,"props":1101,"children":1102},{"style":742},[1103],{"type":481,"value":1104},") ",{"type":476,"tag":517,"props":1106,"children":1107},{"style":730},[1108],{"type":481,"value":1109},"=>",{"type":476,"tag":517,"props":1111,"children":1112},{"style":742},[1113],{"type":481,"value":1114}," {\n",{"type":476,"tag":517,"props":1116,"children":1118},{"class":519,"line":1117},16,[1119,1125,1129,1133,1137,1141,1145,1150,1154],{"type":476,"tag":517,"props":1120,"children":1122},{"style":1121},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1123],{"type":481,"value":1124},"    if",{"type":476,"tag":517,"props":1126,"children":1127},{"style":742},[1128],{"type":481,"value":1055},{"type":476,"tag":517,"props":1130,"children":1131},{"style":794},[1132],{"type":481,"value":1090},{"type":476,"tag":517,"props":1134,"children":1135},{"style":799},[1136],{"type":481,"value":812},{"type":476,"tag":517,"props":1138,"children":1139},{"style":815},[1140],{"type":481,"value":883},{"type":476,"tag":517,"props":1142,"children":1143},{"style":742},[1144],{"type":481,"value":1104},{"type":476,"tag":517,"props":1146,"children":1147},{"style":1121},[1148],{"type":481,"value":1149},"return",{"type":476,"tag":517,"props":1151,"children":1152},{"style":815},[1153],{"type":481,"value":828},{"type":476,"tag":517,"props":1155,"children":1156},{"style":754},[1157],{"type":481,"value":842},{"type":476,"tag":517,"props":1159,"children":1161},{"class":519,"line":1160},17,[1162,1167,1172,1176,1180,1185,1190,1195,1200,1204,1208],{"type":476,"tag":517,"props":1163,"children":1164},{"style":730},[1165],{"type":481,"value":1166},"    let",{"type":476,"tag":517,"props":1168,"children":1169},{"style":794},[1170],{"type":481,"value":1171}," sum",{"type":476,"tag":517,"props":1173,"children":1174},{"style":799},[1175],{"type":481,"value":802},{"type":476,"tag":517,"props":1177,"children":1178},{"style":794},[1179],{"type":481,"value":1099},{"type":476,"tag":517,"props":1181,"children":1182},{"style":799},[1183],{"type":481,"value":1184}," *",{"type":476,"tag":517,"props":1186,"children":1187},{"style":815},[1188],{"type":481,"value":1189}," 10",{"type":476,"tag":517,"props":1191,"children":1192},{"style":799},[1193],{"type":481,"value":1194}," +",{"type":476,"tag":517,"props":1196,"children":1197},{"style":794},[1198],{"type":481,"value":1199}," node",{"type":476,"tag":517,"props":1201,"children":1202},{"style":788},[1203],{"type":481,"value":791},{"type":476,"tag":517,"props":1205,"children":1206},{"style":794},[1207],{"type":481,"value":751},{"type":476,"tag":517,"props":1209,"children":1210},{"style":754},[1211],{"type":481,"value":842},{"type":476,"tag":517,"props":1213,"children":1215},{"class":519,"line":1214},18,[1216,1220,1224,1228,1232,1236,1240,1244,1249,1253,1257,1261,1265,1269,1273,1277,1281],{"type":476,"tag":517,"props":1217,"children":1218},{"style":1121},[1219],{"type":481,"value":1124},{"type":476,"tag":517,"props":1221,"children":1222},{"style":742},[1223],{"type":481,"value":1055},{"type":476,"tag":517,"props":1225,"children":1226},{"style":794},[1227],{"type":481,"value":1090},{"type":476,"tag":517,"props":1229,"children":1230},{"style":788},[1231],{"type":481,"value":791},{"type":476,"tag":517,"props":1233,"children":1234},{"style":794},[1235],{"type":481,"value":858},{"type":476,"tag":517,"props":1237,"children":1238},{"style":799},[1239],{"type":481,"value":812},{"type":476,"tag":517,"props":1241,"children":1242},{"style":815},[1243],{"type":481,"value":883},{"type":476,"tag":517,"props":1245,"children":1246},{"style":799},[1247],{"type":481,"value":1248}," &&",{"type":476,"tag":517,"props":1250,"children":1251},{"style":794},[1252],{"type":481,"value":1199},{"type":476,"tag":517,"props":1254,"children":1255},{"style":788},[1256],{"type":481,"value":791},{"type":476,"tag":517,"props":1258,"children":1259},{"style":794},[1260],{"type":481,"value":911},{"type":476,"tag":517,"props":1262,"children":1263},{"style":799},[1264],{"type":481,"value":812},{"type":476,"tag":517,"props":1266,"children":1267},{"style":815},[1268],{"type":481,"value":883},{"type":476,"tag":517,"props":1270,"children":1271},{"style":742},[1272],{"type":481,"value":1104},{"type":476,"tag":517,"props":1274,"children":1275},{"style":1121},[1276],{"type":481,"value":1149},{"type":476,"tag":517,"props":1278,"children":1279},{"style":794},[1280],{"type":481,"value":1171},{"type":476,"tag":517,"props":1282,"children":1283},{"style":754},[1284],{"type":481,"value":842},{"type":476,"tag":517,"props":1286,"children":1288},{"class":519,"line":1287},19,[1289,1294,1298,1302,1306,1310,1314,1318,1322,1326,1331,1335,1339,1343,1347,1351,1355,1359,1364],{"type":476,"tag":517,"props":1290,"children":1291},{"style":1121},[1292],{"type":481,"value":1293},"    return",{"type":476,"tag":517,"props":1295,"children":1296},{"style":736},[1297],{"type":481,"value":1077},{"type":476,"tag":517,"props":1299,"children":1300},{"style":742},[1301],{"type":481,"value":745},{"type":476,"tag":517,"props":1303,"children":1304},{"style":794},[1305],{"type":481,"value":1090},{"type":476,"tag":517,"props":1307,"children":1308},{"style":788},[1309],{"type":481,"value":791},{"type":476,"tag":517,"props":1311,"children":1312},{"style":794},[1313],{"type":481,"value":858},{"type":476,"tag":517,"props":1315,"children":1316},{"style":754},[1317],{"type":481,"value":757},{"type":476,"tag":517,"props":1319,"children":1320},{"style":794},[1321],{"type":481,"value":1171},{"type":476,"tag":517,"props":1323,"children":1324},{"style":742},[1325],{"type":481,"value":1104},{"type":476,"tag":517,"props":1327,"children":1328},{"style":799},[1329],{"type":481,"value":1330},"+",{"type":476,"tag":517,"props":1332,"children":1333},{"style":736},[1334],{"type":481,"value":1077},{"type":476,"tag":517,"props":1336,"children":1337},{"style":742},[1338],{"type":481,"value":745},{"type":476,"tag":517,"props":1340,"children":1341},{"style":794},[1342],{"type":481,"value":1090},{"type":476,"tag":517,"props":1344,"children":1345},{"style":788},[1346],{"type":481,"value":791},{"type":476,"tag":517,"props":1348,"children":1349},{"style":794},[1350],{"type":481,"value":911},{"type":476,"tag":517,"props":1352,"children":1353},{"style":754},[1354],{"type":481,"value":757},{"type":476,"tag":517,"props":1356,"children":1357},{"style":794},[1358],{"type":481,"value":1171},{"type":476,"tag":517,"props":1360,"children":1361},{"style":742},[1362],{"type":481,"value":1363},")",{"type":476,"tag":517,"props":1365,"children":1366},{"style":754},[1367],{"type":481,"value":842},{"type":476,"tag":517,"props":1369,"children":1371},{"class":519,"line":1370},20,[1372,1377],{"type":476,"tag":517,"props":1373,"children":1374},{"style":742},[1375],{"type":481,"value":1376},"  }",{"type":476,"tag":517,"props":1378,"children":1379},{"style":754},[1380],{"type":481,"value":842},{"type":476,"tag":517,"props":1382,"children":1384},{"class":519,"line":1383},21,[1385,1390,1394,1398,1402,1406,1410,1414],{"type":476,"tag":517,"props":1386,"children":1387},{"style":1121},[1388],{"type":481,"value":1389},"  return",{"type":476,"tag":517,"props":1391,"children":1392},{"style":736},[1393],{"type":481,"value":1077},{"type":476,"tag":517,"props":1395,"children":1396},{"style":742},[1397],{"type":481,"value":745},{"type":476,"tag":517,"props":1399,"children":1400},{"style":794},[1401],{"type":481,"value":473},{"type":476,"tag":517,"props":1403,"children":1404},{"style":754},[1405],{"type":481,"value":757},{"type":476,"tag":517,"props":1407,"children":1408},{"style":815},[1409],{"type":481,"value":828},{"type":476,"tag":517,"props":1411,"children":1412},{"style":742},[1413],{"type":481,"value":1363},{"type":476,"tag":517,"props":1415,"children":1416},{"style":754},[1417],{"type":481,"value":842},{"type":476,"tag":517,"props":1419,"children":1421},{"class":519,"line":1420},22,[1422,1427],{"type":476,"tag":517,"props":1423,"children":1424},{"style":742},[1425],{"type":481,"value":1426},"}",{"type":476,"tag":517,"props":1428,"children":1429},{"style":754},[1430],{"type":481,"value":842},{"type":476,"tag":1432,"props":1433,"children":1434},"style",{},[1435],{"type":481,"value":1436},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":556,"depth":556,"links":1438},[1439,1440],{"id":676,"depth":529,"text":676},{"id":681,"depth":529,"text":681,"children":1441},[1442],{"id":687,"depth":538,"text":690},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1449,1451],{"_path":165,"title":164,"description":1450},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":171,"title":170,"description":1452},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1713712684389]