[{"data":1,"prerenderedAt":1476},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":478,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1471},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":168,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":167,"description":482,"url":483,"body":484,"_type":1466,"_id":1467,"_source":1468,"_file":1469,"_extension":1470},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":485,"children":486,"toc":1460},"root",[487,494,499,504,509,518,584,589,597,660,665,685,691,696,703,1454],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":488,"tag":489,"props":500,"children":501},{},[502],{"type":493,"value":503},"叶节点 是指没有子节点的节点。",{"type":488,"tag":489,"props":505,"children":506},{},[507],{"type":493,"value":508},"示例 1：",{"type":488,"tag":489,"props":510,"children":511},{},[512],{"type":488,"tag":513,"props":514,"children":517},"img",{"alt":515,"src":516},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":488,"tag":519,"props":520,"children":523},"pre",{"className":521,"code":522,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[524],{"type":488,"tag":525,"props":526,"children":527},"code",{"__ignoreMap":481},[528,539,548,557,566,575],{"type":488,"tag":529,"props":530,"children":533},"span",{"class":531,"line":532},"line",1,[534],{"type":488,"tag":529,"props":535,"children":536},{},[537],{"type":493,"value":538},"输入：root = [1,2,3]\n",{"type":488,"tag":529,"props":540,"children":542},{"class":531,"line":541},2,[543],{"type":488,"tag":529,"props":544,"children":545},{},[546],{"type":493,"value":547},"输出：25\n",{"type":488,"tag":529,"props":549,"children":551},{"class":531,"line":550},3,[552],{"type":488,"tag":529,"props":553,"children":554},{},[555],{"type":493,"value":556},"解释：\n",{"type":488,"tag":529,"props":558,"children":560},{"class":531,"line":559},4,[561],{"type":488,"tag":529,"props":562,"children":563},{},[564],{"type":493,"value":565},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":488,"tag":529,"props":567,"children":569},{"class":531,"line":568},5,[570],{"type":488,"tag":529,"props":571,"children":572},{},[573],{"type":493,"value":574},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":488,"tag":529,"props":576,"children":578},{"class":531,"line":577},6,[579],{"type":488,"tag":529,"props":580,"children":581},{},[582],{"type":493,"value":583},"因此，数字总和 = 12 + 13 = 25\n",{"type":488,"tag":489,"props":585,"children":586},{},[587],{"type":493,"value":588},"示例 2：",{"type":488,"tag":489,"props":590,"children":591},{},[592],{"type":488,"tag":513,"props":593,"children":596},{"alt":594,"src":595},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":488,"tag":519,"props":598,"children":600},{"className":521,"code":599,"language":493,"meta":481,"style":481},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[601],{"type":488,"tag":525,"props":602,"children":603},{"__ignoreMap":481},[604,612,620,627,635,643,651],{"type":488,"tag":529,"props":605,"children":606},{"class":531,"line":532},[607],{"type":488,"tag":529,"props":608,"children":609},{},[610],{"type":493,"value":611},"输入：root = [4,9,0,5,1]\n",{"type":488,"tag":529,"props":613,"children":614},{"class":531,"line":541},[615],{"type":488,"tag":529,"props":616,"children":617},{},[618],{"type":493,"value":619},"输出：1026\n",{"type":488,"tag":529,"props":621,"children":622},{"class":531,"line":550},[623],{"type":488,"tag":529,"props":624,"children":625},{},[626],{"type":493,"value":556},{"type":488,"tag":529,"props":628,"children":629},{"class":531,"line":559},[630],{"type":488,"tag":529,"props":631,"children":632},{},[633],{"type":493,"value":634},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":488,"tag":529,"props":636,"children":637},{"class":531,"line":568},[638],{"type":488,"tag":529,"props":639,"children":640},{},[641],{"type":493,"value":642},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":488,"tag":529,"props":644,"children":645},{"class":531,"line":577},[646],{"type":488,"tag":529,"props":647,"children":648},{},[649],{"type":493,"value":650},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":488,"tag":529,"props":652,"children":654},{"class":531,"line":653},7,[655],{"type":488,"tag":529,"props":656,"children":657},{},[658],{"type":493,"value":659},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":488,"tag":489,"props":661,"children":662},{},[663],{"type":493,"value":664},"提示：",{"type":488,"tag":666,"props":667,"children":668},"ul",{},[669,675,680],{"type":488,"tag":670,"props":671,"children":672},"li",{},[673],{"type":493,"value":674},"树中节点的数目在范围 [1, 1000] 内",{"type":488,"tag":670,"props":676,"children":677},{},[678],{"type":493,"value":679},"0 \u003C= Node.val \u003C= 9",{"type":488,"tag":670,"props":681,"children":682},{},[683],{"type":493,"value":684},"树的深度不超过 10",{"type":488,"tag":686,"props":687,"children":689},"h2",{"id":688},"解题思路",[690],{"type":493,"value":688},{"type":488,"tag":686,"props":692,"children":694},{"id":693},"实现",[695],{"type":493,"value":693},{"type":488,"tag":697,"props":698,"children":700},"h3",{"id":699},"深度优先搜素-dfs",[701],{"type":493,"value":702},"深度优先搜素 - dfs",{"type":488,"tag":519,"props":704,"children":708},{"className":705,"code":706,"language":707,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[709],{"type":488,"tag":525,"props":710,"children":711},{"__ignoreMap":481},[712,721,729,737,793,856,909,961,970,980,988,1029,1059,1067,1107,1156,1198,1252,1325,1403,1412,1445],{"type":488,"tag":529,"props":713,"children":714},{"class":531,"line":532},[715],{"type":488,"tag":529,"props":716,"children":718},{"style":717},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[719],{"type":493,"value":720},"/**\n",{"type":488,"tag":529,"props":722,"children":723},{"class":531,"line":541},[724],{"type":488,"tag":529,"props":725,"children":726},{"style":717},[727],{"type":493,"value":728}," * Definition for a binary tree node.\n",{"type":488,"tag":529,"props":730,"children":731},{"class":531,"line":550},[732],{"type":488,"tag":529,"props":733,"children":734},{"style":717},[735],{"type":493,"value":736}," */\n",{"type":488,"tag":529,"props":738,"children":739},{"class":531,"line":559},[740,746,752,758,764,769,774,778,783,788],{"type":488,"tag":529,"props":741,"children":743},{"style":742},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[744],{"type":493,"value":745},"function",{"type":488,"tag":529,"props":747,"children":749},{"style":748},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[750],{"type":493,"value":751}," TreeNode",{"type":488,"tag":529,"props":753,"children":755},{"style":754},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[756],{"type":493,"value":757},"(",{"type":488,"tag":529,"props":759,"children":761},{"style":760},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[762],{"type":493,"value":763},"val",{"type":488,"tag":529,"props":765,"children":766},{"style":754},[767],{"type":493,"value":768},",",{"type":488,"tag":529,"props":770,"children":771},{"style":760},[772],{"type":493,"value":773}," left",{"type":488,"tag":529,"props":775,"children":776},{"style":754},[777],{"type":493,"value":768},{"type":488,"tag":529,"props":779,"children":780},{"style":760},[781],{"type":493,"value":782}," right",{"type":488,"tag":529,"props":784,"children":785},{"style":754},[786],{"type":493,"value":787},")",{"type":488,"tag":529,"props":789,"children":790},{"style":754},[791],{"type":493,"value":792}," {\n",{"type":488,"tag":529,"props":794,"children":795},{"class":531,"line":568},[796,802,807,811,816,821,826,831,836,842,847,851],{"type":488,"tag":529,"props":797,"children":799},{"style":798},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[800],{"type":493,"value":801},"  this",{"type":488,"tag":529,"props":803,"children":804},{"style":754},[805],{"type":493,"value":806},".",{"type":488,"tag":529,"props":808,"children":809},{"style":760},[810],{"type":493,"value":763},{"type":488,"tag":529,"props":812,"children":813},{"style":754},[814],{"type":493,"value":815}," =",{"type":488,"tag":529,"props":817,"children":818},{"style":760},[819],{"type":493,"value":820}," val",{"type":488,"tag":529,"props":822,"children":823},{"style":742},[824],{"type":493,"value":825}," ===",{"type":488,"tag":529,"props":827,"children":828},{"style":742},[829],{"type":493,"value":830}," undefined",{"type":488,"tag":529,"props":832,"children":833},{"style":742},[834],{"type":493,"value":835}," ?",{"type":488,"tag":529,"props":837,"children":839},{"style":838},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[840],{"type":493,"value":841}," 0",{"type":488,"tag":529,"props":843,"children":844},{"style":742},[845],{"type":493,"value":846}," :",{"type":488,"tag":529,"props":848,"children":849},{"style":760},[850],{"type":493,"value":820},{"type":488,"tag":529,"props":852,"children":853},{"style":754},[854],{"type":493,"value":855},";\n",{"type":488,"tag":529,"props":857,"children":858},{"class":531,"line":577},[859,863,867,872,876,880,884,888,892,897,901,905],{"type":488,"tag":529,"props":860,"children":861},{"style":798},[862],{"type":493,"value":801},{"type":488,"tag":529,"props":864,"children":865},{"style":754},[866],{"type":493,"value":806},{"type":488,"tag":529,"props":868,"children":869},{"style":760},[870],{"type":493,"value":871},"left",{"type":488,"tag":529,"props":873,"children":874},{"style":754},[875],{"type":493,"value":815},{"type":488,"tag":529,"props":877,"children":878},{"style":760},[879],{"type":493,"value":773},{"type":488,"tag":529,"props":881,"children":882},{"style":742},[883],{"type":493,"value":825},{"type":488,"tag":529,"props":885,"children":886},{"style":742},[887],{"type":493,"value":830},{"type":488,"tag":529,"props":889,"children":890},{"style":742},[891],{"type":493,"value":835},{"type":488,"tag":529,"props":893,"children":894},{"style":742},[895],{"type":493,"value":896}," null",{"type":488,"tag":529,"props":898,"children":899},{"style":742},[900],{"type":493,"value":846},{"type":488,"tag":529,"props":902,"children":903},{"style":760},[904],{"type":493,"value":773},{"type":488,"tag":529,"props":906,"children":907},{"style":754},[908],{"type":493,"value":855},{"type":488,"tag":529,"props":910,"children":911},{"class":531,"line":653},[912,916,920,925,929,933,937,941,945,949,953,957],{"type":488,"tag":529,"props":913,"children":914},{"style":798},[915],{"type":493,"value":801},{"type":488,"tag":529,"props":917,"children":918},{"style":754},[919],{"type":493,"value":806},{"type":488,"tag":529,"props":921,"children":922},{"style":760},[923],{"type":493,"value":924},"right",{"type":488,"tag":529,"props":926,"children":927},{"style":754},[928],{"type":493,"value":815},{"type":488,"tag":529,"props":930,"children":931},{"style":760},[932],{"type":493,"value":782},{"type":488,"tag":529,"props":934,"children":935},{"style":742},[936],{"type":493,"value":825},{"type":488,"tag":529,"props":938,"children":939},{"style":742},[940],{"type":493,"value":830},{"type":488,"tag":529,"props":942,"children":943},{"style":742},[944],{"type":493,"value":835},{"type":488,"tag":529,"props":946,"children":947},{"style":742},[948],{"type":493,"value":896},{"type":488,"tag":529,"props":950,"children":951},{"style":742},[952],{"type":493,"value":846},{"type":488,"tag":529,"props":954,"children":955},{"style":760},[956],{"type":493,"value":782},{"type":488,"tag":529,"props":958,"children":959},{"style":754},[960],{"type":493,"value":855},{"type":488,"tag":529,"props":962,"children":964},{"class":531,"line":963},8,[965],{"type":488,"tag":529,"props":966,"children":967},{"style":754},[968],{"type":493,"value":969},"}\n",{"type":488,"tag":529,"props":971,"children":973},{"class":531,"line":972},9,[974],{"type":488,"tag":529,"props":975,"children":977},{"emptyLinePlaceholder":976},true,[978],{"type":493,"value":979},"\n",{"type":488,"tag":529,"props":981,"children":983},{"class":531,"line":982},10,[984],{"type":488,"tag":529,"props":985,"children":986},{"style":717},[987],{"type":493,"value":720},{"type":488,"tag":529,"props":989,"children":991},{"class":531,"line":990},11,[992,997,1002,1008,1013,1019,1024],{"type":488,"tag":529,"props":993,"children":994},{"style":717},[995],{"type":493,"value":996}," * ",{"type":488,"tag":529,"props":998,"children":999},{"style":754},[1000],{"type":493,"value":1001},"@",{"type":488,"tag":529,"props":1003,"children":1005},{"style":1004},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1006],{"type":493,"value":1007},"param",{"type":488,"tag":529,"props":1009,"children":1010},{"style":754},[1011],{"type":493,"value":1012}," {",{"type":488,"tag":529,"props":1014,"children":1016},{"style":1015},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1017],{"type":493,"value":1018},"TreeNode",{"type":488,"tag":529,"props":1020,"children":1021},{"style":754},[1022],{"type":493,"value":1023},"}",{"type":488,"tag":529,"props":1025,"children":1026},{"style":760},[1027],{"type":493,"value":1028}," root\n",{"type":488,"tag":529,"props":1030,"children":1032},{"class":531,"line":1031},12,[1033,1037,1041,1046,1050,1055],{"type":488,"tag":529,"props":1034,"children":1035},{"style":717},[1036],{"type":493,"value":996},{"type":488,"tag":529,"props":1038,"children":1039},{"style":754},[1040],{"type":493,"value":1001},{"type":488,"tag":529,"props":1042,"children":1043},{"style":1004},[1044],{"type":493,"value":1045},"return",{"type":488,"tag":529,"props":1047,"children":1048},{"style":754},[1049],{"type":493,"value":1012},{"type":488,"tag":529,"props":1051,"children":1052},{"style":1015},[1053],{"type":493,"value":1054},"number",{"type":488,"tag":529,"props":1056,"children":1057},{"style":754},[1058],{"type":493,"value":969},{"type":488,"tag":529,"props":1060,"children":1062},{"class":531,"line":1061},13,[1063],{"type":488,"tag":529,"props":1064,"children":1065},{"style":717},[1066],{"type":493,"value":736},{"type":488,"tag":529,"props":1068,"children":1070},{"class":531,"line":1069},14,[1071,1076,1081,1085,1090,1095,1099,1103],{"type":488,"tag":529,"props":1072,"children":1073},{"style":742},[1074],{"type":493,"value":1075},"var",{"type":488,"tag":529,"props":1077,"children":1078},{"style":748},[1079],{"type":493,"value":1080}," sumNumbers",{"type":488,"tag":529,"props":1082,"children":1083},{"style":754},[1084],{"type":493,"value":815},{"type":488,"tag":529,"props":1086,"children":1087},{"style":742},[1088],{"type":493,"value":1089}," function",{"type":488,"tag":529,"props":1091,"children":1092},{"style":754},[1093],{"type":493,"value":1094}," (",{"type":488,"tag":529,"props":1096,"children":1097},{"style":760},[1098],{"type":493,"value":485},{"type":488,"tag":529,"props":1100,"children":1101},{"style":754},[1102],{"type":493,"value":787},{"type":488,"tag":529,"props":1104,"children":1105},{"style":754},[1106],{"type":493,"value":792},{"type":488,"tag":529,"props":1108,"children":1110},{"class":531,"line":1109},15,[1111,1116,1121,1125,1129,1134,1138,1143,1147,1152],{"type":488,"tag":529,"props":1112,"children":1113},{"style":742},[1114],{"type":493,"value":1115},"  const",{"type":488,"tag":529,"props":1117,"children":1118},{"style":748},[1119],{"type":493,"value":1120}," dfs",{"type":488,"tag":529,"props":1122,"children":1123},{"style":754},[1124],{"type":493,"value":815},{"type":488,"tag":529,"props":1126,"children":1127},{"style":754},[1128],{"type":493,"value":1094},{"type":488,"tag":529,"props":1130,"children":1131},{"style":760},[1132],{"type":493,"value":1133},"node",{"type":488,"tag":529,"props":1135,"children":1136},{"style":754},[1137],{"type":493,"value":768},{"type":488,"tag":529,"props":1139,"children":1140},{"style":760},[1141],{"type":493,"value":1142}," prev",{"type":488,"tag":529,"props":1144,"children":1145},{"style":754},[1146],{"type":493,"value":787},{"type":488,"tag":529,"props":1148,"children":1149},{"style":754},[1150],{"type":493,"value":1151}," =>",{"type":488,"tag":529,"props":1153,"children":1154},{"style":754},[1155],{"type":493,"value":792},{"type":488,"tag":529,"props":1157,"children":1159},{"class":531,"line":1158},16,[1160,1165,1169,1173,1177,1181,1185,1190,1194],{"type":488,"tag":529,"props":1161,"children":1162},{"style":1004},[1163],{"type":493,"value":1164},"    if",{"type":488,"tag":529,"props":1166,"children":1167},{"style":754},[1168],{"type":493,"value":1094},{"type":488,"tag":529,"props":1170,"children":1171},{"style":760},[1172],{"type":493,"value":1133},{"type":488,"tag":529,"props":1174,"children":1175},{"style":742},[1176],{"type":493,"value":825},{"type":488,"tag":529,"props":1178,"children":1179},{"style":742},[1180],{"type":493,"value":896},{"type":488,"tag":529,"props":1182,"children":1183},{"style":754},[1184],{"type":493,"value":787},{"type":488,"tag":529,"props":1186,"children":1187},{"style":1004},[1188],{"type":493,"value":1189}," return",{"type":488,"tag":529,"props":1191,"children":1192},{"style":838},[1193],{"type":493,"value":841},{"type":488,"tag":529,"props":1195,"children":1196},{"style":754},[1197],{"type":493,"value":855},{"type":488,"tag":529,"props":1199,"children":1201},{"class":531,"line":1200},17,[1202,1207,1212,1216,1220,1225,1230,1235,1240,1244,1248],{"type":488,"tag":529,"props":1203,"children":1204},{"style":742},[1205],{"type":493,"value":1206},"    let",{"type":488,"tag":529,"props":1208,"children":1209},{"style":760},[1210],{"type":493,"value":1211}," sum",{"type":488,"tag":529,"props":1213,"children":1214},{"style":754},[1215],{"type":493,"value":815},{"type":488,"tag":529,"props":1217,"children":1218},{"style":760},[1219],{"type":493,"value":1142},{"type":488,"tag":529,"props":1221,"children":1222},{"style":742},[1223],{"type":493,"value":1224}," *",{"type":488,"tag":529,"props":1226,"children":1227},{"style":838},[1228],{"type":493,"value":1229}," 10",{"type":488,"tag":529,"props":1231,"children":1232},{"style":742},[1233],{"type":493,"value":1234}," +",{"type":488,"tag":529,"props":1236,"children":1237},{"style":760},[1238],{"type":493,"value":1239}," node",{"type":488,"tag":529,"props":1241,"children":1242},{"style":754},[1243],{"type":493,"value":806},{"type":488,"tag":529,"props":1245,"children":1246},{"style":760},[1247],{"type":493,"value":763},{"type":488,"tag":529,"props":1249,"children":1250},{"style":754},[1251],{"type":493,"value":855},{"type":488,"tag":529,"props":1253,"children":1255},{"class":531,"line":1254},18,[1256,1260,1264,1268,1272,1276,1280,1284,1289,1293,1297,1301,1305,1309,1313,1317,1321],{"type":488,"tag":529,"props":1257,"children":1258},{"style":1004},[1259],{"type":493,"value":1164},{"type":488,"tag":529,"props":1261,"children":1262},{"style":754},[1263],{"type":493,"value":1094},{"type":488,"tag":529,"props":1265,"children":1266},{"style":760},[1267],{"type":493,"value":1133},{"type":488,"tag":529,"props":1269,"children":1270},{"style":754},[1271],{"type":493,"value":806},{"type":488,"tag":529,"props":1273,"children":1274},{"style":760},[1275],{"type":493,"value":871},{"type":488,"tag":529,"props":1277,"children":1278},{"style":742},[1279],{"type":493,"value":825},{"type":488,"tag":529,"props":1281,"children":1282},{"style":742},[1283],{"type":493,"value":896},{"type":488,"tag":529,"props":1285,"children":1286},{"style":742},[1287],{"type":493,"value":1288}," &&",{"type":488,"tag":529,"props":1290,"children":1291},{"style":760},[1292],{"type":493,"value":1239},{"type":488,"tag":529,"props":1294,"children":1295},{"style":754},[1296],{"type":493,"value":806},{"type":488,"tag":529,"props":1298,"children":1299},{"style":760},[1300],{"type":493,"value":924},{"type":488,"tag":529,"props":1302,"children":1303},{"style":742},[1304],{"type":493,"value":825},{"type":488,"tag":529,"props":1306,"children":1307},{"style":742},[1308],{"type":493,"value":896},{"type":488,"tag":529,"props":1310,"children":1311},{"style":754},[1312],{"type":493,"value":787},{"type":488,"tag":529,"props":1314,"children":1315},{"style":1004},[1316],{"type":493,"value":1189},{"type":488,"tag":529,"props":1318,"children":1319},{"style":760},[1320],{"type":493,"value":1211},{"type":488,"tag":529,"props":1322,"children":1323},{"style":754},[1324],{"type":493,"value":855},{"type":488,"tag":529,"props":1326,"children":1328},{"class":531,"line":1327},19,[1329,1334,1338,1342,1346,1350,1354,1358,1362,1366,1370,1374,1378,1382,1386,1390,1394,1398],{"type":488,"tag":529,"props":1330,"children":1331},{"style":1004},[1332],{"type":493,"value":1333},"    return",{"type":488,"tag":529,"props":1335,"children":1336},{"style":748},[1337],{"type":493,"value":1120},{"type":488,"tag":529,"props":1339,"children":1340},{"style":754},[1341],{"type":493,"value":757},{"type":488,"tag":529,"props":1343,"children":1344},{"style":760},[1345],{"type":493,"value":1133},{"type":488,"tag":529,"props":1347,"children":1348},{"style":754},[1349],{"type":493,"value":806},{"type":488,"tag":529,"props":1351,"children":1352},{"style":760},[1353],{"type":493,"value":871},{"type":488,"tag":529,"props":1355,"children":1356},{"style":754},[1357],{"type":493,"value":768},{"type":488,"tag":529,"props":1359,"children":1360},{"style":760},[1361],{"type":493,"value":1211},{"type":488,"tag":529,"props":1363,"children":1364},{"style":754},[1365],{"type":493,"value":787},{"type":488,"tag":529,"props":1367,"children":1368},{"style":742},[1369],{"type":493,"value":1234},{"type":488,"tag":529,"props":1371,"children":1372},{"style":748},[1373],{"type":493,"value":1120},{"type":488,"tag":529,"props":1375,"children":1376},{"style":754},[1377],{"type":493,"value":757},{"type":488,"tag":529,"props":1379,"children":1380},{"style":760},[1381],{"type":493,"value":1133},{"type":488,"tag":529,"props":1383,"children":1384},{"style":754},[1385],{"type":493,"value":806},{"type":488,"tag":529,"props":1387,"children":1388},{"style":760},[1389],{"type":493,"value":924},{"type":488,"tag":529,"props":1391,"children":1392},{"style":754},[1393],{"type":493,"value":768},{"type":488,"tag":529,"props":1395,"children":1396},{"style":760},[1397],{"type":493,"value":1211},{"type":488,"tag":529,"props":1399,"children":1400},{"style":754},[1401],{"type":493,"value":1402},");\n",{"type":488,"tag":529,"props":1404,"children":1406},{"class":531,"line":1405},20,[1407],{"type":488,"tag":529,"props":1408,"children":1409},{"style":754},[1410],{"type":493,"value":1411},"  };\n",{"type":488,"tag":529,"props":1413,"children":1415},{"class":531,"line":1414},21,[1416,1421,1425,1429,1433,1437,1441],{"type":488,"tag":529,"props":1417,"children":1418},{"style":1004},[1419],{"type":493,"value":1420},"  return",{"type":488,"tag":529,"props":1422,"children":1423},{"style":748},[1424],{"type":493,"value":1120},{"type":488,"tag":529,"props":1426,"children":1427},{"style":754},[1428],{"type":493,"value":757},{"type":488,"tag":529,"props":1430,"children":1431},{"style":760},[1432],{"type":493,"value":485},{"type":488,"tag":529,"props":1434,"children":1435},{"style":754},[1436],{"type":493,"value":768},{"type":488,"tag":529,"props":1438,"children":1439},{"style":838},[1440],{"type":493,"value":841},{"type":488,"tag":529,"props":1442,"children":1443},{"style":754},[1444],{"type":493,"value":1402},{"type":488,"tag":529,"props":1446,"children":1448},{"class":531,"line":1447},22,[1449],{"type":488,"tag":529,"props":1450,"children":1451},{"style":754},[1452],{"type":493,"value":1453},"};\n",{"type":488,"tag":1455,"props":1456,"children":1457},"style",{},[1458],{"type":493,"value":1459},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":568,"depth":568,"links":1461},[1462,1463],{"id":688,"depth":541,"text":688},{"id":693,"depth":541,"text":693,"children":1464},[1465],{"id":699,"depth":550,"text":702},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1472,1474],{"_path":165,"title":164,"description":1473},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":171,"title":170,"description":1475},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1714046225430]