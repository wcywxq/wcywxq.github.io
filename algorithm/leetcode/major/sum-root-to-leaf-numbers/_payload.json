[{"data":1,"prerenderedAt":1498},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":500,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1493},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":168,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":167,"description":504,"url":505,"body":506,"_type":1488,"_id":1489,"_source":1490,"_file":1491,"_extension":1492},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":507,"children":508,"toc":1482},"root",[509,516,521,526,531,540,606,611,619,682,687,707,713,718,725,1476],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":515,"value":525},"叶节点 是指没有子节点的节点。",{"type":510,"tag":511,"props":527,"children":528},{},[529],{"type":515,"value":530},"示例 1：",{"type":510,"tag":511,"props":532,"children":533},{},[534],{"type":510,"tag":535,"props":536,"children":539},"img",{"alt":537,"src":538},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":510,"tag":541,"props":542,"children":545},"pre",{"className":543,"code":544,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[546],{"type":510,"tag":547,"props":548,"children":549},"code",{"__ignoreMap":503},[550,561,570,579,588,597],{"type":510,"tag":551,"props":552,"children":555},"span",{"class":553,"line":554},"line",1,[556],{"type":510,"tag":551,"props":557,"children":558},{},[559],{"type":515,"value":560},"输入：root = [1,2,3]\n",{"type":510,"tag":551,"props":562,"children":564},{"class":553,"line":563},2,[565],{"type":510,"tag":551,"props":566,"children":567},{},[568],{"type":515,"value":569},"输出：25\n",{"type":510,"tag":551,"props":571,"children":573},{"class":553,"line":572},3,[574],{"type":510,"tag":551,"props":575,"children":576},{},[577],{"type":515,"value":578},"解释：\n",{"type":510,"tag":551,"props":580,"children":582},{"class":553,"line":581},4,[583],{"type":510,"tag":551,"props":584,"children":585},{},[586],{"type":515,"value":587},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":510,"tag":551,"props":589,"children":591},{"class":553,"line":590},5,[592],{"type":510,"tag":551,"props":593,"children":594},{},[595],{"type":515,"value":596},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":510,"tag":551,"props":598,"children":600},{"class":553,"line":599},6,[601],{"type":510,"tag":551,"props":602,"children":603},{},[604],{"type":515,"value":605},"因此，数字总和 = 12 + 13 = 25\n",{"type":510,"tag":511,"props":607,"children":608},{},[609],{"type":515,"value":610},"示例 2：",{"type":510,"tag":511,"props":612,"children":613},{},[614],{"type":510,"tag":535,"props":615,"children":618},{"alt":616,"src":617},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":510,"tag":541,"props":620,"children":622},{"className":543,"code":621,"language":515,"meta":503,"style":503},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[623],{"type":510,"tag":547,"props":624,"children":625},{"__ignoreMap":503},[626,634,642,649,657,665,673],{"type":510,"tag":551,"props":627,"children":628},{"class":553,"line":554},[629],{"type":510,"tag":551,"props":630,"children":631},{},[632],{"type":515,"value":633},"输入：root = [4,9,0,5,1]\n",{"type":510,"tag":551,"props":635,"children":636},{"class":553,"line":563},[637],{"type":510,"tag":551,"props":638,"children":639},{},[640],{"type":515,"value":641},"输出：1026\n",{"type":510,"tag":551,"props":643,"children":644},{"class":553,"line":572},[645],{"type":510,"tag":551,"props":646,"children":647},{},[648],{"type":515,"value":578},{"type":510,"tag":551,"props":650,"children":651},{"class":553,"line":581},[652],{"type":510,"tag":551,"props":653,"children":654},{},[655],{"type":515,"value":656},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":510,"tag":551,"props":658,"children":659},{"class":553,"line":590},[660],{"type":510,"tag":551,"props":661,"children":662},{},[663],{"type":515,"value":664},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":510,"tag":551,"props":666,"children":667},{"class":553,"line":599},[668],{"type":510,"tag":551,"props":669,"children":670},{},[671],{"type":515,"value":672},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":510,"tag":551,"props":674,"children":676},{"class":553,"line":675},7,[677],{"type":510,"tag":551,"props":678,"children":679},{},[680],{"type":515,"value":681},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":510,"tag":511,"props":683,"children":684},{},[685],{"type":515,"value":686},"提示：",{"type":510,"tag":688,"props":689,"children":690},"ul",{},[691,697,702],{"type":510,"tag":692,"props":693,"children":694},"li",{},[695],{"type":515,"value":696},"树中节点的数目在范围 [1, 1000] 内",{"type":510,"tag":692,"props":698,"children":699},{},[700],{"type":515,"value":701},"0 \u003C= Node.val \u003C= 9",{"type":510,"tag":692,"props":703,"children":704},{},[705],{"type":515,"value":706},"树的深度不超过 10",{"type":510,"tag":708,"props":709,"children":711},"h2",{"id":710},"解题思路",[712],{"type":515,"value":710},{"type":510,"tag":708,"props":714,"children":716},{"id":715},"实现",[717],{"type":515,"value":715},{"type":510,"tag":719,"props":720,"children":722},"h3",{"id":721},"深度优先搜素-dfs",[723],{"type":515,"value":724},"深度优先搜素 - dfs",{"type":510,"tag":541,"props":726,"children":730},{"className":727,"code":728,"language":729,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[731],{"type":510,"tag":547,"props":732,"children":733},{"__ignoreMap":503},[734,743,751,759,815,878,931,983,992,1002,1010,1051,1081,1089,1129,1178,1220,1274,1347,1425,1434,1467],{"type":510,"tag":551,"props":735,"children":736},{"class":553,"line":554},[737],{"type":510,"tag":551,"props":738,"children":740},{"style":739},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[741],{"type":515,"value":742},"/**\n",{"type":510,"tag":551,"props":744,"children":745},{"class":553,"line":563},[746],{"type":510,"tag":551,"props":747,"children":748},{"style":739},[749],{"type":515,"value":750}," * Definition for a binary tree node.\n",{"type":510,"tag":551,"props":752,"children":753},{"class":553,"line":572},[754],{"type":510,"tag":551,"props":755,"children":756},{"style":739},[757],{"type":515,"value":758}," */\n",{"type":510,"tag":551,"props":760,"children":761},{"class":553,"line":581},[762,768,774,780,786,791,796,800,805,810],{"type":510,"tag":551,"props":763,"children":765},{"style":764},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[766],{"type":515,"value":767},"function",{"type":510,"tag":551,"props":769,"children":771},{"style":770},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[772],{"type":515,"value":773}," TreeNode",{"type":510,"tag":551,"props":775,"children":777},{"style":776},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[778],{"type":515,"value":779},"(",{"type":510,"tag":551,"props":781,"children":783},{"style":782},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[784],{"type":515,"value":785},"val",{"type":510,"tag":551,"props":787,"children":788},{"style":776},[789],{"type":515,"value":790},",",{"type":510,"tag":551,"props":792,"children":793},{"style":782},[794],{"type":515,"value":795}," left",{"type":510,"tag":551,"props":797,"children":798},{"style":776},[799],{"type":515,"value":790},{"type":510,"tag":551,"props":801,"children":802},{"style":782},[803],{"type":515,"value":804}," right",{"type":510,"tag":551,"props":806,"children":807},{"style":776},[808],{"type":515,"value":809},")",{"type":510,"tag":551,"props":811,"children":812},{"style":776},[813],{"type":515,"value":814}," {\n",{"type":510,"tag":551,"props":816,"children":817},{"class":553,"line":590},[818,824,829,833,838,843,848,853,858,864,869,873],{"type":510,"tag":551,"props":819,"children":821},{"style":820},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[822],{"type":515,"value":823},"  this",{"type":510,"tag":551,"props":825,"children":826},{"style":776},[827],{"type":515,"value":828},".",{"type":510,"tag":551,"props":830,"children":831},{"style":782},[832],{"type":515,"value":785},{"type":510,"tag":551,"props":834,"children":835},{"style":776},[836],{"type":515,"value":837}," =",{"type":510,"tag":551,"props":839,"children":840},{"style":782},[841],{"type":515,"value":842}," val",{"type":510,"tag":551,"props":844,"children":845},{"style":764},[846],{"type":515,"value":847}," ===",{"type":510,"tag":551,"props":849,"children":850},{"style":764},[851],{"type":515,"value":852}," undefined",{"type":510,"tag":551,"props":854,"children":855},{"style":764},[856],{"type":515,"value":857}," ?",{"type":510,"tag":551,"props":859,"children":861},{"style":860},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[862],{"type":515,"value":863}," 0",{"type":510,"tag":551,"props":865,"children":866},{"style":764},[867],{"type":515,"value":868}," :",{"type":510,"tag":551,"props":870,"children":871},{"style":782},[872],{"type":515,"value":842},{"type":510,"tag":551,"props":874,"children":875},{"style":776},[876],{"type":515,"value":877},";\n",{"type":510,"tag":551,"props":879,"children":880},{"class":553,"line":599},[881,885,889,894,898,902,906,910,914,919,923,927],{"type":510,"tag":551,"props":882,"children":883},{"style":820},[884],{"type":515,"value":823},{"type":510,"tag":551,"props":886,"children":887},{"style":776},[888],{"type":515,"value":828},{"type":510,"tag":551,"props":890,"children":891},{"style":782},[892],{"type":515,"value":893},"left",{"type":510,"tag":551,"props":895,"children":896},{"style":776},[897],{"type":515,"value":837},{"type":510,"tag":551,"props":899,"children":900},{"style":782},[901],{"type":515,"value":795},{"type":510,"tag":551,"props":903,"children":904},{"style":764},[905],{"type":515,"value":847},{"type":510,"tag":551,"props":907,"children":908},{"style":764},[909],{"type":515,"value":852},{"type":510,"tag":551,"props":911,"children":912},{"style":764},[913],{"type":515,"value":857},{"type":510,"tag":551,"props":915,"children":916},{"style":764},[917],{"type":515,"value":918}," null",{"type":510,"tag":551,"props":920,"children":921},{"style":764},[922],{"type":515,"value":868},{"type":510,"tag":551,"props":924,"children":925},{"style":782},[926],{"type":515,"value":795},{"type":510,"tag":551,"props":928,"children":929},{"style":776},[930],{"type":515,"value":877},{"type":510,"tag":551,"props":932,"children":933},{"class":553,"line":675},[934,938,942,947,951,955,959,963,967,971,975,979],{"type":510,"tag":551,"props":935,"children":936},{"style":820},[937],{"type":515,"value":823},{"type":510,"tag":551,"props":939,"children":940},{"style":776},[941],{"type":515,"value":828},{"type":510,"tag":551,"props":943,"children":944},{"style":782},[945],{"type":515,"value":946},"right",{"type":510,"tag":551,"props":948,"children":949},{"style":776},[950],{"type":515,"value":837},{"type":510,"tag":551,"props":952,"children":953},{"style":782},[954],{"type":515,"value":804},{"type":510,"tag":551,"props":956,"children":957},{"style":764},[958],{"type":515,"value":847},{"type":510,"tag":551,"props":960,"children":961},{"style":764},[962],{"type":515,"value":852},{"type":510,"tag":551,"props":964,"children":965},{"style":764},[966],{"type":515,"value":857},{"type":510,"tag":551,"props":968,"children":969},{"style":764},[970],{"type":515,"value":918},{"type":510,"tag":551,"props":972,"children":973},{"style":764},[974],{"type":515,"value":868},{"type":510,"tag":551,"props":976,"children":977},{"style":782},[978],{"type":515,"value":804},{"type":510,"tag":551,"props":980,"children":981},{"style":776},[982],{"type":515,"value":877},{"type":510,"tag":551,"props":984,"children":986},{"class":553,"line":985},8,[987],{"type":510,"tag":551,"props":988,"children":989},{"style":776},[990],{"type":515,"value":991},"}\n",{"type":510,"tag":551,"props":993,"children":995},{"class":553,"line":994},9,[996],{"type":510,"tag":551,"props":997,"children":999},{"emptyLinePlaceholder":998},true,[1000],{"type":515,"value":1001},"\n",{"type":510,"tag":551,"props":1003,"children":1005},{"class":553,"line":1004},10,[1006],{"type":510,"tag":551,"props":1007,"children":1008},{"style":739},[1009],{"type":515,"value":742},{"type":510,"tag":551,"props":1011,"children":1013},{"class":553,"line":1012},11,[1014,1019,1024,1030,1035,1041,1046],{"type":510,"tag":551,"props":1015,"children":1016},{"style":739},[1017],{"type":515,"value":1018}," * ",{"type":510,"tag":551,"props":1020,"children":1021},{"style":776},[1022],{"type":515,"value":1023},"@",{"type":510,"tag":551,"props":1025,"children":1027},{"style":1026},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1028],{"type":515,"value":1029},"param",{"type":510,"tag":551,"props":1031,"children":1032},{"style":776},[1033],{"type":515,"value":1034}," {",{"type":510,"tag":551,"props":1036,"children":1038},{"style":1037},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1039],{"type":515,"value":1040},"TreeNode",{"type":510,"tag":551,"props":1042,"children":1043},{"style":776},[1044],{"type":515,"value":1045},"}",{"type":510,"tag":551,"props":1047,"children":1048},{"style":782},[1049],{"type":515,"value":1050}," root\n",{"type":510,"tag":551,"props":1052,"children":1054},{"class":553,"line":1053},12,[1055,1059,1063,1068,1072,1077],{"type":510,"tag":551,"props":1056,"children":1057},{"style":739},[1058],{"type":515,"value":1018},{"type":510,"tag":551,"props":1060,"children":1061},{"style":776},[1062],{"type":515,"value":1023},{"type":510,"tag":551,"props":1064,"children":1065},{"style":1026},[1066],{"type":515,"value":1067},"return",{"type":510,"tag":551,"props":1069,"children":1070},{"style":776},[1071],{"type":515,"value":1034},{"type":510,"tag":551,"props":1073,"children":1074},{"style":1037},[1075],{"type":515,"value":1076},"number",{"type":510,"tag":551,"props":1078,"children":1079},{"style":776},[1080],{"type":515,"value":991},{"type":510,"tag":551,"props":1082,"children":1084},{"class":553,"line":1083},13,[1085],{"type":510,"tag":551,"props":1086,"children":1087},{"style":739},[1088],{"type":515,"value":758},{"type":510,"tag":551,"props":1090,"children":1092},{"class":553,"line":1091},14,[1093,1098,1103,1107,1112,1117,1121,1125],{"type":510,"tag":551,"props":1094,"children":1095},{"style":764},[1096],{"type":515,"value":1097},"var",{"type":510,"tag":551,"props":1099,"children":1100},{"style":770},[1101],{"type":515,"value":1102}," sumNumbers",{"type":510,"tag":551,"props":1104,"children":1105},{"style":776},[1106],{"type":515,"value":837},{"type":510,"tag":551,"props":1108,"children":1109},{"style":764},[1110],{"type":515,"value":1111}," function",{"type":510,"tag":551,"props":1113,"children":1114},{"style":776},[1115],{"type":515,"value":1116}," (",{"type":510,"tag":551,"props":1118,"children":1119},{"style":782},[1120],{"type":515,"value":507},{"type":510,"tag":551,"props":1122,"children":1123},{"style":776},[1124],{"type":515,"value":809},{"type":510,"tag":551,"props":1126,"children":1127},{"style":776},[1128],{"type":515,"value":814},{"type":510,"tag":551,"props":1130,"children":1132},{"class":553,"line":1131},15,[1133,1138,1143,1147,1151,1156,1160,1165,1169,1174],{"type":510,"tag":551,"props":1134,"children":1135},{"style":764},[1136],{"type":515,"value":1137},"  const",{"type":510,"tag":551,"props":1139,"children":1140},{"style":770},[1141],{"type":515,"value":1142}," dfs",{"type":510,"tag":551,"props":1144,"children":1145},{"style":776},[1146],{"type":515,"value":837},{"type":510,"tag":551,"props":1148,"children":1149},{"style":776},[1150],{"type":515,"value":1116},{"type":510,"tag":551,"props":1152,"children":1153},{"style":782},[1154],{"type":515,"value":1155},"node",{"type":510,"tag":551,"props":1157,"children":1158},{"style":776},[1159],{"type":515,"value":790},{"type":510,"tag":551,"props":1161,"children":1162},{"style":782},[1163],{"type":515,"value":1164}," prev",{"type":510,"tag":551,"props":1166,"children":1167},{"style":776},[1168],{"type":515,"value":809},{"type":510,"tag":551,"props":1170,"children":1171},{"style":776},[1172],{"type":515,"value":1173}," =>",{"type":510,"tag":551,"props":1175,"children":1176},{"style":776},[1177],{"type":515,"value":814},{"type":510,"tag":551,"props":1179,"children":1181},{"class":553,"line":1180},16,[1182,1187,1191,1195,1199,1203,1207,1212,1216],{"type":510,"tag":551,"props":1183,"children":1184},{"style":1026},[1185],{"type":515,"value":1186},"    if",{"type":510,"tag":551,"props":1188,"children":1189},{"style":776},[1190],{"type":515,"value":1116},{"type":510,"tag":551,"props":1192,"children":1193},{"style":782},[1194],{"type":515,"value":1155},{"type":510,"tag":551,"props":1196,"children":1197},{"style":764},[1198],{"type":515,"value":847},{"type":510,"tag":551,"props":1200,"children":1201},{"style":764},[1202],{"type":515,"value":918},{"type":510,"tag":551,"props":1204,"children":1205},{"style":776},[1206],{"type":515,"value":809},{"type":510,"tag":551,"props":1208,"children":1209},{"style":1026},[1210],{"type":515,"value":1211}," return",{"type":510,"tag":551,"props":1213,"children":1214},{"style":860},[1215],{"type":515,"value":863},{"type":510,"tag":551,"props":1217,"children":1218},{"style":776},[1219],{"type":515,"value":877},{"type":510,"tag":551,"props":1221,"children":1223},{"class":553,"line":1222},17,[1224,1229,1234,1238,1242,1247,1252,1257,1262,1266,1270],{"type":510,"tag":551,"props":1225,"children":1226},{"style":764},[1227],{"type":515,"value":1228},"    let",{"type":510,"tag":551,"props":1230,"children":1231},{"style":782},[1232],{"type":515,"value":1233}," sum",{"type":510,"tag":551,"props":1235,"children":1236},{"style":776},[1237],{"type":515,"value":837},{"type":510,"tag":551,"props":1239,"children":1240},{"style":782},[1241],{"type":515,"value":1164},{"type":510,"tag":551,"props":1243,"children":1244},{"style":764},[1245],{"type":515,"value":1246}," *",{"type":510,"tag":551,"props":1248,"children":1249},{"style":860},[1250],{"type":515,"value":1251}," 10",{"type":510,"tag":551,"props":1253,"children":1254},{"style":764},[1255],{"type":515,"value":1256}," +",{"type":510,"tag":551,"props":1258,"children":1259},{"style":782},[1260],{"type":515,"value":1261}," node",{"type":510,"tag":551,"props":1263,"children":1264},{"style":776},[1265],{"type":515,"value":828},{"type":510,"tag":551,"props":1267,"children":1268},{"style":782},[1269],{"type":515,"value":785},{"type":510,"tag":551,"props":1271,"children":1272},{"style":776},[1273],{"type":515,"value":877},{"type":510,"tag":551,"props":1275,"children":1277},{"class":553,"line":1276},18,[1278,1282,1286,1290,1294,1298,1302,1306,1311,1315,1319,1323,1327,1331,1335,1339,1343],{"type":510,"tag":551,"props":1279,"children":1280},{"style":1026},[1281],{"type":515,"value":1186},{"type":510,"tag":551,"props":1283,"children":1284},{"style":776},[1285],{"type":515,"value":1116},{"type":510,"tag":551,"props":1287,"children":1288},{"style":782},[1289],{"type":515,"value":1155},{"type":510,"tag":551,"props":1291,"children":1292},{"style":776},[1293],{"type":515,"value":828},{"type":510,"tag":551,"props":1295,"children":1296},{"style":782},[1297],{"type":515,"value":893},{"type":510,"tag":551,"props":1299,"children":1300},{"style":764},[1301],{"type":515,"value":847},{"type":510,"tag":551,"props":1303,"children":1304},{"style":764},[1305],{"type":515,"value":918},{"type":510,"tag":551,"props":1307,"children":1308},{"style":764},[1309],{"type":515,"value":1310}," &&",{"type":510,"tag":551,"props":1312,"children":1313},{"style":782},[1314],{"type":515,"value":1261},{"type":510,"tag":551,"props":1316,"children":1317},{"style":776},[1318],{"type":515,"value":828},{"type":510,"tag":551,"props":1320,"children":1321},{"style":782},[1322],{"type":515,"value":946},{"type":510,"tag":551,"props":1324,"children":1325},{"style":764},[1326],{"type":515,"value":847},{"type":510,"tag":551,"props":1328,"children":1329},{"style":764},[1330],{"type":515,"value":918},{"type":510,"tag":551,"props":1332,"children":1333},{"style":776},[1334],{"type":515,"value":809},{"type":510,"tag":551,"props":1336,"children":1337},{"style":1026},[1338],{"type":515,"value":1211},{"type":510,"tag":551,"props":1340,"children":1341},{"style":782},[1342],{"type":515,"value":1233},{"type":510,"tag":551,"props":1344,"children":1345},{"style":776},[1346],{"type":515,"value":877},{"type":510,"tag":551,"props":1348,"children":1350},{"class":553,"line":1349},19,[1351,1356,1360,1364,1368,1372,1376,1380,1384,1388,1392,1396,1400,1404,1408,1412,1416,1420],{"type":510,"tag":551,"props":1352,"children":1353},{"style":1026},[1354],{"type":515,"value":1355},"    return",{"type":510,"tag":551,"props":1357,"children":1358},{"style":770},[1359],{"type":515,"value":1142},{"type":510,"tag":551,"props":1361,"children":1362},{"style":776},[1363],{"type":515,"value":779},{"type":510,"tag":551,"props":1365,"children":1366},{"style":782},[1367],{"type":515,"value":1155},{"type":510,"tag":551,"props":1369,"children":1370},{"style":776},[1371],{"type":515,"value":828},{"type":510,"tag":551,"props":1373,"children":1374},{"style":782},[1375],{"type":515,"value":893},{"type":510,"tag":551,"props":1377,"children":1378},{"style":776},[1379],{"type":515,"value":790},{"type":510,"tag":551,"props":1381,"children":1382},{"style":782},[1383],{"type":515,"value":1233},{"type":510,"tag":551,"props":1385,"children":1386},{"style":776},[1387],{"type":515,"value":809},{"type":510,"tag":551,"props":1389,"children":1390},{"style":764},[1391],{"type":515,"value":1256},{"type":510,"tag":551,"props":1393,"children":1394},{"style":770},[1395],{"type":515,"value":1142},{"type":510,"tag":551,"props":1397,"children":1398},{"style":776},[1399],{"type":515,"value":779},{"type":510,"tag":551,"props":1401,"children":1402},{"style":782},[1403],{"type":515,"value":1155},{"type":510,"tag":551,"props":1405,"children":1406},{"style":776},[1407],{"type":515,"value":828},{"type":510,"tag":551,"props":1409,"children":1410},{"style":782},[1411],{"type":515,"value":946},{"type":510,"tag":551,"props":1413,"children":1414},{"style":776},[1415],{"type":515,"value":790},{"type":510,"tag":551,"props":1417,"children":1418},{"style":782},[1419],{"type":515,"value":1233},{"type":510,"tag":551,"props":1421,"children":1422},{"style":776},[1423],{"type":515,"value":1424},");\n",{"type":510,"tag":551,"props":1426,"children":1428},{"class":553,"line":1427},20,[1429],{"type":510,"tag":551,"props":1430,"children":1431},{"style":776},[1432],{"type":515,"value":1433},"  };\n",{"type":510,"tag":551,"props":1435,"children":1437},{"class":553,"line":1436},21,[1438,1443,1447,1451,1455,1459,1463],{"type":510,"tag":551,"props":1439,"children":1440},{"style":1026},[1441],{"type":515,"value":1442},"  return",{"type":510,"tag":551,"props":1444,"children":1445},{"style":770},[1446],{"type":515,"value":1142},{"type":510,"tag":551,"props":1448,"children":1449},{"style":776},[1450],{"type":515,"value":779},{"type":510,"tag":551,"props":1452,"children":1453},{"style":782},[1454],{"type":515,"value":507},{"type":510,"tag":551,"props":1456,"children":1457},{"style":776},[1458],{"type":515,"value":790},{"type":510,"tag":551,"props":1460,"children":1461},{"style":860},[1462],{"type":515,"value":863},{"type":510,"tag":551,"props":1464,"children":1465},{"style":776},[1466],{"type":515,"value":1424},{"type":510,"tag":551,"props":1468,"children":1470},{"class":553,"line":1469},22,[1471],{"type":510,"tag":551,"props":1472,"children":1473},{"style":776},[1474],{"type":515,"value":1475},"};\n",{"type":510,"tag":1477,"props":1478,"children":1479},"style",{},[1480],{"type":515,"value":1481},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":590,"depth":590,"links":1483},[1484,1485],{"id":710,"depth":563,"text":710},{"id":715,"depth":563,"text":715,"children":1486},[1487],{"id":721,"depth":572,"text":724},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1494,1496],{"_path":165,"title":164,"description":1495},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":171,"title":170,"description":1497},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1714054337560]