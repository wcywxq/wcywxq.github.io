[{"data":1,"prerenderedAt":1544},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":546,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1539},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":168,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":167,"description":550,"url":551,"body":552,"_type":1534,"_id":1535,"_source":1536,"_file":1537,"_extension":1538},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":553,"children":554,"toc":1528},"root",[555,562,567,572,577,586,652,657,665,728,733,753,759,764,771,1522],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":556,"tag":557,"props":568,"children":569},{},[570],{"type":561,"value":571},"叶节点 是指没有子节点的节点。",{"type":556,"tag":557,"props":573,"children":574},{},[575],{"type":561,"value":576},"示例 1：",{"type":556,"tag":557,"props":578,"children":579},{},[580],{"type":556,"tag":581,"props":582,"children":585},"img",{"alt":583,"src":584},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":556,"tag":587,"props":588,"children":591},"pre",{"className":589,"code":590,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[592],{"type":556,"tag":593,"props":594,"children":595},"code",{"__ignoreMap":549},[596,607,616,625,634,643],{"type":556,"tag":597,"props":598,"children":601},"span",{"class":599,"line":600},"line",1,[602],{"type":556,"tag":597,"props":603,"children":604},{},[605],{"type":561,"value":606},"输入：root = [1,2,3]\n",{"type":556,"tag":597,"props":608,"children":610},{"class":599,"line":609},2,[611],{"type":556,"tag":597,"props":612,"children":613},{},[614],{"type":561,"value":615},"输出：25\n",{"type":556,"tag":597,"props":617,"children":619},{"class":599,"line":618},3,[620],{"type":556,"tag":597,"props":621,"children":622},{},[623],{"type":561,"value":624},"解释：\n",{"type":556,"tag":597,"props":626,"children":628},{"class":599,"line":627},4,[629],{"type":556,"tag":597,"props":630,"children":631},{},[632],{"type":561,"value":633},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":556,"tag":597,"props":635,"children":637},{"class":599,"line":636},5,[638],{"type":556,"tag":597,"props":639,"children":640},{},[641],{"type":561,"value":642},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":556,"tag":597,"props":644,"children":646},{"class":599,"line":645},6,[647],{"type":556,"tag":597,"props":648,"children":649},{},[650],{"type":561,"value":651},"因此，数字总和 = 12 + 13 = 25\n",{"type":556,"tag":557,"props":653,"children":654},{},[655],{"type":561,"value":656},"示例 2：",{"type":556,"tag":557,"props":658,"children":659},{},[660],{"type":556,"tag":581,"props":661,"children":664},{"alt":662,"src":663},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":556,"tag":587,"props":666,"children":668},{"className":589,"code":667,"language":561,"meta":549,"style":549},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[669],{"type":556,"tag":593,"props":670,"children":671},{"__ignoreMap":549},[672,680,688,695,703,711,719],{"type":556,"tag":597,"props":673,"children":674},{"class":599,"line":600},[675],{"type":556,"tag":597,"props":676,"children":677},{},[678],{"type":561,"value":679},"输入：root = [4,9,0,5,1]\n",{"type":556,"tag":597,"props":681,"children":682},{"class":599,"line":609},[683],{"type":556,"tag":597,"props":684,"children":685},{},[686],{"type":561,"value":687},"输出：1026\n",{"type":556,"tag":597,"props":689,"children":690},{"class":599,"line":618},[691],{"type":556,"tag":597,"props":692,"children":693},{},[694],{"type":561,"value":624},{"type":556,"tag":597,"props":696,"children":697},{"class":599,"line":627},[698],{"type":556,"tag":597,"props":699,"children":700},{},[701],{"type":561,"value":702},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":556,"tag":597,"props":704,"children":705},{"class":599,"line":636},[706],{"type":556,"tag":597,"props":707,"children":708},{},[709],{"type":561,"value":710},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":556,"tag":597,"props":712,"children":713},{"class":599,"line":645},[714],{"type":556,"tag":597,"props":715,"children":716},{},[717],{"type":561,"value":718},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":556,"tag":597,"props":720,"children":722},{"class":599,"line":721},7,[723],{"type":556,"tag":597,"props":724,"children":725},{},[726],{"type":561,"value":727},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":556,"tag":557,"props":729,"children":730},{},[731],{"type":561,"value":732},"提示：",{"type":556,"tag":734,"props":735,"children":736},"ul",{},[737,743,748],{"type":556,"tag":738,"props":739,"children":740},"li",{},[741],{"type":561,"value":742},"树中节点的数目在范围 [1, 1000] 内",{"type":556,"tag":738,"props":744,"children":745},{},[746],{"type":561,"value":747},"0 \u003C= Node.val \u003C= 9",{"type":556,"tag":738,"props":749,"children":750},{},[751],{"type":561,"value":752},"树的深度不超过 10",{"type":556,"tag":754,"props":755,"children":757},"h2",{"id":756},"解题思路",[758],{"type":561,"value":756},{"type":556,"tag":754,"props":760,"children":762},{"id":761},"实现",[763],{"type":561,"value":761},{"type":556,"tag":765,"props":766,"children":768},"h3",{"id":767},"深度优先搜素-dfs",[769],{"type":561,"value":770},"深度优先搜素 - dfs",{"type":556,"tag":587,"props":772,"children":776},{"className":773,"code":774,"language":775,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[777],{"type":556,"tag":593,"props":778,"children":779},{"__ignoreMap":549},[780,789,797,805,861,924,977,1029,1038,1048,1056,1097,1127,1135,1175,1224,1266,1320,1393,1471,1480,1513],{"type":556,"tag":597,"props":781,"children":782},{"class":599,"line":600},[783],{"type":556,"tag":597,"props":784,"children":786},{"style":785},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[787],{"type":561,"value":788},"/**\n",{"type":556,"tag":597,"props":790,"children":791},{"class":599,"line":609},[792],{"type":556,"tag":597,"props":793,"children":794},{"style":785},[795],{"type":561,"value":796}," * Definition for a binary tree node.\n",{"type":556,"tag":597,"props":798,"children":799},{"class":599,"line":618},[800],{"type":556,"tag":597,"props":801,"children":802},{"style":785},[803],{"type":561,"value":804}," */\n",{"type":556,"tag":597,"props":806,"children":807},{"class":599,"line":627},[808,814,820,826,832,837,842,846,851,856],{"type":556,"tag":597,"props":809,"children":811},{"style":810},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[812],{"type":561,"value":813},"function",{"type":556,"tag":597,"props":815,"children":817},{"style":816},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[818],{"type":561,"value":819}," TreeNode",{"type":556,"tag":597,"props":821,"children":823},{"style":822},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[824],{"type":561,"value":825},"(",{"type":556,"tag":597,"props":827,"children":829},{"style":828},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[830],{"type":561,"value":831},"val",{"type":556,"tag":597,"props":833,"children":834},{"style":822},[835],{"type":561,"value":836},",",{"type":556,"tag":597,"props":838,"children":839},{"style":828},[840],{"type":561,"value":841}," left",{"type":556,"tag":597,"props":843,"children":844},{"style":822},[845],{"type":561,"value":836},{"type":556,"tag":597,"props":847,"children":848},{"style":828},[849],{"type":561,"value":850}," right",{"type":556,"tag":597,"props":852,"children":853},{"style":822},[854],{"type":561,"value":855},")",{"type":556,"tag":597,"props":857,"children":858},{"style":822},[859],{"type":561,"value":860}," {\n",{"type":556,"tag":597,"props":862,"children":863},{"class":599,"line":636},[864,870,875,879,884,889,894,899,904,910,915,919],{"type":556,"tag":597,"props":865,"children":867},{"style":866},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[868],{"type":561,"value":869},"  this",{"type":556,"tag":597,"props":871,"children":872},{"style":822},[873],{"type":561,"value":874},".",{"type":556,"tag":597,"props":876,"children":877},{"style":828},[878],{"type":561,"value":831},{"type":556,"tag":597,"props":880,"children":881},{"style":822},[882],{"type":561,"value":883}," =",{"type":556,"tag":597,"props":885,"children":886},{"style":828},[887],{"type":561,"value":888}," val",{"type":556,"tag":597,"props":890,"children":891},{"style":810},[892],{"type":561,"value":893}," ===",{"type":556,"tag":597,"props":895,"children":896},{"style":810},[897],{"type":561,"value":898}," undefined",{"type":556,"tag":597,"props":900,"children":901},{"style":810},[902],{"type":561,"value":903}," ?",{"type":556,"tag":597,"props":905,"children":907},{"style":906},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[908],{"type":561,"value":909}," 0",{"type":556,"tag":597,"props":911,"children":912},{"style":810},[913],{"type":561,"value":914}," :",{"type":556,"tag":597,"props":916,"children":917},{"style":828},[918],{"type":561,"value":888},{"type":556,"tag":597,"props":920,"children":921},{"style":822},[922],{"type":561,"value":923},";\n",{"type":556,"tag":597,"props":925,"children":926},{"class":599,"line":645},[927,931,935,940,944,948,952,956,960,965,969,973],{"type":556,"tag":597,"props":928,"children":929},{"style":866},[930],{"type":561,"value":869},{"type":556,"tag":597,"props":932,"children":933},{"style":822},[934],{"type":561,"value":874},{"type":556,"tag":597,"props":936,"children":937},{"style":828},[938],{"type":561,"value":939},"left",{"type":556,"tag":597,"props":941,"children":942},{"style":822},[943],{"type":561,"value":883},{"type":556,"tag":597,"props":945,"children":946},{"style":828},[947],{"type":561,"value":841},{"type":556,"tag":597,"props":949,"children":950},{"style":810},[951],{"type":561,"value":893},{"type":556,"tag":597,"props":953,"children":954},{"style":810},[955],{"type":561,"value":898},{"type":556,"tag":597,"props":957,"children":958},{"style":810},[959],{"type":561,"value":903},{"type":556,"tag":597,"props":961,"children":962},{"style":810},[963],{"type":561,"value":964}," null",{"type":556,"tag":597,"props":966,"children":967},{"style":810},[968],{"type":561,"value":914},{"type":556,"tag":597,"props":970,"children":971},{"style":828},[972],{"type":561,"value":841},{"type":556,"tag":597,"props":974,"children":975},{"style":822},[976],{"type":561,"value":923},{"type":556,"tag":597,"props":978,"children":979},{"class":599,"line":721},[980,984,988,993,997,1001,1005,1009,1013,1017,1021,1025],{"type":556,"tag":597,"props":981,"children":982},{"style":866},[983],{"type":561,"value":869},{"type":556,"tag":597,"props":985,"children":986},{"style":822},[987],{"type":561,"value":874},{"type":556,"tag":597,"props":989,"children":990},{"style":828},[991],{"type":561,"value":992},"right",{"type":556,"tag":597,"props":994,"children":995},{"style":822},[996],{"type":561,"value":883},{"type":556,"tag":597,"props":998,"children":999},{"style":828},[1000],{"type":561,"value":850},{"type":556,"tag":597,"props":1002,"children":1003},{"style":810},[1004],{"type":561,"value":893},{"type":556,"tag":597,"props":1006,"children":1007},{"style":810},[1008],{"type":561,"value":898},{"type":556,"tag":597,"props":1010,"children":1011},{"style":810},[1012],{"type":561,"value":903},{"type":556,"tag":597,"props":1014,"children":1015},{"style":810},[1016],{"type":561,"value":964},{"type":556,"tag":597,"props":1018,"children":1019},{"style":810},[1020],{"type":561,"value":914},{"type":556,"tag":597,"props":1022,"children":1023},{"style":828},[1024],{"type":561,"value":850},{"type":556,"tag":597,"props":1026,"children":1027},{"style":822},[1028],{"type":561,"value":923},{"type":556,"tag":597,"props":1030,"children":1032},{"class":599,"line":1031},8,[1033],{"type":556,"tag":597,"props":1034,"children":1035},{"style":822},[1036],{"type":561,"value":1037},"}\n",{"type":556,"tag":597,"props":1039,"children":1041},{"class":599,"line":1040},9,[1042],{"type":556,"tag":597,"props":1043,"children":1045},{"emptyLinePlaceholder":1044},true,[1046],{"type":561,"value":1047},"\n",{"type":556,"tag":597,"props":1049,"children":1051},{"class":599,"line":1050},10,[1052],{"type":556,"tag":597,"props":1053,"children":1054},{"style":785},[1055],{"type":561,"value":788},{"type":556,"tag":597,"props":1057,"children":1059},{"class":599,"line":1058},11,[1060,1065,1070,1076,1081,1087,1092],{"type":556,"tag":597,"props":1061,"children":1062},{"style":785},[1063],{"type":561,"value":1064}," * ",{"type":556,"tag":597,"props":1066,"children":1067},{"style":822},[1068],{"type":561,"value":1069},"@",{"type":556,"tag":597,"props":1071,"children":1073},{"style":1072},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1074],{"type":561,"value":1075},"param",{"type":556,"tag":597,"props":1077,"children":1078},{"style":822},[1079],{"type":561,"value":1080}," {",{"type":556,"tag":597,"props":1082,"children":1084},{"style":1083},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1085],{"type":561,"value":1086},"TreeNode",{"type":556,"tag":597,"props":1088,"children":1089},{"style":822},[1090],{"type":561,"value":1091},"}",{"type":556,"tag":597,"props":1093,"children":1094},{"style":828},[1095],{"type":561,"value":1096}," root\n",{"type":556,"tag":597,"props":1098,"children":1100},{"class":599,"line":1099},12,[1101,1105,1109,1114,1118,1123],{"type":556,"tag":597,"props":1102,"children":1103},{"style":785},[1104],{"type":561,"value":1064},{"type":556,"tag":597,"props":1106,"children":1107},{"style":822},[1108],{"type":561,"value":1069},{"type":556,"tag":597,"props":1110,"children":1111},{"style":1072},[1112],{"type":561,"value":1113},"return",{"type":556,"tag":597,"props":1115,"children":1116},{"style":822},[1117],{"type":561,"value":1080},{"type":556,"tag":597,"props":1119,"children":1120},{"style":1083},[1121],{"type":561,"value":1122},"number",{"type":556,"tag":597,"props":1124,"children":1125},{"style":822},[1126],{"type":561,"value":1037},{"type":556,"tag":597,"props":1128,"children":1130},{"class":599,"line":1129},13,[1131],{"type":556,"tag":597,"props":1132,"children":1133},{"style":785},[1134],{"type":561,"value":804},{"type":556,"tag":597,"props":1136,"children":1138},{"class":599,"line":1137},14,[1139,1144,1149,1153,1158,1163,1167,1171],{"type":556,"tag":597,"props":1140,"children":1141},{"style":810},[1142],{"type":561,"value":1143},"var",{"type":556,"tag":597,"props":1145,"children":1146},{"style":816},[1147],{"type":561,"value":1148}," sumNumbers",{"type":556,"tag":597,"props":1150,"children":1151},{"style":822},[1152],{"type":561,"value":883},{"type":556,"tag":597,"props":1154,"children":1155},{"style":810},[1156],{"type":561,"value":1157}," function",{"type":556,"tag":597,"props":1159,"children":1160},{"style":822},[1161],{"type":561,"value":1162}," (",{"type":556,"tag":597,"props":1164,"children":1165},{"style":828},[1166],{"type":561,"value":553},{"type":556,"tag":597,"props":1168,"children":1169},{"style":822},[1170],{"type":561,"value":855},{"type":556,"tag":597,"props":1172,"children":1173},{"style":822},[1174],{"type":561,"value":860},{"type":556,"tag":597,"props":1176,"children":1178},{"class":599,"line":1177},15,[1179,1184,1189,1193,1197,1202,1206,1211,1215,1220],{"type":556,"tag":597,"props":1180,"children":1181},{"style":810},[1182],{"type":561,"value":1183},"  const",{"type":556,"tag":597,"props":1185,"children":1186},{"style":816},[1187],{"type":561,"value":1188}," dfs",{"type":556,"tag":597,"props":1190,"children":1191},{"style":822},[1192],{"type":561,"value":883},{"type":556,"tag":597,"props":1194,"children":1195},{"style":822},[1196],{"type":561,"value":1162},{"type":556,"tag":597,"props":1198,"children":1199},{"style":828},[1200],{"type":561,"value":1201},"node",{"type":556,"tag":597,"props":1203,"children":1204},{"style":822},[1205],{"type":561,"value":836},{"type":556,"tag":597,"props":1207,"children":1208},{"style":828},[1209],{"type":561,"value":1210}," prev",{"type":556,"tag":597,"props":1212,"children":1213},{"style":822},[1214],{"type":561,"value":855},{"type":556,"tag":597,"props":1216,"children":1217},{"style":822},[1218],{"type":561,"value":1219}," =>",{"type":556,"tag":597,"props":1221,"children":1222},{"style":822},[1223],{"type":561,"value":860},{"type":556,"tag":597,"props":1225,"children":1227},{"class":599,"line":1226},16,[1228,1233,1237,1241,1245,1249,1253,1258,1262],{"type":556,"tag":597,"props":1229,"children":1230},{"style":1072},[1231],{"type":561,"value":1232},"    if",{"type":556,"tag":597,"props":1234,"children":1235},{"style":822},[1236],{"type":561,"value":1162},{"type":556,"tag":597,"props":1238,"children":1239},{"style":828},[1240],{"type":561,"value":1201},{"type":556,"tag":597,"props":1242,"children":1243},{"style":810},[1244],{"type":561,"value":893},{"type":556,"tag":597,"props":1246,"children":1247},{"style":810},[1248],{"type":561,"value":964},{"type":556,"tag":597,"props":1250,"children":1251},{"style":822},[1252],{"type":561,"value":855},{"type":556,"tag":597,"props":1254,"children":1255},{"style":1072},[1256],{"type":561,"value":1257}," return",{"type":556,"tag":597,"props":1259,"children":1260},{"style":906},[1261],{"type":561,"value":909},{"type":556,"tag":597,"props":1263,"children":1264},{"style":822},[1265],{"type":561,"value":923},{"type":556,"tag":597,"props":1267,"children":1269},{"class":599,"line":1268},17,[1270,1275,1280,1284,1288,1293,1298,1303,1308,1312,1316],{"type":556,"tag":597,"props":1271,"children":1272},{"style":810},[1273],{"type":561,"value":1274},"    let",{"type":556,"tag":597,"props":1276,"children":1277},{"style":828},[1278],{"type":561,"value":1279}," sum",{"type":556,"tag":597,"props":1281,"children":1282},{"style":822},[1283],{"type":561,"value":883},{"type":556,"tag":597,"props":1285,"children":1286},{"style":828},[1287],{"type":561,"value":1210},{"type":556,"tag":597,"props":1289,"children":1290},{"style":810},[1291],{"type":561,"value":1292}," *",{"type":556,"tag":597,"props":1294,"children":1295},{"style":906},[1296],{"type":561,"value":1297}," 10",{"type":556,"tag":597,"props":1299,"children":1300},{"style":810},[1301],{"type":561,"value":1302}," +",{"type":556,"tag":597,"props":1304,"children":1305},{"style":828},[1306],{"type":561,"value":1307}," node",{"type":556,"tag":597,"props":1309,"children":1310},{"style":822},[1311],{"type":561,"value":874},{"type":556,"tag":597,"props":1313,"children":1314},{"style":828},[1315],{"type":561,"value":831},{"type":556,"tag":597,"props":1317,"children":1318},{"style":822},[1319],{"type":561,"value":923},{"type":556,"tag":597,"props":1321,"children":1323},{"class":599,"line":1322},18,[1324,1328,1332,1336,1340,1344,1348,1352,1357,1361,1365,1369,1373,1377,1381,1385,1389],{"type":556,"tag":597,"props":1325,"children":1326},{"style":1072},[1327],{"type":561,"value":1232},{"type":556,"tag":597,"props":1329,"children":1330},{"style":822},[1331],{"type":561,"value":1162},{"type":556,"tag":597,"props":1333,"children":1334},{"style":828},[1335],{"type":561,"value":1201},{"type":556,"tag":597,"props":1337,"children":1338},{"style":822},[1339],{"type":561,"value":874},{"type":556,"tag":597,"props":1341,"children":1342},{"style":828},[1343],{"type":561,"value":939},{"type":556,"tag":597,"props":1345,"children":1346},{"style":810},[1347],{"type":561,"value":893},{"type":556,"tag":597,"props":1349,"children":1350},{"style":810},[1351],{"type":561,"value":964},{"type":556,"tag":597,"props":1353,"children":1354},{"style":810},[1355],{"type":561,"value":1356}," &&",{"type":556,"tag":597,"props":1358,"children":1359},{"style":828},[1360],{"type":561,"value":1307},{"type":556,"tag":597,"props":1362,"children":1363},{"style":822},[1364],{"type":561,"value":874},{"type":556,"tag":597,"props":1366,"children":1367},{"style":828},[1368],{"type":561,"value":992},{"type":556,"tag":597,"props":1370,"children":1371},{"style":810},[1372],{"type":561,"value":893},{"type":556,"tag":597,"props":1374,"children":1375},{"style":810},[1376],{"type":561,"value":964},{"type":556,"tag":597,"props":1378,"children":1379},{"style":822},[1380],{"type":561,"value":855},{"type":556,"tag":597,"props":1382,"children":1383},{"style":1072},[1384],{"type":561,"value":1257},{"type":556,"tag":597,"props":1386,"children":1387},{"style":828},[1388],{"type":561,"value":1279},{"type":556,"tag":597,"props":1390,"children":1391},{"style":822},[1392],{"type":561,"value":923},{"type":556,"tag":597,"props":1394,"children":1396},{"class":599,"line":1395},19,[1397,1402,1406,1410,1414,1418,1422,1426,1430,1434,1438,1442,1446,1450,1454,1458,1462,1466],{"type":556,"tag":597,"props":1398,"children":1399},{"style":1072},[1400],{"type":561,"value":1401},"    return",{"type":556,"tag":597,"props":1403,"children":1404},{"style":816},[1405],{"type":561,"value":1188},{"type":556,"tag":597,"props":1407,"children":1408},{"style":822},[1409],{"type":561,"value":825},{"type":556,"tag":597,"props":1411,"children":1412},{"style":828},[1413],{"type":561,"value":1201},{"type":556,"tag":597,"props":1415,"children":1416},{"style":822},[1417],{"type":561,"value":874},{"type":556,"tag":597,"props":1419,"children":1420},{"style":828},[1421],{"type":561,"value":939},{"type":556,"tag":597,"props":1423,"children":1424},{"style":822},[1425],{"type":561,"value":836},{"type":556,"tag":597,"props":1427,"children":1428},{"style":828},[1429],{"type":561,"value":1279},{"type":556,"tag":597,"props":1431,"children":1432},{"style":822},[1433],{"type":561,"value":855},{"type":556,"tag":597,"props":1435,"children":1436},{"style":810},[1437],{"type":561,"value":1302},{"type":556,"tag":597,"props":1439,"children":1440},{"style":816},[1441],{"type":561,"value":1188},{"type":556,"tag":597,"props":1443,"children":1444},{"style":822},[1445],{"type":561,"value":825},{"type":556,"tag":597,"props":1447,"children":1448},{"style":828},[1449],{"type":561,"value":1201},{"type":556,"tag":597,"props":1451,"children":1452},{"style":822},[1453],{"type":561,"value":874},{"type":556,"tag":597,"props":1455,"children":1456},{"style":828},[1457],{"type":561,"value":992},{"type":556,"tag":597,"props":1459,"children":1460},{"style":822},[1461],{"type":561,"value":836},{"type":556,"tag":597,"props":1463,"children":1464},{"style":828},[1465],{"type":561,"value":1279},{"type":556,"tag":597,"props":1467,"children":1468},{"style":822},[1469],{"type":561,"value":1470},");\n",{"type":556,"tag":597,"props":1472,"children":1474},{"class":599,"line":1473},20,[1475],{"type":556,"tag":597,"props":1476,"children":1477},{"style":822},[1478],{"type":561,"value":1479},"  };\n",{"type":556,"tag":597,"props":1481,"children":1483},{"class":599,"line":1482},21,[1484,1489,1493,1497,1501,1505,1509],{"type":556,"tag":597,"props":1485,"children":1486},{"style":1072},[1487],{"type":561,"value":1488},"  return",{"type":556,"tag":597,"props":1490,"children":1491},{"style":816},[1492],{"type":561,"value":1188},{"type":556,"tag":597,"props":1494,"children":1495},{"style":822},[1496],{"type":561,"value":825},{"type":556,"tag":597,"props":1498,"children":1499},{"style":828},[1500],{"type":561,"value":553},{"type":556,"tag":597,"props":1502,"children":1503},{"style":822},[1504],{"type":561,"value":836},{"type":556,"tag":597,"props":1506,"children":1507},{"style":906},[1508],{"type":561,"value":909},{"type":556,"tag":597,"props":1510,"children":1511},{"style":822},[1512],{"type":561,"value":1470},{"type":556,"tag":597,"props":1514,"children":1516},{"class":599,"line":1515},22,[1517],{"type":556,"tag":597,"props":1518,"children":1519},{"style":822},[1520],{"type":561,"value":1521},"};\n",{"type":556,"tag":1523,"props":1524,"children":1525},"style",{},[1526],{"type":561,"value":1527},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":636,"depth":636,"links":1529},[1530,1531],{"id":756,"depth":609,"text":756},{"id":761,"depth":609,"text":761,"children":1532},[1533],{"id":767,"depth":618,"text":770},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1540,1542],{"_path":165,"title":164,"description":1541},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":171,"title":170,"description":1543},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1714279833908]