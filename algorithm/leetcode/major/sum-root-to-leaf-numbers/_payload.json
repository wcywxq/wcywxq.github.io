[{"data":1,"prerenderedAt":1447},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":460,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1442},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":162,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":161,"description":464,"url":465,"body":466,"_type":1437,"_id":1438,"_source":1439,"_file":1440,"_extension":1441},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":467,"children":468,"toc":1431},"root",[469,476,481,486,491,500,566,571,579,642,647,667,673,678,685,1425],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"叶节点 是指没有子节点的节点。",{"type":470,"tag":471,"props":487,"children":488},{},[489],{"type":475,"value":490},"示例 1：",{"type":470,"tag":471,"props":492,"children":493},{},[494],{"type":470,"tag":495,"props":496,"children":499},"img",{"alt":497,"src":498},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":470,"tag":501,"props":502,"children":505},"pre",{"className":503,"code":504,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[506],{"type":470,"tag":507,"props":508,"children":509},"code",{"__ignoreMap":463},[510,521,530,539,548,557],{"type":470,"tag":511,"props":512,"children":515},"span",{"class":513,"line":514},"line",1,[516],{"type":470,"tag":511,"props":517,"children":518},{},[519],{"type":475,"value":520},"输入：root = [1,2,3]\n",{"type":470,"tag":511,"props":522,"children":524},{"class":513,"line":523},2,[525],{"type":470,"tag":511,"props":526,"children":527},{},[528],{"type":475,"value":529},"输出：25\n",{"type":470,"tag":511,"props":531,"children":533},{"class":513,"line":532},3,[534],{"type":470,"tag":511,"props":535,"children":536},{},[537],{"type":475,"value":538},"解释：\n",{"type":470,"tag":511,"props":540,"children":542},{"class":513,"line":541},4,[543],{"type":470,"tag":511,"props":544,"children":545},{},[546],{"type":475,"value":547},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":470,"tag":511,"props":549,"children":551},{"class":513,"line":550},5,[552],{"type":470,"tag":511,"props":553,"children":554},{},[555],{"type":475,"value":556},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":470,"tag":511,"props":558,"children":560},{"class":513,"line":559},6,[561],{"type":470,"tag":511,"props":562,"children":563},{},[564],{"type":475,"value":565},"因此，数字总和 = 12 + 13 = 25\n",{"type":470,"tag":471,"props":567,"children":568},{},[569],{"type":475,"value":570},"示例 2：",{"type":470,"tag":471,"props":572,"children":573},{},[574],{"type":470,"tag":495,"props":575,"children":578},{"alt":576,"src":577},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":470,"tag":501,"props":580,"children":582},{"className":503,"code":581,"language":475,"meta":463,"style":463},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[583],{"type":470,"tag":507,"props":584,"children":585},{"__ignoreMap":463},[586,594,602,609,617,625,633],{"type":470,"tag":511,"props":587,"children":588},{"class":513,"line":514},[589],{"type":470,"tag":511,"props":590,"children":591},{},[592],{"type":475,"value":593},"输入：root = [4,9,0,5,1]\n",{"type":470,"tag":511,"props":595,"children":596},{"class":513,"line":523},[597],{"type":470,"tag":511,"props":598,"children":599},{},[600],{"type":475,"value":601},"输出：1026\n",{"type":470,"tag":511,"props":603,"children":604},{"class":513,"line":532},[605],{"type":470,"tag":511,"props":606,"children":607},{},[608],{"type":475,"value":538},{"type":470,"tag":511,"props":610,"children":611},{"class":513,"line":541},[612],{"type":470,"tag":511,"props":613,"children":614},{},[615],{"type":475,"value":616},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":470,"tag":511,"props":618,"children":619},{"class":513,"line":550},[620],{"type":470,"tag":511,"props":621,"children":622},{},[623],{"type":475,"value":624},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":470,"tag":511,"props":626,"children":627},{"class":513,"line":559},[628],{"type":470,"tag":511,"props":629,"children":630},{},[631],{"type":475,"value":632},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":470,"tag":511,"props":634,"children":636},{"class":513,"line":635},7,[637],{"type":470,"tag":511,"props":638,"children":639},{},[640],{"type":475,"value":641},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":470,"tag":471,"props":643,"children":644},{},[645],{"type":475,"value":646},"提示：",{"type":470,"tag":648,"props":649,"children":650},"ul",{},[651,657,662],{"type":470,"tag":652,"props":653,"children":654},"li",{},[655],{"type":475,"value":656},"树中节点的数目在范围 [1, 1000] 内",{"type":470,"tag":652,"props":658,"children":659},{},[660],{"type":475,"value":661},"0 \u003C= Node.val \u003C= 9",{"type":470,"tag":652,"props":663,"children":664},{},[665],{"type":475,"value":666},"树的深度不超过 10",{"type":470,"tag":668,"props":669,"children":671},"h2",{"id":670},"解题思路",[672],{"type":475,"value":670},{"type":470,"tag":668,"props":674,"children":676},{"id":675},"实现",[677],{"type":475,"value":675},{"type":470,"tag":679,"props":680,"children":682},"h3",{"id":681},"深度优先搜素-dfs",[683],{"type":475,"value":684},"深度优先搜素 - dfs",{"type":470,"tag":501,"props":686,"children":690},{"className":687,"code":688,"language":689,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[691],{"type":470,"tag":507,"props":692,"children":693},{"__ignoreMap":463},[694,703,711,719,771,837,890,942,951,961,969,996,1014,1022,1058,1109,1152,1206,1279,1362,1375,1412],{"type":470,"tag":511,"props":695,"children":696},{"class":513,"line":514},[697],{"type":470,"tag":511,"props":698,"children":700},{"style":699},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[701],{"type":475,"value":702},"/**\n",{"type":470,"tag":511,"props":704,"children":705},{"class":513,"line":523},[706],{"type":470,"tag":511,"props":707,"children":708},{"style":699},[709],{"type":475,"value":710}," * Definition for a binary tree node.\n",{"type":470,"tag":511,"props":712,"children":713},{"class":513,"line":532},[714],{"type":470,"tag":511,"props":715,"children":716},{"style":699},[717],{"type":475,"value":718}," */\n",{"type":470,"tag":511,"props":720,"children":721},{"class":513,"line":541},[722,728,734,740,746,752,757,761,766],{"type":470,"tag":511,"props":723,"children":725},{"style":724},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[726],{"type":475,"value":727},"function",{"type":470,"tag":511,"props":729,"children":731},{"style":730},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[732],{"type":475,"value":733}," TreeNode",{"type":470,"tag":511,"props":735,"children":737},{"style":736},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[738],{"type":475,"value":739},"(",{"type":470,"tag":511,"props":741,"children":743},{"style":742},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[744],{"type":475,"value":745},"val",{"type":470,"tag":511,"props":747,"children":749},{"style":748},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[750],{"type":475,"value":751},",",{"type":470,"tag":511,"props":753,"children":754},{"style":742},[755],{"type":475,"value":756}," left",{"type":470,"tag":511,"props":758,"children":759},{"style":748},[760],{"type":475,"value":751},{"type":470,"tag":511,"props":762,"children":763},{"style":742},[764],{"type":475,"value":765}," right",{"type":470,"tag":511,"props":767,"children":768},{"style":736},[769],{"type":475,"value":770},") {\n",{"type":470,"tag":511,"props":772,"children":773},{"class":513,"line":550},[774,780,786,791,797,802,807,813,818,823,828,832],{"type":470,"tag":511,"props":775,"children":777},{"style":776},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[778],{"type":475,"value":779},"  this",{"type":470,"tag":511,"props":781,"children":783},{"style":782},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[784],{"type":475,"value":785},".",{"type":470,"tag":511,"props":787,"children":789},{"style":788},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[790],{"type":475,"value":745},{"type":470,"tag":511,"props":792,"children":794},{"style":793},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[795],{"type":475,"value":796}," =",{"type":470,"tag":511,"props":798,"children":799},{"style":788},[800],{"type":475,"value":801}," val",{"type":470,"tag":511,"props":803,"children":804},{"style":793},[805],{"type":475,"value":806}," ===",{"type":470,"tag":511,"props":808,"children":810},{"style":809},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[811],{"type":475,"value":812}," undefined",{"type":470,"tag":511,"props":814,"children":815},{"style":793},[816],{"type":475,"value":817}," ?",{"type":470,"tag":511,"props":819,"children":820},{"style":809},[821],{"type":475,"value":822}," 0",{"type":470,"tag":511,"props":824,"children":825},{"style":793},[826],{"type":475,"value":827}," :",{"type":470,"tag":511,"props":829,"children":830},{"style":788},[831],{"type":475,"value":801},{"type":470,"tag":511,"props":833,"children":834},{"style":748},[835],{"type":475,"value":836},";\n",{"type":470,"tag":511,"props":838,"children":839},{"class":513,"line":559},[840,844,848,853,857,861,865,869,873,878,882,886],{"type":470,"tag":511,"props":841,"children":842},{"style":776},[843],{"type":475,"value":779},{"type":470,"tag":511,"props":845,"children":846},{"style":782},[847],{"type":475,"value":785},{"type":470,"tag":511,"props":849,"children":850},{"style":788},[851],{"type":475,"value":852},"left",{"type":470,"tag":511,"props":854,"children":855},{"style":793},[856],{"type":475,"value":796},{"type":470,"tag":511,"props":858,"children":859},{"style":788},[860],{"type":475,"value":756},{"type":470,"tag":511,"props":862,"children":863},{"style":793},[864],{"type":475,"value":806},{"type":470,"tag":511,"props":866,"children":867},{"style":809},[868],{"type":475,"value":812},{"type":470,"tag":511,"props":870,"children":871},{"style":793},[872],{"type":475,"value":817},{"type":470,"tag":511,"props":874,"children":875},{"style":809},[876],{"type":475,"value":877}," null",{"type":470,"tag":511,"props":879,"children":880},{"style":793},[881],{"type":475,"value":827},{"type":470,"tag":511,"props":883,"children":884},{"style":788},[885],{"type":475,"value":756},{"type":470,"tag":511,"props":887,"children":888},{"style":748},[889],{"type":475,"value":836},{"type":470,"tag":511,"props":891,"children":892},{"class":513,"line":635},[893,897,901,906,910,914,918,922,926,930,934,938],{"type":470,"tag":511,"props":894,"children":895},{"style":776},[896],{"type":475,"value":779},{"type":470,"tag":511,"props":898,"children":899},{"style":782},[900],{"type":475,"value":785},{"type":470,"tag":511,"props":902,"children":903},{"style":788},[904],{"type":475,"value":905},"right",{"type":470,"tag":511,"props":907,"children":908},{"style":793},[909],{"type":475,"value":796},{"type":470,"tag":511,"props":911,"children":912},{"style":788},[913],{"type":475,"value":765},{"type":470,"tag":511,"props":915,"children":916},{"style":793},[917],{"type":475,"value":806},{"type":470,"tag":511,"props":919,"children":920},{"style":809},[921],{"type":475,"value":812},{"type":470,"tag":511,"props":923,"children":924},{"style":793},[925],{"type":475,"value":817},{"type":470,"tag":511,"props":927,"children":928},{"style":809},[929],{"type":475,"value":877},{"type":470,"tag":511,"props":931,"children":932},{"style":793},[933],{"type":475,"value":827},{"type":470,"tag":511,"props":935,"children":936},{"style":788},[937],{"type":475,"value":765},{"type":470,"tag":511,"props":939,"children":940},{"style":748},[941],{"type":475,"value":836},{"type":470,"tag":511,"props":943,"children":945},{"class":513,"line":944},8,[946],{"type":470,"tag":511,"props":947,"children":948},{"style":736},[949],{"type":475,"value":950},"}\n",{"type":470,"tag":511,"props":952,"children":954},{"class":513,"line":953},9,[955],{"type":470,"tag":511,"props":956,"children":958},{"emptyLinePlaceholder":957},true,[959],{"type":475,"value":960},"\n",{"type":470,"tag":511,"props":962,"children":964},{"class":513,"line":963},10,[965],{"type":470,"tag":511,"props":966,"children":967},{"style":699},[968],{"type":475,"value":702},{"type":470,"tag":511,"props":970,"children":972},{"class":513,"line":971},11,[973,978,984,990],{"type":470,"tag":511,"props":974,"children":975},{"style":699},[976],{"type":475,"value":977}," * ",{"type":470,"tag":511,"props":979,"children":981},{"style":980},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[982],{"type":475,"value":983},"@param",{"type":470,"tag":511,"props":985,"children":987},{"style":986},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[988],{"type":475,"value":989}," {TreeNode}",{"type":470,"tag":511,"props":991,"children":993},{"style":992},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[994],{"type":475,"value":995}," root\n",{"type":470,"tag":511,"props":997,"children":999},{"class":513,"line":998},12,[1000,1004,1009],{"type":470,"tag":511,"props":1001,"children":1002},{"style":699},[1003],{"type":475,"value":977},{"type":470,"tag":511,"props":1005,"children":1006},{"style":980},[1007],{"type":475,"value":1008},"@return",{"type":470,"tag":511,"props":1010,"children":1011},{"style":986},[1012],{"type":475,"value":1013}," {number}\n",{"type":470,"tag":511,"props":1015,"children":1017},{"class":513,"line":1016},13,[1018],{"type":470,"tag":511,"props":1019,"children":1020},{"style":699},[1021],{"type":475,"value":718},{"type":470,"tag":511,"props":1023,"children":1025},{"class":513,"line":1024},14,[1026,1031,1036,1040,1045,1050,1054],{"type":470,"tag":511,"props":1027,"children":1028},{"style":724},[1029],{"type":475,"value":1030},"var",{"type":470,"tag":511,"props":1032,"children":1033},{"style":730},[1034],{"type":475,"value":1035}," sumNumbers",{"type":470,"tag":511,"props":1037,"children":1038},{"style":793},[1039],{"type":475,"value":796},{"type":470,"tag":511,"props":1041,"children":1042},{"style":724},[1043],{"type":475,"value":1044}," function",{"type":470,"tag":511,"props":1046,"children":1047},{"style":736},[1048],{"type":475,"value":1049}," (",{"type":470,"tag":511,"props":1051,"children":1052},{"style":742},[1053],{"type":475,"value":467},{"type":470,"tag":511,"props":1055,"children":1056},{"style":736},[1057],{"type":475,"value":770},{"type":470,"tag":511,"props":1059,"children":1061},{"class":513,"line":1060},15,[1062,1067,1072,1076,1080,1085,1089,1094,1099,1104],{"type":470,"tag":511,"props":1063,"children":1064},{"style":724},[1065],{"type":475,"value":1066},"  const",{"type":470,"tag":511,"props":1068,"children":1069},{"style":730},[1070],{"type":475,"value":1071}," dfs",{"type":470,"tag":511,"props":1073,"children":1074},{"style":793},[1075],{"type":475,"value":796},{"type":470,"tag":511,"props":1077,"children":1078},{"style":736},[1079],{"type":475,"value":1049},{"type":470,"tag":511,"props":1081,"children":1082},{"style":742},[1083],{"type":475,"value":1084},"node",{"type":470,"tag":511,"props":1086,"children":1087},{"style":748},[1088],{"type":475,"value":751},{"type":470,"tag":511,"props":1090,"children":1091},{"style":742},[1092],{"type":475,"value":1093}," prev",{"type":470,"tag":511,"props":1095,"children":1096},{"style":736},[1097],{"type":475,"value":1098},") ",{"type":470,"tag":511,"props":1100,"children":1101},{"style":724},[1102],{"type":475,"value":1103},"=>",{"type":470,"tag":511,"props":1105,"children":1106},{"style":736},[1107],{"type":475,"value":1108}," {\n",{"type":470,"tag":511,"props":1110,"children":1112},{"class":513,"line":1111},16,[1113,1119,1123,1127,1131,1135,1139,1144,1148],{"type":470,"tag":511,"props":1114,"children":1116},{"style":1115},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1117],{"type":475,"value":1118},"    if",{"type":470,"tag":511,"props":1120,"children":1121},{"style":736},[1122],{"type":475,"value":1049},{"type":470,"tag":511,"props":1124,"children":1125},{"style":788},[1126],{"type":475,"value":1084},{"type":470,"tag":511,"props":1128,"children":1129},{"style":793},[1130],{"type":475,"value":806},{"type":470,"tag":511,"props":1132,"children":1133},{"style":809},[1134],{"type":475,"value":877},{"type":470,"tag":511,"props":1136,"children":1137},{"style":736},[1138],{"type":475,"value":1098},{"type":470,"tag":511,"props":1140,"children":1141},{"style":1115},[1142],{"type":475,"value":1143},"return",{"type":470,"tag":511,"props":1145,"children":1146},{"style":809},[1147],{"type":475,"value":822},{"type":470,"tag":511,"props":1149,"children":1150},{"style":748},[1151],{"type":475,"value":836},{"type":470,"tag":511,"props":1153,"children":1155},{"class":513,"line":1154},17,[1156,1161,1166,1170,1174,1179,1184,1189,1194,1198,1202],{"type":470,"tag":511,"props":1157,"children":1158},{"style":724},[1159],{"type":475,"value":1160},"    let",{"type":470,"tag":511,"props":1162,"children":1163},{"style":788},[1164],{"type":475,"value":1165}," sum",{"type":470,"tag":511,"props":1167,"children":1168},{"style":793},[1169],{"type":475,"value":796},{"type":470,"tag":511,"props":1171,"children":1172},{"style":788},[1173],{"type":475,"value":1093},{"type":470,"tag":511,"props":1175,"children":1176},{"style":793},[1177],{"type":475,"value":1178}," *",{"type":470,"tag":511,"props":1180,"children":1181},{"style":809},[1182],{"type":475,"value":1183}," 10",{"type":470,"tag":511,"props":1185,"children":1186},{"style":793},[1187],{"type":475,"value":1188}," +",{"type":470,"tag":511,"props":1190,"children":1191},{"style":788},[1192],{"type":475,"value":1193}," node",{"type":470,"tag":511,"props":1195,"children":1196},{"style":782},[1197],{"type":475,"value":785},{"type":470,"tag":511,"props":1199,"children":1200},{"style":788},[1201],{"type":475,"value":745},{"type":470,"tag":511,"props":1203,"children":1204},{"style":748},[1205],{"type":475,"value":836},{"type":470,"tag":511,"props":1207,"children":1209},{"class":513,"line":1208},18,[1210,1214,1218,1222,1226,1230,1234,1238,1243,1247,1251,1255,1259,1263,1267,1271,1275],{"type":470,"tag":511,"props":1211,"children":1212},{"style":1115},[1213],{"type":475,"value":1118},{"type":470,"tag":511,"props":1215,"children":1216},{"style":736},[1217],{"type":475,"value":1049},{"type":470,"tag":511,"props":1219,"children":1220},{"style":788},[1221],{"type":475,"value":1084},{"type":470,"tag":511,"props":1223,"children":1224},{"style":782},[1225],{"type":475,"value":785},{"type":470,"tag":511,"props":1227,"children":1228},{"style":788},[1229],{"type":475,"value":852},{"type":470,"tag":511,"props":1231,"children":1232},{"style":793},[1233],{"type":475,"value":806},{"type":470,"tag":511,"props":1235,"children":1236},{"style":809},[1237],{"type":475,"value":877},{"type":470,"tag":511,"props":1239,"children":1240},{"style":793},[1241],{"type":475,"value":1242}," &&",{"type":470,"tag":511,"props":1244,"children":1245},{"style":788},[1246],{"type":475,"value":1193},{"type":470,"tag":511,"props":1248,"children":1249},{"style":782},[1250],{"type":475,"value":785},{"type":470,"tag":511,"props":1252,"children":1253},{"style":788},[1254],{"type":475,"value":905},{"type":470,"tag":511,"props":1256,"children":1257},{"style":793},[1258],{"type":475,"value":806},{"type":470,"tag":511,"props":1260,"children":1261},{"style":809},[1262],{"type":475,"value":877},{"type":470,"tag":511,"props":1264,"children":1265},{"style":736},[1266],{"type":475,"value":1098},{"type":470,"tag":511,"props":1268,"children":1269},{"style":1115},[1270],{"type":475,"value":1143},{"type":470,"tag":511,"props":1272,"children":1273},{"style":788},[1274],{"type":475,"value":1165},{"type":470,"tag":511,"props":1276,"children":1277},{"style":748},[1278],{"type":475,"value":836},{"type":470,"tag":511,"props":1280,"children":1282},{"class":513,"line":1281},19,[1283,1288,1292,1296,1300,1304,1308,1312,1316,1320,1325,1329,1333,1337,1341,1345,1349,1353,1358],{"type":470,"tag":511,"props":1284,"children":1285},{"style":1115},[1286],{"type":475,"value":1287},"    return",{"type":470,"tag":511,"props":1289,"children":1290},{"style":730},[1291],{"type":475,"value":1071},{"type":470,"tag":511,"props":1293,"children":1294},{"style":736},[1295],{"type":475,"value":739},{"type":470,"tag":511,"props":1297,"children":1298},{"style":788},[1299],{"type":475,"value":1084},{"type":470,"tag":511,"props":1301,"children":1302},{"style":782},[1303],{"type":475,"value":785},{"type":470,"tag":511,"props":1305,"children":1306},{"style":788},[1307],{"type":475,"value":852},{"type":470,"tag":511,"props":1309,"children":1310},{"style":748},[1311],{"type":475,"value":751},{"type":470,"tag":511,"props":1313,"children":1314},{"style":788},[1315],{"type":475,"value":1165},{"type":470,"tag":511,"props":1317,"children":1318},{"style":736},[1319],{"type":475,"value":1098},{"type":470,"tag":511,"props":1321,"children":1322},{"style":793},[1323],{"type":475,"value":1324},"+",{"type":470,"tag":511,"props":1326,"children":1327},{"style":730},[1328],{"type":475,"value":1071},{"type":470,"tag":511,"props":1330,"children":1331},{"style":736},[1332],{"type":475,"value":739},{"type":470,"tag":511,"props":1334,"children":1335},{"style":788},[1336],{"type":475,"value":1084},{"type":470,"tag":511,"props":1338,"children":1339},{"style":782},[1340],{"type":475,"value":785},{"type":470,"tag":511,"props":1342,"children":1343},{"style":788},[1344],{"type":475,"value":905},{"type":470,"tag":511,"props":1346,"children":1347},{"style":748},[1348],{"type":475,"value":751},{"type":470,"tag":511,"props":1350,"children":1351},{"style":788},[1352],{"type":475,"value":1165},{"type":470,"tag":511,"props":1354,"children":1355},{"style":736},[1356],{"type":475,"value":1357},")",{"type":470,"tag":511,"props":1359,"children":1360},{"style":748},[1361],{"type":475,"value":836},{"type":470,"tag":511,"props":1363,"children":1365},{"class":513,"line":1364},20,[1366,1371],{"type":470,"tag":511,"props":1367,"children":1368},{"style":736},[1369],{"type":475,"value":1370},"  }",{"type":470,"tag":511,"props":1372,"children":1373},{"style":748},[1374],{"type":475,"value":836},{"type":470,"tag":511,"props":1376,"children":1378},{"class":513,"line":1377},21,[1379,1384,1388,1392,1396,1400,1404,1408],{"type":470,"tag":511,"props":1380,"children":1381},{"style":1115},[1382],{"type":475,"value":1383},"  return",{"type":470,"tag":511,"props":1385,"children":1386},{"style":730},[1387],{"type":475,"value":1071},{"type":470,"tag":511,"props":1389,"children":1390},{"style":736},[1391],{"type":475,"value":739},{"type":470,"tag":511,"props":1393,"children":1394},{"style":788},[1395],{"type":475,"value":467},{"type":470,"tag":511,"props":1397,"children":1398},{"style":748},[1399],{"type":475,"value":751},{"type":470,"tag":511,"props":1401,"children":1402},{"style":809},[1403],{"type":475,"value":822},{"type":470,"tag":511,"props":1405,"children":1406},{"style":736},[1407],{"type":475,"value":1357},{"type":470,"tag":511,"props":1409,"children":1410},{"style":748},[1411],{"type":475,"value":836},{"type":470,"tag":511,"props":1413,"children":1415},{"class":513,"line":1414},22,[1416,1421],{"type":470,"tag":511,"props":1417,"children":1418},{"style":736},[1419],{"type":475,"value":1420},"}",{"type":470,"tag":511,"props":1422,"children":1423},{"style":748},[1424],{"type":475,"value":836},{"type":470,"tag":1426,"props":1427,"children":1428},"style",{},[1429],{"type":475,"value":1430},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":550,"depth":550,"links":1432},[1433,1434],{"id":670,"depth":523,"text":670},{"id":675,"depth":523,"text":675,"children":1435},[1436],{"id":681,"depth":532,"text":684},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1443,1445],{"_path":159,"title":158,"description":1444},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":165,"title":164,"description":1446},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1713626053550]