[{"data":1,"prerenderedAt":1450},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":463,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1445},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":165,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":164,"description":467,"url":468,"body":469,"_type":1440,"_id":1441,"_source":1442,"_file":1443,"_extension":1444},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":470,"children":471,"toc":1434},"root",[472,479,484,489,494,503,569,574,582,645,650,670,676,681,688,1428],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":473,"tag":474,"props":485,"children":486},{},[487],{"type":478,"value":488},"叶节点 是指没有子节点的节点。",{"type":473,"tag":474,"props":490,"children":491},{},[492],{"type":478,"value":493},"示例 1：",{"type":473,"tag":474,"props":495,"children":496},{},[497],{"type":473,"tag":498,"props":499,"children":502},"img",{"alt":500,"src":501},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":473,"tag":504,"props":505,"children":508},"pre",{"className":506,"code":507,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[509],{"type":473,"tag":510,"props":511,"children":512},"code",{"__ignoreMap":466},[513,524,533,542,551,560],{"type":473,"tag":514,"props":515,"children":518},"span",{"class":516,"line":517},"line",1,[519],{"type":473,"tag":514,"props":520,"children":521},{},[522],{"type":478,"value":523},"输入：root = [1,2,3]\n",{"type":473,"tag":514,"props":525,"children":527},{"class":516,"line":526},2,[528],{"type":473,"tag":514,"props":529,"children":530},{},[531],{"type":478,"value":532},"输出：25\n",{"type":473,"tag":514,"props":534,"children":536},{"class":516,"line":535},3,[537],{"type":473,"tag":514,"props":538,"children":539},{},[540],{"type":478,"value":541},"解释：\n",{"type":473,"tag":514,"props":543,"children":545},{"class":516,"line":544},4,[546],{"type":473,"tag":514,"props":547,"children":548},{},[549],{"type":478,"value":550},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":473,"tag":514,"props":552,"children":554},{"class":516,"line":553},5,[555],{"type":473,"tag":514,"props":556,"children":557},{},[558],{"type":478,"value":559},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":473,"tag":514,"props":561,"children":563},{"class":516,"line":562},6,[564],{"type":473,"tag":514,"props":565,"children":566},{},[567],{"type":478,"value":568},"因此，数字总和 = 12 + 13 = 25\n",{"type":473,"tag":474,"props":570,"children":571},{},[572],{"type":478,"value":573},"示例 2：",{"type":473,"tag":474,"props":575,"children":576},{},[577],{"type":473,"tag":498,"props":578,"children":581},{"alt":579,"src":580},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":473,"tag":504,"props":583,"children":585},{"className":506,"code":584,"language":478,"meta":466,"style":466},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[586],{"type":473,"tag":510,"props":587,"children":588},{"__ignoreMap":466},[589,597,605,612,620,628,636],{"type":473,"tag":514,"props":590,"children":591},{"class":516,"line":517},[592],{"type":473,"tag":514,"props":593,"children":594},{},[595],{"type":478,"value":596},"输入：root = [4,9,0,5,1]\n",{"type":473,"tag":514,"props":598,"children":599},{"class":516,"line":526},[600],{"type":473,"tag":514,"props":601,"children":602},{},[603],{"type":478,"value":604},"输出：1026\n",{"type":473,"tag":514,"props":606,"children":607},{"class":516,"line":535},[608],{"type":473,"tag":514,"props":609,"children":610},{},[611],{"type":478,"value":541},{"type":473,"tag":514,"props":613,"children":614},{"class":516,"line":544},[615],{"type":473,"tag":514,"props":616,"children":617},{},[618],{"type":478,"value":619},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":473,"tag":514,"props":621,"children":622},{"class":516,"line":553},[623],{"type":473,"tag":514,"props":624,"children":625},{},[626],{"type":478,"value":627},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":473,"tag":514,"props":629,"children":630},{"class":516,"line":562},[631],{"type":473,"tag":514,"props":632,"children":633},{},[634],{"type":478,"value":635},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":473,"tag":514,"props":637,"children":639},{"class":516,"line":638},7,[640],{"type":473,"tag":514,"props":641,"children":642},{},[643],{"type":478,"value":644},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":473,"tag":474,"props":646,"children":647},{},[648],{"type":478,"value":649},"提示：",{"type":473,"tag":651,"props":652,"children":653},"ul",{},[654,660,665],{"type":473,"tag":655,"props":656,"children":657},"li",{},[658],{"type":478,"value":659},"树中节点的数目在范围 [1, 1000] 内",{"type":473,"tag":655,"props":661,"children":662},{},[663],{"type":478,"value":664},"0 \u003C= Node.val \u003C= 9",{"type":473,"tag":655,"props":666,"children":667},{},[668],{"type":478,"value":669},"树的深度不超过 10",{"type":473,"tag":671,"props":672,"children":674},"h2",{"id":673},"解题思路",[675],{"type":478,"value":673},{"type":473,"tag":671,"props":677,"children":679},{"id":678},"实现",[680],{"type":478,"value":678},{"type":473,"tag":682,"props":683,"children":685},"h3",{"id":684},"深度优先搜素-dfs",[686],{"type":478,"value":687},"深度优先搜素 - dfs",{"type":473,"tag":504,"props":689,"children":693},{"className":690,"code":691,"language":692,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[694],{"type":473,"tag":510,"props":695,"children":696},{"__ignoreMap":466},[697,706,714,722,774,840,893,945,954,964,972,999,1017,1025,1061,1112,1155,1209,1282,1365,1378,1415],{"type":473,"tag":514,"props":698,"children":699},{"class":516,"line":517},[700],{"type":473,"tag":514,"props":701,"children":703},{"style":702},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[704],{"type":478,"value":705},"/**\n",{"type":473,"tag":514,"props":707,"children":708},{"class":516,"line":526},[709],{"type":473,"tag":514,"props":710,"children":711},{"style":702},[712],{"type":478,"value":713}," * Definition for a binary tree node.\n",{"type":473,"tag":514,"props":715,"children":716},{"class":516,"line":535},[717],{"type":473,"tag":514,"props":718,"children":719},{"style":702},[720],{"type":478,"value":721}," */\n",{"type":473,"tag":514,"props":723,"children":724},{"class":516,"line":544},[725,731,737,743,749,755,760,764,769],{"type":473,"tag":514,"props":726,"children":728},{"style":727},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[729],{"type":478,"value":730},"function",{"type":473,"tag":514,"props":732,"children":734},{"style":733},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[735],{"type":478,"value":736}," TreeNode",{"type":473,"tag":514,"props":738,"children":740},{"style":739},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[741],{"type":478,"value":742},"(",{"type":473,"tag":514,"props":744,"children":746},{"style":745},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[747],{"type":478,"value":748},"val",{"type":473,"tag":514,"props":750,"children":752},{"style":751},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[753],{"type":478,"value":754},",",{"type":473,"tag":514,"props":756,"children":757},{"style":745},[758],{"type":478,"value":759}," left",{"type":473,"tag":514,"props":761,"children":762},{"style":751},[763],{"type":478,"value":754},{"type":473,"tag":514,"props":765,"children":766},{"style":745},[767],{"type":478,"value":768}," right",{"type":473,"tag":514,"props":770,"children":771},{"style":739},[772],{"type":478,"value":773},") {\n",{"type":473,"tag":514,"props":775,"children":776},{"class":516,"line":553},[777,783,789,794,800,805,810,816,821,826,831,835],{"type":473,"tag":514,"props":778,"children":780},{"style":779},"--shiki-light:#000000;--shiki-default:#000000;--shiki-dark:#39BAE6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[781],{"type":478,"value":782},"  this",{"type":473,"tag":514,"props":784,"children":786},{"style":785},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[787],{"type":478,"value":788},".",{"type":473,"tag":514,"props":790,"children":792},{"style":791},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[793],{"type":478,"value":748},{"type":473,"tag":514,"props":795,"children":797},{"style":796},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[798],{"type":478,"value":799}," =",{"type":473,"tag":514,"props":801,"children":802},{"style":791},[803],{"type":478,"value":804}," val",{"type":473,"tag":514,"props":806,"children":807},{"style":796},[808],{"type":478,"value":809}," ===",{"type":473,"tag":514,"props":811,"children":813},{"style":812},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[814],{"type":478,"value":815}," undefined",{"type":473,"tag":514,"props":817,"children":818},{"style":796},[819],{"type":478,"value":820}," ?",{"type":473,"tag":514,"props":822,"children":823},{"style":812},[824],{"type":478,"value":825}," 0",{"type":473,"tag":514,"props":827,"children":828},{"style":796},[829],{"type":478,"value":830}," :",{"type":473,"tag":514,"props":832,"children":833},{"style":791},[834],{"type":478,"value":804},{"type":473,"tag":514,"props":836,"children":837},{"style":751},[838],{"type":478,"value":839},";\n",{"type":473,"tag":514,"props":841,"children":842},{"class":516,"line":562},[843,847,851,856,860,864,868,872,876,881,885,889],{"type":473,"tag":514,"props":844,"children":845},{"style":779},[846],{"type":478,"value":782},{"type":473,"tag":514,"props":848,"children":849},{"style":785},[850],{"type":478,"value":788},{"type":473,"tag":514,"props":852,"children":853},{"style":791},[854],{"type":478,"value":855},"left",{"type":473,"tag":514,"props":857,"children":858},{"style":796},[859],{"type":478,"value":799},{"type":473,"tag":514,"props":861,"children":862},{"style":791},[863],{"type":478,"value":759},{"type":473,"tag":514,"props":865,"children":866},{"style":796},[867],{"type":478,"value":809},{"type":473,"tag":514,"props":869,"children":870},{"style":812},[871],{"type":478,"value":815},{"type":473,"tag":514,"props":873,"children":874},{"style":796},[875],{"type":478,"value":820},{"type":473,"tag":514,"props":877,"children":878},{"style":812},[879],{"type":478,"value":880}," null",{"type":473,"tag":514,"props":882,"children":883},{"style":796},[884],{"type":478,"value":830},{"type":473,"tag":514,"props":886,"children":887},{"style":791},[888],{"type":478,"value":759},{"type":473,"tag":514,"props":890,"children":891},{"style":751},[892],{"type":478,"value":839},{"type":473,"tag":514,"props":894,"children":895},{"class":516,"line":638},[896,900,904,909,913,917,921,925,929,933,937,941],{"type":473,"tag":514,"props":897,"children":898},{"style":779},[899],{"type":478,"value":782},{"type":473,"tag":514,"props":901,"children":902},{"style":785},[903],{"type":478,"value":788},{"type":473,"tag":514,"props":905,"children":906},{"style":791},[907],{"type":478,"value":908},"right",{"type":473,"tag":514,"props":910,"children":911},{"style":796},[912],{"type":478,"value":799},{"type":473,"tag":514,"props":914,"children":915},{"style":791},[916],{"type":478,"value":768},{"type":473,"tag":514,"props":918,"children":919},{"style":796},[920],{"type":478,"value":809},{"type":473,"tag":514,"props":922,"children":923},{"style":812},[924],{"type":478,"value":815},{"type":473,"tag":514,"props":926,"children":927},{"style":796},[928],{"type":478,"value":820},{"type":473,"tag":514,"props":930,"children":931},{"style":812},[932],{"type":478,"value":880},{"type":473,"tag":514,"props":934,"children":935},{"style":796},[936],{"type":478,"value":830},{"type":473,"tag":514,"props":938,"children":939},{"style":791},[940],{"type":478,"value":768},{"type":473,"tag":514,"props":942,"children":943},{"style":751},[944],{"type":478,"value":839},{"type":473,"tag":514,"props":946,"children":948},{"class":516,"line":947},8,[949],{"type":473,"tag":514,"props":950,"children":951},{"style":739},[952],{"type":478,"value":953},"}\n",{"type":473,"tag":514,"props":955,"children":957},{"class":516,"line":956},9,[958],{"type":473,"tag":514,"props":959,"children":961},{"emptyLinePlaceholder":960},true,[962],{"type":478,"value":963},"\n",{"type":473,"tag":514,"props":965,"children":967},{"class":516,"line":966},10,[968],{"type":473,"tag":514,"props":969,"children":970},{"style":702},[971],{"type":478,"value":705},{"type":473,"tag":514,"props":973,"children":975},{"class":516,"line":974},11,[976,981,987,993],{"type":473,"tag":514,"props":977,"children":978},{"style":702},[979],{"type":478,"value":980}," * ",{"type":473,"tag":514,"props":982,"children":984},{"style":983},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[985],{"type":478,"value":986},"@param",{"type":473,"tag":514,"props":988,"children":990},{"style":989},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[991],{"type":478,"value":992}," {TreeNode}",{"type":473,"tag":514,"props":994,"children":996},{"style":995},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[997],{"type":478,"value":998}," root\n",{"type":473,"tag":514,"props":1000,"children":1002},{"class":516,"line":1001},12,[1003,1007,1012],{"type":473,"tag":514,"props":1004,"children":1005},{"style":702},[1006],{"type":478,"value":980},{"type":473,"tag":514,"props":1008,"children":1009},{"style":983},[1010],{"type":478,"value":1011},"@return",{"type":473,"tag":514,"props":1013,"children":1014},{"style":989},[1015],{"type":478,"value":1016}," {number}\n",{"type":473,"tag":514,"props":1018,"children":1020},{"class":516,"line":1019},13,[1021],{"type":473,"tag":514,"props":1022,"children":1023},{"style":702},[1024],{"type":478,"value":721},{"type":473,"tag":514,"props":1026,"children":1028},{"class":516,"line":1027},14,[1029,1034,1039,1043,1048,1053,1057],{"type":473,"tag":514,"props":1030,"children":1031},{"style":727},[1032],{"type":478,"value":1033},"var",{"type":473,"tag":514,"props":1035,"children":1036},{"style":733},[1037],{"type":478,"value":1038}," sumNumbers",{"type":473,"tag":514,"props":1040,"children":1041},{"style":796},[1042],{"type":478,"value":799},{"type":473,"tag":514,"props":1044,"children":1045},{"style":727},[1046],{"type":478,"value":1047}," function",{"type":473,"tag":514,"props":1049,"children":1050},{"style":739},[1051],{"type":478,"value":1052}," (",{"type":473,"tag":514,"props":1054,"children":1055},{"style":745},[1056],{"type":478,"value":470},{"type":473,"tag":514,"props":1058,"children":1059},{"style":739},[1060],{"type":478,"value":773},{"type":473,"tag":514,"props":1062,"children":1064},{"class":516,"line":1063},15,[1065,1070,1075,1079,1083,1088,1092,1097,1102,1107],{"type":473,"tag":514,"props":1066,"children":1067},{"style":727},[1068],{"type":478,"value":1069},"  const",{"type":473,"tag":514,"props":1071,"children":1072},{"style":733},[1073],{"type":478,"value":1074}," dfs",{"type":473,"tag":514,"props":1076,"children":1077},{"style":796},[1078],{"type":478,"value":799},{"type":473,"tag":514,"props":1080,"children":1081},{"style":739},[1082],{"type":478,"value":1052},{"type":473,"tag":514,"props":1084,"children":1085},{"style":745},[1086],{"type":478,"value":1087},"node",{"type":473,"tag":514,"props":1089,"children":1090},{"style":751},[1091],{"type":478,"value":754},{"type":473,"tag":514,"props":1093,"children":1094},{"style":745},[1095],{"type":478,"value":1096}," prev",{"type":473,"tag":514,"props":1098,"children":1099},{"style":739},[1100],{"type":478,"value":1101},") ",{"type":473,"tag":514,"props":1103,"children":1104},{"style":727},[1105],{"type":478,"value":1106},"=>",{"type":473,"tag":514,"props":1108,"children":1109},{"style":739},[1110],{"type":478,"value":1111}," {\n",{"type":473,"tag":514,"props":1113,"children":1115},{"class":516,"line":1114},16,[1116,1122,1126,1130,1134,1138,1142,1147,1151],{"type":473,"tag":514,"props":1117,"children":1119},{"style":1118},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1120],{"type":478,"value":1121},"    if",{"type":473,"tag":514,"props":1123,"children":1124},{"style":739},[1125],{"type":478,"value":1052},{"type":473,"tag":514,"props":1127,"children":1128},{"style":791},[1129],{"type":478,"value":1087},{"type":473,"tag":514,"props":1131,"children":1132},{"style":796},[1133],{"type":478,"value":809},{"type":473,"tag":514,"props":1135,"children":1136},{"style":812},[1137],{"type":478,"value":880},{"type":473,"tag":514,"props":1139,"children":1140},{"style":739},[1141],{"type":478,"value":1101},{"type":473,"tag":514,"props":1143,"children":1144},{"style":1118},[1145],{"type":478,"value":1146},"return",{"type":473,"tag":514,"props":1148,"children":1149},{"style":812},[1150],{"type":478,"value":825},{"type":473,"tag":514,"props":1152,"children":1153},{"style":751},[1154],{"type":478,"value":839},{"type":473,"tag":514,"props":1156,"children":1158},{"class":516,"line":1157},17,[1159,1164,1169,1173,1177,1182,1187,1192,1197,1201,1205],{"type":473,"tag":514,"props":1160,"children":1161},{"style":727},[1162],{"type":478,"value":1163},"    let",{"type":473,"tag":514,"props":1165,"children":1166},{"style":791},[1167],{"type":478,"value":1168}," sum",{"type":473,"tag":514,"props":1170,"children":1171},{"style":796},[1172],{"type":478,"value":799},{"type":473,"tag":514,"props":1174,"children":1175},{"style":791},[1176],{"type":478,"value":1096},{"type":473,"tag":514,"props":1178,"children":1179},{"style":796},[1180],{"type":478,"value":1181}," *",{"type":473,"tag":514,"props":1183,"children":1184},{"style":812},[1185],{"type":478,"value":1186}," 10",{"type":473,"tag":514,"props":1188,"children":1189},{"style":796},[1190],{"type":478,"value":1191}," +",{"type":473,"tag":514,"props":1193,"children":1194},{"style":791},[1195],{"type":478,"value":1196}," node",{"type":473,"tag":514,"props":1198,"children":1199},{"style":785},[1200],{"type":478,"value":788},{"type":473,"tag":514,"props":1202,"children":1203},{"style":791},[1204],{"type":478,"value":748},{"type":473,"tag":514,"props":1206,"children":1207},{"style":751},[1208],{"type":478,"value":839},{"type":473,"tag":514,"props":1210,"children":1212},{"class":516,"line":1211},18,[1213,1217,1221,1225,1229,1233,1237,1241,1246,1250,1254,1258,1262,1266,1270,1274,1278],{"type":473,"tag":514,"props":1214,"children":1215},{"style":1118},[1216],{"type":478,"value":1121},{"type":473,"tag":514,"props":1218,"children":1219},{"style":739},[1220],{"type":478,"value":1052},{"type":473,"tag":514,"props":1222,"children":1223},{"style":791},[1224],{"type":478,"value":1087},{"type":473,"tag":514,"props":1226,"children":1227},{"style":785},[1228],{"type":478,"value":788},{"type":473,"tag":514,"props":1230,"children":1231},{"style":791},[1232],{"type":478,"value":855},{"type":473,"tag":514,"props":1234,"children":1235},{"style":796},[1236],{"type":478,"value":809},{"type":473,"tag":514,"props":1238,"children":1239},{"style":812},[1240],{"type":478,"value":880},{"type":473,"tag":514,"props":1242,"children":1243},{"style":796},[1244],{"type":478,"value":1245}," &&",{"type":473,"tag":514,"props":1247,"children":1248},{"style":791},[1249],{"type":478,"value":1196},{"type":473,"tag":514,"props":1251,"children":1252},{"style":785},[1253],{"type":478,"value":788},{"type":473,"tag":514,"props":1255,"children":1256},{"style":791},[1257],{"type":478,"value":908},{"type":473,"tag":514,"props":1259,"children":1260},{"style":796},[1261],{"type":478,"value":809},{"type":473,"tag":514,"props":1263,"children":1264},{"style":812},[1265],{"type":478,"value":880},{"type":473,"tag":514,"props":1267,"children":1268},{"style":739},[1269],{"type":478,"value":1101},{"type":473,"tag":514,"props":1271,"children":1272},{"style":1118},[1273],{"type":478,"value":1146},{"type":473,"tag":514,"props":1275,"children":1276},{"style":791},[1277],{"type":478,"value":1168},{"type":473,"tag":514,"props":1279,"children":1280},{"style":751},[1281],{"type":478,"value":839},{"type":473,"tag":514,"props":1283,"children":1285},{"class":516,"line":1284},19,[1286,1291,1295,1299,1303,1307,1311,1315,1319,1323,1328,1332,1336,1340,1344,1348,1352,1356,1361],{"type":473,"tag":514,"props":1287,"children":1288},{"style":1118},[1289],{"type":478,"value":1290},"    return",{"type":473,"tag":514,"props":1292,"children":1293},{"style":733},[1294],{"type":478,"value":1074},{"type":473,"tag":514,"props":1296,"children":1297},{"style":739},[1298],{"type":478,"value":742},{"type":473,"tag":514,"props":1300,"children":1301},{"style":791},[1302],{"type":478,"value":1087},{"type":473,"tag":514,"props":1304,"children":1305},{"style":785},[1306],{"type":478,"value":788},{"type":473,"tag":514,"props":1308,"children":1309},{"style":791},[1310],{"type":478,"value":855},{"type":473,"tag":514,"props":1312,"children":1313},{"style":751},[1314],{"type":478,"value":754},{"type":473,"tag":514,"props":1316,"children":1317},{"style":791},[1318],{"type":478,"value":1168},{"type":473,"tag":514,"props":1320,"children":1321},{"style":739},[1322],{"type":478,"value":1101},{"type":473,"tag":514,"props":1324,"children":1325},{"style":796},[1326],{"type":478,"value":1327},"+",{"type":473,"tag":514,"props":1329,"children":1330},{"style":733},[1331],{"type":478,"value":1074},{"type":473,"tag":514,"props":1333,"children":1334},{"style":739},[1335],{"type":478,"value":742},{"type":473,"tag":514,"props":1337,"children":1338},{"style":791},[1339],{"type":478,"value":1087},{"type":473,"tag":514,"props":1341,"children":1342},{"style":785},[1343],{"type":478,"value":788},{"type":473,"tag":514,"props":1345,"children":1346},{"style":791},[1347],{"type":478,"value":908},{"type":473,"tag":514,"props":1349,"children":1350},{"style":751},[1351],{"type":478,"value":754},{"type":473,"tag":514,"props":1353,"children":1354},{"style":791},[1355],{"type":478,"value":1168},{"type":473,"tag":514,"props":1357,"children":1358},{"style":739},[1359],{"type":478,"value":1360},")",{"type":473,"tag":514,"props":1362,"children":1363},{"style":751},[1364],{"type":478,"value":839},{"type":473,"tag":514,"props":1366,"children":1368},{"class":516,"line":1367},20,[1369,1374],{"type":473,"tag":514,"props":1370,"children":1371},{"style":739},[1372],{"type":478,"value":1373},"  }",{"type":473,"tag":514,"props":1375,"children":1376},{"style":751},[1377],{"type":478,"value":839},{"type":473,"tag":514,"props":1379,"children":1381},{"class":516,"line":1380},21,[1382,1387,1391,1395,1399,1403,1407,1411],{"type":473,"tag":514,"props":1383,"children":1384},{"style":1118},[1385],{"type":478,"value":1386},"  return",{"type":473,"tag":514,"props":1388,"children":1389},{"style":733},[1390],{"type":478,"value":1074},{"type":473,"tag":514,"props":1392,"children":1393},{"style":739},[1394],{"type":478,"value":742},{"type":473,"tag":514,"props":1396,"children":1397},{"style":791},[1398],{"type":478,"value":470},{"type":473,"tag":514,"props":1400,"children":1401},{"style":751},[1402],{"type":478,"value":754},{"type":473,"tag":514,"props":1404,"children":1405},{"style":812},[1406],{"type":478,"value":825},{"type":473,"tag":514,"props":1408,"children":1409},{"style":739},[1410],{"type":478,"value":1360},{"type":473,"tag":514,"props":1412,"children":1413},{"style":751},[1414],{"type":478,"value":839},{"type":473,"tag":514,"props":1416,"children":1418},{"class":516,"line":1417},22,[1419,1424],{"type":473,"tag":514,"props":1420,"children":1421},{"style":739},[1422],{"type":478,"value":1423},"}",{"type":473,"tag":514,"props":1425,"children":1426},{"style":751},[1427],{"type":478,"value":839},{"type":473,"tag":1429,"props":1430,"children":1431},"style",{},[1432],{"type":478,"value":1433},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":553,"depth":553,"links":1435},[1436,1437],{"id":673,"depth":526,"text":673},{"id":678,"depth":526,"text":678,"children":1438},[1439],{"id":684,"depth":535,"text":687},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1446,1448],{"_path":162,"title":161,"description":1447},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":168,"title":167,"description":1449},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1713695847037]