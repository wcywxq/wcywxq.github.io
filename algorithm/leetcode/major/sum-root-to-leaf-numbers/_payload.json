[{"data":1,"prerenderedAt":1541},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":543,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1536},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":168,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":167,"description":547,"url":548,"body":549,"_type":1531,"_id":1532,"_source":1533,"_file":1534,"_extension":1535},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":550,"children":551,"toc":1525},"root",[552,559,564,569,574,583,649,654,662,725,730,750,756,761,768,1519],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"叶节点 是指没有子节点的节点。",{"type":553,"tag":554,"props":570,"children":571},{},[572],{"type":558,"value":573},"示例 1：",{"type":553,"tag":554,"props":575,"children":576},{},[577],{"type":553,"tag":578,"props":579,"children":582},"img",{"alt":580,"src":581},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":553,"tag":584,"props":585,"children":588},"pre",{"className":586,"code":587,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[589],{"type":553,"tag":590,"props":591,"children":592},"code",{"__ignoreMap":546},[593,604,613,622,631,640],{"type":553,"tag":594,"props":595,"children":598},"span",{"class":596,"line":597},"line",1,[599],{"type":553,"tag":594,"props":600,"children":601},{},[602],{"type":558,"value":603},"输入：root = [1,2,3]\n",{"type":553,"tag":594,"props":605,"children":607},{"class":596,"line":606},2,[608],{"type":553,"tag":594,"props":609,"children":610},{},[611],{"type":558,"value":612},"输出：25\n",{"type":553,"tag":594,"props":614,"children":616},{"class":596,"line":615},3,[617],{"type":553,"tag":594,"props":618,"children":619},{},[620],{"type":558,"value":621},"解释：\n",{"type":553,"tag":594,"props":623,"children":625},{"class":596,"line":624},4,[626],{"type":553,"tag":594,"props":627,"children":628},{},[629],{"type":558,"value":630},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":553,"tag":594,"props":632,"children":634},{"class":596,"line":633},5,[635],{"type":553,"tag":594,"props":636,"children":637},{},[638],{"type":558,"value":639},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":553,"tag":594,"props":641,"children":643},{"class":596,"line":642},6,[644],{"type":553,"tag":594,"props":645,"children":646},{},[647],{"type":558,"value":648},"因此，数字总和 = 12 + 13 = 25\n",{"type":553,"tag":554,"props":650,"children":651},{},[652],{"type":558,"value":653},"示例 2：",{"type":553,"tag":554,"props":655,"children":656},{},[657],{"type":553,"tag":578,"props":658,"children":661},{"alt":659,"src":660},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":553,"tag":584,"props":663,"children":665},{"className":586,"code":664,"language":558,"meta":546,"style":546},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[666],{"type":553,"tag":590,"props":667,"children":668},{"__ignoreMap":546},[669,677,685,692,700,708,716],{"type":553,"tag":594,"props":670,"children":671},{"class":596,"line":597},[672],{"type":553,"tag":594,"props":673,"children":674},{},[675],{"type":558,"value":676},"输入：root = [4,9,0,5,1]\n",{"type":553,"tag":594,"props":678,"children":679},{"class":596,"line":606},[680],{"type":553,"tag":594,"props":681,"children":682},{},[683],{"type":558,"value":684},"输出：1026\n",{"type":553,"tag":594,"props":686,"children":687},{"class":596,"line":615},[688],{"type":553,"tag":594,"props":689,"children":690},{},[691],{"type":558,"value":621},{"type":553,"tag":594,"props":693,"children":694},{"class":596,"line":624},[695],{"type":553,"tag":594,"props":696,"children":697},{},[698],{"type":558,"value":699},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":553,"tag":594,"props":701,"children":702},{"class":596,"line":633},[703],{"type":553,"tag":594,"props":704,"children":705},{},[706],{"type":558,"value":707},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":553,"tag":594,"props":709,"children":710},{"class":596,"line":642},[711],{"type":553,"tag":594,"props":712,"children":713},{},[714],{"type":558,"value":715},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":553,"tag":594,"props":717,"children":719},{"class":596,"line":718},7,[720],{"type":553,"tag":594,"props":721,"children":722},{},[723],{"type":558,"value":724},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":553,"tag":554,"props":726,"children":727},{},[728],{"type":558,"value":729},"提示：",{"type":553,"tag":731,"props":732,"children":733},"ul",{},[734,740,745],{"type":553,"tag":735,"props":736,"children":737},"li",{},[738],{"type":558,"value":739},"树中节点的数目在范围 [1, 1000] 内",{"type":553,"tag":735,"props":741,"children":742},{},[743],{"type":558,"value":744},"0 \u003C= Node.val \u003C= 9",{"type":553,"tag":735,"props":746,"children":747},{},[748],{"type":558,"value":749},"树的深度不超过 10",{"type":553,"tag":751,"props":752,"children":754},"h2",{"id":753},"解题思路",[755],{"type":558,"value":753},{"type":553,"tag":751,"props":757,"children":759},{"id":758},"实现",[760],{"type":558,"value":758},{"type":553,"tag":762,"props":763,"children":765},"h3",{"id":764},"深度优先搜素-dfs",[766],{"type":558,"value":767},"深度优先搜素 - dfs",{"type":553,"tag":584,"props":769,"children":773},{"className":770,"code":771,"language":772,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[774],{"type":553,"tag":590,"props":775,"children":776},{"__ignoreMap":546},[777,786,794,802,858,921,974,1026,1035,1045,1053,1094,1124,1132,1172,1221,1263,1317,1390,1468,1477,1510],{"type":553,"tag":594,"props":778,"children":779},{"class":596,"line":597},[780],{"type":553,"tag":594,"props":781,"children":783},{"style":782},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[784],{"type":558,"value":785},"/**\n",{"type":553,"tag":594,"props":787,"children":788},{"class":596,"line":606},[789],{"type":553,"tag":594,"props":790,"children":791},{"style":782},[792],{"type":558,"value":793}," * Definition for a binary tree node.\n",{"type":553,"tag":594,"props":795,"children":796},{"class":596,"line":615},[797],{"type":553,"tag":594,"props":798,"children":799},{"style":782},[800],{"type":558,"value":801}," */\n",{"type":553,"tag":594,"props":803,"children":804},{"class":596,"line":624},[805,811,817,823,829,834,839,843,848,853],{"type":553,"tag":594,"props":806,"children":808},{"style":807},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[809],{"type":558,"value":810},"function",{"type":553,"tag":594,"props":812,"children":814},{"style":813},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[815],{"type":558,"value":816}," TreeNode",{"type":553,"tag":594,"props":818,"children":820},{"style":819},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[821],{"type":558,"value":822},"(",{"type":553,"tag":594,"props":824,"children":826},{"style":825},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[827],{"type":558,"value":828},"val",{"type":553,"tag":594,"props":830,"children":831},{"style":819},[832],{"type":558,"value":833},",",{"type":553,"tag":594,"props":835,"children":836},{"style":825},[837],{"type":558,"value":838}," left",{"type":553,"tag":594,"props":840,"children":841},{"style":819},[842],{"type":558,"value":833},{"type":553,"tag":594,"props":844,"children":845},{"style":825},[846],{"type":558,"value":847}," right",{"type":553,"tag":594,"props":849,"children":850},{"style":819},[851],{"type":558,"value":852},")",{"type":553,"tag":594,"props":854,"children":855},{"style":819},[856],{"type":558,"value":857}," {\n",{"type":553,"tag":594,"props":859,"children":860},{"class":596,"line":633},[861,867,872,876,881,886,891,896,901,907,912,916],{"type":553,"tag":594,"props":862,"children":864},{"style":863},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[865],{"type":558,"value":866},"  this",{"type":553,"tag":594,"props":868,"children":869},{"style":819},[870],{"type":558,"value":871},".",{"type":553,"tag":594,"props":873,"children":874},{"style":825},[875],{"type":558,"value":828},{"type":553,"tag":594,"props":877,"children":878},{"style":819},[879],{"type":558,"value":880}," =",{"type":553,"tag":594,"props":882,"children":883},{"style":825},[884],{"type":558,"value":885}," val",{"type":553,"tag":594,"props":887,"children":888},{"style":807},[889],{"type":558,"value":890}," ===",{"type":553,"tag":594,"props":892,"children":893},{"style":807},[894],{"type":558,"value":895}," undefined",{"type":553,"tag":594,"props":897,"children":898},{"style":807},[899],{"type":558,"value":900}," ?",{"type":553,"tag":594,"props":902,"children":904},{"style":903},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[905],{"type":558,"value":906}," 0",{"type":553,"tag":594,"props":908,"children":909},{"style":807},[910],{"type":558,"value":911}," :",{"type":553,"tag":594,"props":913,"children":914},{"style":825},[915],{"type":558,"value":885},{"type":553,"tag":594,"props":917,"children":918},{"style":819},[919],{"type":558,"value":920},";\n",{"type":553,"tag":594,"props":922,"children":923},{"class":596,"line":642},[924,928,932,937,941,945,949,953,957,962,966,970],{"type":553,"tag":594,"props":925,"children":926},{"style":863},[927],{"type":558,"value":866},{"type":553,"tag":594,"props":929,"children":930},{"style":819},[931],{"type":558,"value":871},{"type":553,"tag":594,"props":933,"children":934},{"style":825},[935],{"type":558,"value":936},"left",{"type":553,"tag":594,"props":938,"children":939},{"style":819},[940],{"type":558,"value":880},{"type":553,"tag":594,"props":942,"children":943},{"style":825},[944],{"type":558,"value":838},{"type":553,"tag":594,"props":946,"children":947},{"style":807},[948],{"type":558,"value":890},{"type":553,"tag":594,"props":950,"children":951},{"style":807},[952],{"type":558,"value":895},{"type":553,"tag":594,"props":954,"children":955},{"style":807},[956],{"type":558,"value":900},{"type":553,"tag":594,"props":958,"children":959},{"style":807},[960],{"type":558,"value":961}," null",{"type":553,"tag":594,"props":963,"children":964},{"style":807},[965],{"type":558,"value":911},{"type":553,"tag":594,"props":967,"children":968},{"style":825},[969],{"type":558,"value":838},{"type":553,"tag":594,"props":971,"children":972},{"style":819},[973],{"type":558,"value":920},{"type":553,"tag":594,"props":975,"children":976},{"class":596,"line":718},[977,981,985,990,994,998,1002,1006,1010,1014,1018,1022],{"type":553,"tag":594,"props":978,"children":979},{"style":863},[980],{"type":558,"value":866},{"type":553,"tag":594,"props":982,"children":983},{"style":819},[984],{"type":558,"value":871},{"type":553,"tag":594,"props":986,"children":987},{"style":825},[988],{"type":558,"value":989},"right",{"type":553,"tag":594,"props":991,"children":992},{"style":819},[993],{"type":558,"value":880},{"type":553,"tag":594,"props":995,"children":996},{"style":825},[997],{"type":558,"value":847},{"type":553,"tag":594,"props":999,"children":1000},{"style":807},[1001],{"type":558,"value":890},{"type":553,"tag":594,"props":1003,"children":1004},{"style":807},[1005],{"type":558,"value":895},{"type":553,"tag":594,"props":1007,"children":1008},{"style":807},[1009],{"type":558,"value":900},{"type":553,"tag":594,"props":1011,"children":1012},{"style":807},[1013],{"type":558,"value":961},{"type":553,"tag":594,"props":1015,"children":1016},{"style":807},[1017],{"type":558,"value":911},{"type":553,"tag":594,"props":1019,"children":1020},{"style":825},[1021],{"type":558,"value":847},{"type":553,"tag":594,"props":1023,"children":1024},{"style":819},[1025],{"type":558,"value":920},{"type":553,"tag":594,"props":1027,"children":1029},{"class":596,"line":1028},8,[1030],{"type":553,"tag":594,"props":1031,"children":1032},{"style":819},[1033],{"type":558,"value":1034},"}\n",{"type":553,"tag":594,"props":1036,"children":1038},{"class":596,"line":1037},9,[1039],{"type":553,"tag":594,"props":1040,"children":1042},{"emptyLinePlaceholder":1041},true,[1043],{"type":558,"value":1044},"\n",{"type":553,"tag":594,"props":1046,"children":1048},{"class":596,"line":1047},10,[1049],{"type":553,"tag":594,"props":1050,"children":1051},{"style":782},[1052],{"type":558,"value":785},{"type":553,"tag":594,"props":1054,"children":1056},{"class":596,"line":1055},11,[1057,1062,1067,1073,1078,1084,1089],{"type":553,"tag":594,"props":1058,"children":1059},{"style":782},[1060],{"type":558,"value":1061}," * ",{"type":553,"tag":594,"props":1063,"children":1064},{"style":819},[1065],{"type":558,"value":1066},"@",{"type":553,"tag":594,"props":1068,"children":1070},{"style":1069},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1071],{"type":558,"value":1072},"param",{"type":553,"tag":594,"props":1074,"children":1075},{"style":819},[1076],{"type":558,"value":1077}," {",{"type":553,"tag":594,"props":1079,"children":1081},{"style":1080},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1082],{"type":558,"value":1083},"TreeNode",{"type":553,"tag":594,"props":1085,"children":1086},{"style":819},[1087],{"type":558,"value":1088},"}",{"type":553,"tag":594,"props":1090,"children":1091},{"style":825},[1092],{"type":558,"value":1093}," root\n",{"type":553,"tag":594,"props":1095,"children":1097},{"class":596,"line":1096},12,[1098,1102,1106,1111,1115,1120],{"type":553,"tag":594,"props":1099,"children":1100},{"style":782},[1101],{"type":558,"value":1061},{"type":553,"tag":594,"props":1103,"children":1104},{"style":819},[1105],{"type":558,"value":1066},{"type":553,"tag":594,"props":1107,"children":1108},{"style":1069},[1109],{"type":558,"value":1110},"return",{"type":553,"tag":594,"props":1112,"children":1113},{"style":819},[1114],{"type":558,"value":1077},{"type":553,"tag":594,"props":1116,"children":1117},{"style":1080},[1118],{"type":558,"value":1119},"number",{"type":553,"tag":594,"props":1121,"children":1122},{"style":819},[1123],{"type":558,"value":1034},{"type":553,"tag":594,"props":1125,"children":1127},{"class":596,"line":1126},13,[1128],{"type":553,"tag":594,"props":1129,"children":1130},{"style":782},[1131],{"type":558,"value":801},{"type":553,"tag":594,"props":1133,"children":1135},{"class":596,"line":1134},14,[1136,1141,1146,1150,1155,1160,1164,1168],{"type":553,"tag":594,"props":1137,"children":1138},{"style":807},[1139],{"type":558,"value":1140},"var",{"type":553,"tag":594,"props":1142,"children":1143},{"style":813},[1144],{"type":558,"value":1145}," sumNumbers",{"type":553,"tag":594,"props":1147,"children":1148},{"style":819},[1149],{"type":558,"value":880},{"type":553,"tag":594,"props":1151,"children":1152},{"style":807},[1153],{"type":558,"value":1154}," function",{"type":553,"tag":594,"props":1156,"children":1157},{"style":819},[1158],{"type":558,"value":1159}," (",{"type":553,"tag":594,"props":1161,"children":1162},{"style":825},[1163],{"type":558,"value":550},{"type":553,"tag":594,"props":1165,"children":1166},{"style":819},[1167],{"type":558,"value":852},{"type":553,"tag":594,"props":1169,"children":1170},{"style":819},[1171],{"type":558,"value":857},{"type":553,"tag":594,"props":1173,"children":1175},{"class":596,"line":1174},15,[1176,1181,1186,1190,1194,1199,1203,1208,1212,1217],{"type":553,"tag":594,"props":1177,"children":1178},{"style":807},[1179],{"type":558,"value":1180},"  const",{"type":553,"tag":594,"props":1182,"children":1183},{"style":813},[1184],{"type":558,"value":1185}," dfs",{"type":553,"tag":594,"props":1187,"children":1188},{"style":819},[1189],{"type":558,"value":880},{"type":553,"tag":594,"props":1191,"children":1192},{"style":819},[1193],{"type":558,"value":1159},{"type":553,"tag":594,"props":1195,"children":1196},{"style":825},[1197],{"type":558,"value":1198},"node",{"type":553,"tag":594,"props":1200,"children":1201},{"style":819},[1202],{"type":558,"value":833},{"type":553,"tag":594,"props":1204,"children":1205},{"style":825},[1206],{"type":558,"value":1207}," prev",{"type":553,"tag":594,"props":1209,"children":1210},{"style":819},[1211],{"type":558,"value":852},{"type":553,"tag":594,"props":1213,"children":1214},{"style":819},[1215],{"type":558,"value":1216}," =>",{"type":553,"tag":594,"props":1218,"children":1219},{"style":819},[1220],{"type":558,"value":857},{"type":553,"tag":594,"props":1222,"children":1224},{"class":596,"line":1223},16,[1225,1230,1234,1238,1242,1246,1250,1255,1259],{"type":553,"tag":594,"props":1226,"children":1227},{"style":1069},[1228],{"type":558,"value":1229},"    if",{"type":553,"tag":594,"props":1231,"children":1232},{"style":819},[1233],{"type":558,"value":1159},{"type":553,"tag":594,"props":1235,"children":1236},{"style":825},[1237],{"type":558,"value":1198},{"type":553,"tag":594,"props":1239,"children":1240},{"style":807},[1241],{"type":558,"value":890},{"type":553,"tag":594,"props":1243,"children":1244},{"style":807},[1245],{"type":558,"value":961},{"type":553,"tag":594,"props":1247,"children":1248},{"style":819},[1249],{"type":558,"value":852},{"type":553,"tag":594,"props":1251,"children":1252},{"style":1069},[1253],{"type":558,"value":1254}," return",{"type":553,"tag":594,"props":1256,"children":1257},{"style":903},[1258],{"type":558,"value":906},{"type":553,"tag":594,"props":1260,"children":1261},{"style":819},[1262],{"type":558,"value":920},{"type":553,"tag":594,"props":1264,"children":1266},{"class":596,"line":1265},17,[1267,1272,1277,1281,1285,1290,1295,1300,1305,1309,1313],{"type":553,"tag":594,"props":1268,"children":1269},{"style":807},[1270],{"type":558,"value":1271},"    let",{"type":553,"tag":594,"props":1273,"children":1274},{"style":825},[1275],{"type":558,"value":1276}," sum",{"type":553,"tag":594,"props":1278,"children":1279},{"style":819},[1280],{"type":558,"value":880},{"type":553,"tag":594,"props":1282,"children":1283},{"style":825},[1284],{"type":558,"value":1207},{"type":553,"tag":594,"props":1286,"children":1287},{"style":807},[1288],{"type":558,"value":1289}," *",{"type":553,"tag":594,"props":1291,"children":1292},{"style":903},[1293],{"type":558,"value":1294}," 10",{"type":553,"tag":594,"props":1296,"children":1297},{"style":807},[1298],{"type":558,"value":1299}," +",{"type":553,"tag":594,"props":1301,"children":1302},{"style":825},[1303],{"type":558,"value":1304}," node",{"type":553,"tag":594,"props":1306,"children":1307},{"style":819},[1308],{"type":558,"value":871},{"type":553,"tag":594,"props":1310,"children":1311},{"style":825},[1312],{"type":558,"value":828},{"type":553,"tag":594,"props":1314,"children":1315},{"style":819},[1316],{"type":558,"value":920},{"type":553,"tag":594,"props":1318,"children":1320},{"class":596,"line":1319},18,[1321,1325,1329,1333,1337,1341,1345,1349,1354,1358,1362,1366,1370,1374,1378,1382,1386],{"type":553,"tag":594,"props":1322,"children":1323},{"style":1069},[1324],{"type":558,"value":1229},{"type":553,"tag":594,"props":1326,"children":1327},{"style":819},[1328],{"type":558,"value":1159},{"type":553,"tag":594,"props":1330,"children":1331},{"style":825},[1332],{"type":558,"value":1198},{"type":553,"tag":594,"props":1334,"children":1335},{"style":819},[1336],{"type":558,"value":871},{"type":553,"tag":594,"props":1338,"children":1339},{"style":825},[1340],{"type":558,"value":936},{"type":553,"tag":594,"props":1342,"children":1343},{"style":807},[1344],{"type":558,"value":890},{"type":553,"tag":594,"props":1346,"children":1347},{"style":807},[1348],{"type":558,"value":961},{"type":553,"tag":594,"props":1350,"children":1351},{"style":807},[1352],{"type":558,"value":1353}," &&",{"type":553,"tag":594,"props":1355,"children":1356},{"style":825},[1357],{"type":558,"value":1304},{"type":553,"tag":594,"props":1359,"children":1360},{"style":819},[1361],{"type":558,"value":871},{"type":553,"tag":594,"props":1363,"children":1364},{"style":825},[1365],{"type":558,"value":989},{"type":553,"tag":594,"props":1367,"children":1368},{"style":807},[1369],{"type":558,"value":890},{"type":553,"tag":594,"props":1371,"children":1372},{"style":807},[1373],{"type":558,"value":961},{"type":553,"tag":594,"props":1375,"children":1376},{"style":819},[1377],{"type":558,"value":852},{"type":553,"tag":594,"props":1379,"children":1380},{"style":1069},[1381],{"type":558,"value":1254},{"type":553,"tag":594,"props":1383,"children":1384},{"style":825},[1385],{"type":558,"value":1276},{"type":553,"tag":594,"props":1387,"children":1388},{"style":819},[1389],{"type":558,"value":920},{"type":553,"tag":594,"props":1391,"children":1393},{"class":596,"line":1392},19,[1394,1399,1403,1407,1411,1415,1419,1423,1427,1431,1435,1439,1443,1447,1451,1455,1459,1463],{"type":553,"tag":594,"props":1395,"children":1396},{"style":1069},[1397],{"type":558,"value":1398},"    return",{"type":553,"tag":594,"props":1400,"children":1401},{"style":813},[1402],{"type":558,"value":1185},{"type":553,"tag":594,"props":1404,"children":1405},{"style":819},[1406],{"type":558,"value":822},{"type":553,"tag":594,"props":1408,"children":1409},{"style":825},[1410],{"type":558,"value":1198},{"type":553,"tag":594,"props":1412,"children":1413},{"style":819},[1414],{"type":558,"value":871},{"type":553,"tag":594,"props":1416,"children":1417},{"style":825},[1418],{"type":558,"value":936},{"type":553,"tag":594,"props":1420,"children":1421},{"style":819},[1422],{"type":558,"value":833},{"type":553,"tag":594,"props":1424,"children":1425},{"style":825},[1426],{"type":558,"value":1276},{"type":553,"tag":594,"props":1428,"children":1429},{"style":819},[1430],{"type":558,"value":852},{"type":553,"tag":594,"props":1432,"children":1433},{"style":807},[1434],{"type":558,"value":1299},{"type":553,"tag":594,"props":1436,"children":1437},{"style":813},[1438],{"type":558,"value":1185},{"type":553,"tag":594,"props":1440,"children":1441},{"style":819},[1442],{"type":558,"value":822},{"type":553,"tag":594,"props":1444,"children":1445},{"style":825},[1446],{"type":558,"value":1198},{"type":553,"tag":594,"props":1448,"children":1449},{"style":819},[1450],{"type":558,"value":871},{"type":553,"tag":594,"props":1452,"children":1453},{"style":825},[1454],{"type":558,"value":989},{"type":553,"tag":594,"props":1456,"children":1457},{"style":819},[1458],{"type":558,"value":833},{"type":553,"tag":594,"props":1460,"children":1461},{"style":825},[1462],{"type":558,"value":1276},{"type":553,"tag":594,"props":1464,"children":1465},{"style":819},[1466],{"type":558,"value":1467},");\n",{"type":553,"tag":594,"props":1469,"children":1471},{"class":596,"line":1470},20,[1472],{"type":553,"tag":594,"props":1473,"children":1474},{"style":819},[1475],{"type":558,"value":1476},"  };\n",{"type":553,"tag":594,"props":1478,"children":1480},{"class":596,"line":1479},21,[1481,1486,1490,1494,1498,1502,1506],{"type":553,"tag":594,"props":1482,"children":1483},{"style":1069},[1484],{"type":558,"value":1485},"  return",{"type":553,"tag":594,"props":1487,"children":1488},{"style":813},[1489],{"type":558,"value":1185},{"type":553,"tag":594,"props":1491,"children":1492},{"style":819},[1493],{"type":558,"value":822},{"type":553,"tag":594,"props":1495,"children":1496},{"style":825},[1497],{"type":558,"value":550},{"type":553,"tag":594,"props":1499,"children":1500},{"style":819},[1501],{"type":558,"value":833},{"type":553,"tag":594,"props":1503,"children":1504},{"style":903},[1505],{"type":558,"value":906},{"type":553,"tag":594,"props":1507,"children":1508},{"style":819},[1509],{"type":558,"value":1467},{"type":553,"tag":594,"props":1511,"children":1513},{"class":596,"line":1512},22,[1514],{"type":553,"tag":594,"props":1515,"children":1516},{"style":819},[1517],{"type":558,"value":1518},"};\n",{"type":553,"tag":1520,"props":1521,"children":1522},"style",{},[1523],{"type":558,"value":1524},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":633,"depth":633,"links":1526},[1527,1528],{"id":753,"depth":606,"text":753},{"id":758,"depth":606,"text":758,"children":1529},[1530],{"id":764,"depth":615,"text":767},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1537,1539],{"_path":165,"title":164,"description":1538},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":171,"title":170,"description":1540},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1714099678328]