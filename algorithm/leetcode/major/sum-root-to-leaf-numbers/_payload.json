[{"data":1,"prerenderedAt":1549},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":551,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1544},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":168,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":167,"description":555,"url":556,"body":557,"_type":1539,"_id":1540,"_source":1541,"_file":1542,"_extension":1543},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":558,"children":559,"toc":1533},"root",[560,567,572,577,582,591,657,662,670,733,738,758,764,769,776,1527],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":566,"value":576},"叶节点 是指没有子节点的节点。",{"type":561,"tag":562,"props":578,"children":579},{},[580],{"type":566,"value":581},"示例 1：",{"type":561,"tag":562,"props":583,"children":584},{},[585],{"type":561,"tag":586,"props":587,"children":590},"img",{"alt":588,"src":589},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":561,"tag":592,"props":593,"children":596},"pre",{"className":594,"code":595,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[597],{"type":561,"tag":598,"props":599,"children":600},"code",{"__ignoreMap":554},[601,612,621,630,639,648],{"type":561,"tag":602,"props":603,"children":606},"span",{"class":604,"line":605},"line",1,[607],{"type":561,"tag":602,"props":608,"children":609},{},[610],{"type":566,"value":611},"输入：root = [1,2,3]\n",{"type":561,"tag":602,"props":613,"children":615},{"class":604,"line":614},2,[616],{"type":561,"tag":602,"props":617,"children":618},{},[619],{"type":566,"value":620},"输出：25\n",{"type":561,"tag":602,"props":622,"children":624},{"class":604,"line":623},3,[625],{"type":561,"tag":602,"props":626,"children":627},{},[628],{"type":566,"value":629},"解释：\n",{"type":561,"tag":602,"props":631,"children":633},{"class":604,"line":632},4,[634],{"type":561,"tag":602,"props":635,"children":636},{},[637],{"type":566,"value":638},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":561,"tag":602,"props":640,"children":642},{"class":604,"line":641},5,[643],{"type":561,"tag":602,"props":644,"children":645},{},[646],{"type":566,"value":647},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":561,"tag":602,"props":649,"children":651},{"class":604,"line":650},6,[652],{"type":561,"tag":602,"props":653,"children":654},{},[655],{"type":566,"value":656},"因此，数字总和 = 12 + 13 = 25\n",{"type":561,"tag":562,"props":658,"children":659},{},[660],{"type":566,"value":661},"示例 2：",{"type":561,"tag":562,"props":663,"children":664},{},[665],{"type":561,"tag":586,"props":666,"children":669},{"alt":667,"src":668},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":561,"tag":592,"props":671,"children":673},{"className":594,"code":672,"language":566,"meta":554,"style":554},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[674],{"type":561,"tag":598,"props":675,"children":676},{"__ignoreMap":554},[677,685,693,700,708,716,724],{"type":561,"tag":602,"props":678,"children":679},{"class":604,"line":605},[680],{"type":561,"tag":602,"props":681,"children":682},{},[683],{"type":566,"value":684},"输入：root = [4,9,0,5,1]\n",{"type":561,"tag":602,"props":686,"children":687},{"class":604,"line":614},[688],{"type":561,"tag":602,"props":689,"children":690},{},[691],{"type":566,"value":692},"输出：1026\n",{"type":561,"tag":602,"props":694,"children":695},{"class":604,"line":623},[696],{"type":561,"tag":602,"props":697,"children":698},{},[699],{"type":566,"value":629},{"type":561,"tag":602,"props":701,"children":702},{"class":604,"line":632},[703],{"type":561,"tag":602,"props":704,"children":705},{},[706],{"type":566,"value":707},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":561,"tag":602,"props":709,"children":710},{"class":604,"line":641},[711],{"type":561,"tag":602,"props":712,"children":713},{},[714],{"type":566,"value":715},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":561,"tag":602,"props":717,"children":718},{"class":604,"line":650},[719],{"type":561,"tag":602,"props":720,"children":721},{},[722],{"type":566,"value":723},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":561,"tag":602,"props":725,"children":727},{"class":604,"line":726},7,[728],{"type":561,"tag":602,"props":729,"children":730},{},[731],{"type":566,"value":732},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":561,"tag":562,"props":734,"children":735},{},[736],{"type":566,"value":737},"提示：",{"type":561,"tag":739,"props":740,"children":741},"ul",{},[742,748,753],{"type":561,"tag":743,"props":744,"children":745},"li",{},[746],{"type":566,"value":747},"树中节点的数目在范围 [1, 1000] 内",{"type":561,"tag":743,"props":749,"children":750},{},[751],{"type":566,"value":752},"0 \u003C= Node.val \u003C= 9",{"type":561,"tag":743,"props":754,"children":755},{},[756],{"type":566,"value":757},"树的深度不超过 10",{"type":561,"tag":759,"props":760,"children":762},"h2",{"id":761},"解题思路",[763],{"type":566,"value":761},{"type":561,"tag":759,"props":765,"children":767},{"id":766},"实现",[768],{"type":566,"value":766},{"type":561,"tag":770,"props":771,"children":773},"h3",{"id":772},"深度优先搜素-dfs",[774],{"type":566,"value":775},"深度优先搜素 - dfs",{"type":561,"tag":592,"props":777,"children":781},{"className":778,"code":779,"language":780,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[782],{"type":561,"tag":598,"props":783,"children":784},{"__ignoreMap":554},[785,794,802,810,866,929,982,1034,1043,1053,1061,1102,1132,1140,1180,1229,1271,1325,1398,1476,1485,1518],{"type":561,"tag":602,"props":786,"children":787},{"class":604,"line":605},[788],{"type":561,"tag":602,"props":789,"children":791},{"style":790},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[792],{"type":566,"value":793},"/**\n",{"type":561,"tag":602,"props":795,"children":796},{"class":604,"line":614},[797],{"type":561,"tag":602,"props":798,"children":799},{"style":790},[800],{"type":566,"value":801}," * Definition for a binary tree node.\n",{"type":561,"tag":602,"props":803,"children":804},{"class":604,"line":623},[805],{"type":561,"tag":602,"props":806,"children":807},{"style":790},[808],{"type":566,"value":809}," */\n",{"type":561,"tag":602,"props":811,"children":812},{"class":604,"line":632},[813,819,825,831,837,842,847,851,856,861],{"type":561,"tag":602,"props":814,"children":816},{"style":815},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[817],{"type":566,"value":818},"function",{"type":561,"tag":602,"props":820,"children":822},{"style":821},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[823],{"type":566,"value":824}," TreeNode",{"type":561,"tag":602,"props":826,"children":828},{"style":827},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[829],{"type":566,"value":830},"(",{"type":561,"tag":602,"props":832,"children":834},{"style":833},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[835],{"type":566,"value":836},"val",{"type":561,"tag":602,"props":838,"children":839},{"style":827},[840],{"type":566,"value":841},",",{"type":561,"tag":602,"props":843,"children":844},{"style":833},[845],{"type":566,"value":846}," left",{"type":561,"tag":602,"props":848,"children":849},{"style":827},[850],{"type":566,"value":841},{"type":561,"tag":602,"props":852,"children":853},{"style":833},[854],{"type":566,"value":855}," right",{"type":561,"tag":602,"props":857,"children":858},{"style":827},[859],{"type":566,"value":860},")",{"type":561,"tag":602,"props":862,"children":863},{"style":827},[864],{"type":566,"value":865}," {\n",{"type":561,"tag":602,"props":867,"children":868},{"class":604,"line":641},[869,875,880,884,889,894,899,904,909,915,920,924],{"type":561,"tag":602,"props":870,"children":872},{"style":871},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[873],{"type":566,"value":874},"  this",{"type":561,"tag":602,"props":876,"children":877},{"style":827},[878],{"type":566,"value":879},".",{"type":561,"tag":602,"props":881,"children":882},{"style":833},[883],{"type":566,"value":836},{"type":561,"tag":602,"props":885,"children":886},{"style":827},[887],{"type":566,"value":888}," =",{"type":561,"tag":602,"props":890,"children":891},{"style":833},[892],{"type":566,"value":893}," val",{"type":561,"tag":602,"props":895,"children":896},{"style":815},[897],{"type":566,"value":898}," ===",{"type":561,"tag":602,"props":900,"children":901},{"style":815},[902],{"type":566,"value":903}," undefined",{"type":561,"tag":602,"props":905,"children":906},{"style":815},[907],{"type":566,"value":908}," ?",{"type":561,"tag":602,"props":910,"children":912},{"style":911},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[913],{"type":566,"value":914}," 0",{"type":561,"tag":602,"props":916,"children":917},{"style":815},[918],{"type":566,"value":919}," :",{"type":561,"tag":602,"props":921,"children":922},{"style":833},[923],{"type":566,"value":893},{"type":561,"tag":602,"props":925,"children":926},{"style":827},[927],{"type":566,"value":928},";\n",{"type":561,"tag":602,"props":930,"children":931},{"class":604,"line":650},[932,936,940,945,949,953,957,961,965,970,974,978],{"type":561,"tag":602,"props":933,"children":934},{"style":871},[935],{"type":566,"value":874},{"type":561,"tag":602,"props":937,"children":938},{"style":827},[939],{"type":566,"value":879},{"type":561,"tag":602,"props":941,"children":942},{"style":833},[943],{"type":566,"value":944},"left",{"type":561,"tag":602,"props":946,"children":947},{"style":827},[948],{"type":566,"value":888},{"type":561,"tag":602,"props":950,"children":951},{"style":833},[952],{"type":566,"value":846},{"type":561,"tag":602,"props":954,"children":955},{"style":815},[956],{"type":566,"value":898},{"type":561,"tag":602,"props":958,"children":959},{"style":815},[960],{"type":566,"value":903},{"type":561,"tag":602,"props":962,"children":963},{"style":815},[964],{"type":566,"value":908},{"type":561,"tag":602,"props":966,"children":967},{"style":815},[968],{"type":566,"value":969}," null",{"type":561,"tag":602,"props":971,"children":972},{"style":815},[973],{"type":566,"value":919},{"type":561,"tag":602,"props":975,"children":976},{"style":833},[977],{"type":566,"value":846},{"type":561,"tag":602,"props":979,"children":980},{"style":827},[981],{"type":566,"value":928},{"type":561,"tag":602,"props":983,"children":984},{"class":604,"line":726},[985,989,993,998,1002,1006,1010,1014,1018,1022,1026,1030],{"type":561,"tag":602,"props":986,"children":987},{"style":871},[988],{"type":566,"value":874},{"type":561,"tag":602,"props":990,"children":991},{"style":827},[992],{"type":566,"value":879},{"type":561,"tag":602,"props":994,"children":995},{"style":833},[996],{"type":566,"value":997},"right",{"type":561,"tag":602,"props":999,"children":1000},{"style":827},[1001],{"type":566,"value":888},{"type":561,"tag":602,"props":1003,"children":1004},{"style":833},[1005],{"type":566,"value":855},{"type":561,"tag":602,"props":1007,"children":1008},{"style":815},[1009],{"type":566,"value":898},{"type":561,"tag":602,"props":1011,"children":1012},{"style":815},[1013],{"type":566,"value":903},{"type":561,"tag":602,"props":1015,"children":1016},{"style":815},[1017],{"type":566,"value":908},{"type":561,"tag":602,"props":1019,"children":1020},{"style":815},[1021],{"type":566,"value":969},{"type":561,"tag":602,"props":1023,"children":1024},{"style":815},[1025],{"type":566,"value":919},{"type":561,"tag":602,"props":1027,"children":1028},{"style":833},[1029],{"type":566,"value":855},{"type":561,"tag":602,"props":1031,"children":1032},{"style":827},[1033],{"type":566,"value":928},{"type":561,"tag":602,"props":1035,"children":1037},{"class":604,"line":1036},8,[1038],{"type":561,"tag":602,"props":1039,"children":1040},{"style":827},[1041],{"type":566,"value":1042},"}\n",{"type":561,"tag":602,"props":1044,"children":1046},{"class":604,"line":1045},9,[1047],{"type":561,"tag":602,"props":1048,"children":1050},{"emptyLinePlaceholder":1049},true,[1051],{"type":566,"value":1052},"\n",{"type":561,"tag":602,"props":1054,"children":1056},{"class":604,"line":1055},10,[1057],{"type":561,"tag":602,"props":1058,"children":1059},{"style":790},[1060],{"type":566,"value":793},{"type":561,"tag":602,"props":1062,"children":1064},{"class":604,"line":1063},11,[1065,1070,1075,1081,1086,1092,1097],{"type":561,"tag":602,"props":1066,"children":1067},{"style":790},[1068],{"type":566,"value":1069}," * ",{"type":561,"tag":602,"props":1071,"children":1072},{"style":827},[1073],{"type":566,"value":1074},"@",{"type":561,"tag":602,"props":1076,"children":1078},{"style":1077},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1079],{"type":566,"value":1080},"param",{"type":561,"tag":602,"props":1082,"children":1083},{"style":827},[1084],{"type":566,"value":1085}," {",{"type":561,"tag":602,"props":1087,"children":1089},{"style":1088},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1090],{"type":566,"value":1091},"TreeNode",{"type":561,"tag":602,"props":1093,"children":1094},{"style":827},[1095],{"type":566,"value":1096},"}",{"type":561,"tag":602,"props":1098,"children":1099},{"style":833},[1100],{"type":566,"value":1101}," root\n",{"type":561,"tag":602,"props":1103,"children":1105},{"class":604,"line":1104},12,[1106,1110,1114,1119,1123,1128],{"type":561,"tag":602,"props":1107,"children":1108},{"style":790},[1109],{"type":566,"value":1069},{"type":561,"tag":602,"props":1111,"children":1112},{"style":827},[1113],{"type":566,"value":1074},{"type":561,"tag":602,"props":1115,"children":1116},{"style":1077},[1117],{"type":566,"value":1118},"return",{"type":561,"tag":602,"props":1120,"children":1121},{"style":827},[1122],{"type":566,"value":1085},{"type":561,"tag":602,"props":1124,"children":1125},{"style":1088},[1126],{"type":566,"value":1127},"number",{"type":561,"tag":602,"props":1129,"children":1130},{"style":827},[1131],{"type":566,"value":1042},{"type":561,"tag":602,"props":1133,"children":1135},{"class":604,"line":1134},13,[1136],{"type":561,"tag":602,"props":1137,"children":1138},{"style":790},[1139],{"type":566,"value":809},{"type":561,"tag":602,"props":1141,"children":1143},{"class":604,"line":1142},14,[1144,1149,1154,1158,1163,1168,1172,1176],{"type":561,"tag":602,"props":1145,"children":1146},{"style":815},[1147],{"type":566,"value":1148},"var",{"type":561,"tag":602,"props":1150,"children":1151},{"style":821},[1152],{"type":566,"value":1153}," sumNumbers",{"type":561,"tag":602,"props":1155,"children":1156},{"style":827},[1157],{"type":566,"value":888},{"type":561,"tag":602,"props":1159,"children":1160},{"style":815},[1161],{"type":566,"value":1162}," function",{"type":561,"tag":602,"props":1164,"children":1165},{"style":827},[1166],{"type":566,"value":1167}," (",{"type":561,"tag":602,"props":1169,"children":1170},{"style":833},[1171],{"type":566,"value":558},{"type":561,"tag":602,"props":1173,"children":1174},{"style":827},[1175],{"type":566,"value":860},{"type":561,"tag":602,"props":1177,"children":1178},{"style":827},[1179],{"type":566,"value":865},{"type":561,"tag":602,"props":1181,"children":1183},{"class":604,"line":1182},15,[1184,1189,1194,1198,1202,1207,1211,1216,1220,1225],{"type":561,"tag":602,"props":1185,"children":1186},{"style":815},[1187],{"type":566,"value":1188},"  const",{"type":561,"tag":602,"props":1190,"children":1191},{"style":821},[1192],{"type":566,"value":1193}," dfs",{"type":561,"tag":602,"props":1195,"children":1196},{"style":827},[1197],{"type":566,"value":888},{"type":561,"tag":602,"props":1199,"children":1200},{"style":827},[1201],{"type":566,"value":1167},{"type":561,"tag":602,"props":1203,"children":1204},{"style":833},[1205],{"type":566,"value":1206},"node",{"type":561,"tag":602,"props":1208,"children":1209},{"style":827},[1210],{"type":566,"value":841},{"type":561,"tag":602,"props":1212,"children":1213},{"style":833},[1214],{"type":566,"value":1215}," prev",{"type":561,"tag":602,"props":1217,"children":1218},{"style":827},[1219],{"type":566,"value":860},{"type":561,"tag":602,"props":1221,"children":1222},{"style":827},[1223],{"type":566,"value":1224}," =>",{"type":561,"tag":602,"props":1226,"children":1227},{"style":827},[1228],{"type":566,"value":865},{"type":561,"tag":602,"props":1230,"children":1232},{"class":604,"line":1231},16,[1233,1238,1242,1246,1250,1254,1258,1263,1267],{"type":561,"tag":602,"props":1234,"children":1235},{"style":1077},[1236],{"type":566,"value":1237},"    if",{"type":561,"tag":602,"props":1239,"children":1240},{"style":827},[1241],{"type":566,"value":1167},{"type":561,"tag":602,"props":1243,"children":1244},{"style":833},[1245],{"type":566,"value":1206},{"type":561,"tag":602,"props":1247,"children":1248},{"style":815},[1249],{"type":566,"value":898},{"type":561,"tag":602,"props":1251,"children":1252},{"style":815},[1253],{"type":566,"value":969},{"type":561,"tag":602,"props":1255,"children":1256},{"style":827},[1257],{"type":566,"value":860},{"type":561,"tag":602,"props":1259,"children":1260},{"style":1077},[1261],{"type":566,"value":1262}," return",{"type":561,"tag":602,"props":1264,"children":1265},{"style":911},[1266],{"type":566,"value":914},{"type":561,"tag":602,"props":1268,"children":1269},{"style":827},[1270],{"type":566,"value":928},{"type":561,"tag":602,"props":1272,"children":1274},{"class":604,"line":1273},17,[1275,1280,1285,1289,1293,1298,1303,1308,1313,1317,1321],{"type":561,"tag":602,"props":1276,"children":1277},{"style":815},[1278],{"type":566,"value":1279},"    let",{"type":561,"tag":602,"props":1281,"children":1282},{"style":833},[1283],{"type":566,"value":1284}," sum",{"type":561,"tag":602,"props":1286,"children":1287},{"style":827},[1288],{"type":566,"value":888},{"type":561,"tag":602,"props":1290,"children":1291},{"style":833},[1292],{"type":566,"value":1215},{"type":561,"tag":602,"props":1294,"children":1295},{"style":815},[1296],{"type":566,"value":1297}," *",{"type":561,"tag":602,"props":1299,"children":1300},{"style":911},[1301],{"type":566,"value":1302}," 10",{"type":561,"tag":602,"props":1304,"children":1305},{"style":815},[1306],{"type":566,"value":1307}," +",{"type":561,"tag":602,"props":1309,"children":1310},{"style":833},[1311],{"type":566,"value":1312}," node",{"type":561,"tag":602,"props":1314,"children":1315},{"style":827},[1316],{"type":566,"value":879},{"type":561,"tag":602,"props":1318,"children":1319},{"style":833},[1320],{"type":566,"value":836},{"type":561,"tag":602,"props":1322,"children":1323},{"style":827},[1324],{"type":566,"value":928},{"type":561,"tag":602,"props":1326,"children":1328},{"class":604,"line":1327},18,[1329,1333,1337,1341,1345,1349,1353,1357,1362,1366,1370,1374,1378,1382,1386,1390,1394],{"type":561,"tag":602,"props":1330,"children":1331},{"style":1077},[1332],{"type":566,"value":1237},{"type":561,"tag":602,"props":1334,"children":1335},{"style":827},[1336],{"type":566,"value":1167},{"type":561,"tag":602,"props":1338,"children":1339},{"style":833},[1340],{"type":566,"value":1206},{"type":561,"tag":602,"props":1342,"children":1343},{"style":827},[1344],{"type":566,"value":879},{"type":561,"tag":602,"props":1346,"children":1347},{"style":833},[1348],{"type":566,"value":944},{"type":561,"tag":602,"props":1350,"children":1351},{"style":815},[1352],{"type":566,"value":898},{"type":561,"tag":602,"props":1354,"children":1355},{"style":815},[1356],{"type":566,"value":969},{"type":561,"tag":602,"props":1358,"children":1359},{"style":815},[1360],{"type":566,"value":1361}," &&",{"type":561,"tag":602,"props":1363,"children":1364},{"style":833},[1365],{"type":566,"value":1312},{"type":561,"tag":602,"props":1367,"children":1368},{"style":827},[1369],{"type":566,"value":879},{"type":561,"tag":602,"props":1371,"children":1372},{"style":833},[1373],{"type":566,"value":997},{"type":561,"tag":602,"props":1375,"children":1376},{"style":815},[1377],{"type":566,"value":898},{"type":561,"tag":602,"props":1379,"children":1380},{"style":815},[1381],{"type":566,"value":969},{"type":561,"tag":602,"props":1383,"children":1384},{"style":827},[1385],{"type":566,"value":860},{"type":561,"tag":602,"props":1387,"children":1388},{"style":1077},[1389],{"type":566,"value":1262},{"type":561,"tag":602,"props":1391,"children":1392},{"style":833},[1393],{"type":566,"value":1284},{"type":561,"tag":602,"props":1395,"children":1396},{"style":827},[1397],{"type":566,"value":928},{"type":561,"tag":602,"props":1399,"children":1401},{"class":604,"line":1400},19,[1402,1407,1411,1415,1419,1423,1427,1431,1435,1439,1443,1447,1451,1455,1459,1463,1467,1471],{"type":561,"tag":602,"props":1403,"children":1404},{"style":1077},[1405],{"type":566,"value":1406},"    return",{"type":561,"tag":602,"props":1408,"children":1409},{"style":821},[1410],{"type":566,"value":1193},{"type":561,"tag":602,"props":1412,"children":1413},{"style":827},[1414],{"type":566,"value":830},{"type":561,"tag":602,"props":1416,"children":1417},{"style":833},[1418],{"type":566,"value":1206},{"type":561,"tag":602,"props":1420,"children":1421},{"style":827},[1422],{"type":566,"value":879},{"type":561,"tag":602,"props":1424,"children":1425},{"style":833},[1426],{"type":566,"value":944},{"type":561,"tag":602,"props":1428,"children":1429},{"style":827},[1430],{"type":566,"value":841},{"type":561,"tag":602,"props":1432,"children":1433},{"style":833},[1434],{"type":566,"value":1284},{"type":561,"tag":602,"props":1436,"children":1437},{"style":827},[1438],{"type":566,"value":860},{"type":561,"tag":602,"props":1440,"children":1441},{"style":815},[1442],{"type":566,"value":1307},{"type":561,"tag":602,"props":1444,"children":1445},{"style":821},[1446],{"type":566,"value":1193},{"type":561,"tag":602,"props":1448,"children":1449},{"style":827},[1450],{"type":566,"value":830},{"type":561,"tag":602,"props":1452,"children":1453},{"style":833},[1454],{"type":566,"value":1206},{"type":561,"tag":602,"props":1456,"children":1457},{"style":827},[1458],{"type":566,"value":879},{"type":561,"tag":602,"props":1460,"children":1461},{"style":833},[1462],{"type":566,"value":997},{"type":561,"tag":602,"props":1464,"children":1465},{"style":827},[1466],{"type":566,"value":841},{"type":561,"tag":602,"props":1468,"children":1469},{"style":833},[1470],{"type":566,"value":1284},{"type":561,"tag":602,"props":1472,"children":1473},{"style":827},[1474],{"type":566,"value":1475},");\n",{"type":561,"tag":602,"props":1477,"children":1479},{"class":604,"line":1478},20,[1480],{"type":561,"tag":602,"props":1481,"children":1482},{"style":827},[1483],{"type":566,"value":1484},"  };\n",{"type":561,"tag":602,"props":1486,"children":1488},{"class":604,"line":1487},21,[1489,1494,1498,1502,1506,1510,1514],{"type":561,"tag":602,"props":1490,"children":1491},{"style":1077},[1492],{"type":566,"value":1493},"  return",{"type":561,"tag":602,"props":1495,"children":1496},{"style":821},[1497],{"type":566,"value":1193},{"type":561,"tag":602,"props":1499,"children":1500},{"style":827},[1501],{"type":566,"value":830},{"type":561,"tag":602,"props":1503,"children":1504},{"style":833},[1505],{"type":566,"value":558},{"type":561,"tag":602,"props":1507,"children":1508},{"style":827},[1509],{"type":566,"value":841},{"type":561,"tag":602,"props":1511,"children":1512},{"style":911},[1513],{"type":566,"value":914},{"type":561,"tag":602,"props":1515,"children":1516},{"style":827},[1517],{"type":566,"value":1475},{"type":561,"tag":602,"props":1519,"children":1521},{"class":604,"line":1520},22,[1522],{"type":561,"tag":602,"props":1523,"children":1524},{"style":827},[1525],{"type":566,"value":1526},"};\n",{"type":561,"tag":1528,"props":1529,"children":1530},"style",{},[1531],{"type":566,"value":1532},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":641,"depth":641,"links":1534},[1535,1536],{"id":761,"depth":614,"text":761},{"id":766,"depth":614,"text":766,"children":1537},[1538],{"id":772,"depth":623,"text":775},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1545,1547],{"_path":165,"title":164,"description":1546},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":171,"title":170,"description":1548},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1715094970268]