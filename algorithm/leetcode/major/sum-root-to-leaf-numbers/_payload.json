[{"data":1,"prerenderedAt":1504},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/sum-root-to-leaf-numbers":506,"/algorithm/leetcode/major/sum-root-to-leaf-numbers-surround":1499},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":168,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":167,"description":510,"url":511,"body":512,"_type":1494,"_id":1495,"_source":1496,"_file":1497,"_extension":1498},"major",false,"","给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。\n每条从根节点到叶节点的路径都代表一个数字：","https://leetcode.cn/problems/sum-root-to-leaf-numbers",{"type":513,"children":514,"toc":1488},"root",[515,522,527,532,537,546,612,617,625,688,693,713,719,724,731,1482],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。\n计算从根节点到叶节点生成的 所有数字之和 。",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":521,"value":531},"叶节点 是指没有子节点的节点。",{"type":516,"tag":517,"props":533,"children":534},{},[535],{"type":521,"value":536},"示例 1：",{"type":516,"tag":517,"props":538,"children":539},{},[540],{"type":516,"tag":541,"props":542,"children":545},"img",{"alt":543,"src":544},"num1tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num1tree.png",[],{"type":516,"tag":547,"props":548,"children":551},"pre",{"className":549,"code":550,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：root = [1,2,3]\n输出：25\n解释：\n从根到叶子节点路径 1->2 代表数字 12\n从根到叶子节点路径 1->3 代表数字 13\n因此，数字总和 = 12 + 13 = 25\n",[552],{"type":516,"tag":553,"props":554,"children":555},"code",{"__ignoreMap":509},[556,567,576,585,594,603],{"type":516,"tag":557,"props":558,"children":561},"span",{"class":559,"line":560},"line",1,[562],{"type":516,"tag":557,"props":563,"children":564},{},[565],{"type":521,"value":566},"输入：root = [1,2,3]\n",{"type":516,"tag":557,"props":568,"children":570},{"class":559,"line":569},2,[571],{"type":516,"tag":557,"props":572,"children":573},{},[574],{"type":521,"value":575},"输出：25\n",{"type":516,"tag":557,"props":577,"children":579},{"class":559,"line":578},3,[580],{"type":516,"tag":557,"props":581,"children":582},{},[583],{"type":521,"value":584},"解释：\n",{"type":516,"tag":557,"props":586,"children":588},{"class":559,"line":587},4,[589],{"type":516,"tag":557,"props":590,"children":591},{},[592],{"type":521,"value":593},"从根到叶子节点路径 1->2 代表数字 12\n",{"type":516,"tag":557,"props":595,"children":597},{"class":559,"line":596},5,[598],{"type":516,"tag":557,"props":599,"children":600},{},[601],{"type":521,"value":602},"从根到叶子节点路径 1->3 代表数字 13\n",{"type":516,"tag":557,"props":604,"children":606},{"class":559,"line":605},6,[607],{"type":516,"tag":557,"props":608,"children":609},{},[610],{"type":521,"value":611},"因此，数字总和 = 12 + 13 = 25\n",{"type":516,"tag":517,"props":613,"children":614},{},[615],{"type":521,"value":616},"示例 2：",{"type":516,"tag":517,"props":618,"children":619},{},[620],{"type":516,"tag":541,"props":621,"children":624},{"alt":622,"src":623},"num2tree","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.129_num2tree.png",[],{"type":516,"tag":547,"props":626,"children":628},{"className":549,"code":627,"language":521,"meta":509,"style":509},"输入：root = [4,9,0,5,1]\n输出：1026\n解释：\n从根到叶子节点路径 4->9->5 代表数字 495\n从根到叶子节点路径 4->9->1 代表数字 491\n从根到叶子节点路径 4->0 代表数字 40\n因此，数字总和 = 495 + 491 + 40 = 1026\n",[629],{"type":516,"tag":553,"props":630,"children":631},{"__ignoreMap":509},[632,640,648,655,663,671,679],{"type":516,"tag":557,"props":633,"children":634},{"class":559,"line":560},[635],{"type":516,"tag":557,"props":636,"children":637},{},[638],{"type":521,"value":639},"输入：root = [4,9,0,5,1]\n",{"type":516,"tag":557,"props":641,"children":642},{"class":559,"line":569},[643],{"type":516,"tag":557,"props":644,"children":645},{},[646],{"type":521,"value":647},"输出：1026\n",{"type":516,"tag":557,"props":649,"children":650},{"class":559,"line":578},[651],{"type":516,"tag":557,"props":652,"children":653},{},[654],{"type":521,"value":584},{"type":516,"tag":557,"props":656,"children":657},{"class":559,"line":587},[658],{"type":516,"tag":557,"props":659,"children":660},{},[661],{"type":521,"value":662},"从根到叶子节点路径 4->9->5 代表数字 495\n",{"type":516,"tag":557,"props":664,"children":665},{"class":559,"line":596},[666],{"type":516,"tag":557,"props":667,"children":668},{},[669],{"type":521,"value":670},"从根到叶子节点路径 4->9->1 代表数字 491\n",{"type":516,"tag":557,"props":672,"children":673},{"class":559,"line":605},[674],{"type":516,"tag":557,"props":675,"children":676},{},[677],{"type":521,"value":678},"从根到叶子节点路径 4->0 代表数字 40\n",{"type":516,"tag":557,"props":680,"children":682},{"class":559,"line":681},7,[683],{"type":516,"tag":557,"props":684,"children":685},{},[686],{"type":521,"value":687},"因此，数字总和 = 495 + 491 + 40 = 1026\n",{"type":516,"tag":517,"props":689,"children":690},{},[691],{"type":521,"value":692},"提示：",{"type":516,"tag":694,"props":695,"children":696},"ul",{},[697,703,708],{"type":516,"tag":698,"props":699,"children":700},"li",{},[701],{"type":521,"value":702},"树中节点的数目在范围 [1, 1000] 内",{"type":516,"tag":698,"props":704,"children":705},{},[706],{"type":521,"value":707},"0 \u003C= Node.val \u003C= 9",{"type":516,"tag":698,"props":709,"children":710},{},[711],{"type":521,"value":712},"树的深度不超过 10",{"type":516,"tag":714,"props":715,"children":717},"h2",{"id":716},"解题思路",[718],{"type":521,"value":716},{"type":516,"tag":714,"props":720,"children":722},{"id":721},"实现",[723],{"type":521,"value":721},{"type":516,"tag":725,"props":726,"children":728},"h3",{"id":727},"深度优先搜素-dfs",[729],{"type":521,"value":730},"深度优先搜素 - dfs",{"type":516,"tag":547,"props":732,"children":736},{"className":733,"code":734,"language":735,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  const dfs = (node, prev) => {\n    if (node === null) return 0;\n    let sum = prev * 10 + node.val;\n    if (node.left === null && node.right === null) return sum;\n    return dfs(node.left, sum) + dfs(node.right, sum);\n  };\n  return dfs(root, 0);\n};\n","js",[737],{"type":516,"tag":553,"props":738,"children":739},{"__ignoreMap":509},[740,749,757,765,821,884,937,989,998,1008,1016,1057,1087,1095,1135,1184,1226,1280,1353,1431,1440,1473],{"type":516,"tag":557,"props":741,"children":742},{"class":559,"line":560},[743],{"type":516,"tag":557,"props":744,"children":746},{"style":745},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[747],{"type":521,"value":748},"/**\n",{"type":516,"tag":557,"props":750,"children":751},{"class":559,"line":569},[752],{"type":516,"tag":557,"props":753,"children":754},{"style":745},[755],{"type":521,"value":756}," * Definition for a binary tree node.\n",{"type":516,"tag":557,"props":758,"children":759},{"class":559,"line":578},[760],{"type":516,"tag":557,"props":761,"children":762},{"style":745},[763],{"type":521,"value":764}," */\n",{"type":516,"tag":557,"props":766,"children":767},{"class":559,"line":587},[768,774,780,786,792,797,802,806,811,816],{"type":516,"tag":557,"props":769,"children":771},{"style":770},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[772],{"type":521,"value":773},"function",{"type":516,"tag":557,"props":775,"children":777},{"style":776},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[778],{"type":521,"value":779}," TreeNode",{"type":516,"tag":557,"props":781,"children":783},{"style":782},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[784],{"type":521,"value":785},"(",{"type":516,"tag":557,"props":787,"children":789},{"style":788},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[790],{"type":521,"value":791},"val",{"type":516,"tag":557,"props":793,"children":794},{"style":782},[795],{"type":521,"value":796},",",{"type":516,"tag":557,"props":798,"children":799},{"style":788},[800],{"type":521,"value":801}," left",{"type":516,"tag":557,"props":803,"children":804},{"style":782},[805],{"type":521,"value":796},{"type":516,"tag":557,"props":807,"children":808},{"style":788},[809],{"type":521,"value":810}," right",{"type":516,"tag":557,"props":812,"children":813},{"style":782},[814],{"type":521,"value":815},")",{"type":516,"tag":557,"props":817,"children":818},{"style":782},[819],{"type":521,"value":820}," {\n",{"type":516,"tag":557,"props":822,"children":823},{"class":559,"line":596},[824,830,835,839,844,849,854,859,864,870,875,879],{"type":516,"tag":557,"props":825,"children":827},{"style":826},"--shiki-light:#A65E2B;--shiki-default:#A65E2B;--shiki-dark:#C99076",[828],{"type":521,"value":829},"  this",{"type":516,"tag":557,"props":831,"children":832},{"style":782},[833],{"type":521,"value":834},".",{"type":516,"tag":557,"props":836,"children":837},{"style":788},[838],{"type":521,"value":791},{"type":516,"tag":557,"props":840,"children":841},{"style":782},[842],{"type":521,"value":843}," =",{"type":516,"tag":557,"props":845,"children":846},{"style":788},[847],{"type":521,"value":848}," val",{"type":516,"tag":557,"props":850,"children":851},{"style":770},[852],{"type":521,"value":853}," ===",{"type":516,"tag":557,"props":855,"children":856},{"style":770},[857],{"type":521,"value":858}," undefined",{"type":516,"tag":557,"props":860,"children":861},{"style":770},[862],{"type":521,"value":863}," ?",{"type":516,"tag":557,"props":865,"children":867},{"style":866},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[868],{"type":521,"value":869}," 0",{"type":516,"tag":557,"props":871,"children":872},{"style":770},[873],{"type":521,"value":874}," :",{"type":516,"tag":557,"props":876,"children":877},{"style":788},[878],{"type":521,"value":848},{"type":516,"tag":557,"props":880,"children":881},{"style":782},[882],{"type":521,"value":883},";\n",{"type":516,"tag":557,"props":885,"children":886},{"class":559,"line":605},[887,891,895,900,904,908,912,916,920,925,929,933],{"type":516,"tag":557,"props":888,"children":889},{"style":826},[890],{"type":521,"value":829},{"type":516,"tag":557,"props":892,"children":893},{"style":782},[894],{"type":521,"value":834},{"type":516,"tag":557,"props":896,"children":897},{"style":788},[898],{"type":521,"value":899},"left",{"type":516,"tag":557,"props":901,"children":902},{"style":782},[903],{"type":521,"value":843},{"type":516,"tag":557,"props":905,"children":906},{"style":788},[907],{"type":521,"value":801},{"type":516,"tag":557,"props":909,"children":910},{"style":770},[911],{"type":521,"value":853},{"type":516,"tag":557,"props":913,"children":914},{"style":770},[915],{"type":521,"value":858},{"type":516,"tag":557,"props":917,"children":918},{"style":770},[919],{"type":521,"value":863},{"type":516,"tag":557,"props":921,"children":922},{"style":770},[923],{"type":521,"value":924}," null",{"type":516,"tag":557,"props":926,"children":927},{"style":770},[928],{"type":521,"value":874},{"type":516,"tag":557,"props":930,"children":931},{"style":788},[932],{"type":521,"value":801},{"type":516,"tag":557,"props":934,"children":935},{"style":782},[936],{"type":521,"value":883},{"type":516,"tag":557,"props":938,"children":939},{"class":559,"line":681},[940,944,948,953,957,961,965,969,973,977,981,985],{"type":516,"tag":557,"props":941,"children":942},{"style":826},[943],{"type":521,"value":829},{"type":516,"tag":557,"props":945,"children":946},{"style":782},[947],{"type":521,"value":834},{"type":516,"tag":557,"props":949,"children":950},{"style":788},[951],{"type":521,"value":952},"right",{"type":516,"tag":557,"props":954,"children":955},{"style":782},[956],{"type":521,"value":843},{"type":516,"tag":557,"props":958,"children":959},{"style":788},[960],{"type":521,"value":810},{"type":516,"tag":557,"props":962,"children":963},{"style":770},[964],{"type":521,"value":853},{"type":516,"tag":557,"props":966,"children":967},{"style":770},[968],{"type":521,"value":858},{"type":516,"tag":557,"props":970,"children":971},{"style":770},[972],{"type":521,"value":863},{"type":516,"tag":557,"props":974,"children":975},{"style":770},[976],{"type":521,"value":924},{"type":516,"tag":557,"props":978,"children":979},{"style":770},[980],{"type":521,"value":874},{"type":516,"tag":557,"props":982,"children":983},{"style":788},[984],{"type":521,"value":810},{"type":516,"tag":557,"props":986,"children":987},{"style":782},[988],{"type":521,"value":883},{"type":516,"tag":557,"props":990,"children":992},{"class":559,"line":991},8,[993],{"type":516,"tag":557,"props":994,"children":995},{"style":782},[996],{"type":521,"value":997},"}\n",{"type":516,"tag":557,"props":999,"children":1001},{"class":559,"line":1000},9,[1002],{"type":516,"tag":557,"props":1003,"children":1005},{"emptyLinePlaceholder":1004},true,[1006],{"type":521,"value":1007},"\n",{"type":516,"tag":557,"props":1009,"children":1011},{"class":559,"line":1010},10,[1012],{"type":516,"tag":557,"props":1013,"children":1014},{"style":745},[1015],{"type":521,"value":748},{"type":516,"tag":557,"props":1017,"children":1019},{"class":559,"line":1018},11,[1020,1025,1030,1036,1041,1047,1052],{"type":516,"tag":557,"props":1021,"children":1022},{"style":745},[1023],{"type":521,"value":1024}," * ",{"type":516,"tag":557,"props":1026,"children":1027},{"style":782},[1028],{"type":521,"value":1029},"@",{"type":516,"tag":557,"props":1031,"children":1033},{"style":1032},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[1034],{"type":521,"value":1035},"param",{"type":516,"tag":557,"props":1037,"children":1038},{"style":782},[1039],{"type":521,"value":1040}," {",{"type":516,"tag":557,"props":1042,"children":1044},{"style":1043},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[1045],{"type":521,"value":1046},"TreeNode",{"type":516,"tag":557,"props":1048,"children":1049},{"style":782},[1050],{"type":521,"value":1051},"}",{"type":516,"tag":557,"props":1053,"children":1054},{"style":788},[1055],{"type":521,"value":1056}," root\n",{"type":516,"tag":557,"props":1058,"children":1060},{"class":559,"line":1059},12,[1061,1065,1069,1074,1078,1083],{"type":516,"tag":557,"props":1062,"children":1063},{"style":745},[1064],{"type":521,"value":1024},{"type":516,"tag":557,"props":1066,"children":1067},{"style":782},[1068],{"type":521,"value":1029},{"type":516,"tag":557,"props":1070,"children":1071},{"style":1032},[1072],{"type":521,"value":1073},"return",{"type":516,"tag":557,"props":1075,"children":1076},{"style":782},[1077],{"type":521,"value":1040},{"type":516,"tag":557,"props":1079,"children":1080},{"style":1043},[1081],{"type":521,"value":1082},"number",{"type":516,"tag":557,"props":1084,"children":1085},{"style":782},[1086],{"type":521,"value":997},{"type":516,"tag":557,"props":1088,"children":1090},{"class":559,"line":1089},13,[1091],{"type":516,"tag":557,"props":1092,"children":1093},{"style":745},[1094],{"type":521,"value":764},{"type":516,"tag":557,"props":1096,"children":1098},{"class":559,"line":1097},14,[1099,1104,1109,1113,1118,1123,1127,1131],{"type":516,"tag":557,"props":1100,"children":1101},{"style":770},[1102],{"type":521,"value":1103},"var",{"type":516,"tag":557,"props":1105,"children":1106},{"style":776},[1107],{"type":521,"value":1108}," sumNumbers",{"type":516,"tag":557,"props":1110,"children":1111},{"style":782},[1112],{"type":521,"value":843},{"type":516,"tag":557,"props":1114,"children":1115},{"style":770},[1116],{"type":521,"value":1117}," function",{"type":516,"tag":557,"props":1119,"children":1120},{"style":782},[1121],{"type":521,"value":1122}," (",{"type":516,"tag":557,"props":1124,"children":1125},{"style":788},[1126],{"type":521,"value":513},{"type":516,"tag":557,"props":1128,"children":1129},{"style":782},[1130],{"type":521,"value":815},{"type":516,"tag":557,"props":1132,"children":1133},{"style":782},[1134],{"type":521,"value":820},{"type":516,"tag":557,"props":1136,"children":1138},{"class":559,"line":1137},15,[1139,1144,1149,1153,1157,1162,1166,1171,1175,1180],{"type":516,"tag":557,"props":1140,"children":1141},{"style":770},[1142],{"type":521,"value":1143},"  const",{"type":516,"tag":557,"props":1145,"children":1146},{"style":776},[1147],{"type":521,"value":1148}," dfs",{"type":516,"tag":557,"props":1150,"children":1151},{"style":782},[1152],{"type":521,"value":843},{"type":516,"tag":557,"props":1154,"children":1155},{"style":782},[1156],{"type":521,"value":1122},{"type":516,"tag":557,"props":1158,"children":1159},{"style":788},[1160],{"type":521,"value":1161},"node",{"type":516,"tag":557,"props":1163,"children":1164},{"style":782},[1165],{"type":521,"value":796},{"type":516,"tag":557,"props":1167,"children":1168},{"style":788},[1169],{"type":521,"value":1170}," prev",{"type":516,"tag":557,"props":1172,"children":1173},{"style":782},[1174],{"type":521,"value":815},{"type":516,"tag":557,"props":1176,"children":1177},{"style":782},[1178],{"type":521,"value":1179}," =>",{"type":516,"tag":557,"props":1181,"children":1182},{"style":782},[1183],{"type":521,"value":820},{"type":516,"tag":557,"props":1185,"children":1187},{"class":559,"line":1186},16,[1188,1193,1197,1201,1205,1209,1213,1218,1222],{"type":516,"tag":557,"props":1189,"children":1190},{"style":1032},[1191],{"type":521,"value":1192},"    if",{"type":516,"tag":557,"props":1194,"children":1195},{"style":782},[1196],{"type":521,"value":1122},{"type":516,"tag":557,"props":1198,"children":1199},{"style":788},[1200],{"type":521,"value":1161},{"type":516,"tag":557,"props":1202,"children":1203},{"style":770},[1204],{"type":521,"value":853},{"type":516,"tag":557,"props":1206,"children":1207},{"style":770},[1208],{"type":521,"value":924},{"type":516,"tag":557,"props":1210,"children":1211},{"style":782},[1212],{"type":521,"value":815},{"type":516,"tag":557,"props":1214,"children":1215},{"style":1032},[1216],{"type":521,"value":1217}," return",{"type":516,"tag":557,"props":1219,"children":1220},{"style":866},[1221],{"type":521,"value":869},{"type":516,"tag":557,"props":1223,"children":1224},{"style":782},[1225],{"type":521,"value":883},{"type":516,"tag":557,"props":1227,"children":1229},{"class":559,"line":1228},17,[1230,1235,1240,1244,1248,1253,1258,1263,1268,1272,1276],{"type":516,"tag":557,"props":1231,"children":1232},{"style":770},[1233],{"type":521,"value":1234},"    let",{"type":516,"tag":557,"props":1236,"children":1237},{"style":788},[1238],{"type":521,"value":1239}," sum",{"type":516,"tag":557,"props":1241,"children":1242},{"style":782},[1243],{"type":521,"value":843},{"type":516,"tag":557,"props":1245,"children":1246},{"style":788},[1247],{"type":521,"value":1170},{"type":516,"tag":557,"props":1249,"children":1250},{"style":770},[1251],{"type":521,"value":1252}," *",{"type":516,"tag":557,"props":1254,"children":1255},{"style":866},[1256],{"type":521,"value":1257}," 10",{"type":516,"tag":557,"props":1259,"children":1260},{"style":770},[1261],{"type":521,"value":1262}," +",{"type":516,"tag":557,"props":1264,"children":1265},{"style":788},[1266],{"type":521,"value":1267}," node",{"type":516,"tag":557,"props":1269,"children":1270},{"style":782},[1271],{"type":521,"value":834},{"type":516,"tag":557,"props":1273,"children":1274},{"style":788},[1275],{"type":521,"value":791},{"type":516,"tag":557,"props":1277,"children":1278},{"style":782},[1279],{"type":521,"value":883},{"type":516,"tag":557,"props":1281,"children":1283},{"class":559,"line":1282},18,[1284,1288,1292,1296,1300,1304,1308,1312,1317,1321,1325,1329,1333,1337,1341,1345,1349],{"type":516,"tag":557,"props":1285,"children":1286},{"style":1032},[1287],{"type":521,"value":1192},{"type":516,"tag":557,"props":1289,"children":1290},{"style":782},[1291],{"type":521,"value":1122},{"type":516,"tag":557,"props":1293,"children":1294},{"style":788},[1295],{"type":521,"value":1161},{"type":516,"tag":557,"props":1297,"children":1298},{"style":782},[1299],{"type":521,"value":834},{"type":516,"tag":557,"props":1301,"children":1302},{"style":788},[1303],{"type":521,"value":899},{"type":516,"tag":557,"props":1305,"children":1306},{"style":770},[1307],{"type":521,"value":853},{"type":516,"tag":557,"props":1309,"children":1310},{"style":770},[1311],{"type":521,"value":924},{"type":516,"tag":557,"props":1313,"children":1314},{"style":770},[1315],{"type":521,"value":1316}," &&",{"type":516,"tag":557,"props":1318,"children":1319},{"style":788},[1320],{"type":521,"value":1267},{"type":516,"tag":557,"props":1322,"children":1323},{"style":782},[1324],{"type":521,"value":834},{"type":516,"tag":557,"props":1326,"children":1327},{"style":788},[1328],{"type":521,"value":952},{"type":516,"tag":557,"props":1330,"children":1331},{"style":770},[1332],{"type":521,"value":853},{"type":516,"tag":557,"props":1334,"children":1335},{"style":770},[1336],{"type":521,"value":924},{"type":516,"tag":557,"props":1338,"children":1339},{"style":782},[1340],{"type":521,"value":815},{"type":516,"tag":557,"props":1342,"children":1343},{"style":1032},[1344],{"type":521,"value":1217},{"type":516,"tag":557,"props":1346,"children":1347},{"style":788},[1348],{"type":521,"value":1239},{"type":516,"tag":557,"props":1350,"children":1351},{"style":782},[1352],{"type":521,"value":883},{"type":516,"tag":557,"props":1354,"children":1356},{"class":559,"line":1355},19,[1357,1362,1366,1370,1374,1378,1382,1386,1390,1394,1398,1402,1406,1410,1414,1418,1422,1426],{"type":516,"tag":557,"props":1358,"children":1359},{"style":1032},[1360],{"type":521,"value":1361},"    return",{"type":516,"tag":557,"props":1363,"children":1364},{"style":776},[1365],{"type":521,"value":1148},{"type":516,"tag":557,"props":1367,"children":1368},{"style":782},[1369],{"type":521,"value":785},{"type":516,"tag":557,"props":1371,"children":1372},{"style":788},[1373],{"type":521,"value":1161},{"type":516,"tag":557,"props":1375,"children":1376},{"style":782},[1377],{"type":521,"value":834},{"type":516,"tag":557,"props":1379,"children":1380},{"style":788},[1381],{"type":521,"value":899},{"type":516,"tag":557,"props":1383,"children":1384},{"style":782},[1385],{"type":521,"value":796},{"type":516,"tag":557,"props":1387,"children":1388},{"style":788},[1389],{"type":521,"value":1239},{"type":516,"tag":557,"props":1391,"children":1392},{"style":782},[1393],{"type":521,"value":815},{"type":516,"tag":557,"props":1395,"children":1396},{"style":770},[1397],{"type":521,"value":1262},{"type":516,"tag":557,"props":1399,"children":1400},{"style":776},[1401],{"type":521,"value":1148},{"type":516,"tag":557,"props":1403,"children":1404},{"style":782},[1405],{"type":521,"value":785},{"type":516,"tag":557,"props":1407,"children":1408},{"style":788},[1409],{"type":521,"value":1161},{"type":516,"tag":557,"props":1411,"children":1412},{"style":782},[1413],{"type":521,"value":834},{"type":516,"tag":557,"props":1415,"children":1416},{"style":788},[1417],{"type":521,"value":952},{"type":516,"tag":557,"props":1419,"children":1420},{"style":782},[1421],{"type":521,"value":796},{"type":516,"tag":557,"props":1423,"children":1424},{"style":788},[1425],{"type":521,"value":1239},{"type":516,"tag":557,"props":1427,"children":1428},{"style":782},[1429],{"type":521,"value":1430},");\n",{"type":516,"tag":557,"props":1432,"children":1434},{"class":559,"line":1433},20,[1435],{"type":516,"tag":557,"props":1436,"children":1437},{"style":782},[1438],{"type":521,"value":1439},"  };\n",{"type":516,"tag":557,"props":1441,"children":1443},{"class":559,"line":1442},21,[1444,1449,1453,1457,1461,1465,1469],{"type":516,"tag":557,"props":1445,"children":1446},{"style":1032},[1447],{"type":521,"value":1448},"  return",{"type":516,"tag":557,"props":1450,"children":1451},{"style":776},[1452],{"type":521,"value":1148},{"type":516,"tag":557,"props":1454,"children":1455},{"style":782},[1456],{"type":521,"value":785},{"type":516,"tag":557,"props":1458,"children":1459},{"style":788},[1460],{"type":521,"value":513},{"type":516,"tag":557,"props":1462,"children":1463},{"style":782},[1464],{"type":521,"value":796},{"type":516,"tag":557,"props":1466,"children":1467},{"style":866},[1468],{"type":521,"value":869},{"type":516,"tag":557,"props":1470,"children":1471},{"style":782},[1472],{"type":521,"value":1430},{"type":516,"tag":557,"props":1474,"children":1476},{"class":559,"line":1475},22,[1477],{"type":516,"tag":557,"props":1478,"children":1479},{"style":782},[1480],{"type":521,"value":1481},"};\n",{"type":516,"tag":1483,"props":1484,"children":1485},"style",{},[1486],{"type":521,"value":1487},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":596,"depth":596,"links":1489},[1490,1491],{"id":716,"depth":569,"text":716},{"id":721,"depth":569,"text":721,"children":1492},[1493],{"id":727,"depth":578,"text":730},"markdown","content:1.algorithm:3.leetcode:3.major:129.sum-root-to-leaf-numbers.md","content","1.algorithm/3.leetcode/3.major/129.sum-root-to-leaf-numbers.md","md",[1500,1502],{"_path":165,"title":164,"description":1501},"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。",{"_path":171,"title":170,"description":1503},"给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。",1714058126796]