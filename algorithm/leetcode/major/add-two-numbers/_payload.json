[{"data":1,"prerenderedAt":1659},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-two-numbers":478,"/algorithm/leetcode/major/add-two-numbers-surround":1654},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":63,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":62,"description":482,"url":483,"body":484,"_type":1649,"_id":1650,"_source":1651,"_file":1652,"_extension":1653},"major",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":485,"children":486,"toc":1642},"root",[487,494,499,504,509,548,553,576,581,604,609,629,635,654,659,703,709,714,1636],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":488,"tag":489,"props":500,"children":501},{},[502],{"type":493,"value":503},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":488,"tag":489,"props":505,"children":506},{},[507],{"type":493,"value":508},"示例 1：",{"type":488,"tag":510,"props":511,"children":514},"pre",{"className":512,"code":513,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[515],{"type":488,"tag":516,"props":517,"children":518},"code",{"__ignoreMap":481},[519,530,539],{"type":488,"tag":520,"props":521,"children":524},"span",{"class":522,"line":523},"line",1,[525],{"type":488,"tag":520,"props":526,"children":527},{},[528],{"type":493,"value":529},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":488,"tag":520,"props":531,"children":533},{"class":522,"line":532},2,[534],{"type":488,"tag":520,"props":535,"children":536},{},[537],{"type":493,"value":538},"输出：[7,0,8]\n",{"type":488,"tag":520,"props":540,"children":542},{"class":522,"line":541},3,[543],{"type":488,"tag":520,"props":544,"children":545},{},[546],{"type":493,"value":547},"解释：342 + 465 = 807.\n",{"type":488,"tag":489,"props":549,"children":550},{},[551],{"type":493,"value":552},"示例 2：",{"type":488,"tag":510,"props":554,"children":556},{"className":512,"code":555,"language":493,"meta":481,"style":481},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[557],{"type":488,"tag":516,"props":558,"children":559},{"__ignoreMap":481},[560,568],{"type":488,"tag":520,"props":561,"children":562},{"class":522,"line":523},[563],{"type":488,"tag":520,"props":564,"children":565},{},[566],{"type":493,"value":567},"输入：l1 = [0], l2 = [0]\n",{"type":488,"tag":520,"props":569,"children":570},{"class":522,"line":532},[571],{"type":488,"tag":520,"props":572,"children":573},{},[574],{"type":493,"value":575},"输出：[0]\n",{"type":488,"tag":489,"props":577,"children":578},{},[579],{"type":493,"value":580},"示例 3：",{"type":488,"tag":510,"props":582,"children":584},{"className":512,"code":583,"language":493,"meta":481,"style":481},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[585],{"type":488,"tag":516,"props":586,"children":587},{"__ignoreMap":481},[588,596],{"type":488,"tag":520,"props":589,"children":590},{"class":522,"line":523},[591],{"type":488,"tag":520,"props":592,"children":593},{},[594],{"type":493,"value":595},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":488,"tag":520,"props":597,"children":598},{"class":522,"line":532},[599],{"type":488,"tag":520,"props":600,"children":601},{},[602],{"type":493,"value":603},"输出：[8,9,9,9,0,0,0,1]\n",{"type":488,"tag":489,"props":605,"children":606},{},[607],{"type":493,"value":608},"提示：",{"type":488,"tag":610,"props":611,"children":612},"ul",{},[613,619,624],{"type":488,"tag":614,"props":615,"children":616},"li",{},[617],{"type":493,"value":618},"每个链表中的节点数在范围 [1, 100] 内",{"type":488,"tag":614,"props":620,"children":621},{},[622],{"type":493,"value":623},"0 \u003C= Node.val \u003C= 9",{"type":488,"tag":614,"props":625,"children":626},{},[627],{"type":493,"value":628},"题目数据保证列表表示的数字不含前导零",{"type":488,"tag":630,"props":631,"children":633},"h2",{"id":632},"解题思路",[634],{"type":493,"value":632},{"type":488,"tag":636,"props":637,"children":638},"ol",{},[639,644,649],{"type":488,"tag":614,"props":640,"children":641},{},[642],{"type":493,"value":643},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":488,"tag":614,"props":645,"children":646},{},[647],{"type":493,"value":648},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":488,"tag":614,"props":650,"children":651},{},[652],{"type":493,"value":653},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":488,"tag":630,"props":655,"children":657},{"id":656},"图解",[658],{"type":493,"value":656},{"type":488,"tag":489,"props":660,"children":661},{},[662,668,673,678,683,688,693,698],{"type":488,"tag":663,"props":664,"children":667},"img",{"alt":665,"src":666},"figure_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_1.png",[],{"type":488,"tag":663,"props":669,"children":672},{"alt":670,"src":671},"figure_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_2.png",[],{"type":488,"tag":663,"props":674,"children":677},{"alt":675,"src":676},"figure_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_3.png",[],{"type":488,"tag":663,"props":679,"children":682},{"alt":680,"src":681},"figure_4","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_4.png",[],{"type":488,"tag":663,"props":684,"children":687},{"alt":685,"src":686},"figure_5","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_5.png",[],{"type":488,"tag":663,"props":689,"children":692},{"alt":690,"src":691},"figure_6","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_6.png",[],{"type":488,"tag":663,"props":694,"children":697},{"alt":695,"src":696},"figure_7","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_7.png",[],{"type":488,"tag":663,"props":699,"children":702},{"alt":700,"src":701},"figure_8","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_8.png",[],{"type":488,"tag":704,"props":705,"children":707},"h3",{"id":706},"实现",[708],{"type":493,"value":706},{"type":488,"tag":704,"props":710,"children":712},{"id":711},"构造哑节点",[713],{"type":493,"value":711},{"type":488,"tag":510,"props":715,"children":719},{"className":716,"code":717,"language":718,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[720],{"type":488,"tag":516,"props":721,"children":722},{"__ignoreMap":481},[723,732,740,748,757,766,775,784,792,835,868,898,906,962,1006,1033,1059,1069,1103,1158,1207,1249,1290,1341,1369,1377,1402,1431,1440,1465,1494,1502,1511,1519,1554,1594,1602,1627],{"type":488,"tag":520,"props":724,"children":725},{"class":522,"line":523},[726],{"type":488,"tag":520,"props":727,"children":729},{"style":728},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[730],{"type":493,"value":731},"/**\n",{"type":488,"tag":520,"props":733,"children":734},{"class":522,"line":532},[735],{"type":488,"tag":520,"props":736,"children":737},{"style":728},[738],{"type":493,"value":739}," * Definition for singly-linked list.\n",{"type":488,"tag":520,"props":741,"children":742},{"class":522,"line":541},[743],{"type":488,"tag":520,"props":744,"children":745},{"style":728},[746],{"type":493,"value":747}," * function ListNode(val) {\n",{"type":488,"tag":520,"props":749,"children":751},{"class":522,"line":750},4,[752],{"type":488,"tag":520,"props":753,"children":754},{"style":728},[755],{"type":493,"value":756}," *     this.val = val;\n",{"type":488,"tag":520,"props":758,"children":760},{"class":522,"line":759},5,[761],{"type":488,"tag":520,"props":762,"children":763},{"style":728},[764],{"type":493,"value":765}," *     this.next = null;\n",{"type":488,"tag":520,"props":767,"children":769},{"class":522,"line":768},6,[770],{"type":488,"tag":520,"props":771,"children":772},{"style":728},[773],{"type":493,"value":774}," * }\n",{"type":488,"tag":520,"props":776,"children":778},{"class":522,"line":777},7,[779],{"type":488,"tag":520,"props":780,"children":781},{"style":728},[782],{"type":493,"value":783}," */\n",{"type":488,"tag":520,"props":785,"children":787},{"class":522,"line":786},8,[788],{"type":488,"tag":520,"props":789,"children":790},{"style":728},[791],{"type":493,"value":731},{"type":488,"tag":520,"props":793,"children":795},{"class":522,"line":794},9,[796,801,807,813,818,824,829],{"type":488,"tag":520,"props":797,"children":798},{"style":728},[799],{"type":493,"value":800}," * ",{"type":488,"tag":520,"props":802,"children":804},{"style":803},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[805],{"type":493,"value":806},"@",{"type":488,"tag":520,"props":808,"children":810},{"style":809},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[811],{"type":493,"value":812},"param",{"type":488,"tag":520,"props":814,"children":815},{"style":803},[816],{"type":493,"value":817}," {",{"type":488,"tag":520,"props":819,"children":821},{"style":820},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[822],{"type":493,"value":823},"ListNode",{"type":488,"tag":520,"props":825,"children":826},{"style":803},[827],{"type":493,"value":828},"}",{"type":488,"tag":520,"props":830,"children":832},{"style":831},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[833],{"type":493,"value":834}," l1\n",{"type":488,"tag":520,"props":836,"children":838},{"class":522,"line":837},10,[839,843,847,851,855,859,863],{"type":488,"tag":520,"props":840,"children":841},{"style":728},[842],{"type":493,"value":800},{"type":488,"tag":520,"props":844,"children":845},{"style":803},[846],{"type":493,"value":806},{"type":488,"tag":520,"props":848,"children":849},{"style":809},[850],{"type":493,"value":812},{"type":488,"tag":520,"props":852,"children":853},{"style":803},[854],{"type":493,"value":817},{"type":488,"tag":520,"props":856,"children":857},{"style":820},[858],{"type":493,"value":823},{"type":488,"tag":520,"props":860,"children":861},{"style":803},[862],{"type":493,"value":828},{"type":488,"tag":520,"props":864,"children":865},{"style":831},[866],{"type":493,"value":867}," l2\n",{"type":488,"tag":520,"props":869,"children":871},{"class":522,"line":870},11,[872,876,880,885,889,893],{"type":488,"tag":520,"props":873,"children":874},{"style":728},[875],{"type":493,"value":800},{"type":488,"tag":520,"props":877,"children":878},{"style":803},[879],{"type":493,"value":806},{"type":488,"tag":520,"props":881,"children":882},{"style":809},[883],{"type":493,"value":884},"return",{"type":488,"tag":520,"props":886,"children":887},{"style":803},[888],{"type":493,"value":817},{"type":488,"tag":520,"props":890,"children":891},{"style":820},[892],{"type":493,"value":823},{"type":488,"tag":520,"props":894,"children":895},{"style":803},[896],{"type":493,"value":897},"}\n",{"type":488,"tag":520,"props":899,"children":901},{"class":522,"line":900},12,[902],{"type":488,"tag":520,"props":903,"children":904},{"style":728},[905],{"type":493,"value":783},{"type":488,"tag":520,"props":907,"children":909},{"class":522,"line":908},13,[910,916,922,927,932,937,942,947,952,957],{"type":488,"tag":520,"props":911,"children":913},{"style":912},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[914],{"type":493,"value":915},"var",{"type":488,"tag":520,"props":917,"children":919},{"style":918},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[920],{"type":493,"value":921}," addTwoNumbers",{"type":488,"tag":520,"props":923,"children":924},{"style":803},[925],{"type":493,"value":926}," =",{"type":488,"tag":520,"props":928,"children":929},{"style":912},[930],{"type":493,"value":931}," function",{"type":488,"tag":520,"props":933,"children":934},{"style":803},[935],{"type":493,"value":936}," (",{"type":488,"tag":520,"props":938,"children":939},{"style":831},[940],{"type":493,"value":941},"l1",{"type":488,"tag":520,"props":943,"children":944},{"style":803},[945],{"type":493,"value":946},",",{"type":488,"tag":520,"props":948,"children":949},{"style":831},[950],{"type":493,"value":951}," l2",{"type":488,"tag":520,"props":953,"children":954},{"style":803},[955],{"type":493,"value":956},")",{"type":488,"tag":520,"props":958,"children":959},{"style":803},[960],{"type":493,"value":961}," {\n",{"type":488,"tag":520,"props":963,"children":965},{"class":522,"line":964},14,[966,971,976,980,985,990,995,1001],{"type":488,"tag":520,"props":967,"children":968},{"style":912},[969],{"type":493,"value":970},"  const",{"type":488,"tag":520,"props":972,"children":973},{"style":831},[974],{"type":493,"value":975}," node",{"type":488,"tag":520,"props":977,"children":978},{"style":803},[979],{"type":493,"value":926},{"type":488,"tag":520,"props":981,"children":982},{"style":912},[983],{"type":493,"value":984}," new",{"type":488,"tag":520,"props":986,"children":987},{"style":918},[988],{"type":493,"value":989}," ListNode",{"type":488,"tag":520,"props":991,"children":992},{"style":803},[993],{"type":493,"value":994},"(",{"type":488,"tag":520,"props":996,"children":998},{"style":997},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[999],{"type":493,"value":1000},"0",{"type":488,"tag":520,"props":1002,"children":1003},{"style":803},[1004],{"type":493,"value":1005},");\n",{"type":488,"tag":520,"props":1007,"children":1009},{"class":522,"line":1008},15,[1010,1015,1020,1024,1028],{"type":488,"tag":520,"props":1011,"children":1012},{"style":912},[1013],{"type":493,"value":1014},"  let",{"type":488,"tag":520,"props":1016,"children":1017},{"style":831},[1018],{"type":493,"value":1019}," current",{"type":488,"tag":520,"props":1021,"children":1022},{"style":803},[1023],{"type":493,"value":926},{"type":488,"tag":520,"props":1025,"children":1026},{"style":831},[1027],{"type":493,"value":975},{"type":488,"tag":520,"props":1029,"children":1030},{"style":803},[1031],{"type":493,"value":1032},";\n",{"type":488,"tag":520,"props":1034,"children":1036},{"class":522,"line":1035},16,[1037,1041,1046,1050,1055],{"type":488,"tag":520,"props":1038,"children":1039},{"style":912},[1040],{"type":493,"value":1014},{"type":488,"tag":520,"props":1042,"children":1043},{"style":831},[1044],{"type":493,"value":1045}," curry",{"type":488,"tag":520,"props":1047,"children":1048},{"style":803},[1049],{"type":493,"value":926},{"type":488,"tag":520,"props":1051,"children":1052},{"style":997},[1053],{"type":493,"value":1054}," 0",{"type":488,"tag":520,"props":1056,"children":1057},{"style":803},[1058],{"type":493,"value":1032},{"type":488,"tag":520,"props":1060,"children":1062},{"class":522,"line":1061},17,[1063],{"type":488,"tag":520,"props":1064,"children":1066},{"emptyLinePlaceholder":1065},true,[1067],{"type":493,"value":1068},"\n",{"type":488,"tag":520,"props":1070,"children":1072},{"class":522,"line":1071},18,[1073,1078,1082,1086,1091,1095,1099],{"type":488,"tag":520,"props":1074,"children":1075},{"style":809},[1076],{"type":493,"value":1077},"  while",{"type":488,"tag":520,"props":1079,"children":1080},{"style":803},[1081],{"type":493,"value":936},{"type":488,"tag":520,"props":1083,"children":1084},{"style":831},[1085],{"type":493,"value":941},{"type":488,"tag":520,"props":1087,"children":1088},{"style":912},[1089],{"type":493,"value":1090}," ||",{"type":488,"tag":520,"props":1092,"children":1093},{"style":831},[1094],{"type":493,"value":951},{"type":488,"tag":520,"props":1096,"children":1097},{"style":803},[1098],{"type":493,"value":956},{"type":488,"tag":520,"props":1100,"children":1101},{"style":803},[1102],{"type":493,"value":961},{"type":488,"tag":520,"props":1104,"children":1106},{"class":522,"line":1105},19,[1107,1112,1117,1121,1126,1131,1135,1140,1145,1150,1154],{"type":488,"tag":520,"props":1108,"children":1109},{"style":912},[1110],{"type":493,"value":1111},"    const",{"type":488,"tag":520,"props":1113,"children":1114},{"style":831},[1115],{"type":493,"value":1116}," n1",{"type":488,"tag":520,"props":1118,"children":1119},{"style":803},[1120],{"type":493,"value":926},{"type":488,"tag":520,"props":1122,"children":1123},{"style":831},[1124],{"type":493,"value":1125}," l1",{"type":488,"tag":520,"props":1127,"children":1128},{"style":912},[1129],{"type":493,"value":1130}," ?",{"type":488,"tag":520,"props":1132,"children":1133},{"style":831},[1134],{"type":493,"value":1125},{"type":488,"tag":520,"props":1136,"children":1137},{"style":803},[1138],{"type":493,"value":1139},".",{"type":488,"tag":520,"props":1141,"children":1142},{"style":831},[1143],{"type":493,"value":1144},"val",{"type":488,"tag":520,"props":1146,"children":1147},{"style":912},[1148],{"type":493,"value":1149}," :",{"type":488,"tag":520,"props":1151,"children":1152},{"style":997},[1153],{"type":493,"value":1054},{"type":488,"tag":520,"props":1155,"children":1156},{"style":803},[1157],{"type":493,"value":1032},{"type":488,"tag":520,"props":1159,"children":1161},{"class":522,"line":1160},20,[1162,1166,1171,1175,1179,1183,1187,1191,1195,1199,1203],{"type":488,"tag":520,"props":1163,"children":1164},{"style":912},[1165],{"type":493,"value":1111},{"type":488,"tag":520,"props":1167,"children":1168},{"style":831},[1169],{"type":493,"value":1170}," n2",{"type":488,"tag":520,"props":1172,"children":1173},{"style":803},[1174],{"type":493,"value":926},{"type":488,"tag":520,"props":1176,"children":1177},{"style":831},[1178],{"type":493,"value":951},{"type":488,"tag":520,"props":1180,"children":1181},{"style":912},[1182],{"type":493,"value":1130},{"type":488,"tag":520,"props":1184,"children":1185},{"style":831},[1186],{"type":493,"value":951},{"type":488,"tag":520,"props":1188,"children":1189},{"style":803},[1190],{"type":493,"value":1139},{"type":488,"tag":520,"props":1192,"children":1193},{"style":831},[1194],{"type":493,"value":1144},{"type":488,"tag":520,"props":1196,"children":1197},{"style":912},[1198],{"type":493,"value":1149},{"type":488,"tag":520,"props":1200,"children":1201},{"style":997},[1202],{"type":493,"value":1054},{"type":488,"tag":520,"props":1204,"children":1205},{"style":803},[1206],{"type":493,"value":1032},{"type":488,"tag":520,"props":1208,"children":1210},{"class":522,"line":1209},21,[1211,1215,1220,1224,1228,1233,1237,1241,1245],{"type":488,"tag":520,"props":1212,"children":1213},{"style":912},[1214],{"type":493,"value":1111},{"type":488,"tag":520,"props":1216,"children":1217},{"style":831},[1218],{"type":493,"value":1219}," sum",{"type":488,"tag":520,"props":1221,"children":1222},{"style":803},[1223],{"type":493,"value":926},{"type":488,"tag":520,"props":1225,"children":1226},{"style":831},[1227],{"type":493,"value":1116},{"type":488,"tag":520,"props":1229,"children":1230},{"style":912},[1231],{"type":493,"value":1232}," +",{"type":488,"tag":520,"props":1234,"children":1235},{"style":831},[1236],{"type":493,"value":1170},{"type":488,"tag":520,"props":1238,"children":1239},{"style":912},[1240],{"type":493,"value":1232},{"type":488,"tag":520,"props":1242,"children":1243},{"style":831},[1244],{"type":493,"value":1045},{"type":488,"tag":520,"props":1246,"children":1247},{"style":803},[1248],{"type":493,"value":1032},{"type":488,"tag":520,"props":1250,"children":1252},{"class":522,"line":1251},22,[1253,1258,1262,1267,1271,1276,1281,1286],{"type":488,"tag":520,"props":1254,"children":1255},{"style":831},[1256],{"type":493,"value":1257},"    curry",{"type":488,"tag":520,"props":1259,"children":1260},{"style":803},[1261],{"type":493,"value":926},{"type":488,"tag":520,"props":1263,"children":1264},{"style":918},[1265],{"type":493,"value":1266}," parseInt",{"type":488,"tag":520,"props":1268,"children":1269},{"style":803},[1270],{"type":493,"value":994},{"type":488,"tag":520,"props":1272,"children":1273},{"style":831},[1274],{"type":493,"value":1275},"sum",{"type":488,"tag":520,"props":1277,"children":1278},{"style":912},[1279],{"type":493,"value":1280}," /",{"type":488,"tag":520,"props":1282,"children":1283},{"style":997},[1284],{"type":493,"value":1285}," 10",{"type":488,"tag":520,"props":1287,"children":1288},{"style":803},[1289],{"type":493,"value":1005},{"type":488,"tag":520,"props":1291,"children":1293},{"class":522,"line":1292},23,[1294,1299,1303,1308,1312,1316,1320,1324,1328,1333,1337],{"type":488,"tag":520,"props":1295,"children":1296},{"style":831},[1297],{"type":493,"value":1298},"    current",{"type":488,"tag":520,"props":1300,"children":1301},{"style":803},[1302],{"type":493,"value":1139},{"type":488,"tag":520,"props":1304,"children":1305},{"style":831},[1306],{"type":493,"value":1307},"next",{"type":488,"tag":520,"props":1309,"children":1310},{"style":803},[1311],{"type":493,"value":926},{"type":488,"tag":520,"props":1313,"children":1314},{"style":912},[1315],{"type":493,"value":984},{"type":488,"tag":520,"props":1317,"children":1318},{"style":918},[1319],{"type":493,"value":989},{"type":488,"tag":520,"props":1321,"children":1322},{"style":803},[1323],{"type":493,"value":994},{"type":488,"tag":520,"props":1325,"children":1326},{"style":831},[1327],{"type":493,"value":1275},{"type":488,"tag":520,"props":1329,"children":1330},{"style":912},[1331],{"type":493,"value":1332}," %",{"type":488,"tag":520,"props":1334,"children":1335},{"style":997},[1336],{"type":493,"value":1285},{"type":488,"tag":520,"props":1338,"children":1339},{"style":803},[1340],{"type":493,"value":1005},{"type":488,"tag":520,"props":1342,"children":1344},{"class":522,"line":1343},24,[1345,1349,1353,1357,1361,1365],{"type":488,"tag":520,"props":1346,"children":1347},{"style":831},[1348],{"type":493,"value":1298},{"type":488,"tag":520,"props":1350,"children":1351},{"style":803},[1352],{"type":493,"value":926},{"type":488,"tag":520,"props":1354,"children":1355},{"style":831},[1356],{"type":493,"value":1019},{"type":488,"tag":520,"props":1358,"children":1359},{"style":803},[1360],{"type":493,"value":1139},{"type":488,"tag":520,"props":1362,"children":1363},{"style":831},[1364],{"type":493,"value":1307},{"type":488,"tag":520,"props":1366,"children":1367},{"style":803},[1368],{"type":493,"value":1032},{"type":488,"tag":520,"props":1370,"children":1372},{"class":522,"line":1371},25,[1373],{"type":488,"tag":520,"props":1374,"children":1375},{"emptyLinePlaceholder":1065},[1376],{"type":493,"value":1068},{"type":488,"tag":520,"props":1378,"children":1380},{"class":522,"line":1379},26,[1381,1386,1390,1394,1398],{"type":488,"tag":520,"props":1382,"children":1383},{"style":809},[1384],{"type":493,"value":1385},"    if",{"type":488,"tag":520,"props":1387,"children":1388},{"style":803},[1389],{"type":493,"value":936},{"type":488,"tag":520,"props":1391,"children":1392},{"style":831},[1393],{"type":493,"value":941},{"type":488,"tag":520,"props":1395,"children":1396},{"style":803},[1397],{"type":493,"value":956},{"type":488,"tag":520,"props":1399,"children":1400},{"style":803},[1401],{"type":493,"value":961},{"type":488,"tag":520,"props":1403,"children":1405},{"class":522,"line":1404},27,[1406,1411,1415,1419,1423,1427],{"type":488,"tag":520,"props":1407,"children":1408},{"style":831},[1409],{"type":493,"value":1410},"      l1",{"type":488,"tag":520,"props":1412,"children":1413},{"style":803},[1414],{"type":493,"value":926},{"type":488,"tag":520,"props":1416,"children":1417},{"style":831},[1418],{"type":493,"value":1125},{"type":488,"tag":520,"props":1420,"children":1421},{"style":803},[1422],{"type":493,"value":1139},{"type":488,"tag":520,"props":1424,"children":1425},{"style":831},[1426],{"type":493,"value":1307},{"type":488,"tag":520,"props":1428,"children":1429},{"style":803},[1430],{"type":493,"value":1032},{"type":488,"tag":520,"props":1432,"children":1434},{"class":522,"line":1433},28,[1435],{"type":488,"tag":520,"props":1436,"children":1437},{"style":803},[1438],{"type":493,"value":1439},"    }\n",{"type":488,"tag":520,"props":1441,"children":1443},{"class":522,"line":1442},29,[1444,1448,1452,1457,1461],{"type":488,"tag":520,"props":1445,"children":1446},{"style":809},[1447],{"type":493,"value":1385},{"type":488,"tag":520,"props":1449,"children":1450},{"style":803},[1451],{"type":493,"value":936},{"type":488,"tag":520,"props":1453,"children":1454},{"style":831},[1455],{"type":493,"value":1456},"l2",{"type":488,"tag":520,"props":1458,"children":1459},{"style":803},[1460],{"type":493,"value":956},{"type":488,"tag":520,"props":1462,"children":1463},{"style":803},[1464],{"type":493,"value":961},{"type":488,"tag":520,"props":1466,"children":1468},{"class":522,"line":1467},30,[1469,1474,1478,1482,1486,1490],{"type":488,"tag":520,"props":1470,"children":1471},{"style":831},[1472],{"type":493,"value":1473},"      l2",{"type":488,"tag":520,"props":1475,"children":1476},{"style":803},[1477],{"type":493,"value":926},{"type":488,"tag":520,"props":1479,"children":1480},{"style":831},[1481],{"type":493,"value":951},{"type":488,"tag":520,"props":1483,"children":1484},{"style":803},[1485],{"type":493,"value":1139},{"type":488,"tag":520,"props":1487,"children":1488},{"style":831},[1489],{"type":493,"value":1307},{"type":488,"tag":520,"props":1491,"children":1492},{"style":803},[1493],{"type":493,"value":1032},{"type":488,"tag":520,"props":1495,"children":1497},{"class":522,"line":1496},31,[1498],{"type":488,"tag":520,"props":1499,"children":1500},{"style":803},[1501],{"type":493,"value":1439},{"type":488,"tag":520,"props":1503,"children":1505},{"class":522,"line":1504},32,[1506],{"type":488,"tag":520,"props":1507,"children":1508},{"style":803},[1509],{"type":493,"value":1510},"  }\n",{"type":488,"tag":520,"props":1512,"children":1514},{"class":522,"line":1513},33,[1515],{"type":488,"tag":520,"props":1516,"children":1517},{"emptyLinePlaceholder":1065},[1518],{"type":493,"value":1068},{"type":488,"tag":520,"props":1520,"children":1522},{"class":522,"line":1521},34,[1523,1528,1532,1537,1542,1546,1550],{"type":488,"tag":520,"props":1524,"children":1525},{"style":809},[1526],{"type":493,"value":1527},"  if",{"type":488,"tag":520,"props":1529,"children":1530},{"style":803},[1531],{"type":493,"value":936},{"type":488,"tag":520,"props":1533,"children":1534},{"style":831},[1535],{"type":493,"value":1536},"curry",{"type":488,"tag":520,"props":1538,"children":1539},{"style":803},[1540],{"type":493,"value":1541}," >",{"type":488,"tag":520,"props":1543,"children":1544},{"style":997},[1545],{"type":493,"value":1054},{"type":488,"tag":520,"props":1547,"children":1548},{"style":803},[1549],{"type":493,"value":956},{"type":488,"tag":520,"props":1551,"children":1552},{"style":803},[1553],{"type":493,"value":961},{"type":488,"tag":520,"props":1555,"children":1557},{"class":522,"line":1556},35,[1558,1562,1566,1570,1574,1578,1582,1586,1590],{"type":488,"tag":520,"props":1559,"children":1560},{"style":831},[1561],{"type":493,"value":1298},{"type":488,"tag":520,"props":1563,"children":1564},{"style":803},[1565],{"type":493,"value":1139},{"type":488,"tag":520,"props":1567,"children":1568},{"style":831},[1569],{"type":493,"value":1307},{"type":488,"tag":520,"props":1571,"children":1572},{"style":803},[1573],{"type":493,"value":926},{"type":488,"tag":520,"props":1575,"children":1576},{"style":912},[1577],{"type":493,"value":984},{"type":488,"tag":520,"props":1579,"children":1580},{"style":918},[1581],{"type":493,"value":989},{"type":488,"tag":520,"props":1583,"children":1584},{"style":803},[1585],{"type":493,"value":994},{"type":488,"tag":520,"props":1587,"children":1588},{"style":831},[1589],{"type":493,"value":1536},{"type":488,"tag":520,"props":1591,"children":1592},{"style":803},[1593],{"type":493,"value":1005},{"type":488,"tag":520,"props":1595,"children":1597},{"class":522,"line":1596},36,[1598],{"type":488,"tag":520,"props":1599,"children":1600},{"style":803},[1601],{"type":493,"value":1510},{"type":488,"tag":520,"props":1603,"children":1605},{"class":522,"line":1604},37,[1606,1611,1615,1619,1623],{"type":488,"tag":520,"props":1607,"children":1608},{"style":809},[1609],{"type":493,"value":1610},"  return",{"type":488,"tag":520,"props":1612,"children":1613},{"style":831},[1614],{"type":493,"value":975},{"type":488,"tag":520,"props":1616,"children":1617},{"style":803},[1618],{"type":493,"value":1139},{"type":488,"tag":520,"props":1620,"children":1621},{"style":831},[1622],{"type":493,"value":1307},{"type":488,"tag":520,"props":1624,"children":1625},{"style":803},[1626],{"type":493,"value":1032},{"type":488,"tag":520,"props":1628,"children":1630},{"class":522,"line":1629},38,[1631],{"type":488,"tag":520,"props":1632,"children":1633},{"style":803},[1634],{"type":493,"value":1635},"};\n",{"type":488,"tag":1637,"props":1638,"children":1639},"style",{},[1640],{"type":493,"value":1641},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":759,"depth":759,"links":1643},[1644,1645],{"id":632,"depth":532,"text":632},{"id":656,"depth":532,"text":656,"children":1646},[1647,1648],{"id":706,"depth":541,"text":706},{"id":711,"depth":541,"text":711},"markdown","content:1.algorithm:3.leetcode:3.major:2.add-two-numbers.md","content","1.algorithm/3.leetcode/3.major/2.add-two-numbers.md","md",[1655,1657],{"_path":60,"title":59,"description":1656},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":66,"title":65,"description":1658},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1714046222588]