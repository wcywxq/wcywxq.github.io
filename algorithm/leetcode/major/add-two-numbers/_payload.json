[{"data":1,"prerenderedAt":1732},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-two-numbers":551,"/algorithm/leetcode/major/add-two-numbers-surround":1727},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":63,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":62,"description":555,"url":556,"body":557,"_type":1722,"_id":1723,"_source":1724,"_file":1725,"_extension":1726},"major",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":558,"children":559,"toc":1715},"root",[560,567,572,577,582,621,626,649,654,677,682,702,708,727,732,776,782,787,1709],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":566,"value":576},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":561,"tag":562,"props":578,"children":579},{},[580],{"type":566,"value":581},"示例 1：",{"type":561,"tag":583,"props":584,"children":587},"pre",{"className":585,"code":586,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[588],{"type":561,"tag":589,"props":590,"children":591},"code",{"__ignoreMap":554},[592,603,612],{"type":561,"tag":593,"props":594,"children":597},"span",{"class":595,"line":596},"line",1,[598],{"type":561,"tag":593,"props":599,"children":600},{},[601],{"type":566,"value":602},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":561,"tag":593,"props":604,"children":606},{"class":595,"line":605},2,[607],{"type":561,"tag":593,"props":608,"children":609},{},[610],{"type":566,"value":611},"输出：[7,0,8]\n",{"type":561,"tag":593,"props":613,"children":615},{"class":595,"line":614},3,[616],{"type":561,"tag":593,"props":617,"children":618},{},[619],{"type":566,"value":620},"解释：342 + 465 = 807.\n",{"type":561,"tag":562,"props":622,"children":623},{},[624],{"type":566,"value":625},"示例 2：",{"type":561,"tag":583,"props":627,"children":629},{"className":585,"code":628,"language":566,"meta":554,"style":554},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[630],{"type":561,"tag":589,"props":631,"children":632},{"__ignoreMap":554},[633,641],{"type":561,"tag":593,"props":634,"children":635},{"class":595,"line":596},[636],{"type":561,"tag":593,"props":637,"children":638},{},[639],{"type":566,"value":640},"输入：l1 = [0], l2 = [0]\n",{"type":561,"tag":593,"props":642,"children":643},{"class":595,"line":605},[644],{"type":561,"tag":593,"props":645,"children":646},{},[647],{"type":566,"value":648},"输出：[0]\n",{"type":561,"tag":562,"props":650,"children":651},{},[652],{"type":566,"value":653},"示例 3：",{"type":561,"tag":583,"props":655,"children":657},{"className":585,"code":656,"language":566,"meta":554,"style":554},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[658],{"type":561,"tag":589,"props":659,"children":660},{"__ignoreMap":554},[661,669],{"type":561,"tag":593,"props":662,"children":663},{"class":595,"line":596},[664],{"type":561,"tag":593,"props":665,"children":666},{},[667],{"type":566,"value":668},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":561,"tag":593,"props":670,"children":671},{"class":595,"line":605},[672],{"type":561,"tag":593,"props":673,"children":674},{},[675],{"type":566,"value":676},"输出：[8,9,9,9,0,0,0,1]\n",{"type":561,"tag":562,"props":678,"children":679},{},[680],{"type":566,"value":681},"提示：",{"type":561,"tag":683,"props":684,"children":685},"ul",{},[686,692,697],{"type":561,"tag":687,"props":688,"children":689},"li",{},[690],{"type":566,"value":691},"每个链表中的节点数在范围 [1, 100] 内",{"type":561,"tag":687,"props":693,"children":694},{},[695],{"type":566,"value":696},"0 \u003C= Node.val \u003C= 9",{"type":561,"tag":687,"props":698,"children":699},{},[700],{"type":566,"value":701},"题目数据保证列表表示的数字不含前导零",{"type":561,"tag":703,"props":704,"children":706},"h2",{"id":705},"解题思路",[707],{"type":566,"value":705},{"type":561,"tag":709,"props":710,"children":711},"ol",{},[712,717,722],{"type":561,"tag":687,"props":713,"children":714},{},[715],{"type":566,"value":716},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":561,"tag":687,"props":718,"children":719},{},[720],{"type":566,"value":721},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":561,"tag":687,"props":723,"children":724},{},[725],{"type":566,"value":726},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":561,"tag":703,"props":728,"children":730},{"id":729},"图解",[731],{"type":566,"value":729},{"type":561,"tag":562,"props":733,"children":734},{},[735,741,746,751,756,761,766,771],{"type":561,"tag":736,"props":737,"children":740},"img",{"alt":738,"src":739},"figure_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_1.png",[],{"type":561,"tag":736,"props":742,"children":745},{"alt":743,"src":744},"figure_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_2.png",[],{"type":561,"tag":736,"props":747,"children":750},{"alt":748,"src":749},"figure_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_3.png",[],{"type":561,"tag":736,"props":752,"children":755},{"alt":753,"src":754},"figure_4","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_4.png",[],{"type":561,"tag":736,"props":757,"children":760},{"alt":758,"src":759},"figure_5","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_5.png",[],{"type":561,"tag":736,"props":762,"children":765},{"alt":763,"src":764},"figure_6","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_6.png",[],{"type":561,"tag":736,"props":767,"children":770},{"alt":768,"src":769},"figure_7","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_7.png",[],{"type":561,"tag":736,"props":772,"children":775},{"alt":773,"src":774},"figure_8","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_8.png",[],{"type":561,"tag":777,"props":778,"children":780},"h3",{"id":779},"实现",[781],{"type":566,"value":779},{"type":561,"tag":777,"props":783,"children":785},{"id":784},"构造哑节点",[786],{"type":566,"value":784},{"type":561,"tag":583,"props":788,"children":792},{"className":789,"code":790,"language":791,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[793],{"type":561,"tag":589,"props":794,"children":795},{"__ignoreMap":554},[796,805,813,821,830,839,848,857,865,908,941,971,979,1035,1079,1106,1132,1142,1176,1231,1280,1322,1363,1414,1442,1450,1475,1504,1513,1538,1567,1575,1584,1592,1627,1667,1675,1700],{"type":561,"tag":593,"props":797,"children":798},{"class":595,"line":596},[799],{"type":561,"tag":593,"props":800,"children":802},{"style":801},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[803],{"type":566,"value":804},"/**\n",{"type":561,"tag":593,"props":806,"children":807},{"class":595,"line":605},[808],{"type":561,"tag":593,"props":809,"children":810},{"style":801},[811],{"type":566,"value":812}," * Definition for singly-linked list.\n",{"type":561,"tag":593,"props":814,"children":815},{"class":595,"line":614},[816],{"type":561,"tag":593,"props":817,"children":818},{"style":801},[819],{"type":566,"value":820}," * function ListNode(val) {\n",{"type":561,"tag":593,"props":822,"children":824},{"class":595,"line":823},4,[825],{"type":561,"tag":593,"props":826,"children":827},{"style":801},[828],{"type":566,"value":829}," *     this.val = val;\n",{"type":561,"tag":593,"props":831,"children":833},{"class":595,"line":832},5,[834],{"type":561,"tag":593,"props":835,"children":836},{"style":801},[837],{"type":566,"value":838}," *     this.next = null;\n",{"type":561,"tag":593,"props":840,"children":842},{"class":595,"line":841},6,[843],{"type":561,"tag":593,"props":844,"children":845},{"style":801},[846],{"type":566,"value":847}," * }\n",{"type":561,"tag":593,"props":849,"children":851},{"class":595,"line":850},7,[852],{"type":561,"tag":593,"props":853,"children":854},{"style":801},[855],{"type":566,"value":856}," */\n",{"type":561,"tag":593,"props":858,"children":860},{"class":595,"line":859},8,[861],{"type":561,"tag":593,"props":862,"children":863},{"style":801},[864],{"type":566,"value":804},{"type":561,"tag":593,"props":866,"children":868},{"class":595,"line":867},9,[869,874,880,886,891,897,902],{"type":561,"tag":593,"props":870,"children":871},{"style":801},[872],{"type":566,"value":873}," * ",{"type":561,"tag":593,"props":875,"children":877},{"style":876},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[878],{"type":566,"value":879},"@",{"type":561,"tag":593,"props":881,"children":883},{"style":882},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[884],{"type":566,"value":885},"param",{"type":561,"tag":593,"props":887,"children":888},{"style":876},[889],{"type":566,"value":890}," {",{"type":561,"tag":593,"props":892,"children":894},{"style":893},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[895],{"type":566,"value":896},"ListNode",{"type":561,"tag":593,"props":898,"children":899},{"style":876},[900],{"type":566,"value":901},"}",{"type":561,"tag":593,"props":903,"children":905},{"style":904},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[906],{"type":566,"value":907}," l1\n",{"type":561,"tag":593,"props":909,"children":911},{"class":595,"line":910},10,[912,916,920,924,928,932,936],{"type":561,"tag":593,"props":913,"children":914},{"style":801},[915],{"type":566,"value":873},{"type":561,"tag":593,"props":917,"children":918},{"style":876},[919],{"type":566,"value":879},{"type":561,"tag":593,"props":921,"children":922},{"style":882},[923],{"type":566,"value":885},{"type":561,"tag":593,"props":925,"children":926},{"style":876},[927],{"type":566,"value":890},{"type":561,"tag":593,"props":929,"children":930},{"style":893},[931],{"type":566,"value":896},{"type":561,"tag":593,"props":933,"children":934},{"style":876},[935],{"type":566,"value":901},{"type":561,"tag":593,"props":937,"children":938},{"style":904},[939],{"type":566,"value":940}," l2\n",{"type":561,"tag":593,"props":942,"children":944},{"class":595,"line":943},11,[945,949,953,958,962,966],{"type":561,"tag":593,"props":946,"children":947},{"style":801},[948],{"type":566,"value":873},{"type":561,"tag":593,"props":950,"children":951},{"style":876},[952],{"type":566,"value":879},{"type":561,"tag":593,"props":954,"children":955},{"style":882},[956],{"type":566,"value":957},"return",{"type":561,"tag":593,"props":959,"children":960},{"style":876},[961],{"type":566,"value":890},{"type":561,"tag":593,"props":963,"children":964},{"style":893},[965],{"type":566,"value":896},{"type":561,"tag":593,"props":967,"children":968},{"style":876},[969],{"type":566,"value":970},"}\n",{"type":561,"tag":593,"props":972,"children":974},{"class":595,"line":973},12,[975],{"type":561,"tag":593,"props":976,"children":977},{"style":801},[978],{"type":566,"value":856},{"type":561,"tag":593,"props":980,"children":982},{"class":595,"line":981},13,[983,989,995,1000,1005,1010,1015,1020,1025,1030],{"type":561,"tag":593,"props":984,"children":986},{"style":985},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[987],{"type":566,"value":988},"var",{"type":561,"tag":593,"props":990,"children":992},{"style":991},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[993],{"type":566,"value":994}," addTwoNumbers",{"type":561,"tag":593,"props":996,"children":997},{"style":876},[998],{"type":566,"value":999}," =",{"type":561,"tag":593,"props":1001,"children":1002},{"style":985},[1003],{"type":566,"value":1004}," function",{"type":561,"tag":593,"props":1006,"children":1007},{"style":876},[1008],{"type":566,"value":1009}," (",{"type":561,"tag":593,"props":1011,"children":1012},{"style":904},[1013],{"type":566,"value":1014},"l1",{"type":561,"tag":593,"props":1016,"children":1017},{"style":876},[1018],{"type":566,"value":1019},",",{"type":561,"tag":593,"props":1021,"children":1022},{"style":904},[1023],{"type":566,"value":1024}," l2",{"type":561,"tag":593,"props":1026,"children":1027},{"style":876},[1028],{"type":566,"value":1029},")",{"type":561,"tag":593,"props":1031,"children":1032},{"style":876},[1033],{"type":566,"value":1034}," {\n",{"type":561,"tag":593,"props":1036,"children":1038},{"class":595,"line":1037},14,[1039,1044,1049,1053,1058,1063,1068,1074],{"type":561,"tag":593,"props":1040,"children":1041},{"style":985},[1042],{"type":566,"value":1043},"  const",{"type":561,"tag":593,"props":1045,"children":1046},{"style":904},[1047],{"type":566,"value":1048}," node",{"type":561,"tag":593,"props":1050,"children":1051},{"style":876},[1052],{"type":566,"value":999},{"type":561,"tag":593,"props":1054,"children":1055},{"style":985},[1056],{"type":566,"value":1057}," new",{"type":561,"tag":593,"props":1059,"children":1060},{"style":991},[1061],{"type":566,"value":1062}," ListNode",{"type":561,"tag":593,"props":1064,"children":1065},{"style":876},[1066],{"type":566,"value":1067},"(",{"type":561,"tag":593,"props":1069,"children":1071},{"style":1070},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1072],{"type":566,"value":1073},"0",{"type":561,"tag":593,"props":1075,"children":1076},{"style":876},[1077],{"type":566,"value":1078},");\n",{"type":561,"tag":593,"props":1080,"children":1082},{"class":595,"line":1081},15,[1083,1088,1093,1097,1101],{"type":561,"tag":593,"props":1084,"children":1085},{"style":985},[1086],{"type":566,"value":1087},"  let",{"type":561,"tag":593,"props":1089,"children":1090},{"style":904},[1091],{"type":566,"value":1092}," current",{"type":561,"tag":593,"props":1094,"children":1095},{"style":876},[1096],{"type":566,"value":999},{"type":561,"tag":593,"props":1098,"children":1099},{"style":904},[1100],{"type":566,"value":1048},{"type":561,"tag":593,"props":1102,"children":1103},{"style":876},[1104],{"type":566,"value":1105},";\n",{"type":561,"tag":593,"props":1107,"children":1109},{"class":595,"line":1108},16,[1110,1114,1119,1123,1128],{"type":561,"tag":593,"props":1111,"children":1112},{"style":985},[1113],{"type":566,"value":1087},{"type":561,"tag":593,"props":1115,"children":1116},{"style":904},[1117],{"type":566,"value":1118}," curry",{"type":561,"tag":593,"props":1120,"children":1121},{"style":876},[1122],{"type":566,"value":999},{"type":561,"tag":593,"props":1124,"children":1125},{"style":1070},[1126],{"type":566,"value":1127}," 0",{"type":561,"tag":593,"props":1129,"children":1130},{"style":876},[1131],{"type":566,"value":1105},{"type":561,"tag":593,"props":1133,"children":1135},{"class":595,"line":1134},17,[1136],{"type":561,"tag":593,"props":1137,"children":1139},{"emptyLinePlaceholder":1138},true,[1140],{"type":566,"value":1141},"\n",{"type":561,"tag":593,"props":1143,"children":1145},{"class":595,"line":1144},18,[1146,1151,1155,1159,1164,1168,1172],{"type":561,"tag":593,"props":1147,"children":1148},{"style":882},[1149],{"type":566,"value":1150},"  while",{"type":561,"tag":593,"props":1152,"children":1153},{"style":876},[1154],{"type":566,"value":1009},{"type":561,"tag":593,"props":1156,"children":1157},{"style":904},[1158],{"type":566,"value":1014},{"type":561,"tag":593,"props":1160,"children":1161},{"style":985},[1162],{"type":566,"value":1163}," ||",{"type":561,"tag":593,"props":1165,"children":1166},{"style":904},[1167],{"type":566,"value":1024},{"type":561,"tag":593,"props":1169,"children":1170},{"style":876},[1171],{"type":566,"value":1029},{"type":561,"tag":593,"props":1173,"children":1174},{"style":876},[1175],{"type":566,"value":1034},{"type":561,"tag":593,"props":1177,"children":1179},{"class":595,"line":1178},19,[1180,1185,1190,1194,1199,1204,1208,1213,1218,1223,1227],{"type":561,"tag":593,"props":1181,"children":1182},{"style":985},[1183],{"type":566,"value":1184},"    const",{"type":561,"tag":593,"props":1186,"children":1187},{"style":904},[1188],{"type":566,"value":1189}," n1",{"type":561,"tag":593,"props":1191,"children":1192},{"style":876},[1193],{"type":566,"value":999},{"type":561,"tag":593,"props":1195,"children":1196},{"style":904},[1197],{"type":566,"value":1198}," l1",{"type":561,"tag":593,"props":1200,"children":1201},{"style":985},[1202],{"type":566,"value":1203}," ?",{"type":561,"tag":593,"props":1205,"children":1206},{"style":904},[1207],{"type":566,"value":1198},{"type":561,"tag":593,"props":1209,"children":1210},{"style":876},[1211],{"type":566,"value":1212},".",{"type":561,"tag":593,"props":1214,"children":1215},{"style":904},[1216],{"type":566,"value":1217},"val",{"type":561,"tag":593,"props":1219,"children":1220},{"style":985},[1221],{"type":566,"value":1222}," :",{"type":561,"tag":593,"props":1224,"children":1225},{"style":1070},[1226],{"type":566,"value":1127},{"type":561,"tag":593,"props":1228,"children":1229},{"style":876},[1230],{"type":566,"value":1105},{"type":561,"tag":593,"props":1232,"children":1234},{"class":595,"line":1233},20,[1235,1239,1244,1248,1252,1256,1260,1264,1268,1272,1276],{"type":561,"tag":593,"props":1236,"children":1237},{"style":985},[1238],{"type":566,"value":1184},{"type":561,"tag":593,"props":1240,"children":1241},{"style":904},[1242],{"type":566,"value":1243}," n2",{"type":561,"tag":593,"props":1245,"children":1246},{"style":876},[1247],{"type":566,"value":999},{"type":561,"tag":593,"props":1249,"children":1250},{"style":904},[1251],{"type":566,"value":1024},{"type":561,"tag":593,"props":1253,"children":1254},{"style":985},[1255],{"type":566,"value":1203},{"type":561,"tag":593,"props":1257,"children":1258},{"style":904},[1259],{"type":566,"value":1024},{"type":561,"tag":593,"props":1261,"children":1262},{"style":876},[1263],{"type":566,"value":1212},{"type":561,"tag":593,"props":1265,"children":1266},{"style":904},[1267],{"type":566,"value":1217},{"type":561,"tag":593,"props":1269,"children":1270},{"style":985},[1271],{"type":566,"value":1222},{"type":561,"tag":593,"props":1273,"children":1274},{"style":1070},[1275],{"type":566,"value":1127},{"type":561,"tag":593,"props":1277,"children":1278},{"style":876},[1279],{"type":566,"value":1105},{"type":561,"tag":593,"props":1281,"children":1283},{"class":595,"line":1282},21,[1284,1288,1293,1297,1301,1306,1310,1314,1318],{"type":561,"tag":593,"props":1285,"children":1286},{"style":985},[1287],{"type":566,"value":1184},{"type":561,"tag":593,"props":1289,"children":1290},{"style":904},[1291],{"type":566,"value":1292}," sum",{"type":561,"tag":593,"props":1294,"children":1295},{"style":876},[1296],{"type":566,"value":999},{"type":561,"tag":593,"props":1298,"children":1299},{"style":904},[1300],{"type":566,"value":1189},{"type":561,"tag":593,"props":1302,"children":1303},{"style":985},[1304],{"type":566,"value":1305}," +",{"type":561,"tag":593,"props":1307,"children":1308},{"style":904},[1309],{"type":566,"value":1243},{"type":561,"tag":593,"props":1311,"children":1312},{"style":985},[1313],{"type":566,"value":1305},{"type":561,"tag":593,"props":1315,"children":1316},{"style":904},[1317],{"type":566,"value":1118},{"type":561,"tag":593,"props":1319,"children":1320},{"style":876},[1321],{"type":566,"value":1105},{"type":561,"tag":593,"props":1323,"children":1325},{"class":595,"line":1324},22,[1326,1331,1335,1340,1344,1349,1354,1359],{"type":561,"tag":593,"props":1327,"children":1328},{"style":904},[1329],{"type":566,"value":1330},"    curry",{"type":561,"tag":593,"props":1332,"children":1333},{"style":876},[1334],{"type":566,"value":999},{"type":561,"tag":593,"props":1336,"children":1337},{"style":991},[1338],{"type":566,"value":1339}," parseInt",{"type":561,"tag":593,"props":1341,"children":1342},{"style":876},[1343],{"type":566,"value":1067},{"type":561,"tag":593,"props":1345,"children":1346},{"style":904},[1347],{"type":566,"value":1348},"sum",{"type":561,"tag":593,"props":1350,"children":1351},{"style":985},[1352],{"type":566,"value":1353}," /",{"type":561,"tag":593,"props":1355,"children":1356},{"style":1070},[1357],{"type":566,"value":1358}," 10",{"type":561,"tag":593,"props":1360,"children":1361},{"style":876},[1362],{"type":566,"value":1078},{"type":561,"tag":593,"props":1364,"children":1366},{"class":595,"line":1365},23,[1367,1372,1376,1381,1385,1389,1393,1397,1401,1406,1410],{"type":561,"tag":593,"props":1368,"children":1369},{"style":904},[1370],{"type":566,"value":1371},"    current",{"type":561,"tag":593,"props":1373,"children":1374},{"style":876},[1375],{"type":566,"value":1212},{"type":561,"tag":593,"props":1377,"children":1378},{"style":904},[1379],{"type":566,"value":1380},"next",{"type":561,"tag":593,"props":1382,"children":1383},{"style":876},[1384],{"type":566,"value":999},{"type":561,"tag":593,"props":1386,"children":1387},{"style":985},[1388],{"type":566,"value":1057},{"type":561,"tag":593,"props":1390,"children":1391},{"style":991},[1392],{"type":566,"value":1062},{"type":561,"tag":593,"props":1394,"children":1395},{"style":876},[1396],{"type":566,"value":1067},{"type":561,"tag":593,"props":1398,"children":1399},{"style":904},[1400],{"type":566,"value":1348},{"type":561,"tag":593,"props":1402,"children":1403},{"style":985},[1404],{"type":566,"value":1405}," %",{"type":561,"tag":593,"props":1407,"children":1408},{"style":1070},[1409],{"type":566,"value":1358},{"type":561,"tag":593,"props":1411,"children":1412},{"style":876},[1413],{"type":566,"value":1078},{"type":561,"tag":593,"props":1415,"children":1417},{"class":595,"line":1416},24,[1418,1422,1426,1430,1434,1438],{"type":561,"tag":593,"props":1419,"children":1420},{"style":904},[1421],{"type":566,"value":1371},{"type":561,"tag":593,"props":1423,"children":1424},{"style":876},[1425],{"type":566,"value":999},{"type":561,"tag":593,"props":1427,"children":1428},{"style":904},[1429],{"type":566,"value":1092},{"type":561,"tag":593,"props":1431,"children":1432},{"style":876},[1433],{"type":566,"value":1212},{"type":561,"tag":593,"props":1435,"children":1436},{"style":904},[1437],{"type":566,"value":1380},{"type":561,"tag":593,"props":1439,"children":1440},{"style":876},[1441],{"type":566,"value":1105},{"type":561,"tag":593,"props":1443,"children":1445},{"class":595,"line":1444},25,[1446],{"type":561,"tag":593,"props":1447,"children":1448},{"emptyLinePlaceholder":1138},[1449],{"type":566,"value":1141},{"type":561,"tag":593,"props":1451,"children":1453},{"class":595,"line":1452},26,[1454,1459,1463,1467,1471],{"type":561,"tag":593,"props":1455,"children":1456},{"style":882},[1457],{"type":566,"value":1458},"    if",{"type":561,"tag":593,"props":1460,"children":1461},{"style":876},[1462],{"type":566,"value":1009},{"type":561,"tag":593,"props":1464,"children":1465},{"style":904},[1466],{"type":566,"value":1014},{"type":561,"tag":593,"props":1468,"children":1469},{"style":876},[1470],{"type":566,"value":1029},{"type":561,"tag":593,"props":1472,"children":1473},{"style":876},[1474],{"type":566,"value":1034},{"type":561,"tag":593,"props":1476,"children":1478},{"class":595,"line":1477},27,[1479,1484,1488,1492,1496,1500],{"type":561,"tag":593,"props":1480,"children":1481},{"style":904},[1482],{"type":566,"value":1483},"      l1",{"type":561,"tag":593,"props":1485,"children":1486},{"style":876},[1487],{"type":566,"value":999},{"type":561,"tag":593,"props":1489,"children":1490},{"style":904},[1491],{"type":566,"value":1198},{"type":561,"tag":593,"props":1493,"children":1494},{"style":876},[1495],{"type":566,"value":1212},{"type":561,"tag":593,"props":1497,"children":1498},{"style":904},[1499],{"type":566,"value":1380},{"type":561,"tag":593,"props":1501,"children":1502},{"style":876},[1503],{"type":566,"value":1105},{"type":561,"tag":593,"props":1505,"children":1507},{"class":595,"line":1506},28,[1508],{"type":561,"tag":593,"props":1509,"children":1510},{"style":876},[1511],{"type":566,"value":1512},"    }\n",{"type":561,"tag":593,"props":1514,"children":1516},{"class":595,"line":1515},29,[1517,1521,1525,1530,1534],{"type":561,"tag":593,"props":1518,"children":1519},{"style":882},[1520],{"type":566,"value":1458},{"type":561,"tag":593,"props":1522,"children":1523},{"style":876},[1524],{"type":566,"value":1009},{"type":561,"tag":593,"props":1526,"children":1527},{"style":904},[1528],{"type":566,"value":1529},"l2",{"type":561,"tag":593,"props":1531,"children":1532},{"style":876},[1533],{"type":566,"value":1029},{"type":561,"tag":593,"props":1535,"children":1536},{"style":876},[1537],{"type":566,"value":1034},{"type":561,"tag":593,"props":1539,"children":1541},{"class":595,"line":1540},30,[1542,1547,1551,1555,1559,1563],{"type":561,"tag":593,"props":1543,"children":1544},{"style":904},[1545],{"type":566,"value":1546},"      l2",{"type":561,"tag":593,"props":1548,"children":1549},{"style":876},[1550],{"type":566,"value":999},{"type":561,"tag":593,"props":1552,"children":1553},{"style":904},[1554],{"type":566,"value":1024},{"type":561,"tag":593,"props":1556,"children":1557},{"style":876},[1558],{"type":566,"value":1212},{"type":561,"tag":593,"props":1560,"children":1561},{"style":904},[1562],{"type":566,"value":1380},{"type":561,"tag":593,"props":1564,"children":1565},{"style":876},[1566],{"type":566,"value":1105},{"type":561,"tag":593,"props":1568,"children":1570},{"class":595,"line":1569},31,[1571],{"type":561,"tag":593,"props":1572,"children":1573},{"style":876},[1574],{"type":566,"value":1512},{"type":561,"tag":593,"props":1576,"children":1578},{"class":595,"line":1577},32,[1579],{"type":561,"tag":593,"props":1580,"children":1581},{"style":876},[1582],{"type":566,"value":1583},"  }\n",{"type":561,"tag":593,"props":1585,"children":1587},{"class":595,"line":1586},33,[1588],{"type":561,"tag":593,"props":1589,"children":1590},{"emptyLinePlaceholder":1138},[1591],{"type":566,"value":1141},{"type":561,"tag":593,"props":1593,"children":1595},{"class":595,"line":1594},34,[1596,1601,1605,1610,1615,1619,1623],{"type":561,"tag":593,"props":1597,"children":1598},{"style":882},[1599],{"type":566,"value":1600},"  if",{"type":561,"tag":593,"props":1602,"children":1603},{"style":876},[1604],{"type":566,"value":1009},{"type":561,"tag":593,"props":1606,"children":1607},{"style":904},[1608],{"type":566,"value":1609},"curry",{"type":561,"tag":593,"props":1611,"children":1612},{"style":876},[1613],{"type":566,"value":1614}," >",{"type":561,"tag":593,"props":1616,"children":1617},{"style":1070},[1618],{"type":566,"value":1127},{"type":561,"tag":593,"props":1620,"children":1621},{"style":876},[1622],{"type":566,"value":1029},{"type":561,"tag":593,"props":1624,"children":1625},{"style":876},[1626],{"type":566,"value":1034},{"type":561,"tag":593,"props":1628,"children":1630},{"class":595,"line":1629},35,[1631,1635,1639,1643,1647,1651,1655,1659,1663],{"type":561,"tag":593,"props":1632,"children":1633},{"style":904},[1634],{"type":566,"value":1371},{"type":561,"tag":593,"props":1636,"children":1637},{"style":876},[1638],{"type":566,"value":1212},{"type":561,"tag":593,"props":1640,"children":1641},{"style":904},[1642],{"type":566,"value":1380},{"type":561,"tag":593,"props":1644,"children":1645},{"style":876},[1646],{"type":566,"value":999},{"type":561,"tag":593,"props":1648,"children":1649},{"style":985},[1650],{"type":566,"value":1057},{"type":561,"tag":593,"props":1652,"children":1653},{"style":991},[1654],{"type":566,"value":1062},{"type":561,"tag":593,"props":1656,"children":1657},{"style":876},[1658],{"type":566,"value":1067},{"type":561,"tag":593,"props":1660,"children":1661},{"style":904},[1662],{"type":566,"value":1609},{"type":561,"tag":593,"props":1664,"children":1665},{"style":876},[1666],{"type":566,"value":1078},{"type":561,"tag":593,"props":1668,"children":1670},{"class":595,"line":1669},36,[1671],{"type":561,"tag":593,"props":1672,"children":1673},{"style":876},[1674],{"type":566,"value":1583},{"type":561,"tag":593,"props":1676,"children":1678},{"class":595,"line":1677},37,[1679,1684,1688,1692,1696],{"type":561,"tag":593,"props":1680,"children":1681},{"style":882},[1682],{"type":566,"value":1683},"  return",{"type":561,"tag":593,"props":1685,"children":1686},{"style":904},[1687],{"type":566,"value":1048},{"type":561,"tag":593,"props":1689,"children":1690},{"style":876},[1691],{"type":566,"value":1212},{"type":561,"tag":593,"props":1693,"children":1694},{"style":904},[1695],{"type":566,"value":1380},{"type":561,"tag":593,"props":1697,"children":1698},{"style":876},[1699],{"type":566,"value":1105},{"type":561,"tag":593,"props":1701,"children":1703},{"class":595,"line":1702},38,[1704],{"type":561,"tag":593,"props":1705,"children":1706},{"style":876},[1707],{"type":566,"value":1708},"};\n",{"type":561,"tag":1710,"props":1711,"children":1712},"style",{},[1713],{"type":566,"value":1714},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":832,"depth":832,"links":1716},[1717,1718],{"id":705,"depth":605,"text":705},{"id":729,"depth":605,"text":729,"children":1719},[1720,1721],{"id":779,"depth":614,"text":779},{"id":784,"depth":614,"text":784},"markdown","content:1.algorithm:3.leetcode:3.major:2.add-two-numbers.md","content","1.algorithm/3.leetcode/3.major/2.add-two-numbers.md","md",[1728,1730],{"_path":60,"title":59,"description":1729},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":66,"title":65,"description":1731},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1715135008260]