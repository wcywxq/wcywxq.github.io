[{"data":1,"prerenderedAt":1610},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-two-numbers":463,"/algorithm/leetcode/major/add-two-numbers-surround":1605},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":60,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":59,"description":467,"url":468,"body":469,"_type":1600,"_id":1601,"_source":1602,"_file":1603,"_extension":1604},"major",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":470,"children":471,"toc":1593},"root",[472,479,484,489,494,533,538,561,566,589,594,614,620,639,644,688,694,699,1587],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":473,"tag":474,"props":485,"children":486},{},[487],{"type":478,"value":488},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":473,"tag":474,"props":490,"children":491},{},[492],{"type":478,"value":493},"示例 1：",{"type":473,"tag":495,"props":496,"children":499},"pre",{"className":497,"code":498,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[500],{"type":473,"tag":501,"props":502,"children":503},"code",{"__ignoreMap":466},[504,515,524],{"type":473,"tag":505,"props":506,"children":509},"span",{"class":507,"line":508},"line",1,[510],{"type":473,"tag":505,"props":511,"children":512},{},[513],{"type":478,"value":514},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":473,"tag":505,"props":516,"children":518},{"class":507,"line":517},2,[519],{"type":473,"tag":505,"props":520,"children":521},{},[522],{"type":478,"value":523},"输出：[7,0,8]\n",{"type":473,"tag":505,"props":525,"children":527},{"class":507,"line":526},3,[528],{"type":473,"tag":505,"props":529,"children":530},{},[531],{"type":478,"value":532},"解释：342 + 465 = 807.\n",{"type":473,"tag":474,"props":534,"children":535},{},[536],{"type":478,"value":537},"示例 2：",{"type":473,"tag":495,"props":539,"children":541},{"className":497,"code":540,"language":478,"meta":466,"style":466},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[542],{"type":473,"tag":501,"props":543,"children":544},{"__ignoreMap":466},[545,553],{"type":473,"tag":505,"props":546,"children":547},{"class":507,"line":508},[548],{"type":473,"tag":505,"props":549,"children":550},{},[551],{"type":478,"value":552},"输入：l1 = [0], l2 = [0]\n",{"type":473,"tag":505,"props":554,"children":555},{"class":507,"line":517},[556],{"type":473,"tag":505,"props":557,"children":558},{},[559],{"type":478,"value":560},"输出：[0]\n",{"type":473,"tag":474,"props":562,"children":563},{},[564],{"type":478,"value":565},"示例 3：",{"type":473,"tag":495,"props":567,"children":569},{"className":497,"code":568,"language":478,"meta":466,"style":466},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[570],{"type":473,"tag":501,"props":571,"children":572},{"__ignoreMap":466},[573,581],{"type":473,"tag":505,"props":574,"children":575},{"class":507,"line":508},[576],{"type":473,"tag":505,"props":577,"children":578},{},[579],{"type":478,"value":580},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":473,"tag":505,"props":582,"children":583},{"class":507,"line":517},[584],{"type":473,"tag":505,"props":585,"children":586},{},[587],{"type":478,"value":588},"输出：[8,9,9,9,0,0,0,1]\n",{"type":473,"tag":474,"props":590,"children":591},{},[592],{"type":478,"value":593},"提示：",{"type":473,"tag":595,"props":596,"children":597},"ul",{},[598,604,609],{"type":473,"tag":599,"props":600,"children":601},"li",{},[602],{"type":478,"value":603},"每个链表中的节点数在范围 [1, 100] 内",{"type":473,"tag":599,"props":605,"children":606},{},[607],{"type":478,"value":608},"0 \u003C= Node.val \u003C= 9",{"type":473,"tag":599,"props":610,"children":611},{},[612],{"type":478,"value":613},"题目数据保证列表表示的数字不含前导零",{"type":473,"tag":615,"props":616,"children":618},"h2",{"id":617},"解题思路",[619],{"type":478,"value":617},{"type":473,"tag":621,"props":622,"children":623},"ol",{},[624,629,634],{"type":473,"tag":599,"props":625,"children":626},{},[627],{"type":478,"value":628},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":473,"tag":599,"props":630,"children":631},{},[632],{"type":478,"value":633},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":473,"tag":599,"props":635,"children":636},{},[637],{"type":478,"value":638},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":473,"tag":615,"props":640,"children":642},{"id":641},"图解",[643],{"type":478,"value":641},{"type":473,"tag":474,"props":645,"children":646},{},[647,653,658,663,668,673,678,683],{"type":473,"tag":648,"props":649,"children":652},"img",{"alt":650,"src":651},"figure_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_1.png",[],{"type":473,"tag":648,"props":654,"children":657},{"alt":655,"src":656},"figure_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_2.png",[],{"type":473,"tag":648,"props":659,"children":662},{"alt":660,"src":661},"figure_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_3.png",[],{"type":473,"tag":648,"props":664,"children":667},{"alt":665,"src":666},"figure_4","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_4.png",[],{"type":473,"tag":648,"props":669,"children":672},{"alt":670,"src":671},"figure_5","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_5.png",[],{"type":473,"tag":648,"props":674,"children":677},{"alt":675,"src":676},"figure_6","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_6.png",[],{"type":473,"tag":648,"props":679,"children":682},{"alt":680,"src":681},"figure_7","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_7.png",[],{"type":473,"tag":648,"props":684,"children":687},{"alt":685,"src":686},"figure_8","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_8.png",[],{"type":473,"tag":689,"props":690,"children":692},"h3",{"id":691},"实现",[693],{"type":478,"value":691},{"type":473,"tag":689,"props":695,"children":697},{"id":696},"构造哑节点",[698],{"type":478,"value":696},{"type":473,"tag":495,"props":700,"children":704},{"className":701,"code":702,"language":703,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[705],{"type":473,"tag":501,"props":706,"children":707},{"__ignoreMap":466},[708,717,725,733,742,751,760,769,777,804,825,843,851,906,956,982,1008,1018,1049,1105,1154,1196,1241,1296,1324,1332,1353,1382,1391,1412,1441,1449,1458,1466,1497,1541,1549,1574],{"type":473,"tag":505,"props":709,"children":710},{"class":507,"line":508},[711],{"type":473,"tag":505,"props":712,"children":714},{"style":713},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[715],{"type":478,"value":716},"/**\n",{"type":473,"tag":505,"props":718,"children":719},{"class":507,"line":517},[720],{"type":473,"tag":505,"props":721,"children":722},{"style":713},[723],{"type":478,"value":724}," * Definition for singly-linked list.\n",{"type":473,"tag":505,"props":726,"children":727},{"class":507,"line":526},[728],{"type":473,"tag":505,"props":729,"children":730},{"style":713},[731],{"type":478,"value":732}," * function ListNode(val) {\n",{"type":473,"tag":505,"props":734,"children":736},{"class":507,"line":735},4,[737],{"type":473,"tag":505,"props":738,"children":739},{"style":713},[740],{"type":478,"value":741}," *     this.val = val;\n",{"type":473,"tag":505,"props":743,"children":745},{"class":507,"line":744},5,[746],{"type":473,"tag":505,"props":747,"children":748},{"style":713},[749],{"type":478,"value":750}," *     this.next = null;\n",{"type":473,"tag":505,"props":752,"children":754},{"class":507,"line":753},6,[755],{"type":473,"tag":505,"props":756,"children":757},{"style":713},[758],{"type":478,"value":759}," * }\n",{"type":473,"tag":505,"props":761,"children":763},{"class":507,"line":762},7,[764],{"type":473,"tag":505,"props":765,"children":766},{"style":713},[767],{"type":478,"value":768}," */\n",{"type":473,"tag":505,"props":770,"children":772},{"class":507,"line":771},8,[773],{"type":473,"tag":505,"props":774,"children":775},{"style":713},[776],{"type":478,"value":716},{"type":473,"tag":505,"props":778,"children":780},{"class":507,"line":779},9,[781,786,792,798],{"type":473,"tag":505,"props":782,"children":783},{"style":713},[784],{"type":478,"value":785}," * ",{"type":473,"tag":505,"props":787,"children":789},{"style":788},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[790],{"type":478,"value":791},"@param",{"type":473,"tag":505,"props":793,"children":795},{"style":794},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[796],{"type":478,"value":797}," {ListNode}",{"type":473,"tag":505,"props":799,"children":801},{"style":800},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[802],{"type":478,"value":803}," l1\n",{"type":473,"tag":505,"props":805,"children":807},{"class":507,"line":806},10,[808,812,816,820],{"type":473,"tag":505,"props":809,"children":810},{"style":713},[811],{"type":478,"value":785},{"type":473,"tag":505,"props":813,"children":814},{"style":788},[815],{"type":478,"value":791},{"type":473,"tag":505,"props":817,"children":818},{"style":794},[819],{"type":478,"value":797},{"type":473,"tag":505,"props":821,"children":822},{"style":800},[823],{"type":478,"value":824}," l2\n",{"type":473,"tag":505,"props":826,"children":828},{"class":507,"line":827},11,[829,833,838],{"type":473,"tag":505,"props":830,"children":831},{"style":713},[832],{"type":478,"value":785},{"type":473,"tag":505,"props":834,"children":835},{"style":788},[836],{"type":478,"value":837},"@return",{"type":473,"tag":505,"props":839,"children":840},{"style":794},[841],{"type":478,"value":842}," {ListNode}\n",{"type":473,"tag":505,"props":844,"children":846},{"class":507,"line":845},12,[847],{"type":473,"tag":505,"props":848,"children":849},{"style":713},[850],{"type":478,"value":768},{"type":473,"tag":505,"props":852,"children":854},{"class":507,"line":853},13,[855,861,867,873,878,884,890,896,901],{"type":473,"tag":505,"props":856,"children":858},{"style":857},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[859],{"type":478,"value":860},"var",{"type":473,"tag":505,"props":862,"children":864},{"style":863},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[865],{"type":478,"value":866}," addTwoNumbers",{"type":473,"tag":505,"props":868,"children":870},{"style":869},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[871],{"type":478,"value":872}," =",{"type":473,"tag":505,"props":874,"children":875},{"style":857},[876],{"type":478,"value":877}," function",{"type":473,"tag":505,"props":879,"children":881},{"style":880},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[882],{"type":478,"value":883}," (",{"type":473,"tag":505,"props":885,"children":887},{"style":886},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[888],{"type":478,"value":889},"l1",{"type":473,"tag":505,"props":891,"children":893},{"style":892},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[894],{"type":478,"value":895},",",{"type":473,"tag":505,"props":897,"children":898},{"style":886},[899],{"type":478,"value":900}," l2",{"type":473,"tag":505,"props":902,"children":903},{"style":880},[904],{"type":478,"value":905},") {\n",{"type":473,"tag":505,"props":907,"children":909},{"class":507,"line":908},14,[910,915,921,925,930,935,940,946,951],{"type":473,"tag":505,"props":911,"children":912},{"style":857},[913],{"type":478,"value":914},"  const",{"type":473,"tag":505,"props":916,"children":918},{"style":917},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[919],{"type":478,"value":920}," node",{"type":473,"tag":505,"props":922,"children":923},{"style":869},[924],{"type":478,"value":872},{"type":473,"tag":505,"props":926,"children":927},{"style":869},[928],{"type":478,"value":929}," new",{"type":473,"tag":505,"props":931,"children":932},{"style":863},[933],{"type":478,"value":934}," ListNode",{"type":473,"tag":505,"props":936,"children":937},{"style":880},[938],{"type":478,"value":939},"(",{"type":473,"tag":505,"props":941,"children":943},{"style":942},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[944],{"type":478,"value":945},"0",{"type":473,"tag":505,"props":947,"children":948},{"style":880},[949],{"type":478,"value":950},")",{"type":473,"tag":505,"props":952,"children":953},{"style":892},[954],{"type":478,"value":955},";\n",{"type":473,"tag":505,"props":957,"children":959},{"class":507,"line":958},15,[960,965,970,974,978],{"type":473,"tag":505,"props":961,"children":962},{"style":857},[963],{"type":478,"value":964},"  let",{"type":473,"tag":505,"props":966,"children":967},{"style":917},[968],{"type":478,"value":969}," current",{"type":473,"tag":505,"props":971,"children":972},{"style":869},[973],{"type":478,"value":872},{"type":473,"tag":505,"props":975,"children":976},{"style":917},[977],{"type":478,"value":920},{"type":473,"tag":505,"props":979,"children":980},{"style":892},[981],{"type":478,"value":955},{"type":473,"tag":505,"props":983,"children":985},{"class":507,"line":984},16,[986,990,995,999,1004],{"type":473,"tag":505,"props":987,"children":988},{"style":857},[989],{"type":478,"value":964},{"type":473,"tag":505,"props":991,"children":992},{"style":917},[993],{"type":478,"value":994}," curry",{"type":473,"tag":505,"props":996,"children":997},{"style":869},[998],{"type":478,"value":872},{"type":473,"tag":505,"props":1000,"children":1001},{"style":942},[1002],{"type":478,"value":1003}," 0",{"type":473,"tag":505,"props":1005,"children":1006},{"style":892},[1007],{"type":478,"value":955},{"type":473,"tag":505,"props":1009,"children":1011},{"class":507,"line":1010},17,[1012],{"type":473,"tag":505,"props":1013,"children":1015},{"emptyLinePlaceholder":1014},true,[1016],{"type":478,"value":1017},"\n",{"type":473,"tag":505,"props":1019,"children":1021},{"class":507,"line":1020},18,[1022,1028,1032,1036,1041,1045],{"type":473,"tag":505,"props":1023,"children":1025},{"style":1024},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1026],{"type":478,"value":1027},"  while",{"type":473,"tag":505,"props":1029,"children":1030},{"style":880},[1031],{"type":478,"value":883},{"type":473,"tag":505,"props":1033,"children":1034},{"style":917},[1035],{"type":478,"value":889},{"type":473,"tag":505,"props":1037,"children":1038},{"style":869},[1039],{"type":478,"value":1040}," ||",{"type":473,"tag":505,"props":1042,"children":1043},{"style":917},[1044],{"type":478,"value":900},{"type":473,"tag":505,"props":1046,"children":1047},{"style":880},[1048],{"type":478,"value":905},{"type":473,"tag":505,"props":1050,"children":1052},{"class":507,"line":1051},19,[1053,1058,1063,1067,1072,1077,1081,1087,1092,1097,1101],{"type":473,"tag":505,"props":1054,"children":1055},{"style":857},[1056],{"type":478,"value":1057},"    const",{"type":473,"tag":505,"props":1059,"children":1060},{"style":917},[1061],{"type":478,"value":1062}," n1",{"type":473,"tag":505,"props":1064,"children":1065},{"style":869},[1066],{"type":478,"value":872},{"type":473,"tag":505,"props":1068,"children":1069},{"style":917},[1070],{"type":478,"value":1071}," l1",{"type":473,"tag":505,"props":1073,"children":1074},{"style":869},[1075],{"type":478,"value":1076}," ?",{"type":473,"tag":505,"props":1078,"children":1079},{"style":917},[1080],{"type":478,"value":1071},{"type":473,"tag":505,"props":1082,"children":1084},{"style":1083},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[1085],{"type":478,"value":1086},".",{"type":473,"tag":505,"props":1088,"children":1089},{"style":917},[1090],{"type":478,"value":1091},"val",{"type":473,"tag":505,"props":1093,"children":1094},{"style":869},[1095],{"type":478,"value":1096}," :",{"type":473,"tag":505,"props":1098,"children":1099},{"style":942},[1100],{"type":478,"value":1003},{"type":473,"tag":505,"props":1102,"children":1103},{"style":892},[1104],{"type":478,"value":955},{"type":473,"tag":505,"props":1106,"children":1108},{"class":507,"line":1107},20,[1109,1113,1118,1122,1126,1130,1134,1138,1142,1146,1150],{"type":473,"tag":505,"props":1110,"children":1111},{"style":857},[1112],{"type":478,"value":1057},{"type":473,"tag":505,"props":1114,"children":1115},{"style":917},[1116],{"type":478,"value":1117}," n2",{"type":473,"tag":505,"props":1119,"children":1120},{"style":869},[1121],{"type":478,"value":872},{"type":473,"tag":505,"props":1123,"children":1124},{"style":917},[1125],{"type":478,"value":900},{"type":473,"tag":505,"props":1127,"children":1128},{"style":869},[1129],{"type":478,"value":1076},{"type":473,"tag":505,"props":1131,"children":1132},{"style":917},[1133],{"type":478,"value":900},{"type":473,"tag":505,"props":1135,"children":1136},{"style":1083},[1137],{"type":478,"value":1086},{"type":473,"tag":505,"props":1139,"children":1140},{"style":917},[1141],{"type":478,"value":1091},{"type":473,"tag":505,"props":1143,"children":1144},{"style":869},[1145],{"type":478,"value":1096},{"type":473,"tag":505,"props":1147,"children":1148},{"style":942},[1149],{"type":478,"value":1003},{"type":473,"tag":505,"props":1151,"children":1152},{"style":892},[1153],{"type":478,"value":955},{"type":473,"tag":505,"props":1155,"children":1157},{"class":507,"line":1156},21,[1158,1162,1167,1171,1175,1180,1184,1188,1192],{"type":473,"tag":505,"props":1159,"children":1160},{"style":857},[1161],{"type":478,"value":1057},{"type":473,"tag":505,"props":1163,"children":1164},{"style":917},[1165],{"type":478,"value":1166}," sum",{"type":473,"tag":505,"props":1168,"children":1169},{"style":869},[1170],{"type":478,"value":872},{"type":473,"tag":505,"props":1172,"children":1173},{"style":917},[1174],{"type":478,"value":1062},{"type":473,"tag":505,"props":1176,"children":1177},{"style":869},[1178],{"type":478,"value":1179}," +",{"type":473,"tag":505,"props":1181,"children":1182},{"style":917},[1183],{"type":478,"value":1117},{"type":473,"tag":505,"props":1185,"children":1186},{"style":869},[1187],{"type":478,"value":1179},{"type":473,"tag":505,"props":1189,"children":1190},{"style":917},[1191],{"type":478,"value":994},{"type":473,"tag":505,"props":1193,"children":1194},{"style":892},[1195],{"type":478,"value":955},{"type":473,"tag":505,"props":1197,"children":1199},{"class":507,"line":1198},22,[1200,1205,1209,1214,1218,1223,1228,1233,1237],{"type":473,"tag":505,"props":1201,"children":1202},{"style":917},[1203],{"type":478,"value":1204},"    curry",{"type":473,"tag":505,"props":1206,"children":1207},{"style":869},[1208],{"type":478,"value":872},{"type":473,"tag":505,"props":1210,"children":1211},{"style":863},[1212],{"type":478,"value":1213}," parseInt",{"type":473,"tag":505,"props":1215,"children":1216},{"style":880},[1217],{"type":478,"value":939},{"type":473,"tag":505,"props":1219,"children":1220},{"style":917},[1221],{"type":478,"value":1222},"sum",{"type":473,"tag":505,"props":1224,"children":1225},{"style":869},[1226],{"type":478,"value":1227}," /",{"type":473,"tag":505,"props":1229,"children":1230},{"style":942},[1231],{"type":478,"value":1232}," 10",{"type":473,"tag":505,"props":1234,"children":1235},{"style":880},[1236],{"type":478,"value":950},{"type":473,"tag":505,"props":1238,"children":1239},{"style":892},[1240],{"type":478,"value":955},{"type":473,"tag":505,"props":1242,"children":1244},{"class":507,"line":1243},23,[1245,1250,1254,1259,1263,1267,1271,1275,1279,1284,1288,1292],{"type":473,"tag":505,"props":1246,"children":1247},{"style":917},[1248],{"type":478,"value":1249},"    current",{"type":473,"tag":505,"props":1251,"children":1252},{"style":1083},[1253],{"type":478,"value":1086},{"type":473,"tag":505,"props":1255,"children":1256},{"style":917},[1257],{"type":478,"value":1258},"next",{"type":473,"tag":505,"props":1260,"children":1261},{"style":869},[1262],{"type":478,"value":872},{"type":473,"tag":505,"props":1264,"children":1265},{"style":869},[1266],{"type":478,"value":929},{"type":473,"tag":505,"props":1268,"children":1269},{"style":863},[1270],{"type":478,"value":934},{"type":473,"tag":505,"props":1272,"children":1273},{"style":880},[1274],{"type":478,"value":939},{"type":473,"tag":505,"props":1276,"children":1277},{"style":917},[1278],{"type":478,"value":1222},{"type":473,"tag":505,"props":1280,"children":1281},{"style":869},[1282],{"type":478,"value":1283}," %",{"type":473,"tag":505,"props":1285,"children":1286},{"style":942},[1287],{"type":478,"value":1232},{"type":473,"tag":505,"props":1289,"children":1290},{"style":880},[1291],{"type":478,"value":950},{"type":473,"tag":505,"props":1293,"children":1294},{"style":892},[1295],{"type":478,"value":955},{"type":473,"tag":505,"props":1297,"children":1299},{"class":507,"line":1298},24,[1300,1304,1308,1312,1316,1320],{"type":473,"tag":505,"props":1301,"children":1302},{"style":917},[1303],{"type":478,"value":1249},{"type":473,"tag":505,"props":1305,"children":1306},{"style":869},[1307],{"type":478,"value":872},{"type":473,"tag":505,"props":1309,"children":1310},{"style":917},[1311],{"type":478,"value":969},{"type":473,"tag":505,"props":1313,"children":1314},{"style":1083},[1315],{"type":478,"value":1086},{"type":473,"tag":505,"props":1317,"children":1318},{"style":917},[1319],{"type":478,"value":1258},{"type":473,"tag":505,"props":1321,"children":1322},{"style":892},[1323],{"type":478,"value":955},{"type":473,"tag":505,"props":1325,"children":1327},{"class":507,"line":1326},25,[1328],{"type":473,"tag":505,"props":1329,"children":1330},{"emptyLinePlaceholder":1014},[1331],{"type":478,"value":1017},{"type":473,"tag":505,"props":1333,"children":1335},{"class":507,"line":1334},26,[1336,1341,1345,1349],{"type":473,"tag":505,"props":1337,"children":1338},{"style":1024},[1339],{"type":478,"value":1340},"    if",{"type":473,"tag":505,"props":1342,"children":1343},{"style":880},[1344],{"type":478,"value":883},{"type":473,"tag":505,"props":1346,"children":1347},{"style":917},[1348],{"type":478,"value":889},{"type":473,"tag":505,"props":1350,"children":1351},{"style":880},[1352],{"type":478,"value":905},{"type":473,"tag":505,"props":1354,"children":1356},{"class":507,"line":1355},27,[1357,1362,1366,1370,1374,1378],{"type":473,"tag":505,"props":1358,"children":1359},{"style":917},[1360],{"type":478,"value":1361},"      l1",{"type":473,"tag":505,"props":1363,"children":1364},{"style":869},[1365],{"type":478,"value":872},{"type":473,"tag":505,"props":1367,"children":1368},{"style":917},[1369],{"type":478,"value":1071},{"type":473,"tag":505,"props":1371,"children":1372},{"style":1083},[1373],{"type":478,"value":1086},{"type":473,"tag":505,"props":1375,"children":1376},{"style":917},[1377],{"type":478,"value":1258},{"type":473,"tag":505,"props":1379,"children":1380},{"style":892},[1381],{"type":478,"value":955},{"type":473,"tag":505,"props":1383,"children":1385},{"class":507,"line":1384},28,[1386],{"type":473,"tag":505,"props":1387,"children":1388},{"style":880},[1389],{"type":478,"value":1390},"    }\n",{"type":473,"tag":505,"props":1392,"children":1394},{"class":507,"line":1393},29,[1395,1399,1403,1408],{"type":473,"tag":505,"props":1396,"children":1397},{"style":1024},[1398],{"type":478,"value":1340},{"type":473,"tag":505,"props":1400,"children":1401},{"style":880},[1402],{"type":478,"value":883},{"type":473,"tag":505,"props":1404,"children":1405},{"style":917},[1406],{"type":478,"value":1407},"l2",{"type":473,"tag":505,"props":1409,"children":1410},{"style":880},[1411],{"type":478,"value":905},{"type":473,"tag":505,"props":1413,"children":1415},{"class":507,"line":1414},30,[1416,1421,1425,1429,1433,1437],{"type":473,"tag":505,"props":1417,"children":1418},{"style":917},[1419],{"type":478,"value":1420},"      l2",{"type":473,"tag":505,"props":1422,"children":1423},{"style":869},[1424],{"type":478,"value":872},{"type":473,"tag":505,"props":1426,"children":1427},{"style":917},[1428],{"type":478,"value":900},{"type":473,"tag":505,"props":1430,"children":1431},{"style":1083},[1432],{"type":478,"value":1086},{"type":473,"tag":505,"props":1434,"children":1435},{"style":917},[1436],{"type":478,"value":1258},{"type":473,"tag":505,"props":1438,"children":1439},{"style":892},[1440],{"type":478,"value":955},{"type":473,"tag":505,"props":1442,"children":1444},{"class":507,"line":1443},31,[1445],{"type":473,"tag":505,"props":1446,"children":1447},{"style":880},[1448],{"type":478,"value":1390},{"type":473,"tag":505,"props":1450,"children":1452},{"class":507,"line":1451},32,[1453],{"type":473,"tag":505,"props":1454,"children":1455},{"style":880},[1456],{"type":478,"value":1457},"  }\n",{"type":473,"tag":505,"props":1459,"children":1461},{"class":507,"line":1460},33,[1462],{"type":473,"tag":505,"props":1463,"children":1464},{"emptyLinePlaceholder":1014},[1465],{"type":478,"value":1017},{"type":473,"tag":505,"props":1467,"children":1469},{"class":507,"line":1468},34,[1470,1475,1479,1484,1489,1493],{"type":473,"tag":505,"props":1471,"children":1472},{"style":1024},[1473],{"type":478,"value":1474},"  if",{"type":473,"tag":505,"props":1476,"children":1477},{"style":880},[1478],{"type":478,"value":883},{"type":473,"tag":505,"props":1480,"children":1481},{"style":917},[1482],{"type":478,"value":1483},"curry",{"type":473,"tag":505,"props":1485,"children":1486},{"style":869},[1487],{"type":478,"value":1488}," >",{"type":473,"tag":505,"props":1490,"children":1491},{"style":942},[1492],{"type":478,"value":1003},{"type":473,"tag":505,"props":1494,"children":1495},{"style":880},[1496],{"type":478,"value":905},{"type":473,"tag":505,"props":1498,"children":1500},{"class":507,"line":1499},35,[1501,1505,1509,1513,1517,1521,1525,1529,1533,1537],{"type":473,"tag":505,"props":1502,"children":1503},{"style":917},[1504],{"type":478,"value":1249},{"type":473,"tag":505,"props":1506,"children":1507},{"style":1083},[1508],{"type":478,"value":1086},{"type":473,"tag":505,"props":1510,"children":1511},{"style":917},[1512],{"type":478,"value":1258},{"type":473,"tag":505,"props":1514,"children":1515},{"style":869},[1516],{"type":478,"value":872},{"type":473,"tag":505,"props":1518,"children":1519},{"style":869},[1520],{"type":478,"value":929},{"type":473,"tag":505,"props":1522,"children":1523},{"style":863},[1524],{"type":478,"value":934},{"type":473,"tag":505,"props":1526,"children":1527},{"style":880},[1528],{"type":478,"value":939},{"type":473,"tag":505,"props":1530,"children":1531},{"style":917},[1532],{"type":478,"value":1483},{"type":473,"tag":505,"props":1534,"children":1535},{"style":880},[1536],{"type":478,"value":950},{"type":473,"tag":505,"props":1538,"children":1539},{"style":892},[1540],{"type":478,"value":955},{"type":473,"tag":505,"props":1542,"children":1544},{"class":507,"line":1543},36,[1545],{"type":473,"tag":505,"props":1546,"children":1547},{"style":880},[1548],{"type":478,"value":1457},{"type":473,"tag":505,"props":1550,"children":1552},{"class":507,"line":1551},37,[1553,1558,1562,1566,1570],{"type":473,"tag":505,"props":1554,"children":1555},{"style":1024},[1556],{"type":478,"value":1557},"  return",{"type":473,"tag":505,"props":1559,"children":1560},{"style":917},[1561],{"type":478,"value":920},{"type":473,"tag":505,"props":1563,"children":1564},{"style":1083},[1565],{"type":478,"value":1086},{"type":473,"tag":505,"props":1567,"children":1568},{"style":917},[1569],{"type":478,"value":1258},{"type":473,"tag":505,"props":1571,"children":1572},{"style":892},[1573],{"type":478,"value":955},{"type":473,"tag":505,"props":1575,"children":1577},{"class":507,"line":1576},38,[1578,1583],{"type":473,"tag":505,"props":1579,"children":1580},{"style":880},[1581],{"type":478,"value":1582},"}",{"type":473,"tag":505,"props":1584,"children":1585},{"style":892},[1586],{"type":478,"value":955},{"type":473,"tag":1588,"props":1589,"children":1590},"style",{},[1591],{"type":478,"value":1592},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":744,"depth":744,"links":1594},[1595,1596],{"id":617,"depth":517,"text":617},{"id":641,"depth":517,"text":641,"children":1597},[1598,1599],{"id":691,"depth":526,"text":691},{"id":696,"depth":526,"text":696},"markdown","content:1.algorithm:3.leetcode:3.major:2.add-two-numbers.md","content","1.algorithm/3.leetcode/3.major/2.add-two-numbers.md","md",[1606,1608],{"_path":57,"title":56,"description":1607},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":63,"title":62,"description":1609},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1713695844684]