[{"data":1,"prerenderedAt":1727},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-two-numbers":546,"/algorithm/leetcode/major/add-two-numbers-surround":1722},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":63,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":62,"description":550,"url":551,"body":552,"_type":1717,"_id":1718,"_source":1719,"_file":1720,"_extension":1721},"major",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":553,"children":554,"toc":1710},"root",[555,562,567,572,577,616,621,644,649,672,677,697,703,722,727,771,777,782,1704],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":556,"tag":557,"props":568,"children":569},{},[570],{"type":561,"value":571},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":556,"tag":557,"props":573,"children":574},{},[575],{"type":561,"value":576},"示例 1：",{"type":556,"tag":578,"props":579,"children":582},"pre",{"className":580,"code":581,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[583],{"type":556,"tag":584,"props":585,"children":586},"code",{"__ignoreMap":549},[587,598,607],{"type":556,"tag":588,"props":589,"children":592},"span",{"class":590,"line":591},"line",1,[593],{"type":556,"tag":588,"props":594,"children":595},{},[596],{"type":561,"value":597},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":556,"tag":588,"props":599,"children":601},{"class":590,"line":600},2,[602],{"type":556,"tag":588,"props":603,"children":604},{},[605],{"type":561,"value":606},"输出：[7,0,8]\n",{"type":556,"tag":588,"props":608,"children":610},{"class":590,"line":609},3,[611],{"type":556,"tag":588,"props":612,"children":613},{},[614],{"type":561,"value":615},"解释：342 + 465 = 807.\n",{"type":556,"tag":557,"props":617,"children":618},{},[619],{"type":561,"value":620},"示例 2：",{"type":556,"tag":578,"props":622,"children":624},{"className":580,"code":623,"language":561,"meta":549,"style":549},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[625],{"type":556,"tag":584,"props":626,"children":627},{"__ignoreMap":549},[628,636],{"type":556,"tag":588,"props":629,"children":630},{"class":590,"line":591},[631],{"type":556,"tag":588,"props":632,"children":633},{},[634],{"type":561,"value":635},"输入：l1 = [0], l2 = [0]\n",{"type":556,"tag":588,"props":637,"children":638},{"class":590,"line":600},[639],{"type":556,"tag":588,"props":640,"children":641},{},[642],{"type":561,"value":643},"输出：[0]\n",{"type":556,"tag":557,"props":645,"children":646},{},[647],{"type":561,"value":648},"示例 3：",{"type":556,"tag":578,"props":650,"children":652},{"className":580,"code":651,"language":561,"meta":549,"style":549},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[653],{"type":556,"tag":584,"props":654,"children":655},{"__ignoreMap":549},[656,664],{"type":556,"tag":588,"props":657,"children":658},{"class":590,"line":591},[659],{"type":556,"tag":588,"props":660,"children":661},{},[662],{"type":561,"value":663},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":556,"tag":588,"props":665,"children":666},{"class":590,"line":600},[667],{"type":556,"tag":588,"props":668,"children":669},{},[670],{"type":561,"value":671},"输出：[8,9,9,9,0,0,0,1]\n",{"type":556,"tag":557,"props":673,"children":674},{},[675],{"type":561,"value":676},"提示：",{"type":556,"tag":678,"props":679,"children":680},"ul",{},[681,687,692],{"type":556,"tag":682,"props":683,"children":684},"li",{},[685],{"type":561,"value":686},"每个链表中的节点数在范围 [1, 100] 内",{"type":556,"tag":682,"props":688,"children":689},{},[690],{"type":561,"value":691},"0 \u003C= Node.val \u003C= 9",{"type":556,"tag":682,"props":693,"children":694},{},[695],{"type":561,"value":696},"题目数据保证列表表示的数字不含前导零",{"type":556,"tag":698,"props":699,"children":701},"h2",{"id":700},"解题思路",[702],{"type":561,"value":700},{"type":556,"tag":704,"props":705,"children":706},"ol",{},[707,712,717],{"type":556,"tag":682,"props":708,"children":709},{},[710],{"type":561,"value":711},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":556,"tag":682,"props":713,"children":714},{},[715],{"type":561,"value":716},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":556,"tag":682,"props":718,"children":719},{},[720],{"type":561,"value":721},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":556,"tag":698,"props":723,"children":725},{"id":724},"图解",[726],{"type":561,"value":724},{"type":556,"tag":557,"props":728,"children":729},{},[730,736,741,746,751,756,761,766],{"type":556,"tag":731,"props":732,"children":735},"img",{"alt":733,"src":734},"figure_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_1.png",[],{"type":556,"tag":731,"props":737,"children":740},{"alt":738,"src":739},"figure_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_2.png",[],{"type":556,"tag":731,"props":742,"children":745},{"alt":743,"src":744},"figure_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_3.png",[],{"type":556,"tag":731,"props":747,"children":750},{"alt":748,"src":749},"figure_4","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_4.png",[],{"type":556,"tag":731,"props":752,"children":755},{"alt":753,"src":754},"figure_5","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_5.png",[],{"type":556,"tag":731,"props":757,"children":760},{"alt":758,"src":759},"figure_6","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_6.png",[],{"type":556,"tag":731,"props":762,"children":765},{"alt":763,"src":764},"figure_7","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_7.png",[],{"type":556,"tag":731,"props":767,"children":770},{"alt":768,"src":769},"figure_8","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_8.png",[],{"type":556,"tag":772,"props":773,"children":775},"h3",{"id":774},"实现",[776],{"type":561,"value":774},{"type":556,"tag":772,"props":778,"children":780},{"id":779},"构造哑节点",[781],{"type":561,"value":779},{"type":556,"tag":578,"props":783,"children":787},{"className":784,"code":785,"language":786,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[788],{"type":556,"tag":584,"props":789,"children":790},{"__ignoreMap":549},[791,800,808,816,825,834,843,852,860,903,936,966,974,1030,1074,1101,1127,1137,1171,1226,1275,1317,1358,1409,1437,1445,1470,1499,1508,1533,1562,1570,1579,1587,1622,1662,1670,1695],{"type":556,"tag":588,"props":792,"children":793},{"class":590,"line":591},[794],{"type":556,"tag":588,"props":795,"children":797},{"style":796},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[798],{"type":561,"value":799},"/**\n",{"type":556,"tag":588,"props":801,"children":802},{"class":590,"line":600},[803],{"type":556,"tag":588,"props":804,"children":805},{"style":796},[806],{"type":561,"value":807}," * Definition for singly-linked list.\n",{"type":556,"tag":588,"props":809,"children":810},{"class":590,"line":609},[811],{"type":556,"tag":588,"props":812,"children":813},{"style":796},[814],{"type":561,"value":815}," * function ListNode(val) {\n",{"type":556,"tag":588,"props":817,"children":819},{"class":590,"line":818},4,[820],{"type":556,"tag":588,"props":821,"children":822},{"style":796},[823],{"type":561,"value":824}," *     this.val = val;\n",{"type":556,"tag":588,"props":826,"children":828},{"class":590,"line":827},5,[829],{"type":556,"tag":588,"props":830,"children":831},{"style":796},[832],{"type":561,"value":833}," *     this.next = null;\n",{"type":556,"tag":588,"props":835,"children":837},{"class":590,"line":836},6,[838],{"type":556,"tag":588,"props":839,"children":840},{"style":796},[841],{"type":561,"value":842}," * }\n",{"type":556,"tag":588,"props":844,"children":846},{"class":590,"line":845},7,[847],{"type":556,"tag":588,"props":848,"children":849},{"style":796},[850],{"type":561,"value":851}," */\n",{"type":556,"tag":588,"props":853,"children":855},{"class":590,"line":854},8,[856],{"type":556,"tag":588,"props":857,"children":858},{"style":796},[859],{"type":561,"value":799},{"type":556,"tag":588,"props":861,"children":863},{"class":590,"line":862},9,[864,869,875,881,886,892,897],{"type":556,"tag":588,"props":865,"children":866},{"style":796},[867],{"type":561,"value":868}," * ",{"type":556,"tag":588,"props":870,"children":872},{"style":871},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[873],{"type":561,"value":874},"@",{"type":556,"tag":588,"props":876,"children":878},{"style":877},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[879],{"type":561,"value":880},"param",{"type":556,"tag":588,"props":882,"children":883},{"style":871},[884],{"type":561,"value":885}," {",{"type":556,"tag":588,"props":887,"children":889},{"style":888},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[890],{"type":561,"value":891},"ListNode",{"type":556,"tag":588,"props":893,"children":894},{"style":871},[895],{"type":561,"value":896},"}",{"type":556,"tag":588,"props":898,"children":900},{"style":899},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[901],{"type":561,"value":902}," l1\n",{"type":556,"tag":588,"props":904,"children":906},{"class":590,"line":905},10,[907,911,915,919,923,927,931],{"type":556,"tag":588,"props":908,"children":909},{"style":796},[910],{"type":561,"value":868},{"type":556,"tag":588,"props":912,"children":913},{"style":871},[914],{"type":561,"value":874},{"type":556,"tag":588,"props":916,"children":917},{"style":877},[918],{"type":561,"value":880},{"type":556,"tag":588,"props":920,"children":921},{"style":871},[922],{"type":561,"value":885},{"type":556,"tag":588,"props":924,"children":925},{"style":888},[926],{"type":561,"value":891},{"type":556,"tag":588,"props":928,"children":929},{"style":871},[930],{"type":561,"value":896},{"type":556,"tag":588,"props":932,"children":933},{"style":899},[934],{"type":561,"value":935}," l2\n",{"type":556,"tag":588,"props":937,"children":939},{"class":590,"line":938},11,[940,944,948,953,957,961],{"type":556,"tag":588,"props":941,"children":942},{"style":796},[943],{"type":561,"value":868},{"type":556,"tag":588,"props":945,"children":946},{"style":871},[947],{"type":561,"value":874},{"type":556,"tag":588,"props":949,"children":950},{"style":877},[951],{"type":561,"value":952},"return",{"type":556,"tag":588,"props":954,"children":955},{"style":871},[956],{"type":561,"value":885},{"type":556,"tag":588,"props":958,"children":959},{"style":888},[960],{"type":561,"value":891},{"type":556,"tag":588,"props":962,"children":963},{"style":871},[964],{"type":561,"value":965},"}\n",{"type":556,"tag":588,"props":967,"children":969},{"class":590,"line":968},12,[970],{"type":556,"tag":588,"props":971,"children":972},{"style":796},[973],{"type":561,"value":851},{"type":556,"tag":588,"props":975,"children":977},{"class":590,"line":976},13,[978,984,990,995,1000,1005,1010,1015,1020,1025],{"type":556,"tag":588,"props":979,"children":981},{"style":980},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[982],{"type":561,"value":983},"var",{"type":556,"tag":588,"props":985,"children":987},{"style":986},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[988],{"type":561,"value":989}," addTwoNumbers",{"type":556,"tag":588,"props":991,"children":992},{"style":871},[993],{"type":561,"value":994}," =",{"type":556,"tag":588,"props":996,"children":997},{"style":980},[998],{"type":561,"value":999}," function",{"type":556,"tag":588,"props":1001,"children":1002},{"style":871},[1003],{"type":561,"value":1004}," (",{"type":556,"tag":588,"props":1006,"children":1007},{"style":899},[1008],{"type":561,"value":1009},"l1",{"type":556,"tag":588,"props":1011,"children":1012},{"style":871},[1013],{"type":561,"value":1014},",",{"type":556,"tag":588,"props":1016,"children":1017},{"style":899},[1018],{"type":561,"value":1019}," l2",{"type":556,"tag":588,"props":1021,"children":1022},{"style":871},[1023],{"type":561,"value":1024},")",{"type":556,"tag":588,"props":1026,"children":1027},{"style":871},[1028],{"type":561,"value":1029}," {\n",{"type":556,"tag":588,"props":1031,"children":1033},{"class":590,"line":1032},14,[1034,1039,1044,1048,1053,1058,1063,1069],{"type":556,"tag":588,"props":1035,"children":1036},{"style":980},[1037],{"type":561,"value":1038},"  const",{"type":556,"tag":588,"props":1040,"children":1041},{"style":899},[1042],{"type":561,"value":1043}," node",{"type":556,"tag":588,"props":1045,"children":1046},{"style":871},[1047],{"type":561,"value":994},{"type":556,"tag":588,"props":1049,"children":1050},{"style":980},[1051],{"type":561,"value":1052}," new",{"type":556,"tag":588,"props":1054,"children":1055},{"style":986},[1056],{"type":561,"value":1057}," ListNode",{"type":556,"tag":588,"props":1059,"children":1060},{"style":871},[1061],{"type":561,"value":1062},"(",{"type":556,"tag":588,"props":1064,"children":1066},{"style":1065},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1067],{"type":561,"value":1068},"0",{"type":556,"tag":588,"props":1070,"children":1071},{"style":871},[1072],{"type":561,"value":1073},");\n",{"type":556,"tag":588,"props":1075,"children":1077},{"class":590,"line":1076},15,[1078,1083,1088,1092,1096],{"type":556,"tag":588,"props":1079,"children":1080},{"style":980},[1081],{"type":561,"value":1082},"  let",{"type":556,"tag":588,"props":1084,"children":1085},{"style":899},[1086],{"type":561,"value":1087}," current",{"type":556,"tag":588,"props":1089,"children":1090},{"style":871},[1091],{"type":561,"value":994},{"type":556,"tag":588,"props":1093,"children":1094},{"style":899},[1095],{"type":561,"value":1043},{"type":556,"tag":588,"props":1097,"children":1098},{"style":871},[1099],{"type":561,"value":1100},";\n",{"type":556,"tag":588,"props":1102,"children":1104},{"class":590,"line":1103},16,[1105,1109,1114,1118,1123],{"type":556,"tag":588,"props":1106,"children":1107},{"style":980},[1108],{"type":561,"value":1082},{"type":556,"tag":588,"props":1110,"children":1111},{"style":899},[1112],{"type":561,"value":1113}," curry",{"type":556,"tag":588,"props":1115,"children":1116},{"style":871},[1117],{"type":561,"value":994},{"type":556,"tag":588,"props":1119,"children":1120},{"style":1065},[1121],{"type":561,"value":1122}," 0",{"type":556,"tag":588,"props":1124,"children":1125},{"style":871},[1126],{"type":561,"value":1100},{"type":556,"tag":588,"props":1128,"children":1130},{"class":590,"line":1129},17,[1131],{"type":556,"tag":588,"props":1132,"children":1134},{"emptyLinePlaceholder":1133},true,[1135],{"type":561,"value":1136},"\n",{"type":556,"tag":588,"props":1138,"children":1140},{"class":590,"line":1139},18,[1141,1146,1150,1154,1159,1163,1167],{"type":556,"tag":588,"props":1142,"children":1143},{"style":877},[1144],{"type":561,"value":1145},"  while",{"type":556,"tag":588,"props":1147,"children":1148},{"style":871},[1149],{"type":561,"value":1004},{"type":556,"tag":588,"props":1151,"children":1152},{"style":899},[1153],{"type":561,"value":1009},{"type":556,"tag":588,"props":1155,"children":1156},{"style":980},[1157],{"type":561,"value":1158}," ||",{"type":556,"tag":588,"props":1160,"children":1161},{"style":899},[1162],{"type":561,"value":1019},{"type":556,"tag":588,"props":1164,"children":1165},{"style":871},[1166],{"type":561,"value":1024},{"type":556,"tag":588,"props":1168,"children":1169},{"style":871},[1170],{"type":561,"value":1029},{"type":556,"tag":588,"props":1172,"children":1174},{"class":590,"line":1173},19,[1175,1180,1185,1189,1194,1199,1203,1208,1213,1218,1222],{"type":556,"tag":588,"props":1176,"children":1177},{"style":980},[1178],{"type":561,"value":1179},"    const",{"type":556,"tag":588,"props":1181,"children":1182},{"style":899},[1183],{"type":561,"value":1184}," n1",{"type":556,"tag":588,"props":1186,"children":1187},{"style":871},[1188],{"type":561,"value":994},{"type":556,"tag":588,"props":1190,"children":1191},{"style":899},[1192],{"type":561,"value":1193}," l1",{"type":556,"tag":588,"props":1195,"children":1196},{"style":980},[1197],{"type":561,"value":1198}," ?",{"type":556,"tag":588,"props":1200,"children":1201},{"style":899},[1202],{"type":561,"value":1193},{"type":556,"tag":588,"props":1204,"children":1205},{"style":871},[1206],{"type":561,"value":1207},".",{"type":556,"tag":588,"props":1209,"children":1210},{"style":899},[1211],{"type":561,"value":1212},"val",{"type":556,"tag":588,"props":1214,"children":1215},{"style":980},[1216],{"type":561,"value":1217}," :",{"type":556,"tag":588,"props":1219,"children":1220},{"style":1065},[1221],{"type":561,"value":1122},{"type":556,"tag":588,"props":1223,"children":1224},{"style":871},[1225],{"type":561,"value":1100},{"type":556,"tag":588,"props":1227,"children":1229},{"class":590,"line":1228},20,[1230,1234,1239,1243,1247,1251,1255,1259,1263,1267,1271],{"type":556,"tag":588,"props":1231,"children":1232},{"style":980},[1233],{"type":561,"value":1179},{"type":556,"tag":588,"props":1235,"children":1236},{"style":899},[1237],{"type":561,"value":1238}," n2",{"type":556,"tag":588,"props":1240,"children":1241},{"style":871},[1242],{"type":561,"value":994},{"type":556,"tag":588,"props":1244,"children":1245},{"style":899},[1246],{"type":561,"value":1019},{"type":556,"tag":588,"props":1248,"children":1249},{"style":980},[1250],{"type":561,"value":1198},{"type":556,"tag":588,"props":1252,"children":1253},{"style":899},[1254],{"type":561,"value":1019},{"type":556,"tag":588,"props":1256,"children":1257},{"style":871},[1258],{"type":561,"value":1207},{"type":556,"tag":588,"props":1260,"children":1261},{"style":899},[1262],{"type":561,"value":1212},{"type":556,"tag":588,"props":1264,"children":1265},{"style":980},[1266],{"type":561,"value":1217},{"type":556,"tag":588,"props":1268,"children":1269},{"style":1065},[1270],{"type":561,"value":1122},{"type":556,"tag":588,"props":1272,"children":1273},{"style":871},[1274],{"type":561,"value":1100},{"type":556,"tag":588,"props":1276,"children":1278},{"class":590,"line":1277},21,[1279,1283,1288,1292,1296,1301,1305,1309,1313],{"type":556,"tag":588,"props":1280,"children":1281},{"style":980},[1282],{"type":561,"value":1179},{"type":556,"tag":588,"props":1284,"children":1285},{"style":899},[1286],{"type":561,"value":1287}," sum",{"type":556,"tag":588,"props":1289,"children":1290},{"style":871},[1291],{"type":561,"value":994},{"type":556,"tag":588,"props":1293,"children":1294},{"style":899},[1295],{"type":561,"value":1184},{"type":556,"tag":588,"props":1297,"children":1298},{"style":980},[1299],{"type":561,"value":1300}," +",{"type":556,"tag":588,"props":1302,"children":1303},{"style":899},[1304],{"type":561,"value":1238},{"type":556,"tag":588,"props":1306,"children":1307},{"style":980},[1308],{"type":561,"value":1300},{"type":556,"tag":588,"props":1310,"children":1311},{"style":899},[1312],{"type":561,"value":1113},{"type":556,"tag":588,"props":1314,"children":1315},{"style":871},[1316],{"type":561,"value":1100},{"type":556,"tag":588,"props":1318,"children":1320},{"class":590,"line":1319},22,[1321,1326,1330,1335,1339,1344,1349,1354],{"type":556,"tag":588,"props":1322,"children":1323},{"style":899},[1324],{"type":561,"value":1325},"    curry",{"type":556,"tag":588,"props":1327,"children":1328},{"style":871},[1329],{"type":561,"value":994},{"type":556,"tag":588,"props":1331,"children":1332},{"style":986},[1333],{"type":561,"value":1334}," parseInt",{"type":556,"tag":588,"props":1336,"children":1337},{"style":871},[1338],{"type":561,"value":1062},{"type":556,"tag":588,"props":1340,"children":1341},{"style":899},[1342],{"type":561,"value":1343},"sum",{"type":556,"tag":588,"props":1345,"children":1346},{"style":980},[1347],{"type":561,"value":1348}," /",{"type":556,"tag":588,"props":1350,"children":1351},{"style":1065},[1352],{"type":561,"value":1353}," 10",{"type":556,"tag":588,"props":1355,"children":1356},{"style":871},[1357],{"type":561,"value":1073},{"type":556,"tag":588,"props":1359,"children":1361},{"class":590,"line":1360},23,[1362,1367,1371,1376,1380,1384,1388,1392,1396,1401,1405],{"type":556,"tag":588,"props":1363,"children":1364},{"style":899},[1365],{"type":561,"value":1366},"    current",{"type":556,"tag":588,"props":1368,"children":1369},{"style":871},[1370],{"type":561,"value":1207},{"type":556,"tag":588,"props":1372,"children":1373},{"style":899},[1374],{"type":561,"value":1375},"next",{"type":556,"tag":588,"props":1377,"children":1378},{"style":871},[1379],{"type":561,"value":994},{"type":556,"tag":588,"props":1381,"children":1382},{"style":980},[1383],{"type":561,"value":1052},{"type":556,"tag":588,"props":1385,"children":1386},{"style":986},[1387],{"type":561,"value":1057},{"type":556,"tag":588,"props":1389,"children":1390},{"style":871},[1391],{"type":561,"value":1062},{"type":556,"tag":588,"props":1393,"children":1394},{"style":899},[1395],{"type":561,"value":1343},{"type":556,"tag":588,"props":1397,"children":1398},{"style":980},[1399],{"type":561,"value":1400}," %",{"type":556,"tag":588,"props":1402,"children":1403},{"style":1065},[1404],{"type":561,"value":1353},{"type":556,"tag":588,"props":1406,"children":1407},{"style":871},[1408],{"type":561,"value":1073},{"type":556,"tag":588,"props":1410,"children":1412},{"class":590,"line":1411},24,[1413,1417,1421,1425,1429,1433],{"type":556,"tag":588,"props":1414,"children":1415},{"style":899},[1416],{"type":561,"value":1366},{"type":556,"tag":588,"props":1418,"children":1419},{"style":871},[1420],{"type":561,"value":994},{"type":556,"tag":588,"props":1422,"children":1423},{"style":899},[1424],{"type":561,"value":1087},{"type":556,"tag":588,"props":1426,"children":1427},{"style":871},[1428],{"type":561,"value":1207},{"type":556,"tag":588,"props":1430,"children":1431},{"style":899},[1432],{"type":561,"value":1375},{"type":556,"tag":588,"props":1434,"children":1435},{"style":871},[1436],{"type":561,"value":1100},{"type":556,"tag":588,"props":1438,"children":1440},{"class":590,"line":1439},25,[1441],{"type":556,"tag":588,"props":1442,"children":1443},{"emptyLinePlaceholder":1133},[1444],{"type":561,"value":1136},{"type":556,"tag":588,"props":1446,"children":1448},{"class":590,"line":1447},26,[1449,1454,1458,1462,1466],{"type":556,"tag":588,"props":1450,"children":1451},{"style":877},[1452],{"type":561,"value":1453},"    if",{"type":556,"tag":588,"props":1455,"children":1456},{"style":871},[1457],{"type":561,"value":1004},{"type":556,"tag":588,"props":1459,"children":1460},{"style":899},[1461],{"type":561,"value":1009},{"type":556,"tag":588,"props":1463,"children":1464},{"style":871},[1465],{"type":561,"value":1024},{"type":556,"tag":588,"props":1467,"children":1468},{"style":871},[1469],{"type":561,"value":1029},{"type":556,"tag":588,"props":1471,"children":1473},{"class":590,"line":1472},27,[1474,1479,1483,1487,1491,1495],{"type":556,"tag":588,"props":1475,"children":1476},{"style":899},[1477],{"type":561,"value":1478},"      l1",{"type":556,"tag":588,"props":1480,"children":1481},{"style":871},[1482],{"type":561,"value":994},{"type":556,"tag":588,"props":1484,"children":1485},{"style":899},[1486],{"type":561,"value":1193},{"type":556,"tag":588,"props":1488,"children":1489},{"style":871},[1490],{"type":561,"value":1207},{"type":556,"tag":588,"props":1492,"children":1493},{"style":899},[1494],{"type":561,"value":1375},{"type":556,"tag":588,"props":1496,"children":1497},{"style":871},[1498],{"type":561,"value":1100},{"type":556,"tag":588,"props":1500,"children":1502},{"class":590,"line":1501},28,[1503],{"type":556,"tag":588,"props":1504,"children":1505},{"style":871},[1506],{"type":561,"value":1507},"    }\n",{"type":556,"tag":588,"props":1509,"children":1511},{"class":590,"line":1510},29,[1512,1516,1520,1525,1529],{"type":556,"tag":588,"props":1513,"children":1514},{"style":877},[1515],{"type":561,"value":1453},{"type":556,"tag":588,"props":1517,"children":1518},{"style":871},[1519],{"type":561,"value":1004},{"type":556,"tag":588,"props":1521,"children":1522},{"style":899},[1523],{"type":561,"value":1524},"l2",{"type":556,"tag":588,"props":1526,"children":1527},{"style":871},[1528],{"type":561,"value":1024},{"type":556,"tag":588,"props":1530,"children":1531},{"style":871},[1532],{"type":561,"value":1029},{"type":556,"tag":588,"props":1534,"children":1536},{"class":590,"line":1535},30,[1537,1542,1546,1550,1554,1558],{"type":556,"tag":588,"props":1538,"children":1539},{"style":899},[1540],{"type":561,"value":1541},"      l2",{"type":556,"tag":588,"props":1543,"children":1544},{"style":871},[1545],{"type":561,"value":994},{"type":556,"tag":588,"props":1547,"children":1548},{"style":899},[1549],{"type":561,"value":1019},{"type":556,"tag":588,"props":1551,"children":1552},{"style":871},[1553],{"type":561,"value":1207},{"type":556,"tag":588,"props":1555,"children":1556},{"style":899},[1557],{"type":561,"value":1375},{"type":556,"tag":588,"props":1559,"children":1560},{"style":871},[1561],{"type":561,"value":1100},{"type":556,"tag":588,"props":1563,"children":1565},{"class":590,"line":1564},31,[1566],{"type":556,"tag":588,"props":1567,"children":1568},{"style":871},[1569],{"type":561,"value":1507},{"type":556,"tag":588,"props":1571,"children":1573},{"class":590,"line":1572},32,[1574],{"type":556,"tag":588,"props":1575,"children":1576},{"style":871},[1577],{"type":561,"value":1578},"  }\n",{"type":556,"tag":588,"props":1580,"children":1582},{"class":590,"line":1581},33,[1583],{"type":556,"tag":588,"props":1584,"children":1585},{"emptyLinePlaceholder":1133},[1586],{"type":561,"value":1136},{"type":556,"tag":588,"props":1588,"children":1590},{"class":590,"line":1589},34,[1591,1596,1600,1605,1610,1614,1618],{"type":556,"tag":588,"props":1592,"children":1593},{"style":877},[1594],{"type":561,"value":1595},"  if",{"type":556,"tag":588,"props":1597,"children":1598},{"style":871},[1599],{"type":561,"value":1004},{"type":556,"tag":588,"props":1601,"children":1602},{"style":899},[1603],{"type":561,"value":1604},"curry",{"type":556,"tag":588,"props":1606,"children":1607},{"style":871},[1608],{"type":561,"value":1609}," >",{"type":556,"tag":588,"props":1611,"children":1612},{"style":1065},[1613],{"type":561,"value":1122},{"type":556,"tag":588,"props":1615,"children":1616},{"style":871},[1617],{"type":561,"value":1024},{"type":556,"tag":588,"props":1619,"children":1620},{"style":871},[1621],{"type":561,"value":1029},{"type":556,"tag":588,"props":1623,"children":1625},{"class":590,"line":1624},35,[1626,1630,1634,1638,1642,1646,1650,1654,1658],{"type":556,"tag":588,"props":1627,"children":1628},{"style":899},[1629],{"type":561,"value":1366},{"type":556,"tag":588,"props":1631,"children":1632},{"style":871},[1633],{"type":561,"value":1207},{"type":556,"tag":588,"props":1635,"children":1636},{"style":899},[1637],{"type":561,"value":1375},{"type":556,"tag":588,"props":1639,"children":1640},{"style":871},[1641],{"type":561,"value":994},{"type":556,"tag":588,"props":1643,"children":1644},{"style":980},[1645],{"type":561,"value":1052},{"type":556,"tag":588,"props":1647,"children":1648},{"style":986},[1649],{"type":561,"value":1057},{"type":556,"tag":588,"props":1651,"children":1652},{"style":871},[1653],{"type":561,"value":1062},{"type":556,"tag":588,"props":1655,"children":1656},{"style":899},[1657],{"type":561,"value":1604},{"type":556,"tag":588,"props":1659,"children":1660},{"style":871},[1661],{"type":561,"value":1073},{"type":556,"tag":588,"props":1663,"children":1665},{"class":590,"line":1664},36,[1666],{"type":556,"tag":588,"props":1667,"children":1668},{"style":871},[1669],{"type":561,"value":1578},{"type":556,"tag":588,"props":1671,"children":1673},{"class":590,"line":1672},37,[1674,1679,1683,1687,1691],{"type":556,"tag":588,"props":1675,"children":1676},{"style":877},[1677],{"type":561,"value":1678},"  return",{"type":556,"tag":588,"props":1680,"children":1681},{"style":899},[1682],{"type":561,"value":1043},{"type":556,"tag":588,"props":1684,"children":1685},{"style":871},[1686],{"type":561,"value":1207},{"type":556,"tag":588,"props":1688,"children":1689},{"style":899},[1690],{"type":561,"value":1375},{"type":556,"tag":588,"props":1692,"children":1693},{"style":871},[1694],{"type":561,"value":1100},{"type":556,"tag":588,"props":1696,"children":1698},{"class":590,"line":1697},38,[1699],{"type":556,"tag":588,"props":1700,"children":1701},{"style":871},[1702],{"type":561,"value":1703},"};\n",{"type":556,"tag":1705,"props":1706,"children":1707},"style",{},[1708],{"type":561,"value":1709},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":827,"depth":827,"links":1711},[1712,1713],{"id":700,"depth":600,"text":700},{"id":724,"depth":600,"text":724,"children":1714},[1715,1716],{"id":774,"depth":609,"text":774},{"id":779,"depth":609,"text":779},"markdown","content:1.algorithm:3.leetcode:3.major:2.add-two-numbers.md","content","1.algorithm/3.leetcode/3.major/2.add-two-numbers.md","md",[1723,1725],{"_path":60,"title":59,"description":1724},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":66,"title":65,"description":1726},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1714279828684]