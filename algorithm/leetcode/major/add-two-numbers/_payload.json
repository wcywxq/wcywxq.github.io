[{"data":1,"prerenderedAt":1613},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-two-numbers":466,"/algorithm/leetcode/major/add-two-numbers-surround":1608},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":63,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":62,"description":470,"url":471,"body":472,"_type":1603,"_id":1604,"_source":1605,"_file":1606,"_extension":1607},"major",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":473,"children":474,"toc":1596},"root",[475,482,487,492,497,536,541,564,569,592,597,617,623,642,647,691,697,702,1590],{"type":476,"tag":477,"props":478,"children":479},"element","p",{},[480],{"type":481,"value":470},"text",{"type":476,"tag":477,"props":483,"children":484},{},[485],{"type":481,"value":486},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":476,"tag":477,"props":488,"children":489},{},[490],{"type":481,"value":491},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":476,"tag":477,"props":493,"children":494},{},[495],{"type":481,"value":496},"示例 1：",{"type":476,"tag":498,"props":499,"children":502},"pre",{"className":500,"code":501,"language":481,"meta":469,"style":469},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[503],{"type":476,"tag":504,"props":505,"children":506},"code",{"__ignoreMap":469},[507,518,527],{"type":476,"tag":508,"props":509,"children":512},"span",{"class":510,"line":511},"line",1,[513],{"type":476,"tag":508,"props":514,"children":515},{},[516],{"type":481,"value":517},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":476,"tag":508,"props":519,"children":521},{"class":510,"line":520},2,[522],{"type":476,"tag":508,"props":523,"children":524},{},[525],{"type":481,"value":526},"输出：[7,0,8]\n",{"type":476,"tag":508,"props":528,"children":530},{"class":510,"line":529},3,[531],{"type":476,"tag":508,"props":532,"children":533},{},[534],{"type":481,"value":535},"解释：342 + 465 = 807.\n",{"type":476,"tag":477,"props":537,"children":538},{},[539],{"type":481,"value":540},"示例 2：",{"type":476,"tag":498,"props":542,"children":544},{"className":500,"code":543,"language":481,"meta":469,"style":469},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[545],{"type":476,"tag":504,"props":546,"children":547},{"__ignoreMap":469},[548,556],{"type":476,"tag":508,"props":549,"children":550},{"class":510,"line":511},[551],{"type":476,"tag":508,"props":552,"children":553},{},[554],{"type":481,"value":555},"输入：l1 = [0], l2 = [0]\n",{"type":476,"tag":508,"props":557,"children":558},{"class":510,"line":520},[559],{"type":476,"tag":508,"props":560,"children":561},{},[562],{"type":481,"value":563},"输出：[0]\n",{"type":476,"tag":477,"props":565,"children":566},{},[567],{"type":481,"value":568},"示例 3：",{"type":476,"tag":498,"props":570,"children":572},{"className":500,"code":571,"language":481,"meta":469,"style":469},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[573],{"type":476,"tag":504,"props":574,"children":575},{"__ignoreMap":469},[576,584],{"type":476,"tag":508,"props":577,"children":578},{"class":510,"line":511},[579],{"type":476,"tag":508,"props":580,"children":581},{},[582],{"type":481,"value":583},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":476,"tag":508,"props":585,"children":586},{"class":510,"line":520},[587],{"type":476,"tag":508,"props":588,"children":589},{},[590],{"type":481,"value":591},"输出：[8,9,9,9,0,0,0,1]\n",{"type":476,"tag":477,"props":593,"children":594},{},[595],{"type":481,"value":596},"提示：",{"type":476,"tag":598,"props":599,"children":600},"ul",{},[601,607,612],{"type":476,"tag":602,"props":603,"children":604},"li",{},[605],{"type":481,"value":606},"每个链表中的节点数在范围 [1, 100] 内",{"type":476,"tag":602,"props":608,"children":609},{},[610],{"type":481,"value":611},"0 \u003C= Node.val \u003C= 9",{"type":476,"tag":602,"props":613,"children":614},{},[615],{"type":481,"value":616},"题目数据保证列表表示的数字不含前导零",{"type":476,"tag":618,"props":619,"children":621},"h2",{"id":620},"解题思路",[622],{"type":481,"value":620},{"type":476,"tag":624,"props":625,"children":626},"ol",{},[627,632,637],{"type":476,"tag":602,"props":628,"children":629},{},[630],{"type":481,"value":631},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":476,"tag":602,"props":633,"children":634},{},[635],{"type":481,"value":636},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":476,"tag":602,"props":638,"children":639},{},[640],{"type":481,"value":641},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":476,"tag":618,"props":643,"children":645},{"id":644},"图解",[646],{"type":481,"value":644},{"type":476,"tag":477,"props":648,"children":649},{},[650,656,661,666,671,676,681,686],{"type":476,"tag":651,"props":652,"children":655},"img",{"alt":653,"src":654},"figure_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_1.png",[],{"type":476,"tag":651,"props":657,"children":660},{"alt":658,"src":659},"figure_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_2.png",[],{"type":476,"tag":651,"props":662,"children":665},{"alt":663,"src":664},"figure_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_3.png",[],{"type":476,"tag":651,"props":667,"children":670},{"alt":668,"src":669},"figure_4","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_4.png",[],{"type":476,"tag":651,"props":672,"children":675},{"alt":673,"src":674},"figure_5","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_5.png",[],{"type":476,"tag":651,"props":677,"children":680},{"alt":678,"src":679},"figure_6","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_6.png",[],{"type":476,"tag":651,"props":682,"children":685},{"alt":683,"src":684},"figure_7","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_7.png",[],{"type":476,"tag":651,"props":687,"children":690},{"alt":688,"src":689},"figure_8","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_8.png",[],{"type":476,"tag":692,"props":693,"children":695},"h3",{"id":694},"实现",[696],{"type":481,"value":694},{"type":476,"tag":692,"props":698,"children":700},{"id":699},"构造哑节点",[701],{"type":481,"value":699},{"type":476,"tag":498,"props":703,"children":707},{"className":704,"code":705,"language":706,"meta":469,"style":469},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[708],{"type":476,"tag":504,"props":709,"children":710},{"__ignoreMap":469},[711,720,728,736,745,754,763,772,780,807,828,846,854,909,959,985,1011,1021,1052,1108,1157,1199,1244,1299,1327,1335,1356,1385,1394,1415,1444,1452,1461,1469,1500,1544,1552,1577],{"type":476,"tag":508,"props":712,"children":713},{"class":510,"line":511},[714],{"type":476,"tag":508,"props":715,"children":717},{"style":716},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[718],{"type":481,"value":719},"/**\n",{"type":476,"tag":508,"props":721,"children":722},{"class":510,"line":520},[723],{"type":476,"tag":508,"props":724,"children":725},{"style":716},[726],{"type":481,"value":727}," * Definition for singly-linked list.\n",{"type":476,"tag":508,"props":729,"children":730},{"class":510,"line":529},[731],{"type":476,"tag":508,"props":732,"children":733},{"style":716},[734],{"type":481,"value":735}," * function ListNode(val) {\n",{"type":476,"tag":508,"props":737,"children":739},{"class":510,"line":738},4,[740],{"type":476,"tag":508,"props":741,"children":742},{"style":716},[743],{"type":481,"value":744}," *     this.val = val;\n",{"type":476,"tag":508,"props":746,"children":748},{"class":510,"line":747},5,[749],{"type":476,"tag":508,"props":750,"children":751},{"style":716},[752],{"type":481,"value":753}," *     this.next = null;\n",{"type":476,"tag":508,"props":755,"children":757},{"class":510,"line":756},6,[758],{"type":476,"tag":508,"props":759,"children":760},{"style":716},[761],{"type":481,"value":762}," * }\n",{"type":476,"tag":508,"props":764,"children":766},{"class":510,"line":765},7,[767],{"type":476,"tag":508,"props":768,"children":769},{"style":716},[770],{"type":481,"value":771}," */\n",{"type":476,"tag":508,"props":773,"children":775},{"class":510,"line":774},8,[776],{"type":476,"tag":508,"props":777,"children":778},{"style":716},[779],{"type":481,"value":719},{"type":476,"tag":508,"props":781,"children":783},{"class":510,"line":782},9,[784,789,795,801],{"type":476,"tag":508,"props":785,"children":786},{"style":716},[787],{"type":481,"value":788}," * ",{"type":476,"tag":508,"props":790,"children":792},{"style":791},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[793],{"type":481,"value":794},"@param",{"type":476,"tag":508,"props":796,"children":798},{"style":797},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[799],{"type":481,"value":800}," {ListNode}",{"type":476,"tag":508,"props":802,"children":804},{"style":803},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[805],{"type":481,"value":806}," l1\n",{"type":476,"tag":508,"props":808,"children":810},{"class":510,"line":809},10,[811,815,819,823],{"type":476,"tag":508,"props":812,"children":813},{"style":716},[814],{"type":481,"value":788},{"type":476,"tag":508,"props":816,"children":817},{"style":791},[818],{"type":481,"value":794},{"type":476,"tag":508,"props":820,"children":821},{"style":797},[822],{"type":481,"value":800},{"type":476,"tag":508,"props":824,"children":825},{"style":803},[826],{"type":481,"value":827}," l2\n",{"type":476,"tag":508,"props":829,"children":831},{"class":510,"line":830},11,[832,836,841],{"type":476,"tag":508,"props":833,"children":834},{"style":716},[835],{"type":481,"value":788},{"type":476,"tag":508,"props":837,"children":838},{"style":791},[839],{"type":481,"value":840},"@return",{"type":476,"tag":508,"props":842,"children":843},{"style":797},[844],{"type":481,"value":845}," {ListNode}\n",{"type":476,"tag":508,"props":847,"children":849},{"class":510,"line":848},12,[850],{"type":476,"tag":508,"props":851,"children":852},{"style":716},[853],{"type":481,"value":771},{"type":476,"tag":508,"props":855,"children":857},{"class":510,"line":856},13,[858,864,870,876,881,887,893,899,904],{"type":476,"tag":508,"props":859,"children":861},{"style":860},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[862],{"type":481,"value":863},"var",{"type":476,"tag":508,"props":865,"children":867},{"style":866},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[868],{"type":481,"value":869}," addTwoNumbers",{"type":476,"tag":508,"props":871,"children":873},{"style":872},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[874],{"type":481,"value":875}," =",{"type":476,"tag":508,"props":877,"children":878},{"style":860},[879],{"type":481,"value":880}," function",{"type":476,"tag":508,"props":882,"children":884},{"style":883},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[885],{"type":481,"value":886}," (",{"type":476,"tag":508,"props":888,"children":890},{"style":889},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[891],{"type":481,"value":892},"l1",{"type":476,"tag":508,"props":894,"children":896},{"style":895},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[897],{"type":481,"value":898},",",{"type":476,"tag":508,"props":900,"children":901},{"style":889},[902],{"type":481,"value":903}," l2",{"type":476,"tag":508,"props":905,"children":906},{"style":883},[907],{"type":481,"value":908},") {\n",{"type":476,"tag":508,"props":910,"children":912},{"class":510,"line":911},14,[913,918,924,928,933,938,943,949,954],{"type":476,"tag":508,"props":914,"children":915},{"style":860},[916],{"type":481,"value":917},"  const",{"type":476,"tag":508,"props":919,"children":921},{"style":920},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[922],{"type":481,"value":923}," node",{"type":476,"tag":508,"props":925,"children":926},{"style":872},[927],{"type":481,"value":875},{"type":476,"tag":508,"props":929,"children":930},{"style":872},[931],{"type":481,"value":932}," new",{"type":476,"tag":508,"props":934,"children":935},{"style":866},[936],{"type":481,"value":937}," ListNode",{"type":476,"tag":508,"props":939,"children":940},{"style":883},[941],{"type":481,"value":942},"(",{"type":476,"tag":508,"props":944,"children":946},{"style":945},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[947],{"type":481,"value":948},"0",{"type":476,"tag":508,"props":950,"children":951},{"style":883},[952],{"type":481,"value":953},")",{"type":476,"tag":508,"props":955,"children":956},{"style":895},[957],{"type":481,"value":958},";\n",{"type":476,"tag":508,"props":960,"children":962},{"class":510,"line":961},15,[963,968,973,977,981],{"type":476,"tag":508,"props":964,"children":965},{"style":860},[966],{"type":481,"value":967},"  let",{"type":476,"tag":508,"props":969,"children":970},{"style":920},[971],{"type":481,"value":972}," current",{"type":476,"tag":508,"props":974,"children":975},{"style":872},[976],{"type":481,"value":875},{"type":476,"tag":508,"props":978,"children":979},{"style":920},[980],{"type":481,"value":923},{"type":476,"tag":508,"props":982,"children":983},{"style":895},[984],{"type":481,"value":958},{"type":476,"tag":508,"props":986,"children":988},{"class":510,"line":987},16,[989,993,998,1002,1007],{"type":476,"tag":508,"props":990,"children":991},{"style":860},[992],{"type":481,"value":967},{"type":476,"tag":508,"props":994,"children":995},{"style":920},[996],{"type":481,"value":997}," curry",{"type":476,"tag":508,"props":999,"children":1000},{"style":872},[1001],{"type":481,"value":875},{"type":476,"tag":508,"props":1003,"children":1004},{"style":945},[1005],{"type":481,"value":1006}," 0",{"type":476,"tag":508,"props":1008,"children":1009},{"style":895},[1010],{"type":481,"value":958},{"type":476,"tag":508,"props":1012,"children":1014},{"class":510,"line":1013},17,[1015],{"type":476,"tag":508,"props":1016,"children":1018},{"emptyLinePlaceholder":1017},true,[1019],{"type":481,"value":1020},"\n",{"type":476,"tag":508,"props":1022,"children":1024},{"class":510,"line":1023},18,[1025,1031,1035,1039,1044,1048],{"type":476,"tag":508,"props":1026,"children":1028},{"style":1027},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1029],{"type":481,"value":1030},"  while",{"type":476,"tag":508,"props":1032,"children":1033},{"style":883},[1034],{"type":481,"value":886},{"type":476,"tag":508,"props":1036,"children":1037},{"style":920},[1038],{"type":481,"value":892},{"type":476,"tag":508,"props":1040,"children":1041},{"style":872},[1042],{"type":481,"value":1043}," ||",{"type":476,"tag":508,"props":1045,"children":1046},{"style":920},[1047],{"type":481,"value":903},{"type":476,"tag":508,"props":1049,"children":1050},{"style":883},[1051],{"type":481,"value":908},{"type":476,"tag":508,"props":1053,"children":1055},{"class":510,"line":1054},19,[1056,1061,1066,1070,1075,1080,1084,1090,1095,1100,1104],{"type":476,"tag":508,"props":1057,"children":1058},{"style":860},[1059],{"type":481,"value":1060},"    const",{"type":476,"tag":508,"props":1062,"children":1063},{"style":920},[1064],{"type":481,"value":1065}," n1",{"type":476,"tag":508,"props":1067,"children":1068},{"style":872},[1069],{"type":481,"value":875},{"type":476,"tag":508,"props":1071,"children":1072},{"style":920},[1073],{"type":481,"value":1074}," l1",{"type":476,"tag":508,"props":1076,"children":1077},{"style":872},[1078],{"type":481,"value":1079}," ?",{"type":476,"tag":508,"props":1081,"children":1082},{"style":920},[1083],{"type":481,"value":1074},{"type":476,"tag":508,"props":1085,"children":1087},{"style":1086},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[1088],{"type":481,"value":1089},".",{"type":476,"tag":508,"props":1091,"children":1092},{"style":920},[1093],{"type":481,"value":1094},"val",{"type":476,"tag":508,"props":1096,"children":1097},{"style":872},[1098],{"type":481,"value":1099}," :",{"type":476,"tag":508,"props":1101,"children":1102},{"style":945},[1103],{"type":481,"value":1006},{"type":476,"tag":508,"props":1105,"children":1106},{"style":895},[1107],{"type":481,"value":958},{"type":476,"tag":508,"props":1109,"children":1111},{"class":510,"line":1110},20,[1112,1116,1121,1125,1129,1133,1137,1141,1145,1149,1153],{"type":476,"tag":508,"props":1113,"children":1114},{"style":860},[1115],{"type":481,"value":1060},{"type":476,"tag":508,"props":1117,"children":1118},{"style":920},[1119],{"type":481,"value":1120}," n2",{"type":476,"tag":508,"props":1122,"children":1123},{"style":872},[1124],{"type":481,"value":875},{"type":476,"tag":508,"props":1126,"children":1127},{"style":920},[1128],{"type":481,"value":903},{"type":476,"tag":508,"props":1130,"children":1131},{"style":872},[1132],{"type":481,"value":1079},{"type":476,"tag":508,"props":1134,"children":1135},{"style":920},[1136],{"type":481,"value":903},{"type":476,"tag":508,"props":1138,"children":1139},{"style":1086},[1140],{"type":481,"value":1089},{"type":476,"tag":508,"props":1142,"children":1143},{"style":920},[1144],{"type":481,"value":1094},{"type":476,"tag":508,"props":1146,"children":1147},{"style":872},[1148],{"type":481,"value":1099},{"type":476,"tag":508,"props":1150,"children":1151},{"style":945},[1152],{"type":481,"value":1006},{"type":476,"tag":508,"props":1154,"children":1155},{"style":895},[1156],{"type":481,"value":958},{"type":476,"tag":508,"props":1158,"children":1160},{"class":510,"line":1159},21,[1161,1165,1170,1174,1178,1183,1187,1191,1195],{"type":476,"tag":508,"props":1162,"children":1163},{"style":860},[1164],{"type":481,"value":1060},{"type":476,"tag":508,"props":1166,"children":1167},{"style":920},[1168],{"type":481,"value":1169}," sum",{"type":476,"tag":508,"props":1171,"children":1172},{"style":872},[1173],{"type":481,"value":875},{"type":476,"tag":508,"props":1175,"children":1176},{"style":920},[1177],{"type":481,"value":1065},{"type":476,"tag":508,"props":1179,"children":1180},{"style":872},[1181],{"type":481,"value":1182}," +",{"type":476,"tag":508,"props":1184,"children":1185},{"style":920},[1186],{"type":481,"value":1120},{"type":476,"tag":508,"props":1188,"children":1189},{"style":872},[1190],{"type":481,"value":1182},{"type":476,"tag":508,"props":1192,"children":1193},{"style":920},[1194],{"type":481,"value":997},{"type":476,"tag":508,"props":1196,"children":1197},{"style":895},[1198],{"type":481,"value":958},{"type":476,"tag":508,"props":1200,"children":1202},{"class":510,"line":1201},22,[1203,1208,1212,1217,1221,1226,1231,1236,1240],{"type":476,"tag":508,"props":1204,"children":1205},{"style":920},[1206],{"type":481,"value":1207},"    curry",{"type":476,"tag":508,"props":1209,"children":1210},{"style":872},[1211],{"type":481,"value":875},{"type":476,"tag":508,"props":1213,"children":1214},{"style":866},[1215],{"type":481,"value":1216}," parseInt",{"type":476,"tag":508,"props":1218,"children":1219},{"style":883},[1220],{"type":481,"value":942},{"type":476,"tag":508,"props":1222,"children":1223},{"style":920},[1224],{"type":481,"value":1225},"sum",{"type":476,"tag":508,"props":1227,"children":1228},{"style":872},[1229],{"type":481,"value":1230}," /",{"type":476,"tag":508,"props":1232,"children":1233},{"style":945},[1234],{"type":481,"value":1235}," 10",{"type":476,"tag":508,"props":1237,"children":1238},{"style":883},[1239],{"type":481,"value":953},{"type":476,"tag":508,"props":1241,"children":1242},{"style":895},[1243],{"type":481,"value":958},{"type":476,"tag":508,"props":1245,"children":1247},{"class":510,"line":1246},23,[1248,1253,1257,1262,1266,1270,1274,1278,1282,1287,1291,1295],{"type":476,"tag":508,"props":1249,"children":1250},{"style":920},[1251],{"type":481,"value":1252},"    current",{"type":476,"tag":508,"props":1254,"children":1255},{"style":1086},[1256],{"type":481,"value":1089},{"type":476,"tag":508,"props":1258,"children":1259},{"style":920},[1260],{"type":481,"value":1261},"next",{"type":476,"tag":508,"props":1263,"children":1264},{"style":872},[1265],{"type":481,"value":875},{"type":476,"tag":508,"props":1267,"children":1268},{"style":872},[1269],{"type":481,"value":932},{"type":476,"tag":508,"props":1271,"children":1272},{"style":866},[1273],{"type":481,"value":937},{"type":476,"tag":508,"props":1275,"children":1276},{"style":883},[1277],{"type":481,"value":942},{"type":476,"tag":508,"props":1279,"children":1280},{"style":920},[1281],{"type":481,"value":1225},{"type":476,"tag":508,"props":1283,"children":1284},{"style":872},[1285],{"type":481,"value":1286}," %",{"type":476,"tag":508,"props":1288,"children":1289},{"style":945},[1290],{"type":481,"value":1235},{"type":476,"tag":508,"props":1292,"children":1293},{"style":883},[1294],{"type":481,"value":953},{"type":476,"tag":508,"props":1296,"children":1297},{"style":895},[1298],{"type":481,"value":958},{"type":476,"tag":508,"props":1300,"children":1302},{"class":510,"line":1301},24,[1303,1307,1311,1315,1319,1323],{"type":476,"tag":508,"props":1304,"children":1305},{"style":920},[1306],{"type":481,"value":1252},{"type":476,"tag":508,"props":1308,"children":1309},{"style":872},[1310],{"type":481,"value":875},{"type":476,"tag":508,"props":1312,"children":1313},{"style":920},[1314],{"type":481,"value":972},{"type":476,"tag":508,"props":1316,"children":1317},{"style":1086},[1318],{"type":481,"value":1089},{"type":476,"tag":508,"props":1320,"children":1321},{"style":920},[1322],{"type":481,"value":1261},{"type":476,"tag":508,"props":1324,"children":1325},{"style":895},[1326],{"type":481,"value":958},{"type":476,"tag":508,"props":1328,"children":1330},{"class":510,"line":1329},25,[1331],{"type":476,"tag":508,"props":1332,"children":1333},{"emptyLinePlaceholder":1017},[1334],{"type":481,"value":1020},{"type":476,"tag":508,"props":1336,"children":1338},{"class":510,"line":1337},26,[1339,1344,1348,1352],{"type":476,"tag":508,"props":1340,"children":1341},{"style":1027},[1342],{"type":481,"value":1343},"    if",{"type":476,"tag":508,"props":1345,"children":1346},{"style":883},[1347],{"type":481,"value":886},{"type":476,"tag":508,"props":1349,"children":1350},{"style":920},[1351],{"type":481,"value":892},{"type":476,"tag":508,"props":1353,"children":1354},{"style":883},[1355],{"type":481,"value":908},{"type":476,"tag":508,"props":1357,"children":1359},{"class":510,"line":1358},27,[1360,1365,1369,1373,1377,1381],{"type":476,"tag":508,"props":1361,"children":1362},{"style":920},[1363],{"type":481,"value":1364},"      l1",{"type":476,"tag":508,"props":1366,"children":1367},{"style":872},[1368],{"type":481,"value":875},{"type":476,"tag":508,"props":1370,"children":1371},{"style":920},[1372],{"type":481,"value":1074},{"type":476,"tag":508,"props":1374,"children":1375},{"style":1086},[1376],{"type":481,"value":1089},{"type":476,"tag":508,"props":1378,"children":1379},{"style":920},[1380],{"type":481,"value":1261},{"type":476,"tag":508,"props":1382,"children":1383},{"style":895},[1384],{"type":481,"value":958},{"type":476,"tag":508,"props":1386,"children":1388},{"class":510,"line":1387},28,[1389],{"type":476,"tag":508,"props":1390,"children":1391},{"style":883},[1392],{"type":481,"value":1393},"    }\n",{"type":476,"tag":508,"props":1395,"children":1397},{"class":510,"line":1396},29,[1398,1402,1406,1411],{"type":476,"tag":508,"props":1399,"children":1400},{"style":1027},[1401],{"type":481,"value":1343},{"type":476,"tag":508,"props":1403,"children":1404},{"style":883},[1405],{"type":481,"value":886},{"type":476,"tag":508,"props":1407,"children":1408},{"style":920},[1409],{"type":481,"value":1410},"l2",{"type":476,"tag":508,"props":1412,"children":1413},{"style":883},[1414],{"type":481,"value":908},{"type":476,"tag":508,"props":1416,"children":1418},{"class":510,"line":1417},30,[1419,1424,1428,1432,1436,1440],{"type":476,"tag":508,"props":1420,"children":1421},{"style":920},[1422],{"type":481,"value":1423},"      l2",{"type":476,"tag":508,"props":1425,"children":1426},{"style":872},[1427],{"type":481,"value":875},{"type":476,"tag":508,"props":1429,"children":1430},{"style":920},[1431],{"type":481,"value":903},{"type":476,"tag":508,"props":1433,"children":1434},{"style":1086},[1435],{"type":481,"value":1089},{"type":476,"tag":508,"props":1437,"children":1438},{"style":920},[1439],{"type":481,"value":1261},{"type":476,"tag":508,"props":1441,"children":1442},{"style":895},[1443],{"type":481,"value":958},{"type":476,"tag":508,"props":1445,"children":1447},{"class":510,"line":1446},31,[1448],{"type":476,"tag":508,"props":1449,"children":1450},{"style":883},[1451],{"type":481,"value":1393},{"type":476,"tag":508,"props":1453,"children":1455},{"class":510,"line":1454},32,[1456],{"type":476,"tag":508,"props":1457,"children":1458},{"style":883},[1459],{"type":481,"value":1460},"  }\n",{"type":476,"tag":508,"props":1462,"children":1464},{"class":510,"line":1463},33,[1465],{"type":476,"tag":508,"props":1466,"children":1467},{"emptyLinePlaceholder":1017},[1468],{"type":481,"value":1020},{"type":476,"tag":508,"props":1470,"children":1472},{"class":510,"line":1471},34,[1473,1478,1482,1487,1492,1496],{"type":476,"tag":508,"props":1474,"children":1475},{"style":1027},[1476],{"type":481,"value":1477},"  if",{"type":476,"tag":508,"props":1479,"children":1480},{"style":883},[1481],{"type":481,"value":886},{"type":476,"tag":508,"props":1483,"children":1484},{"style":920},[1485],{"type":481,"value":1486},"curry",{"type":476,"tag":508,"props":1488,"children":1489},{"style":872},[1490],{"type":481,"value":1491}," >",{"type":476,"tag":508,"props":1493,"children":1494},{"style":945},[1495],{"type":481,"value":1006},{"type":476,"tag":508,"props":1497,"children":1498},{"style":883},[1499],{"type":481,"value":908},{"type":476,"tag":508,"props":1501,"children":1503},{"class":510,"line":1502},35,[1504,1508,1512,1516,1520,1524,1528,1532,1536,1540],{"type":476,"tag":508,"props":1505,"children":1506},{"style":920},[1507],{"type":481,"value":1252},{"type":476,"tag":508,"props":1509,"children":1510},{"style":1086},[1511],{"type":481,"value":1089},{"type":476,"tag":508,"props":1513,"children":1514},{"style":920},[1515],{"type":481,"value":1261},{"type":476,"tag":508,"props":1517,"children":1518},{"style":872},[1519],{"type":481,"value":875},{"type":476,"tag":508,"props":1521,"children":1522},{"style":872},[1523],{"type":481,"value":932},{"type":476,"tag":508,"props":1525,"children":1526},{"style":866},[1527],{"type":481,"value":937},{"type":476,"tag":508,"props":1529,"children":1530},{"style":883},[1531],{"type":481,"value":942},{"type":476,"tag":508,"props":1533,"children":1534},{"style":920},[1535],{"type":481,"value":1486},{"type":476,"tag":508,"props":1537,"children":1538},{"style":883},[1539],{"type":481,"value":953},{"type":476,"tag":508,"props":1541,"children":1542},{"style":895},[1543],{"type":481,"value":958},{"type":476,"tag":508,"props":1545,"children":1547},{"class":510,"line":1546},36,[1548],{"type":476,"tag":508,"props":1549,"children":1550},{"style":883},[1551],{"type":481,"value":1460},{"type":476,"tag":508,"props":1553,"children":1555},{"class":510,"line":1554},37,[1556,1561,1565,1569,1573],{"type":476,"tag":508,"props":1557,"children":1558},{"style":1027},[1559],{"type":481,"value":1560},"  return",{"type":476,"tag":508,"props":1562,"children":1563},{"style":920},[1564],{"type":481,"value":923},{"type":476,"tag":508,"props":1566,"children":1567},{"style":1086},[1568],{"type":481,"value":1089},{"type":476,"tag":508,"props":1570,"children":1571},{"style":920},[1572],{"type":481,"value":1261},{"type":476,"tag":508,"props":1574,"children":1575},{"style":895},[1576],{"type":481,"value":958},{"type":476,"tag":508,"props":1578,"children":1580},{"class":510,"line":1579},38,[1581,1586],{"type":476,"tag":508,"props":1582,"children":1583},{"style":883},[1584],{"type":481,"value":1585},"}",{"type":476,"tag":508,"props":1587,"children":1588},{"style":895},[1589],{"type":481,"value":958},{"type":476,"tag":1591,"props":1592,"children":1593},"style",{},[1594],{"type":481,"value":1595},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":747,"depth":747,"links":1597},[1598,1599],{"id":620,"depth":520,"text":620},{"id":644,"depth":520,"text":644,"children":1600},[1601,1602],{"id":694,"depth":529,"text":694},{"id":699,"depth":529,"text":699},"markdown","content:1.algorithm:3.leetcode:3.major:2.add-two-numbers.md","content","1.algorithm/3.leetcode/3.major/2.add-two-numbers.md","md",[1609,1611],{"_path":60,"title":59,"description":1610},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":66,"title":65,"description":1612},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1713712681829]