[{"data":1,"prerenderedAt":1607},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-two-numbers":460,"/algorithm/leetcode/major/add-two-numbers-surround":1602},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":57,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":56,"description":464,"url":465,"body":466,"_type":1597,"_id":1598,"_source":1599,"_file":1600,"_extension":1601},"major",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":467,"children":468,"toc":1590},"root",[469,476,481,486,491,530,535,558,563,586,591,611,617,636,641,685,691,696,1584],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":470,"tag":471,"props":487,"children":488},{},[489],{"type":475,"value":490},"示例 1：",{"type":470,"tag":492,"props":493,"children":496},"pre",{"className":494,"code":495,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[497],{"type":470,"tag":498,"props":499,"children":500},"code",{"__ignoreMap":463},[501,512,521],{"type":470,"tag":502,"props":503,"children":506},"span",{"class":504,"line":505},"line",1,[507],{"type":470,"tag":502,"props":508,"children":509},{},[510],{"type":475,"value":511},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":470,"tag":502,"props":513,"children":515},{"class":504,"line":514},2,[516],{"type":470,"tag":502,"props":517,"children":518},{},[519],{"type":475,"value":520},"输出：[7,0,8]\n",{"type":470,"tag":502,"props":522,"children":524},{"class":504,"line":523},3,[525],{"type":470,"tag":502,"props":526,"children":527},{},[528],{"type":475,"value":529},"解释：342 + 465 = 807.\n",{"type":470,"tag":471,"props":531,"children":532},{},[533],{"type":475,"value":534},"示例 2：",{"type":470,"tag":492,"props":536,"children":538},{"className":494,"code":537,"language":475,"meta":463,"style":463},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[539],{"type":470,"tag":498,"props":540,"children":541},{"__ignoreMap":463},[542,550],{"type":470,"tag":502,"props":543,"children":544},{"class":504,"line":505},[545],{"type":470,"tag":502,"props":546,"children":547},{},[548],{"type":475,"value":549},"输入：l1 = [0], l2 = [0]\n",{"type":470,"tag":502,"props":551,"children":552},{"class":504,"line":514},[553],{"type":470,"tag":502,"props":554,"children":555},{},[556],{"type":475,"value":557},"输出：[0]\n",{"type":470,"tag":471,"props":559,"children":560},{},[561],{"type":475,"value":562},"示例 3：",{"type":470,"tag":492,"props":564,"children":566},{"className":494,"code":565,"language":475,"meta":463,"style":463},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[567],{"type":470,"tag":498,"props":568,"children":569},{"__ignoreMap":463},[570,578],{"type":470,"tag":502,"props":571,"children":572},{"class":504,"line":505},[573],{"type":470,"tag":502,"props":574,"children":575},{},[576],{"type":475,"value":577},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":470,"tag":502,"props":579,"children":580},{"class":504,"line":514},[581],{"type":470,"tag":502,"props":582,"children":583},{},[584],{"type":475,"value":585},"输出：[8,9,9,9,0,0,0,1]\n",{"type":470,"tag":471,"props":587,"children":588},{},[589],{"type":475,"value":590},"提示：",{"type":470,"tag":592,"props":593,"children":594},"ul",{},[595,601,606],{"type":470,"tag":596,"props":597,"children":598},"li",{},[599],{"type":475,"value":600},"每个链表中的节点数在范围 [1, 100] 内",{"type":470,"tag":596,"props":602,"children":603},{},[604],{"type":475,"value":605},"0 \u003C= Node.val \u003C= 9",{"type":470,"tag":596,"props":607,"children":608},{},[609],{"type":475,"value":610},"题目数据保证列表表示的数字不含前导零",{"type":470,"tag":612,"props":613,"children":615},"h2",{"id":614},"解题思路",[616],{"type":475,"value":614},{"type":470,"tag":618,"props":619,"children":620},"ol",{},[621,626,631],{"type":470,"tag":596,"props":622,"children":623},{},[624],{"type":475,"value":625},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":470,"tag":596,"props":627,"children":628},{},[629],{"type":475,"value":630},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":470,"tag":596,"props":632,"children":633},{},[634],{"type":475,"value":635},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":470,"tag":612,"props":637,"children":639},{"id":638},"图解",[640],{"type":475,"value":638},{"type":470,"tag":471,"props":642,"children":643},{},[644,650,655,660,665,670,675,680],{"type":470,"tag":645,"props":646,"children":649},"img",{"alt":647,"src":648},"figure_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_1.png",[],{"type":470,"tag":645,"props":651,"children":654},{"alt":652,"src":653},"figure_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_2.png",[],{"type":470,"tag":645,"props":656,"children":659},{"alt":657,"src":658},"figure_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_3.png",[],{"type":470,"tag":645,"props":661,"children":664},{"alt":662,"src":663},"figure_4","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_4.png",[],{"type":470,"tag":645,"props":666,"children":669},{"alt":667,"src":668},"figure_5","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_5.png",[],{"type":470,"tag":645,"props":671,"children":674},{"alt":672,"src":673},"figure_6","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_6.png",[],{"type":470,"tag":645,"props":676,"children":679},{"alt":677,"src":678},"figure_7","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_7.png",[],{"type":470,"tag":645,"props":681,"children":684},{"alt":682,"src":683},"figure_8","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_8.png",[],{"type":470,"tag":686,"props":687,"children":689},"h3",{"id":688},"实现",[690],{"type":475,"value":688},{"type":470,"tag":686,"props":692,"children":694},{"id":693},"构造哑节点",[695],{"type":475,"value":693},{"type":470,"tag":492,"props":697,"children":701},{"className":698,"code":699,"language":700,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[702],{"type":470,"tag":498,"props":703,"children":704},{"__ignoreMap":463},[705,714,722,730,739,748,757,766,774,801,822,840,848,903,953,979,1005,1015,1046,1102,1151,1193,1238,1293,1321,1329,1350,1379,1388,1409,1438,1446,1455,1463,1494,1538,1546,1571],{"type":470,"tag":502,"props":706,"children":707},{"class":504,"line":505},[708],{"type":470,"tag":502,"props":709,"children":711},{"style":710},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[712],{"type":475,"value":713},"/**\n",{"type":470,"tag":502,"props":715,"children":716},{"class":504,"line":514},[717],{"type":470,"tag":502,"props":718,"children":719},{"style":710},[720],{"type":475,"value":721}," * Definition for singly-linked list.\n",{"type":470,"tag":502,"props":723,"children":724},{"class":504,"line":523},[725],{"type":470,"tag":502,"props":726,"children":727},{"style":710},[728],{"type":475,"value":729}," * function ListNode(val) {\n",{"type":470,"tag":502,"props":731,"children":733},{"class":504,"line":732},4,[734],{"type":470,"tag":502,"props":735,"children":736},{"style":710},[737],{"type":475,"value":738}," *     this.val = val;\n",{"type":470,"tag":502,"props":740,"children":742},{"class":504,"line":741},5,[743],{"type":470,"tag":502,"props":744,"children":745},{"style":710},[746],{"type":475,"value":747}," *     this.next = null;\n",{"type":470,"tag":502,"props":749,"children":751},{"class":504,"line":750},6,[752],{"type":470,"tag":502,"props":753,"children":754},{"style":710},[755],{"type":475,"value":756}," * }\n",{"type":470,"tag":502,"props":758,"children":760},{"class":504,"line":759},7,[761],{"type":470,"tag":502,"props":762,"children":763},{"style":710},[764],{"type":475,"value":765}," */\n",{"type":470,"tag":502,"props":767,"children":769},{"class":504,"line":768},8,[770],{"type":470,"tag":502,"props":771,"children":772},{"style":710},[773],{"type":475,"value":713},{"type":470,"tag":502,"props":775,"children":777},{"class":504,"line":776},9,[778,783,789,795],{"type":470,"tag":502,"props":779,"children":780},{"style":710},[781],{"type":475,"value":782}," * ",{"type":470,"tag":502,"props":784,"children":786},{"style":785},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[787],{"type":475,"value":788},"@param",{"type":470,"tag":502,"props":790,"children":792},{"style":791},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[793],{"type":475,"value":794}," {ListNode}",{"type":470,"tag":502,"props":796,"children":798},{"style":797},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[799],{"type":475,"value":800}," l1\n",{"type":470,"tag":502,"props":802,"children":804},{"class":504,"line":803},10,[805,809,813,817],{"type":470,"tag":502,"props":806,"children":807},{"style":710},[808],{"type":475,"value":782},{"type":470,"tag":502,"props":810,"children":811},{"style":785},[812],{"type":475,"value":788},{"type":470,"tag":502,"props":814,"children":815},{"style":791},[816],{"type":475,"value":794},{"type":470,"tag":502,"props":818,"children":819},{"style":797},[820],{"type":475,"value":821}," l2\n",{"type":470,"tag":502,"props":823,"children":825},{"class":504,"line":824},11,[826,830,835],{"type":470,"tag":502,"props":827,"children":828},{"style":710},[829],{"type":475,"value":782},{"type":470,"tag":502,"props":831,"children":832},{"style":785},[833],{"type":475,"value":834},"@return",{"type":470,"tag":502,"props":836,"children":837},{"style":791},[838],{"type":475,"value":839}," {ListNode}\n",{"type":470,"tag":502,"props":841,"children":843},{"class":504,"line":842},12,[844],{"type":470,"tag":502,"props":845,"children":846},{"style":710},[847],{"type":475,"value":765},{"type":470,"tag":502,"props":849,"children":851},{"class":504,"line":850},13,[852,858,864,870,875,881,887,893,898],{"type":470,"tag":502,"props":853,"children":855},{"style":854},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[856],{"type":475,"value":857},"var",{"type":470,"tag":502,"props":859,"children":861},{"style":860},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[862],{"type":475,"value":863}," addTwoNumbers",{"type":470,"tag":502,"props":865,"children":867},{"style":866},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[868],{"type":475,"value":869}," =",{"type":470,"tag":502,"props":871,"children":872},{"style":854},[873],{"type":475,"value":874}," function",{"type":470,"tag":502,"props":876,"children":878},{"style":877},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[879],{"type":475,"value":880}," (",{"type":470,"tag":502,"props":882,"children":884},{"style":883},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[885],{"type":475,"value":886},"l1",{"type":470,"tag":502,"props":888,"children":890},{"style":889},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[891],{"type":475,"value":892},",",{"type":470,"tag":502,"props":894,"children":895},{"style":883},[896],{"type":475,"value":897}," l2",{"type":470,"tag":502,"props":899,"children":900},{"style":877},[901],{"type":475,"value":902},") {\n",{"type":470,"tag":502,"props":904,"children":906},{"class":504,"line":905},14,[907,912,918,922,927,932,937,943,948],{"type":470,"tag":502,"props":908,"children":909},{"style":854},[910],{"type":475,"value":911},"  const",{"type":470,"tag":502,"props":913,"children":915},{"style":914},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[916],{"type":475,"value":917}," node",{"type":470,"tag":502,"props":919,"children":920},{"style":866},[921],{"type":475,"value":869},{"type":470,"tag":502,"props":923,"children":924},{"style":866},[925],{"type":475,"value":926}," new",{"type":470,"tag":502,"props":928,"children":929},{"style":860},[930],{"type":475,"value":931}," ListNode",{"type":470,"tag":502,"props":933,"children":934},{"style":877},[935],{"type":475,"value":936},"(",{"type":470,"tag":502,"props":938,"children":940},{"style":939},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[941],{"type":475,"value":942},"0",{"type":470,"tag":502,"props":944,"children":945},{"style":877},[946],{"type":475,"value":947},")",{"type":470,"tag":502,"props":949,"children":950},{"style":889},[951],{"type":475,"value":952},";\n",{"type":470,"tag":502,"props":954,"children":956},{"class":504,"line":955},15,[957,962,967,971,975],{"type":470,"tag":502,"props":958,"children":959},{"style":854},[960],{"type":475,"value":961},"  let",{"type":470,"tag":502,"props":963,"children":964},{"style":914},[965],{"type":475,"value":966}," current",{"type":470,"tag":502,"props":968,"children":969},{"style":866},[970],{"type":475,"value":869},{"type":470,"tag":502,"props":972,"children":973},{"style":914},[974],{"type":475,"value":917},{"type":470,"tag":502,"props":976,"children":977},{"style":889},[978],{"type":475,"value":952},{"type":470,"tag":502,"props":980,"children":982},{"class":504,"line":981},16,[983,987,992,996,1001],{"type":470,"tag":502,"props":984,"children":985},{"style":854},[986],{"type":475,"value":961},{"type":470,"tag":502,"props":988,"children":989},{"style":914},[990],{"type":475,"value":991}," curry",{"type":470,"tag":502,"props":993,"children":994},{"style":866},[995],{"type":475,"value":869},{"type":470,"tag":502,"props":997,"children":998},{"style":939},[999],{"type":475,"value":1000}," 0",{"type":470,"tag":502,"props":1002,"children":1003},{"style":889},[1004],{"type":475,"value":952},{"type":470,"tag":502,"props":1006,"children":1008},{"class":504,"line":1007},17,[1009],{"type":470,"tag":502,"props":1010,"children":1012},{"emptyLinePlaceholder":1011},true,[1013],{"type":475,"value":1014},"\n",{"type":470,"tag":502,"props":1016,"children":1018},{"class":504,"line":1017},18,[1019,1025,1029,1033,1038,1042],{"type":470,"tag":502,"props":1020,"children":1022},{"style":1021},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1023],{"type":475,"value":1024},"  while",{"type":470,"tag":502,"props":1026,"children":1027},{"style":877},[1028],{"type":475,"value":880},{"type":470,"tag":502,"props":1030,"children":1031},{"style":914},[1032],{"type":475,"value":886},{"type":470,"tag":502,"props":1034,"children":1035},{"style":866},[1036],{"type":475,"value":1037}," ||",{"type":470,"tag":502,"props":1039,"children":1040},{"style":914},[1041],{"type":475,"value":897},{"type":470,"tag":502,"props":1043,"children":1044},{"style":877},[1045],{"type":475,"value":902},{"type":470,"tag":502,"props":1047,"children":1049},{"class":504,"line":1048},19,[1050,1055,1060,1064,1069,1074,1078,1084,1089,1094,1098],{"type":470,"tag":502,"props":1051,"children":1052},{"style":854},[1053],{"type":475,"value":1054},"    const",{"type":470,"tag":502,"props":1056,"children":1057},{"style":914},[1058],{"type":475,"value":1059}," n1",{"type":470,"tag":502,"props":1061,"children":1062},{"style":866},[1063],{"type":475,"value":869},{"type":470,"tag":502,"props":1065,"children":1066},{"style":914},[1067],{"type":475,"value":1068}," l1",{"type":470,"tag":502,"props":1070,"children":1071},{"style":866},[1072],{"type":475,"value":1073}," ?",{"type":470,"tag":502,"props":1075,"children":1076},{"style":914},[1077],{"type":475,"value":1068},{"type":470,"tag":502,"props":1079,"children":1081},{"style":1080},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[1082],{"type":475,"value":1083},".",{"type":470,"tag":502,"props":1085,"children":1086},{"style":914},[1087],{"type":475,"value":1088},"val",{"type":470,"tag":502,"props":1090,"children":1091},{"style":866},[1092],{"type":475,"value":1093}," :",{"type":470,"tag":502,"props":1095,"children":1096},{"style":939},[1097],{"type":475,"value":1000},{"type":470,"tag":502,"props":1099,"children":1100},{"style":889},[1101],{"type":475,"value":952},{"type":470,"tag":502,"props":1103,"children":1105},{"class":504,"line":1104},20,[1106,1110,1115,1119,1123,1127,1131,1135,1139,1143,1147],{"type":470,"tag":502,"props":1107,"children":1108},{"style":854},[1109],{"type":475,"value":1054},{"type":470,"tag":502,"props":1111,"children":1112},{"style":914},[1113],{"type":475,"value":1114}," n2",{"type":470,"tag":502,"props":1116,"children":1117},{"style":866},[1118],{"type":475,"value":869},{"type":470,"tag":502,"props":1120,"children":1121},{"style":914},[1122],{"type":475,"value":897},{"type":470,"tag":502,"props":1124,"children":1125},{"style":866},[1126],{"type":475,"value":1073},{"type":470,"tag":502,"props":1128,"children":1129},{"style":914},[1130],{"type":475,"value":897},{"type":470,"tag":502,"props":1132,"children":1133},{"style":1080},[1134],{"type":475,"value":1083},{"type":470,"tag":502,"props":1136,"children":1137},{"style":914},[1138],{"type":475,"value":1088},{"type":470,"tag":502,"props":1140,"children":1141},{"style":866},[1142],{"type":475,"value":1093},{"type":470,"tag":502,"props":1144,"children":1145},{"style":939},[1146],{"type":475,"value":1000},{"type":470,"tag":502,"props":1148,"children":1149},{"style":889},[1150],{"type":475,"value":952},{"type":470,"tag":502,"props":1152,"children":1154},{"class":504,"line":1153},21,[1155,1159,1164,1168,1172,1177,1181,1185,1189],{"type":470,"tag":502,"props":1156,"children":1157},{"style":854},[1158],{"type":475,"value":1054},{"type":470,"tag":502,"props":1160,"children":1161},{"style":914},[1162],{"type":475,"value":1163}," sum",{"type":470,"tag":502,"props":1165,"children":1166},{"style":866},[1167],{"type":475,"value":869},{"type":470,"tag":502,"props":1169,"children":1170},{"style":914},[1171],{"type":475,"value":1059},{"type":470,"tag":502,"props":1173,"children":1174},{"style":866},[1175],{"type":475,"value":1176}," +",{"type":470,"tag":502,"props":1178,"children":1179},{"style":914},[1180],{"type":475,"value":1114},{"type":470,"tag":502,"props":1182,"children":1183},{"style":866},[1184],{"type":475,"value":1176},{"type":470,"tag":502,"props":1186,"children":1187},{"style":914},[1188],{"type":475,"value":991},{"type":470,"tag":502,"props":1190,"children":1191},{"style":889},[1192],{"type":475,"value":952},{"type":470,"tag":502,"props":1194,"children":1196},{"class":504,"line":1195},22,[1197,1202,1206,1211,1215,1220,1225,1230,1234],{"type":470,"tag":502,"props":1198,"children":1199},{"style":914},[1200],{"type":475,"value":1201},"    curry",{"type":470,"tag":502,"props":1203,"children":1204},{"style":866},[1205],{"type":475,"value":869},{"type":470,"tag":502,"props":1207,"children":1208},{"style":860},[1209],{"type":475,"value":1210}," parseInt",{"type":470,"tag":502,"props":1212,"children":1213},{"style":877},[1214],{"type":475,"value":936},{"type":470,"tag":502,"props":1216,"children":1217},{"style":914},[1218],{"type":475,"value":1219},"sum",{"type":470,"tag":502,"props":1221,"children":1222},{"style":866},[1223],{"type":475,"value":1224}," /",{"type":470,"tag":502,"props":1226,"children":1227},{"style":939},[1228],{"type":475,"value":1229}," 10",{"type":470,"tag":502,"props":1231,"children":1232},{"style":877},[1233],{"type":475,"value":947},{"type":470,"tag":502,"props":1235,"children":1236},{"style":889},[1237],{"type":475,"value":952},{"type":470,"tag":502,"props":1239,"children":1241},{"class":504,"line":1240},23,[1242,1247,1251,1256,1260,1264,1268,1272,1276,1281,1285,1289],{"type":470,"tag":502,"props":1243,"children":1244},{"style":914},[1245],{"type":475,"value":1246},"    current",{"type":470,"tag":502,"props":1248,"children":1249},{"style":1080},[1250],{"type":475,"value":1083},{"type":470,"tag":502,"props":1252,"children":1253},{"style":914},[1254],{"type":475,"value":1255},"next",{"type":470,"tag":502,"props":1257,"children":1258},{"style":866},[1259],{"type":475,"value":869},{"type":470,"tag":502,"props":1261,"children":1262},{"style":866},[1263],{"type":475,"value":926},{"type":470,"tag":502,"props":1265,"children":1266},{"style":860},[1267],{"type":475,"value":931},{"type":470,"tag":502,"props":1269,"children":1270},{"style":877},[1271],{"type":475,"value":936},{"type":470,"tag":502,"props":1273,"children":1274},{"style":914},[1275],{"type":475,"value":1219},{"type":470,"tag":502,"props":1277,"children":1278},{"style":866},[1279],{"type":475,"value":1280}," %",{"type":470,"tag":502,"props":1282,"children":1283},{"style":939},[1284],{"type":475,"value":1229},{"type":470,"tag":502,"props":1286,"children":1287},{"style":877},[1288],{"type":475,"value":947},{"type":470,"tag":502,"props":1290,"children":1291},{"style":889},[1292],{"type":475,"value":952},{"type":470,"tag":502,"props":1294,"children":1296},{"class":504,"line":1295},24,[1297,1301,1305,1309,1313,1317],{"type":470,"tag":502,"props":1298,"children":1299},{"style":914},[1300],{"type":475,"value":1246},{"type":470,"tag":502,"props":1302,"children":1303},{"style":866},[1304],{"type":475,"value":869},{"type":470,"tag":502,"props":1306,"children":1307},{"style":914},[1308],{"type":475,"value":966},{"type":470,"tag":502,"props":1310,"children":1311},{"style":1080},[1312],{"type":475,"value":1083},{"type":470,"tag":502,"props":1314,"children":1315},{"style":914},[1316],{"type":475,"value":1255},{"type":470,"tag":502,"props":1318,"children":1319},{"style":889},[1320],{"type":475,"value":952},{"type":470,"tag":502,"props":1322,"children":1324},{"class":504,"line":1323},25,[1325],{"type":470,"tag":502,"props":1326,"children":1327},{"emptyLinePlaceholder":1011},[1328],{"type":475,"value":1014},{"type":470,"tag":502,"props":1330,"children":1332},{"class":504,"line":1331},26,[1333,1338,1342,1346],{"type":470,"tag":502,"props":1334,"children":1335},{"style":1021},[1336],{"type":475,"value":1337},"    if",{"type":470,"tag":502,"props":1339,"children":1340},{"style":877},[1341],{"type":475,"value":880},{"type":470,"tag":502,"props":1343,"children":1344},{"style":914},[1345],{"type":475,"value":886},{"type":470,"tag":502,"props":1347,"children":1348},{"style":877},[1349],{"type":475,"value":902},{"type":470,"tag":502,"props":1351,"children":1353},{"class":504,"line":1352},27,[1354,1359,1363,1367,1371,1375],{"type":470,"tag":502,"props":1355,"children":1356},{"style":914},[1357],{"type":475,"value":1358},"      l1",{"type":470,"tag":502,"props":1360,"children":1361},{"style":866},[1362],{"type":475,"value":869},{"type":470,"tag":502,"props":1364,"children":1365},{"style":914},[1366],{"type":475,"value":1068},{"type":470,"tag":502,"props":1368,"children":1369},{"style":1080},[1370],{"type":475,"value":1083},{"type":470,"tag":502,"props":1372,"children":1373},{"style":914},[1374],{"type":475,"value":1255},{"type":470,"tag":502,"props":1376,"children":1377},{"style":889},[1378],{"type":475,"value":952},{"type":470,"tag":502,"props":1380,"children":1382},{"class":504,"line":1381},28,[1383],{"type":470,"tag":502,"props":1384,"children":1385},{"style":877},[1386],{"type":475,"value":1387},"    }\n",{"type":470,"tag":502,"props":1389,"children":1391},{"class":504,"line":1390},29,[1392,1396,1400,1405],{"type":470,"tag":502,"props":1393,"children":1394},{"style":1021},[1395],{"type":475,"value":1337},{"type":470,"tag":502,"props":1397,"children":1398},{"style":877},[1399],{"type":475,"value":880},{"type":470,"tag":502,"props":1401,"children":1402},{"style":914},[1403],{"type":475,"value":1404},"l2",{"type":470,"tag":502,"props":1406,"children":1407},{"style":877},[1408],{"type":475,"value":902},{"type":470,"tag":502,"props":1410,"children":1412},{"class":504,"line":1411},30,[1413,1418,1422,1426,1430,1434],{"type":470,"tag":502,"props":1414,"children":1415},{"style":914},[1416],{"type":475,"value":1417},"      l2",{"type":470,"tag":502,"props":1419,"children":1420},{"style":866},[1421],{"type":475,"value":869},{"type":470,"tag":502,"props":1423,"children":1424},{"style":914},[1425],{"type":475,"value":897},{"type":470,"tag":502,"props":1427,"children":1428},{"style":1080},[1429],{"type":475,"value":1083},{"type":470,"tag":502,"props":1431,"children":1432},{"style":914},[1433],{"type":475,"value":1255},{"type":470,"tag":502,"props":1435,"children":1436},{"style":889},[1437],{"type":475,"value":952},{"type":470,"tag":502,"props":1439,"children":1441},{"class":504,"line":1440},31,[1442],{"type":470,"tag":502,"props":1443,"children":1444},{"style":877},[1445],{"type":475,"value":1387},{"type":470,"tag":502,"props":1447,"children":1449},{"class":504,"line":1448},32,[1450],{"type":470,"tag":502,"props":1451,"children":1452},{"style":877},[1453],{"type":475,"value":1454},"  }\n",{"type":470,"tag":502,"props":1456,"children":1458},{"class":504,"line":1457},33,[1459],{"type":470,"tag":502,"props":1460,"children":1461},{"emptyLinePlaceholder":1011},[1462],{"type":475,"value":1014},{"type":470,"tag":502,"props":1464,"children":1466},{"class":504,"line":1465},34,[1467,1472,1476,1481,1486,1490],{"type":470,"tag":502,"props":1468,"children":1469},{"style":1021},[1470],{"type":475,"value":1471},"  if",{"type":470,"tag":502,"props":1473,"children":1474},{"style":877},[1475],{"type":475,"value":880},{"type":470,"tag":502,"props":1477,"children":1478},{"style":914},[1479],{"type":475,"value":1480},"curry",{"type":470,"tag":502,"props":1482,"children":1483},{"style":866},[1484],{"type":475,"value":1485}," >",{"type":470,"tag":502,"props":1487,"children":1488},{"style":939},[1489],{"type":475,"value":1000},{"type":470,"tag":502,"props":1491,"children":1492},{"style":877},[1493],{"type":475,"value":902},{"type":470,"tag":502,"props":1495,"children":1497},{"class":504,"line":1496},35,[1498,1502,1506,1510,1514,1518,1522,1526,1530,1534],{"type":470,"tag":502,"props":1499,"children":1500},{"style":914},[1501],{"type":475,"value":1246},{"type":470,"tag":502,"props":1503,"children":1504},{"style":1080},[1505],{"type":475,"value":1083},{"type":470,"tag":502,"props":1507,"children":1508},{"style":914},[1509],{"type":475,"value":1255},{"type":470,"tag":502,"props":1511,"children":1512},{"style":866},[1513],{"type":475,"value":869},{"type":470,"tag":502,"props":1515,"children":1516},{"style":866},[1517],{"type":475,"value":926},{"type":470,"tag":502,"props":1519,"children":1520},{"style":860},[1521],{"type":475,"value":931},{"type":470,"tag":502,"props":1523,"children":1524},{"style":877},[1525],{"type":475,"value":936},{"type":470,"tag":502,"props":1527,"children":1528},{"style":914},[1529],{"type":475,"value":1480},{"type":470,"tag":502,"props":1531,"children":1532},{"style":877},[1533],{"type":475,"value":947},{"type":470,"tag":502,"props":1535,"children":1536},{"style":889},[1537],{"type":475,"value":952},{"type":470,"tag":502,"props":1539,"children":1541},{"class":504,"line":1540},36,[1542],{"type":470,"tag":502,"props":1543,"children":1544},{"style":877},[1545],{"type":475,"value":1454},{"type":470,"tag":502,"props":1547,"children":1549},{"class":504,"line":1548},37,[1550,1555,1559,1563,1567],{"type":470,"tag":502,"props":1551,"children":1552},{"style":1021},[1553],{"type":475,"value":1554},"  return",{"type":470,"tag":502,"props":1556,"children":1557},{"style":914},[1558],{"type":475,"value":917},{"type":470,"tag":502,"props":1560,"children":1561},{"style":1080},[1562],{"type":475,"value":1083},{"type":470,"tag":502,"props":1564,"children":1565},{"style":914},[1566],{"type":475,"value":1255},{"type":470,"tag":502,"props":1568,"children":1569},{"style":889},[1570],{"type":475,"value":952},{"type":470,"tag":502,"props":1572,"children":1574},{"class":504,"line":1573},38,[1575,1580],{"type":470,"tag":502,"props":1576,"children":1577},{"style":877},[1578],{"type":475,"value":1579},"}",{"type":470,"tag":502,"props":1581,"children":1582},{"style":889},[1583],{"type":475,"value":952},{"type":470,"tag":1585,"props":1586,"children":1587},"style",{},[1588],{"type":475,"value":1589},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":741,"depth":741,"links":1591},[1592,1593],{"id":614,"depth":514,"text":614},{"id":638,"depth":514,"text":638,"children":1594},[1595,1596],{"id":688,"depth":523,"text":688},{"id":693,"depth":523,"text":693},"markdown","content:1.algorithm:3.leetcode:3.major:2.add-two-numbers.md","content","1.algorithm/3.leetcode/3.major/2.add-two-numbers.md","md",[1603,1605],{"_path":54,"title":53,"description":1604},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":60,"title":59,"description":1606},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1713626401322]