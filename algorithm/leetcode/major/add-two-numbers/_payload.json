[{"data":1,"prerenderedAt":1604},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-two-numbers":457,"/algorithm/leetcode/major/add-two-numbers-surround":1599},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":54,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":53,"description":461,"url":462,"body":463,"_type":1594,"_id":1595,"_source":1596,"_file":1597,"_extension":1598},"major",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":464,"children":465,"toc":1587},"root",[466,473,478,483,488,527,532,555,560,583,588,608,614,633,638,682,688,693,1581],{"type":467,"tag":468,"props":469,"children":470},"element","p",{},[471],{"type":472,"value":461},"text",{"type":467,"tag":468,"props":474,"children":475},{},[476],{"type":472,"value":477},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":467,"tag":468,"props":479,"children":480},{},[481],{"type":472,"value":482},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":467,"tag":468,"props":484,"children":485},{},[486],{"type":472,"value":487},"示例 1：",{"type":467,"tag":489,"props":490,"children":493},"pre",{"className":491,"code":492,"language":472,"meta":460,"style":460},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[494],{"type":467,"tag":495,"props":496,"children":497},"code",{"__ignoreMap":460},[498,509,518],{"type":467,"tag":499,"props":500,"children":503},"span",{"class":501,"line":502},"line",1,[504],{"type":467,"tag":499,"props":505,"children":506},{},[507],{"type":472,"value":508},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":467,"tag":499,"props":510,"children":512},{"class":501,"line":511},2,[513],{"type":467,"tag":499,"props":514,"children":515},{},[516],{"type":472,"value":517},"输出：[7,0,8]\n",{"type":467,"tag":499,"props":519,"children":521},{"class":501,"line":520},3,[522],{"type":467,"tag":499,"props":523,"children":524},{},[525],{"type":472,"value":526},"解释：342 + 465 = 807.\n",{"type":467,"tag":468,"props":528,"children":529},{},[530],{"type":472,"value":531},"示例 2：",{"type":467,"tag":489,"props":533,"children":535},{"className":491,"code":534,"language":472,"meta":460,"style":460},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[536],{"type":467,"tag":495,"props":537,"children":538},{"__ignoreMap":460},[539,547],{"type":467,"tag":499,"props":540,"children":541},{"class":501,"line":502},[542],{"type":467,"tag":499,"props":543,"children":544},{},[545],{"type":472,"value":546},"输入：l1 = [0], l2 = [0]\n",{"type":467,"tag":499,"props":548,"children":549},{"class":501,"line":511},[550],{"type":467,"tag":499,"props":551,"children":552},{},[553],{"type":472,"value":554},"输出：[0]\n",{"type":467,"tag":468,"props":556,"children":557},{},[558],{"type":472,"value":559},"示例 3：",{"type":467,"tag":489,"props":561,"children":563},{"className":491,"code":562,"language":472,"meta":460,"style":460},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[564],{"type":467,"tag":495,"props":565,"children":566},{"__ignoreMap":460},[567,575],{"type":467,"tag":499,"props":568,"children":569},{"class":501,"line":502},[570],{"type":467,"tag":499,"props":571,"children":572},{},[573],{"type":472,"value":574},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":467,"tag":499,"props":576,"children":577},{"class":501,"line":511},[578],{"type":467,"tag":499,"props":579,"children":580},{},[581],{"type":472,"value":582},"输出：[8,9,9,9,0,0,0,1]\n",{"type":467,"tag":468,"props":584,"children":585},{},[586],{"type":472,"value":587},"提示：",{"type":467,"tag":589,"props":590,"children":591},"ul",{},[592,598,603],{"type":467,"tag":593,"props":594,"children":595},"li",{},[596],{"type":472,"value":597},"每个链表中的节点数在范围 [1, 100] 内",{"type":467,"tag":593,"props":599,"children":600},{},[601],{"type":472,"value":602},"0 \u003C= Node.val \u003C= 9",{"type":467,"tag":593,"props":604,"children":605},{},[606],{"type":472,"value":607},"题目数据保证列表表示的数字不含前导零",{"type":467,"tag":609,"props":610,"children":612},"h2",{"id":611},"解题思路",[613],{"type":472,"value":611},{"type":467,"tag":615,"props":616,"children":617},"ol",{},[618,623,628],{"type":467,"tag":593,"props":619,"children":620},{},[621],{"type":472,"value":622},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":467,"tag":593,"props":624,"children":625},{},[626],{"type":472,"value":627},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":467,"tag":593,"props":629,"children":630},{},[631],{"type":472,"value":632},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":467,"tag":609,"props":634,"children":636},{"id":635},"图解",[637],{"type":472,"value":635},{"type":467,"tag":468,"props":639,"children":640},{},[641,647,652,657,662,667,672,677],{"type":467,"tag":642,"props":643,"children":646},"img",{"alt":644,"src":645},"figure_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_1.png",[],{"type":467,"tag":642,"props":648,"children":651},{"alt":649,"src":650},"figure_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_2.png",[],{"type":467,"tag":642,"props":653,"children":656},{"alt":654,"src":655},"figure_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_3.png",[],{"type":467,"tag":642,"props":658,"children":661},{"alt":659,"src":660},"figure_4","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_4.png",[],{"type":467,"tag":642,"props":663,"children":666},{"alt":664,"src":665},"figure_5","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_5.png",[],{"type":467,"tag":642,"props":668,"children":671},{"alt":669,"src":670},"figure_6","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_6.png",[],{"type":467,"tag":642,"props":673,"children":676},{"alt":674,"src":675},"figure_7","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_7.png",[],{"type":467,"tag":642,"props":678,"children":681},{"alt":679,"src":680},"figure_8","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_8.png",[],{"type":467,"tag":683,"props":684,"children":686},"h3",{"id":685},"实现",[687],{"type":472,"value":685},{"type":467,"tag":683,"props":689,"children":691},{"id":690},"构造哑节点",[692],{"type":472,"value":690},{"type":467,"tag":489,"props":694,"children":698},{"className":695,"code":696,"language":697,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[699],{"type":467,"tag":495,"props":700,"children":701},{"__ignoreMap":460},[702,711,719,727,736,745,754,763,771,798,819,837,845,900,950,976,1002,1012,1043,1099,1148,1190,1235,1290,1318,1326,1347,1376,1385,1406,1435,1443,1452,1460,1491,1535,1543,1568],{"type":467,"tag":499,"props":703,"children":704},{"class":501,"line":502},[705],{"type":467,"tag":499,"props":706,"children":708},{"style":707},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[709],{"type":472,"value":710},"/**\n",{"type":467,"tag":499,"props":712,"children":713},{"class":501,"line":511},[714],{"type":467,"tag":499,"props":715,"children":716},{"style":707},[717],{"type":472,"value":718}," * Definition for singly-linked list.\n",{"type":467,"tag":499,"props":720,"children":721},{"class":501,"line":520},[722],{"type":467,"tag":499,"props":723,"children":724},{"style":707},[725],{"type":472,"value":726}," * function ListNode(val) {\n",{"type":467,"tag":499,"props":728,"children":730},{"class":501,"line":729},4,[731],{"type":467,"tag":499,"props":732,"children":733},{"style":707},[734],{"type":472,"value":735}," *     this.val = val;\n",{"type":467,"tag":499,"props":737,"children":739},{"class":501,"line":738},5,[740],{"type":467,"tag":499,"props":741,"children":742},{"style":707},[743],{"type":472,"value":744}," *     this.next = null;\n",{"type":467,"tag":499,"props":746,"children":748},{"class":501,"line":747},6,[749],{"type":467,"tag":499,"props":750,"children":751},{"style":707},[752],{"type":472,"value":753}," * }\n",{"type":467,"tag":499,"props":755,"children":757},{"class":501,"line":756},7,[758],{"type":467,"tag":499,"props":759,"children":760},{"style":707},[761],{"type":472,"value":762}," */\n",{"type":467,"tag":499,"props":764,"children":766},{"class":501,"line":765},8,[767],{"type":467,"tag":499,"props":768,"children":769},{"style":707},[770],{"type":472,"value":710},{"type":467,"tag":499,"props":772,"children":774},{"class":501,"line":773},9,[775,780,786,792],{"type":467,"tag":499,"props":776,"children":777},{"style":707},[778],{"type":472,"value":779}," * ",{"type":467,"tag":499,"props":781,"children":783},{"style":782},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[784],{"type":472,"value":785},"@param",{"type":467,"tag":499,"props":787,"children":789},{"style":788},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[790],{"type":472,"value":791}," {ListNode}",{"type":467,"tag":499,"props":793,"children":795},{"style":794},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[796],{"type":472,"value":797}," l1\n",{"type":467,"tag":499,"props":799,"children":801},{"class":501,"line":800},10,[802,806,810,814],{"type":467,"tag":499,"props":803,"children":804},{"style":707},[805],{"type":472,"value":779},{"type":467,"tag":499,"props":807,"children":808},{"style":782},[809],{"type":472,"value":785},{"type":467,"tag":499,"props":811,"children":812},{"style":788},[813],{"type":472,"value":791},{"type":467,"tag":499,"props":815,"children":816},{"style":794},[817],{"type":472,"value":818}," l2\n",{"type":467,"tag":499,"props":820,"children":822},{"class":501,"line":821},11,[823,827,832],{"type":467,"tag":499,"props":824,"children":825},{"style":707},[826],{"type":472,"value":779},{"type":467,"tag":499,"props":828,"children":829},{"style":782},[830],{"type":472,"value":831},"@return",{"type":467,"tag":499,"props":833,"children":834},{"style":788},[835],{"type":472,"value":836}," {ListNode}\n",{"type":467,"tag":499,"props":838,"children":840},{"class":501,"line":839},12,[841],{"type":467,"tag":499,"props":842,"children":843},{"style":707},[844],{"type":472,"value":762},{"type":467,"tag":499,"props":846,"children":848},{"class":501,"line":847},13,[849,855,861,867,872,878,884,890,895],{"type":467,"tag":499,"props":850,"children":852},{"style":851},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[853],{"type":472,"value":854},"var",{"type":467,"tag":499,"props":856,"children":858},{"style":857},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[859],{"type":472,"value":860}," addTwoNumbers",{"type":467,"tag":499,"props":862,"children":864},{"style":863},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[865],{"type":472,"value":866}," =",{"type":467,"tag":499,"props":868,"children":869},{"style":851},[870],{"type":472,"value":871}," function",{"type":467,"tag":499,"props":873,"children":875},{"style":874},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[876],{"type":472,"value":877}," (",{"type":467,"tag":499,"props":879,"children":881},{"style":880},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[882],{"type":472,"value":883},"l1",{"type":467,"tag":499,"props":885,"children":887},{"style":886},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[888],{"type":472,"value":889},",",{"type":467,"tag":499,"props":891,"children":892},{"style":880},[893],{"type":472,"value":894}," l2",{"type":467,"tag":499,"props":896,"children":897},{"style":874},[898],{"type":472,"value":899},") {\n",{"type":467,"tag":499,"props":901,"children":903},{"class":501,"line":902},14,[904,909,915,919,924,929,934,940,945],{"type":467,"tag":499,"props":905,"children":906},{"style":851},[907],{"type":472,"value":908},"  const",{"type":467,"tag":499,"props":910,"children":912},{"style":911},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[913],{"type":472,"value":914}," node",{"type":467,"tag":499,"props":916,"children":917},{"style":863},[918],{"type":472,"value":866},{"type":467,"tag":499,"props":920,"children":921},{"style":863},[922],{"type":472,"value":923}," new",{"type":467,"tag":499,"props":925,"children":926},{"style":857},[927],{"type":472,"value":928}," ListNode",{"type":467,"tag":499,"props":930,"children":931},{"style":874},[932],{"type":472,"value":933},"(",{"type":467,"tag":499,"props":935,"children":937},{"style":936},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[938],{"type":472,"value":939},"0",{"type":467,"tag":499,"props":941,"children":942},{"style":874},[943],{"type":472,"value":944},")",{"type":467,"tag":499,"props":946,"children":947},{"style":886},[948],{"type":472,"value":949},";\n",{"type":467,"tag":499,"props":951,"children":953},{"class":501,"line":952},15,[954,959,964,968,972],{"type":467,"tag":499,"props":955,"children":956},{"style":851},[957],{"type":472,"value":958},"  let",{"type":467,"tag":499,"props":960,"children":961},{"style":911},[962],{"type":472,"value":963}," current",{"type":467,"tag":499,"props":965,"children":966},{"style":863},[967],{"type":472,"value":866},{"type":467,"tag":499,"props":969,"children":970},{"style":911},[971],{"type":472,"value":914},{"type":467,"tag":499,"props":973,"children":974},{"style":886},[975],{"type":472,"value":949},{"type":467,"tag":499,"props":977,"children":979},{"class":501,"line":978},16,[980,984,989,993,998],{"type":467,"tag":499,"props":981,"children":982},{"style":851},[983],{"type":472,"value":958},{"type":467,"tag":499,"props":985,"children":986},{"style":911},[987],{"type":472,"value":988}," curry",{"type":467,"tag":499,"props":990,"children":991},{"style":863},[992],{"type":472,"value":866},{"type":467,"tag":499,"props":994,"children":995},{"style":936},[996],{"type":472,"value":997}," 0",{"type":467,"tag":499,"props":999,"children":1000},{"style":886},[1001],{"type":472,"value":949},{"type":467,"tag":499,"props":1003,"children":1005},{"class":501,"line":1004},17,[1006],{"type":467,"tag":499,"props":1007,"children":1009},{"emptyLinePlaceholder":1008},true,[1010],{"type":472,"value":1011},"\n",{"type":467,"tag":499,"props":1013,"children":1015},{"class":501,"line":1014},18,[1016,1022,1026,1030,1035,1039],{"type":467,"tag":499,"props":1017,"children":1019},{"style":1018},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[1020],{"type":472,"value":1021},"  while",{"type":467,"tag":499,"props":1023,"children":1024},{"style":874},[1025],{"type":472,"value":877},{"type":467,"tag":499,"props":1027,"children":1028},{"style":911},[1029],{"type":472,"value":883},{"type":467,"tag":499,"props":1031,"children":1032},{"style":863},[1033],{"type":472,"value":1034}," ||",{"type":467,"tag":499,"props":1036,"children":1037},{"style":911},[1038],{"type":472,"value":894},{"type":467,"tag":499,"props":1040,"children":1041},{"style":874},[1042],{"type":472,"value":899},{"type":467,"tag":499,"props":1044,"children":1046},{"class":501,"line":1045},19,[1047,1052,1057,1061,1066,1071,1075,1081,1086,1091,1095],{"type":467,"tag":499,"props":1048,"children":1049},{"style":851},[1050],{"type":472,"value":1051},"    const",{"type":467,"tag":499,"props":1053,"children":1054},{"style":911},[1055],{"type":472,"value":1056}," n1",{"type":467,"tag":499,"props":1058,"children":1059},{"style":863},[1060],{"type":472,"value":866},{"type":467,"tag":499,"props":1062,"children":1063},{"style":911},[1064],{"type":472,"value":1065}," l1",{"type":467,"tag":499,"props":1067,"children":1068},{"style":863},[1069],{"type":472,"value":1070}," ?",{"type":467,"tag":499,"props":1072,"children":1073},{"style":911},[1074],{"type":472,"value":1065},{"type":467,"tag":499,"props":1076,"children":1078},{"style":1077},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[1079],{"type":472,"value":1080},".",{"type":467,"tag":499,"props":1082,"children":1083},{"style":911},[1084],{"type":472,"value":1085},"val",{"type":467,"tag":499,"props":1087,"children":1088},{"style":863},[1089],{"type":472,"value":1090}," :",{"type":467,"tag":499,"props":1092,"children":1093},{"style":936},[1094],{"type":472,"value":997},{"type":467,"tag":499,"props":1096,"children":1097},{"style":886},[1098],{"type":472,"value":949},{"type":467,"tag":499,"props":1100,"children":1102},{"class":501,"line":1101},20,[1103,1107,1112,1116,1120,1124,1128,1132,1136,1140,1144],{"type":467,"tag":499,"props":1104,"children":1105},{"style":851},[1106],{"type":472,"value":1051},{"type":467,"tag":499,"props":1108,"children":1109},{"style":911},[1110],{"type":472,"value":1111}," n2",{"type":467,"tag":499,"props":1113,"children":1114},{"style":863},[1115],{"type":472,"value":866},{"type":467,"tag":499,"props":1117,"children":1118},{"style":911},[1119],{"type":472,"value":894},{"type":467,"tag":499,"props":1121,"children":1122},{"style":863},[1123],{"type":472,"value":1070},{"type":467,"tag":499,"props":1125,"children":1126},{"style":911},[1127],{"type":472,"value":894},{"type":467,"tag":499,"props":1129,"children":1130},{"style":1077},[1131],{"type":472,"value":1080},{"type":467,"tag":499,"props":1133,"children":1134},{"style":911},[1135],{"type":472,"value":1085},{"type":467,"tag":499,"props":1137,"children":1138},{"style":863},[1139],{"type":472,"value":1090},{"type":467,"tag":499,"props":1141,"children":1142},{"style":936},[1143],{"type":472,"value":997},{"type":467,"tag":499,"props":1145,"children":1146},{"style":886},[1147],{"type":472,"value":949},{"type":467,"tag":499,"props":1149,"children":1151},{"class":501,"line":1150},21,[1152,1156,1161,1165,1169,1174,1178,1182,1186],{"type":467,"tag":499,"props":1153,"children":1154},{"style":851},[1155],{"type":472,"value":1051},{"type":467,"tag":499,"props":1157,"children":1158},{"style":911},[1159],{"type":472,"value":1160}," sum",{"type":467,"tag":499,"props":1162,"children":1163},{"style":863},[1164],{"type":472,"value":866},{"type":467,"tag":499,"props":1166,"children":1167},{"style":911},[1168],{"type":472,"value":1056},{"type":467,"tag":499,"props":1170,"children":1171},{"style":863},[1172],{"type":472,"value":1173}," +",{"type":467,"tag":499,"props":1175,"children":1176},{"style":911},[1177],{"type":472,"value":1111},{"type":467,"tag":499,"props":1179,"children":1180},{"style":863},[1181],{"type":472,"value":1173},{"type":467,"tag":499,"props":1183,"children":1184},{"style":911},[1185],{"type":472,"value":988},{"type":467,"tag":499,"props":1187,"children":1188},{"style":886},[1189],{"type":472,"value":949},{"type":467,"tag":499,"props":1191,"children":1193},{"class":501,"line":1192},22,[1194,1199,1203,1208,1212,1217,1222,1227,1231],{"type":467,"tag":499,"props":1195,"children":1196},{"style":911},[1197],{"type":472,"value":1198},"    curry",{"type":467,"tag":499,"props":1200,"children":1201},{"style":863},[1202],{"type":472,"value":866},{"type":467,"tag":499,"props":1204,"children":1205},{"style":857},[1206],{"type":472,"value":1207}," parseInt",{"type":467,"tag":499,"props":1209,"children":1210},{"style":874},[1211],{"type":472,"value":933},{"type":467,"tag":499,"props":1213,"children":1214},{"style":911},[1215],{"type":472,"value":1216},"sum",{"type":467,"tag":499,"props":1218,"children":1219},{"style":863},[1220],{"type":472,"value":1221}," /",{"type":467,"tag":499,"props":1223,"children":1224},{"style":936},[1225],{"type":472,"value":1226}," 10",{"type":467,"tag":499,"props":1228,"children":1229},{"style":874},[1230],{"type":472,"value":944},{"type":467,"tag":499,"props":1232,"children":1233},{"style":886},[1234],{"type":472,"value":949},{"type":467,"tag":499,"props":1236,"children":1238},{"class":501,"line":1237},23,[1239,1244,1248,1253,1257,1261,1265,1269,1273,1278,1282,1286],{"type":467,"tag":499,"props":1240,"children":1241},{"style":911},[1242],{"type":472,"value":1243},"    current",{"type":467,"tag":499,"props":1245,"children":1246},{"style":1077},[1247],{"type":472,"value":1080},{"type":467,"tag":499,"props":1249,"children":1250},{"style":911},[1251],{"type":472,"value":1252},"next",{"type":467,"tag":499,"props":1254,"children":1255},{"style":863},[1256],{"type":472,"value":866},{"type":467,"tag":499,"props":1258,"children":1259},{"style":863},[1260],{"type":472,"value":923},{"type":467,"tag":499,"props":1262,"children":1263},{"style":857},[1264],{"type":472,"value":928},{"type":467,"tag":499,"props":1266,"children":1267},{"style":874},[1268],{"type":472,"value":933},{"type":467,"tag":499,"props":1270,"children":1271},{"style":911},[1272],{"type":472,"value":1216},{"type":467,"tag":499,"props":1274,"children":1275},{"style":863},[1276],{"type":472,"value":1277}," %",{"type":467,"tag":499,"props":1279,"children":1280},{"style":936},[1281],{"type":472,"value":1226},{"type":467,"tag":499,"props":1283,"children":1284},{"style":874},[1285],{"type":472,"value":944},{"type":467,"tag":499,"props":1287,"children":1288},{"style":886},[1289],{"type":472,"value":949},{"type":467,"tag":499,"props":1291,"children":1293},{"class":501,"line":1292},24,[1294,1298,1302,1306,1310,1314],{"type":467,"tag":499,"props":1295,"children":1296},{"style":911},[1297],{"type":472,"value":1243},{"type":467,"tag":499,"props":1299,"children":1300},{"style":863},[1301],{"type":472,"value":866},{"type":467,"tag":499,"props":1303,"children":1304},{"style":911},[1305],{"type":472,"value":963},{"type":467,"tag":499,"props":1307,"children":1308},{"style":1077},[1309],{"type":472,"value":1080},{"type":467,"tag":499,"props":1311,"children":1312},{"style":911},[1313],{"type":472,"value":1252},{"type":467,"tag":499,"props":1315,"children":1316},{"style":886},[1317],{"type":472,"value":949},{"type":467,"tag":499,"props":1319,"children":1321},{"class":501,"line":1320},25,[1322],{"type":467,"tag":499,"props":1323,"children":1324},{"emptyLinePlaceholder":1008},[1325],{"type":472,"value":1011},{"type":467,"tag":499,"props":1327,"children":1329},{"class":501,"line":1328},26,[1330,1335,1339,1343],{"type":467,"tag":499,"props":1331,"children":1332},{"style":1018},[1333],{"type":472,"value":1334},"    if",{"type":467,"tag":499,"props":1336,"children":1337},{"style":874},[1338],{"type":472,"value":877},{"type":467,"tag":499,"props":1340,"children":1341},{"style":911},[1342],{"type":472,"value":883},{"type":467,"tag":499,"props":1344,"children":1345},{"style":874},[1346],{"type":472,"value":899},{"type":467,"tag":499,"props":1348,"children":1350},{"class":501,"line":1349},27,[1351,1356,1360,1364,1368,1372],{"type":467,"tag":499,"props":1352,"children":1353},{"style":911},[1354],{"type":472,"value":1355},"      l1",{"type":467,"tag":499,"props":1357,"children":1358},{"style":863},[1359],{"type":472,"value":866},{"type":467,"tag":499,"props":1361,"children":1362},{"style":911},[1363],{"type":472,"value":1065},{"type":467,"tag":499,"props":1365,"children":1366},{"style":1077},[1367],{"type":472,"value":1080},{"type":467,"tag":499,"props":1369,"children":1370},{"style":911},[1371],{"type":472,"value":1252},{"type":467,"tag":499,"props":1373,"children":1374},{"style":886},[1375],{"type":472,"value":949},{"type":467,"tag":499,"props":1377,"children":1379},{"class":501,"line":1378},28,[1380],{"type":467,"tag":499,"props":1381,"children":1382},{"style":874},[1383],{"type":472,"value":1384},"    }\n",{"type":467,"tag":499,"props":1386,"children":1388},{"class":501,"line":1387},29,[1389,1393,1397,1402],{"type":467,"tag":499,"props":1390,"children":1391},{"style":1018},[1392],{"type":472,"value":1334},{"type":467,"tag":499,"props":1394,"children":1395},{"style":874},[1396],{"type":472,"value":877},{"type":467,"tag":499,"props":1398,"children":1399},{"style":911},[1400],{"type":472,"value":1401},"l2",{"type":467,"tag":499,"props":1403,"children":1404},{"style":874},[1405],{"type":472,"value":899},{"type":467,"tag":499,"props":1407,"children":1409},{"class":501,"line":1408},30,[1410,1415,1419,1423,1427,1431],{"type":467,"tag":499,"props":1411,"children":1412},{"style":911},[1413],{"type":472,"value":1414},"      l2",{"type":467,"tag":499,"props":1416,"children":1417},{"style":863},[1418],{"type":472,"value":866},{"type":467,"tag":499,"props":1420,"children":1421},{"style":911},[1422],{"type":472,"value":894},{"type":467,"tag":499,"props":1424,"children":1425},{"style":1077},[1426],{"type":472,"value":1080},{"type":467,"tag":499,"props":1428,"children":1429},{"style":911},[1430],{"type":472,"value":1252},{"type":467,"tag":499,"props":1432,"children":1433},{"style":886},[1434],{"type":472,"value":949},{"type":467,"tag":499,"props":1436,"children":1438},{"class":501,"line":1437},31,[1439],{"type":467,"tag":499,"props":1440,"children":1441},{"style":874},[1442],{"type":472,"value":1384},{"type":467,"tag":499,"props":1444,"children":1446},{"class":501,"line":1445},32,[1447],{"type":467,"tag":499,"props":1448,"children":1449},{"style":874},[1450],{"type":472,"value":1451},"  }\n",{"type":467,"tag":499,"props":1453,"children":1455},{"class":501,"line":1454},33,[1456],{"type":467,"tag":499,"props":1457,"children":1458},{"emptyLinePlaceholder":1008},[1459],{"type":472,"value":1011},{"type":467,"tag":499,"props":1461,"children":1463},{"class":501,"line":1462},34,[1464,1469,1473,1478,1483,1487],{"type":467,"tag":499,"props":1465,"children":1466},{"style":1018},[1467],{"type":472,"value":1468},"  if",{"type":467,"tag":499,"props":1470,"children":1471},{"style":874},[1472],{"type":472,"value":877},{"type":467,"tag":499,"props":1474,"children":1475},{"style":911},[1476],{"type":472,"value":1477},"curry",{"type":467,"tag":499,"props":1479,"children":1480},{"style":863},[1481],{"type":472,"value":1482}," >",{"type":467,"tag":499,"props":1484,"children":1485},{"style":936},[1486],{"type":472,"value":997},{"type":467,"tag":499,"props":1488,"children":1489},{"style":874},[1490],{"type":472,"value":899},{"type":467,"tag":499,"props":1492,"children":1494},{"class":501,"line":1493},35,[1495,1499,1503,1507,1511,1515,1519,1523,1527,1531],{"type":467,"tag":499,"props":1496,"children":1497},{"style":911},[1498],{"type":472,"value":1243},{"type":467,"tag":499,"props":1500,"children":1501},{"style":1077},[1502],{"type":472,"value":1080},{"type":467,"tag":499,"props":1504,"children":1505},{"style":911},[1506],{"type":472,"value":1252},{"type":467,"tag":499,"props":1508,"children":1509},{"style":863},[1510],{"type":472,"value":866},{"type":467,"tag":499,"props":1512,"children":1513},{"style":863},[1514],{"type":472,"value":923},{"type":467,"tag":499,"props":1516,"children":1517},{"style":857},[1518],{"type":472,"value":928},{"type":467,"tag":499,"props":1520,"children":1521},{"style":874},[1522],{"type":472,"value":933},{"type":467,"tag":499,"props":1524,"children":1525},{"style":911},[1526],{"type":472,"value":1477},{"type":467,"tag":499,"props":1528,"children":1529},{"style":874},[1530],{"type":472,"value":944},{"type":467,"tag":499,"props":1532,"children":1533},{"style":886},[1534],{"type":472,"value":949},{"type":467,"tag":499,"props":1536,"children":1538},{"class":501,"line":1537},36,[1539],{"type":467,"tag":499,"props":1540,"children":1541},{"style":874},[1542],{"type":472,"value":1451},{"type":467,"tag":499,"props":1544,"children":1546},{"class":501,"line":1545},37,[1547,1552,1556,1560,1564],{"type":467,"tag":499,"props":1548,"children":1549},{"style":1018},[1550],{"type":472,"value":1551},"  return",{"type":467,"tag":499,"props":1553,"children":1554},{"style":911},[1555],{"type":472,"value":914},{"type":467,"tag":499,"props":1557,"children":1558},{"style":1077},[1559],{"type":472,"value":1080},{"type":467,"tag":499,"props":1561,"children":1562},{"style":911},[1563],{"type":472,"value":1252},{"type":467,"tag":499,"props":1565,"children":1566},{"style":886},[1567],{"type":472,"value":949},{"type":467,"tag":499,"props":1569,"children":1571},{"class":501,"line":1570},38,[1572,1577],{"type":467,"tag":499,"props":1573,"children":1574},{"style":874},[1575],{"type":472,"value":1576},"}",{"type":467,"tag":499,"props":1578,"children":1579},{"style":886},[1580],{"type":472,"value":949},{"type":467,"tag":1582,"props":1583,"children":1584},"style",{},[1585],{"type":472,"value":1586},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":738,"depth":738,"links":1588},[1589,1590],{"id":611,"depth":511,"text":611},{"id":635,"depth":511,"text":635,"children":1591},[1592,1593],{"id":685,"depth":520,"text":685},{"id":690,"depth":520,"text":690},"markdown","content:1.algorithm:3.leetcode:3.major:2.add-two-numbers.md","content","1.algorithm/3.leetcode/3.major/2.add-two-numbers.md","md",[1600,1602],{"_path":51,"title":50,"description":1601},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":57,"title":56,"description":1603},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1713624716413]