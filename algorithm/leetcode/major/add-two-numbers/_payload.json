[{"data":1,"prerenderedAt":1721},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-two-numbers":540,"/algorithm/leetcode/major/add-two-numbers-surround":1716},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":63,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":62,"description":544,"url":545,"body":546,"_type":1711,"_id":1712,"_source":1713,"_file":1714,"_extension":1715},"major",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":547,"children":548,"toc":1704},"root",[549,556,561,566,571,610,615,638,643,666,671,691,697,716,721,765,771,776,1698],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":550,"tag":551,"props":567,"children":568},{},[569],{"type":555,"value":570},"示例 1：",{"type":550,"tag":572,"props":573,"children":576},"pre",{"className":574,"code":575,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[577],{"type":550,"tag":578,"props":579,"children":580},"code",{"__ignoreMap":543},[581,592,601],{"type":550,"tag":582,"props":583,"children":586},"span",{"class":584,"line":585},"line",1,[587],{"type":550,"tag":582,"props":588,"children":589},{},[590],{"type":555,"value":591},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":550,"tag":582,"props":593,"children":595},{"class":584,"line":594},2,[596],{"type":550,"tag":582,"props":597,"children":598},{},[599],{"type":555,"value":600},"输出：[7,0,8]\n",{"type":550,"tag":582,"props":602,"children":604},{"class":584,"line":603},3,[605],{"type":550,"tag":582,"props":606,"children":607},{},[608],{"type":555,"value":609},"解释：342 + 465 = 807.\n",{"type":550,"tag":551,"props":611,"children":612},{},[613],{"type":555,"value":614},"示例 2：",{"type":550,"tag":572,"props":616,"children":618},{"className":574,"code":617,"language":555,"meta":543,"style":543},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[619],{"type":550,"tag":578,"props":620,"children":621},{"__ignoreMap":543},[622,630],{"type":550,"tag":582,"props":623,"children":624},{"class":584,"line":585},[625],{"type":550,"tag":582,"props":626,"children":627},{},[628],{"type":555,"value":629},"输入：l1 = [0], l2 = [0]\n",{"type":550,"tag":582,"props":631,"children":632},{"class":584,"line":594},[633],{"type":550,"tag":582,"props":634,"children":635},{},[636],{"type":555,"value":637},"输出：[0]\n",{"type":550,"tag":551,"props":639,"children":640},{},[641],{"type":555,"value":642},"示例 3：",{"type":550,"tag":572,"props":644,"children":646},{"className":574,"code":645,"language":555,"meta":543,"style":543},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[647],{"type":550,"tag":578,"props":648,"children":649},{"__ignoreMap":543},[650,658],{"type":550,"tag":582,"props":651,"children":652},{"class":584,"line":585},[653],{"type":550,"tag":582,"props":654,"children":655},{},[656],{"type":555,"value":657},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":550,"tag":582,"props":659,"children":660},{"class":584,"line":594},[661],{"type":550,"tag":582,"props":662,"children":663},{},[664],{"type":555,"value":665},"输出：[8,9,9,9,0,0,0,1]\n",{"type":550,"tag":551,"props":667,"children":668},{},[669],{"type":555,"value":670},"提示：",{"type":550,"tag":672,"props":673,"children":674},"ul",{},[675,681,686],{"type":550,"tag":676,"props":677,"children":678},"li",{},[679],{"type":555,"value":680},"每个链表中的节点数在范围 [1, 100] 内",{"type":550,"tag":676,"props":682,"children":683},{},[684],{"type":555,"value":685},"0 \u003C= Node.val \u003C= 9",{"type":550,"tag":676,"props":687,"children":688},{},[689],{"type":555,"value":690},"题目数据保证列表表示的数字不含前导零",{"type":550,"tag":692,"props":693,"children":695},"h2",{"id":694},"解题思路",[696],{"type":555,"value":694},{"type":550,"tag":698,"props":699,"children":700},"ol",{},[701,706,711],{"type":550,"tag":676,"props":702,"children":703},{},[704],{"type":555,"value":705},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":550,"tag":676,"props":707,"children":708},{},[709],{"type":555,"value":710},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":550,"tag":676,"props":712,"children":713},{},[714],{"type":555,"value":715},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":550,"tag":692,"props":717,"children":719},{"id":718},"图解",[720],{"type":555,"value":718},{"type":550,"tag":551,"props":722,"children":723},{},[724,730,735,740,745,750,755,760],{"type":550,"tag":725,"props":726,"children":729},"img",{"alt":727,"src":728},"figure_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_1.png",[],{"type":550,"tag":725,"props":731,"children":734},{"alt":732,"src":733},"figure_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_2.png",[],{"type":550,"tag":725,"props":736,"children":739},{"alt":737,"src":738},"figure_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_3.png",[],{"type":550,"tag":725,"props":741,"children":744},{"alt":742,"src":743},"figure_4","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_4.png",[],{"type":550,"tag":725,"props":746,"children":749},{"alt":747,"src":748},"figure_5","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_5.png",[],{"type":550,"tag":725,"props":751,"children":754},{"alt":752,"src":753},"figure_6","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_6.png",[],{"type":550,"tag":725,"props":756,"children":759},{"alt":757,"src":758},"figure_7","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_7.png",[],{"type":550,"tag":725,"props":761,"children":764},{"alt":762,"src":763},"figure_8","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_8.png",[],{"type":550,"tag":766,"props":767,"children":769},"h3",{"id":768},"实现",[770],{"type":555,"value":768},{"type":550,"tag":766,"props":772,"children":774},{"id":773},"构造哑节点",[775],{"type":555,"value":773},{"type":550,"tag":572,"props":777,"children":781},{"className":778,"code":779,"language":780,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[782],{"type":550,"tag":578,"props":783,"children":784},{"__ignoreMap":543},[785,794,802,810,819,828,837,846,854,897,930,960,968,1024,1068,1095,1121,1131,1165,1220,1269,1311,1352,1403,1431,1439,1464,1493,1502,1527,1556,1564,1573,1581,1616,1656,1664,1689],{"type":550,"tag":582,"props":786,"children":787},{"class":584,"line":585},[788],{"type":550,"tag":582,"props":789,"children":791},{"style":790},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[792],{"type":555,"value":793},"/**\n",{"type":550,"tag":582,"props":795,"children":796},{"class":584,"line":594},[797],{"type":550,"tag":582,"props":798,"children":799},{"style":790},[800],{"type":555,"value":801}," * Definition for singly-linked list.\n",{"type":550,"tag":582,"props":803,"children":804},{"class":584,"line":603},[805],{"type":550,"tag":582,"props":806,"children":807},{"style":790},[808],{"type":555,"value":809}," * function ListNode(val) {\n",{"type":550,"tag":582,"props":811,"children":813},{"class":584,"line":812},4,[814],{"type":550,"tag":582,"props":815,"children":816},{"style":790},[817],{"type":555,"value":818}," *     this.val = val;\n",{"type":550,"tag":582,"props":820,"children":822},{"class":584,"line":821},5,[823],{"type":550,"tag":582,"props":824,"children":825},{"style":790},[826],{"type":555,"value":827}," *     this.next = null;\n",{"type":550,"tag":582,"props":829,"children":831},{"class":584,"line":830},6,[832],{"type":550,"tag":582,"props":833,"children":834},{"style":790},[835],{"type":555,"value":836}," * }\n",{"type":550,"tag":582,"props":838,"children":840},{"class":584,"line":839},7,[841],{"type":550,"tag":582,"props":842,"children":843},{"style":790},[844],{"type":555,"value":845}," */\n",{"type":550,"tag":582,"props":847,"children":849},{"class":584,"line":848},8,[850],{"type":550,"tag":582,"props":851,"children":852},{"style":790},[853],{"type":555,"value":793},{"type":550,"tag":582,"props":855,"children":857},{"class":584,"line":856},9,[858,863,869,875,880,886,891],{"type":550,"tag":582,"props":859,"children":860},{"style":790},[861],{"type":555,"value":862}," * ",{"type":550,"tag":582,"props":864,"children":866},{"style":865},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[867],{"type":555,"value":868},"@",{"type":550,"tag":582,"props":870,"children":872},{"style":871},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[873],{"type":555,"value":874},"param",{"type":550,"tag":582,"props":876,"children":877},{"style":865},[878],{"type":555,"value":879}," {",{"type":550,"tag":582,"props":881,"children":883},{"style":882},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[884],{"type":555,"value":885},"ListNode",{"type":550,"tag":582,"props":887,"children":888},{"style":865},[889],{"type":555,"value":890},"}",{"type":550,"tag":582,"props":892,"children":894},{"style":893},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[895],{"type":555,"value":896}," l1\n",{"type":550,"tag":582,"props":898,"children":900},{"class":584,"line":899},10,[901,905,909,913,917,921,925],{"type":550,"tag":582,"props":902,"children":903},{"style":790},[904],{"type":555,"value":862},{"type":550,"tag":582,"props":906,"children":907},{"style":865},[908],{"type":555,"value":868},{"type":550,"tag":582,"props":910,"children":911},{"style":871},[912],{"type":555,"value":874},{"type":550,"tag":582,"props":914,"children":915},{"style":865},[916],{"type":555,"value":879},{"type":550,"tag":582,"props":918,"children":919},{"style":882},[920],{"type":555,"value":885},{"type":550,"tag":582,"props":922,"children":923},{"style":865},[924],{"type":555,"value":890},{"type":550,"tag":582,"props":926,"children":927},{"style":893},[928],{"type":555,"value":929}," l2\n",{"type":550,"tag":582,"props":931,"children":933},{"class":584,"line":932},11,[934,938,942,947,951,955],{"type":550,"tag":582,"props":935,"children":936},{"style":790},[937],{"type":555,"value":862},{"type":550,"tag":582,"props":939,"children":940},{"style":865},[941],{"type":555,"value":868},{"type":550,"tag":582,"props":943,"children":944},{"style":871},[945],{"type":555,"value":946},"return",{"type":550,"tag":582,"props":948,"children":949},{"style":865},[950],{"type":555,"value":879},{"type":550,"tag":582,"props":952,"children":953},{"style":882},[954],{"type":555,"value":885},{"type":550,"tag":582,"props":956,"children":957},{"style":865},[958],{"type":555,"value":959},"}\n",{"type":550,"tag":582,"props":961,"children":963},{"class":584,"line":962},12,[964],{"type":550,"tag":582,"props":965,"children":966},{"style":790},[967],{"type":555,"value":845},{"type":550,"tag":582,"props":969,"children":971},{"class":584,"line":970},13,[972,978,984,989,994,999,1004,1009,1014,1019],{"type":550,"tag":582,"props":973,"children":975},{"style":974},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[976],{"type":555,"value":977},"var",{"type":550,"tag":582,"props":979,"children":981},{"style":980},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[982],{"type":555,"value":983}," addTwoNumbers",{"type":550,"tag":582,"props":985,"children":986},{"style":865},[987],{"type":555,"value":988}," =",{"type":550,"tag":582,"props":990,"children":991},{"style":974},[992],{"type":555,"value":993}," function",{"type":550,"tag":582,"props":995,"children":996},{"style":865},[997],{"type":555,"value":998}," (",{"type":550,"tag":582,"props":1000,"children":1001},{"style":893},[1002],{"type":555,"value":1003},"l1",{"type":550,"tag":582,"props":1005,"children":1006},{"style":865},[1007],{"type":555,"value":1008},",",{"type":550,"tag":582,"props":1010,"children":1011},{"style":893},[1012],{"type":555,"value":1013}," l2",{"type":550,"tag":582,"props":1015,"children":1016},{"style":865},[1017],{"type":555,"value":1018},")",{"type":550,"tag":582,"props":1020,"children":1021},{"style":865},[1022],{"type":555,"value":1023}," {\n",{"type":550,"tag":582,"props":1025,"children":1027},{"class":584,"line":1026},14,[1028,1033,1038,1042,1047,1052,1057,1063],{"type":550,"tag":582,"props":1029,"children":1030},{"style":974},[1031],{"type":555,"value":1032},"  const",{"type":550,"tag":582,"props":1034,"children":1035},{"style":893},[1036],{"type":555,"value":1037}," node",{"type":550,"tag":582,"props":1039,"children":1040},{"style":865},[1041],{"type":555,"value":988},{"type":550,"tag":582,"props":1043,"children":1044},{"style":974},[1045],{"type":555,"value":1046}," new",{"type":550,"tag":582,"props":1048,"children":1049},{"style":980},[1050],{"type":555,"value":1051}," ListNode",{"type":550,"tag":582,"props":1053,"children":1054},{"style":865},[1055],{"type":555,"value":1056},"(",{"type":550,"tag":582,"props":1058,"children":1060},{"style":1059},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1061],{"type":555,"value":1062},"0",{"type":550,"tag":582,"props":1064,"children":1065},{"style":865},[1066],{"type":555,"value":1067},");\n",{"type":550,"tag":582,"props":1069,"children":1071},{"class":584,"line":1070},15,[1072,1077,1082,1086,1090],{"type":550,"tag":582,"props":1073,"children":1074},{"style":974},[1075],{"type":555,"value":1076},"  let",{"type":550,"tag":582,"props":1078,"children":1079},{"style":893},[1080],{"type":555,"value":1081}," current",{"type":550,"tag":582,"props":1083,"children":1084},{"style":865},[1085],{"type":555,"value":988},{"type":550,"tag":582,"props":1087,"children":1088},{"style":893},[1089],{"type":555,"value":1037},{"type":550,"tag":582,"props":1091,"children":1092},{"style":865},[1093],{"type":555,"value":1094},";\n",{"type":550,"tag":582,"props":1096,"children":1098},{"class":584,"line":1097},16,[1099,1103,1108,1112,1117],{"type":550,"tag":582,"props":1100,"children":1101},{"style":974},[1102],{"type":555,"value":1076},{"type":550,"tag":582,"props":1104,"children":1105},{"style":893},[1106],{"type":555,"value":1107}," curry",{"type":550,"tag":582,"props":1109,"children":1110},{"style":865},[1111],{"type":555,"value":988},{"type":550,"tag":582,"props":1113,"children":1114},{"style":1059},[1115],{"type":555,"value":1116}," 0",{"type":550,"tag":582,"props":1118,"children":1119},{"style":865},[1120],{"type":555,"value":1094},{"type":550,"tag":582,"props":1122,"children":1124},{"class":584,"line":1123},17,[1125],{"type":550,"tag":582,"props":1126,"children":1128},{"emptyLinePlaceholder":1127},true,[1129],{"type":555,"value":1130},"\n",{"type":550,"tag":582,"props":1132,"children":1134},{"class":584,"line":1133},18,[1135,1140,1144,1148,1153,1157,1161],{"type":550,"tag":582,"props":1136,"children":1137},{"style":871},[1138],{"type":555,"value":1139},"  while",{"type":550,"tag":582,"props":1141,"children":1142},{"style":865},[1143],{"type":555,"value":998},{"type":550,"tag":582,"props":1145,"children":1146},{"style":893},[1147],{"type":555,"value":1003},{"type":550,"tag":582,"props":1149,"children":1150},{"style":974},[1151],{"type":555,"value":1152}," ||",{"type":550,"tag":582,"props":1154,"children":1155},{"style":893},[1156],{"type":555,"value":1013},{"type":550,"tag":582,"props":1158,"children":1159},{"style":865},[1160],{"type":555,"value":1018},{"type":550,"tag":582,"props":1162,"children":1163},{"style":865},[1164],{"type":555,"value":1023},{"type":550,"tag":582,"props":1166,"children":1168},{"class":584,"line":1167},19,[1169,1174,1179,1183,1188,1193,1197,1202,1207,1212,1216],{"type":550,"tag":582,"props":1170,"children":1171},{"style":974},[1172],{"type":555,"value":1173},"    const",{"type":550,"tag":582,"props":1175,"children":1176},{"style":893},[1177],{"type":555,"value":1178}," n1",{"type":550,"tag":582,"props":1180,"children":1181},{"style":865},[1182],{"type":555,"value":988},{"type":550,"tag":582,"props":1184,"children":1185},{"style":893},[1186],{"type":555,"value":1187}," l1",{"type":550,"tag":582,"props":1189,"children":1190},{"style":974},[1191],{"type":555,"value":1192}," ?",{"type":550,"tag":582,"props":1194,"children":1195},{"style":893},[1196],{"type":555,"value":1187},{"type":550,"tag":582,"props":1198,"children":1199},{"style":865},[1200],{"type":555,"value":1201},".",{"type":550,"tag":582,"props":1203,"children":1204},{"style":893},[1205],{"type":555,"value":1206},"val",{"type":550,"tag":582,"props":1208,"children":1209},{"style":974},[1210],{"type":555,"value":1211}," :",{"type":550,"tag":582,"props":1213,"children":1214},{"style":1059},[1215],{"type":555,"value":1116},{"type":550,"tag":582,"props":1217,"children":1218},{"style":865},[1219],{"type":555,"value":1094},{"type":550,"tag":582,"props":1221,"children":1223},{"class":584,"line":1222},20,[1224,1228,1233,1237,1241,1245,1249,1253,1257,1261,1265],{"type":550,"tag":582,"props":1225,"children":1226},{"style":974},[1227],{"type":555,"value":1173},{"type":550,"tag":582,"props":1229,"children":1230},{"style":893},[1231],{"type":555,"value":1232}," n2",{"type":550,"tag":582,"props":1234,"children":1235},{"style":865},[1236],{"type":555,"value":988},{"type":550,"tag":582,"props":1238,"children":1239},{"style":893},[1240],{"type":555,"value":1013},{"type":550,"tag":582,"props":1242,"children":1243},{"style":974},[1244],{"type":555,"value":1192},{"type":550,"tag":582,"props":1246,"children":1247},{"style":893},[1248],{"type":555,"value":1013},{"type":550,"tag":582,"props":1250,"children":1251},{"style":865},[1252],{"type":555,"value":1201},{"type":550,"tag":582,"props":1254,"children":1255},{"style":893},[1256],{"type":555,"value":1206},{"type":550,"tag":582,"props":1258,"children":1259},{"style":974},[1260],{"type":555,"value":1211},{"type":550,"tag":582,"props":1262,"children":1263},{"style":1059},[1264],{"type":555,"value":1116},{"type":550,"tag":582,"props":1266,"children":1267},{"style":865},[1268],{"type":555,"value":1094},{"type":550,"tag":582,"props":1270,"children":1272},{"class":584,"line":1271},21,[1273,1277,1282,1286,1290,1295,1299,1303,1307],{"type":550,"tag":582,"props":1274,"children":1275},{"style":974},[1276],{"type":555,"value":1173},{"type":550,"tag":582,"props":1278,"children":1279},{"style":893},[1280],{"type":555,"value":1281}," sum",{"type":550,"tag":582,"props":1283,"children":1284},{"style":865},[1285],{"type":555,"value":988},{"type":550,"tag":582,"props":1287,"children":1288},{"style":893},[1289],{"type":555,"value":1178},{"type":550,"tag":582,"props":1291,"children":1292},{"style":974},[1293],{"type":555,"value":1294}," +",{"type":550,"tag":582,"props":1296,"children":1297},{"style":893},[1298],{"type":555,"value":1232},{"type":550,"tag":582,"props":1300,"children":1301},{"style":974},[1302],{"type":555,"value":1294},{"type":550,"tag":582,"props":1304,"children":1305},{"style":893},[1306],{"type":555,"value":1107},{"type":550,"tag":582,"props":1308,"children":1309},{"style":865},[1310],{"type":555,"value":1094},{"type":550,"tag":582,"props":1312,"children":1314},{"class":584,"line":1313},22,[1315,1320,1324,1329,1333,1338,1343,1348],{"type":550,"tag":582,"props":1316,"children":1317},{"style":893},[1318],{"type":555,"value":1319},"    curry",{"type":550,"tag":582,"props":1321,"children":1322},{"style":865},[1323],{"type":555,"value":988},{"type":550,"tag":582,"props":1325,"children":1326},{"style":980},[1327],{"type":555,"value":1328}," parseInt",{"type":550,"tag":582,"props":1330,"children":1331},{"style":865},[1332],{"type":555,"value":1056},{"type":550,"tag":582,"props":1334,"children":1335},{"style":893},[1336],{"type":555,"value":1337},"sum",{"type":550,"tag":582,"props":1339,"children":1340},{"style":974},[1341],{"type":555,"value":1342}," /",{"type":550,"tag":582,"props":1344,"children":1345},{"style":1059},[1346],{"type":555,"value":1347}," 10",{"type":550,"tag":582,"props":1349,"children":1350},{"style":865},[1351],{"type":555,"value":1067},{"type":550,"tag":582,"props":1353,"children":1355},{"class":584,"line":1354},23,[1356,1361,1365,1370,1374,1378,1382,1386,1390,1395,1399],{"type":550,"tag":582,"props":1357,"children":1358},{"style":893},[1359],{"type":555,"value":1360},"    current",{"type":550,"tag":582,"props":1362,"children":1363},{"style":865},[1364],{"type":555,"value":1201},{"type":550,"tag":582,"props":1366,"children":1367},{"style":893},[1368],{"type":555,"value":1369},"next",{"type":550,"tag":582,"props":1371,"children":1372},{"style":865},[1373],{"type":555,"value":988},{"type":550,"tag":582,"props":1375,"children":1376},{"style":974},[1377],{"type":555,"value":1046},{"type":550,"tag":582,"props":1379,"children":1380},{"style":980},[1381],{"type":555,"value":1051},{"type":550,"tag":582,"props":1383,"children":1384},{"style":865},[1385],{"type":555,"value":1056},{"type":550,"tag":582,"props":1387,"children":1388},{"style":893},[1389],{"type":555,"value":1337},{"type":550,"tag":582,"props":1391,"children":1392},{"style":974},[1393],{"type":555,"value":1394}," %",{"type":550,"tag":582,"props":1396,"children":1397},{"style":1059},[1398],{"type":555,"value":1347},{"type":550,"tag":582,"props":1400,"children":1401},{"style":865},[1402],{"type":555,"value":1067},{"type":550,"tag":582,"props":1404,"children":1406},{"class":584,"line":1405},24,[1407,1411,1415,1419,1423,1427],{"type":550,"tag":582,"props":1408,"children":1409},{"style":893},[1410],{"type":555,"value":1360},{"type":550,"tag":582,"props":1412,"children":1413},{"style":865},[1414],{"type":555,"value":988},{"type":550,"tag":582,"props":1416,"children":1417},{"style":893},[1418],{"type":555,"value":1081},{"type":550,"tag":582,"props":1420,"children":1421},{"style":865},[1422],{"type":555,"value":1201},{"type":550,"tag":582,"props":1424,"children":1425},{"style":893},[1426],{"type":555,"value":1369},{"type":550,"tag":582,"props":1428,"children":1429},{"style":865},[1430],{"type":555,"value":1094},{"type":550,"tag":582,"props":1432,"children":1434},{"class":584,"line":1433},25,[1435],{"type":550,"tag":582,"props":1436,"children":1437},{"emptyLinePlaceholder":1127},[1438],{"type":555,"value":1130},{"type":550,"tag":582,"props":1440,"children":1442},{"class":584,"line":1441},26,[1443,1448,1452,1456,1460],{"type":550,"tag":582,"props":1444,"children":1445},{"style":871},[1446],{"type":555,"value":1447},"    if",{"type":550,"tag":582,"props":1449,"children":1450},{"style":865},[1451],{"type":555,"value":998},{"type":550,"tag":582,"props":1453,"children":1454},{"style":893},[1455],{"type":555,"value":1003},{"type":550,"tag":582,"props":1457,"children":1458},{"style":865},[1459],{"type":555,"value":1018},{"type":550,"tag":582,"props":1461,"children":1462},{"style":865},[1463],{"type":555,"value":1023},{"type":550,"tag":582,"props":1465,"children":1467},{"class":584,"line":1466},27,[1468,1473,1477,1481,1485,1489],{"type":550,"tag":582,"props":1469,"children":1470},{"style":893},[1471],{"type":555,"value":1472},"      l1",{"type":550,"tag":582,"props":1474,"children":1475},{"style":865},[1476],{"type":555,"value":988},{"type":550,"tag":582,"props":1478,"children":1479},{"style":893},[1480],{"type":555,"value":1187},{"type":550,"tag":582,"props":1482,"children":1483},{"style":865},[1484],{"type":555,"value":1201},{"type":550,"tag":582,"props":1486,"children":1487},{"style":893},[1488],{"type":555,"value":1369},{"type":550,"tag":582,"props":1490,"children":1491},{"style":865},[1492],{"type":555,"value":1094},{"type":550,"tag":582,"props":1494,"children":1496},{"class":584,"line":1495},28,[1497],{"type":550,"tag":582,"props":1498,"children":1499},{"style":865},[1500],{"type":555,"value":1501},"    }\n",{"type":550,"tag":582,"props":1503,"children":1505},{"class":584,"line":1504},29,[1506,1510,1514,1519,1523],{"type":550,"tag":582,"props":1507,"children":1508},{"style":871},[1509],{"type":555,"value":1447},{"type":550,"tag":582,"props":1511,"children":1512},{"style":865},[1513],{"type":555,"value":998},{"type":550,"tag":582,"props":1515,"children":1516},{"style":893},[1517],{"type":555,"value":1518},"l2",{"type":550,"tag":582,"props":1520,"children":1521},{"style":865},[1522],{"type":555,"value":1018},{"type":550,"tag":582,"props":1524,"children":1525},{"style":865},[1526],{"type":555,"value":1023},{"type":550,"tag":582,"props":1528,"children":1530},{"class":584,"line":1529},30,[1531,1536,1540,1544,1548,1552],{"type":550,"tag":582,"props":1532,"children":1533},{"style":893},[1534],{"type":555,"value":1535},"      l2",{"type":550,"tag":582,"props":1537,"children":1538},{"style":865},[1539],{"type":555,"value":988},{"type":550,"tag":582,"props":1541,"children":1542},{"style":893},[1543],{"type":555,"value":1013},{"type":550,"tag":582,"props":1545,"children":1546},{"style":865},[1547],{"type":555,"value":1201},{"type":550,"tag":582,"props":1549,"children":1550},{"style":893},[1551],{"type":555,"value":1369},{"type":550,"tag":582,"props":1553,"children":1554},{"style":865},[1555],{"type":555,"value":1094},{"type":550,"tag":582,"props":1557,"children":1559},{"class":584,"line":1558},31,[1560],{"type":550,"tag":582,"props":1561,"children":1562},{"style":865},[1563],{"type":555,"value":1501},{"type":550,"tag":582,"props":1565,"children":1567},{"class":584,"line":1566},32,[1568],{"type":550,"tag":582,"props":1569,"children":1570},{"style":865},[1571],{"type":555,"value":1572},"  }\n",{"type":550,"tag":582,"props":1574,"children":1576},{"class":584,"line":1575},33,[1577],{"type":550,"tag":582,"props":1578,"children":1579},{"emptyLinePlaceholder":1127},[1580],{"type":555,"value":1130},{"type":550,"tag":582,"props":1582,"children":1584},{"class":584,"line":1583},34,[1585,1590,1594,1599,1604,1608,1612],{"type":550,"tag":582,"props":1586,"children":1587},{"style":871},[1588],{"type":555,"value":1589},"  if",{"type":550,"tag":582,"props":1591,"children":1592},{"style":865},[1593],{"type":555,"value":998},{"type":550,"tag":582,"props":1595,"children":1596},{"style":893},[1597],{"type":555,"value":1598},"curry",{"type":550,"tag":582,"props":1600,"children":1601},{"style":865},[1602],{"type":555,"value":1603}," >",{"type":550,"tag":582,"props":1605,"children":1606},{"style":1059},[1607],{"type":555,"value":1116},{"type":550,"tag":582,"props":1609,"children":1610},{"style":865},[1611],{"type":555,"value":1018},{"type":550,"tag":582,"props":1613,"children":1614},{"style":865},[1615],{"type":555,"value":1023},{"type":550,"tag":582,"props":1617,"children":1619},{"class":584,"line":1618},35,[1620,1624,1628,1632,1636,1640,1644,1648,1652],{"type":550,"tag":582,"props":1621,"children":1622},{"style":893},[1623],{"type":555,"value":1360},{"type":550,"tag":582,"props":1625,"children":1626},{"style":865},[1627],{"type":555,"value":1201},{"type":550,"tag":582,"props":1629,"children":1630},{"style":893},[1631],{"type":555,"value":1369},{"type":550,"tag":582,"props":1633,"children":1634},{"style":865},[1635],{"type":555,"value":988},{"type":550,"tag":582,"props":1637,"children":1638},{"style":974},[1639],{"type":555,"value":1046},{"type":550,"tag":582,"props":1641,"children":1642},{"style":980},[1643],{"type":555,"value":1051},{"type":550,"tag":582,"props":1645,"children":1646},{"style":865},[1647],{"type":555,"value":1056},{"type":550,"tag":582,"props":1649,"children":1650},{"style":893},[1651],{"type":555,"value":1598},{"type":550,"tag":582,"props":1653,"children":1654},{"style":865},[1655],{"type":555,"value":1067},{"type":550,"tag":582,"props":1657,"children":1659},{"class":584,"line":1658},36,[1660],{"type":550,"tag":582,"props":1661,"children":1662},{"style":865},[1663],{"type":555,"value":1572},{"type":550,"tag":582,"props":1665,"children":1667},{"class":584,"line":1666},37,[1668,1673,1677,1681,1685],{"type":550,"tag":582,"props":1669,"children":1670},{"style":871},[1671],{"type":555,"value":1672},"  return",{"type":550,"tag":582,"props":1674,"children":1675},{"style":893},[1676],{"type":555,"value":1037},{"type":550,"tag":582,"props":1678,"children":1679},{"style":865},[1680],{"type":555,"value":1201},{"type":550,"tag":582,"props":1682,"children":1683},{"style":893},[1684],{"type":555,"value":1369},{"type":550,"tag":582,"props":1686,"children":1687},{"style":865},[1688],{"type":555,"value":1094},{"type":550,"tag":582,"props":1690,"children":1692},{"class":584,"line":1691},38,[1693],{"type":550,"tag":582,"props":1694,"children":1695},{"style":865},[1696],{"type":555,"value":1697},"};\n",{"type":550,"tag":1699,"props":1700,"children":1701},"style",{},[1702],{"type":555,"value":1703},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":821,"depth":821,"links":1705},[1706,1707],{"id":694,"depth":594,"text":694},{"id":718,"depth":594,"text":718,"children":1708},[1709,1710],{"id":768,"depth":603,"text":768},{"id":773,"depth":603,"text":773},"markdown","content:1.algorithm:3.leetcode:3.major:2.add-two-numbers.md","content","1.algorithm/3.leetcode/3.major/2.add-two-numbers.md","md",[1717,1719],{"_path":60,"title":59,"description":1718},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":66,"title":65,"description":1720},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1714099211593]