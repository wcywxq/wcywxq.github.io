[{"data":1,"prerenderedAt":1733},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-two-numbers":552,"/algorithm/leetcode/major/add-two-numbers-surround":1728},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":63,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":62,"description":556,"url":557,"body":558,"_type":1723,"_id":1724,"_source":1725,"_file":1726,"_extension":1727},"major",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":559,"children":560,"toc":1716},"root",[561,568,573,578,583,622,627,650,655,678,683,703,709,728,733,777,783,788,1710],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":562,"tag":563,"props":579,"children":580},{},[581],{"type":567,"value":582},"示例 1：",{"type":562,"tag":584,"props":585,"children":588},"pre",{"className":586,"code":587,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[589],{"type":562,"tag":590,"props":591,"children":592},"code",{"__ignoreMap":555},[593,604,613],{"type":562,"tag":594,"props":595,"children":598},"span",{"class":596,"line":597},"line",1,[599],{"type":562,"tag":594,"props":600,"children":601},{},[602],{"type":567,"value":603},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":562,"tag":594,"props":605,"children":607},{"class":596,"line":606},2,[608],{"type":562,"tag":594,"props":609,"children":610},{},[611],{"type":567,"value":612},"输出：[7,0,8]\n",{"type":562,"tag":594,"props":614,"children":616},{"class":596,"line":615},3,[617],{"type":562,"tag":594,"props":618,"children":619},{},[620],{"type":567,"value":621},"解释：342 + 465 = 807.\n",{"type":562,"tag":563,"props":623,"children":624},{},[625],{"type":567,"value":626},"示例 2：",{"type":562,"tag":584,"props":628,"children":630},{"className":586,"code":629,"language":567,"meta":555,"style":555},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[631],{"type":562,"tag":590,"props":632,"children":633},{"__ignoreMap":555},[634,642],{"type":562,"tag":594,"props":635,"children":636},{"class":596,"line":597},[637],{"type":562,"tag":594,"props":638,"children":639},{},[640],{"type":567,"value":641},"输入：l1 = [0], l2 = [0]\n",{"type":562,"tag":594,"props":643,"children":644},{"class":596,"line":606},[645],{"type":562,"tag":594,"props":646,"children":647},{},[648],{"type":567,"value":649},"输出：[0]\n",{"type":562,"tag":563,"props":651,"children":652},{},[653],{"type":567,"value":654},"示例 3：",{"type":562,"tag":584,"props":656,"children":658},{"className":586,"code":657,"language":567,"meta":555,"style":555},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[659],{"type":562,"tag":590,"props":660,"children":661},{"__ignoreMap":555},[662,670],{"type":562,"tag":594,"props":663,"children":664},{"class":596,"line":597},[665],{"type":562,"tag":594,"props":666,"children":667},{},[668],{"type":567,"value":669},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":562,"tag":594,"props":671,"children":672},{"class":596,"line":606},[673],{"type":562,"tag":594,"props":674,"children":675},{},[676],{"type":567,"value":677},"输出：[8,9,9,9,0,0,0,1]\n",{"type":562,"tag":563,"props":679,"children":680},{},[681],{"type":567,"value":682},"提示：",{"type":562,"tag":684,"props":685,"children":686},"ul",{},[687,693,698],{"type":562,"tag":688,"props":689,"children":690},"li",{},[691],{"type":567,"value":692},"每个链表中的节点数在范围 [1, 100] 内",{"type":562,"tag":688,"props":694,"children":695},{},[696],{"type":567,"value":697},"0 \u003C= Node.val \u003C= 9",{"type":562,"tag":688,"props":699,"children":700},{},[701],{"type":567,"value":702},"题目数据保证列表表示的数字不含前导零",{"type":562,"tag":704,"props":705,"children":707},"h2",{"id":706},"解题思路",[708],{"type":567,"value":706},{"type":562,"tag":710,"props":711,"children":712},"ol",{},[713,718,723],{"type":562,"tag":688,"props":714,"children":715},{},[716],{"type":567,"value":717},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":562,"tag":688,"props":719,"children":720},{},[721],{"type":567,"value":722},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":562,"tag":688,"props":724,"children":725},{},[726],{"type":567,"value":727},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":562,"tag":704,"props":729,"children":731},{"id":730},"图解",[732],{"type":567,"value":730},{"type":562,"tag":563,"props":734,"children":735},{},[736,742,747,752,757,762,767,772],{"type":562,"tag":737,"props":738,"children":741},"img",{"alt":739,"src":740},"figure_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_1.png",[],{"type":562,"tag":737,"props":743,"children":746},{"alt":744,"src":745},"figure_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_2.png",[],{"type":562,"tag":737,"props":748,"children":751},{"alt":749,"src":750},"figure_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_3.png",[],{"type":562,"tag":737,"props":753,"children":756},{"alt":754,"src":755},"figure_4","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_4.png",[],{"type":562,"tag":737,"props":758,"children":761},{"alt":759,"src":760},"figure_5","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_5.png",[],{"type":562,"tag":737,"props":763,"children":766},{"alt":764,"src":765},"figure_6","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_6.png",[],{"type":562,"tag":737,"props":768,"children":771},{"alt":769,"src":770},"figure_7","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_7.png",[],{"type":562,"tag":737,"props":773,"children":776},{"alt":774,"src":775},"figure_8","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_8.png",[],{"type":562,"tag":778,"props":779,"children":781},"h3",{"id":780},"实现",[782],{"type":567,"value":780},{"type":562,"tag":778,"props":784,"children":786},{"id":785},"构造哑节点",[787],{"type":567,"value":785},{"type":562,"tag":584,"props":789,"children":793},{"className":790,"code":791,"language":792,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[794],{"type":562,"tag":590,"props":795,"children":796},{"__ignoreMap":555},[797,806,814,822,831,840,849,858,866,909,942,972,980,1036,1080,1107,1133,1143,1177,1232,1281,1323,1364,1415,1443,1451,1476,1505,1514,1539,1568,1576,1585,1593,1628,1668,1676,1701],{"type":562,"tag":594,"props":798,"children":799},{"class":596,"line":597},[800],{"type":562,"tag":594,"props":801,"children":803},{"style":802},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[804],{"type":567,"value":805},"/**\n",{"type":562,"tag":594,"props":807,"children":808},{"class":596,"line":606},[809],{"type":562,"tag":594,"props":810,"children":811},{"style":802},[812],{"type":567,"value":813}," * Definition for singly-linked list.\n",{"type":562,"tag":594,"props":815,"children":816},{"class":596,"line":615},[817],{"type":562,"tag":594,"props":818,"children":819},{"style":802},[820],{"type":567,"value":821}," * function ListNode(val) {\n",{"type":562,"tag":594,"props":823,"children":825},{"class":596,"line":824},4,[826],{"type":562,"tag":594,"props":827,"children":828},{"style":802},[829],{"type":567,"value":830}," *     this.val = val;\n",{"type":562,"tag":594,"props":832,"children":834},{"class":596,"line":833},5,[835],{"type":562,"tag":594,"props":836,"children":837},{"style":802},[838],{"type":567,"value":839}," *     this.next = null;\n",{"type":562,"tag":594,"props":841,"children":843},{"class":596,"line":842},6,[844],{"type":562,"tag":594,"props":845,"children":846},{"style":802},[847],{"type":567,"value":848}," * }\n",{"type":562,"tag":594,"props":850,"children":852},{"class":596,"line":851},7,[853],{"type":562,"tag":594,"props":854,"children":855},{"style":802},[856],{"type":567,"value":857}," */\n",{"type":562,"tag":594,"props":859,"children":861},{"class":596,"line":860},8,[862],{"type":562,"tag":594,"props":863,"children":864},{"style":802},[865],{"type":567,"value":805},{"type":562,"tag":594,"props":867,"children":869},{"class":596,"line":868},9,[870,875,881,887,892,898,903],{"type":562,"tag":594,"props":871,"children":872},{"style":802},[873],{"type":567,"value":874}," * ",{"type":562,"tag":594,"props":876,"children":878},{"style":877},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[879],{"type":567,"value":880},"@",{"type":562,"tag":594,"props":882,"children":884},{"style":883},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[885],{"type":567,"value":886},"param",{"type":562,"tag":594,"props":888,"children":889},{"style":877},[890],{"type":567,"value":891}," {",{"type":562,"tag":594,"props":893,"children":895},{"style":894},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[896],{"type":567,"value":897},"ListNode",{"type":562,"tag":594,"props":899,"children":900},{"style":877},[901],{"type":567,"value":902},"}",{"type":562,"tag":594,"props":904,"children":906},{"style":905},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[907],{"type":567,"value":908}," l1\n",{"type":562,"tag":594,"props":910,"children":912},{"class":596,"line":911},10,[913,917,921,925,929,933,937],{"type":562,"tag":594,"props":914,"children":915},{"style":802},[916],{"type":567,"value":874},{"type":562,"tag":594,"props":918,"children":919},{"style":877},[920],{"type":567,"value":880},{"type":562,"tag":594,"props":922,"children":923},{"style":883},[924],{"type":567,"value":886},{"type":562,"tag":594,"props":926,"children":927},{"style":877},[928],{"type":567,"value":891},{"type":562,"tag":594,"props":930,"children":931},{"style":894},[932],{"type":567,"value":897},{"type":562,"tag":594,"props":934,"children":935},{"style":877},[936],{"type":567,"value":902},{"type":562,"tag":594,"props":938,"children":939},{"style":905},[940],{"type":567,"value":941}," l2\n",{"type":562,"tag":594,"props":943,"children":945},{"class":596,"line":944},11,[946,950,954,959,963,967],{"type":562,"tag":594,"props":947,"children":948},{"style":802},[949],{"type":567,"value":874},{"type":562,"tag":594,"props":951,"children":952},{"style":877},[953],{"type":567,"value":880},{"type":562,"tag":594,"props":955,"children":956},{"style":883},[957],{"type":567,"value":958},"return",{"type":562,"tag":594,"props":960,"children":961},{"style":877},[962],{"type":567,"value":891},{"type":562,"tag":594,"props":964,"children":965},{"style":894},[966],{"type":567,"value":897},{"type":562,"tag":594,"props":968,"children":969},{"style":877},[970],{"type":567,"value":971},"}\n",{"type":562,"tag":594,"props":973,"children":975},{"class":596,"line":974},12,[976],{"type":562,"tag":594,"props":977,"children":978},{"style":802},[979],{"type":567,"value":857},{"type":562,"tag":594,"props":981,"children":983},{"class":596,"line":982},13,[984,990,996,1001,1006,1011,1016,1021,1026,1031],{"type":562,"tag":594,"props":985,"children":987},{"style":986},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[988],{"type":567,"value":989},"var",{"type":562,"tag":594,"props":991,"children":993},{"style":992},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[994],{"type":567,"value":995}," addTwoNumbers",{"type":562,"tag":594,"props":997,"children":998},{"style":877},[999],{"type":567,"value":1000}," =",{"type":562,"tag":594,"props":1002,"children":1003},{"style":986},[1004],{"type":567,"value":1005}," function",{"type":562,"tag":594,"props":1007,"children":1008},{"style":877},[1009],{"type":567,"value":1010}," (",{"type":562,"tag":594,"props":1012,"children":1013},{"style":905},[1014],{"type":567,"value":1015},"l1",{"type":562,"tag":594,"props":1017,"children":1018},{"style":877},[1019],{"type":567,"value":1020},",",{"type":562,"tag":594,"props":1022,"children":1023},{"style":905},[1024],{"type":567,"value":1025}," l2",{"type":562,"tag":594,"props":1027,"children":1028},{"style":877},[1029],{"type":567,"value":1030},")",{"type":562,"tag":594,"props":1032,"children":1033},{"style":877},[1034],{"type":567,"value":1035}," {\n",{"type":562,"tag":594,"props":1037,"children":1039},{"class":596,"line":1038},14,[1040,1045,1050,1054,1059,1064,1069,1075],{"type":562,"tag":594,"props":1041,"children":1042},{"style":986},[1043],{"type":567,"value":1044},"  const",{"type":562,"tag":594,"props":1046,"children":1047},{"style":905},[1048],{"type":567,"value":1049}," node",{"type":562,"tag":594,"props":1051,"children":1052},{"style":877},[1053],{"type":567,"value":1000},{"type":562,"tag":594,"props":1055,"children":1056},{"style":986},[1057],{"type":567,"value":1058}," new",{"type":562,"tag":594,"props":1060,"children":1061},{"style":992},[1062],{"type":567,"value":1063}," ListNode",{"type":562,"tag":594,"props":1065,"children":1066},{"style":877},[1067],{"type":567,"value":1068},"(",{"type":562,"tag":594,"props":1070,"children":1072},{"style":1071},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1073],{"type":567,"value":1074},"0",{"type":562,"tag":594,"props":1076,"children":1077},{"style":877},[1078],{"type":567,"value":1079},");\n",{"type":562,"tag":594,"props":1081,"children":1083},{"class":596,"line":1082},15,[1084,1089,1094,1098,1102],{"type":562,"tag":594,"props":1085,"children":1086},{"style":986},[1087],{"type":567,"value":1088},"  let",{"type":562,"tag":594,"props":1090,"children":1091},{"style":905},[1092],{"type":567,"value":1093}," current",{"type":562,"tag":594,"props":1095,"children":1096},{"style":877},[1097],{"type":567,"value":1000},{"type":562,"tag":594,"props":1099,"children":1100},{"style":905},[1101],{"type":567,"value":1049},{"type":562,"tag":594,"props":1103,"children":1104},{"style":877},[1105],{"type":567,"value":1106},";\n",{"type":562,"tag":594,"props":1108,"children":1110},{"class":596,"line":1109},16,[1111,1115,1120,1124,1129],{"type":562,"tag":594,"props":1112,"children":1113},{"style":986},[1114],{"type":567,"value":1088},{"type":562,"tag":594,"props":1116,"children":1117},{"style":905},[1118],{"type":567,"value":1119}," curry",{"type":562,"tag":594,"props":1121,"children":1122},{"style":877},[1123],{"type":567,"value":1000},{"type":562,"tag":594,"props":1125,"children":1126},{"style":1071},[1127],{"type":567,"value":1128}," 0",{"type":562,"tag":594,"props":1130,"children":1131},{"style":877},[1132],{"type":567,"value":1106},{"type":562,"tag":594,"props":1134,"children":1136},{"class":596,"line":1135},17,[1137],{"type":562,"tag":594,"props":1138,"children":1140},{"emptyLinePlaceholder":1139},true,[1141],{"type":567,"value":1142},"\n",{"type":562,"tag":594,"props":1144,"children":1146},{"class":596,"line":1145},18,[1147,1152,1156,1160,1165,1169,1173],{"type":562,"tag":594,"props":1148,"children":1149},{"style":883},[1150],{"type":567,"value":1151},"  while",{"type":562,"tag":594,"props":1153,"children":1154},{"style":877},[1155],{"type":567,"value":1010},{"type":562,"tag":594,"props":1157,"children":1158},{"style":905},[1159],{"type":567,"value":1015},{"type":562,"tag":594,"props":1161,"children":1162},{"style":986},[1163],{"type":567,"value":1164}," ||",{"type":562,"tag":594,"props":1166,"children":1167},{"style":905},[1168],{"type":567,"value":1025},{"type":562,"tag":594,"props":1170,"children":1171},{"style":877},[1172],{"type":567,"value":1030},{"type":562,"tag":594,"props":1174,"children":1175},{"style":877},[1176],{"type":567,"value":1035},{"type":562,"tag":594,"props":1178,"children":1180},{"class":596,"line":1179},19,[1181,1186,1191,1195,1200,1205,1209,1214,1219,1224,1228],{"type":562,"tag":594,"props":1182,"children":1183},{"style":986},[1184],{"type":567,"value":1185},"    const",{"type":562,"tag":594,"props":1187,"children":1188},{"style":905},[1189],{"type":567,"value":1190}," n1",{"type":562,"tag":594,"props":1192,"children":1193},{"style":877},[1194],{"type":567,"value":1000},{"type":562,"tag":594,"props":1196,"children":1197},{"style":905},[1198],{"type":567,"value":1199}," l1",{"type":562,"tag":594,"props":1201,"children":1202},{"style":986},[1203],{"type":567,"value":1204}," ?",{"type":562,"tag":594,"props":1206,"children":1207},{"style":905},[1208],{"type":567,"value":1199},{"type":562,"tag":594,"props":1210,"children":1211},{"style":877},[1212],{"type":567,"value":1213},".",{"type":562,"tag":594,"props":1215,"children":1216},{"style":905},[1217],{"type":567,"value":1218},"val",{"type":562,"tag":594,"props":1220,"children":1221},{"style":986},[1222],{"type":567,"value":1223}," :",{"type":562,"tag":594,"props":1225,"children":1226},{"style":1071},[1227],{"type":567,"value":1128},{"type":562,"tag":594,"props":1229,"children":1230},{"style":877},[1231],{"type":567,"value":1106},{"type":562,"tag":594,"props":1233,"children":1235},{"class":596,"line":1234},20,[1236,1240,1245,1249,1253,1257,1261,1265,1269,1273,1277],{"type":562,"tag":594,"props":1237,"children":1238},{"style":986},[1239],{"type":567,"value":1185},{"type":562,"tag":594,"props":1241,"children":1242},{"style":905},[1243],{"type":567,"value":1244}," n2",{"type":562,"tag":594,"props":1246,"children":1247},{"style":877},[1248],{"type":567,"value":1000},{"type":562,"tag":594,"props":1250,"children":1251},{"style":905},[1252],{"type":567,"value":1025},{"type":562,"tag":594,"props":1254,"children":1255},{"style":986},[1256],{"type":567,"value":1204},{"type":562,"tag":594,"props":1258,"children":1259},{"style":905},[1260],{"type":567,"value":1025},{"type":562,"tag":594,"props":1262,"children":1263},{"style":877},[1264],{"type":567,"value":1213},{"type":562,"tag":594,"props":1266,"children":1267},{"style":905},[1268],{"type":567,"value":1218},{"type":562,"tag":594,"props":1270,"children":1271},{"style":986},[1272],{"type":567,"value":1223},{"type":562,"tag":594,"props":1274,"children":1275},{"style":1071},[1276],{"type":567,"value":1128},{"type":562,"tag":594,"props":1278,"children":1279},{"style":877},[1280],{"type":567,"value":1106},{"type":562,"tag":594,"props":1282,"children":1284},{"class":596,"line":1283},21,[1285,1289,1294,1298,1302,1307,1311,1315,1319],{"type":562,"tag":594,"props":1286,"children":1287},{"style":986},[1288],{"type":567,"value":1185},{"type":562,"tag":594,"props":1290,"children":1291},{"style":905},[1292],{"type":567,"value":1293}," sum",{"type":562,"tag":594,"props":1295,"children":1296},{"style":877},[1297],{"type":567,"value":1000},{"type":562,"tag":594,"props":1299,"children":1300},{"style":905},[1301],{"type":567,"value":1190},{"type":562,"tag":594,"props":1303,"children":1304},{"style":986},[1305],{"type":567,"value":1306}," +",{"type":562,"tag":594,"props":1308,"children":1309},{"style":905},[1310],{"type":567,"value":1244},{"type":562,"tag":594,"props":1312,"children":1313},{"style":986},[1314],{"type":567,"value":1306},{"type":562,"tag":594,"props":1316,"children":1317},{"style":905},[1318],{"type":567,"value":1119},{"type":562,"tag":594,"props":1320,"children":1321},{"style":877},[1322],{"type":567,"value":1106},{"type":562,"tag":594,"props":1324,"children":1326},{"class":596,"line":1325},22,[1327,1332,1336,1341,1345,1350,1355,1360],{"type":562,"tag":594,"props":1328,"children":1329},{"style":905},[1330],{"type":567,"value":1331},"    curry",{"type":562,"tag":594,"props":1333,"children":1334},{"style":877},[1335],{"type":567,"value":1000},{"type":562,"tag":594,"props":1337,"children":1338},{"style":992},[1339],{"type":567,"value":1340}," parseInt",{"type":562,"tag":594,"props":1342,"children":1343},{"style":877},[1344],{"type":567,"value":1068},{"type":562,"tag":594,"props":1346,"children":1347},{"style":905},[1348],{"type":567,"value":1349},"sum",{"type":562,"tag":594,"props":1351,"children":1352},{"style":986},[1353],{"type":567,"value":1354}," /",{"type":562,"tag":594,"props":1356,"children":1357},{"style":1071},[1358],{"type":567,"value":1359}," 10",{"type":562,"tag":594,"props":1361,"children":1362},{"style":877},[1363],{"type":567,"value":1079},{"type":562,"tag":594,"props":1365,"children":1367},{"class":596,"line":1366},23,[1368,1373,1377,1382,1386,1390,1394,1398,1402,1407,1411],{"type":562,"tag":594,"props":1369,"children":1370},{"style":905},[1371],{"type":567,"value":1372},"    current",{"type":562,"tag":594,"props":1374,"children":1375},{"style":877},[1376],{"type":567,"value":1213},{"type":562,"tag":594,"props":1378,"children":1379},{"style":905},[1380],{"type":567,"value":1381},"next",{"type":562,"tag":594,"props":1383,"children":1384},{"style":877},[1385],{"type":567,"value":1000},{"type":562,"tag":594,"props":1387,"children":1388},{"style":986},[1389],{"type":567,"value":1058},{"type":562,"tag":594,"props":1391,"children":1392},{"style":992},[1393],{"type":567,"value":1063},{"type":562,"tag":594,"props":1395,"children":1396},{"style":877},[1397],{"type":567,"value":1068},{"type":562,"tag":594,"props":1399,"children":1400},{"style":905},[1401],{"type":567,"value":1349},{"type":562,"tag":594,"props":1403,"children":1404},{"style":986},[1405],{"type":567,"value":1406}," %",{"type":562,"tag":594,"props":1408,"children":1409},{"style":1071},[1410],{"type":567,"value":1359},{"type":562,"tag":594,"props":1412,"children":1413},{"style":877},[1414],{"type":567,"value":1079},{"type":562,"tag":594,"props":1416,"children":1418},{"class":596,"line":1417},24,[1419,1423,1427,1431,1435,1439],{"type":562,"tag":594,"props":1420,"children":1421},{"style":905},[1422],{"type":567,"value":1372},{"type":562,"tag":594,"props":1424,"children":1425},{"style":877},[1426],{"type":567,"value":1000},{"type":562,"tag":594,"props":1428,"children":1429},{"style":905},[1430],{"type":567,"value":1093},{"type":562,"tag":594,"props":1432,"children":1433},{"style":877},[1434],{"type":567,"value":1213},{"type":562,"tag":594,"props":1436,"children":1437},{"style":905},[1438],{"type":567,"value":1381},{"type":562,"tag":594,"props":1440,"children":1441},{"style":877},[1442],{"type":567,"value":1106},{"type":562,"tag":594,"props":1444,"children":1446},{"class":596,"line":1445},25,[1447],{"type":562,"tag":594,"props":1448,"children":1449},{"emptyLinePlaceholder":1139},[1450],{"type":567,"value":1142},{"type":562,"tag":594,"props":1452,"children":1454},{"class":596,"line":1453},26,[1455,1460,1464,1468,1472],{"type":562,"tag":594,"props":1456,"children":1457},{"style":883},[1458],{"type":567,"value":1459},"    if",{"type":562,"tag":594,"props":1461,"children":1462},{"style":877},[1463],{"type":567,"value":1010},{"type":562,"tag":594,"props":1465,"children":1466},{"style":905},[1467],{"type":567,"value":1015},{"type":562,"tag":594,"props":1469,"children":1470},{"style":877},[1471],{"type":567,"value":1030},{"type":562,"tag":594,"props":1473,"children":1474},{"style":877},[1475],{"type":567,"value":1035},{"type":562,"tag":594,"props":1477,"children":1479},{"class":596,"line":1478},27,[1480,1485,1489,1493,1497,1501],{"type":562,"tag":594,"props":1481,"children":1482},{"style":905},[1483],{"type":567,"value":1484},"      l1",{"type":562,"tag":594,"props":1486,"children":1487},{"style":877},[1488],{"type":567,"value":1000},{"type":562,"tag":594,"props":1490,"children":1491},{"style":905},[1492],{"type":567,"value":1199},{"type":562,"tag":594,"props":1494,"children":1495},{"style":877},[1496],{"type":567,"value":1213},{"type":562,"tag":594,"props":1498,"children":1499},{"style":905},[1500],{"type":567,"value":1381},{"type":562,"tag":594,"props":1502,"children":1503},{"style":877},[1504],{"type":567,"value":1106},{"type":562,"tag":594,"props":1506,"children":1508},{"class":596,"line":1507},28,[1509],{"type":562,"tag":594,"props":1510,"children":1511},{"style":877},[1512],{"type":567,"value":1513},"    }\n",{"type":562,"tag":594,"props":1515,"children":1517},{"class":596,"line":1516},29,[1518,1522,1526,1531,1535],{"type":562,"tag":594,"props":1519,"children":1520},{"style":883},[1521],{"type":567,"value":1459},{"type":562,"tag":594,"props":1523,"children":1524},{"style":877},[1525],{"type":567,"value":1010},{"type":562,"tag":594,"props":1527,"children":1528},{"style":905},[1529],{"type":567,"value":1530},"l2",{"type":562,"tag":594,"props":1532,"children":1533},{"style":877},[1534],{"type":567,"value":1030},{"type":562,"tag":594,"props":1536,"children":1537},{"style":877},[1538],{"type":567,"value":1035},{"type":562,"tag":594,"props":1540,"children":1542},{"class":596,"line":1541},30,[1543,1548,1552,1556,1560,1564],{"type":562,"tag":594,"props":1544,"children":1545},{"style":905},[1546],{"type":567,"value":1547},"      l2",{"type":562,"tag":594,"props":1549,"children":1550},{"style":877},[1551],{"type":567,"value":1000},{"type":562,"tag":594,"props":1553,"children":1554},{"style":905},[1555],{"type":567,"value":1025},{"type":562,"tag":594,"props":1557,"children":1558},{"style":877},[1559],{"type":567,"value":1213},{"type":562,"tag":594,"props":1561,"children":1562},{"style":905},[1563],{"type":567,"value":1381},{"type":562,"tag":594,"props":1565,"children":1566},{"style":877},[1567],{"type":567,"value":1106},{"type":562,"tag":594,"props":1569,"children":1571},{"class":596,"line":1570},31,[1572],{"type":562,"tag":594,"props":1573,"children":1574},{"style":877},[1575],{"type":567,"value":1513},{"type":562,"tag":594,"props":1577,"children":1579},{"class":596,"line":1578},32,[1580],{"type":562,"tag":594,"props":1581,"children":1582},{"style":877},[1583],{"type":567,"value":1584},"  }\n",{"type":562,"tag":594,"props":1586,"children":1588},{"class":596,"line":1587},33,[1589],{"type":562,"tag":594,"props":1590,"children":1591},{"emptyLinePlaceholder":1139},[1592],{"type":567,"value":1142},{"type":562,"tag":594,"props":1594,"children":1596},{"class":596,"line":1595},34,[1597,1602,1606,1611,1616,1620,1624],{"type":562,"tag":594,"props":1598,"children":1599},{"style":883},[1600],{"type":567,"value":1601},"  if",{"type":562,"tag":594,"props":1603,"children":1604},{"style":877},[1605],{"type":567,"value":1010},{"type":562,"tag":594,"props":1607,"children":1608},{"style":905},[1609],{"type":567,"value":1610},"curry",{"type":562,"tag":594,"props":1612,"children":1613},{"style":877},[1614],{"type":567,"value":1615}," >",{"type":562,"tag":594,"props":1617,"children":1618},{"style":1071},[1619],{"type":567,"value":1128},{"type":562,"tag":594,"props":1621,"children":1622},{"style":877},[1623],{"type":567,"value":1030},{"type":562,"tag":594,"props":1625,"children":1626},{"style":877},[1627],{"type":567,"value":1035},{"type":562,"tag":594,"props":1629,"children":1631},{"class":596,"line":1630},35,[1632,1636,1640,1644,1648,1652,1656,1660,1664],{"type":562,"tag":594,"props":1633,"children":1634},{"style":905},[1635],{"type":567,"value":1372},{"type":562,"tag":594,"props":1637,"children":1638},{"style":877},[1639],{"type":567,"value":1213},{"type":562,"tag":594,"props":1641,"children":1642},{"style":905},[1643],{"type":567,"value":1381},{"type":562,"tag":594,"props":1645,"children":1646},{"style":877},[1647],{"type":567,"value":1000},{"type":562,"tag":594,"props":1649,"children":1650},{"style":986},[1651],{"type":567,"value":1058},{"type":562,"tag":594,"props":1653,"children":1654},{"style":992},[1655],{"type":567,"value":1063},{"type":562,"tag":594,"props":1657,"children":1658},{"style":877},[1659],{"type":567,"value":1068},{"type":562,"tag":594,"props":1661,"children":1662},{"style":905},[1663],{"type":567,"value":1610},{"type":562,"tag":594,"props":1665,"children":1666},{"style":877},[1667],{"type":567,"value":1079},{"type":562,"tag":594,"props":1669,"children":1671},{"class":596,"line":1670},36,[1672],{"type":562,"tag":594,"props":1673,"children":1674},{"style":877},[1675],{"type":567,"value":1584},{"type":562,"tag":594,"props":1677,"children":1679},{"class":596,"line":1678},37,[1680,1685,1689,1693,1697],{"type":562,"tag":594,"props":1681,"children":1682},{"style":883},[1683],{"type":567,"value":1684},"  return",{"type":562,"tag":594,"props":1686,"children":1687},{"style":905},[1688],{"type":567,"value":1049},{"type":562,"tag":594,"props":1690,"children":1691},{"style":877},[1692],{"type":567,"value":1213},{"type":562,"tag":594,"props":1694,"children":1695},{"style":905},[1696],{"type":567,"value":1381},{"type":562,"tag":594,"props":1698,"children":1699},{"style":877},[1700],{"type":567,"value":1106},{"type":562,"tag":594,"props":1702,"children":1704},{"class":596,"line":1703},38,[1705],{"type":562,"tag":594,"props":1706,"children":1707},{"style":877},[1708],{"type":567,"value":1709},"};\n",{"type":562,"tag":1711,"props":1712,"children":1713},"style",{},[1714],{"type":567,"value":1715},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":833,"depth":833,"links":1717},[1718,1719],{"id":706,"depth":606,"text":706},{"id":730,"depth":606,"text":730,"children":1720},[1721,1722],{"id":780,"depth":615,"text":780},{"id":785,"depth":615,"text":785},"markdown","content:1.algorithm:3.leetcode:3.major:2.add-two-numbers.md","content","1.algorithm/3.leetcode/3.major/2.add-two-numbers.md","md",[1729,1731],{"_path":60,"title":59,"description":1730},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":66,"title":65,"description":1732},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1715137594016]