[{"data":1,"prerenderedAt":1730},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-two-numbers":549,"/algorithm/leetcode/major/add-two-numbers-surround":1725},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":63,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":62,"description":553,"url":554,"body":555,"_type":1720,"_id":1721,"_source":1722,"_file":1723,"_extension":1724},"major",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":556,"children":557,"toc":1713},"root",[558,565,570,575,580,619,624,647,652,675,680,700,706,725,730,774,780,785,1707],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":559,"tag":560,"props":576,"children":577},{},[578],{"type":564,"value":579},"示例 1：",{"type":559,"tag":581,"props":582,"children":585},"pre",{"className":583,"code":584,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[586],{"type":559,"tag":587,"props":588,"children":589},"code",{"__ignoreMap":552},[590,601,610],{"type":559,"tag":591,"props":592,"children":595},"span",{"class":593,"line":594},"line",1,[596],{"type":559,"tag":591,"props":597,"children":598},{},[599],{"type":564,"value":600},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":559,"tag":591,"props":602,"children":604},{"class":593,"line":603},2,[605],{"type":559,"tag":591,"props":606,"children":607},{},[608],{"type":564,"value":609},"输出：[7,0,8]\n",{"type":559,"tag":591,"props":611,"children":613},{"class":593,"line":612},3,[614],{"type":559,"tag":591,"props":615,"children":616},{},[617],{"type":564,"value":618},"解释：342 + 465 = 807.\n",{"type":559,"tag":560,"props":620,"children":621},{},[622],{"type":564,"value":623},"示例 2：",{"type":559,"tag":581,"props":625,"children":627},{"className":583,"code":626,"language":564,"meta":552,"style":552},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[628],{"type":559,"tag":587,"props":629,"children":630},{"__ignoreMap":552},[631,639],{"type":559,"tag":591,"props":632,"children":633},{"class":593,"line":594},[634],{"type":559,"tag":591,"props":635,"children":636},{},[637],{"type":564,"value":638},"输入：l1 = [0], l2 = [0]\n",{"type":559,"tag":591,"props":640,"children":641},{"class":593,"line":603},[642],{"type":559,"tag":591,"props":643,"children":644},{},[645],{"type":564,"value":646},"输出：[0]\n",{"type":559,"tag":560,"props":648,"children":649},{},[650],{"type":564,"value":651},"示例 3：",{"type":559,"tag":581,"props":653,"children":655},{"className":583,"code":654,"language":564,"meta":552,"style":552},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[656],{"type":559,"tag":587,"props":657,"children":658},{"__ignoreMap":552},[659,667],{"type":559,"tag":591,"props":660,"children":661},{"class":593,"line":594},[662],{"type":559,"tag":591,"props":663,"children":664},{},[665],{"type":564,"value":666},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":559,"tag":591,"props":668,"children":669},{"class":593,"line":603},[670],{"type":559,"tag":591,"props":671,"children":672},{},[673],{"type":564,"value":674},"输出：[8,9,9,9,0,0,0,1]\n",{"type":559,"tag":560,"props":676,"children":677},{},[678],{"type":564,"value":679},"提示：",{"type":559,"tag":681,"props":682,"children":683},"ul",{},[684,690,695],{"type":559,"tag":685,"props":686,"children":687},"li",{},[688],{"type":564,"value":689},"每个链表中的节点数在范围 [1, 100] 内",{"type":559,"tag":685,"props":691,"children":692},{},[693],{"type":564,"value":694},"0 \u003C= Node.val \u003C= 9",{"type":559,"tag":685,"props":696,"children":697},{},[698],{"type":564,"value":699},"题目数据保证列表表示的数字不含前导零",{"type":559,"tag":701,"props":702,"children":704},"h2",{"id":703},"解题思路",[705],{"type":564,"value":703},{"type":559,"tag":707,"props":708,"children":709},"ol",{},[710,715,720],{"type":559,"tag":685,"props":711,"children":712},{},[713],{"type":564,"value":714},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":559,"tag":685,"props":716,"children":717},{},[718],{"type":564,"value":719},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":559,"tag":685,"props":721,"children":722},{},[723],{"type":564,"value":724},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":559,"tag":701,"props":726,"children":728},{"id":727},"图解",[729],{"type":564,"value":727},{"type":559,"tag":560,"props":731,"children":732},{},[733,739,744,749,754,759,764,769],{"type":559,"tag":734,"props":735,"children":738},"img",{"alt":736,"src":737},"figure_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_1.png",[],{"type":559,"tag":734,"props":740,"children":743},{"alt":741,"src":742},"figure_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_2.png",[],{"type":559,"tag":734,"props":745,"children":748},{"alt":746,"src":747},"figure_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_3.png",[],{"type":559,"tag":734,"props":750,"children":753},{"alt":751,"src":752},"figure_4","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_4.png",[],{"type":559,"tag":734,"props":755,"children":758},{"alt":756,"src":757},"figure_5","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_5.png",[],{"type":559,"tag":734,"props":760,"children":763},{"alt":761,"src":762},"figure_6","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_6.png",[],{"type":559,"tag":734,"props":765,"children":768},{"alt":766,"src":767},"figure_7","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_7.png",[],{"type":559,"tag":734,"props":770,"children":773},{"alt":771,"src":772},"figure_8","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_8.png",[],{"type":559,"tag":775,"props":776,"children":778},"h3",{"id":777},"实现",[779],{"type":564,"value":777},{"type":559,"tag":775,"props":781,"children":783},{"id":782},"构造哑节点",[784],{"type":564,"value":782},{"type":559,"tag":581,"props":786,"children":790},{"className":787,"code":788,"language":789,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[791],{"type":559,"tag":587,"props":792,"children":793},{"__ignoreMap":552},[794,803,811,819,828,837,846,855,863,906,939,969,977,1033,1077,1104,1130,1140,1174,1229,1278,1320,1361,1412,1440,1448,1473,1502,1511,1536,1565,1573,1582,1590,1625,1665,1673,1698],{"type":559,"tag":591,"props":795,"children":796},{"class":593,"line":594},[797],{"type":559,"tag":591,"props":798,"children":800},{"style":799},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[801],{"type":564,"value":802},"/**\n",{"type":559,"tag":591,"props":804,"children":805},{"class":593,"line":603},[806],{"type":559,"tag":591,"props":807,"children":808},{"style":799},[809],{"type":564,"value":810}," * Definition for singly-linked list.\n",{"type":559,"tag":591,"props":812,"children":813},{"class":593,"line":612},[814],{"type":559,"tag":591,"props":815,"children":816},{"style":799},[817],{"type":564,"value":818}," * function ListNode(val) {\n",{"type":559,"tag":591,"props":820,"children":822},{"class":593,"line":821},4,[823],{"type":559,"tag":591,"props":824,"children":825},{"style":799},[826],{"type":564,"value":827}," *     this.val = val;\n",{"type":559,"tag":591,"props":829,"children":831},{"class":593,"line":830},5,[832],{"type":559,"tag":591,"props":833,"children":834},{"style":799},[835],{"type":564,"value":836}," *     this.next = null;\n",{"type":559,"tag":591,"props":838,"children":840},{"class":593,"line":839},6,[841],{"type":559,"tag":591,"props":842,"children":843},{"style":799},[844],{"type":564,"value":845}," * }\n",{"type":559,"tag":591,"props":847,"children":849},{"class":593,"line":848},7,[850],{"type":559,"tag":591,"props":851,"children":852},{"style":799},[853],{"type":564,"value":854}," */\n",{"type":559,"tag":591,"props":856,"children":858},{"class":593,"line":857},8,[859],{"type":559,"tag":591,"props":860,"children":861},{"style":799},[862],{"type":564,"value":802},{"type":559,"tag":591,"props":864,"children":866},{"class":593,"line":865},9,[867,872,878,884,889,895,900],{"type":559,"tag":591,"props":868,"children":869},{"style":799},[870],{"type":564,"value":871}," * ",{"type":559,"tag":591,"props":873,"children":875},{"style":874},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[876],{"type":564,"value":877},"@",{"type":559,"tag":591,"props":879,"children":881},{"style":880},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[882],{"type":564,"value":883},"param",{"type":559,"tag":591,"props":885,"children":886},{"style":874},[887],{"type":564,"value":888}," {",{"type":559,"tag":591,"props":890,"children":892},{"style":891},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[893],{"type":564,"value":894},"ListNode",{"type":559,"tag":591,"props":896,"children":897},{"style":874},[898],{"type":564,"value":899},"}",{"type":559,"tag":591,"props":901,"children":903},{"style":902},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[904],{"type":564,"value":905}," l1\n",{"type":559,"tag":591,"props":907,"children":909},{"class":593,"line":908},10,[910,914,918,922,926,930,934],{"type":559,"tag":591,"props":911,"children":912},{"style":799},[913],{"type":564,"value":871},{"type":559,"tag":591,"props":915,"children":916},{"style":874},[917],{"type":564,"value":877},{"type":559,"tag":591,"props":919,"children":920},{"style":880},[921],{"type":564,"value":883},{"type":559,"tag":591,"props":923,"children":924},{"style":874},[925],{"type":564,"value":888},{"type":559,"tag":591,"props":927,"children":928},{"style":891},[929],{"type":564,"value":894},{"type":559,"tag":591,"props":931,"children":932},{"style":874},[933],{"type":564,"value":899},{"type":559,"tag":591,"props":935,"children":936},{"style":902},[937],{"type":564,"value":938}," l2\n",{"type":559,"tag":591,"props":940,"children":942},{"class":593,"line":941},11,[943,947,951,956,960,964],{"type":559,"tag":591,"props":944,"children":945},{"style":799},[946],{"type":564,"value":871},{"type":559,"tag":591,"props":948,"children":949},{"style":874},[950],{"type":564,"value":877},{"type":559,"tag":591,"props":952,"children":953},{"style":880},[954],{"type":564,"value":955},"return",{"type":559,"tag":591,"props":957,"children":958},{"style":874},[959],{"type":564,"value":888},{"type":559,"tag":591,"props":961,"children":962},{"style":891},[963],{"type":564,"value":894},{"type":559,"tag":591,"props":965,"children":966},{"style":874},[967],{"type":564,"value":968},"}\n",{"type":559,"tag":591,"props":970,"children":972},{"class":593,"line":971},12,[973],{"type":559,"tag":591,"props":974,"children":975},{"style":799},[976],{"type":564,"value":854},{"type":559,"tag":591,"props":978,"children":980},{"class":593,"line":979},13,[981,987,993,998,1003,1008,1013,1018,1023,1028],{"type":559,"tag":591,"props":982,"children":984},{"style":983},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[985],{"type":564,"value":986},"var",{"type":559,"tag":591,"props":988,"children":990},{"style":989},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[991],{"type":564,"value":992}," addTwoNumbers",{"type":559,"tag":591,"props":994,"children":995},{"style":874},[996],{"type":564,"value":997}," =",{"type":559,"tag":591,"props":999,"children":1000},{"style":983},[1001],{"type":564,"value":1002}," function",{"type":559,"tag":591,"props":1004,"children":1005},{"style":874},[1006],{"type":564,"value":1007}," (",{"type":559,"tag":591,"props":1009,"children":1010},{"style":902},[1011],{"type":564,"value":1012},"l1",{"type":559,"tag":591,"props":1014,"children":1015},{"style":874},[1016],{"type":564,"value":1017},",",{"type":559,"tag":591,"props":1019,"children":1020},{"style":902},[1021],{"type":564,"value":1022}," l2",{"type":559,"tag":591,"props":1024,"children":1025},{"style":874},[1026],{"type":564,"value":1027},")",{"type":559,"tag":591,"props":1029,"children":1030},{"style":874},[1031],{"type":564,"value":1032}," {\n",{"type":559,"tag":591,"props":1034,"children":1036},{"class":593,"line":1035},14,[1037,1042,1047,1051,1056,1061,1066,1072],{"type":559,"tag":591,"props":1038,"children":1039},{"style":983},[1040],{"type":564,"value":1041},"  const",{"type":559,"tag":591,"props":1043,"children":1044},{"style":902},[1045],{"type":564,"value":1046}," node",{"type":559,"tag":591,"props":1048,"children":1049},{"style":874},[1050],{"type":564,"value":997},{"type":559,"tag":591,"props":1052,"children":1053},{"style":983},[1054],{"type":564,"value":1055}," new",{"type":559,"tag":591,"props":1057,"children":1058},{"style":989},[1059],{"type":564,"value":1060}," ListNode",{"type":559,"tag":591,"props":1062,"children":1063},{"style":874},[1064],{"type":564,"value":1065},"(",{"type":559,"tag":591,"props":1067,"children":1069},{"style":1068},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1070],{"type":564,"value":1071},"0",{"type":559,"tag":591,"props":1073,"children":1074},{"style":874},[1075],{"type":564,"value":1076},");\n",{"type":559,"tag":591,"props":1078,"children":1080},{"class":593,"line":1079},15,[1081,1086,1091,1095,1099],{"type":559,"tag":591,"props":1082,"children":1083},{"style":983},[1084],{"type":564,"value":1085},"  let",{"type":559,"tag":591,"props":1087,"children":1088},{"style":902},[1089],{"type":564,"value":1090}," current",{"type":559,"tag":591,"props":1092,"children":1093},{"style":874},[1094],{"type":564,"value":997},{"type":559,"tag":591,"props":1096,"children":1097},{"style":902},[1098],{"type":564,"value":1046},{"type":559,"tag":591,"props":1100,"children":1101},{"style":874},[1102],{"type":564,"value":1103},";\n",{"type":559,"tag":591,"props":1105,"children":1107},{"class":593,"line":1106},16,[1108,1112,1117,1121,1126],{"type":559,"tag":591,"props":1109,"children":1110},{"style":983},[1111],{"type":564,"value":1085},{"type":559,"tag":591,"props":1113,"children":1114},{"style":902},[1115],{"type":564,"value":1116}," curry",{"type":559,"tag":591,"props":1118,"children":1119},{"style":874},[1120],{"type":564,"value":997},{"type":559,"tag":591,"props":1122,"children":1123},{"style":1068},[1124],{"type":564,"value":1125}," 0",{"type":559,"tag":591,"props":1127,"children":1128},{"style":874},[1129],{"type":564,"value":1103},{"type":559,"tag":591,"props":1131,"children":1133},{"class":593,"line":1132},17,[1134],{"type":559,"tag":591,"props":1135,"children":1137},{"emptyLinePlaceholder":1136},true,[1138],{"type":564,"value":1139},"\n",{"type":559,"tag":591,"props":1141,"children":1143},{"class":593,"line":1142},18,[1144,1149,1153,1157,1162,1166,1170],{"type":559,"tag":591,"props":1145,"children":1146},{"style":880},[1147],{"type":564,"value":1148},"  while",{"type":559,"tag":591,"props":1150,"children":1151},{"style":874},[1152],{"type":564,"value":1007},{"type":559,"tag":591,"props":1154,"children":1155},{"style":902},[1156],{"type":564,"value":1012},{"type":559,"tag":591,"props":1158,"children":1159},{"style":983},[1160],{"type":564,"value":1161}," ||",{"type":559,"tag":591,"props":1163,"children":1164},{"style":902},[1165],{"type":564,"value":1022},{"type":559,"tag":591,"props":1167,"children":1168},{"style":874},[1169],{"type":564,"value":1027},{"type":559,"tag":591,"props":1171,"children":1172},{"style":874},[1173],{"type":564,"value":1032},{"type":559,"tag":591,"props":1175,"children":1177},{"class":593,"line":1176},19,[1178,1183,1188,1192,1197,1202,1206,1211,1216,1221,1225],{"type":559,"tag":591,"props":1179,"children":1180},{"style":983},[1181],{"type":564,"value":1182},"    const",{"type":559,"tag":591,"props":1184,"children":1185},{"style":902},[1186],{"type":564,"value":1187}," n1",{"type":559,"tag":591,"props":1189,"children":1190},{"style":874},[1191],{"type":564,"value":997},{"type":559,"tag":591,"props":1193,"children":1194},{"style":902},[1195],{"type":564,"value":1196}," l1",{"type":559,"tag":591,"props":1198,"children":1199},{"style":983},[1200],{"type":564,"value":1201}," ?",{"type":559,"tag":591,"props":1203,"children":1204},{"style":902},[1205],{"type":564,"value":1196},{"type":559,"tag":591,"props":1207,"children":1208},{"style":874},[1209],{"type":564,"value":1210},".",{"type":559,"tag":591,"props":1212,"children":1213},{"style":902},[1214],{"type":564,"value":1215},"val",{"type":559,"tag":591,"props":1217,"children":1218},{"style":983},[1219],{"type":564,"value":1220}," :",{"type":559,"tag":591,"props":1222,"children":1223},{"style":1068},[1224],{"type":564,"value":1125},{"type":559,"tag":591,"props":1226,"children":1227},{"style":874},[1228],{"type":564,"value":1103},{"type":559,"tag":591,"props":1230,"children":1232},{"class":593,"line":1231},20,[1233,1237,1242,1246,1250,1254,1258,1262,1266,1270,1274],{"type":559,"tag":591,"props":1234,"children":1235},{"style":983},[1236],{"type":564,"value":1182},{"type":559,"tag":591,"props":1238,"children":1239},{"style":902},[1240],{"type":564,"value":1241}," n2",{"type":559,"tag":591,"props":1243,"children":1244},{"style":874},[1245],{"type":564,"value":997},{"type":559,"tag":591,"props":1247,"children":1248},{"style":902},[1249],{"type":564,"value":1022},{"type":559,"tag":591,"props":1251,"children":1252},{"style":983},[1253],{"type":564,"value":1201},{"type":559,"tag":591,"props":1255,"children":1256},{"style":902},[1257],{"type":564,"value":1022},{"type":559,"tag":591,"props":1259,"children":1260},{"style":874},[1261],{"type":564,"value":1210},{"type":559,"tag":591,"props":1263,"children":1264},{"style":902},[1265],{"type":564,"value":1215},{"type":559,"tag":591,"props":1267,"children":1268},{"style":983},[1269],{"type":564,"value":1220},{"type":559,"tag":591,"props":1271,"children":1272},{"style":1068},[1273],{"type":564,"value":1125},{"type":559,"tag":591,"props":1275,"children":1276},{"style":874},[1277],{"type":564,"value":1103},{"type":559,"tag":591,"props":1279,"children":1281},{"class":593,"line":1280},21,[1282,1286,1291,1295,1299,1304,1308,1312,1316],{"type":559,"tag":591,"props":1283,"children":1284},{"style":983},[1285],{"type":564,"value":1182},{"type":559,"tag":591,"props":1287,"children":1288},{"style":902},[1289],{"type":564,"value":1290}," sum",{"type":559,"tag":591,"props":1292,"children":1293},{"style":874},[1294],{"type":564,"value":997},{"type":559,"tag":591,"props":1296,"children":1297},{"style":902},[1298],{"type":564,"value":1187},{"type":559,"tag":591,"props":1300,"children":1301},{"style":983},[1302],{"type":564,"value":1303}," +",{"type":559,"tag":591,"props":1305,"children":1306},{"style":902},[1307],{"type":564,"value":1241},{"type":559,"tag":591,"props":1309,"children":1310},{"style":983},[1311],{"type":564,"value":1303},{"type":559,"tag":591,"props":1313,"children":1314},{"style":902},[1315],{"type":564,"value":1116},{"type":559,"tag":591,"props":1317,"children":1318},{"style":874},[1319],{"type":564,"value":1103},{"type":559,"tag":591,"props":1321,"children":1323},{"class":593,"line":1322},22,[1324,1329,1333,1338,1342,1347,1352,1357],{"type":559,"tag":591,"props":1325,"children":1326},{"style":902},[1327],{"type":564,"value":1328},"    curry",{"type":559,"tag":591,"props":1330,"children":1331},{"style":874},[1332],{"type":564,"value":997},{"type":559,"tag":591,"props":1334,"children":1335},{"style":989},[1336],{"type":564,"value":1337}," parseInt",{"type":559,"tag":591,"props":1339,"children":1340},{"style":874},[1341],{"type":564,"value":1065},{"type":559,"tag":591,"props":1343,"children":1344},{"style":902},[1345],{"type":564,"value":1346},"sum",{"type":559,"tag":591,"props":1348,"children":1349},{"style":983},[1350],{"type":564,"value":1351}," /",{"type":559,"tag":591,"props":1353,"children":1354},{"style":1068},[1355],{"type":564,"value":1356}," 10",{"type":559,"tag":591,"props":1358,"children":1359},{"style":874},[1360],{"type":564,"value":1076},{"type":559,"tag":591,"props":1362,"children":1364},{"class":593,"line":1363},23,[1365,1370,1374,1379,1383,1387,1391,1395,1399,1404,1408],{"type":559,"tag":591,"props":1366,"children":1367},{"style":902},[1368],{"type":564,"value":1369},"    current",{"type":559,"tag":591,"props":1371,"children":1372},{"style":874},[1373],{"type":564,"value":1210},{"type":559,"tag":591,"props":1375,"children":1376},{"style":902},[1377],{"type":564,"value":1378},"next",{"type":559,"tag":591,"props":1380,"children":1381},{"style":874},[1382],{"type":564,"value":997},{"type":559,"tag":591,"props":1384,"children":1385},{"style":983},[1386],{"type":564,"value":1055},{"type":559,"tag":591,"props":1388,"children":1389},{"style":989},[1390],{"type":564,"value":1060},{"type":559,"tag":591,"props":1392,"children":1393},{"style":874},[1394],{"type":564,"value":1065},{"type":559,"tag":591,"props":1396,"children":1397},{"style":902},[1398],{"type":564,"value":1346},{"type":559,"tag":591,"props":1400,"children":1401},{"style":983},[1402],{"type":564,"value":1403}," %",{"type":559,"tag":591,"props":1405,"children":1406},{"style":1068},[1407],{"type":564,"value":1356},{"type":559,"tag":591,"props":1409,"children":1410},{"style":874},[1411],{"type":564,"value":1076},{"type":559,"tag":591,"props":1413,"children":1415},{"class":593,"line":1414},24,[1416,1420,1424,1428,1432,1436],{"type":559,"tag":591,"props":1417,"children":1418},{"style":902},[1419],{"type":564,"value":1369},{"type":559,"tag":591,"props":1421,"children":1422},{"style":874},[1423],{"type":564,"value":997},{"type":559,"tag":591,"props":1425,"children":1426},{"style":902},[1427],{"type":564,"value":1090},{"type":559,"tag":591,"props":1429,"children":1430},{"style":874},[1431],{"type":564,"value":1210},{"type":559,"tag":591,"props":1433,"children":1434},{"style":902},[1435],{"type":564,"value":1378},{"type":559,"tag":591,"props":1437,"children":1438},{"style":874},[1439],{"type":564,"value":1103},{"type":559,"tag":591,"props":1441,"children":1443},{"class":593,"line":1442},25,[1444],{"type":559,"tag":591,"props":1445,"children":1446},{"emptyLinePlaceholder":1136},[1447],{"type":564,"value":1139},{"type":559,"tag":591,"props":1449,"children":1451},{"class":593,"line":1450},26,[1452,1457,1461,1465,1469],{"type":559,"tag":591,"props":1453,"children":1454},{"style":880},[1455],{"type":564,"value":1456},"    if",{"type":559,"tag":591,"props":1458,"children":1459},{"style":874},[1460],{"type":564,"value":1007},{"type":559,"tag":591,"props":1462,"children":1463},{"style":902},[1464],{"type":564,"value":1012},{"type":559,"tag":591,"props":1466,"children":1467},{"style":874},[1468],{"type":564,"value":1027},{"type":559,"tag":591,"props":1470,"children":1471},{"style":874},[1472],{"type":564,"value":1032},{"type":559,"tag":591,"props":1474,"children":1476},{"class":593,"line":1475},27,[1477,1482,1486,1490,1494,1498],{"type":559,"tag":591,"props":1478,"children":1479},{"style":902},[1480],{"type":564,"value":1481},"      l1",{"type":559,"tag":591,"props":1483,"children":1484},{"style":874},[1485],{"type":564,"value":997},{"type":559,"tag":591,"props":1487,"children":1488},{"style":902},[1489],{"type":564,"value":1196},{"type":559,"tag":591,"props":1491,"children":1492},{"style":874},[1493],{"type":564,"value":1210},{"type":559,"tag":591,"props":1495,"children":1496},{"style":902},[1497],{"type":564,"value":1378},{"type":559,"tag":591,"props":1499,"children":1500},{"style":874},[1501],{"type":564,"value":1103},{"type":559,"tag":591,"props":1503,"children":1505},{"class":593,"line":1504},28,[1506],{"type":559,"tag":591,"props":1507,"children":1508},{"style":874},[1509],{"type":564,"value":1510},"    }\n",{"type":559,"tag":591,"props":1512,"children":1514},{"class":593,"line":1513},29,[1515,1519,1523,1528,1532],{"type":559,"tag":591,"props":1516,"children":1517},{"style":880},[1518],{"type":564,"value":1456},{"type":559,"tag":591,"props":1520,"children":1521},{"style":874},[1522],{"type":564,"value":1007},{"type":559,"tag":591,"props":1524,"children":1525},{"style":902},[1526],{"type":564,"value":1527},"l2",{"type":559,"tag":591,"props":1529,"children":1530},{"style":874},[1531],{"type":564,"value":1027},{"type":559,"tag":591,"props":1533,"children":1534},{"style":874},[1535],{"type":564,"value":1032},{"type":559,"tag":591,"props":1537,"children":1539},{"class":593,"line":1538},30,[1540,1545,1549,1553,1557,1561],{"type":559,"tag":591,"props":1541,"children":1542},{"style":902},[1543],{"type":564,"value":1544},"      l2",{"type":559,"tag":591,"props":1546,"children":1547},{"style":874},[1548],{"type":564,"value":997},{"type":559,"tag":591,"props":1550,"children":1551},{"style":902},[1552],{"type":564,"value":1022},{"type":559,"tag":591,"props":1554,"children":1555},{"style":874},[1556],{"type":564,"value":1210},{"type":559,"tag":591,"props":1558,"children":1559},{"style":902},[1560],{"type":564,"value":1378},{"type":559,"tag":591,"props":1562,"children":1563},{"style":874},[1564],{"type":564,"value":1103},{"type":559,"tag":591,"props":1566,"children":1568},{"class":593,"line":1567},31,[1569],{"type":559,"tag":591,"props":1570,"children":1571},{"style":874},[1572],{"type":564,"value":1510},{"type":559,"tag":591,"props":1574,"children":1576},{"class":593,"line":1575},32,[1577],{"type":559,"tag":591,"props":1578,"children":1579},{"style":874},[1580],{"type":564,"value":1581},"  }\n",{"type":559,"tag":591,"props":1583,"children":1585},{"class":593,"line":1584},33,[1586],{"type":559,"tag":591,"props":1587,"children":1588},{"emptyLinePlaceholder":1136},[1589],{"type":564,"value":1139},{"type":559,"tag":591,"props":1591,"children":1593},{"class":593,"line":1592},34,[1594,1599,1603,1608,1613,1617,1621],{"type":559,"tag":591,"props":1595,"children":1596},{"style":880},[1597],{"type":564,"value":1598},"  if",{"type":559,"tag":591,"props":1600,"children":1601},{"style":874},[1602],{"type":564,"value":1007},{"type":559,"tag":591,"props":1604,"children":1605},{"style":902},[1606],{"type":564,"value":1607},"curry",{"type":559,"tag":591,"props":1609,"children":1610},{"style":874},[1611],{"type":564,"value":1612}," >",{"type":559,"tag":591,"props":1614,"children":1615},{"style":1068},[1616],{"type":564,"value":1125},{"type":559,"tag":591,"props":1618,"children":1619},{"style":874},[1620],{"type":564,"value":1027},{"type":559,"tag":591,"props":1622,"children":1623},{"style":874},[1624],{"type":564,"value":1032},{"type":559,"tag":591,"props":1626,"children":1628},{"class":593,"line":1627},35,[1629,1633,1637,1641,1645,1649,1653,1657,1661],{"type":559,"tag":591,"props":1630,"children":1631},{"style":902},[1632],{"type":564,"value":1369},{"type":559,"tag":591,"props":1634,"children":1635},{"style":874},[1636],{"type":564,"value":1210},{"type":559,"tag":591,"props":1638,"children":1639},{"style":902},[1640],{"type":564,"value":1378},{"type":559,"tag":591,"props":1642,"children":1643},{"style":874},[1644],{"type":564,"value":997},{"type":559,"tag":591,"props":1646,"children":1647},{"style":983},[1648],{"type":564,"value":1055},{"type":559,"tag":591,"props":1650,"children":1651},{"style":989},[1652],{"type":564,"value":1060},{"type":559,"tag":591,"props":1654,"children":1655},{"style":874},[1656],{"type":564,"value":1065},{"type":559,"tag":591,"props":1658,"children":1659},{"style":902},[1660],{"type":564,"value":1607},{"type":559,"tag":591,"props":1662,"children":1663},{"style":874},[1664],{"type":564,"value":1076},{"type":559,"tag":591,"props":1666,"children":1668},{"class":593,"line":1667},36,[1669],{"type":559,"tag":591,"props":1670,"children":1671},{"style":874},[1672],{"type":564,"value":1581},{"type":559,"tag":591,"props":1674,"children":1676},{"class":593,"line":1675},37,[1677,1682,1686,1690,1694],{"type":559,"tag":591,"props":1678,"children":1679},{"style":880},[1680],{"type":564,"value":1681},"  return",{"type":559,"tag":591,"props":1683,"children":1684},{"style":902},[1685],{"type":564,"value":1046},{"type":559,"tag":591,"props":1687,"children":1688},{"style":874},[1689],{"type":564,"value":1210},{"type":559,"tag":591,"props":1691,"children":1692},{"style":902},[1693],{"type":564,"value":1378},{"type":559,"tag":591,"props":1695,"children":1696},{"style":874},[1697],{"type":564,"value":1103},{"type":559,"tag":591,"props":1699,"children":1701},{"class":593,"line":1700},38,[1702],{"type":559,"tag":591,"props":1703,"children":1704},{"style":874},[1705],{"type":564,"value":1706},"};\n",{"type":559,"tag":1708,"props":1709,"children":1710},"style",{},[1711],{"type":564,"value":1712},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":830,"depth":830,"links":1714},[1715,1716],{"id":703,"depth":603,"text":703},{"id":727,"depth":603,"text":727,"children":1717},[1718,1719],{"id":777,"depth":612,"text":777},{"id":782,"depth":612,"text":782},"markdown","content:1.algorithm:3.leetcode:3.major:2.add-two-numbers.md","content","1.algorithm/3.leetcode/3.major/2.add-two-numbers.md","md",[1726,1728],{"_path":60,"title":59,"description":1727},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":66,"title":65,"description":1729},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1715007647204]