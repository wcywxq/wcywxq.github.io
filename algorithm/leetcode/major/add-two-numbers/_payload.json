[{"data":1,"prerenderedAt":1740},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-two-numbers":559,"/algorithm/leetcode/major/add-two-numbers-surround":1735},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":63,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":62,"description":563,"url":564,"body":565,"_type":1730,"_id":1731,"_source":1732,"_file":1733,"_extension":1734},"major",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":566,"children":567,"toc":1723},"root",[568,575,580,585,590,629,634,657,662,685,690,710,716,735,740,784,790,795,1717],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":569,"tag":570,"props":586,"children":587},{},[588],{"type":574,"value":589},"示例 1：",{"type":569,"tag":591,"props":592,"children":595},"pre",{"className":593,"code":594,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[596],{"type":569,"tag":597,"props":598,"children":599},"code",{"__ignoreMap":562},[600,611,620],{"type":569,"tag":601,"props":602,"children":605},"span",{"class":603,"line":604},"line",1,[606],{"type":569,"tag":601,"props":607,"children":608},{},[609],{"type":574,"value":610},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":569,"tag":601,"props":612,"children":614},{"class":603,"line":613},2,[615],{"type":569,"tag":601,"props":616,"children":617},{},[618],{"type":574,"value":619},"输出：[7,0,8]\n",{"type":569,"tag":601,"props":621,"children":623},{"class":603,"line":622},3,[624],{"type":569,"tag":601,"props":625,"children":626},{},[627],{"type":574,"value":628},"解释：342 + 465 = 807.\n",{"type":569,"tag":570,"props":630,"children":631},{},[632],{"type":574,"value":633},"示例 2：",{"type":569,"tag":591,"props":635,"children":637},{"className":593,"code":636,"language":574,"meta":562,"style":562},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[638],{"type":569,"tag":597,"props":639,"children":640},{"__ignoreMap":562},[641,649],{"type":569,"tag":601,"props":642,"children":643},{"class":603,"line":604},[644],{"type":569,"tag":601,"props":645,"children":646},{},[647],{"type":574,"value":648},"输入：l1 = [0], l2 = [0]\n",{"type":569,"tag":601,"props":650,"children":651},{"class":603,"line":613},[652],{"type":569,"tag":601,"props":653,"children":654},{},[655],{"type":574,"value":656},"输出：[0]\n",{"type":569,"tag":570,"props":658,"children":659},{},[660],{"type":574,"value":661},"示例 3：",{"type":569,"tag":591,"props":663,"children":665},{"className":593,"code":664,"language":574,"meta":562,"style":562},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[666],{"type":569,"tag":597,"props":667,"children":668},{"__ignoreMap":562},[669,677],{"type":569,"tag":601,"props":670,"children":671},{"class":603,"line":604},[672],{"type":569,"tag":601,"props":673,"children":674},{},[675],{"type":574,"value":676},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":569,"tag":601,"props":678,"children":679},{"class":603,"line":613},[680],{"type":569,"tag":601,"props":681,"children":682},{},[683],{"type":574,"value":684},"输出：[8,9,9,9,0,0,0,1]\n",{"type":569,"tag":570,"props":686,"children":687},{},[688],{"type":574,"value":689},"提示：",{"type":569,"tag":691,"props":692,"children":693},"ul",{},[694,700,705],{"type":569,"tag":695,"props":696,"children":697},"li",{},[698],{"type":574,"value":699},"每个链表中的节点数在范围 [1, 100] 内",{"type":569,"tag":695,"props":701,"children":702},{},[703],{"type":574,"value":704},"0 \u003C= Node.val \u003C= 9",{"type":569,"tag":695,"props":706,"children":707},{},[708],{"type":574,"value":709},"题目数据保证列表表示的数字不含前导零",{"type":569,"tag":711,"props":712,"children":714},"h2",{"id":713},"解题思路",[715],{"type":574,"value":713},{"type":569,"tag":717,"props":718,"children":719},"ol",{},[720,725,730],{"type":569,"tag":695,"props":721,"children":722},{},[723],{"type":574,"value":724},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":569,"tag":695,"props":726,"children":727},{},[728],{"type":574,"value":729},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":569,"tag":695,"props":731,"children":732},{},[733],{"type":574,"value":734},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":569,"tag":711,"props":736,"children":738},{"id":737},"图解",[739],{"type":574,"value":737},{"type":569,"tag":570,"props":741,"children":742},{},[743,749,754,759,764,769,774,779],{"type":569,"tag":744,"props":745,"children":748},"img",{"alt":746,"src":747},"figure_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_1.png",[],{"type":569,"tag":744,"props":750,"children":753},{"alt":751,"src":752},"figure_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_2.png",[],{"type":569,"tag":744,"props":755,"children":758},{"alt":756,"src":757},"figure_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_3.png",[],{"type":569,"tag":744,"props":760,"children":763},{"alt":761,"src":762},"figure_4","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_4.png",[],{"type":569,"tag":744,"props":765,"children":768},{"alt":766,"src":767},"figure_5","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_5.png",[],{"type":569,"tag":744,"props":770,"children":773},{"alt":771,"src":772},"figure_6","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_6.png",[],{"type":569,"tag":744,"props":775,"children":778},{"alt":776,"src":777},"figure_7","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_7.png",[],{"type":569,"tag":744,"props":780,"children":783},{"alt":781,"src":782},"figure_8","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_8.png",[],{"type":569,"tag":785,"props":786,"children":788},"h3",{"id":787},"实现",[789],{"type":574,"value":787},{"type":569,"tag":785,"props":791,"children":793},{"id":792},"构造哑节点",[794],{"type":574,"value":792},{"type":569,"tag":591,"props":796,"children":800},{"className":797,"code":798,"language":799,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[801],{"type":569,"tag":597,"props":802,"children":803},{"__ignoreMap":562},[804,813,821,829,838,847,856,865,873,916,949,979,987,1043,1087,1114,1140,1150,1184,1239,1288,1330,1371,1422,1450,1458,1483,1512,1521,1546,1575,1583,1592,1600,1635,1675,1683,1708],{"type":569,"tag":601,"props":805,"children":806},{"class":603,"line":604},[807],{"type":569,"tag":601,"props":808,"children":810},{"style":809},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[811],{"type":574,"value":812},"/**\n",{"type":569,"tag":601,"props":814,"children":815},{"class":603,"line":613},[816],{"type":569,"tag":601,"props":817,"children":818},{"style":809},[819],{"type":574,"value":820}," * Definition for singly-linked list.\n",{"type":569,"tag":601,"props":822,"children":823},{"class":603,"line":622},[824],{"type":569,"tag":601,"props":825,"children":826},{"style":809},[827],{"type":574,"value":828}," * function ListNode(val) {\n",{"type":569,"tag":601,"props":830,"children":832},{"class":603,"line":831},4,[833],{"type":569,"tag":601,"props":834,"children":835},{"style":809},[836],{"type":574,"value":837}," *     this.val = val;\n",{"type":569,"tag":601,"props":839,"children":841},{"class":603,"line":840},5,[842],{"type":569,"tag":601,"props":843,"children":844},{"style":809},[845],{"type":574,"value":846}," *     this.next = null;\n",{"type":569,"tag":601,"props":848,"children":850},{"class":603,"line":849},6,[851],{"type":569,"tag":601,"props":852,"children":853},{"style":809},[854],{"type":574,"value":855}," * }\n",{"type":569,"tag":601,"props":857,"children":859},{"class":603,"line":858},7,[860],{"type":569,"tag":601,"props":861,"children":862},{"style":809},[863],{"type":574,"value":864}," */\n",{"type":569,"tag":601,"props":866,"children":868},{"class":603,"line":867},8,[869],{"type":569,"tag":601,"props":870,"children":871},{"style":809},[872],{"type":574,"value":812},{"type":569,"tag":601,"props":874,"children":876},{"class":603,"line":875},9,[877,882,888,894,899,905,910],{"type":569,"tag":601,"props":878,"children":879},{"style":809},[880],{"type":574,"value":881}," * ",{"type":569,"tag":601,"props":883,"children":885},{"style":884},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[886],{"type":574,"value":887},"@",{"type":569,"tag":601,"props":889,"children":891},{"style":890},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[892],{"type":574,"value":893},"param",{"type":569,"tag":601,"props":895,"children":896},{"style":884},[897],{"type":574,"value":898}," {",{"type":569,"tag":601,"props":900,"children":902},{"style":901},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[903],{"type":574,"value":904},"ListNode",{"type":569,"tag":601,"props":906,"children":907},{"style":884},[908],{"type":574,"value":909},"}",{"type":569,"tag":601,"props":911,"children":913},{"style":912},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[914],{"type":574,"value":915}," l1\n",{"type":569,"tag":601,"props":917,"children":919},{"class":603,"line":918},10,[920,924,928,932,936,940,944],{"type":569,"tag":601,"props":921,"children":922},{"style":809},[923],{"type":574,"value":881},{"type":569,"tag":601,"props":925,"children":926},{"style":884},[927],{"type":574,"value":887},{"type":569,"tag":601,"props":929,"children":930},{"style":890},[931],{"type":574,"value":893},{"type":569,"tag":601,"props":933,"children":934},{"style":884},[935],{"type":574,"value":898},{"type":569,"tag":601,"props":937,"children":938},{"style":901},[939],{"type":574,"value":904},{"type":569,"tag":601,"props":941,"children":942},{"style":884},[943],{"type":574,"value":909},{"type":569,"tag":601,"props":945,"children":946},{"style":912},[947],{"type":574,"value":948}," l2\n",{"type":569,"tag":601,"props":950,"children":952},{"class":603,"line":951},11,[953,957,961,966,970,974],{"type":569,"tag":601,"props":954,"children":955},{"style":809},[956],{"type":574,"value":881},{"type":569,"tag":601,"props":958,"children":959},{"style":884},[960],{"type":574,"value":887},{"type":569,"tag":601,"props":962,"children":963},{"style":890},[964],{"type":574,"value":965},"return",{"type":569,"tag":601,"props":967,"children":968},{"style":884},[969],{"type":574,"value":898},{"type":569,"tag":601,"props":971,"children":972},{"style":901},[973],{"type":574,"value":904},{"type":569,"tag":601,"props":975,"children":976},{"style":884},[977],{"type":574,"value":978},"}\n",{"type":569,"tag":601,"props":980,"children":982},{"class":603,"line":981},12,[983],{"type":569,"tag":601,"props":984,"children":985},{"style":809},[986],{"type":574,"value":864},{"type":569,"tag":601,"props":988,"children":990},{"class":603,"line":989},13,[991,997,1003,1008,1013,1018,1023,1028,1033,1038],{"type":569,"tag":601,"props":992,"children":994},{"style":993},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[995],{"type":574,"value":996},"var",{"type":569,"tag":601,"props":998,"children":1000},{"style":999},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[1001],{"type":574,"value":1002}," addTwoNumbers",{"type":569,"tag":601,"props":1004,"children":1005},{"style":884},[1006],{"type":574,"value":1007}," =",{"type":569,"tag":601,"props":1009,"children":1010},{"style":993},[1011],{"type":574,"value":1012}," function",{"type":569,"tag":601,"props":1014,"children":1015},{"style":884},[1016],{"type":574,"value":1017}," (",{"type":569,"tag":601,"props":1019,"children":1020},{"style":912},[1021],{"type":574,"value":1022},"l1",{"type":569,"tag":601,"props":1024,"children":1025},{"style":884},[1026],{"type":574,"value":1027},",",{"type":569,"tag":601,"props":1029,"children":1030},{"style":912},[1031],{"type":574,"value":1032}," l2",{"type":569,"tag":601,"props":1034,"children":1035},{"style":884},[1036],{"type":574,"value":1037},")",{"type":569,"tag":601,"props":1039,"children":1040},{"style":884},[1041],{"type":574,"value":1042}," {\n",{"type":569,"tag":601,"props":1044,"children":1046},{"class":603,"line":1045},14,[1047,1052,1057,1061,1066,1071,1076,1082],{"type":569,"tag":601,"props":1048,"children":1049},{"style":993},[1050],{"type":574,"value":1051},"  const",{"type":569,"tag":601,"props":1053,"children":1054},{"style":912},[1055],{"type":574,"value":1056}," node",{"type":569,"tag":601,"props":1058,"children":1059},{"style":884},[1060],{"type":574,"value":1007},{"type":569,"tag":601,"props":1062,"children":1063},{"style":993},[1064],{"type":574,"value":1065}," new",{"type":569,"tag":601,"props":1067,"children":1068},{"style":999},[1069],{"type":574,"value":1070}," ListNode",{"type":569,"tag":601,"props":1072,"children":1073},{"style":884},[1074],{"type":574,"value":1075},"(",{"type":569,"tag":601,"props":1077,"children":1079},{"style":1078},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1080],{"type":574,"value":1081},"0",{"type":569,"tag":601,"props":1083,"children":1084},{"style":884},[1085],{"type":574,"value":1086},");\n",{"type":569,"tag":601,"props":1088,"children":1090},{"class":603,"line":1089},15,[1091,1096,1101,1105,1109],{"type":569,"tag":601,"props":1092,"children":1093},{"style":993},[1094],{"type":574,"value":1095},"  let",{"type":569,"tag":601,"props":1097,"children":1098},{"style":912},[1099],{"type":574,"value":1100}," current",{"type":569,"tag":601,"props":1102,"children":1103},{"style":884},[1104],{"type":574,"value":1007},{"type":569,"tag":601,"props":1106,"children":1107},{"style":912},[1108],{"type":574,"value":1056},{"type":569,"tag":601,"props":1110,"children":1111},{"style":884},[1112],{"type":574,"value":1113},";\n",{"type":569,"tag":601,"props":1115,"children":1117},{"class":603,"line":1116},16,[1118,1122,1127,1131,1136],{"type":569,"tag":601,"props":1119,"children":1120},{"style":993},[1121],{"type":574,"value":1095},{"type":569,"tag":601,"props":1123,"children":1124},{"style":912},[1125],{"type":574,"value":1126}," curry",{"type":569,"tag":601,"props":1128,"children":1129},{"style":884},[1130],{"type":574,"value":1007},{"type":569,"tag":601,"props":1132,"children":1133},{"style":1078},[1134],{"type":574,"value":1135}," 0",{"type":569,"tag":601,"props":1137,"children":1138},{"style":884},[1139],{"type":574,"value":1113},{"type":569,"tag":601,"props":1141,"children":1143},{"class":603,"line":1142},17,[1144],{"type":569,"tag":601,"props":1145,"children":1147},{"emptyLinePlaceholder":1146},true,[1148],{"type":574,"value":1149},"\n",{"type":569,"tag":601,"props":1151,"children":1153},{"class":603,"line":1152},18,[1154,1159,1163,1167,1172,1176,1180],{"type":569,"tag":601,"props":1155,"children":1156},{"style":890},[1157],{"type":574,"value":1158},"  while",{"type":569,"tag":601,"props":1160,"children":1161},{"style":884},[1162],{"type":574,"value":1017},{"type":569,"tag":601,"props":1164,"children":1165},{"style":912},[1166],{"type":574,"value":1022},{"type":569,"tag":601,"props":1168,"children":1169},{"style":993},[1170],{"type":574,"value":1171}," ||",{"type":569,"tag":601,"props":1173,"children":1174},{"style":912},[1175],{"type":574,"value":1032},{"type":569,"tag":601,"props":1177,"children":1178},{"style":884},[1179],{"type":574,"value":1037},{"type":569,"tag":601,"props":1181,"children":1182},{"style":884},[1183],{"type":574,"value":1042},{"type":569,"tag":601,"props":1185,"children":1187},{"class":603,"line":1186},19,[1188,1193,1198,1202,1207,1212,1216,1221,1226,1231,1235],{"type":569,"tag":601,"props":1189,"children":1190},{"style":993},[1191],{"type":574,"value":1192},"    const",{"type":569,"tag":601,"props":1194,"children":1195},{"style":912},[1196],{"type":574,"value":1197}," n1",{"type":569,"tag":601,"props":1199,"children":1200},{"style":884},[1201],{"type":574,"value":1007},{"type":569,"tag":601,"props":1203,"children":1204},{"style":912},[1205],{"type":574,"value":1206}," l1",{"type":569,"tag":601,"props":1208,"children":1209},{"style":993},[1210],{"type":574,"value":1211}," ?",{"type":569,"tag":601,"props":1213,"children":1214},{"style":912},[1215],{"type":574,"value":1206},{"type":569,"tag":601,"props":1217,"children":1218},{"style":884},[1219],{"type":574,"value":1220},".",{"type":569,"tag":601,"props":1222,"children":1223},{"style":912},[1224],{"type":574,"value":1225},"val",{"type":569,"tag":601,"props":1227,"children":1228},{"style":993},[1229],{"type":574,"value":1230}," :",{"type":569,"tag":601,"props":1232,"children":1233},{"style":1078},[1234],{"type":574,"value":1135},{"type":569,"tag":601,"props":1236,"children":1237},{"style":884},[1238],{"type":574,"value":1113},{"type":569,"tag":601,"props":1240,"children":1242},{"class":603,"line":1241},20,[1243,1247,1252,1256,1260,1264,1268,1272,1276,1280,1284],{"type":569,"tag":601,"props":1244,"children":1245},{"style":993},[1246],{"type":574,"value":1192},{"type":569,"tag":601,"props":1248,"children":1249},{"style":912},[1250],{"type":574,"value":1251}," n2",{"type":569,"tag":601,"props":1253,"children":1254},{"style":884},[1255],{"type":574,"value":1007},{"type":569,"tag":601,"props":1257,"children":1258},{"style":912},[1259],{"type":574,"value":1032},{"type":569,"tag":601,"props":1261,"children":1262},{"style":993},[1263],{"type":574,"value":1211},{"type":569,"tag":601,"props":1265,"children":1266},{"style":912},[1267],{"type":574,"value":1032},{"type":569,"tag":601,"props":1269,"children":1270},{"style":884},[1271],{"type":574,"value":1220},{"type":569,"tag":601,"props":1273,"children":1274},{"style":912},[1275],{"type":574,"value":1225},{"type":569,"tag":601,"props":1277,"children":1278},{"style":993},[1279],{"type":574,"value":1230},{"type":569,"tag":601,"props":1281,"children":1282},{"style":1078},[1283],{"type":574,"value":1135},{"type":569,"tag":601,"props":1285,"children":1286},{"style":884},[1287],{"type":574,"value":1113},{"type":569,"tag":601,"props":1289,"children":1291},{"class":603,"line":1290},21,[1292,1296,1301,1305,1309,1314,1318,1322,1326],{"type":569,"tag":601,"props":1293,"children":1294},{"style":993},[1295],{"type":574,"value":1192},{"type":569,"tag":601,"props":1297,"children":1298},{"style":912},[1299],{"type":574,"value":1300}," sum",{"type":569,"tag":601,"props":1302,"children":1303},{"style":884},[1304],{"type":574,"value":1007},{"type":569,"tag":601,"props":1306,"children":1307},{"style":912},[1308],{"type":574,"value":1197},{"type":569,"tag":601,"props":1310,"children":1311},{"style":993},[1312],{"type":574,"value":1313}," +",{"type":569,"tag":601,"props":1315,"children":1316},{"style":912},[1317],{"type":574,"value":1251},{"type":569,"tag":601,"props":1319,"children":1320},{"style":993},[1321],{"type":574,"value":1313},{"type":569,"tag":601,"props":1323,"children":1324},{"style":912},[1325],{"type":574,"value":1126},{"type":569,"tag":601,"props":1327,"children":1328},{"style":884},[1329],{"type":574,"value":1113},{"type":569,"tag":601,"props":1331,"children":1333},{"class":603,"line":1332},22,[1334,1339,1343,1348,1352,1357,1362,1367],{"type":569,"tag":601,"props":1335,"children":1336},{"style":912},[1337],{"type":574,"value":1338},"    curry",{"type":569,"tag":601,"props":1340,"children":1341},{"style":884},[1342],{"type":574,"value":1007},{"type":569,"tag":601,"props":1344,"children":1345},{"style":999},[1346],{"type":574,"value":1347}," parseInt",{"type":569,"tag":601,"props":1349,"children":1350},{"style":884},[1351],{"type":574,"value":1075},{"type":569,"tag":601,"props":1353,"children":1354},{"style":912},[1355],{"type":574,"value":1356},"sum",{"type":569,"tag":601,"props":1358,"children":1359},{"style":993},[1360],{"type":574,"value":1361}," /",{"type":569,"tag":601,"props":1363,"children":1364},{"style":1078},[1365],{"type":574,"value":1366}," 10",{"type":569,"tag":601,"props":1368,"children":1369},{"style":884},[1370],{"type":574,"value":1086},{"type":569,"tag":601,"props":1372,"children":1374},{"class":603,"line":1373},23,[1375,1380,1384,1389,1393,1397,1401,1405,1409,1414,1418],{"type":569,"tag":601,"props":1376,"children":1377},{"style":912},[1378],{"type":574,"value":1379},"    current",{"type":569,"tag":601,"props":1381,"children":1382},{"style":884},[1383],{"type":574,"value":1220},{"type":569,"tag":601,"props":1385,"children":1386},{"style":912},[1387],{"type":574,"value":1388},"next",{"type":569,"tag":601,"props":1390,"children":1391},{"style":884},[1392],{"type":574,"value":1007},{"type":569,"tag":601,"props":1394,"children":1395},{"style":993},[1396],{"type":574,"value":1065},{"type":569,"tag":601,"props":1398,"children":1399},{"style":999},[1400],{"type":574,"value":1070},{"type":569,"tag":601,"props":1402,"children":1403},{"style":884},[1404],{"type":574,"value":1075},{"type":569,"tag":601,"props":1406,"children":1407},{"style":912},[1408],{"type":574,"value":1356},{"type":569,"tag":601,"props":1410,"children":1411},{"style":993},[1412],{"type":574,"value":1413}," %",{"type":569,"tag":601,"props":1415,"children":1416},{"style":1078},[1417],{"type":574,"value":1366},{"type":569,"tag":601,"props":1419,"children":1420},{"style":884},[1421],{"type":574,"value":1086},{"type":569,"tag":601,"props":1423,"children":1425},{"class":603,"line":1424},24,[1426,1430,1434,1438,1442,1446],{"type":569,"tag":601,"props":1427,"children":1428},{"style":912},[1429],{"type":574,"value":1379},{"type":569,"tag":601,"props":1431,"children":1432},{"style":884},[1433],{"type":574,"value":1007},{"type":569,"tag":601,"props":1435,"children":1436},{"style":912},[1437],{"type":574,"value":1100},{"type":569,"tag":601,"props":1439,"children":1440},{"style":884},[1441],{"type":574,"value":1220},{"type":569,"tag":601,"props":1443,"children":1444},{"style":912},[1445],{"type":574,"value":1388},{"type":569,"tag":601,"props":1447,"children":1448},{"style":884},[1449],{"type":574,"value":1113},{"type":569,"tag":601,"props":1451,"children":1453},{"class":603,"line":1452},25,[1454],{"type":569,"tag":601,"props":1455,"children":1456},{"emptyLinePlaceholder":1146},[1457],{"type":574,"value":1149},{"type":569,"tag":601,"props":1459,"children":1461},{"class":603,"line":1460},26,[1462,1467,1471,1475,1479],{"type":569,"tag":601,"props":1463,"children":1464},{"style":890},[1465],{"type":574,"value":1466},"    if",{"type":569,"tag":601,"props":1468,"children":1469},{"style":884},[1470],{"type":574,"value":1017},{"type":569,"tag":601,"props":1472,"children":1473},{"style":912},[1474],{"type":574,"value":1022},{"type":569,"tag":601,"props":1476,"children":1477},{"style":884},[1478],{"type":574,"value":1037},{"type":569,"tag":601,"props":1480,"children":1481},{"style":884},[1482],{"type":574,"value":1042},{"type":569,"tag":601,"props":1484,"children":1486},{"class":603,"line":1485},27,[1487,1492,1496,1500,1504,1508],{"type":569,"tag":601,"props":1488,"children":1489},{"style":912},[1490],{"type":574,"value":1491},"      l1",{"type":569,"tag":601,"props":1493,"children":1494},{"style":884},[1495],{"type":574,"value":1007},{"type":569,"tag":601,"props":1497,"children":1498},{"style":912},[1499],{"type":574,"value":1206},{"type":569,"tag":601,"props":1501,"children":1502},{"style":884},[1503],{"type":574,"value":1220},{"type":569,"tag":601,"props":1505,"children":1506},{"style":912},[1507],{"type":574,"value":1388},{"type":569,"tag":601,"props":1509,"children":1510},{"style":884},[1511],{"type":574,"value":1113},{"type":569,"tag":601,"props":1513,"children":1515},{"class":603,"line":1514},28,[1516],{"type":569,"tag":601,"props":1517,"children":1518},{"style":884},[1519],{"type":574,"value":1520},"    }\n",{"type":569,"tag":601,"props":1522,"children":1524},{"class":603,"line":1523},29,[1525,1529,1533,1538,1542],{"type":569,"tag":601,"props":1526,"children":1527},{"style":890},[1528],{"type":574,"value":1466},{"type":569,"tag":601,"props":1530,"children":1531},{"style":884},[1532],{"type":574,"value":1017},{"type":569,"tag":601,"props":1534,"children":1535},{"style":912},[1536],{"type":574,"value":1537},"l2",{"type":569,"tag":601,"props":1539,"children":1540},{"style":884},[1541],{"type":574,"value":1037},{"type":569,"tag":601,"props":1543,"children":1544},{"style":884},[1545],{"type":574,"value":1042},{"type":569,"tag":601,"props":1547,"children":1549},{"class":603,"line":1548},30,[1550,1555,1559,1563,1567,1571],{"type":569,"tag":601,"props":1551,"children":1552},{"style":912},[1553],{"type":574,"value":1554},"      l2",{"type":569,"tag":601,"props":1556,"children":1557},{"style":884},[1558],{"type":574,"value":1007},{"type":569,"tag":601,"props":1560,"children":1561},{"style":912},[1562],{"type":574,"value":1032},{"type":569,"tag":601,"props":1564,"children":1565},{"style":884},[1566],{"type":574,"value":1220},{"type":569,"tag":601,"props":1568,"children":1569},{"style":912},[1570],{"type":574,"value":1388},{"type":569,"tag":601,"props":1572,"children":1573},{"style":884},[1574],{"type":574,"value":1113},{"type":569,"tag":601,"props":1576,"children":1578},{"class":603,"line":1577},31,[1579],{"type":569,"tag":601,"props":1580,"children":1581},{"style":884},[1582],{"type":574,"value":1520},{"type":569,"tag":601,"props":1584,"children":1586},{"class":603,"line":1585},32,[1587],{"type":569,"tag":601,"props":1588,"children":1589},{"style":884},[1590],{"type":574,"value":1591},"  }\n",{"type":569,"tag":601,"props":1593,"children":1595},{"class":603,"line":1594},33,[1596],{"type":569,"tag":601,"props":1597,"children":1598},{"emptyLinePlaceholder":1146},[1599],{"type":574,"value":1149},{"type":569,"tag":601,"props":1601,"children":1603},{"class":603,"line":1602},34,[1604,1609,1613,1618,1623,1627,1631],{"type":569,"tag":601,"props":1605,"children":1606},{"style":890},[1607],{"type":574,"value":1608},"  if",{"type":569,"tag":601,"props":1610,"children":1611},{"style":884},[1612],{"type":574,"value":1017},{"type":569,"tag":601,"props":1614,"children":1615},{"style":912},[1616],{"type":574,"value":1617},"curry",{"type":569,"tag":601,"props":1619,"children":1620},{"style":884},[1621],{"type":574,"value":1622}," >",{"type":569,"tag":601,"props":1624,"children":1625},{"style":1078},[1626],{"type":574,"value":1135},{"type":569,"tag":601,"props":1628,"children":1629},{"style":884},[1630],{"type":574,"value":1037},{"type":569,"tag":601,"props":1632,"children":1633},{"style":884},[1634],{"type":574,"value":1042},{"type":569,"tag":601,"props":1636,"children":1638},{"class":603,"line":1637},35,[1639,1643,1647,1651,1655,1659,1663,1667,1671],{"type":569,"tag":601,"props":1640,"children":1641},{"style":912},[1642],{"type":574,"value":1379},{"type":569,"tag":601,"props":1644,"children":1645},{"style":884},[1646],{"type":574,"value":1220},{"type":569,"tag":601,"props":1648,"children":1649},{"style":912},[1650],{"type":574,"value":1388},{"type":569,"tag":601,"props":1652,"children":1653},{"style":884},[1654],{"type":574,"value":1007},{"type":569,"tag":601,"props":1656,"children":1657},{"style":993},[1658],{"type":574,"value":1065},{"type":569,"tag":601,"props":1660,"children":1661},{"style":999},[1662],{"type":574,"value":1070},{"type":569,"tag":601,"props":1664,"children":1665},{"style":884},[1666],{"type":574,"value":1075},{"type":569,"tag":601,"props":1668,"children":1669},{"style":912},[1670],{"type":574,"value":1617},{"type":569,"tag":601,"props":1672,"children":1673},{"style":884},[1674],{"type":574,"value":1086},{"type":569,"tag":601,"props":1676,"children":1678},{"class":603,"line":1677},36,[1679],{"type":569,"tag":601,"props":1680,"children":1681},{"style":884},[1682],{"type":574,"value":1591},{"type":569,"tag":601,"props":1684,"children":1686},{"class":603,"line":1685},37,[1687,1692,1696,1700,1704],{"type":569,"tag":601,"props":1688,"children":1689},{"style":890},[1690],{"type":574,"value":1691},"  return",{"type":569,"tag":601,"props":1693,"children":1694},{"style":912},[1695],{"type":574,"value":1056},{"type":569,"tag":601,"props":1697,"children":1698},{"style":884},[1699],{"type":574,"value":1220},{"type":569,"tag":601,"props":1701,"children":1702},{"style":912},[1703],{"type":574,"value":1388},{"type":569,"tag":601,"props":1705,"children":1706},{"style":884},[1707],{"type":574,"value":1113},{"type":569,"tag":601,"props":1709,"children":1711},{"class":603,"line":1710},38,[1712],{"type":569,"tag":601,"props":1713,"children":1714},{"style":884},[1715],{"type":574,"value":1716},"};\n",{"type":569,"tag":1718,"props":1719,"children":1720},"style",{},[1721],{"type":574,"value":1722},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":840,"depth":840,"links":1724},[1725,1726],{"id":713,"depth":613,"text":713},{"id":737,"depth":613,"text":737,"children":1727},[1728,1729],{"id":787,"depth":622,"text":787},{"id":792,"depth":622,"text":792},"markdown","content:1.algorithm:3.leetcode:3.major:2.add-two-numbers.md","content","1.algorithm/3.leetcode/3.major/2.add-two-numbers.md","md",[1736,1738],{"_path":60,"title":59,"description":1737},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":66,"title":65,"description":1739},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1717734300742]