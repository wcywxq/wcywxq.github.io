[{"data":1,"prerenderedAt":1724},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/add-two-numbers":543,"/algorithm/leetcode/major/add-two-numbers-surround":1719},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":63,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":62,"description":547,"url":548,"body":549,"_type":1714,"_id":1715,"_source":1716,"_file":1717,"_extension":1718},"major",false,"","给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。","https://leetcode.cn/problems/add-two-numbers",{"type":550,"children":551,"toc":1707},"root",[552,559,564,569,574,613,618,641,646,669,674,694,700,719,724,768,774,779,1701],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"请你将两个数相加，并以相同形式返回一个表示和的链表。",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"你可以假设除了数字 0 之外，这两个数都不会以 0 开头。",{"type":553,"tag":554,"props":570,"children":571},{},[572],{"type":558,"value":573},"示例 1：",{"type":553,"tag":575,"props":576,"children":579},"pre",{"className":577,"code":578,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：l1 = [2,4,3], l2 = [5,6,4]\n输出：[7,0,8]\n解释：342 + 465 = 807.\n",[580],{"type":553,"tag":581,"props":582,"children":583},"code",{"__ignoreMap":546},[584,595,604],{"type":553,"tag":585,"props":586,"children":589},"span",{"class":587,"line":588},"line",1,[590],{"type":553,"tag":585,"props":591,"children":592},{},[593],{"type":558,"value":594},"输入：l1 = [2,4,3], l2 = [5,6,4]\n",{"type":553,"tag":585,"props":596,"children":598},{"class":587,"line":597},2,[599],{"type":553,"tag":585,"props":600,"children":601},{},[602],{"type":558,"value":603},"输出：[7,0,8]\n",{"type":553,"tag":585,"props":605,"children":607},{"class":587,"line":606},3,[608],{"type":553,"tag":585,"props":609,"children":610},{},[611],{"type":558,"value":612},"解释：342 + 465 = 807.\n",{"type":553,"tag":554,"props":614,"children":615},{},[616],{"type":558,"value":617},"示例 2：",{"type":553,"tag":575,"props":619,"children":621},{"className":577,"code":620,"language":558,"meta":546,"style":546},"输入：l1 = [0], l2 = [0]\n输出：[0]\n",[622],{"type":553,"tag":581,"props":623,"children":624},{"__ignoreMap":546},[625,633],{"type":553,"tag":585,"props":626,"children":627},{"class":587,"line":588},[628],{"type":553,"tag":585,"props":629,"children":630},{},[631],{"type":558,"value":632},"输入：l1 = [0], l2 = [0]\n",{"type":553,"tag":585,"props":634,"children":635},{"class":587,"line":597},[636],{"type":553,"tag":585,"props":637,"children":638},{},[639],{"type":558,"value":640},"输出：[0]\n",{"type":553,"tag":554,"props":642,"children":643},{},[644],{"type":558,"value":645},"示例 3：",{"type":553,"tag":575,"props":647,"children":649},{"className":577,"code":648,"language":558,"meta":546,"style":546},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n输出：[8,9,9,9,0,0,0,1]\n",[650],{"type":553,"tag":581,"props":651,"children":652},{"__ignoreMap":546},[653,661],{"type":553,"tag":585,"props":654,"children":655},{"class":587,"line":588},[656],{"type":553,"tag":585,"props":657,"children":658},{},[659],{"type":558,"value":660},"输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n",{"type":553,"tag":585,"props":662,"children":663},{"class":587,"line":597},[664],{"type":553,"tag":585,"props":665,"children":666},{},[667],{"type":558,"value":668},"输出：[8,9,9,9,0,0,0,1]\n",{"type":553,"tag":554,"props":670,"children":671},{},[672],{"type":558,"value":673},"提示：",{"type":553,"tag":675,"props":676,"children":677},"ul",{},[678,684,689],{"type":553,"tag":679,"props":680,"children":681},"li",{},[682],{"type":558,"value":683},"每个链表中的节点数在范围 [1, 100] 内",{"type":553,"tag":679,"props":685,"children":686},{},[687],{"type":558,"value":688},"0 \u003C= Node.val \u003C= 9",{"type":553,"tag":679,"props":690,"children":691},{},[692],{"type":558,"value":693},"题目数据保证列表表示的数字不含前导零",{"type":553,"tag":695,"props":696,"children":698},"h2",{"id":697},"解题思路",[699],{"type":558,"value":697},{"type":553,"tag":701,"props":702,"children":703},"ol",{},[704,709,714],{"type":553,"tag":679,"props":705,"children":706},{},[707],{"type":558,"value":708},"将两个链表看作相同长度进行遍历，如果某个链表较短则在前方补 0",{"type":553,"tag":679,"props":710,"children":711},{},[712],{"type":558,"value":713},"因为每个节点只能存放一位数字，因此要考虑进位，计算结束后要更新进位值",{"type":553,"tag":679,"props":715,"children":716},{},[717],{"type":558,"value":718},"若两个链表全部遍历完成之后，进位位 1，则在新构建的链表最前方添加节点 1",{"type":553,"tag":695,"props":720,"children":722},{"id":721},"图解",[723],{"type":558,"value":721},{"type":553,"tag":554,"props":725,"children":726},{},[727,733,738,743,748,753,758,763],{"type":553,"tag":728,"props":729,"children":732},"img",{"alt":730,"src":731},"figure_1","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_1.png",[],{"type":553,"tag":728,"props":734,"children":737},{"alt":735,"src":736},"figure_2","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_2.png",[],{"type":553,"tag":728,"props":739,"children":742},{"alt":740,"src":741},"figure_3","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_3.png",[],{"type":553,"tag":728,"props":744,"children":747},{"alt":745,"src":746},"figure_4","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_4.png",[],{"type":553,"tag":728,"props":749,"children":752},{"alt":750,"src":751},"figure_5","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_5.png",[],{"type":553,"tag":728,"props":754,"children":757},{"alt":755,"src":756},"figure_6","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_6.png",[],{"type":553,"tag":728,"props":759,"children":762},{"alt":760,"src":761},"figure_7","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_7.png",[],{"type":553,"tag":728,"props":764,"children":767},{"alt":765,"src":766},"figure_8","https://raw.githubusercontent.com/wcywxq/image-store/master/ssg/code_leetcode_No.2_figure_8.png",[],{"type":553,"tag":769,"props":770,"children":772},"h3",{"id":771},"实现",[773],{"type":558,"value":771},{"type":553,"tag":769,"props":775,"children":777},{"id":776},"构造哑节点",[778],{"type":558,"value":776},{"type":553,"tag":575,"props":780,"children":784},{"className":781,"code":782,"language":783,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  const node = new ListNode(0);\n  let current = node;\n  let curry = 0;\n\n  while (l1 || l2) {\n    const n1 = l1 ? l1.val : 0;\n    const n2 = l2 ? l2.val : 0;\n    const sum = n1 + n2 + curry;\n    curry = parseInt(sum / 10);\n    current.next = new ListNode(sum % 10);\n    current = current.next;\n\n    if (l1) {\n      l1 = l1.next;\n    }\n    if (l2) {\n      l2 = l2.next;\n    }\n  }\n\n  if (curry > 0) {\n    current.next = new ListNode(curry);\n  }\n  return node.next;\n};\n","js",[785],{"type":553,"tag":581,"props":786,"children":787},{"__ignoreMap":546},[788,797,805,813,822,831,840,849,857,900,933,963,971,1027,1071,1098,1124,1134,1168,1223,1272,1314,1355,1406,1434,1442,1467,1496,1505,1530,1559,1567,1576,1584,1619,1659,1667,1692],{"type":553,"tag":585,"props":789,"children":790},{"class":587,"line":588},[791],{"type":553,"tag":585,"props":792,"children":794},{"style":793},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[795],{"type":558,"value":796},"/**\n",{"type":553,"tag":585,"props":798,"children":799},{"class":587,"line":597},[800],{"type":553,"tag":585,"props":801,"children":802},{"style":793},[803],{"type":558,"value":804}," * Definition for singly-linked list.\n",{"type":553,"tag":585,"props":806,"children":807},{"class":587,"line":606},[808],{"type":553,"tag":585,"props":809,"children":810},{"style":793},[811],{"type":558,"value":812}," * function ListNode(val) {\n",{"type":553,"tag":585,"props":814,"children":816},{"class":587,"line":815},4,[817],{"type":553,"tag":585,"props":818,"children":819},{"style":793},[820],{"type":558,"value":821}," *     this.val = val;\n",{"type":553,"tag":585,"props":823,"children":825},{"class":587,"line":824},5,[826],{"type":553,"tag":585,"props":827,"children":828},{"style":793},[829],{"type":558,"value":830}," *     this.next = null;\n",{"type":553,"tag":585,"props":832,"children":834},{"class":587,"line":833},6,[835],{"type":553,"tag":585,"props":836,"children":837},{"style":793},[838],{"type":558,"value":839}," * }\n",{"type":553,"tag":585,"props":841,"children":843},{"class":587,"line":842},7,[844],{"type":553,"tag":585,"props":845,"children":846},{"style":793},[847],{"type":558,"value":848}," */\n",{"type":553,"tag":585,"props":850,"children":852},{"class":587,"line":851},8,[853],{"type":553,"tag":585,"props":854,"children":855},{"style":793},[856],{"type":558,"value":796},{"type":553,"tag":585,"props":858,"children":860},{"class":587,"line":859},9,[861,866,872,878,883,889,894],{"type":553,"tag":585,"props":862,"children":863},{"style":793},[864],{"type":558,"value":865}," * ",{"type":553,"tag":585,"props":867,"children":869},{"style":868},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[870],{"type":558,"value":871},"@",{"type":553,"tag":585,"props":873,"children":875},{"style":874},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[876],{"type":558,"value":877},"param",{"type":553,"tag":585,"props":879,"children":880},{"style":868},[881],{"type":558,"value":882}," {",{"type":553,"tag":585,"props":884,"children":886},{"style":885},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[887],{"type":558,"value":888},"ListNode",{"type":553,"tag":585,"props":890,"children":891},{"style":868},[892],{"type":558,"value":893},"}",{"type":553,"tag":585,"props":895,"children":897},{"style":896},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[898],{"type":558,"value":899}," l1\n",{"type":553,"tag":585,"props":901,"children":903},{"class":587,"line":902},10,[904,908,912,916,920,924,928],{"type":553,"tag":585,"props":905,"children":906},{"style":793},[907],{"type":558,"value":865},{"type":553,"tag":585,"props":909,"children":910},{"style":868},[911],{"type":558,"value":871},{"type":553,"tag":585,"props":913,"children":914},{"style":874},[915],{"type":558,"value":877},{"type":553,"tag":585,"props":917,"children":918},{"style":868},[919],{"type":558,"value":882},{"type":553,"tag":585,"props":921,"children":922},{"style":885},[923],{"type":558,"value":888},{"type":553,"tag":585,"props":925,"children":926},{"style":868},[927],{"type":558,"value":893},{"type":553,"tag":585,"props":929,"children":930},{"style":896},[931],{"type":558,"value":932}," l2\n",{"type":553,"tag":585,"props":934,"children":936},{"class":587,"line":935},11,[937,941,945,950,954,958],{"type":553,"tag":585,"props":938,"children":939},{"style":793},[940],{"type":558,"value":865},{"type":553,"tag":585,"props":942,"children":943},{"style":868},[944],{"type":558,"value":871},{"type":553,"tag":585,"props":946,"children":947},{"style":874},[948],{"type":558,"value":949},"return",{"type":553,"tag":585,"props":951,"children":952},{"style":868},[953],{"type":558,"value":882},{"type":553,"tag":585,"props":955,"children":956},{"style":885},[957],{"type":558,"value":888},{"type":553,"tag":585,"props":959,"children":960},{"style":868},[961],{"type":558,"value":962},"}\n",{"type":553,"tag":585,"props":964,"children":966},{"class":587,"line":965},12,[967],{"type":553,"tag":585,"props":968,"children":969},{"style":793},[970],{"type":558,"value":848},{"type":553,"tag":585,"props":972,"children":974},{"class":587,"line":973},13,[975,981,987,992,997,1002,1007,1012,1017,1022],{"type":553,"tag":585,"props":976,"children":978},{"style":977},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[979],{"type":558,"value":980},"var",{"type":553,"tag":585,"props":982,"children":984},{"style":983},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[985],{"type":558,"value":986}," addTwoNumbers",{"type":553,"tag":585,"props":988,"children":989},{"style":868},[990],{"type":558,"value":991}," =",{"type":553,"tag":585,"props":993,"children":994},{"style":977},[995],{"type":558,"value":996}," function",{"type":553,"tag":585,"props":998,"children":999},{"style":868},[1000],{"type":558,"value":1001}," (",{"type":553,"tag":585,"props":1003,"children":1004},{"style":896},[1005],{"type":558,"value":1006},"l1",{"type":553,"tag":585,"props":1008,"children":1009},{"style":868},[1010],{"type":558,"value":1011},",",{"type":553,"tag":585,"props":1013,"children":1014},{"style":896},[1015],{"type":558,"value":1016}," l2",{"type":553,"tag":585,"props":1018,"children":1019},{"style":868},[1020],{"type":558,"value":1021},")",{"type":553,"tag":585,"props":1023,"children":1024},{"style":868},[1025],{"type":558,"value":1026}," {\n",{"type":553,"tag":585,"props":1028,"children":1030},{"class":587,"line":1029},14,[1031,1036,1041,1045,1050,1055,1060,1066],{"type":553,"tag":585,"props":1032,"children":1033},{"style":977},[1034],{"type":558,"value":1035},"  const",{"type":553,"tag":585,"props":1037,"children":1038},{"style":896},[1039],{"type":558,"value":1040}," node",{"type":553,"tag":585,"props":1042,"children":1043},{"style":868},[1044],{"type":558,"value":991},{"type":553,"tag":585,"props":1046,"children":1047},{"style":977},[1048],{"type":558,"value":1049}," new",{"type":553,"tag":585,"props":1051,"children":1052},{"style":983},[1053],{"type":558,"value":1054}," ListNode",{"type":553,"tag":585,"props":1056,"children":1057},{"style":868},[1058],{"type":558,"value":1059},"(",{"type":553,"tag":585,"props":1061,"children":1063},{"style":1062},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1064],{"type":558,"value":1065},"0",{"type":553,"tag":585,"props":1067,"children":1068},{"style":868},[1069],{"type":558,"value":1070},");\n",{"type":553,"tag":585,"props":1072,"children":1074},{"class":587,"line":1073},15,[1075,1080,1085,1089,1093],{"type":553,"tag":585,"props":1076,"children":1077},{"style":977},[1078],{"type":558,"value":1079},"  let",{"type":553,"tag":585,"props":1081,"children":1082},{"style":896},[1083],{"type":558,"value":1084}," current",{"type":553,"tag":585,"props":1086,"children":1087},{"style":868},[1088],{"type":558,"value":991},{"type":553,"tag":585,"props":1090,"children":1091},{"style":896},[1092],{"type":558,"value":1040},{"type":553,"tag":585,"props":1094,"children":1095},{"style":868},[1096],{"type":558,"value":1097},";\n",{"type":553,"tag":585,"props":1099,"children":1101},{"class":587,"line":1100},16,[1102,1106,1111,1115,1120],{"type":553,"tag":585,"props":1103,"children":1104},{"style":977},[1105],{"type":558,"value":1079},{"type":553,"tag":585,"props":1107,"children":1108},{"style":896},[1109],{"type":558,"value":1110}," curry",{"type":553,"tag":585,"props":1112,"children":1113},{"style":868},[1114],{"type":558,"value":991},{"type":553,"tag":585,"props":1116,"children":1117},{"style":1062},[1118],{"type":558,"value":1119}," 0",{"type":553,"tag":585,"props":1121,"children":1122},{"style":868},[1123],{"type":558,"value":1097},{"type":553,"tag":585,"props":1125,"children":1127},{"class":587,"line":1126},17,[1128],{"type":553,"tag":585,"props":1129,"children":1131},{"emptyLinePlaceholder":1130},true,[1132],{"type":558,"value":1133},"\n",{"type":553,"tag":585,"props":1135,"children":1137},{"class":587,"line":1136},18,[1138,1143,1147,1151,1156,1160,1164],{"type":553,"tag":585,"props":1139,"children":1140},{"style":874},[1141],{"type":558,"value":1142},"  while",{"type":553,"tag":585,"props":1144,"children":1145},{"style":868},[1146],{"type":558,"value":1001},{"type":553,"tag":585,"props":1148,"children":1149},{"style":896},[1150],{"type":558,"value":1006},{"type":553,"tag":585,"props":1152,"children":1153},{"style":977},[1154],{"type":558,"value":1155}," ||",{"type":553,"tag":585,"props":1157,"children":1158},{"style":896},[1159],{"type":558,"value":1016},{"type":553,"tag":585,"props":1161,"children":1162},{"style":868},[1163],{"type":558,"value":1021},{"type":553,"tag":585,"props":1165,"children":1166},{"style":868},[1167],{"type":558,"value":1026},{"type":553,"tag":585,"props":1169,"children":1171},{"class":587,"line":1170},19,[1172,1177,1182,1186,1191,1196,1200,1205,1210,1215,1219],{"type":553,"tag":585,"props":1173,"children":1174},{"style":977},[1175],{"type":558,"value":1176},"    const",{"type":553,"tag":585,"props":1178,"children":1179},{"style":896},[1180],{"type":558,"value":1181}," n1",{"type":553,"tag":585,"props":1183,"children":1184},{"style":868},[1185],{"type":558,"value":991},{"type":553,"tag":585,"props":1187,"children":1188},{"style":896},[1189],{"type":558,"value":1190}," l1",{"type":553,"tag":585,"props":1192,"children":1193},{"style":977},[1194],{"type":558,"value":1195}," ?",{"type":553,"tag":585,"props":1197,"children":1198},{"style":896},[1199],{"type":558,"value":1190},{"type":553,"tag":585,"props":1201,"children":1202},{"style":868},[1203],{"type":558,"value":1204},".",{"type":553,"tag":585,"props":1206,"children":1207},{"style":896},[1208],{"type":558,"value":1209},"val",{"type":553,"tag":585,"props":1211,"children":1212},{"style":977},[1213],{"type":558,"value":1214}," :",{"type":553,"tag":585,"props":1216,"children":1217},{"style":1062},[1218],{"type":558,"value":1119},{"type":553,"tag":585,"props":1220,"children":1221},{"style":868},[1222],{"type":558,"value":1097},{"type":553,"tag":585,"props":1224,"children":1226},{"class":587,"line":1225},20,[1227,1231,1236,1240,1244,1248,1252,1256,1260,1264,1268],{"type":553,"tag":585,"props":1228,"children":1229},{"style":977},[1230],{"type":558,"value":1176},{"type":553,"tag":585,"props":1232,"children":1233},{"style":896},[1234],{"type":558,"value":1235}," n2",{"type":553,"tag":585,"props":1237,"children":1238},{"style":868},[1239],{"type":558,"value":991},{"type":553,"tag":585,"props":1241,"children":1242},{"style":896},[1243],{"type":558,"value":1016},{"type":553,"tag":585,"props":1245,"children":1246},{"style":977},[1247],{"type":558,"value":1195},{"type":553,"tag":585,"props":1249,"children":1250},{"style":896},[1251],{"type":558,"value":1016},{"type":553,"tag":585,"props":1253,"children":1254},{"style":868},[1255],{"type":558,"value":1204},{"type":553,"tag":585,"props":1257,"children":1258},{"style":896},[1259],{"type":558,"value":1209},{"type":553,"tag":585,"props":1261,"children":1262},{"style":977},[1263],{"type":558,"value":1214},{"type":553,"tag":585,"props":1265,"children":1266},{"style":1062},[1267],{"type":558,"value":1119},{"type":553,"tag":585,"props":1269,"children":1270},{"style":868},[1271],{"type":558,"value":1097},{"type":553,"tag":585,"props":1273,"children":1275},{"class":587,"line":1274},21,[1276,1280,1285,1289,1293,1298,1302,1306,1310],{"type":553,"tag":585,"props":1277,"children":1278},{"style":977},[1279],{"type":558,"value":1176},{"type":553,"tag":585,"props":1281,"children":1282},{"style":896},[1283],{"type":558,"value":1284}," sum",{"type":553,"tag":585,"props":1286,"children":1287},{"style":868},[1288],{"type":558,"value":991},{"type":553,"tag":585,"props":1290,"children":1291},{"style":896},[1292],{"type":558,"value":1181},{"type":553,"tag":585,"props":1294,"children":1295},{"style":977},[1296],{"type":558,"value":1297}," +",{"type":553,"tag":585,"props":1299,"children":1300},{"style":896},[1301],{"type":558,"value":1235},{"type":553,"tag":585,"props":1303,"children":1304},{"style":977},[1305],{"type":558,"value":1297},{"type":553,"tag":585,"props":1307,"children":1308},{"style":896},[1309],{"type":558,"value":1110},{"type":553,"tag":585,"props":1311,"children":1312},{"style":868},[1313],{"type":558,"value":1097},{"type":553,"tag":585,"props":1315,"children":1317},{"class":587,"line":1316},22,[1318,1323,1327,1332,1336,1341,1346,1351],{"type":553,"tag":585,"props":1319,"children":1320},{"style":896},[1321],{"type":558,"value":1322},"    curry",{"type":553,"tag":585,"props":1324,"children":1325},{"style":868},[1326],{"type":558,"value":991},{"type":553,"tag":585,"props":1328,"children":1329},{"style":983},[1330],{"type":558,"value":1331}," parseInt",{"type":553,"tag":585,"props":1333,"children":1334},{"style":868},[1335],{"type":558,"value":1059},{"type":553,"tag":585,"props":1337,"children":1338},{"style":896},[1339],{"type":558,"value":1340},"sum",{"type":553,"tag":585,"props":1342,"children":1343},{"style":977},[1344],{"type":558,"value":1345}," /",{"type":553,"tag":585,"props":1347,"children":1348},{"style":1062},[1349],{"type":558,"value":1350}," 10",{"type":553,"tag":585,"props":1352,"children":1353},{"style":868},[1354],{"type":558,"value":1070},{"type":553,"tag":585,"props":1356,"children":1358},{"class":587,"line":1357},23,[1359,1364,1368,1373,1377,1381,1385,1389,1393,1398,1402],{"type":553,"tag":585,"props":1360,"children":1361},{"style":896},[1362],{"type":558,"value":1363},"    current",{"type":553,"tag":585,"props":1365,"children":1366},{"style":868},[1367],{"type":558,"value":1204},{"type":553,"tag":585,"props":1369,"children":1370},{"style":896},[1371],{"type":558,"value":1372},"next",{"type":553,"tag":585,"props":1374,"children":1375},{"style":868},[1376],{"type":558,"value":991},{"type":553,"tag":585,"props":1378,"children":1379},{"style":977},[1380],{"type":558,"value":1049},{"type":553,"tag":585,"props":1382,"children":1383},{"style":983},[1384],{"type":558,"value":1054},{"type":553,"tag":585,"props":1386,"children":1387},{"style":868},[1388],{"type":558,"value":1059},{"type":553,"tag":585,"props":1390,"children":1391},{"style":896},[1392],{"type":558,"value":1340},{"type":553,"tag":585,"props":1394,"children":1395},{"style":977},[1396],{"type":558,"value":1397}," %",{"type":553,"tag":585,"props":1399,"children":1400},{"style":1062},[1401],{"type":558,"value":1350},{"type":553,"tag":585,"props":1403,"children":1404},{"style":868},[1405],{"type":558,"value":1070},{"type":553,"tag":585,"props":1407,"children":1409},{"class":587,"line":1408},24,[1410,1414,1418,1422,1426,1430],{"type":553,"tag":585,"props":1411,"children":1412},{"style":896},[1413],{"type":558,"value":1363},{"type":553,"tag":585,"props":1415,"children":1416},{"style":868},[1417],{"type":558,"value":991},{"type":553,"tag":585,"props":1419,"children":1420},{"style":896},[1421],{"type":558,"value":1084},{"type":553,"tag":585,"props":1423,"children":1424},{"style":868},[1425],{"type":558,"value":1204},{"type":553,"tag":585,"props":1427,"children":1428},{"style":896},[1429],{"type":558,"value":1372},{"type":553,"tag":585,"props":1431,"children":1432},{"style":868},[1433],{"type":558,"value":1097},{"type":553,"tag":585,"props":1435,"children":1437},{"class":587,"line":1436},25,[1438],{"type":553,"tag":585,"props":1439,"children":1440},{"emptyLinePlaceholder":1130},[1441],{"type":558,"value":1133},{"type":553,"tag":585,"props":1443,"children":1445},{"class":587,"line":1444},26,[1446,1451,1455,1459,1463],{"type":553,"tag":585,"props":1447,"children":1448},{"style":874},[1449],{"type":558,"value":1450},"    if",{"type":553,"tag":585,"props":1452,"children":1453},{"style":868},[1454],{"type":558,"value":1001},{"type":553,"tag":585,"props":1456,"children":1457},{"style":896},[1458],{"type":558,"value":1006},{"type":553,"tag":585,"props":1460,"children":1461},{"style":868},[1462],{"type":558,"value":1021},{"type":553,"tag":585,"props":1464,"children":1465},{"style":868},[1466],{"type":558,"value":1026},{"type":553,"tag":585,"props":1468,"children":1470},{"class":587,"line":1469},27,[1471,1476,1480,1484,1488,1492],{"type":553,"tag":585,"props":1472,"children":1473},{"style":896},[1474],{"type":558,"value":1475},"      l1",{"type":553,"tag":585,"props":1477,"children":1478},{"style":868},[1479],{"type":558,"value":991},{"type":553,"tag":585,"props":1481,"children":1482},{"style":896},[1483],{"type":558,"value":1190},{"type":553,"tag":585,"props":1485,"children":1486},{"style":868},[1487],{"type":558,"value":1204},{"type":553,"tag":585,"props":1489,"children":1490},{"style":896},[1491],{"type":558,"value":1372},{"type":553,"tag":585,"props":1493,"children":1494},{"style":868},[1495],{"type":558,"value":1097},{"type":553,"tag":585,"props":1497,"children":1499},{"class":587,"line":1498},28,[1500],{"type":553,"tag":585,"props":1501,"children":1502},{"style":868},[1503],{"type":558,"value":1504},"    }\n",{"type":553,"tag":585,"props":1506,"children":1508},{"class":587,"line":1507},29,[1509,1513,1517,1522,1526],{"type":553,"tag":585,"props":1510,"children":1511},{"style":874},[1512],{"type":558,"value":1450},{"type":553,"tag":585,"props":1514,"children":1515},{"style":868},[1516],{"type":558,"value":1001},{"type":553,"tag":585,"props":1518,"children":1519},{"style":896},[1520],{"type":558,"value":1521},"l2",{"type":553,"tag":585,"props":1523,"children":1524},{"style":868},[1525],{"type":558,"value":1021},{"type":553,"tag":585,"props":1527,"children":1528},{"style":868},[1529],{"type":558,"value":1026},{"type":553,"tag":585,"props":1531,"children":1533},{"class":587,"line":1532},30,[1534,1539,1543,1547,1551,1555],{"type":553,"tag":585,"props":1535,"children":1536},{"style":896},[1537],{"type":558,"value":1538},"      l2",{"type":553,"tag":585,"props":1540,"children":1541},{"style":868},[1542],{"type":558,"value":991},{"type":553,"tag":585,"props":1544,"children":1545},{"style":896},[1546],{"type":558,"value":1016},{"type":553,"tag":585,"props":1548,"children":1549},{"style":868},[1550],{"type":558,"value":1204},{"type":553,"tag":585,"props":1552,"children":1553},{"style":896},[1554],{"type":558,"value":1372},{"type":553,"tag":585,"props":1556,"children":1557},{"style":868},[1558],{"type":558,"value":1097},{"type":553,"tag":585,"props":1560,"children":1562},{"class":587,"line":1561},31,[1563],{"type":553,"tag":585,"props":1564,"children":1565},{"style":868},[1566],{"type":558,"value":1504},{"type":553,"tag":585,"props":1568,"children":1570},{"class":587,"line":1569},32,[1571],{"type":553,"tag":585,"props":1572,"children":1573},{"style":868},[1574],{"type":558,"value":1575},"  }\n",{"type":553,"tag":585,"props":1577,"children":1579},{"class":587,"line":1578},33,[1580],{"type":553,"tag":585,"props":1581,"children":1582},{"emptyLinePlaceholder":1130},[1583],{"type":558,"value":1133},{"type":553,"tag":585,"props":1585,"children":1587},{"class":587,"line":1586},34,[1588,1593,1597,1602,1607,1611,1615],{"type":553,"tag":585,"props":1589,"children":1590},{"style":874},[1591],{"type":558,"value":1592},"  if",{"type":553,"tag":585,"props":1594,"children":1595},{"style":868},[1596],{"type":558,"value":1001},{"type":553,"tag":585,"props":1598,"children":1599},{"style":896},[1600],{"type":558,"value":1601},"curry",{"type":553,"tag":585,"props":1603,"children":1604},{"style":868},[1605],{"type":558,"value":1606}," >",{"type":553,"tag":585,"props":1608,"children":1609},{"style":1062},[1610],{"type":558,"value":1119},{"type":553,"tag":585,"props":1612,"children":1613},{"style":868},[1614],{"type":558,"value":1021},{"type":553,"tag":585,"props":1616,"children":1617},{"style":868},[1618],{"type":558,"value":1026},{"type":553,"tag":585,"props":1620,"children":1622},{"class":587,"line":1621},35,[1623,1627,1631,1635,1639,1643,1647,1651,1655],{"type":553,"tag":585,"props":1624,"children":1625},{"style":896},[1626],{"type":558,"value":1363},{"type":553,"tag":585,"props":1628,"children":1629},{"style":868},[1630],{"type":558,"value":1204},{"type":553,"tag":585,"props":1632,"children":1633},{"style":896},[1634],{"type":558,"value":1372},{"type":553,"tag":585,"props":1636,"children":1637},{"style":868},[1638],{"type":558,"value":991},{"type":553,"tag":585,"props":1640,"children":1641},{"style":977},[1642],{"type":558,"value":1049},{"type":553,"tag":585,"props":1644,"children":1645},{"style":983},[1646],{"type":558,"value":1054},{"type":553,"tag":585,"props":1648,"children":1649},{"style":868},[1650],{"type":558,"value":1059},{"type":553,"tag":585,"props":1652,"children":1653},{"style":896},[1654],{"type":558,"value":1601},{"type":553,"tag":585,"props":1656,"children":1657},{"style":868},[1658],{"type":558,"value":1070},{"type":553,"tag":585,"props":1660,"children":1662},{"class":587,"line":1661},36,[1663],{"type":553,"tag":585,"props":1664,"children":1665},{"style":868},[1666],{"type":558,"value":1575},{"type":553,"tag":585,"props":1668,"children":1670},{"class":587,"line":1669},37,[1671,1676,1680,1684,1688],{"type":553,"tag":585,"props":1672,"children":1673},{"style":874},[1674],{"type":558,"value":1675},"  return",{"type":553,"tag":585,"props":1677,"children":1678},{"style":896},[1679],{"type":558,"value":1040},{"type":553,"tag":585,"props":1681,"children":1682},{"style":868},[1683],{"type":558,"value":1204},{"type":553,"tag":585,"props":1685,"children":1686},{"style":896},[1687],{"type":558,"value":1372},{"type":553,"tag":585,"props":1689,"children":1690},{"style":868},[1691],{"type":558,"value":1097},{"type":553,"tag":585,"props":1693,"children":1695},{"class":587,"line":1694},38,[1696],{"type":553,"tag":585,"props":1697,"children":1698},{"style":868},[1699],{"type":558,"value":1700},"};\n",{"type":553,"tag":1702,"props":1703,"children":1704},"style",{},[1705],{"type":558,"value":1706},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":824,"depth":824,"links":1708},[1709,1710],{"id":697,"depth":597,"text":697},{"id":721,"depth":597,"text":721,"children":1711},[1712,1713],{"id":771,"depth":606,"text":771},{"id":776,"depth":606,"text":776},"markdown","content:1.algorithm:3.leetcode:3.major:2.add-two-numbers.md","content","1.algorithm/3.leetcode/3.major/2.add-two-numbers.md","md",[1720,1722],{"_path":60,"title":59,"description":1721},"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那\"两个\"整数，并返回它们的数组下标。",{"_path":66,"title":65,"description":1723},"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。",1714099673087]