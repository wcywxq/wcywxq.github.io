[{"data":1,"prerenderedAt":1357},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":509,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1352},[4,269,298,477,485,494],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":476},"代码考核","/code-assessment",[302,376,469],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370,373],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":374,"_path":375},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":377,"_path":378,"children":379},"业务场景","/code-assessment/scene",[380,405,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466],{"title":381,"_path":382,"children":383},"Promise","/code-assessment/scene/promise",[384,387,390,393,396,399,402],{"title":385,"_path":386},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":388,"_path":389},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":391,"_path":392},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":394,"_path":395},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":397,"_path":398},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":400,"_path":401},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":403,"_path":404},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":406,"_path":407,"children":408},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[409,412],{"title":410,"_path":411},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":413,"_path":414},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":416,"_path":417},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":419,"_path":420},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":422,"_path":423},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":425,"_path":426},"倒计时","/code-assessment/scene/countdown",{"title":428,"_path":429},"日期格式化","/code-assessment/scene/date-format",{"title":431,"_path":432},"实现前端路由","/code-assessment/scene/frontend-route",{"title":434,"_path":435},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":437,"_path":438},"lodash.get","/code-assessment/scene/lodash-get",{"title":440,"_path":441},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":443,"_path":444},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":446,"_path":447},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":449,"_path":450},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":452,"_path":453},"随机数","/code-assessment/scene/random-number",{"title":455,"_path":456},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":458,"_path":459},"sku 算法实现","/code-assessment/scene/sku",{"title":461,"_path":462},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":464,"_path":465},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":467,"_path":468},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":470,"_path":471,"children":472},"Ts 类型挑战","/code-assessment/type-challeges",[473],{"title":474,"_path":475},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":478,"_path":479,"children":480,"icon":484},"项目","/project",[481],{"title":482,"_path":483},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":486,"_path":487,"children":488,"icon":493},"设计模式","/design-mode",[489,490],{"title":486,"_path":487},{"title":491,"_path":492},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":495,"_path":496,"children":497,"icon":508},"后端语言","/backend-languages",[498],{"title":499,"_path":500,"children":501},"Python","/backend-languages/python",[502,505],{"title":503,"_path":504},"基础","/backend-languages/python/base",{"title":506,"_path":507},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":222,"_dir":510,"_draft":511,"_partial":511,"_locale":512,"title":221,"description":513,"url":514,"body":515,"_type":1347,"_id":1348,"_source":1349,"_file":1350,"_extension":1351},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":516,"children":517,"toc":1341},"root",[518,525,530,535,574,579,610,615,645,650,665,670,676,681,687,1335],{"type":519,"tag":520,"props":521,"children":522},"element","p",{},[523],{"type":524,"value":513},"text",{"type":519,"tag":520,"props":526,"children":527},{},[528],{"type":524,"value":529},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":519,"tag":520,"props":531,"children":532},{},[533],{"type":524,"value":534},"示例 1：",{"type":519,"tag":536,"props":537,"children":540},"pre",{"className":538,"code":539,"language":524,"meta":512,"style":512},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[541],{"type":519,"tag":542,"props":543,"children":544},"code",{"__ignoreMap":512},[545,556,565],{"type":519,"tag":546,"props":547,"children":550},"span",{"class":548,"line":549},"line",1,[551],{"type":519,"tag":546,"props":552,"children":553},{},[554],{"type":524,"value":555},"输入：nums = [1,2,3,4,5]\n",{"type":519,"tag":546,"props":557,"children":559},{"class":548,"line":558},2,[560],{"type":519,"tag":546,"props":561,"children":562},{},[563],{"type":524,"value":564},"输出：true\n",{"type":519,"tag":546,"props":566,"children":568},{"class":548,"line":567},3,[569],{"type":519,"tag":546,"props":570,"children":571},{},[572],{"type":524,"value":573},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":519,"tag":520,"props":575,"children":576},{},[577],{"type":524,"value":578},"示例 2：",{"type":519,"tag":536,"props":580,"children":582},{"className":538,"code":581,"language":524,"meta":512,"style":512},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[583],{"type":519,"tag":542,"props":584,"children":585},{"__ignoreMap":512},[586,594,602],{"type":519,"tag":546,"props":587,"children":588},{"class":548,"line":549},[589],{"type":519,"tag":546,"props":590,"children":591},{},[592],{"type":524,"value":593},"输入：nums = [5,4,3,2,1]\n",{"type":519,"tag":546,"props":595,"children":596},{"class":548,"line":558},[597],{"type":519,"tag":546,"props":598,"children":599},{},[600],{"type":524,"value":601},"输出：false\n",{"type":519,"tag":546,"props":603,"children":604},{"class":548,"line":567},[605],{"type":519,"tag":546,"props":606,"children":607},{},[608],{"type":524,"value":609},"解释：不存在满足题意的三元组\n",{"type":519,"tag":520,"props":611,"children":612},{},[613],{"type":524,"value":614},"示例 3：",{"type":519,"tag":536,"props":616,"children":618},{"className":538,"code":617,"language":524,"meta":512,"style":512},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[619],{"type":519,"tag":542,"props":620,"children":621},{"__ignoreMap":512},[622,630,637],{"type":519,"tag":546,"props":623,"children":624},{"class":548,"line":549},[625],{"type":519,"tag":546,"props":626,"children":627},{},[628],{"type":524,"value":629},"输入：nums = [2,1,5,0,4,6]\n",{"type":519,"tag":546,"props":631,"children":632},{"class":548,"line":558},[633],{"type":519,"tag":546,"props":634,"children":635},{},[636],{"type":524,"value":564},{"type":519,"tag":546,"props":638,"children":639},{"class":548,"line":567},[640],{"type":519,"tag":546,"props":641,"children":642},{},[643],{"type":524,"value":644},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":519,"tag":520,"props":646,"children":647},{},[648],{"type":524,"value":649},"提示：",{"type":519,"tag":651,"props":652,"children":653},"ul",{},[654,660],{"type":519,"tag":655,"props":656,"children":657},"li",{},[658],{"type":524,"value":659},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":519,"tag":655,"props":661,"children":662},{},[663],{"type":524,"value":664},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":519,"tag":520,"props":666,"children":667},{},[668],{"type":524,"value":669},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":519,"tag":671,"props":672,"children":674},"h2",{"id":673},"解题思路",[675],{"type":524,"value":673},{"type":519,"tag":671,"props":677,"children":679},{"id":678},"实现",[680],{"type":524,"value":678},{"type":519,"tag":682,"props":683,"children":685},"h3",{"id":684},"贪心",[686],{"type":524,"value":684},{"type":519,"tag":536,"props":688,"children":692},{"className":689,"code":690,"language":691,"meta":512,"style":512},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[693],{"type":519,"tag":542,"props":694,"children":695},{"__ignoreMap":512},[696,705,747,777,786,832,841,880,927,963,999,1069,1117,1126,1144,1199,1208,1237,1253,1262,1291,1300,1309,1326],{"type":519,"tag":546,"props":697,"children":698},{"class":548,"line":549},[699],{"type":519,"tag":546,"props":700,"children":702},{"style":701},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[703],{"type":524,"value":704},"/**\n",{"type":519,"tag":546,"props":706,"children":707},{"class":548,"line":558},[708,713,719,725,730,736,741],{"type":519,"tag":546,"props":709,"children":710},{"style":701},[711],{"type":524,"value":712}," * ",{"type":519,"tag":546,"props":714,"children":716},{"style":715},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[717],{"type":524,"value":718},"@",{"type":519,"tag":546,"props":720,"children":722},{"style":721},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[723],{"type":524,"value":724},"param",{"type":519,"tag":546,"props":726,"children":727},{"style":715},[728],{"type":524,"value":729}," {",{"type":519,"tag":546,"props":731,"children":733},{"style":732},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[734],{"type":524,"value":735},"number[]",{"type":519,"tag":546,"props":737,"children":738},{"style":715},[739],{"type":524,"value":740},"}",{"type":519,"tag":546,"props":742,"children":744},{"style":743},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[745],{"type":524,"value":746}," nums\n",{"type":519,"tag":546,"props":748,"children":749},{"class":548,"line":567},[750,754,758,763,767,772],{"type":519,"tag":546,"props":751,"children":752},{"style":701},[753],{"type":524,"value":712},{"type":519,"tag":546,"props":755,"children":756},{"style":715},[757],{"type":524,"value":718},{"type":519,"tag":546,"props":759,"children":760},{"style":721},[761],{"type":524,"value":762},"return",{"type":519,"tag":546,"props":764,"children":765},{"style":715},[766],{"type":524,"value":729},{"type":519,"tag":546,"props":768,"children":769},{"style":732},[770],{"type":524,"value":771},"boolean",{"type":519,"tag":546,"props":773,"children":774},{"style":715},[775],{"type":524,"value":776},"}\n",{"type":519,"tag":546,"props":778,"children":780},{"class":548,"line":779},4,[781],{"type":519,"tag":546,"props":782,"children":783},{"style":701},[784],{"type":524,"value":785}," */\n",{"type":519,"tag":546,"props":787,"children":789},{"class":548,"line":788},5,[790,796,802,807,812,817,822,827],{"type":519,"tag":546,"props":791,"children":793},{"style":792},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[794],{"type":524,"value":795},"var",{"type":519,"tag":546,"props":797,"children":799},{"style":798},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[800],{"type":524,"value":801}," increasingTriplet",{"type":519,"tag":546,"props":803,"children":804},{"style":715},[805],{"type":524,"value":806}," =",{"type":519,"tag":546,"props":808,"children":809},{"style":792},[810],{"type":524,"value":811}," function",{"type":519,"tag":546,"props":813,"children":814},{"style":715},[815],{"type":524,"value":816}," (",{"type":519,"tag":546,"props":818,"children":819},{"style":743},[820],{"type":524,"value":821},"nums",{"type":519,"tag":546,"props":823,"children":824},{"style":715},[825],{"type":524,"value":826},")",{"type":519,"tag":546,"props":828,"children":829},{"style":715},[830],{"type":524,"value":831}," {\n",{"type":519,"tag":546,"props":833,"children":835},{"class":548,"line":834},6,[836],{"type":519,"tag":546,"props":837,"children":838},{"style":701},[839],{"type":524,"value":840},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":519,"tag":546,"props":842,"children":844},{"class":548,"line":843},7,[845,850,855,859,864,869,875],{"type":519,"tag":546,"props":846,"children":847},{"style":792},[848],{"type":524,"value":849},"  let",{"type":519,"tag":546,"props":851,"children":852},{"style":743},[853],{"type":524,"value":854}," len",{"type":519,"tag":546,"props":856,"children":857},{"style":715},[858],{"type":524,"value":806},{"type":519,"tag":546,"props":860,"children":861},{"style":743},[862],{"type":524,"value":863}," nums",{"type":519,"tag":546,"props":865,"children":866},{"style":715},[867],{"type":524,"value":868},".",{"type":519,"tag":546,"props":870,"children":872},{"style":871},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[873],{"type":524,"value":874},"length",{"type":519,"tag":546,"props":876,"children":877},{"style":715},[878],{"type":524,"value":879},";\n",{"type":519,"tag":546,"props":881,"children":883},{"class":548,"line":882},8,[884,889,893,898,903,909,913,918,923],{"type":519,"tag":546,"props":885,"children":886},{"style":721},[887],{"type":524,"value":888},"  if",{"type":519,"tag":546,"props":890,"children":891},{"style":715},[892],{"type":524,"value":816},{"type":519,"tag":546,"props":894,"children":895},{"style":743},[896],{"type":524,"value":897},"len",{"type":519,"tag":546,"props":899,"children":900},{"style":715},[901],{"type":524,"value":902}," \u003C",{"type":519,"tag":546,"props":904,"children":906},{"style":905},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[907],{"type":524,"value":908}," 3",{"type":519,"tag":546,"props":910,"children":911},{"style":715},[912],{"type":524,"value":826},{"type":519,"tag":546,"props":914,"children":915},{"style":721},[916],{"type":524,"value":917}," return",{"type":519,"tag":546,"props":919,"children":920},{"style":721},[921],{"type":524,"value":922}," false",{"type":519,"tag":546,"props":924,"children":925},{"style":715},[926],{"type":524,"value":879},{"type":519,"tag":546,"props":928,"children":930},{"class":548,"line":929},9,[931,935,940,944,948,953,958],{"type":519,"tag":546,"props":932,"children":933},{"style":792},[934],{"type":524,"value":849},{"type":519,"tag":546,"props":936,"children":937},{"style":743},[938],{"type":524,"value":939}," first",{"type":519,"tag":546,"props":941,"children":942},{"style":715},[943],{"type":524,"value":806},{"type":519,"tag":546,"props":945,"children":946},{"style":743},[947],{"type":524,"value":863},{"type":519,"tag":546,"props":949,"children":950},{"style":715},[951],{"type":524,"value":952},"[",{"type":519,"tag":546,"props":954,"children":955},{"style":905},[956],{"type":524,"value":957},"0",{"type":519,"tag":546,"props":959,"children":960},{"style":715},[961],{"type":524,"value":962},"];\n",{"type":519,"tag":546,"props":964,"children":966},{"class":548,"line":965},10,[967,971,976,980,985,989,995],{"type":519,"tag":546,"props":968,"children":969},{"style":792},[970],{"type":524,"value":849},{"type":519,"tag":546,"props":972,"children":973},{"style":743},[974],{"type":524,"value":975}," second",{"type":519,"tag":546,"props":977,"children":978},{"style":715},[979],{"type":524,"value":806},{"type":519,"tag":546,"props":981,"children":982},{"style":743},[983],{"type":524,"value":984}," Number",{"type":519,"tag":546,"props":986,"children":987},{"style":715},[988],{"type":524,"value":868},{"type":519,"tag":546,"props":990,"children":992},{"style":991},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[993],{"type":524,"value":994},"MAX_SAFE_INTEGER",{"type":519,"tag":546,"props":996,"children":997},{"style":715},[998],{"type":524,"value":879},{"type":519,"tag":546,"props":1000,"children":1002},{"class":548,"line":1001},11,[1003,1008,1012,1017,1022,1026,1031,1036,1040,1044,1048,1052,1056,1061,1065],{"type":519,"tag":546,"props":1004,"children":1005},{"style":721},[1006],{"type":524,"value":1007},"  for",{"type":519,"tag":546,"props":1009,"children":1010},{"style":715},[1011],{"type":524,"value":816},{"type":519,"tag":546,"props":1013,"children":1014},{"style":792},[1015],{"type":524,"value":1016},"let",{"type":519,"tag":546,"props":1018,"children":1019},{"style":743},[1020],{"type":524,"value":1021}," i",{"type":519,"tag":546,"props":1023,"children":1024},{"style":715},[1025],{"type":524,"value":806},{"type":519,"tag":546,"props":1027,"children":1028},{"style":905},[1029],{"type":524,"value":1030}," 0",{"type":519,"tag":546,"props":1032,"children":1033},{"style":715},[1034],{"type":524,"value":1035},";",{"type":519,"tag":546,"props":1037,"children":1038},{"style":743},[1039],{"type":524,"value":1021},{"type":519,"tag":546,"props":1041,"children":1042},{"style":715},[1043],{"type":524,"value":902},{"type":519,"tag":546,"props":1045,"children":1046},{"style":743},[1047],{"type":524,"value":854},{"type":519,"tag":546,"props":1049,"children":1050},{"style":715},[1051],{"type":524,"value":1035},{"type":519,"tag":546,"props":1053,"children":1054},{"style":743},[1055],{"type":524,"value":1021},{"type":519,"tag":546,"props":1057,"children":1058},{"style":792},[1059],{"type":524,"value":1060},"++",{"type":519,"tag":546,"props":1062,"children":1063},{"style":715},[1064],{"type":524,"value":826},{"type":519,"tag":546,"props":1066,"children":1067},{"style":715},[1068],{"type":524,"value":831},{"type":519,"tag":546,"props":1070,"children":1072},{"class":548,"line":1071},12,[1073,1078,1082,1086,1090,1095,1100,1105,1109,1113],{"type":519,"tag":546,"props":1074,"children":1075},{"style":721},[1076],{"type":524,"value":1077},"    if",{"type":519,"tag":546,"props":1079,"children":1080},{"style":715},[1081],{"type":524,"value":816},{"type":519,"tag":546,"props":1083,"children":1084},{"style":743},[1085],{"type":524,"value":821},{"type":519,"tag":546,"props":1087,"children":1088},{"style":715},[1089],{"type":524,"value":952},{"type":519,"tag":546,"props":1091,"children":1092},{"style":743},[1093],{"type":524,"value":1094},"i",{"type":519,"tag":546,"props":1096,"children":1097},{"style":715},[1098],{"type":524,"value":1099},"]",{"type":519,"tag":546,"props":1101,"children":1102},{"style":715},[1103],{"type":524,"value":1104}," >",{"type":519,"tag":546,"props":1106,"children":1107},{"style":743},[1108],{"type":524,"value":975},{"type":519,"tag":546,"props":1110,"children":1111},{"style":715},[1112],{"type":524,"value":826},{"type":519,"tag":546,"props":1114,"children":1115},{"style":715},[1116],{"type":524,"value":831},{"type":519,"tag":546,"props":1118,"children":1120},{"class":548,"line":1119},13,[1121],{"type":519,"tag":546,"props":1122,"children":1123},{"style":701},[1124],{"type":524,"value":1125},"      // 找到第三个数\n",{"type":519,"tag":546,"props":1127,"children":1129},{"class":548,"line":1128},14,[1130,1135,1140],{"type":519,"tag":546,"props":1131,"children":1132},{"style":721},[1133],{"type":524,"value":1134},"      return",{"type":519,"tag":546,"props":1136,"children":1137},{"style":721},[1138],{"type":524,"value":1139}," true",{"type":519,"tag":546,"props":1141,"children":1142},{"style":715},[1143],{"type":524,"value":879},{"type":519,"tag":546,"props":1145,"children":1147},{"class":548,"line":1146},15,[1148,1153,1158,1163,1167,1171,1175,1179,1183,1187,1191,1195],{"type":519,"tag":546,"props":1149,"children":1150},{"style":715},[1151],{"type":524,"value":1152},"    }",{"type":519,"tag":546,"props":1154,"children":1155},{"style":721},[1156],{"type":524,"value":1157}," else",{"type":519,"tag":546,"props":1159,"children":1160},{"style":721},[1161],{"type":524,"value":1162}," if",{"type":519,"tag":546,"props":1164,"children":1165},{"style":715},[1166],{"type":524,"value":816},{"type":519,"tag":546,"props":1168,"children":1169},{"style":743},[1170],{"type":524,"value":821},{"type":519,"tag":546,"props":1172,"children":1173},{"style":715},[1174],{"type":524,"value":952},{"type":519,"tag":546,"props":1176,"children":1177},{"style":743},[1178],{"type":524,"value":1094},{"type":519,"tag":546,"props":1180,"children":1181},{"style":715},[1182],{"type":524,"value":1099},{"type":519,"tag":546,"props":1184,"children":1185},{"style":715},[1186],{"type":524,"value":1104},{"type":519,"tag":546,"props":1188,"children":1189},{"style":743},[1190],{"type":524,"value":939},{"type":519,"tag":546,"props":1192,"children":1193},{"style":715},[1194],{"type":524,"value":826},{"type":519,"tag":546,"props":1196,"children":1197},{"style":715},[1198],{"type":524,"value":831},{"type":519,"tag":546,"props":1200,"children":1202},{"class":548,"line":1201},16,[1203],{"type":519,"tag":546,"props":1204,"children":1205},{"style":701},[1206],{"type":524,"value":1207},"      // 更新第二个数\n",{"type":519,"tag":546,"props":1209,"children":1211},{"class":548,"line":1210},17,[1212,1217,1221,1225,1229,1233],{"type":519,"tag":546,"props":1213,"children":1214},{"style":743},[1215],{"type":524,"value":1216},"      second",{"type":519,"tag":546,"props":1218,"children":1219},{"style":715},[1220],{"type":524,"value":806},{"type":519,"tag":546,"props":1222,"children":1223},{"style":743},[1224],{"type":524,"value":863},{"type":519,"tag":546,"props":1226,"children":1227},{"style":715},[1228],{"type":524,"value":952},{"type":519,"tag":546,"props":1230,"children":1231},{"style":743},[1232],{"type":524,"value":1094},{"type":519,"tag":546,"props":1234,"children":1235},{"style":715},[1236],{"type":524,"value":962},{"type":519,"tag":546,"props":1238,"children":1240},{"class":548,"line":1239},18,[1241,1245,1249],{"type":519,"tag":546,"props":1242,"children":1243},{"style":715},[1244],{"type":524,"value":1152},{"type":519,"tag":546,"props":1246,"children":1247},{"style":721},[1248],{"type":524,"value":1157},{"type":519,"tag":546,"props":1250,"children":1251},{"style":715},[1252],{"type":524,"value":831},{"type":519,"tag":546,"props":1254,"children":1256},{"class":548,"line":1255},19,[1257],{"type":519,"tag":546,"props":1258,"children":1259},{"style":701},[1260],{"type":524,"value":1261},"      // 更新第一个数\n",{"type":519,"tag":546,"props":1263,"children":1265},{"class":548,"line":1264},20,[1266,1271,1275,1279,1283,1287],{"type":519,"tag":546,"props":1267,"children":1268},{"style":743},[1269],{"type":524,"value":1270},"      first",{"type":519,"tag":546,"props":1272,"children":1273},{"style":715},[1274],{"type":524,"value":806},{"type":519,"tag":546,"props":1276,"children":1277},{"style":743},[1278],{"type":524,"value":863},{"type":519,"tag":546,"props":1280,"children":1281},{"style":715},[1282],{"type":524,"value":952},{"type":519,"tag":546,"props":1284,"children":1285},{"style":743},[1286],{"type":524,"value":1094},{"type":519,"tag":546,"props":1288,"children":1289},{"style":715},[1290],{"type":524,"value":962},{"type":519,"tag":546,"props":1292,"children":1294},{"class":548,"line":1293},21,[1295],{"type":519,"tag":546,"props":1296,"children":1297},{"style":715},[1298],{"type":524,"value":1299},"    }\n",{"type":519,"tag":546,"props":1301,"children":1303},{"class":548,"line":1302},22,[1304],{"type":519,"tag":546,"props":1305,"children":1306},{"style":715},[1307],{"type":524,"value":1308},"  }\n",{"type":519,"tag":546,"props":1310,"children":1312},{"class":548,"line":1311},23,[1313,1318,1322],{"type":519,"tag":546,"props":1314,"children":1315},{"style":721},[1316],{"type":524,"value":1317},"  return",{"type":519,"tag":546,"props":1319,"children":1320},{"style":721},[1321],{"type":524,"value":922},{"type":519,"tag":546,"props":1323,"children":1324},{"style":715},[1325],{"type":524,"value":879},{"type":519,"tag":546,"props":1327,"children":1329},{"class":548,"line":1328},24,[1330],{"type":519,"tag":546,"props":1331,"children":1332},{"style":715},[1333],{"type":524,"value":1334},"};\n",{"type":519,"tag":1336,"props":1337,"children":1338},"style",{},[1339],{"type":524,"value":1340},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":512,"searchDepth":788,"depth":788,"links":1342},[1343,1344],{"id":673,"depth":558,"text":673},{"id":678,"depth":558,"text":678,"children":1345},[1346],{"id":684,"depth":567,"text":684},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1353,1355],{"_path":219,"title":218,"description":1354},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":225,"title":224,"description":1356},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1714059006528]