[{"data":1,"prerenderedAt":1391},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":543,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1386},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":222,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":221,"description":547,"url":548,"body":549,"_type":1381,"_id":1382,"_source":1383,"_file":1384,"_extension":1385},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":550,"children":551,"toc":1375},"root",[552,559,564,569,608,613,644,649,679,684,699,704,710,715,721,1369],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"示例 1：",{"type":553,"tag":570,"props":571,"children":574},"pre",{"className":572,"code":573,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[575],{"type":553,"tag":576,"props":577,"children":578},"code",{"__ignoreMap":546},[579,590,599],{"type":553,"tag":580,"props":581,"children":584},"span",{"class":582,"line":583},"line",1,[585],{"type":553,"tag":580,"props":586,"children":587},{},[588],{"type":558,"value":589},"输入：nums = [1,2,3,4,5]\n",{"type":553,"tag":580,"props":591,"children":593},{"class":582,"line":592},2,[594],{"type":553,"tag":580,"props":595,"children":596},{},[597],{"type":558,"value":598},"输出：true\n",{"type":553,"tag":580,"props":600,"children":602},{"class":582,"line":601},3,[603],{"type":553,"tag":580,"props":604,"children":605},{},[606],{"type":558,"value":607},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":553,"tag":554,"props":609,"children":610},{},[611],{"type":558,"value":612},"示例 2：",{"type":553,"tag":570,"props":614,"children":616},{"className":572,"code":615,"language":558,"meta":546,"style":546},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[617],{"type":553,"tag":576,"props":618,"children":619},{"__ignoreMap":546},[620,628,636],{"type":553,"tag":580,"props":621,"children":622},{"class":582,"line":583},[623],{"type":553,"tag":580,"props":624,"children":625},{},[626],{"type":558,"value":627},"输入：nums = [5,4,3,2,1]\n",{"type":553,"tag":580,"props":629,"children":630},{"class":582,"line":592},[631],{"type":553,"tag":580,"props":632,"children":633},{},[634],{"type":558,"value":635},"输出：false\n",{"type":553,"tag":580,"props":637,"children":638},{"class":582,"line":601},[639],{"type":553,"tag":580,"props":640,"children":641},{},[642],{"type":558,"value":643},"解释：不存在满足题意的三元组\n",{"type":553,"tag":554,"props":645,"children":646},{},[647],{"type":558,"value":648},"示例 3：",{"type":553,"tag":570,"props":650,"children":652},{"className":572,"code":651,"language":558,"meta":546,"style":546},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[653],{"type":553,"tag":576,"props":654,"children":655},{"__ignoreMap":546},[656,664,671],{"type":553,"tag":580,"props":657,"children":658},{"class":582,"line":583},[659],{"type":553,"tag":580,"props":660,"children":661},{},[662],{"type":558,"value":663},"输入：nums = [2,1,5,0,4,6]\n",{"type":553,"tag":580,"props":665,"children":666},{"class":582,"line":592},[667],{"type":553,"tag":580,"props":668,"children":669},{},[670],{"type":558,"value":598},{"type":553,"tag":580,"props":672,"children":673},{"class":582,"line":601},[674],{"type":553,"tag":580,"props":675,"children":676},{},[677],{"type":558,"value":678},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":553,"tag":554,"props":680,"children":681},{},[682],{"type":558,"value":683},"提示：",{"type":553,"tag":685,"props":686,"children":687},"ul",{},[688,694],{"type":553,"tag":689,"props":690,"children":691},"li",{},[692],{"type":558,"value":693},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":553,"tag":689,"props":695,"children":696},{},[697],{"type":558,"value":698},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":553,"tag":554,"props":700,"children":701},{},[702],{"type":558,"value":703},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":553,"tag":705,"props":706,"children":708},"h2",{"id":707},"解题思路",[709],{"type":558,"value":707},{"type":553,"tag":705,"props":711,"children":713},{"id":712},"实现",[714],{"type":558,"value":712},{"type":553,"tag":716,"props":717,"children":719},"h3",{"id":718},"贪心",[720],{"type":558,"value":718},{"type":553,"tag":570,"props":722,"children":726},{"className":723,"code":724,"language":725,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[727],{"type":553,"tag":576,"props":728,"children":729},{"__ignoreMap":546},[730,739,781,811,820,866,875,914,961,997,1033,1103,1151,1160,1178,1233,1242,1271,1287,1296,1325,1334,1343,1360],{"type":553,"tag":580,"props":731,"children":732},{"class":582,"line":583},[733],{"type":553,"tag":580,"props":734,"children":736},{"style":735},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[737],{"type":558,"value":738},"/**\n",{"type":553,"tag":580,"props":740,"children":741},{"class":582,"line":592},[742,747,753,759,764,770,775],{"type":553,"tag":580,"props":743,"children":744},{"style":735},[745],{"type":558,"value":746}," * ",{"type":553,"tag":580,"props":748,"children":750},{"style":749},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[751],{"type":558,"value":752},"@",{"type":553,"tag":580,"props":754,"children":756},{"style":755},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[757],{"type":558,"value":758},"param",{"type":553,"tag":580,"props":760,"children":761},{"style":749},[762],{"type":558,"value":763}," {",{"type":553,"tag":580,"props":765,"children":767},{"style":766},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[768],{"type":558,"value":769},"number[]",{"type":553,"tag":580,"props":771,"children":772},{"style":749},[773],{"type":558,"value":774},"}",{"type":553,"tag":580,"props":776,"children":778},{"style":777},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[779],{"type":558,"value":780}," nums\n",{"type":553,"tag":580,"props":782,"children":783},{"class":582,"line":601},[784,788,792,797,801,806],{"type":553,"tag":580,"props":785,"children":786},{"style":735},[787],{"type":558,"value":746},{"type":553,"tag":580,"props":789,"children":790},{"style":749},[791],{"type":558,"value":752},{"type":553,"tag":580,"props":793,"children":794},{"style":755},[795],{"type":558,"value":796},"return",{"type":553,"tag":580,"props":798,"children":799},{"style":749},[800],{"type":558,"value":763},{"type":553,"tag":580,"props":802,"children":803},{"style":766},[804],{"type":558,"value":805},"boolean",{"type":553,"tag":580,"props":807,"children":808},{"style":749},[809],{"type":558,"value":810},"}\n",{"type":553,"tag":580,"props":812,"children":814},{"class":582,"line":813},4,[815],{"type":553,"tag":580,"props":816,"children":817},{"style":735},[818],{"type":558,"value":819}," */\n",{"type":553,"tag":580,"props":821,"children":823},{"class":582,"line":822},5,[824,830,836,841,846,851,856,861],{"type":553,"tag":580,"props":825,"children":827},{"style":826},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[828],{"type":558,"value":829},"var",{"type":553,"tag":580,"props":831,"children":833},{"style":832},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[834],{"type":558,"value":835}," increasingTriplet",{"type":553,"tag":580,"props":837,"children":838},{"style":749},[839],{"type":558,"value":840}," =",{"type":553,"tag":580,"props":842,"children":843},{"style":826},[844],{"type":558,"value":845}," function",{"type":553,"tag":580,"props":847,"children":848},{"style":749},[849],{"type":558,"value":850}," (",{"type":553,"tag":580,"props":852,"children":853},{"style":777},[854],{"type":558,"value":855},"nums",{"type":553,"tag":580,"props":857,"children":858},{"style":749},[859],{"type":558,"value":860},")",{"type":553,"tag":580,"props":862,"children":863},{"style":749},[864],{"type":558,"value":865}," {\n",{"type":553,"tag":580,"props":867,"children":869},{"class":582,"line":868},6,[870],{"type":553,"tag":580,"props":871,"children":872},{"style":735},[873],{"type":558,"value":874},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":553,"tag":580,"props":876,"children":878},{"class":582,"line":877},7,[879,884,889,893,898,903,909],{"type":553,"tag":580,"props":880,"children":881},{"style":826},[882],{"type":558,"value":883},"  let",{"type":553,"tag":580,"props":885,"children":886},{"style":777},[887],{"type":558,"value":888}," len",{"type":553,"tag":580,"props":890,"children":891},{"style":749},[892],{"type":558,"value":840},{"type":553,"tag":580,"props":894,"children":895},{"style":777},[896],{"type":558,"value":897}," nums",{"type":553,"tag":580,"props":899,"children":900},{"style":749},[901],{"type":558,"value":902},".",{"type":553,"tag":580,"props":904,"children":906},{"style":905},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[907],{"type":558,"value":908},"length",{"type":553,"tag":580,"props":910,"children":911},{"style":749},[912],{"type":558,"value":913},";\n",{"type":553,"tag":580,"props":915,"children":917},{"class":582,"line":916},8,[918,923,927,932,937,943,947,952,957],{"type":553,"tag":580,"props":919,"children":920},{"style":755},[921],{"type":558,"value":922},"  if",{"type":553,"tag":580,"props":924,"children":925},{"style":749},[926],{"type":558,"value":850},{"type":553,"tag":580,"props":928,"children":929},{"style":777},[930],{"type":558,"value":931},"len",{"type":553,"tag":580,"props":933,"children":934},{"style":749},[935],{"type":558,"value":936}," \u003C",{"type":553,"tag":580,"props":938,"children":940},{"style":939},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[941],{"type":558,"value":942}," 3",{"type":553,"tag":580,"props":944,"children":945},{"style":749},[946],{"type":558,"value":860},{"type":553,"tag":580,"props":948,"children":949},{"style":755},[950],{"type":558,"value":951}," return",{"type":553,"tag":580,"props":953,"children":954},{"style":755},[955],{"type":558,"value":956}," false",{"type":553,"tag":580,"props":958,"children":959},{"style":749},[960],{"type":558,"value":913},{"type":553,"tag":580,"props":962,"children":964},{"class":582,"line":963},9,[965,969,974,978,982,987,992],{"type":553,"tag":580,"props":966,"children":967},{"style":826},[968],{"type":558,"value":883},{"type":553,"tag":580,"props":970,"children":971},{"style":777},[972],{"type":558,"value":973}," first",{"type":553,"tag":580,"props":975,"children":976},{"style":749},[977],{"type":558,"value":840},{"type":553,"tag":580,"props":979,"children":980},{"style":777},[981],{"type":558,"value":897},{"type":553,"tag":580,"props":983,"children":984},{"style":749},[985],{"type":558,"value":986},"[",{"type":553,"tag":580,"props":988,"children":989},{"style":939},[990],{"type":558,"value":991},"0",{"type":553,"tag":580,"props":993,"children":994},{"style":749},[995],{"type":558,"value":996},"];\n",{"type":553,"tag":580,"props":998,"children":1000},{"class":582,"line":999},10,[1001,1005,1010,1014,1019,1023,1029],{"type":553,"tag":580,"props":1002,"children":1003},{"style":826},[1004],{"type":558,"value":883},{"type":553,"tag":580,"props":1006,"children":1007},{"style":777},[1008],{"type":558,"value":1009}," second",{"type":553,"tag":580,"props":1011,"children":1012},{"style":749},[1013],{"type":558,"value":840},{"type":553,"tag":580,"props":1015,"children":1016},{"style":777},[1017],{"type":558,"value":1018}," Number",{"type":553,"tag":580,"props":1020,"children":1021},{"style":749},[1022],{"type":558,"value":902},{"type":553,"tag":580,"props":1024,"children":1026},{"style":1025},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[1027],{"type":558,"value":1028},"MAX_SAFE_INTEGER",{"type":553,"tag":580,"props":1030,"children":1031},{"style":749},[1032],{"type":558,"value":913},{"type":553,"tag":580,"props":1034,"children":1036},{"class":582,"line":1035},11,[1037,1042,1046,1051,1056,1060,1065,1070,1074,1078,1082,1086,1090,1095,1099],{"type":553,"tag":580,"props":1038,"children":1039},{"style":755},[1040],{"type":558,"value":1041},"  for",{"type":553,"tag":580,"props":1043,"children":1044},{"style":749},[1045],{"type":558,"value":850},{"type":553,"tag":580,"props":1047,"children":1048},{"style":826},[1049],{"type":558,"value":1050},"let",{"type":553,"tag":580,"props":1052,"children":1053},{"style":777},[1054],{"type":558,"value":1055}," i",{"type":553,"tag":580,"props":1057,"children":1058},{"style":749},[1059],{"type":558,"value":840},{"type":553,"tag":580,"props":1061,"children":1062},{"style":939},[1063],{"type":558,"value":1064}," 0",{"type":553,"tag":580,"props":1066,"children":1067},{"style":749},[1068],{"type":558,"value":1069},";",{"type":553,"tag":580,"props":1071,"children":1072},{"style":777},[1073],{"type":558,"value":1055},{"type":553,"tag":580,"props":1075,"children":1076},{"style":749},[1077],{"type":558,"value":936},{"type":553,"tag":580,"props":1079,"children":1080},{"style":777},[1081],{"type":558,"value":888},{"type":553,"tag":580,"props":1083,"children":1084},{"style":749},[1085],{"type":558,"value":1069},{"type":553,"tag":580,"props":1087,"children":1088},{"style":777},[1089],{"type":558,"value":1055},{"type":553,"tag":580,"props":1091,"children":1092},{"style":826},[1093],{"type":558,"value":1094},"++",{"type":553,"tag":580,"props":1096,"children":1097},{"style":749},[1098],{"type":558,"value":860},{"type":553,"tag":580,"props":1100,"children":1101},{"style":749},[1102],{"type":558,"value":865},{"type":553,"tag":580,"props":1104,"children":1106},{"class":582,"line":1105},12,[1107,1112,1116,1120,1124,1129,1134,1139,1143,1147],{"type":553,"tag":580,"props":1108,"children":1109},{"style":755},[1110],{"type":558,"value":1111},"    if",{"type":553,"tag":580,"props":1113,"children":1114},{"style":749},[1115],{"type":558,"value":850},{"type":553,"tag":580,"props":1117,"children":1118},{"style":777},[1119],{"type":558,"value":855},{"type":553,"tag":580,"props":1121,"children":1122},{"style":749},[1123],{"type":558,"value":986},{"type":553,"tag":580,"props":1125,"children":1126},{"style":777},[1127],{"type":558,"value":1128},"i",{"type":553,"tag":580,"props":1130,"children":1131},{"style":749},[1132],{"type":558,"value":1133},"]",{"type":553,"tag":580,"props":1135,"children":1136},{"style":749},[1137],{"type":558,"value":1138}," >",{"type":553,"tag":580,"props":1140,"children":1141},{"style":777},[1142],{"type":558,"value":1009},{"type":553,"tag":580,"props":1144,"children":1145},{"style":749},[1146],{"type":558,"value":860},{"type":553,"tag":580,"props":1148,"children":1149},{"style":749},[1150],{"type":558,"value":865},{"type":553,"tag":580,"props":1152,"children":1154},{"class":582,"line":1153},13,[1155],{"type":553,"tag":580,"props":1156,"children":1157},{"style":735},[1158],{"type":558,"value":1159},"      // 找到第三个数\n",{"type":553,"tag":580,"props":1161,"children":1163},{"class":582,"line":1162},14,[1164,1169,1174],{"type":553,"tag":580,"props":1165,"children":1166},{"style":755},[1167],{"type":558,"value":1168},"      return",{"type":553,"tag":580,"props":1170,"children":1171},{"style":755},[1172],{"type":558,"value":1173}," true",{"type":553,"tag":580,"props":1175,"children":1176},{"style":749},[1177],{"type":558,"value":913},{"type":553,"tag":580,"props":1179,"children":1181},{"class":582,"line":1180},15,[1182,1187,1192,1197,1201,1205,1209,1213,1217,1221,1225,1229],{"type":553,"tag":580,"props":1183,"children":1184},{"style":749},[1185],{"type":558,"value":1186},"    }",{"type":553,"tag":580,"props":1188,"children":1189},{"style":755},[1190],{"type":558,"value":1191}," else",{"type":553,"tag":580,"props":1193,"children":1194},{"style":755},[1195],{"type":558,"value":1196}," if",{"type":553,"tag":580,"props":1198,"children":1199},{"style":749},[1200],{"type":558,"value":850},{"type":553,"tag":580,"props":1202,"children":1203},{"style":777},[1204],{"type":558,"value":855},{"type":553,"tag":580,"props":1206,"children":1207},{"style":749},[1208],{"type":558,"value":986},{"type":553,"tag":580,"props":1210,"children":1211},{"style":777},[1212],{"type":558,"value":1128},{"type":553,"tag":580,"props":1214,"children":1215},{"style":749},[1216],{"type":558,"value":1133},{"type":553,"tag":580,"props":1218,"children":1219},{"style":749},[1220],{"type":558,"value":1138},{"type":553,"tag":580,"props":1222,"children":1223},{"style":777},[1224],{"type":558,"value":973},{"type":553,"tag":580,"props":1226,"children":1227},{"style":749},[1228],{"type":558,"value":860},{"type":553,"tag":580,"props":1230,"children":1231},{"style":749},[1232],{"type":558,"value":865},{"type":553,"tag":580,"props":1234,"children":1236},{"class":582,"line":1235},16,[1237],{"type":553,"tag":580,"props":1238,"children":1239},{"style":735},[1240],{"type":558,"value":1241},"      // 更新第二个数\n",{"type":553,"tag":580,"props":1243,"children":1245},{"class":582,"line":1244},17,[1246,1251,1255,1259,1263,1267],{"type":553,"tag":580,"props":1247,"children":1248},{"style":777},[1249],{"type":558,"value":1250},"      second",{"type":553,"tag":580,"props":1252,"children":1253},{"style":749},[1254],{"type":558,"value":840},{"type":553,"tag":580,"props":1256,"children":1257},{"style":777},[1258],{"type":558,"value":897},{"type":553,"tag":580,"props":1260,"children":1261},{"style":749},[1262],{"type":558,"value":986},{"type":553,"tag":580,"props":1264,"children":1265},{"style":777},[1266],{"type":558,"value":1128},{"type":553,"tag":580,"props":1268,"children":1269},{"style":749},[1270],{"type":558,"value":996},{"type":553,"tag":580,"props":1272,"children":1274},{"class":582,"line":1273},18,[1275,1279,1283],{"type":553,"tag":580,"props":1276,"children":1277},{"style":749},[1278],{"type":558,"value":1186},{"type":553,"tag":580,"props":1280,"children":1281},{"style":755},[1282],{"type":558,"value":1191},{"type":553,"tag":580,"props":1284,"children":1285},{"style":749},[1286],{"type":558,"value":865},{"type":553,"tag":580,"props":1288,"children":1290},{"class":582,"line":1289},19,[1291],{"type":553,"tag":580,"props":1292,"children":1293},{"style":735},[1294],{"type":558,"value":1295},"      // 更新第一个数\n",{"type":553,"tag":580,"props":1297,"children":1299},{"class":582,"line":1298},20,[1300,1305,1309,1313,1317,1321],{"type":553,"tag":580,"props":1301,"children":1302},{"style":777},[1303],{"type":558,"value":1304},"      first",{"type":553,"tag":580,"props":1306,"children":1307},{"style":749},[1308],{"type":558,"value":840},{"type":553,"tag":580,"props":1310,"children":1311},{"style":777},[1312],{"type":558,"value":897},{"type":553,"tag":580,"props":1314,"children":1315},{"style":749},[1316],{"type":558,"value":986},{"type":553,"tag":580,"props":1318,"children":1319},{"style":777},[1320],{"type":558,"value":1128},{"type":553,"tag":580,"props":1322,"children":1323},{"style":749},[1324],{"type":558,"value":996},{"type":553,"tag":580,"props":1326,"children":1328},{"class":582,"line":1327},21,[1329],{"type":553,"tag":580,"props":1330,"children":1331},{"style":749},[1332],{"type":558,"value":1333},"    }\n",{"type":553,"tag":580,"props":1335,"children":1337},{"class":582,"line":1336},22,[1338],{"type":553,"tag":580,"props":1339,"children":1340},{"style":749},[1341],{"type":558,"value":1342},"  }\n",{"type":553,"tag":580,"props":1344,"children":1346},{"class":582,"line":1345},23,[1347,1352,1356],{"type":553,"tag":580,"props":1348,"children":1349},{"style":755},[1350],{"type":558,"value":1351},"  return",{"type":553,"tag":580,"props":1353,"children":1354},{"style":755},[1355],{"type":558,"value":956},{"type":553,"tag":580,"props":1357,"children":1358},{"style":749},[1359],{"type":558,"value":913},{"type":553,"tag":580,"props":1361,"children":1363},{"class":582,"line":1362},24,[1364],{"type":553,"tag":580,"props":1365,"children":1366},{"style":749},[1367],{"type":558,"value":1368},"};\n",{"type":553,"tag":1370,"props":1371,"children":1372},"style",{},[1373],{"type":558,"value":1374},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":822,"depth":822,"links":1376},[1377,1378],{"id":707,"depth":592,"text":707},{"id":712,"depth":592,"text":712,"children":1379},[1380],{"id":718,"depth":601,"text":718},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1387,1389],{"_path":219,"title":218,"description":1388},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":225,"title":224,"description":1390},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1714099680257]