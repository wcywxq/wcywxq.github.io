[{"data":1,"prerenderedAt":1348},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":500,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1343},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":222,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":221,"description":504,"url":505,"body":506,"_type":1338,"_id":1339,"_source":1340,"_file":1341,"_extension":1342},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":507,"children":508,"toc":1332},"root",[509,516,521,526,565,570,601,606,636,641,656,661,667,672,678,1326],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":515,"value":525},"示例 1：",{"type":510,"tag":527,"props":528,"children":531},"pre",{"className":529,"code":530,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[532],{"type":510,"tag":533,"props":534,"children":535},"code",{"__ignoreMap":503},[536,547,556],{"type":510,"tag":537,"props":538,"children":541},"span",{"class":539,"line":540},"line",1,[542],{"type":510,"tag":537,"props":543,"children":544},{},[545],{"type":515,"value":546},"输入：nums = [1,2,3,4,5]\n",{"type":510,"tag":537,"props":548,"children":550},{"class":539,"line":549},2,[551],{"type":510,"tag":537,"props":552,"children":553},{},[554],{"type":515,"value":555},"输出：true\n",{"type":510,"tag":537,"props":557,"children":559},{"class":539,"line":558},3,[560],{"type":510,"tag":537,"props":561,"children":562},{},[563],{"type":515,"value":564},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":510,"tag":511,"props":566,"children":567},{},[568],{"type":515,"value":569},"示例 2：",{"type":510,"tag":527,"props":571,"children":573},{"className":529,"code":572,"language":515,"meta":503,"style":503},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[574],{"type":510,"tag":533,"props":575,"children":576},{"__ignoreMap":503},[577,585,593],{"type":510,"tag":537,"props":578,"children":579},{"class":539,"line":540},[580],{"type":510,"tag":537,"props":581,"children":582},{},[583],{"type":515,"value":584},"输入：nums = [5,4,3,2,1]\n",{"type":510,"tag":537,"props":586,"children":587},{"class":539,"line":549},[588],{"type":510,"tag":537,"props":589,"children":590},{},[591],{"type":515,"value":592},"输出：false\n",{"type":510,"tag":537,"props":594,"children":595},{"class":539,"line":558},[596],{"type":510,"tag":537,"props":597,"children":598},{},[599],{"type":515,"value":600},"解释：不存在满足题意的三元组\n",{"type":510,"tag":511,"props":602,"children":603},{},[604],{"type":515,"value":605},"示例 3：",{"type":510,"tag":527,"props":607,"children":609},{"className":529,"code":608,"language":515,"meta":503,"style":503},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[610],{"type":510,"tag":533,"props":611,"children":612},{"__ignoreMap":503},[613,621,628],{"type":510,"tag":537,"props":614,"children":615},{"class":539,"line":540},[616],{"type":510,"tag":537,"props":617,"children":618},{},[619],{"type":515,"value":620},"输入：nums = [2,1,5,0,4,6]\n",{"type":510,"tag":537,"props":622,"children":623},{"class":539,"line":549},[624],{"type":510,"tag":537,"props":625,"children":626},{},[627],{"type":515,"value":555},{"type":510,"tag":537,"props":629,"children":630},{"class":539,"line":558},[631],{"type":510,"tag":537,"props":632,"children":633},{},[634],{"type":515,"value":635},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":510,"tag":511,"props":637,"children":638},{},[639],{"type":515,"value":640},"提示：",{"type":510,"tag":642,"props":643,"children":644},"ul",{},[645,651],{"type":510,"tag":646,"props":647,"children":648},"li",{},[649],{"type":515,"value":650},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":510,"tag":646,"props":652,"children":653},{},[654],{"type":515,"value":655},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":510,"tag":511,"props":657,"children":658},{},[659],{"type":515,"value":660},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":510,"tag":662,"props":663,"children":665},"h2",{"id":664},"解题思路",[666],{"type":515,"value":664},{"type":510,"tag":662,"props":668,"children":670},{"id":669},"实现",[671],{"type":515,"value":669},{"type":510,"tag":673,"props":674,"children":676},"h3",{"id":675},"贪心",[677],{"type":515,"value":675},{"type":510,"tag":527,"props":679,"children":683},{"className":680,"code":681,"language":682,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[684],{"type":510,"tag":533,"props":685,"children":686},{"__ignoreMap":503},[687,696,738,768,777,823,832,871,918,954,990,1060,1108,1117,1135,1190,1199,1228,1244,1253,1282,1291,1300,1317],{"type":510,"tag":537,"props":688,"children":689},{"class":539,"line":540},[690],{"type":510,"tag":537,"props":691,"children":693},{"style":692},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[694],{"type":515,"value":695},"/**\n",{"type":510,"tag":537,"props":697,"children":698},{"class":539,"line":549},[699,704,710,716,721,727,732],{"type":510,"tag":537,"props":700,"children":701},{"style":692},[702],{"type":515,"value":703}," * ",{"type":510,"tag":537,"props":705,"children":707},{"style":706},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[708],{"type":515,"value":709},"@",{"type":510,"tag":537,"props":711,"children":713},{"style":712},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[714],{"type":515,"value":715},"param",{"type":510,"tag":537,"props":717,"children":718},{"style":706},[719],{"type":515,"value":720}," {",{"type":510,"tag":537,"props":722,"children":724},{"style":723},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[725],{"type":515,"value":726},"number[]",{"type":510,"tag":537,"props":728,"children":729},{"style":706},[730],{"type":515,"value":731},"}",{"type":510,"tag":537,"props":733,"children":735},{"style":734},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[736],{"type":515,"value":737}," nums\n",{"type":510,"tag":537,"props":739,"children":740},{"class":539,"line":558},[741,745,749,754,758,763],{"type":510,"tag":537,"props":742,"children":743},{"style":692},[744],{"type":515,"value":703},{"type":510,"tag":537,"props":746,"children":747},{"style":706},[748],{"type":515,"value":709},{"type":510,"tag":537,"props":750,"children":751},{"style":712},[752],{"type":515,"value":753},"return",{"type":510,"tag":537,"props":755,"children":756},{"style":706},[757],{"type":515,"value":720},{"type":510,"tag":537,"props":759,"children":760},{"style":723},[761],{"type":515,"value":762},"boolean",{"type":510,"tag":537,"props":764,"children":765},{"style":706},[766],{"type":515,"value":767},"}\n",{"type":510,"tag":537,"props":769,"children":771},{"class":539,"line":770},4,[772],{"type":510,"tag":537,"props":773,"children":774},{"style":692},[775],{"type":515,"value":776}," */\n",{"type":510,"tag":537,"props":778,"children":780},{"class":539,"line":779},5,[781,787,793,798,803,808,813,818],{"type":510,"tag":537,"props":782,"children":784},{"style":783},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[785],{"type":515,"value":786},"var",{"type":510,"tag":537,"props":788,"children":790},{"style":789},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[791],{"type":515,"value":792}," increasingTriplet",{"type":510,"tag":537,"props":794,"children":795},{"style":706},[796],{"type":515,"value":797}," =",{"type":510,"tag":537,"props":799,"children":800},{"style":783},[801],{"type":515,"value":802}," function",{"type":510,"tag":537,"props":804,"children":805},{"style":706},[806],{"type":515,"value":807}," (",{"type":510,"tag":537,"props":809,"children":810},{"style":734},[811],{"type":515,"value":812},"nums",{"type":510,"tag":537,"props":814,"children":815},{"style":706},[816],{"type":515,"value":817},")",{"type":510,"tag":537,"props":819,"children":820},{"style":706},[821],{"type":515,"value":822}," {\n",{"type":510,"tag":537,"props":824,"children":826},{"class":539,"line":825},6,[827],{"type":510,"tag":537,"props":828,"children":829},{"style":692},[830],{"type":515,"value":831},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":510,"tag":537,"props":833,"children":835},{"class":539,"line":834},7,[836,841,846,850,855,860,866],{"type":510,"tag":537,"props":837,"children":838},{"style":783},[839],{"type":515,"value":840},"  let",{"type":510,"tag":537,"props":842,"children":843},{"style":734},[844],{"type":515,"value":845}," len",{"type":510,"tag":537,"props":847,"children":848},{"style":706},[849],{"type":515,"value":797},{"type":510,"tag":537,"props":851,"children":852},{"style":734},[853],{"type":515,"value":854}," nums",{"type":510,"tag":537,"props":856,"children":857},{"style":706},[858],{"type":515,"value":859},".",{"type":510,"tag":537,"props":861,"children":863},{"style":862},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[864],{"type":515,"value":865},"length",{"type":510,"tag":537,"props":867,"children":868},{"style":706},[869],{"type":515,"value":870},";\n",{"type":510,"tag":537,"props":872,"children":874},{"class":539,"line":873},8,[875,880,884,889,894,900,904,909,914],{"type":510,"tag":537,"props":876,"children":877},{"style":712},[878],{"type":515,"value":879},"  if",{"type":510,"tag":537,"props":881,"children":882},{"style":706},[883],{"type":515,"value":807},{"type":510,"tag":537,"props":885,"children":886},{"style":734},[887],{"type":515,"value":888},"len",{"type":510,"tag":537,"props":890,"children":891},{"style":706},[892],{"type":515,"value":893}," \u003C",{"type":510,"tag":537,"props":895,"children":897},{"style":896},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[898],{"type":515,"value":899}," 3",{"type":510,"tag":537,"props":901,"children":902},{"style":706},[903],{"type":515,"value":817},{"type":510,"tag":537,"props":905,"children":906},{"style":712},[907],{"type":515,"value":908}," return",{"type":510,"tag":537,"props":910,"children":911},{"style":712},[912],{"type":515,"value":913}," false",{"type":510,"tag":537,"props":915,"children":916},{"style":706},[917],{"type":515,"value":870},{"type":510,"tag":537,"props":919,"children":921},{"class":539,"line":920},9,[922,926,931,935,939,944,949],{"type":510,"tag":537,"props":923,"children":924},{"style":783},[925],{"type":515,"value":840},{"type":510,"tag":537,"props":927,"children":928},{"style":734},[929],{"type":515,"value":930}," first",{"type":510,"tag":537,"props":932,"children":933},{"style":706},[934],{"type":515,"value":797},{"type":510,"tag":537,"props":936,"children":937},{"style":734},[938],{"type":515,"value":854},{"type":510,"tag":537,"props":940,"children":941},{"style":706},[942],{"type":515,"value":943},"[",{"type":510,"tag":537,"props":945,"children":946},{"style":896},[947],{"type":515,"value":948},"0",{"type":510,"tag":537,"props":950,"children":951},{"style":706},[952],{"type":515,"value":953},"];\n",{"type":510,"tag":537,"props":955,"children":957},{"class":539,"line":956},10,[958,962,967,971,976,980,986],{"type":510,"tag":537,"props":959,"children":960},{"style":783},[961],{"type":515,"value":840},{"type":510,"tag":537,"props":963,"children":964},{"style":734},[965],{"type":515,"value":966}," second",{"type":510,"tag":537,"props":968,"children":969},{"style":706},[970],{"type":515,"value":797},{"type":510,"tag":537,"props":972,"children":973},{"style":734},[974],{"type":515,"value":975}," Number",{"type":510,"tag":537,"props":977,"children":978},{"style":706},[979],{"type":515,"value":859},{"type":510,"tag":537,"props":981,"children":983},{"style":982},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[984],{"type":515,"value":985},"MAX_SAFE_INTEGER",{"type":510,"tag":537,"props":987,"children":988},{"style":706},[989],{"type":515,"value":870},{"type":510,"tag":537,"props":991,"children":993},{"class":539,"line":992},11,[994,999,1003,1008,1013,1017,1022,1027,1031,1035,1039,1043,1047,1052,1056],{"type":510,"tag":537,"props":995,"children":996},{"style":712},[997],{"type":515,"value":998},"  for",{"type":510,"tag":537,"props":1000,"children":1001},{"style":706},[1002],{"type":515,"value":807},{"type":510,"tag":537,"props":1004,"children":1005},{"style":783},[1006],{"type":515,"value":1007},"let",{"type":510,"tag":537,"props":1009,"children":1010},{"style":734},[1011],{"type":515,"value":1012}," i",{"type":510,"tag":537,"props":1014,"children":1015},{"style":706},[1016],{"type":515,"value":797},{"type":510,"tag":537,"props":1018,"children":1019},{"style":896},[1020],{"type":515,"value":1021}," 0",{"type":510,"tag":537,"props":1023,"children":1024},{"style":706},[1025],{"type":515,"value":1026},";",{"type":510,"tag":537,"props":1028,"children":1029},{"style":734},[1030],{"type":515,"value":1012},{"type":510,"tag":537,"props":1032,"children":1033},{"style":706},[1034],{"type":515,"value":893},{"type":510,"tag":537,"props":1036,"children":1037},{"style":734},[1038],{"type":515,"value":845},{"type":510,"tag":537,"props":1040,"children":1041},{"style":706},[1042],{"type":515,"value":1026},{"type":510,"tag":537,"props":1044,"children":1045},{"style":734},[1046],{"type":515,"value":1012},{"type":510,"tag":537,"props":1048,"children":1049},{"style":783},[1050],{"type":515,"value":1051},"++",{"type":510,"tag":537,"props":1053,"children":1054},{"style":706},[1055],{"type":515,"value":817},{"type":510,"tag":537,"props":1057,"children":1058},{"style":706},[1059],{"type":515,"value":822},{"type":510,"tag":537,"props":1061,"children":1063},{"class":539,"line":1062},12,[1064,1069,1073,1077,1081,1086,1091,1096,1100,1104],{"type":510,"tag":537,"props":1065,"children":1066},{"style":712},[1067],{"type":515,"value":1068},"    if",{"type":510,"tag":537,"props":1070,"children":1071},{"style":706},[1072],{"type":515,"value":807},{"type":510,"tag":537,"props":1074,"children":1075},{"style":734},[1076],{"type":515,"value":812},{"type":510,"tag":537,"props":1078,"children":1079},{"style":706},[1080],{"type":515,"value":943},{"type":510,"tag":537,"props":1082,"children":1083},{"style":734},[1084],{"type":515,"value":1085},"i",{"type":510,"tag":537,"props":1087,"children":1088},{"style":706},[1089],{"type":515,"value":1090},"]",{"type":510,"tag":537,"props":1092,"children":1093},{"style":706},[1094],{"type":515,"value":1095}," >",{"type":510,"tag":537,"props":1097,"children":1098},{"style":734},[1099],{"type":515,"value":966},{"type":510,"tag":537,"props":1101,"children":1102},{"style":706},[1103],{"type":515,"value":817},{"type":510,"tag":537,"props":1105,"children":1106},{"style":706},[1107],{"type":515,"value":822},{"type":510,"tag":537,"props":1109,"children":1111},{"class":539,"line":1110},13,[1112],{"type":510,"tag":537,"props":1113,"children":1114},{"style":692},[1115],{"type":515,"value":1116},"      // 找到第三个数\n",{"type":510,"tag":537,"props":1118,"children":1120},{"class":539,"line":1119},14,[1121,1126,1131],{"type":510,"tag":537,"props":1122,"children":1123},{"style":712},[1124],{"type":515,"value":1125},"      return",{"type":510,"tag":537,"props":1127,"children":1128},{"style":712},[1129],{"type":515,"value":1130}," true",{"type":510,"tag":537,"props":1132,"children":1133},{"style":706},[1134],{"type":515,"value":870},{"type":510,"tag":537,"props":1136,"children":1138},{"class":539,"line":1137},15,[1139,1144,1149,1154,1158,1162,1166,1170,1174,1178,1182,1186],{"type":510,"tag":537,"props":1140,"children":1141},{"style":706},[1142],{"type":515,"value":1143},"    }",{"type":510,"tag":537,"props":1145,"children":1146},{"style":712},[1147],{"type":515,"value":1148}," else",{"type":510,"tag":537,"props":1150,"children":1151},{"style":712},[1152],{"type":515,"value":1153}," if",{"type":510,"tag":537,"props":1155,"children":1156},{"style":706},[1157],{"type":515,"value":807},{"type":510,"tag":537,"props":1159,"children":1160},{"style":734},[1161],{"type":515,"value":812},{"type":510,"tag":537,"props":1163,"children":1164},{"style":706},[1165],{"type":515,"value":943},{"type":510,"tag":537,"props":1167,"children":1168},{"style":734},[1169],{"type":515,"value":1085},{"type":510,"tag":537,"props":1171,"children":1172},{"style":706},[1173],{"type":515,"value":1090},{"type":510,"tag":537,"props":1175,"children":1176},{"style":706},[1177],{"type":515,"value":1095},{"type":510,"tag":537,"props":1179,"children":1180},{"style":734},[1181],{"type":515,"value":930},{"type":510,"tag":537,"props":1183,"children":1184},{"style":706},[1185],{"type":515,"value":817},{"type":510,"tag":537,"props":1187,"children":1188},{"style":706},[1189],{"type":515,"value":822},{"type":510,"tag":537,"props":1191,"children":1193},{"class":539,"line":1192},16,[1194],{"type":510,"tag":537,"props":1195,"children":1196},{"style":692},[1197],{"type":515,"value":1198},"      // 更新第二个数\n",{"type":510,"tag":537,"props":1200,"children":1202},{"class":539,"line":1201},17,[1203,1208,1212,1216,1220,1224],{"type":510,"tag":537,"props":1204,"children":1205},{"style":734},[1206],{"type":515,"value":1207},"      second",{"type":510,"tag":537,"props":1209,"children":1210},{"style":706},[1211],{"type":515,"value":797},{"type":510,"tag":537,"props":1213,"children":1214},{"style":734},[1215],{"type":515,"value":854},{"type":510,"tag":537,"props":1217,"children":1218},{"style":706},[1219],{"type":515,"value":943},{"type":510,"tag":537,"props":1221,"children":1222},{"style":734},[1223],{"type":515,"value":1085},{"type":510,"tag":537,"props":1225,"children":1226},{"style":706},[1227],{"type":515,"value":953},{"type":510,"tag":537,"props":1229,"children":1231},{"class":539,"line":1230},18,[1232,1236,1240],{"type":510,"tag":537,"props":1233,"children":1234},{"style":706},[1235],{"type":515,"value":1143},{"type":510,"tag":537,"props":1237,"children":1238},{"style":712},[1239],{"type":515,"value":1148},{"type":510,"tag":537,"props":1241,"children":1242},{"style":706},[1243],{"type":515,"value":822},{"type":510,"tag":537,"props":1245,"children":1247},{"class":539,"line":1246},19,[1248],{"type":510,"tag":537,"props":1249,"children":1250},{"style":692},[1251],{"type":515,"value":1252},"      // 更新第一个数\n",{"type":510,"tag":537,"props":1254,"children":1256},{"class":539,"line":1255},20,[1257,1262,1266,1270,1274,1278],{"type":510,"tag":537,"props":1258,"children":1259},{"style":734},[1260],{"type":515,"value":1261},"      first",{"type":510,"tag":537,"props":1263,"children":1264},{"style":706},[1265],{"type":515,"value":797},{"type":510,"tag":537,"props":1267,"children":1268},{"style":734},[1269],{"type":515,"value":854},{"type":510,"tag":537,"props":1271,"children":1272},{"style":706},[1273],{"type":515,"value":943},{"type":510,"tag":537,"props":1275,"children":1276},{"style":734},[1277],{"type":515,"value":1085},{"type":510,"tag":537,"props":1279,"children":1280},{"style":706},[1281],{"type":515,"value":953},{"type":510,"tag":537,"props":1283,"children":1285},{"class":539,"line":1284},21,[1286],{"type":510,"tag":537,"props":1287,"children":1288},{"style":706},[1289],{"type":515,"value":1290},"    }\n",{"type":510,"tag":537,"props":1292,"children":1294},{"class":539,"line":1293},22,[1295],{"type":510,"tag":537,"props":1296,"children":1297},{"style":706},[1298],{"type":515,"value":1299},"  }\n",{"type":510,"tag":537,"props":1301,"children":1303},{"class":539,"line":1302},23,[1304,1309,1313],{"type":510,"tag":537,"props":1305,"children":1306},{"style":712},[1307],{"type":515,"value":1308},"  return",{"type":510,"tag":537,"props":1310,"children":1311},{"style":712},[1312],{"type":515,"value":913},{"type":510,"tag":537,"props":1314,"children":1315},{"style":706},[1316],{"type":515,"value":870},{"type":510,"tag":537,"props":1318,"children":1320},{"class":539,"line":1319},24,[1321],{"type":510,"tag":537,"props":1322,"children":1323},{"style":706},[1324],{"type":515,"value":1325},"};\n",{"type":510,"tag":1327,"props":1328,"children":1329},"style",{},[1330],{"type":515,"value":1331},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":779,"depth":779,"links":1333},[1334,1335],{"id":664,"depth":549,"text":664},{"id":669,"depth":549,"text":669,"children":1336},[1337],{"id":675,"depth":558,"text":675},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1344,1346],{"_path":219,"title":218,"description":1345},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":225,"title":224,"description":1347},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1714054339415]