[{"data":1,"prerenderedAt":1277},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":452,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1272},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":213,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":212,"description":456,"url":457,"body":458,"_type":1267,"_id":1268,"_source":1269,"_file":1270,"_extension":1271},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":459,"children":460,"toc":1261},"root",[461,468,473,478,517,522,553,558,588,593,608,613,619,624,630,1255],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":462,"tag":463,"props":474,"children":475},{},[476],{"type":467,"value":477},"示例 1：",{"type":462,"tag":479,"props":480,"children":483},"pre",{"className":481,"code":482,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[484],{"type":462,"tag":485,"props":486,"children":487},"code",{"__ignoreMap":455},[488,499,508],{"type":462,"tag":489,"props":490,"children":493},"span",{"class":491,"line":492},"line",1,[494],{"type":462,"tag":489,"props":495,"children":496},{},[497],{"type":467,"value":498},"输入：nums = [1,2,3,4,5]\n",{"type":462,"tag":489,"props":500,"children":502},{"class":491,"line":501},2,[503],{"type":462,"tag":489,"props":504,"children":505},{},[506],{"type":467,"value":507},"输出：true\n",{"type":462,"tag":489,"props":509,"children":511},{"class":491,"line":510},3,[512],{"type":462,"tag":489,"props":513,"children":514},{},[515],{"type":467,"value":516},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":462,"tag":463,"props":518,"children":519},{},[520],{"type":467,"value":521},"示例 2：",{"type":462,"tag":479,"props":523,"children":525},{"className":481,"code":524,"language":467,"meta":455,"style":455},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[526],{"type":462,"tag":485,"props":527,"children":528},{"__ignoreMap":455},[529,537,545],{"type":462,"tag":489,"props":530,"children":531},{"class":491,"line":492},[532],{"type":462,"tag":489,"props":533,"children":534},{},[535],{"type":467,"value":536},"输入：nums = [5,4,3,2,1]\n",{"type":462,"tag":489,"props":538,"children":539},{"class":491,"line":501},[540],{"type":462,"tag":489,"props":541,"children":542},{},[543],{"type":467,"value":544},"输出：false\n",{"type":462,"tag":489,"props":546,"children":547},{"class":491,"line":510},[548],{"type":462,"tag":489,"props":549,"children":550},{},[551],{"type":467,"value":552},"解释：不存在满足题意的三元组\n",{"type":462,"tag":463,"props":554,"children":555},{},[556],{"type":467,"value":557},"示例 3：",{"type":462,"tag":479,"props":559,"children":561},{"className":481,"code":560,"language":467,"meta":455,"style":455},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[562],{"type":462,"tag":485,"props":563,"children":564},{"__ignoreMap":455},[565,573,580],{"type":462,"tag":489,"props":566,"children":567},{"class":491,"line":492},[568],{"type":462,"tag":489,"props":569,"children":570},{},[571],{"type":467,"value":572},"输入：nums = [2,1,5,0,4,6]\n",{"type":462,"tag":489,"props":574,"children":575},{"class":491,"line":501},[576],{"type":462,"tag":489,"props":577,"children":578},{},[579],{"type":467,"value":507},{"type":462,"tag":489,"props":581,"children":582},{"class":491,"line":510},[583],{"type":462,"tag":489,"props":584,"children":585},{},[586],{"type":467,"value":587},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":462,"tag":463,"props":589,"children":590},{},[591],{"type":467,"value":592},"提示：",{"type":462,"tag":594,"props":595,"children":596},"ul",{},[597,603],{"type":462,"tag":598,"props":599,"children":600},"li",{},[601],{"type":467,"value":602},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":462,"tag":598,"props":604,"children":605},{},[606],{"type":467,"value":607},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":462,"tag":463,"props":609,"children":610},{},[611],{"type":467,"value":612},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":462,"tag":614,"props":615,"children":617},"h2",{"id":616},"解题思路",[618],{"type":467,"value":616},{"type":462,"tag":614,"props":620,"children":622},{"id":621},"实现",[623],{"type":467,"value":621},{"type":462,"tag":625,"props":626,"children":628},"h3",{"id":627},"贪心",[629],{"type":467,"value":627},{"type":462,"tag":479,"props":631,"children":635},{"className":632,"code":633,"language":634,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[636],{"type":462,"tag":485,"props":637,"children":638},{"__ignoreMap":455},[639,648,674,691,700,744,753,794,843,883,918,984,1028,1037,1055,1106,1115,1148,1165,1174,1207,1216,1225,1242],{"type":462,"tag":489,"props":640,"children":641},{"class":491,"line":492},[642],{"type":462,"tag":489,"props":643,"children":645},{"style":644},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[646],{"type":467,"value":647},"/**\n",{"type":462,"tag":489,"props":649,"children":650},{"class":491,"line":501},[651,656,662,668],{"type":462,"tag":489,"props":652,"children":653},{"style":644},[654],{"type":467,"value":655}," * ",{"type":462,"tag":489,"props":657,"children":659},{"style":658},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[660],{"type":467,"value":661},"@param",{"type":462,"tag":489,"props":663,"children":665},{"style":664},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[666],{"type":467,"value":667}," {number[]}",{"type":462,"tag":489,"props":669,"children":671},{"style":670},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[672],{"type":467,"value":673}," nums\n",{"type":462,"tag":489,"props":675,"children":676},{"class":491,"line":510},[677,681,686],{"type":462,"tag":489,"props":678,"children":679},{"style":644},[680],{"type":467,"value":655},{"type":462,"tag":489,"props":682,"children":683},{"style":658},[684],{"type":467,"value":685},"@return",{"type":462,"tag":489,"props":687,"children":688},{"style":664},[689],{"type":467,"value":690}," {boolean}\n",{"type":462,"tag":489,"props":692,"children":694},{"class":491,"line":693},4,[695],{"type":462,"tag":489,"props":696,"children":697},{"style":644},[698],{"type":467,"value":699}," */\n",{"type":462,"tag":489,"props":701,"children":703},{"class":491,"line":702},5,[704,710,716,722,727,733,739],{"type":462,"tag":489,"props":705,"children":707},{"style":706},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[708],{"type":467,"value":709},"var",{"type":462,"tag":489,"props":711,"children":713},{"style":712},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[714],{"type":467,"value":715}," increasingTriplet",{"type":462,"tag":489,"props":717,"children":719},{"style":718},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[720],{"type":467,"value":721}," =",{"type":462,"tag":489,"props":723,"children":724},{"style":706},[725],{"type":467,"value":726}," function",{"type":462,"tag":489,"props":728,"children":730},{"style":729},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[731],{"type":467,"value":732}," (",{"type":462,"tag":489,"props":734,"children":736},{"style":735},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[737],{"type":467,"value":738},"nums",{"type":462,"tag":489,"props":740,"children":741},{"style":729},[742],{"type":467,"value":743},") {\n",{"type":462,"tag":489,"props":745,"children":747},{"class":491,"line":746},6,[748],{"type":462,"tag":489,"props":749,"children":750},{"style":644},[751],{"type":467,"value":752},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":462,"tag":489,"props":754,"children":756},{"class":491,"line":755},7,[757,762,768,772,777,783,788],{"type":462,"tag":489,"props":758,"children":759},{"style":706},[760],{"type":467,"value":761},"  let",{"type":462,"tag":489,"props":763,"children":765},{"style":764},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[766],{"type":467,"value":767}," len",{"type":462,"tag":489,"props":769,"children":770},{"style":718},[771],{"type":467,"value":721},{"type":462,"tag":489,"props":773,"children":774},{"style":764},[775],{"type":467,"value":776}," nums",{"type":462,"tag":489,"props":778,"children":780},{"style":779},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[781],{"type":467,"value":782},".",{"type":462,"tag":489,"props":784,"children":785},{"style":729},[786],{"type":467,"value":787},"length",{"type":462,"tag":489,"props":789,"children":791},{"style":790},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[792],{"type":467,"value":793},";\n",{"type":462,"tag":489,"props":795,"children":797},{"class":491,"line":796},8,[798,804,808,813,818,824,829,834,839],{"type":462,"tag":489,"props":799,"children":801},{"style":800},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[802],{"type":467,"value":803},"  if",{"type":462,"tag":489,"props":805,"children":806},{"style":729},[807],{"type":467,"value":732},{"type":462,"tag":489,"props":809,"children":810},{"style":764},[811],{"type":467,"value":812},"len",{"type":462,"tag":489,"props":814,"children":815},{"style":718},[816],{"type":467,"value":817}," \u003C",{"type":462,"tag":489,"props":819,"children":821},{"style":820},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[822],{"type":467,"value":823}," 3",{"type":462,"tag":489,"props":825,"children":826},{"style":729},[827],{"type":467,"value":828},") ",{"type":462,"tag":489,"props":830,"children":831},{"style":800},[832],{"type":467,"value":833},"return",{"type":462,"tag":489,"props":835,"children":836},{"style":820},[837],{"type":467,"value":838}," false",{"type":462,"tag":489,"props":840,"children":841},{"style":790},[842],{"type":467,"value":793},{"type":462,"tag":489,"props":844,"children":846},{"class":491,"line":845},9,[847,851,856,860,864,869,874,879],{"type":462,"tag":489,"props":848,"children":849},{"style":706},[850],{"type":467,"value":761},{"type":462,"tag":489,"props":852,"children":853},{"style":764},[854],{"type":467,"value":855}," first",{"type":462,"tag":489,"props":857,"children":858},{"style":718},[859],{"type":467,"value":721},{"type":462,"tag":489,"props":861,"children":862},{"style":764},[863],{"type":467,"value":776},{"type":462,"tag":489,"props":865,"children":866},{"style":729},[867],{"type":467,"value":868},"[",{"type":462,"tag":489,"props":870,"children":871},{"style":820},[872],{"type":467,"value":873},"0",{"type":462,"tag":489,"props":875,"children":876},{"style":729},[877],{"type":467,"value":878},"]",{"type":462,"tag":489,"props":880,"children":881},{"style":790},[882],{"type":467,"value":793},{"type":462,"tag":489,"props":884,"children":886},{"class":491,"line":885},10,[887,891,896,900,905,909,914],{"type":462,"tag":489,"props":888,"children":889},{"style":706},[890],{"type":467,"value":761},{"type":462,"tag":489,"props":892,"children":893},{"style":764},[894],{"type":467,"value":895}," second",{"type":462,"tag":489,"props":897,"children":898},{"style":718},[899],{"type":467,"value":721},{"type":462,"tag":489,"props":901,"children":902},{"style":764},[903],{"type":467,"value":904}," Number",{"type":462,"tag":489,"props":906,"children":907},{"style":779},[908],{"type":467,"value":782},{"type":462,"tag":489,"props":910,"children":911},{"style":729},[912],{"type":467,"value":913},"MAX_SAFE_INTEGER",{"type":462,"tag":489,"props":915,"children":916},{"style":790},[917],{"type":467,"value":793},{"type":462,"tag":489,"props":919,"children":921},{"class":491,"line":920},11,[922,927,931,936,941,945,950,955,959,963,967,971,975,980],{"type":462,"tag":489,"props":923,"children":924},{"style":800},[925],{"type":467,"value":926},"  for",{"type":462,"tag":489,"props":928,"children":929},{"style":729},[930],{"type":467,"value":732},{"type":462,"tag":489,"props":932,"children":933},{"style":706},[934],{"type":467,"value":935},"let",{"type":462,"tag":489,"props":937,"children":938},{"style":764},[939],{"type":467,"value":940}," i",{"type":462,"tag":489,"props":942,"children":943},{"style":718},[944],{"type":467,"value":721},{"type":462,"tag":489,"props":946,"children":947},{"style":820},[948],{"type":467,"value":949}," 0",{"type":462,"tag":489,"props":951,"children":952},{"style":790},[953],{"type":467,"value":954},";",{"type":462,"tag":489,"props":956,"children":957},{"style":764},[958],{"type":467,"value":940},{"type":462,"tag":489,"props":960,"children":961},{"style":718},[962],{"type":467,"value":817},{"type":462,"tag":489,"props":964,"children":965},{"style":764},[966],{"type":467,"value":767},{"type":462,"tag":489,"props":968,"children":969},{"style":790},[970],{"type":467,"value":954},{"type":462,"tag":489,"props":972,"children":973},{"style":764},[974],{"type":467,"value":940},{"type":462,"tag":489,"props":976,"children":977},{"style":718},[978],{"type":467,"value":979},"++",{"type":462,"tag":489,"props":981,"children":982},{"style":729},[983],{"type":467,"value":743},{"type":462,"tag":489,"props":985,"children":987},{"class":491,"line":986},12,[988,993,997,1001,1005,1010,1015,1020,1024],{"type":462,"tag":489,"props":989,"children":990},{"style":800},[991],{"type":467,"value":992},"    if",{"type":462,"tag":489,"props":994,"children":995},{"style":729},[996],{"type":467,"value":732},{"type":462,"tag":489,"props":998,"children":999},{"style":764},[1000],{"type":467,"value":738},{"type":462,"tag":489,"props":1002,"children":1003},{"style":729},[1004],{"type":467,"value":868},{"type":462,"tag":489,"props":1006,"children":1007},{"style":764},[1008],{"type":467,"value":1009},"i",{"type":462,"tag":489,"props":1011,"children":1012},{"style":729},[1013],{"type":467,"value":1014},"] ",{"type":462,"tag":489,"props":1016,"children":1017},{"style":718},[1018],{"type":467,"value":1019},">",{"type":462,"tag":489,"props":1021,"children":1022},{"style":764},[1023],{"type":467,"value":895},{"type":462,"tag":489,"props":1025,"children":1026},{"style":729},[1027],{"type":467,"value":743},{"type":462,"tag":489,"props":1029,"children":1031},{"class":491,"line":1030},13,[1032],{"type":462,"tag":489,"props":1033,"children":1034},{"style":644},[1035],{"type":467,"value":1036},"      // 找到第三个数\n",{"type":462,"tag":489,"props":1038,"children":1040},{"class":491,"line":1039},14,[1041,1046,1051],{"type":462,"tag":489,"props":1042,"children":1043},{"style":800},[1044],{"type":467,"value":1045},"      return",{"type":462,"tag":489,"props":1047,"children":1048},{"style":820},[1049],{"type":467,"value":1050}," true",{"type":462,"tag":489,"props":1052,"children":1053},{"style":790},[1054],{"type":467,"value":793},{"type":462,"tag":489,"props":1056,"children":1058},{"class":491,"line":1057},15,[1059,1064,1069,1074,1078,1082,1086,1090,1094,1098,1102],{"type":462,"tag":489,"props":1060,"children":1061},{"style":729},[1062],{"type":467,"value":1063},"    } ",{"type":462,"tag":489,"props":1065,"children":1066},{"style":800},[1067],{"type":467,"value":1068},"else",{"type":462,"tag":489,"props":1070,"children":1071},{"style":800},[1072],{"type":467,"value":1073}," if",{"type":462,"tag":489,"props":1075,"children":1076},{"style":729},[1077],{"type":467,"value":732},{"type":462,"tag":489,"props":1079,"children":1080},{"style":764},[1081],{"type":467,"value":738},{"type":462,"tag":489,"props":1083,"children":1084},{"style":729},[1085],{"type":467,"value":868},{"type":462,"tag":489,"props":1087,"children":1088},{"style":764},[1089],{"type":467,"value":1009},{"type":462,"tag":489,"props":1091,"children":1092},{"style":729},[1093],{"type":467,"value":1014},{"type":462,"tag":489,"props":1095,"children":1096},{"style":718},[1097],{"type":467,"value":1019},{"type":462,"tag":489,"props":1099,"children":1100},{"style":764},[1101],{"type":467,"value":855},{"type":462,"tag":489,"props":1103,"children":1104},{"style":729},[1105],{"type":467,"value":743},{"type":462,"tag":489,"props":1107,"children":1109},{"class":491,"line":1108},16,[1110],{"type":462,"tag":489,"props":1111,"children":1112},{"style":644},[1113],{"type":467,"value":1114},"      // 更新第二个数\n",{"type":462,"tag":489,"props":1116,"children":1118},{"class":491,"line":1117},17,[1119,1124,1128,1132,1136,1140,1144],{"type":462,"tag":489,"props":1120,"children":1121},{"style":764},[1122],{"type":467,"value":1123},"      second",{"type":462,"tag":489,"props":1125,"children":1126},{"style":718},[1127],{"type":467,"value":721},{"type":462,"tag":489,"props":1129,"children":1130},{"style":764},[1131],{"type":467,"value":776},{"type":462,"tag":489,"props":1133,"children":1134},{"style":729},[1135],{"type":467,"value":868},{"type":462,"tag":489,"props":1137,"children":1138},{"style":764},[1139],{"type":467,"value":1009},{"type":462,"tag":489,"props":1141,"children":1142},{"style":729},[1143],{"type":467,"value":878},{"type":462,"tag":489,"props":1145,"children":1146},{"style":790},[1147],{"type":467,"value":793},{"type":462,"tag":489,"props":1149,"children":1151},{"class":491,"line":1150},18,[1152,1156,1160],{"type":462,"tag":489,"props":1153,"children":1154},{"style":729},[1155],{"type":467,"value":1063},{"type":462,"tag":489,"props":1157,"children":1158},{"style":800},[1159],{"type":467,"value":1068},{"type":462,"tag":489,"props":1161,"children":1162},{"style":729},[1163],{"type":467,"value":1164}," {\n",{"type":462,"tag":489,"props":1166,"children":1168},{"class":491,"line":1167},19,[1169],{"type":462,"tag":489,"props":1170,"children":1171},{"style":644},[1172],{"type":467,"value":1173},"      // 更新第一个数\n",{"type":462,"tag":489,"props":1175,"children":1177},{"class":491,"line":1176},20,[1178,1183,1187,1191,1195,1199,1203],{"type":462,"tag":489,"props":1179,"children":1180},{"style":764},[1181],{"type":467,"value":1182},"      first",{"type":462,"tag":489,"props":1184,"children":1185},{"style":718},[1186],{"type":467,"value":721},{"type":462,"tag":489,"props":1188,"children":1189},{"style":764},[1190],{"type":467,"value":776},{"type":462,"tag":489,"props":1192,"children":1193},{"style":729},[1194],{"type":467,"value":868},{"type":462,"tag":489,"props":1196,"children":1197},{"style":764},[1198],{"type":467,"value":1009},{"type":462,"tag":489,"props":1200,"children":1201},{"style":729},[1202],{"type":467,"value":878},{"type":462,"tag":489,"props":1204,"children":1205},{"style":790},[1206],{"type":467,"value":793},{"type":462,"tag":489,"props":1208,"children":1210},{"class":491,"line":1209},21,[1211],{"type":462,"tag":489,"props":1212,"children":1213},{"style":729},[1214],{"type":467,"value":1215},"    }\n",{"type":462,"tag":489,"props":1217,"children":1219},{"class":491,"line":1218},22,[1220],{"type":462,"tag":489,"props":1221,"children":1222},{"style":729},[1223],{"type":467,"value":1224},"  }\n",{"type":462,"tag":489,"props":1226,"children":1228},{"class":491,"line":1227},23,[1229,1234,1238],{"type":462,"tag":489,"props":1230,"children":1231},{"style":800},[1232],{"type":467,"value":1233},"  return",{"type":462,"tag":489,"props":1235,"children":1236},{"style":820},[1237],{"type":467,"value":838},{"type":462,"tag":489,"props":1239,"children":1240},{"style":790},[1241],{"type":467,"value":793},{"type":462,"tag":489,"props":1243,"children":1245},{"class":491,"line":1244},24,[1246,1251],{"type":462,"tag":489,"props":1247,"children":1248},{"style":729},[1249],{"type":467,"value":1250},"}",{"type":462,"tag":489,"props":1252,"children":1253},{"style":790},[1254],{"type":467,"value":793},{"type":462,"tag":1256,"props":1257,"children":1258},"style",{},[1259],{"type":467,"value":1260},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":702,"depth":702,"links":1262},[1263,1264],{"id":616,"depth":501,"text":616},{"id":621,"depth":501,"text":621,"children":1265},[1266],{"id":627,"depth":510,"text":627},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1273,1275],{"_path":210,"title":209,"description":1274},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":216,"title":215,"description":1276},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1713457423605]