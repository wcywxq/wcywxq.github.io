[{"data":1,"prerenderedAt":1407},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":559,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1402},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":225,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":224,"description":563,"url":564,"body":565,"_type":1397,"_id":1398,"_source":1399,"_file":1400,"_extension":1401},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":566,"children":567,"toc":1391},"root",[568,575,580,585,624,629,660,665,695,700,715,720,726,731,737,1385],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"示例 1：",{"type":569,"tag":586,"props":587,"children":590},"pre",{"className":588,"code":589,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[591],{"type":569,"tag":592,"props":593,"children":594},"code",{"__ignoreMap":562},[595,606,615],{"type":569,"tag":596,"props":597,"children":600},"span",{"class":598,"line":599},"line",1,[601],{"type":569,"tag":596,"props":602,"children":603},{},[604],{"type":574,"value":605},"输入：nums = [1,2,3,4,5]\n",{"type":569,"tag":596,"props":607,"children":609},{"class":598,"line":608},2,[610],{"type":569,"tag":596,"props":611,"children":612},{},[613],{"type":574,"value":614},"输出：true\n",{"type":569,"tag":596,"props":616,"children":618},{"class":598,"line":617},3,[619],{"type":569,"tag":596,"props":620,"children":621},{},[622],{"type":574,"value":623},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":569,"tag":570,"props":625,"children":626},{},[627],{"type":574,"value":628},"示例 2：",{"type":569,"tag":586,"props":630,"children":632},{"className":588,"code":631,"language":574,"meta":562,"style":562},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[633],{"type":569,"tag":592,"props":634,"children":635},{"__ignoreMap":562},[636,644,652],{"type":569,"tag":596,"props":637,"children":638},{"class":598,"line":599},[639],{"type":569,"tag":596,"props":640,"children":641},{},[642],{"type":574,"value":643},"输入：nums = [5,4,3,2,1]\n",{"type":569,"tag":596,"props":645,"children":646},{"class":598,"line":608},[647],{"type":569,"tag":596,"props":648,"children":649},{},[650],{"type":574,"value":651},"输出：false\n",{"type":569,"tag":596,"props":653,"children":654},{"class":598,"line":617},[655],{"type":569,"tag":596,"props":656,"children":657},{},[658],{"type":574,"value":659},"解释：不存在满足题意的三元组\n",{"type":569,"tag":570,"props":661,"children":662},{},[663],{"type":574,"value":664},"示例 3：",{"type":569,"tag":586,"props":666,"children":668},{"className":588,"code":667,"language":574,"meta":562,"style":562},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[669],{"type":569,"tag":592,"props":670,"children":671},{"__ignoreMap":562},[672,680,687],{"type":569,"tag":596,"props":673,"children":674},{"class":598,"line":599},[675],{"type":569,"tag":596,"props":676,"children":677},{},[678],{"type":574,"value":679},"输入：nums = [2,1,5,0,4,6]\n",{"type":569,"tag":596,"props":681,"children":682},{"class":598,"line":608},[683],{"type":569,"tag":596,"props":684,"children":685},{},[686],{"type":574,"value":614},{"type":569,"tag":596,"props":688,"children":689},{"class":598,"line":617},[690],{"type":569,"tag":596,"props":691,"children":692},{},[693],{"type":574,"value":694},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":569,"tag":570,"props":696,"children":697},{},[698],{"type":574,"value":699},"提示：",{"type":569,"tag":701,"props":702,"children":703},"ul",{},[704,710],{"type":569,"tag":705,"props":706,"children":707},"li",{},[708],{"type":574,"value":709},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":569,"tag":705,"props":711,"children":712},{},[713],{"type":574,"value":714},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":569,"tag":570,"props":716,"children":717},{},[718],{"type":574,"value":719},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":569,"tag":721,"props":722,"children":724},"h2",{"id":723},"解题思路",[725],{"type":574,"value":723},{"type":569,"tag":721,"props":727,"children":729},{"id":728},"实现",[730],{"type":574,"value":728},{"type":569,"tag":732,"props":733,"children":735},"h3",{"id":734},"贪心",[736],{"type":574,"value":734},{"type":569,"tag":586,"props":738,"children":742},{"className":739,"code":740,"language":741,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[743],{"type":569,"tag":592,"props":744,"children":745},{"__ignoreMap":562},[746,755,797,827,836,882,891,930,977,1013,1049,1119,1167,1176,1194,1249,1258,1287,1303,1312,1341,1350,1359,1376],{"type":569,"tag":596,"props":747,"children":748},{"class":598,"line":599},[749],{"type":569,"tag":596,"props":750,"children":752},{"style":751},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[753],{"type":574,"value":754},"/**\n",{"type":569,"tag":596,"props":756,"children":757},{"class":598,"line":608},[758,763,769,775,780,786,791],{"type":569,"tag":596,"props":759,"children":760},{"style":751},[761],{"type":574,"value":762}," * ",{"type":569,"tag":596,"props":764,"children":766},{"style":765},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[767],{"type":574,"value":768},"@",{"type":569,"tag":596,"props":770,"children":772},{"style":771},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[773],{"type":574,"value":774},"param",{"type":569,"tag":596,"props":776,"children":777},{"style":765},[778],{"type":574,"value":779}," {",{"type":569,"tag":596,"props":781,"children":783},{"style":782},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[784],{"type":574,"value":785},"number[]",{"type":569,"tag":596,"props":787,"children":788},{"style":765},[789],{"type":574,"value":790},"}",{"type":569,"tag":596,"props":792,"children":794},{"style":793},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[795],{"type":574,"value":796}," nums\n",{"type":569,"tag":596,"props":798,"children":799},{"class":598,"line":617},[800,804,808,813,817,822],{"type":569,"tag":596,"props":801,"children":802},{"style":751},[803],{"type":574,"value":762},{"type":569,"tag":596,"props":805,"children":806},{"style":765},[807],{"type":574,"value":768},{"type":569,"tag":596,"props":809,"children":810},{"style":771},[811],{"type":574,"value":812},"return",{"type":569,"tag":596,"props":814,"children":815},{"style":765},[816],{"type":574,"value":779},{"type":569,"tag":596,"props":818,"children":819},{"style":782},[820],{"type":574,"value":821},"boolean",{"type":569,"tag":596,"props":823,"children":824},{"style":765},[825],{"type":574,"value":826},"}\n",{"type":569,"tag":596,"props":828,"children":830},{"class":598,"line":829},4,[831],{"type":569,"tag":596,"props":832,"children":833},{"style":751},[834],{"type":574,"value":835}," */\n",{"type":569,"tag":596,"props":837,"children":839},{"class":598,"line":838},5,[840,846,852,857,862,867,872,877],{"type":569,"tag":596,"props":841,"children":843},{"style":842},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[844],{"type":574,"value":845},"var",{"type":569,"tag":596,"props":847,"children":849},{"style":848},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[850],{"type":574,"value":851}," increasingTriplet",{"type":569,"tag":596,"props":853,"children":854},{"style":765},[855],{"type":574,"value":856}," =",{"type":569,"tag":596,"props":858,"children":859},{"style":842},[860],{"type":574,"value":861}," function",{"type":569,"tag":596,"props":863,"children":864},{"style":765},[865],{"type":574,"value":866}," (",{"type":569,"tag":596,"props":868,"children":869},{"style":793},[870],{"type":574,"value":871},"nums",{"type":569,"tag":596,"props":873,"children":874},{"style":765},[875],{"type":574,"value":876},")",{"type":569,"tag":596,"props":878,"children":879},{"style":765},[880],{"type":574,"value":881}," {\n",{"type":569,"tag":596,"props":883,"children":885},{"class":598,"line":884},6,[886],{"type":569,"tag":596,"props":887,"children":888},{"style":751},[889],{"type":574,"value":890},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":569,"tag":596,"props":892,"children":894},{"class":598,"line":893},7,[895,900,905,909,914,919,925],{"type":569,"tag":596,"props":896,"children":897},{"style":842},[898],{"type":574,"value":899},"  let",{"type":569,"tag":596,"props":901,"children":902},{"style":793},[903],{"type":574,"value":904}," len",{"type":569,"tag":596,"props":906,"children":907},{"style":765},[908],{"type":574,"value":856},{"type":569,"tag":596,"props":910,"children":911},{"style":793},[912],{"type":574,"value":913}," nums",{"type":569,"tag":596,"props":915,"children":916},{"style":765},[917],{"type":574,"value":918},".",{"type":569,"tag":596,"props":920,"children":922},{"style":921},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[923],{"type":574,"value":924},"length",{"type":569,"tag":596,"props":926,"children":927},{"style":765},[928],{"type":574,"value":929},";\n",{"type":569,"tag":596,"props":931,"children":933},{"class":598,"line":932},8,[934,939,943,948,953,959,963,968,973],{"type":569,"tag":596,"props":935,"children":936},{"style":771},[937],{"type":574,"value":938},"  if",{"type":569,"tag":596,"props":940,"children":941},{"style":765},[942],{"type":574,"value":866},{"type":569,"tag":596,"props":944,"children":945},{"style":793},[946],{"type":574,"value":947},"len",{"type":569,"tag":596,"props":949,"children":950},{"style":765},[951],{"type":574,"value":952}," \u003C",{"type":569,"tag":596,"props":954,"children":956},{"style":955},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[957],{"type":574,"value":958}," 3",{"type":569,"tag":596,"props":960,"children":961},{"style":765},[962],{"type":574,"value":876},{"type":569,"tag":596,"props":964,"children":965},{"style":771},[966],{"type":574,"value":967}," return",{"type":569,"tag":596,"props":969,"children":970},{"style":771},[971],{"type":574,"value":972}," false",{"type":569,"tag":596,"props":974,"children":975},{"style":765},[976],{"type":574,"value":929},{"type":569,"tag":596,"props":978,"children":980},{"class":598,"line":979},9,[981,985,990,994,998,1003,1008],{"type":569,"tag":596,"props":982,"children":983},{"style":842},[984],{"type":574,"value":899},{"type":569,"tag":596,"props":986,"children":987},{"style":793},[988],{"type":574,"value":989}," first",{"type":569,"tag":596,"props":991,"children":992},{"style":765},[993],{"type":574,"value":856},{"type":569,"tag":596,"props":995,"children":996},{"style":793},[997],{"type":574,"value":913},{"type":569,"tag":596,"props":999,"children":1000},{"style":765},[1001],{"type":574,"value":1002},"[",{"type":569,"tag":596,"props":1004,"children":1005},{"style":955},[1006],{"type":574,"value":1007},"0",{"type":569,"tag":596,"props":1009,"children":1010},{"style":765},[1011],{"type":574,"value":1012},"];\n",{"type":569,"tag":596,"props":1014,"children":1016},{"class":598,"line":1015},10,[1017,1021,1026,1030,1035,1039,1045],{"type":569,"tag":596,"props":1018,"children":1019},{"style":842},[1020],{"type":574,"value":899},{"type":569,"tag":596,"props":1022,"children":1023},{"style":793},[1024],{"type":574,"value":1025}," second",{"type":569,"tag":596,"props":1027,"children":1028},{"style":765},[1029],{"type":574,"value":856},{"type":569,"tag":596,"props":1031,"children":1032},{"style":793},[1033],{"type":574,"value":1034}," Number",{"type":569,"tag":596,"props":1036,"children":1037},{"style":765},[1038],{"type":574,"value":918},{"type":569,"tag":596,"props":1040,"children":1042},{"style":1041},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[1043],{"type":574,"value":1044},"MAX_SAFE_INTEGER",{"type":569,"tag":596,"props":1046,"children":1047},{"style":765},[1048],{"type":574,"value":929},{"type":569,"tag":596,"props":1050,"children":1052},{"class":598,"line":1051},11,[1053,1058,1062,1067,1072,1076,1081,1086,1090,1094,1098,1102,1106,1111,1115],{"type":569,"tag":596,"props":1054,"children":1055},{"style":771},[1056],{"type":574,"value":1057},"  for",{"type":569,"tag":596,"props":1059,"children":1060},{"style":765},[1061],{"type":574,"value":866},{"type":569,"tag":596,"props":1063,"children":1064},{"style":842},[1065],{"type":574,"value":1066},"let",{"type":569,"tag":596,"props":1068,"children":1069},{"style":793},[1070],{"type":574,"value":1071}," i",{"type":569,"tag":596,"props":1073,"children":1074},{"style":765},[1075],{"type":574,"value":856},{"type":569,"tag":596,"props":1077,"children":1078},{"style":955},[1079],{"type":574,"value":1080}," 0",{"type":569,"tag":596,"props":1082,"children":1083},{"style":765},[1084],{"type":574,"value":1085},";",{"type":569,"tag":596,"props":1087,"children":1088},{"style":793},[1089],{"type":574,"value":1071},{"type":569,"tag":596,"props":1091,"children":1092},{"style":765},[1093],{"type":574,"value":952},{"type":569,"tag":596,"props":1095,"children":1096},{"style":793},[1097],{"type":574,"value":904},{"type":569,"tag":596,"props":1099,"children":1100},{"style":765},[1101],{"type":574,"value":1085},{"type":569,"tag":596,"props":1103,"children":1104},{"style":793},[1105],{"type":574,"value":1071},{"type":569,"tag":596,"props":1107,"children":1108},{"style":842},[1109],{"type":574,"value":1110},"++",{"type":569,"tag":596,"props":1112,"children":1113},{"style":765},[1114],{"type":574,"value":876},{"type":569,"tag":596,"props":1116,"children":1117},{"style":765},[1118],{"type":574,"value":881},{"type":569,"tag":596,"props":1120,"children":1122},{"class":598,"line":1121},12,[1123,1128,1132,1136,1140,1145,1150,1155,1159,1163],{"type":569,"tag":596,"props":1124,"children":1125},{"style":771},[1126],{"type":574,"value":1127},"    if",{"type":569,"tag":596,"props":1129,"children":1130},{"style":765},[1131],{"type":574,"value":866},{"type":569,"tag":596,"props":1133,"children":1134},{"style":793},[1135],{"type":574,"value":871},{"type":569,"tag":596,"props":1137,"children":1138},{"style":765},[1139],{"type":574,"value":1002},{"type":569,"tag":596,"props":1141,"children":1142},{"style":793},[1143],{"type":574,"value":1144},"i",{"type":569,"tag":596,"props":1146,"children":1147},{"style":765},[1148],{"type":574,"value":1149},"]",{"type":569,"tag":596,"props":1151,"children":1152},{"style":765},[1153],{"type":574,"value":1154}," >",{"type":569,"tag":596,"props":1156,"children":1157},{"style":793},[1158],{"type":574,"value":1025},{"type":569,"tag":596,"props":1160,"children":1161},{"style":765},[1162],{"type":574,"value":876},{"type":569,"tag":596,"props":1164,"children":1165},{"style":765},[1166],{"type":574,"value":881},{"type":569,"tag":596,"props":1168,"children":1170},{"class":598,"line":1169},13,[1171],{"type":569,"tag":596,"props":1172,"children":1173},{"style":751},[1174],{"type":574,"value":1175},"      // 找到第三个数\n",{"type":569,"tag":596,"props":1177,"children":1179},{"class":598,"line":1178},14,[1180,1185,1190],{"type":569,"tag":596,"props":1181,"children":1182},{"style":771},[1183],{"type":574,"value":1184},"      return",{"type":569,"tag":596,"props":1186,"children":1187},{"style":771},[1188],{"type":574,"value":1189}," true",{"type":569,"tag":596,"props":1191,"children":1192},{"style":765},[1193],{"type":574,"value":929},{"type":569,"tag":596,"props":1195,"children":1197},{"class":598,"line":1196},15,[1198,1203,1208,1213,1217,1221,1225,1229,1233,1237,1241,1245],{"type":569,"tag":596,"props":1199,"children":1200},{"style":765},[1201],{"type":574,"value":1202},"    }",{"type":569,"tag":596,"props":1204,"children":1205},{"style":771},[1206],{"type":574,"value":1207}," else",{"type":569,"tag":596,"props":1209,"children":1210},{"style":771},[1211],{"type":574,"value":1212}," if",{"type":569,"tag":596,"props":1214,"children":1215},{"style":765},[1216],{"type":574,"value":866},{"type":569,"tag":596,"props":1218,"children":1219},{"style":793},[1220],{"type":574,"value":871},{"type":569,"tag":596,"props":1222,"children":1223},{"style":765},[1224],{"type":574,"value":1002},{"type":569,"tag":596,"props":1226,"children":1227},{"style":793},[1228],{"type":574,"value":1144},{"type":569,"tag":596,"props":1230,"children":1231},{"style":765},[1232],{"type":574,"value":1149},{"type":569,"tag":596,"props":1234,"children":1235},{"style":765},[1236],{"type":574,"value":1154},{"type":569,"tag":596,"props":1238,"children":1239},{"style":793},[1240],{"type":574,"value":989},{"type":569,"tag":596,"props":1242,"children":1243},{"style":765},[1244],{"type":574,"value":876},{"type":569,"tag":596,"props":1246,"children":1247},{"style":765},[1248],{"type":574,"value":881},{"type":569,"tag":596,"props":1250,"children":1252},{"class":598,"line":1251},16,[1253],{"type":569,"tag":596,"props":1254,"children":1255},{"style":751},[1256],{"type":574,"value":1257},"      // 更新第二个数\n",{"type":569,"tag":596,"props":1259,"children":1261},{"class":598,"line":1260},17,[1262,1267,1271,1275,1279,1283],{"type":569,"tag":596,"props":1263,"children":1264},{"style":793},[1265],{"type":574,"value":1266},"      second",{"type":569,"tag":596,"props":1268,"children":1269},{"style":765},[1270],{"type":574,"value":856},{"type":569,"tag":596,"props":1272,"children":1273},{"style":793},[1274],{"type":574,"value":913},{"type":569,"tag":596,"props":1276,"children":1277},{"style":765},[1278],{"type":574,"value":1002},{"type":569,"tag":596,"props":1280,"children":1281},{"style":793},[1282],{"type":574,"value":1144},{"type":569,"tag":596,"props":1284,"children":1285},{"style":765},[1286],{"type":574,"value":1012},{"type":569,"tag":596,"props":1288,"children":1290},{"class":598,"line":1289},18,[1291,1295,1299],{"type":569,"tag":596,"props":1292,"children":1293},{"style":765},[1294],{"type":574,"value":1202},{"type":569,"tag":596,"props":1296,"children":1297},{"style":771},[1298],{"type":574,"value":1207},{"type":569,"tag":596,"props":1300,"children":1301},{"style":765},[1302],{"type":574,"value":881},{"type":569,"tag":596,"props":1304,"children":1306},{"class":598,"line":1305},19,[1307],{"type":569,"tag":596,"props":1308,"children":1309},{"style":751},[1310],{"type":574,"value":1311},"      // 更新第一个数\n",{"type":569,"tag":596,"props":1313,"children":1315},{"class":598,"line":1314},20,[1316,1321,1325,1329,1333,1337],{"type":569,"tag":596,"props":1317,"children":1318},{"style":793},[1319],{"type":574,"value":1320},"      first",{"type":569,"tag":596,"props":1322,"children":1323},{"style":765},[1324],{"type":574,"value":856},{"type":569,"tag":596,"props":1326,"children":1327},{"style":793},[1328],{"type":574,"value":913},{"type":569,"tag":596,"props":1330,"children":1331},{"style":765},[1332],{"type":574,"value":1002},{"type":569,"tag":596,"props":1334,"children":1335},{"style":793},[1336],{"type":574,"value":1144},{"type":569,"tag":596,"props":1338,"children":1339},{"style":765},[1340],{"type":574,"value":1012},{"type":569,"tag":596,"props":1342,"children":1344},{"class":598,"line":1343},21,[1345],{"type":569,"tag":596,"props":1346,"children":1347},{"style":765},[1348],{"type":574,"value":1349},"    }\n",{"type":569,"tag":596,"props":1351,"children":1353},{"class":598,"line":1352},22,[1354],{"type":569,"tag":596,"props":1355,"children":1356},{"style":765},[1357],{"type":574,"value":1358},"  }\n",{"type":569,"tag":596,"props":1360,"children":1362},{"class":598,"line":1361},23,[1363,1368,1372],{"type":569,"tag":596,"props":1364,"children":1365},{"style":771},[1366],{"type":574,"value":1367},"  return",{"type":569,"tag":596,"props":1369,"children":1370},{"style":771},[1371],{"type":574,"value":972},{"type":569,"tag":596,"props":1373,"children":1374},{"style":765},[1375],{"type":574,"value":929},{"type":569,"tag":596,"props":1377,"children":1379},{"class":598,"line":1378},24,[1380],{"type":569,"tag":596,"props":1381,"children":1382},{"style":765},[1383],{"type":574,"value":1384},"};\n",{"type":569,"tag":1386,"props":1387,"children":1388},"style",{},[1389],{"type":574,"value":1390},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":838,"depth":838,"links":1392},[1393,1394],{"id":723,"depth":608,"text":723},{"id":728,"depth":608,"text":728,"children":1395},[1396],{"id":734,"depth":617,"text":734},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1403,1405],{"_path":222,"title":221,"description":1404},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":228,"title":227,"description":1406},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1717735572142]