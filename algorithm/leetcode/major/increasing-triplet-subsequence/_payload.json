[{"data":1,"prerenderedAt":1394},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":546,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1389},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":222,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":221,"description":550,"url":551,"body":552,"_type":1384,"_id":1385,"_source":1386,"_file":1387,"_extension":1388},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":553,"children":554,"toc":1378},"root",[555,562,567,572,611,616,647,652,682,687,702,707,713,718,724,1372],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":556,"tag":557,"props":568,"children":569},{},[570],{"type":561,"value":571},"示例 1：",{"type":556,"tag":573,"props":574,"children":577},"pre",{"className":575,"code":576,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[578],{"type":556,"tag":579,"props":580,"children":581},"code",{"__ignoreMap":549},[582,593,602],{"type":556,"tag":583,"props":584,"children":587},"span",{"class":585,"line":586},"line",1,[588],{"type":556,"tag":583,"props":589,"children":590},{},[591],{"type":561,"value":592},"输入：nums = [1,2,3,4,5]\n",{"type":556,"tag":583,"props":594,"children":596},{"class":585,"line":595},2,[597],{"type":556,"tag":583,"props":598,"children":599},{},[600],{"type":561,"value":601},"输出：true\n",{"type":556,"tag":583,"props":603,"children":605},{"class":585,"line":604},3,[606],{"type":556,"tag":583,"props":607,"children":608},{},[609],{"type":561,"value":610},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":556,"tag":557,"props":612,"children":613},{},[614],{"type":561,"value":615},"示例 2：",{"type":556,"tag":573,"props":617,"children":619},{"className":575,"code":618,"language":561,"meta":549,"style":549},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[620],{"type":556,"tag":579,"props":621,"children":622},{"__ignoreMap":549},[623,631,639],{"type":556,"tag":583,"props":624,"children":625},{"class":585,"line":586},[626],{"type":556,"tag":583,"props":627,"children":628},{},[629],{"type":561,"value":630},"输入：nums = [5,4,3,2,1]\n",{"type":556,"tag":583,"props":632,"children":633},{"class":585,"line":595},[634],{"type":556,"tag":583,"props":635,"children":636},{},[637],{"type":561,"value":638},"输出：false\n",{"type":556,"tag":583,"props":640,"children":641},{"class":585,"line":604},[642],{"type":556,"tag":583,"props":643,"children":644},{},[645],{"type":561,"value":646},"解释：不存在满足题意的三元组\n",{"type":556,"tag":557,"props":648,"children":649},{},[650],{"type":561,"value":651},"示例 3：",{"type":556,"tag":573,"props":653,"children":655},{"className":575,"code":654,"language":561,"meta":549,"style":549},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[656],{"type":556,"tag":579,"props":657,"children":658},{"__ignoreMap":549},[659,667,674],{"type":556,"tag":583,"props":660,"children":661},{"class":585,"line":586},[662],{"type":556,"tag":583,"props":663,"children":664},{},[665],{"type":561,"value":666},"输入：nums = [2,1,5,0,4,6]\n",{"type":556,"tag":583,"props":668,"children":669},{"class":585,"line":595},[670],{"type":556,"tag":583,"props":671,"children":672},{},[673],{"type":561,"value":601},{"type":556,"tag":583,"props":675,"children":676},{"class":585,"line":604},[677],{"type":556,"tag":583,"props":678,"children":679},{},[680],{"type":561,"value":681},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":556,"tag":557,"props":683,"children":684},{},[685],{"type":561,"value":686},"提示：",{"type":556,"tag":688,"props":689,"children":690},"ul",{},[691,697],{"type":556,"tag":692,"props":693,"children":694},"li",{},[695],{"type":561,"value":696},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":556,"tag":692,"props":698,"children":699},{},[700],{"type":561,"value":701},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":556,"tag":557,"props":703,"children":704},{},[705],{"type":561,"value":706},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":556,"tag":708,"props":709,"children":711},"h2",{"id":710},"解题思路",[712],{"type":561,"value":710},{"type":556,"tag":708,"props":714,"children":716},{"id":715},"实现",[717],{"type":561,"value":715},{"type":556,"tag":719,"props":720,"children":722},"h3",{"id":721},"贪心",[723],{"type":561,"value":721},{"type":556,"tag":573,"props":725,"children":729},{"className":726,"code":727,"language":728,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[730],{"type":556,"tag":579,"props":731,"children":732},{"__ignoreMap":549},[733,742,784,814,823,869,878,917,964,1000,1036,1106,1154,1163,1181,1236,1245,1274,1290,1299,1328,1337,1346,1363],{"type":556,"tag":583,"props":734,"children":735},{"class":585,"line":586},[736],{"type":556,"tag":583,"props":737,"children":739},{"style":738},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[740],{"type":561,"value":741},"/**\n",{"type":556,"tag":583,"props":743,"children":744},{"class":585,"line":595},[745,750,756,762,767,773,778],{"type":556,"tag":583,"props":746,"children":747},{"style":738},[748],{"type":561,"value":749}," * ",{"type":556,"tag":583,"props":751,"children":753},{"style":752},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[754],{"type":561,"value":755},"@",{"type":556,"tag":583,"props":757,"children":759},{"style":758},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[760],{"type":561,"value":761},"param",{"type":556,"tag":583,"props":763,"children":764},{"style":752},[765],{"type":561,"value":766}," {",{"type":556,"tag":583,"props":768,"children":770},{"style":769},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[771],{"type":561,"value":772},"number[]",{"type":556,"tag":583,"props":774,"children":775},{"style":752},[776],{"type":561,"value":777},"}",{"type":556,"tag":583,"props":779,"children":781},{"style":780},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[782],{"type":561,"value":783}," nums\n",{"type":556,"tag":583,"props":785,"children":786},{"class":585,"line":604},[787,791,795,800,804,809],{"type":556,"tag":583,"props":788,"children":789},{"style":738},[790],{"type":561,"value":749},{"type":556,"tag":583,"props":792,"children":793},{"style":752},[794],{"type":561,"value":755},{"type":556,"tag":583,"props":796,"children":797},{"style":758},[798],{"type":561,"value":799},"return",{"type":556,"tag":583,"props":801,"children":802},{"style":752},[803],{"type":561,"value":766},{"type":556,"tag":583,"props":805,"children":806},{"style":769},[807],{"type":561,"value":808},"boolean",{"type":556,"tag":583,"props":810,"children":811},{"style":752},[812],{"type":561,"value":813},"}\n",{"type":556,"tag":583,"props":815,"children":817},{"class":585,"line":816},4,[818],{"type":556,"tag":583,"props":819,"children":820},{"style":738},[821],{"type":561,"value":822}," */\n",{"type":556,"tag":583,"props":824,"children":826},{"class":585,"line":825},5,[827,833,839,844,849,854,859,864],{"type":556,"tag":583,"props":828,"children":830},{"style":829},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[831],{"type":561,"value":832},"var",{"type":556,"tag":583,"props":834,"children":836},{"style":835},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[837],{"type":561,"value":838}," increasingTriplet",{"type":556,"tag":583,"props":840,"children":841},{"style":752},[842],{"type":561,"value":843}," =",{"type":556,"tag":583,"props":845,"children":846},{"style":829},[847],{"type":561,"value":848}," function",{"type":556,"tag":583,"props":850,"children":851},{"style":752},[852],{"type":561,"value":853}," (",{"type":556,"tag":583,"props":855,"children":856},{"style":780},[857],{"type":561,"value":858},"nums",{"type":556,"tag":583,"props":860,"children":861},{"style":752},[862],{"type":561,"value":863},")",{"type":556,"tag":583,"props":865,"children":866},{"style":752},[867],{"type":561,"value":868}," {\n",{"type":556,"tag":583,"props":870,"children":872},{"class":585,"line":871},6,[873],{"type":556,"tag":583,"props":874,"children":875},{"style":738},[876],{"type":561,"value":877},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":556,"tag":583,"props":879,"children":881},{"class":585,"line":880},7,[882,887,892,896,901,906,912],{"type":556,"tag":583,"props":883,"children":884},{"style":829},[885],{"type":561,"value":886},"  let",{"type":556,"tag":583,"props":888,"children":889},{"style":780},[890],{"type":561,"value":891}," len",{"type":556,"tag":583,"props":893,"children":894},{"style":752},[895],{"type":561,"value":843},{"type":556,"tag":583,"props":897,"children":898},{"style":780},[899],{"type":561,"value":900}," nums",{"type":556,"tag":583,"props":902,"children":903},{"style":752},[904],{"type":561,"value":905},".",{"type":556,"tag":583,"props":907,"children":909},{"style":908},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[910],{"type":561,"value":911},"length",{"type":556,"tag":583,"props":913,"children":914},{"style":752},[915],{"type":561,"value":916},";\n",{"type":556,"tag":583,"props":918,"children":920},{"class":585,"line":919},8,[921,926,930,935,940,946,950,955,960],{"type":556,"tag":583,"props":922,"children":923},{"style":758},[924],{"type":561,"value":925},"  if",{"type":556,"tag":583,"props":927,"children":928},{"style":752},[929],{"type":561,"value":853},{"type":556,"tag":583,"props":931,"children":932},{"style":780},[933],{"type":561,"value":934},"len",{"type":556,"tag":583,"props":936,"children":937},{"style":752},[938],{"type":561,"value":939}," \u003C",{"type":556,"tag":583,"props":941,"children":943},{"style":942},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[944],{"type":561,"value":945}," 3",{"type":556,"tag":583,"props":947,"children":948},{"style":752},[949],{"type":561,"value":863},{"type":556,"tag":583,"props":951,"children":952},{"style":758},[953],{"type":561,"value":954}," return",{"type":556,"tag":583,"props":956,"children":957},{"style":758},[958],{"type":561,"value":959}," false",{"type":556,"tag":583,"props":961,"children":962},{"style":752},[963],{"type":561,"value":916},{"type":556,"tag":583,"props":965,"children":967},{"class":585,"line":966},9,[968,972,977,981,985,990,995],{"type":556,"tag":583,"props":969,"children":970},{"style":829},[971],{"type":561,"value":886},{"type":556,"tag":583,"props":973,"children":974},{"style":780},[975],{"type":561,"value":976}," first",{"type":556,"tag":583,"props":978,"children":979},{"style":752},[980],{"type":561,"value":843},{"type":556,"tag":583,"props":982,"children":983},{"style":780},[984],{"type":561,"value":900},{"type":556,"tag":583,"props":986,"children":987},{"style":752},[988],{"type":561,"value":989},"[",{"type":556,"tag":583,"props":991,"children":992},{"style":942},[993],{"type":561,"value":994},"0",{"type":556,"tag":583,"props":996,"children":997},{"style":752},[998],{"type":561,"value":999},"];\n",{"type":556,"tag":583,"props":1001,"children":1003},{"class":585,"line":1002},10,[1004,1008,1013,1017,1022,1026,1032],{"type":556,"tag":583,"props":1005,"children":1006},{"style":829},[1007],{"type":561,"value":886},{"type":556,"tag":583,"props":1009,"children":1010},{"style":780},[1011],{"type":561,"value":1012}," second",{"type":556,"tag":583,"props":1014,"children":1015},{"style":752},[1016],{"type":561,"value":843},{"type":556,"tag":583,"props":1018,"children":1019},{"style":780},[1020],{"type":561,"value":1021}," Number",{"type":556,"tag":583,"props":1023,"children":1024},{"style":752},[1025],{"type":561,"value":905},{"type":556,"tag":583,"props":1027,"children":1029},{"style":1028},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[1030],{"type":561,"value":1031},"MAX_SAFE_INTEGER",{"type":556,"tag":583,"props":1033,"children":1034},{"style":752},[1035],{"type":561,"value":916},{"type":556,"tag":583,"props":1037,"children":1039},{"class":585,"line":1038},11,[1040,1045,1049,1054,1059,1063,1068,1073,1077,1081,1085,1089,1093,1098,1102],{"type":556,"tag":583,"props":1041,"children":1042},{"style":758},[1043],{"type":561,"value":1044},"  for",{"type":556,"tag":583,"props":1046,"children":1047},{"style":752},[1048],{"type":561,"value":853},{"type":556,"tag":583,"props":1050,"children":1051},{"style":829},[1052],{"type":561,"value":1053},"let",{"type":556,"tag":583,"props":1055,"children":1056},{"style":780},[1057],{"type":561,"value":1058}," i",{"type":556,"tag":583,"props":1060,"children":1061},{"style":752},[1062],{"type":561,"value":843},{"type":556,"tag":583,"props":1064,"children":1065},{"style":942},[1066],{"type":561,"value":1067}," 0",{"type":556,"tag":583,"props":1069,"children":1070},{"style":752},[1071],{"type":561,"value":1072},";",{"type":556,"tag":583,"props":1074,"children":1075},{"style":780},[1076],{"type":561,"value":1058},{"type":556,"tag":583,"props":1078,"children":1079},{"style":752},[1080],{"type":561,"value":939},{"type":556,"tag":583,"props":1082,"children":1083},{"style":780},[1084],{"type":561,"value":891},{"type":556,"tag":583,"props":1086,"children":1087},{"style":752},[1088],{"type":561,"value":1072},{"type":556,"tag":583,"props":1090,"children":1091},{"style":780},[1092],{"type":561,"value":1058},{"type":556,"tag":583,"props":1094,"children":1095},{"style":829},[1096],{"type":561,"value":1097},"++",{"type":556,"tag":583,"props":1099,"children":1100},{"style":752},[1101],{"type":561,"value":863},{"type":556,"tag":583,"props":1103,"children":1104},{"style":752},[1105],{"type":561,"value":868},{"type":556,"tag":583,"props":1107,"children":1109},{"class":585,"line":1108},12,[1110,1115,1119,1123,1127,1132,1137,1142,1146,1150],{"type":556,"tag":583,"props":1111,"children":1112},{"style":758},[1113],{"type":561,"value":1114},"    if",{"type":556,"tag":583,"props":1116,"children":1117},{"style":752},[1118],{"type":561,"value":853},{"type":556,"tag":583,"props":1120,"children":1121},{"style":780},[1122],{"type":561,"value":858},{"type":556,"tag":583,"props":1124,"children":1125},{"style":752},[1126],{"type":561,"value":989},{"type":556,"tag":583,"props":1128,"children":1129},{"style":780},[1130],{"type":561,"value":1131},"i",{"type":556,"tag":583,"props":1133,"children":1134},{"style":752},[1135],{"type":561,"value":1136},"]",{"type":556,"tag":583,"props":1138,"children":1139},{"style":752},[1140],{"type":561,"value":1141}," >",{"type":556,"tag":583,"props":1143,"children":1144},{"style":780},[1145],{"type":561,"value":1012},{"type":556,"tag":583,"props":1147,"children":1148},{"style":752},[1149],{"type":561,"value":863},{"type":556,"tag":583,"props":1151,"children":1152},{"style":752},[1153],{"type":561,"value":868},{"type":556,"tag":583,"props":1155,"children":1157},{"class":585,"line":1156},13,[1158],{"type":556,"tag":583,"props":1159,"children":1160},{"style":738},[1161],{"type":561,"value":1162},"      // 找到第三个数\n",{"type":556,"tag":583,"props":1164,"children":1166},{"class":585,"line":1165},14,[1167,1172,1177],{"type":556,"tag":583,"props":1168,"children":1169},{"style":758},[1170],{"type":561,"value":1171},"      return",{"type":556,"tag":583,"props":1173,"children":1174},{"style":758},[1175],{"type":561,"value":1176}," true",{"type":556,"tag":583,"props":1178,"children":1179},{"style":752},[1180],{"type":561,"value":916},{"type":556,"tag":583,"props":1182,"children":1184},{"class":585,"line":1183},15,[1185,1190,1195,1200,1204,1208,1212,1216,1220,1224,1228,1232],{"type":556,"tag":583,"props":1186,"children":1187},{"style":752},[1188],{"type":561,"value":1189},"    }",{"type":556,"tag":583,"props":1191,"children":1192},{"style":758},[1193],{"type":561,"value":1194}," else",{"type":556,"tag":583,"props":1196,"children":1197},{"style":758},[1198],{"type":561,"value":1199}," if",{"type":556,"tag":583,"props":1201,"children":1202},{"style":752},[1203],{"type":561,"value":853},{"type":556,"tag":583,"props":1205,"children":1206},{"style":780},[1207],{"type":561,"value":858},{"type":556,"tag":583,"props":1209,"children":1210},{"style":752},[1211],{"type":561,"value":989},{"type":556,"tag":583,"props":1213,"children":1214},{"style":780},[1215],{"type":561,"value":1131},{"type":556,"tag":583,"props":1217,"children":1218},{"style":752},[1219],{"type":561,"value":1136},{"type":556,"tag":583,"props":1221,"children":1222},{"style":752},[1223],{"type":561,"value":1141},{"type":556,"tag":583,"props":1225,"children":1226},{"style":780},[1227],{"type":561,"value":976},{"type":556,"tag":583,"props":1229,"children":1230},{"style":752},[1231],{"type":561,"value":863},{"type":556,"tag":583,"props":1233,"children":1234},{"style":752},[1235],{"type":561,"value":868},{"type":556,"tag":583,"props":1237,"children":1239},{"class":585,"line":1238},16,[1240],{"type":556,"tag":583,"props":1241,"children":1242},{"style":738},[1243],{"type":561,"value":1244},"      // 更新第二个数\n",{"type":556,"tag":583,"props":1246,"children":1248},{"class":585,"line":1247},17,[1249,1254,1258,1262,1266,1270],{"type":556,"tag":583,"props":1250,"children":1251},{"style":780},[1252],{"type":561,"value":1253},"      second",{"type":556,"tag":583,"props":1255,"children":1256},{"style":752},[1257],{"type":561,"value":843},{"type":556,"tag":583,"props":1259,"children":1260},{"style":780},[1261],{"type":561,"value":900},{"type":556,"tag":583,"props":1263,"children":1264},{"style":752},[1265],{"type":561,"value":989},{"type":556,"tag":583,"props":1267,"children":1268},{"style":780},[1269],{"type":561,"value":1131},{"type":556,"tag":583,"props":1271,"children":1272},{"style":752},[1273],{"type":561,"value":999},{"type":556,"tag":583,"props":1275,"children":1277},{"class":585,"line":1276},18,[1278,1282,1286],{"type":556,"tag":583,"props":1279,"children":1280},{"style":752},[1281],{"type":561,"value":1189},{"type":556,"tag":583,"props":1283,"children":1284},{"style":758},[1285],{"type":561,"value":1194},{"type":556,"tag":583,"props":1287,"children":1288},{"style":752},[1289],{"type":561,"value":868},{"type":556,"tag":583,"props":1291,"children":1293},{"class":585,"line":1292},19,[1294],{"type":556,"tag":583,"props":1295,"children":1296},{"style":738},[1297],{"type":561,"value":1298},"      // 更新第一个数\n",{"type":556,"tag":583,"props":1300,"children":1302},{"class":585,"line":1301},20,[1303,1308,1312,1316,1320,1324],{"type":556,"tag":583,"props":1304,"children":1305},{"style":780},[1306],{"type":561,"value":1307},"      first",{"type":556,"tag":583,"props":1309,"children":1310},{"style":752},[1311],{"type":561,"value":843},{"type":556,"tag":583,"props":1313,"children":1314},{"style":780},[1315],{"type":561,"value":900},{"type":556,"tag":583,"props":1317,"children":1318},{"style":752},[1319],{"type":561,"value":989},{"type":556,"tag":583,"props":1321,"children":1322},{"style":780},[1323],{"type":561,"value":1131},{"type":556,"tag":583,"props":1325,"children":1326},{"style":752},[1327],{"type":561,"value":999},{"type":556,"tag":583,"props":1329,"children":1331},{"class":585,"line":1330},21,[1332],{"type":556,"tag":583,"props":1333,"children":1334},{"style":752},[1335],{"type":561,"value":1336},"    }\n",{"type":556,"tag":583,"props":1338,"children":1340},{"class":585,"line":1339},22,[1341],{"type":556,"tag":583,"props":1342,"children":1343},{"style":752},[1344],{"type":561,"value":1345},"  }\n",{"type":556,"tag":583,"props":1347,"children":1349},{"class":585,"line":1348},23,[1350,1355,1359],{"type":556,"tag":583,"props":1351,"children":1352},{"style":758},[1353],{"type":561,"value":1354},"  return",{"type":556,"tag":583,"props":1356,"children":1357},{"style":758},[1358],{"type":561,"value":959},{"type":556,"tag":583,"props":1360,"children":1361},{"style":752},[1362],{"type":561,"value":916},{"type":556,"tag":583,"props":1364,"children":1366},{"class":585,"line":1365},24,[1367],{"type":556,"tag":583,"props":1368,"children":1369},{"style":752},[1370],{"type":561,"value":1371},"};\n",{"type":556,"tag":1373,"props":1374,"children":1375},"style",{},[1376],{"type":561,"value":1377},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":825,"depth":825,"links":1379},[1380,1381],{"id":710,"depth":595,"text":710},{"id":715,"depth":595,"text":715,"children":1382},[1383],{"id":721,"depth":604,"text":721},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1390,1392],{"_path":219,"title":218,"description":1391},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":225,"title":224,"description":1393},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1714279835894]