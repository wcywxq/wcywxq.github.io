[{"data":1,"prerenderedAt":1282},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":457,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1277},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":213,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":212,"description":461,"url":462,"body":463,"_type":1272,"_id":1273,"_source":1274,"_file":1275,"_extension":1276},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":464,"children":465,"toc":1266},"root",[466,473,478,483,522,527,558,563,593,598,613,618,624,629,635,1260],{"type":467,"tag":468,"props":469,"children":470},"element","p",{},[471],{"type":472,"value":461},"text",{"type":467,"tag":468,"props":474,"children":475},{},[476],{"type":472,"value":477},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":467,"tag":468,"props":479,"children":480},{},[481],{"type":472,"value":482},"示例 1：",{"type":467,"tag":484,"props":485,"children":488},"pre",{"className":486,"code":487,"language":472,"meta":460,"style":460},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[489],{"type":467,"tag":490,"props":491,"children":492},"code",{"__ignoreMap":460},[493,504,513],{"type":467,"tag":494,"props":495,"children":498},"span",{"class":496,"line":497},"line",1,[499],{"type":467,"tag":494,"props":500,"children":501},{},[502],{"type":472,"value":503},"输入：nums = [1,2,3,4,5]\n",{"type":467,"tag":494,"props":505,"children":507},{"class":496,"line":506},2,[508],{"type":467,"tag":494,"props":509,"children":510},{},[511],{"type":472,"value":512},"输出：true\n",{"type":467,"tag":494,"props":514,"children":516},{"class":496,"line":515},3,[517],{"type":467,"tag":494,"props":518,"children":519},{},[520],{"type":472,"value":521},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":467,"tag":468,"props":523,"children":524},{},[525],{"type":472,"value":526},"示例 2：",{"type":467,"tag":484,"props":528,"children":530},{"className":486,"code":529,"language":472,"meta":460,"style":460},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[531],{"type":467,"tag":490,"props":532,"children":533},{"__ignoreMap":460},[534,542,550],{"type":467,"tag":494,"props":535,"children":536},{"class":496,"line":497},[537],{"type":467,"tag":494,"props":538,"children":539},{},[540],{"type":472,"value":541},"输入：nums = [5,4,3,2,1]\n",{"type":467,"tag":494,"props":543,"children":544},{"class":496,"line":506},[545],{"type":467,"tag":494,"props":546,"children":547},{},[548],{"type":472,"value":549},"输出：false\n",{"type":467,"tag":494,"props":551,"children":552},{"class":496,"line":515},[553],{"type":467,"tag":494,"props":554,"children":555},{},[556],{"type":472,"value":557},"解释：不存在满足题意的三元组\n",{"type":467,"tag":468,"props":559,"children":560},{},[561],{"type":472,"value":562},"示例 3：",{"type":467,"tag":484,"props":564,"children":566},{"className":486,"code":565,"language":472,"meta":460,"style":460},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[567],{"type":467,"tag":490,"props":568,"children":569},{"__ignoreMap":460},[570,578,585],{"type":467,"tag":494,"props":571,"children":572},{"class":496,"line":497},[573],{"type":467,"tag":494,"props":574,"children":575},{},[576],{"type":472,"value":577},"输入：nums = [2,1,5,0,4,6]\n",{"type":467,"tag":494,"props":579,"children":580},{"class":496,"line":506},[581],{"type":467,"tag":494,"props":582,"children":583},{},[584],{"type":472,"value":512},{"type":467,"tag":494,"props":586,"children":587},{"class":496,"line":515},[588],{"type":467,"tag":494,"props":589,"children":590},{},[591],{"type":472,"value":592},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":467,"tag":468,"props":594,"children":595},{},[596],{"type":472,"value":597},"提示：",{"type":467,"tag":599,"props":600,"children":601},"ul",{},[602,608],{"type":467,"tag":603,"props":604,"children":605},"li",{},[606],{"type":472,"value":607},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":467,"tag":603,"props":609,"children":610},{},[611],{"type":472,"value":612},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":467,"tag":468,"props":614,"children":615},{},[616],{"type":472,"value":617},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":467,"tag":619,"props":620,"children":622},"h2",{"id":621},"解题思路",[623],{"type":472,"value":621},{"type":467,"tag":619,"props":625,"children":627},{"id":626},"实现",[628],{"type":472,"value":626},{"type":467,"tag":630,"props":631,"children":633},"h3",{"id":632},"贪心",[634],{"type":472,"value":632},{"type":467,"tag":484,"props":636,"children":640},{"className":637,"code":638,"language":639,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[641],{"type":467,"tag":490,"props":642,"children":643},{"__ignoreMap":460},[644,653,679,696,705,749,758,799,848,888,923,989,1033,1042,1060,1111,1120,1153,1170,1179,1212,1221,1230,1247],{"type":467,"tag":494,"props":645,"children":646},{"class":496,"line":497},[647],{"type":467,"tag":494,"props":648,"children":650},{"style":649},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[651],{"type":472,"value":652},"/**\n",{"type":467,"tag":494,"props":654,"children":655},{"class":496,"line":506},[656,661,667,673],{"type":467,"tag":494,"props":657,"children":658},{"style":649},[659],{"type":472,"value":660}," * ",{"type":467,"tag":494,"props":662,"children":664},{"style":663},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[665],{"type":472,"value":666},"@param",{"type":467,"tag":494,"props":668,"children":670},{"style":669},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[671],{"type":472,"value":672}," {number[]}",{"type":467,"tag":494,"props":674,"children":676},{"style":675},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[677],{"type":472,"value":678}," nums\n",{"type":467,"tag":494,"props":680,"children":681},{"class":496,"line":515},[682,686,691],{"type":467,"tag":494,"props":683,"children":684},{"style":649},[685],{"type":472,"value":660},{"type":467,"tag":494,"props":687,"children":688},{"style":663},[689],{"type":472,"value":690},"@return",{"type":467,"tag":494,"props":692,"children":693},{"style":669},[694],{"type":472,"value":695}," {boolean}\n",{"type":467,"tag":494,"props":697,"children":699},{"class":496,"line":698},4,[700],{"type":467,"tag":494,"props":701,"children":702},{"style":649},[703],{"type":472,"value":704}," */\n",{"type":467,"tag":494,"props":706,"children":708},{"class":496,"line":707},5,[709,715,721,727,732,738,744],{"type":467,"tag":494,"props":710,"children":712},{"style":711},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[713],{"type":472,"value":714},"var",{"type":467,"tag":494,"props":716,"children":718},{"style":717},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[719],{"type":472,"value":720}," increasingTriplet",{"type":467,"tag":494,"props":722,"children":724},{"style":723},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[725],{"type":472,"value":726}," =",{"type":467,"tag":494,"props":728,"children":729},{"style":711},[730],{"type":472,"value":731}," function",{"type":467,"tag":494,"props":733,"children":735},{"style":734},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[736],{"type":472,"value":737}," (",{"type":467,"tag":494,"props":739,"children":741},{"style":740},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[742],{"type":472,"value":743},"nums",{"type":467,"tag":494,"props":745,"children":746},{"style":734},[747],{"type":472,"value":748},") {\n",{"type":467,"tag":494,"props":750,"children":752},{"class":496,"line":751},6,[753],{"type":467,"tag":494,"props":754,"children":755},{"style":649},[756],{"type":472,"value":757},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":467,"tag":494,"props":759,"children":761},{"class":496,"line":760},7,[762,767,773,777,782,788,793],{"type":467,"tag":494,"props":763,"children":764},{"style":711},[765],{"type":472,"value":766},"  let",{"type":467,"tag":494,"props":768,"children":770},{"style":769},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[771],{"type":472,"value":772}," len",{"type":467,"tag":494,"props":774,"children":775},{"style":723},[776],{"type":472,"value":726},{"type":467,"tag":494,"props":778,"children":779},{"style":769},[780],{"type":472,"value":781}," nums",{"type":467,"tag":494,"props":783,"children":785},{"style":784},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[786],{"type":472,"value":787},".",{"type":467,"tag":494,"props":789,"children":790},{"style":734},[791],{"type":472,"value":792},"length",{"type":467,"tag":494,"props":794,"children":796},{"style":795},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[797],{"type":472,"value":798},";\n",{"type":467,"tag":494,"props":800,"children":802},{"class":496,"line":801},8,[803,809,813,818,823,829,834,839,844],{"type":467,"tag":494,"props":804,"children":806},{"style":805},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[807],{"type":472,"value":808},"  if",{"type":467,"tag":494,"props":810,"children":811},{"style":734},[812],{"type":472,"value":737},{"type":467,"tag":494,"props":814,"children":815},{"style":769},[816],{"type":472,"value":817},"len",{"type":467,"tag":494,"props":819,"children":820},{"style":723},[821],{"type":472,"value":822}," \u003C",{"type":467,"tag":494,"props":824,"children":826},{"style":825},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[827],{"type":472,"value":828}," 3",{"type":467,"tag":494,"props":830,"children":831},{"style":734},[832],{"type":472,"value":833},") ",{"type":467,"tag":494,"props":835,"children":836},{"style":805},[837],{"type":472,"value":838},"return",{"type":467,"tag":494,"props":840,"children":841},{"style":825},[842],{"type":472,"value":843}," false",{"type":467,"tag":494,"props":845,"children":846},{"style":795},[847],{"type":472,"value":798},{"type":467,"tag":494,"props":849,"children":851},{"class":496,"line":850},9,[852,856,861,865,869,874,879,884],{"type":467,"tag":494,"props":853,"children":854},{"style":711},[855],{"type":472,"value":766},{"type":467,"tag":494,"props":857,"children":858},{"style":769},[859],{"type":472,"value":860}," first",{"type":467,"tag":494,"props":862,"children":863},{"style":723},[864],{"type":472,"value":726},{"type":467,"tag":494,"props":866,"children":867},{"style":769},[868],{"type":472,"value":781},{"type":467,"tag":494,"props":870,"children":871},{"style":734},[872],{"type":472,"value":873},"[",{"type":467,"tag":494,"props":875,"children":876},{"style":825},[877],{"type":472,"value":878},"0",{"type":467,"tag":494,"props":880,"children":881},{"style":734},[882],{"type":472,"value":883},"]",{"type":467,"tag":494,"props":885,"children":886},{"style":795},[887],{"type":472,"value":798},{"type":467,"tag":494,"props":889,"children":891},{"class":496,"line":890},10,[892,896,901,905,910,914,919],{"type":467,"tag":494,"props":893,"children":894},{"style":711},[895],{"type":472,"value":766},{"type":467,"tag":494,"props":897,"children":898},{"style":769},[899],{"type":472,"value":900}," second",{"type":467,"tag":494,"props":902,"children":903},{"style":723},[904],{"type":472,"value":726},{"type":467,"tag":494,"props":906,"children":907},{"style":769},[908],{"type":472,"value":909}," Number",{"type":467,"tag":494,"props":911,"children":912},{"style":784},[913],{"type":472,"value":787},{"type":467,"tag":494,"props":915,"children":916},{"style":734},[917],{"type":472,"value":918},"MAX_SAFE_INTEGER",{"type":467,"tag":494,"props":920,"children":921},{"style":795},[922],{"type":472,"value":798},{"type":467,"tag":494,"props":924,"children":926},{"class":496,"line":925},11,[927,932,936,941,946,950,955,960,964,968,972,976,980,985],{"type":467,"tag":494,"props":928,"children":929},{"style":805},[930],{"type":472,"value":931},"  for",{"type":467,"tag":494,"props":933,"children":934},{"style":734},[935],{"type":472,"value":737},{"type":467,"tag":494,"props":937,"children":938},{"style":711},[939],{"type":472,"value":940},"let",{"type":467,"tag":494,"props":942,"children":943},{"style":769},[944],{"type":472,"value":945}," i",{"type":467,"tag":494,"props":947,"children":948},{"style":723},[949],{"type":472,"value":726},{"type":467,"tag":494,"props":951,"children":952},{"style":825},[953],{"type":472,"value":954}," 0",{"type":467,"tag":494,"props":956,"children":957},{"style":795},[958],{"type":472,"value":959},";",{"type":467,"tag":494,"props":961,"children":962},{"style":769},[963],{"type":472,"value":945},{"type":467,"tag":494,"props":965,"children":966},{"style":723},[967],{"type":472,"value":822},{"type":467,"tag":494,"props":969,"children":970},{"style":769},[971],{"type":472,"value":772},{"type":467,"tag":494,"props":973,"children":974},{"style":795},[975],{"type":472,"value":959},{"type":467,"tag":494,"props":977,"children":978},{"style":769},[979],{"type":472,"value":945},{"type":467,"tag":494,"props":981,"children":982},{"style":723},[983],{"type":472,"value":984},"++",{"type":467,"tag":494,"props":986,"children":987},{"style":734},[988],{"type":472,"value":748},{"type":467,"tag":494,"props":990,"children":992},{"class":496,"line":991},12,[993,998,1002,1006,1010,1015,1020,1025,1029],{"type":467,"tag":494,"props":994,"children":995},{"style":805},[996],{"type":472,"value":997},"    if",{"type":467,"tag":494,"props":999,"children":1000},{"style":734},[1001],{"type":472,"value":737},{"type":467,"tag":494,"props":1003,"children":1004},{"style":769},[1005],{"type":472,"value":743},{"type":467,"tag":494,"props":1007,"children":1008},{"style":734},[1009],{"type":472,"value":873},{"type":467,"tag":494,"props":1011,"children":1012},{"style":769},[1013],{"type":472,"value":1014},"i",{"type":467,"tag":494,"props":1016,"children":1017},{"style":734},[1018],{"type":472,"value":1019},"] ",{"type":467,"tag":494,"props":1021,"children":1022},{"style":723},[1023],{"type":472,"value":1024},">",{"type":467,"tag":494,"props":1026,"children":1027},{"style":769},[1028],{"type":472,"value":900},{"type":467,"tag":494,"props":1030,"children":1031},{"style":734},[1032],{"type":472,"value":748},{"type":467,"tag":494,"props":1034,"children":1036},{"class":496,"line":1035},13,[1037],{"type":467,"tag":494,"props":1038,"children":1039},{"style":649},[1040],{"type":472,"value":1041},"      // 找到第三个数\n",{"type":467,"tag":494,"props":1043,"children":1045},{"class":496,"line":1044},14,[1046,1051,1056],{"type":467,"tag":494,"props":1047,"children":1048},{"style":805},[1049],{"type":472,"value":1050},"      return",{"type":467,"tag":494,"props":1052,"children":1053},{"style":825},[1054],{"type":472,"value":1055}," true",{"type":467,"tag":494,"props":1057,"children":1058},{"style":795},[1059],{"type":472,"value":798},{"type":467,"tag":494,"props":1061,"children":1063},{"class":496,"line":1062},15,[1064,1069,1074,1079,1083,1087,1091,1095,1099,1103,1107],{"type":467,"tag":494,"props":1065,"children":1066},{"style":734},[1067],{"type":472,"value":1068},"    } ",{"type":467,"tag":494,"props":1070,"children":1071},{"style":805},[1072],{"type":472,"value":1073},"else",{"type":467,"tag":494,"props":1075,"children":1076},{"style":805},[1077],{"type":472,"value":1078}," if",{"type":467,"tag":494,"props":1080,"children":1081},{"style":734},[1082],{"type":472,"value":737},{"type":467,"tag":494,"props":1084,"children":1085},{"style":769},[1086],{"type":472,"value":743},{"type":467,"tag":494,"props":1088,"children":1089},{"style":734},[1090],{"type":472,"value":873},{"type":467,"tag":494,"props":1092,"children":1093},{"style":769},[1094],{"type":472,"value":1014},{"type":467,"tag":494,"props":1096,"children":1097},{"style":734},[1098],{"type":472,"value":1019},{"type":467,"tag":494,"props":1100,"children":1101},{"style":723},[1102],{"type":472,"value":1024},{"type":467,"tag":494,"props":1104,"children":1105},{"style":769},[1106],{"type":472,"value":860},{"type":467,"tag":494,"props":1108,"children":1109},{"style":734},[1110],{"type":472,"value":748},{"type":467,"tag":494,"props":1112,"children":1114},{"class":496,"line":1113},16,[1115],{"type":467,"tag":494,"props":1116,"children":1117},{"style":649},[1118],{"type":472,"value":1119},"      // 更新第二个数\n",{"type":467,"tag":494,"props":1121,"children":1123},{"class":496,"line":1122},17,[1124,1129,1133,1137,1141,1145,1149],{"type":467,"tag":494,"props":1125,"children":1126},{"style":769},[1127],{"type":472,"value":1128},"      second",{"type":467,"tag":494,"props":1130,"children":1131},{"style":723},[1132],{"type":472,"value":726},{"type":467,"tag":494,"props":1134,"children":1135},{"style":769},[1136],{"type":472,"value":781},{"type":467,"tag":494,"props":1138,"children":1139},{"style":734},[1140],{"type":472,"value":873},{"type":467,"tag":494,"props":1142,"children":1143},{"style":769},[1144],{"type":472,"value":1014},{"type":467,"tag":494,"props":1146,"children":1147},{"style":734},[1148],{"type":472,"value":883},{"type":467,"tag":494,"props":1150,"children":1151},{"style":795},[1152],{"type":472,"value":798},{"type":467,"tag":494,"props":1154,"children":1156},{"class":496,"line":1155},18,[1157,1161,1165],{"type":467,"tag":494,"props":1158,"children":1159},{"style":734},[1160],{"type":472,"value":1068},{"type":467,"tag":494,"props":1162,"children":1163},{"style":805},[1164],{"type":472,"value":1073},{"type":467,"tag":494,"props":1166,"children":1167},{"style":734},[1168],{"type":472,"value":1169}," {\n",{"type":467,"tag":494,"props":1171,"children":1173},{"class":496,"line":1172},19,[1174],{"type":467,"tag":494,"props":1175,"children":1176},{"style":649},[1177],{"type":472,"value":1178},"      // 更新第一个数\n",{"type":467,"tag":494,"props":1180,"children":1182},{"class":496,"line":1181},20,[1183,1188,1192,1196,1200,1204,1208],{"type":467,"tag":494,"props":1184,"children":1185},{"style":769},[1186],{"type":472,"value":1187},"      first",{"type":467,"tag":494,"props":1189,"children":1190},{"style":723},[1191],{"type":472,"value":726},{"type":467,"tag":494,"props":1193,"children":1194},{"style":769},[1195],{"type":472,"value":781},{"type":467,"tag":494,"props":1197,"children":1198},{"style":734},[1199],{"type":472,"value":873},{"type":467,"tag":494,"props":1201,"children":1202},{"style":769},[1203],{"type":472,"value":1014},{"type":467,"tag":494,"props":1205,"children":1206},{"style":734},[1207],{"type":472,"value":883},{"type":467,"tag":494,"props":1209,"children":1210},{"style":795},[1211],{"type":472,"value":798},{"type":467,"tag":494,"props":1213,"children":1215},{"class":496,"line":1214},21,[1216],{"type":467,"tag":494,"props":1217,"children":1218},{"style":734},[1219],{"type":472,"value":1220},"    }\n",{"type":467,"tag":494,"props":1222,"children":1224},{"class":496,"line":1223},22,[1225],{"type":467,"tag":494,"props":1226,"children":1227},{"style":734},[1228],{"type":472,"value":1229},"  }\n",{"type":467,"tag":494,"props":1231,"children":1233},{"class":496,"line":1232},23,[1234,1239,1243],{"type":467,"tag":494,"props":1235,"children":1236},{"style":805},[1237],{"type":472,"value":1238},"  return",{"type":467,"tag":494,"props":1240,"children":1241},{"style":825},[1242],{"type":472,"value":843},{"type":467,"tag":494,"props":1244,"children":1245},{"style":795},[1246],{"type":472,"value":798},{"type":467,"tag":494,"props":1248,"children":1250},{"class":496,"line":1249},24,[1251,1256],{"type":467,"tag":494,"props":1252,"children":1253},{"style":734},[1254],{"type":472,"value":1255},"}",{"type":467,"tag":494,"props":1257,"children":1258},{"style":795},[1259],{"type":472,"value":798},{"type":467,"tag":1261,"props":1262,"children":1263},"style",{},[1264],{"type":472,"value":1265},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":707,"depth":707,"links":1267},[1268,1269],{"id":621,"depth":506,"text":621},{"id":626,"depth":506,"text":626,"children":1270},[1271],{"id":632,"depth":515,"text":632},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1278,1280],{"_path":210,"title":209,"description":1279},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":216,"title":215,"description":1281},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1713512819254]