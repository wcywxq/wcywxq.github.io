[{"data":1,"prerenderedAt":1388},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":540,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1383},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":222,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":221,"description":544,"url":545,"body":546,"_type":1378,"_id":1379,"_source":1380,"_file":1381,"_extension":1382},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":547,"children":548,"toc":1372},"root",[549,556,561,566,605,610,641,646,676,681,696,701,707,712,718,1366],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"示例 1：",{"type":550,"tag":567,"props":568,"children":571},"pre",{"className":569,"code":570,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[572],{"type":550,"tag":573,"props":574,"children":575},"code",{"__ignoreMap":543},[576,587,596],{"type":550,"tag":577,"props":578,"children":581},"span",{"class":579,"line":580},"line",1,[582],{"type":550,"tag":577,"props":583,"children":584},{},[585],{"type":555,"value":586},"输入：nums = [1,2,3,4,5]\n",{"type":550,"tag":577,"props":588,"children":590},{"class":579,"line":589},2,[591],{"type":550,"tag":577,"props":592,"children":593},{},[594],{"type":555,"value":595},"输出：true\n",{"type":550,"tag":577,"props":597,"children":599},{"class":579,"line":598},3,[600],{"type":550,"tag":577,"props":601,"children":602},{},[603],{"type":555,"value":604},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":550,"tag":551,"props":606,"children":607},{},[608],{"type":555,"value":609},"示例 2：",{"type":550,"tag":567,"props":611,"children":613},{"className":569,"code":612,"language":555,"meta":543,"style":543},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[614],{"type":550,"tag":573,"props":615,"children":616},{"__ignoreMap":543},[617,625,633],{"type":550,"tag":577,"props":618,"children":619},{"class":579,"line":580},[620],{"type":550,"tag":577,"props":621,"children":622},{},[623],{"type":555,"value":624},"输入：nums = [5,4,3,2,1]\n",{"type":550,"tag":577,"props":626,"children":627},{"class":579,"line":589},[628],{"type":550,"tag":577,"props":629,"children":630},{},[631],{"type":555,"value":632},"输出：false\n",{"type":550,"tag":577,"props":634,"children":635},{"class":579,"line":598},[636],{"type":550,"tag":577,"props":637,"children":638},{},[639],{"type":555,"value":640},"解释：不存在满足题意的三元组\n",{"type":550,"tag":551,"props":642,"children":643},{},[644],{"type":555,"value":645},"示例 3：",{"type":550,"tag":567,"props":647,"children":649},{"className":569,"code":648,"language":555,"meta":543,"style":543},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[650],{"type":550,"tag":573,"props":651,"children":652},{"__ignoreMap":543},[653,661,668],{"type":550,"tag":577,"props":654,"children":655},{"class":579,"line":580},[656],{"type":550,"tag":577,"props":657,"children":658},{},[659],{"type":555,"value":660},"输入：nums = [2,1,5,0,4,6]\n",{"type":550,"tag":577,"props":662,"children":663},{"class":579,"line":589},[664],{"type":550,"tag":577,"props":665,"children":666},{},[667],{"type":555,"value":595},{"type":550,"tag":577,"props":669,"children":670},{"class":579,"line":598},[671],{"type":550,"tag":577,"props":672,"children":673},{},[674],{"type":555,"value":675},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":550,"tag":551,"props":677,"children":678},{},[679],{"type":555,"value":680},"提示：",{"type":550,"tag":682,"props":683,"children":684},"ul",{},[685,691],{"type":550,"tag":686,"props":687,"children":688},"li",{},[689],{"type":555,"value":690},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":550,"tag":686,"props":692,"children":693},{},[694],{"type":555,"value":695},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":550,"tag":551,"props":697,"children":698},{},[699],{"type":555,"value":700},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":550,"tag":702,"props":703,"children":705},"h2",{"id":704},"解题思路",[706],{"type":555,"value":704},{"type":550,"tag":702,"props":708,"children":710},{"id":709},"实现",[711],{"type":555,"value":709},{"type":550,"tag":713,"props":714,"children":716},"h3",{"id":715},"贪心",[717],{"type":555,"value":715},{"type":550,"tag":567,"props":719,"children":723},{"className":720,"code":721,"language":722,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[724],{"type":550,"tag":573,"props":725,"children":726},{"__ignoreMap":543},[727,736,778,808,817,863,872,911,958,994,1030,1100,1148,1157,1175,1230,1239,1268,1284,1293,1322,1331,1340,1357],{"type":550,"tag":577,"props":728,"children":729},{"class":579,"line":580},[730],{"type":550,"tag":577,"props":731,"children":733},{"style":732},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[734],{"type":555,"value":735},"/**\n",{"type":550,"tag":577,"props":737,"children":738},{"class":579,"line":589},[739,744,750,756,761,767,772],{"type":550,"tag":577,"props":740,"children":741},{"style":732},[742],{"type":555,"value":743}," * ",{"type":550,"tag":577,"props":745,"children":747},{"style":746},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[748],{"type":555,"value":749},"@",{"type":550,"tag":577,"props":751,"children":753},{"style":752},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[754],{"type":555,"value":755},"param",{"type":550,"tag":577,"props":757,"children":758},{"style":746},[759],{"type":555,"value":760}," {",{"type":550,"tag":577,"props":762,"children":764},{"style":763},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[765],{"type":555,"value":766},"number[]",{"type":550,"tag":577,"props":768,"children":769},{"style":746},[770],{"type":555,"value":771},"}",{"type":550,"tag":577,"props":773,"children":775},{"style":774},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[776],{"type":555,"value":777}," nums\n",{"type":550,"tag":577,"props":779,"children":780},{"class":579,"line":598},[781,785,789,794,798,803],{"type":550,"tag":577,"props":782,"children":783},{"style":732},[784],{"type":555,"value":743},{"type":550,"tag":577,"props":786,"children":787},{"style":746},[788],{"type":555,"value":749},{"type":550,"tag":577,"props":790,"children":791},{"style":752},[792],{"type":555,"value":793},"return",{"type":550,"tag":577,"props":795,"children":796},{"style":746},[797],{"type":555,"value":760},{"type":550,"tag":577,"props":799,"children":800},{"style":763},[801],{"type":555,"value":802},"boolean",{"type":550,"tag":577,"props":804,"children":805},{"style":746},[806],{"type":555,"value":807},"}\n",{"type":550,"tag":577,"props":809,"children":811},{"class":579,"line":810},4,[812],{"type":550,"tag":577,"props":813,"children":814},{"style":732},[815],{"type":555,"value":816}," */\n",{"type":550,"tag":577,"props":818,"children":820},{"class":579,"line":819},5,[821,827,833,838,843,848,853,858],{"type":550,"tag":577,"props":822,"children":824},{"style":823},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[825],{"type":555,"value":826},"var",{"type":550,"tag":577,"props":828,"children":830},{"style":829},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[831],{"type":555,"value":832}," increasingTriplet",{"type":550,"tag":577,"props":834,"children":835},{"style":746},[836],{"type":555,"value":837}," =",{"type":550,"tag":577,"props":839,"children":840},{"style":823},[841],{"type":555,"value":842}," function",{"type":550,"tag":577,"props":844,"children":845},{"style":746},[846],{"type":555,"value":847}," (",{"type":550,"tag":577,"props":849,"children":850},{"style":774},[851],{"type":555,"value":852},"nums",{"type":550,"tag":577,"props":854,"children":855},{"style":746},[856],{"type":555,"value":857},")",{"type":550,"tag":577,"props":859,"children":860},{"style":746},[861],{"type":555,"value":862}," {\n",{"type":550,"tag":577,"props":864,"children":866},{"class":579,"line":865},6,[867],{"type":550,"tag":577,"props":868,"children":869},{"style":732},[870],{"type":555,"value":871},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":550,"tag":577,"props":873,"children":875},{"class":579,"line":874},7,[876,881,886,890,895,900,906],{"type":550,"tag":577,"props":877,"children":878},{"style":823},[879],{"type":555,"value":880},"  let",{"type":550,"tag":577,"props":882,"children":883},{"style":774},[884],{"type":555,"value":885}," len",{"type":550,"tag":577,"props":887,"children":888},{"style":746},[889],{"type":555,"value":837},{"type":550,"tag":577,"props":891,"children":892},{"style":774},[893],{"type":555,"value":894}," nums",{"type":550,"tag":577,"props":896,"children":897},{"style":746},[898],{"type":555,"value":899},".",{"type":550,"tag":577,"props":901,"children":903},{"style":902},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[904],{"type":555,"value":905},"length",{"type":550,"tag":577,"props":907,"children":908},{"style":746},[909],{"type":555,"value":910},";\n",{"type":550,"tag":577,"props":912,"children":914},{"class":579,"line":913},8,[915,920,924,929,934,940,944,949,954],{"type":550,"tag":577,"props":916,"children":917},{"style":752},[918],{"type":555,"value":919},"  if",{"type":550,"tag":577,"props":921,"children":922},{"style":746},[923],{"type":555,"value":847},{"type":550,"tag":577,"props":925,"children":926},{"style":774},[927],{"type":555,"value":928},"len",{"type":550,"tag":577,"props":930,"children":931},{"style":746},[932],{"type":555,"value":933}," \u003C",{"type":550,"tag":577,"props":935,"children":937},{"style":936},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[938],{"type":555,"value":939}," 3",{"type":550,"tag":577,"props":941,"children":942},{"style":746},[943],{"type":555,"value":857},{"type":550,"tag":577,"props":945,"children":946},{"style":752},[947],{"type":555,"value":948}," return",{"type":550,"tag":577,"props":950,"children":951},{"style":752},[952],{"type":555,"value":953}," false",{"type":550,"tag":577,"props":955,"children":956},{"style":746},[957],{"type":555,"value":910},{"type":550,"tag":577,"props":959,"children":961},{"class":579,"line":960},9,[962,966,971,975,979,984,989],{"type":550,"tag":577,"props":963,"children":964},{"style":823},[965],{"type":555,"value":880},{"type":550,"tag":577,"props":967,"children":968},{"style":774},[969],{"type":555,"value":970}," first",{"type":550,"tag":577,"props":972,"children":973},{"style":746},[974],{"type":555,"value":837},{"type":550,"tag":577,"props":976,"children":977},{"style":774},[978],{"type":555,"value":894},{"type":550,"tag":577,"props":980,"children":981},{"style":746},[982],{"type":555,"value":983},"[",{"type":550,"tag":577,"props":985,"children":986},{"style":936},[987],{"type":555,"value":988},"0",{"type":550,"tag":577,"props":990,"children":991},{"style":746},[992],{"type":555,"value":993},"];\n",{"type":550,"tag":577,"props":995,"children":997},{"class":579,"line":996},10,[998,1002,1007,1011,1016,1020,1026],{"type":550,"tag":577,"props":999,"children":1000},{"style":823},[1001],{"type":555,"value":880},{"type":550,"tag":577,"props":1003,"children":1004},{"style":774},[1005],{"type":555,"value":1006}," second",{"type":550,"tag":577,"props":1008,"children":1009},{"style":746},[1010],{"type":555,"value":837},{"type":550,"tag":577,"props":1012,"children":1013},{"style":774},[1014],{"type":555,"value":1015}," Number",{"type":550,"tag":577,"props":1017,"children":1018},{"style":746},[1019],{"type":555,"value":899},{"type":550,"tag":577,"props":1021,"children":1023},{"style":1022},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[1024],{"type":555,"value":1025},"MAX_SAFE_INTEGER",{"type":550,"tag":577,"props":1027,"children":1028},{"style":746},[1029],{"type":555,"value":910},{"type":550,"tag":577,"props":1031,"children":1033},{"class":579,"line":1032},11,[1034,1039,1043,1048,1053,1057,1062,1067,1071,1075,1079,1083,1087,1092,1096],{"type":550,"tag":577,"props":1035,"children":1036},{"style":752},[1037],{"type":555,"value":1038},"  for",{"type":550,"tag":577,"props":1040,"children":1041},{"style":746},[1042],{"type":555,"value":847},{"type":550,"tag":577,"props":1044,"children":1045},{"style":823},[1046],{"type":555,"value":1047},"let",{"type":550,"tag":577,"props":1049,"children":1050},{"style":774},[1051],{"type":555,"value":1052}," i",{"type":550,"tag":577,"props":1054,"children":1055},{"style":746},[1056],{"type":555,"value":837},{"type":550,"tag":577,"props":1058,"children":1059},{"style":936},[1060],{"type":555,"value":1061}," 0",{"type":550,"tag":577,"props":1063,"children":1064},{"style":746},[1065],{"type":555,"value":1066},";",{"type":550,"tag":577,"props":1068,"children":1069},{"style":774},[1070],{"type":555,"value":1052},{"type":550,"tag":577,"props":1072,"children":1073},{"style":746},[1074],{"type":555,"value":933},{"type":550,"tag":577,"props":1076,"children":1077},{"style":774},[1078],{"type":555,"value":885},{"type":550,"tag":577,"props":1080,"children":1081},{"style":746},[1082],{"type":555,"value":1066},{"type":550,"tag":577,"props":1084,"children":1085},{"style":774},[1086],{"type":555,"value":1052},{"type":550,"tag":577,"props":1088,"children":1089},{"style":823},[1090],{"type":555,"value":1091},"++",{"type":550,"tag":577,"props":1093,"children":1094},{"style":746},[1095],{"type":555,"value":857},{"type":550,"tag":577,"props":1097,"children":1098},{"style":746},[1099],{"type":555,"value":862},{"type":550,"tag":577,"props":1101,"children":1103},{"class":579,"line":1102},12,[1104,1109,1113,1117,1121,1126,1131,1136,1140,1144],{"type":550,"tag":577,"props":1105,"children":1106},{"style":752},[1107],{"type":555,"value":1108},"    if",{"type":550,"tag":577,"props":1110,"children":1111},{"style":746},[1112],{"type":555,"value":847},{"type":550,"tag":577,"props":1114,"children":1115},{"style":774},[1116],{"type":555,"value":852},{"type":550,"tag":577,"props":1118,"children":1119},{"style":746},[1120],{"type":555,"value":983},{"type":550,"tag":577,"props":1122,"children":1123},{"style":774},[1124],{"type":555,"value":1125},"i",{"type":550,"tag":577,"props":1127,"children":1128},{"style":746},[1129],{"type":555,"value":1130},"]",{"type":550,"tag":577,"props":1132,"children":1133},{"style":746},[1134],{"type":555,"value":1135}," >",{"type":550,"tag":577,"props":1137,"children":1138},{"style":774},[1139],{"type":555,"value":1006},{"type":550,"tag":577,"props":1141,"children":1142},{"style":746},[1143],{"type":555,"value":857},{"type":550,"tag":577,"props":1145,"children":1146},{"style":746},[1147],{"type":555,"value":862},{"type":550,"tag":577,"props":1149,"children":1151},{"class":579,"line":1150},13,[1152],{"type":550,"tag":577,"props":1153,"children":1154},{"style":732},[1155],{"type":555,"value":1156},"      // 找到第三个数\n",{"type":550,"tag":577,"props":1158,"children":1160},{"class":579,"line":1159},14,[1161,1166,1171],{"type":550,"tag":577,"props":1162,"children":1163},{"style":752},[1164],{"type":555,"value":1165},"      return",{"type":550,"tag":577,"props":1167,"children":1168},{"style":752},[1169],{"type":555,"value":1170}," true",{"type":550,"tag":577,"props":1172,"children":1173},{"style":746},[1174],{"type":555,"value":910},{"type":550,"tag":577,"props":1176,"children":1178},{"class":579,"line":1177},15,[1179,1184,1189,1194,1198,1202,1206,1210,1214,1218,1222,1226],{"type":550,"tag":577,"props":1180,"children":1181},{"style":746},[1182],{"type":555,"value":1183},"    }",{"type":550,"tag":577,"props":1185,"children":1186},{"style":752},[1187],{"type":555,"value":1188}," else",{"type":550,"tag":577,"props":1190,"children":1191},{"style":752},[1192],{"type":555,"value":1193}," if",{"type":550,"tag":577,"props":1195,"children":1196},{"style":746},[1197],{"type":555,"value":847},{"type":550,"tag":577,"props":1199,"children":1200},{"style":774},[1201],{"type":555,"value":852},{"type":550,"tag":577,"props":1203,"children":1204},{"style":746},[1205],{"type":555,"value":983},{"type":550,"tag":577,"props":1207,"children":1208},{"style":774},[1209],{"type":555,"value":1125},{"type":550,"tag":577,"props":1211,"children":1212},{"style":746},[1213],{"type":555,"value":1130},{"type":550,"tag":577,"props":1215,"children":1216},{"style":746},[1217],{"type":555,"value":1135},{"type":550,"tag":577,"props":1219,"children":1220},{"style":774},[1221],{"type":555,"value":970},{"type":550,"tag":577,"props":1223,"children":1224},{"style":746},[1225],{"type":555,"value":857},{"type":550,"tag":577,"props":1227,"children":1228},{"style":746},[1229],{"type":555,"value":862},{"type":550,"tag":577,"props":1231,"children":1233},{"class":579,"line":1232},16,[1234],{"type":550,"tag":577,"props":1235,"children":1236},{"style":732},[1237],{"type":555,"value":1238},"      // 更新第二个数\n",{"type":550,"tag":577,"props":1240,"children":1242},{"class":579,"line":1241},17,[1243,1248,1252,1256,1260,1264],{"type":550,"tag":577,"props":1244,"children":1245},{"style":774},[1246],{"type":555,"value":1247},"      second",{"type":550,"tag":577,"props":1249,"children":1250},{"style":746},[1251],{"type":555,"value":837},{"type":550,"tag":577,"props":1253,"children":1254},{"style":774},[1255],{"type":555,"value":894},{"type":550,"tag":577,"props":1257,"children":1258},{"style":746},[1259],{"type":555,"value":983},{"type":550,"tag":577,"props":1261,"children":1262},{"style":774},[1263],{"type":555,"value":1125},{"type":550,"tag":577,"props":1265,"children":1266},{"style":746},[1267],{"type":555,"value":993},{"type":550,"tag":577,"props":1269,"children":1271},{"class":579,"line":1270},18,[1272,1276,1280],{"type":550,"tag":577,"props":1273,"children":1274},{"style":746},[1275],{"type":555,"value":1183},{"type":550,"tag":577,"props":1277,"children":1278},{"style":752},[1279],{"type":555,"value":1188},{"type":550,"tag":577,"props":1281,"children":1282},{"style":746},[1283],{"type":555,"value":862},{"type":550,"tag":577,"props":1285,"children":1287},{"class":579,"line":1286},19,[1288],{"type":550,"tag":577,"props":1289,"children":1290},{"style":732},[1291],{"type":555,"value":1292},"      // 更新第一个数\n",{"type":550,"tag":577,"props":1294,"children":1296},{"class":579,"line":1295},20,[1297,1302,1306,1310,1314,1318],{"type":550,"tag":577,"props":1298,"children":1299},{"style":774},[1300],{"type":555,"value":1301},"      first",{"type":550,"tag":577,"props":1303,"children":1304},{"style":746},[1305],{"type":555,"value":837},{"type":550,"tag":577,"props":1307,"children":1308},{"style":774},[1309],{"type":555,"value":894},{"type":550,"tag":577,"props":1311,"children":1312},{"style":746},[1313],{"type":555,"value":983},{"type":550,"tag":577,"props":1315,"children":1316},{"style":774},[1317],{"type":555,"value":1125},{"type":550,"tag":577,"props":1319,"children":1320},{"style":746},[1321],{"type":555,"value":993},{"type":550,"tag":577,"props":1323,"children":1325},{"class":579,"line":1324},21,[1326],{"type":550,"tag":577,"props":1327,"children":1328},{"style":746},[1329],{"type":555,"value":1330},"    }\n",{"type":550,"tag":577,"props":1332,"children":1334},{"class":579,"line":1333},22,[1335],{"type":550,"tag":577,"props":1336,"children":1337},{"style":746},[1338],{"type":555,"value":1339},"  }\n",{"type":550,"tag":577,"props":1341,"children":1343},{"class":579,"line":1342},23,[1344,1349,1353],{"type":550,"tag":577,"props":1345,"children":1346},{"style":752},[1347],{"type":555,"value":1348},"  return",{"type":550,"tag":577,"props":1350,"children":1351},{"style":752},[1352],{"type":555,"value":953},{"type":550,"tag":577,"props":1354,"children":1355},{"style":746},[1356],{"type":555,"value":910},{"type":550,"tag":577,"props":1358,"children":1360},{"class":579,"line":1359},24,[1361],{"type":550,"tag":577,"props":1362,"children":1363},{"style":746},[1364],{"type":555,"value":1365},"};\n",{"type":550,"tag":1367,"props":1368,"children":1369},"style",{},[1370],{"type":555,"value":1371},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":819,"depth":819,"links":1373},[1374,1375],{"id":704,"depth":589,"text":704},{"id":709,"depth":589,"text":709,"children":1376},[1377],{"id":715,"depth":598,"text":715},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1384,1386],{"_path":219,"title":218,"description":1385},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":225,"title":224,"description":1387},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1714099216459]