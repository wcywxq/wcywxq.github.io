[{"data":1,"prerenderedAt":1399},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":551,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1394},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":225,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":224,"description":555,"url":556,"body":557,"_type":1389,"_id":1390,"_source":1391,"_file":1392,"_extension":1393},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":558,"children":559,"toc":1383},"root",[560,567,572,577,616,621,652,657,687,692,707,712,718,723,729,1377],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":566,"value":576},"示例 1：",{"type":561,"tag":578,"props":579,"children":582},"pre",{"className":580,"code":581,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[583],{"type":561,"tag":584,"props":585,"children":586},"code",{"__ignoreMap":554},[587,598,607],{"type":561,"tag":588,"props":589,"children":592},"span",{"class":590,"line":591},"line",1,[593],{"type":561,"tag":588,"props":594,"children":595},{},[596],{"type":566,"value":597},"输入：nums = [1,2,3,4,5]\n",{"type":561,"tag":588,"props":599,"children":601},{"class":590,"line":600},2,[602],{"type":561,"tag":588,"props":603,"children":604},{},[605],{"type":566,"value":606},"输出：true\n",{"type":561,"tag":588,"props":608,"children":610},{"class":590,"line":609},3,[611],{"type":561,"tag":588,"props":612,"children":613},{},[614],{"type":566,"value":615},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":561,"tag":562,"props":617,"children":618},{},[619],{"type":566,"value":620},"示例 2：",{"type":561,"tag":578,"props":622,"children":624},{"className":580,"code":623,"language":566,"meta":554,"style":554},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[625],{"type":561,"tag":584,"props":626,"children":627},{"__ignoreMap":554},[628,636,644],{"type":561,"tag":588,"props":629,"children":630},{"class":590,"line":591},[631],{"type":561,"tag":588,"props":632,"children":633},{},[634],{"type":566,"value":635},"输入：nums = [5,4,3,2,1]\n",{"type":561,"tag":588,"props":637,"children":638},{"class":590,"line":600},[639],{"type":561,"tag":588,"props":640,"children":641},{},[642],{"type":566,"value":643},"输出：false\n",{"type":561,"tag":588,"props":645,"children":646},{"class":590,"line":609},[647],{"type":561,"tag":588,"props":648,"children":649},{},[650],{"type":566,"value":651},"解释：不存在满足题意的三元组\n",{"type":561,"tag":562,"props":653,"children":654},{},[655],{"type":566,"value":656},"示例 3：",{"type":561,"tag":578,"props":658,"children":660},{"className":580,"code":659,"language":566,"meta":554,"style":554},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[661],{"type":561,"tag":584,"props":662,"children":663},{"__ignoreMap":554},[664,672,679],{"type":561,"tag":588,"props":665,"children":666},{"class":590,"line":591},[667],{"type":561,"tag":588,"props":668,"children":669},{},[670],{"type":566,"value":671},"输入：nums = [2,1,5,0,4,6]\n",{"type":561,"tag":588,"props":673,"children":674},{"class":590,"line":600},[675],{"type":561,"tag":588,"props":676,"children":677},{},[678],{"type":566,"value":606},{"type":561,"tag":588,"props":680,"children":681},{"class":590,"line":609},[682],{"type":561,"tag":588,"props":683,"children":684},{},[685],{"type":566,"value":686},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":561,"tag":562,"props":688,"children":689},{},[690],{"type":566,"value":691},"提示：",{"type":561,"tag":693,"props":694,"children":695},"ul",{},[696,702],{"type":561,"tag":697,"props":698,"children":699},"li",{},[700],{"type":566,"value":701},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":561,"tag":697,"props":703,"children":704},{},[705],{"type":566,"value":706},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":561,"tag":562,"props":708,"children":709},{},[710],{"type":566,"value":711},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":561,"tag":713,"props":714,"children":716},"h2",{"id":715},"解题思路",[717],{"type":566,"value":715},{"type":561,"tag":713,"props":719,"children":721},{"id":720},"实现",[722],{"type":566,"value":720},{"type":561,"tag":724,"props":725,"children":727},"h3",{"id":726},"贪心",[728],{"type":566,"value":726},{"type":561,"tag":578,"props":730,"children":734},{"className":731,"code":732,"language":733,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[735],{"type":561,"tag":584,"props":736,"children":737},{"__ignoreMap":554},[738,747,789,819,828,874,883,922,969,1005,1041,1111,1159,1168,1186,1241,1250,1279,1295,1304,1333,1342,1351,1368],{"type":561,"tag":588,"props":739,"children":740},{"class":590,"line":591},[741],{"type":561,"tag":588,"props":742,"children":744},{"style":743},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[745],{"type":566,"value":746},"/**\n",{"type":561,"tag":588,"props":748,"children":749},{"class":590,"line":600},[750,755,761,767,772,778,783],{"type":561,"tag":588,"props":751,"children":752},{"style":743},[753],{"type":566,"value":754}," * ",{"type":561,"tag":588,"props":756,"children":758},{"style":757},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[759],{"type":566,"value":760},"@",{"type":561,"tag":588,"props":762,"children":764},{"style":763},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[765],{"type":566,"value":766},"param",{"type":561,"tag":588,"props":768,"children":769},{"style":757},[770],{"type":566,"value":771}," {",{"type":561,"tag":588,"props":773,"children":775},{"style":774},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[776],{"type":566,"value":777},"number[]",{"type":561,"tag":588,"props":779,"children":780},{"style":757},[781],{"type":566,"value":782},"}",{"type":561,"tag":588,"props":784,"children":786},{"style":785},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[787],{"type":566,"value":788}," nums\n",{"type":561,"tag":588,"props":790,"children":791},{"class":590,"line":609},[792,796,800,805,809,814],{"type":561,"tag":588,"props":793,"children":794},{"style":743},[795],{"type":566,"value":754},{"type":561,"tag":588,"props":797,"children":798},{"style":757},[799],{"type":566,"value":760},{"type":561,"tag":588,"props":801,"children":802},{"style":763},[803],{"type":566,"value":804},"return",{"type":561,"tag":588,"props":806,"children":807},{"style":757},[808],{"type":566,"value":771},{"type":561,"tag":588,"props":810,"children":811},{"style":774},[812],{"type":566,"value":813},"boolean",{"type":561,"tag":588,"props":815,"children":816},{"style":757},[817],{"type":566,"value":818},"}\n",{"type":561,"tag":588,"props":820,"children":822},{"class":590,"line":821},4,[823],{"type":561,"tag":588,"props":824,"children":825},{"style":743},[826],{"type":566,"value":827}," */\n",{"type":561,"tag":588,"props":829,"children":831},{"class":590,"line":830},5,[832,838,844,849,854,859,864,869],{"type":561,"tag":588,"props":833,"children":835},{"style":834},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[836],{"type":566,"value":837},"var",{"type":561,"tag":588,"props":839,"children":841},{"style":840},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[842],{"type":566,"value":843}," increasingTriplet",{"type":561,"tag":588,"props":845,"children":846},{"style":757},[847],{"type":566,"value":848}," =",{"type":561,"tag":588,"props":850,"children":851},{"style":834},[852],{"type":566,"value":853}," function",{"type":561,"tag":588,"props":855,"children":856},{"style":757},[857],{"type":566,"value":858}," (",{"type":561,"tag":588,"props":860,"children":861},{"style":785},[862],{"type":566,"value":863},"nums",{"type":561,"tag":588,"props":865,"children":866},{"style":757},[867],{"type":566,"value":868},")",{"type":561,"tag":588,"props":870,"children":871},{"style":757},[872],{"type":566,"value":873}," {\n",{"type":561,"tag":588,"props":875,"children":877},{"class":590,"line":876},6,[878],{"type":561,"tag":588,"props":879,"children":880},{"style":743},[881],{"type":566,"value":882},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":561,"tag":588,"props":884,"children":886},{"class":590,"line":885},7,[887,892,897,901,906,911,917],{"type":561,"tag":588,"props":888,"children":889},{"style":834},[890],{"type":566,"value":891},"  let",{"type":561,"tag":588,"props":893,"children":894},{"style":785},[895],{"type":566,"value":896}," len",{"type":561,"tag":588,"props":898,"children":899},{"style":757},[900],{"type":566,"value":848},{"type":561,"tag":588,"props":902,"children":903},{"style":785},[904],{"type":566,"value":905}," nums",{"type":561,"tag":588,"props":907,"children":908},{"style":757},[909],{"type":566,"value":910},".",{"type":561,"tag":588,"props":912,"children":914},{"style":913},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[915],{"type":566,"value":916},"length",{"type":561,"tag":588,"props":918,"children":919},{"style":757},[920],{"type":566,"value":921},";\n",{"type":561,"tag":588,"props":923,"children":925},{"class":590,"line":924},8,[926,931,935,940,945,951,955,960,965],{"type":561,"tag":588,"props":927,"children":928},{"style":763},[929],{"type":566,"value":930},"  if",{"type":561,"tag":588,"props":932,"children":933},{"style":757},[934],{"type":566,"value":858},{"type":561,"tag":588,"props":936,"children":937},{"style":785},[938],{"type":566,"value":939},"len",{"type":561,"tag":588,"props":941,"children":942},{"style":757},[943],{"type":566,"value":944}," \u003C",{"type":561,"tag":588,"props":946,"children":948},{"style":947},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[949],{"type":566,"value":950}," 3",{"type":561,"tag":588,"props":952,"children":953},{"style":757},[954],{"type":566,"value":868},{"type":561,"tag":588,"props":956,"children":957},{"style":763},[958],{"type":566,"value":959}," return",{"type":561,"tag":588,"props":961,"children":962},{"style":763},[963],{"type":566,"value":964}," false",{"type":561,"tag":588,"props":966,"children":967},{"style":757},[968],{"type":566,"value":921},{"type":561,"tag":588,"props":970,"children":972},{"class":590,"line":971},9,[973,977,982,986,990,995,1000],{"type":561,"tag":588,"props":974,"children":975},{"style":834},[976],{"type":566,"value":891},{"type":561,"tag":588,"props":978,"children":979},{"style":785},[980],{"type":566,"value":981}," first",{"type":561,"tag":588,"props":983,"children":984},{"style":757},[985],{"type":566,"value":848},{"type":561,"tag":588,"props":987,"children":988},{"style":785},[989],{"type":566,"value":905},{"type":561,"tag":588,"props":991,"children":992},{"style":757},[993],{"type":566,"value":994},"[",{"type":561,"tag":588,"props":996,"children":997},{"style":947},[998],{"type":566,"value":999},"0",{"type":561,"tag":588,"props":1001,"children":1002},{"style":757},[1003],{"type":566,"value":1004},"];\n",{"type":561,"tag":588,"props":1006,"children":1008},{"class":590,"line":1007},10,[1009,1013,1018,1022,1027,1031,1037],{"type":561,"tag":588,"props":1010,"children":1011},{"style":834},[1012],{"type":566,"value":891},{"type":561,"tag":588,"props":1014,"children":1015},{"style":785},[1016],{"type":566,"value":1017}," second",{"type":561,"tag":588,"props":1019,"children":1020},{"style":757},[1021],{"type":566,"value":848},{"type":561,"tag":588,"props":1023,"children":1024},{"style":785},[1025],{"type":566,"value":1026}," Number",{"type":561,"tag":588,"props":1028,"children":1029},{"style":757},[1030],{"type":566,"value":910},{"type":561,"tag":588,"props":1032,"children":1034},{"style":1033},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[1035],{"type":566,"value":1036},"MAX_SAFE_INTEGER",{"type":561,"tag":588,"props":1038,"children":1039},{"style":757},[1040],{"type":566,"value":921},{"type":561,"tag":588,"props":1042,"children":1044},{"class":590,"line":1043},11,[1045,1050,1054,1059,1064,1068,1073,1078,1082,1086,1090,1094,1098,1103,1107],{"type":561,"tag":588,"props":1046,"children":1047},{"style":763},[1048],{"type":566,"value":1049},"  for",{"type":561,"tag":588,"props":1051,"children":1052},{"style":757},[1053],{"type":566,"value":858},{"type":561,"tag":588,"props":1055,"children":1056},{"style":834},[1057],{"type":566,"value":1058},"let",{"type":561,"tag":588,"props":1060,"children":1061},{"style":785},[1062],{"type":566,"value":1063}," i",{"type":561,"tag":588,"props":1065,"children":1066},{"style":757},[1067],{"type":566,"value":848},{"type":561,"tag":588,"props":1069,"children":1070},{"style":947},[1071],{"type":566,"value":1072}," 0",{"type":561,"tag":588,"props":1074,"children":1075},{"style":757},[1076],{"type":566,"value":1077},";",{"type":561,"tag":588,"props":1079,"children":1080},{"style":785},[1081],{"type":566,"value":1063},{"type":561,"tag":588,"props":1083,"children":1084},{"style":757},[1085],{"type":566,"value":944},{"type":561,"tag":588,"props":1087,"children":1088},{"style":785},[1089],{"type":566,"value":896},{"type":561,"tag":588,"props":1091,"children":1092},{"style":757},[1093],{"type":566,"value":1077},{"type":561,"tag":588,"props":1095,"children":1096},{"style":785},[1097],{"type":566,"value":1063},{"type":561,"tag":588,"props":1099,"children":1100},{"style":834},[1101],{"type":566,"value":1102},"++",{"type":561,"tag":588,"props":1104,"children":1105},{"style":757},[1106],{"type":566,"value":868},{"type":561,"tag":588,"props":1108,"children":1109},{"style":757},[1110],{"type":566,"value":873},{"type":561,"tag":588,"props":1112,"children":1114},{"class":590,"line":1113},12,[1115,1120,1124,1128,1132,1137,1142,1147,1151,1155],{"type":561,"tag":588,"props":1116,"children":1117},{"style":763},[1118],{"type":566,"value":1119},"    if",{"type":561,"tag":588,"props":1121,"children":1122},{"style":757},[1123],{"type":566,"value":858},{"type":561,"tag":588,"props":1125,"children":1126},{"style":785},[1127],{"type":566,"value":863},{"type":561,"tag":588,"props":1129,"children":1130},{"style":757},[1131],{"type":566,"value":994},{"type":561,"tag":588,"props":1133,"children":1134},{"style":785},[1135],{"type":566,"value":1136},"i",{"type":561,"tag":588,"props":1138,"children":1139},{"style":757},[1140],{"type":566,"value":1141},"]",{"type":561,"tag":588,"props":1143,"children":1144},{"style":757},[1145],{"type":566,"value":1146}," >",{"type":561,"tag":588,"props":1148,"children":1149},{"style":785},[1150],{"type":566,"value":1017},{"type":561,"tag":588,"props":1152,"children":1153},{"style":757},[1154],{"type":566,"value":868},{"type":561,"tag":588,"props":1156,"children":1157},{"style":757},[1158],{"type":566,"value":873},{"type":561,"tag":588,"props":1160,"children":1162},{"class":590,"line":1161},13,[1163],{"type":561,"tag":588,"props":1164,"children":1165},{"style":743},[1166],{"type":566,"value":1167},"      // 找到第三个数\n",{"type":561,"tag":588,"props":1169,"children":1171},{"class":590,"line":1170},14,[1172,1177,1182],{"type":561,"tag":588,"props":1173,"children":1174},{"style":763},[1175],{"type":566,"value":1176},"      return",{"type":561,"tag":588,"props":1178,"children":1179},{"style":763},[1180],{"type":566,"value":1181}," true",{"type":561,"tag":588,"props":1183,"children":1184},{"style":757},[1185],{"type":566,"value":921},{"type":561,"tag":588,"props":1187,"children":1189},{"class":590,"line":1188},15,[1190,1195,1200,1205,1209,1213,1217,1221,1225,1229,1233,1237],{"type":561,"tag":588,"props":1191,"children":1192},{"style":757},[1193],{"type":566,"value":1194},"    }",{"type":561,"tag":588,"props":1196,"children":1197},{"style":763},[1198],{"type":566,"value":1199}," else",{"type":561,"tag":588,"props":1201,"children":1202},{"style":763},[1203],{"type":566,"value":1204}," if",{"type":561,"tag":588,"props":1206,"children":1207},{"style":757},[1208],{"type":566,"value":858},{"type":561,"tag":588,"props":1210,"children":1211},{"style":785},[1212],{"type":566,"value":863},{"type":561,"tag":588,"props":1214,"children":1215},{"style":757},[1216],{"type":566,"value":994},{"type":561,"tag":588,"props":1218,"children":1219},{"style":785},[1220],{"type":566,"value":1136},{"type":561,"tag":588,"props":1222,"children":1223},{"style":757},[1224],{"type":566,"value":1141},{"type":561,"tag":588,"props":1226,"children":1227},{"style":757},[1228],{"type":566,"value":1146},{"type":561,"tag":588,"props":1230,"children":1231},{"style":785},[1232],{"type":566,"value":981},{"type":561,"tag":588,"props":1234,"children":1235},{"style":757},[1236],{"type":566,"value":868},{"type":561,"tag":588,"props":1238,"children":1239},{"style":757},[1240],{"type":566,"value":873},{"type":561,"tag":588,"props":1242,"children":1244},{"class":590,"line":1243},16,[1245],{"type":561,"tag":588,"props":1246,"children":1247},{"style":743},[1248],{"type":566,"value":1249},"      // 更新第二个数\n",{"type":561,"tag":588,"props":1251,"children":1253},{"class":590,"line":1252},17,[1254,1259,1263,1267,1271,1275],{"type":561,"tag":588,"props":1255,"children":1256},{"style":785},[1257],{"type":566,"value":1258},"      second",{"type":561,"tag":588,"props":1260,"children":1261},{"style":757},[1262],{"type":566,"value":848},{"type":561,"tag":588,"props":1264,"children":1265},{"style":785},[1266],{"type":566,"value":905},{"type":561,"tag":588,"props":1268,"children":1269},{"style":757},[1270],{"type":566,"value":994},{"type":561,"tag":588,"props":1272,"children":1273},{"style":785},[1274],{"type":566,"value":1136},{"type":561,"tag":588,"props":1276,"children":1277},{"style":757},[1278],{"type":566,"value":1004},{"type":561,"tag":588,"props":1280,"children":1282},{"class":590,"line":1281},18,[1283,1287,1291],{"type":561,"tag":588,"props":1284,"children":1285},{"style":757},[1286],{"type":566,"value":1194},{"type":561,"tag":588,"props":1288,"children":1289},{"style":763},[1290],{"type":566,"value":1199},{"type":561,"tag":588,"props":1292,"children":1293},{"style":757},[1294],{"type":566,"value":873},{"type":561,"tag":588,"props":1296,"children":1298},{"class":590,"line":1297},19,[1299],{"type":561,"tag":588,"props":1300,"children":1301},{"style":743},[1302],{"type":566,"value":1303},"      // 更新第一个数\n",{"type":561,"tag":588,"props":1305,"children":1307},{"class":590,"line":1306},20,[1308,1313,1317,1321,1325,1329],{"type":561,"tag":588,"props":1309,"children":1310},{"style":785},[1311],{"type":566,"value":1312},"      first",{"type":561,"tag":588,"props":1314,"children":1315},{"style":757},[1316],{"type":566,"value":848},{"type":561,"tag":588,"props":1318,"children":1319},{"style":785},[1320],{"type":566,"value":905},{"type":561,"tag":588,"props":1322,"children":1323},{"style":757},[1324],{"type":566,"value":994},{"type":561,"tag":588,"props":1326,"children":1327},{"style":785},[1328],{"type":566,"value":1136},{"type":561,"tag":588,"props":1330,"children":1331},{"style":757},[1332],{"type":566,"value":1004},{"type":561,"tag":588,"props":1334,"children":1336},{"class":590,"line":1335},21,[1337],{"type":561,"tag":588,"props":1338,"children":1339},{"style":757},[1340],{"type":566,"value":1341},"    }\n",{"type":561,"tag":588,"props":1343,"children":1345},{"class":590,"line":1344},22,[1346],{"type":561,"tag":588,"props":1347,"children":1348},{"style":757},[1349],{"type":566,"value":1350},"  }\n",{"type":561,"tag":588,"props":1352,"children":1354},{"class":590,"line":1353},23,[1355,1360,1364],{"type":561,"tag":588,"props":1356,"children":1357},{"style":763},[1358],{"type":566,"value":1359},"  return",{"type":561,"tag":588,"props":1361,"children":1362},{"style":763},[1363],{"type":566,"value":964},{"type":561,"tag":588,"props":1365,"children":1366},{"style":757},[1367],{"type":566,"value":921},{"type":561,"tag":588,"props":1369,"children":1371},{"class":590,"line":1370},24,[1372],{"type":561,"tag":588,"props":1373,"children":1374},{"style":757},[1375],{"type":566,"value":1376},"};\n",{"type":561,"tag":1378,"props":1379,"children":1380},"style",{},[1381],{"type":566,"value":1382},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":830,"depth":830,"links":1384},[1385,1386],{"id":715,"depth":600,"text":715},{"id":720,"depth":600,"text":720,"children":1387},[1388],{"id":726,"depth":609,"text":726},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1395,1397],{"_path":222,"title":221,"description":1396},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":228,"title":227,"description":1398},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1715092077969]