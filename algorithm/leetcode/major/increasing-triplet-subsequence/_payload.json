[{"data":1,"prerenderedAt":1326},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":478,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1321},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":222,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":221,"description":482,"url":483,"body":484,"_type":1316,"_id":1317,"_source":1318,"_file":1319,"_extension":1320},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":485,"children":486,"toc":1310},"root",[487,494,499,504,543,548,579,584,614,619,634,639,645,650,656,1304],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":488,"tag":489,"props":500,"children":501},{},[502],{"type":493,"value":503},"示例 1：",{"type":488,"tag":505,"props":506,"children":509},"pre",{"className":507,"code":508,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[510],{"type":488,"tag":511,"props":512,"children":513},"code",{"__ignoreMap":481},[514,525,534],{"type":488,"tag":515,"props":516,"children":519},"span",{"class":517,"line":518},"line",1,[520],{"type":488,"tag":515,"props":521,"children":522},{},[523],{"type":493,"value":524},"输入：nums = [1,2,3,4,5]\n",{"type":488,"tag":515,"props":526,"children":528},{"class":517,"line":527},2,[529],{"type":488,"tag":515,"props":530,"children":531},{},[532],{"type":493,"value":533},"输出：true\n",{"type":488,"tag":515,"props":535,"children":537},{"class":517,"line":536},3,[538],{"type":488,"tag":515,"props":539,"children":540},{},[541],{"type":493,"value":542},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":488,"tag":489,"props":544,"children":545},{},[546],{"type":493,"value":547},"示例 2：",{"type":488,"tag":505,"props":549,"children":551},{"className":507,"code":550,"language":493,"meta":481,"style":481},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[552],{"type":488,"tag":511,"props":553,"children":554},{"__ignoreMap":481},[555,563,571],{"type":488,"tag":515,"props":556,"children":557},{"class":517,"line":518},[558],{"type":488,"tag":515,"props":559,"children":560},{},[561],{"type":493,"value":562},"输入：nums = [5,4,3,2,1]\n",{"type":488,"tag":515,"props":564,"children":565},{"class":517,"line":527},[566],{"type":488,"tag":515,"props":567,"children":568},{},[569],{"type":493,"value":570},"输出：false\n",{"type":488,"tag":515,"props":572,"children":573},{"class":517,"line":536},[574],{"type":488,"tag":515,"props":575,"children":576},{},[577],{"type":493,"value":578},"解释：不存在满足题意的三元组\n",{"type":488,"tag":489,"props":580,"children":581},{},[582],{"type":493,"value":583},"示例 3：",{"type":488,"tag":505,"props":585,"children":587},{"className":507,"code":586,"language":493,"meta":481,"style":481},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[588],{"type":488,"tag":511,"props":589,"children":590},{"__ignoreMap":481},[591,599,606],{"type":488,"tag":515,"props":592,"children":593},{"class":517,"line":518},[594],{"type":488,"tag":515,"props":595,"children":596},{},[597],{"type":493,"value":598},"输入：nums = [2,1,5,0,4,6]\n",{"type":488,"tag":515,"props":600,"children":601},{"class":517,"line":527},[602],{"type":488,"tag":515,"props":603,"children":604},{},[605],{"type":493,"value":533},{"type":488,"tag":515,"props":607,"children":608},{"class":517,"line":536},[609],{"type":488,"tag":515,"props":610,"children":611},{},[612],{"type":493,"value":613},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":488,"tag":489,"props":615,"children":616},{},[617],{"type":493,"value":618},"提示：",{"type":488,"tag":620,"props":621,"children":622},"ul",{},[623,629],{"type":488,"tag":624,"props":625,"children":626},"li",{},[627],{"type":493,"value":628},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":488,"tag":624,"props":630,"children":631},{},[632],{"type":493,"value":633},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":488,"tag":489,"props":635,"children":636},{},[637],{"type":493,"value":638},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":488,"tag":640,"props":641,"children":643},"h2",{"id":642},"解题思路",[644],{"type":493,"value":642},{"type":488,"tag":640,"props":646,"children":648},{"id":647},"实现",[649],{"type":493,"value":647},{"type":488,"tag":651,"props":652,"children":654},"h3",{"id":653},"贪心",[655],{"type":493,"value":653},{"type":488,"tag":505,"props":657,"children":661},{"className":658,"code":659,"language":660,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[662],{"type":488,"tag":511,"props":663,"children":664},{"__ignoreMap":481},[665,674,716,746,755,801,810,849,896,932,968,1038,1086,1095,1113,1168,1177,1206,1222,1231,1260,1269,1278,1295],{"type":488,"tag":515,"props":666,"children":667},{"class":517,"line":518},[668],{"type":488,"tag":515,"props":669,"children":671},{"style":670},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[672],{"type":493,"value":673},"/**\n",{"type":488,"tag":515,"props":675,"children":676},{"class":517,"line":527},[677,682,688,694,699,705,710],{"type":488,"tag":515,"props":678,"children":679},{"style":670},[680],{"type":493,"value":681}," * ",{"type":488,"tag":515,"props":683,"children":685},{"style":684},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[686],{"type":493,"value":687},"@",{"type":488,"tag":515,"props":689,"children":691},{"style":690},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[692],{"type":493,"value":693},"param",{"type":488,"tag":515,"props":695,"children":696},{"style":684},[697],{"type":493,"value":698}," {",{"type":488,"tag":515,"props":700,"children":702},{"style":701},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[703],{"type":493,"value":704},"number[]",{"type":488,"tag":515,"props":706,"children":707},{"style":684},[708],{"type":493,"value":709},"}",{"type":488,"tag":515,"props":711,"children":713},{"style":712},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[714],{"type":493,"value":715}," nums\n",{"type":488,"tag":515,"props":717,"children":718},{"class":517,"line":536},[719,723,727,732,736,741],{"type":488,"tag":515,"props":720,"children":721},{"style":670},[722],{"type":493,"value":681},{"type":488,"tag":515,"props":724,"children":725},{"style":684},[726],{"type":493,"value":687},{"type":488,"tag":515,"props":728,"children":729},{"style":690},[730],{"type":493,"value":731},"return",{"type":488,"tag":515,"props":733,"children":734},{"style":684},[735],{"type":493,"value":698},{"type":488,"tag":515,"props":737,"children":738},{"style":701},[739],{"type":493,"value":740},"boolean",{"type":488,"tag":515,"props":742,"children":743},{"style":684},[744],{"type":493,"value":745},"}\n",{"type":488,"tag":515,"props":747,"children":749},{"class":517,"line":748},4,[750],{"type":488,"tag":515,"props":751,"children":752},{"style":670},[753],{"type":493,"value":754}," */\n",{"type":488,"tag":515,"props":756,"children":758},{"class":517,"line":757},5,[759,765,771,776,781,786,791,796],{"type":488,"tag":515,"props":760,"children":762},{"style":761},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[763],{"type":493,"value":764},"var",{"type":488,"tag":515,"props":766,"children":768},{"style":767},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[769],{"type":493,"value":770}," increasingTriplet",{"type":488,"tag":515,"props":772,"children":773},{"style":684},[774],{"type":493,"value":775}," =",{"type":488,"tag":515,"props":777,"children":778},{"style":761},[779],{"type":493,"value":780}," function",{"type":488,"tag":515,"props":782,"children":783},{"style":684},[784],{"type":493,"value":785}," (",{"type":488,"tag":515,"props":787,"children":788},{"style":712},[789],{"type":493,"value":790},"nums",{"type":488,"tag":515,"props":792,"children":793},{"style":684},[794],{"type":493,"value":795},")",{"type":488,"tag":515,"props":797,"children":798},{"style":684},[799],{"type":493,"value":800}," {\n",{"type":488,"tag":515,"props":802,"children":804},{"class":517,"line":803},6,[805],{"type":488,"tag":515,"props":806,"children":807},{"style":670},[808],{"type":493,"value":809},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":488,"tag":515,"props":811,"children":813},{"class":517,"line":812},7,[814,819,824,828,833,838,844],{"type":488,"tag":515,"props":815,"children":816},{"style":761},[817],{"type":493,"value":818},"  let",{"type":488,"tag":515,"props":820,"children":821},{"style":712},[822],{"type":493,"value":823}," len",{"type":488,"tag":515,"props":825,"children":826},{"style":684},[827],{"type":493,"value":775},{"type":488,"tag":515,"props":829,"children":830},{"style":712},[831],{"type":493,"value":832}," nums",{"type":488,"tag":515,"props":834,"children":835},{"style":684},[836],{"type":493,"value":837},".",{"type":488,"tag":515,"props":839,"children":841},{"style":840},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[842],{"type":493,"value":843},"length",{"type":488,"tag":515,"props":845,"children":846},{"style":684},[847],{"type":493,"value":848},";\n",{"type":488,"tag":515,"props":850,"children":852},{"class":517,"line":851},8,[853,858,862,867,872,878,882,887,892],{"type":488,"tag":515,"props":854,"children":855},{"style":690},[856],{"type":493,"value":857},"  if",{"type":488,"tag":515,"props":859,"children":860},{"style":684},[861],{"type":493,"value":785},{"type":488,"tag":515,"props":863,"children":864},{"style":712},[865],{"type":493,"value":866},"len",{"type":488,"tag":515,"props":868,"children":869},{"style":684},[870],{"type":493,"value":871}," \u003C",{"type":488,"tag":515,"props":873,"children":875},{"style":874},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[876],{"type":493,"value":877}," 3",{"type":488,"tag":515,"props":879,"children":880},{"style":684},[881],{"type":493,"value":795},{"type":488,"tag":515,"props":883,"children":884},{"style":690},[885],{"type":493,"value":886}," return",{"type":488,"tag":515,"props":888,"children":889},{"style":690},[890],{"type":493,"value":891}," false",{"type":488,"tag":515,"props":893,"children":894},{"style":684},[895],{"type":493,"value":848},{"type":488,"tag":515,"props":897,"children":899},{"class":517,"line":898},9,[900,904,909,913,917,922,927],{"type":488,"tag":515,"props":901,"children":902},{"style":761},[903],{"type":493,"value":818},{"type":488,"tag":515,"props":905,"children":906},{"style":712},[907],{"type":493,"value":908}," first",{"type":488,"tag":515,"props":910,"children":911},{"style":684},[912],{"type":493,"value":775},{"type":488,"tag":515,"props":914,"children":915},{"style":712},[916],{"type":493,"value":832},{"type":488,"tag":515,"props":918,"children":919},{"style":684},[920],{"type":493,"value":921},"[",{"type":488,"tag":515,"props":923,"children":924},{"style":874},[925],{"type":493,"value":926},"0",{"type":488,"tag":515,"props":928,"children":929},{"style":684},[930],{"type":493,"value":931},"];\n",{"type":488,"tag":515,"props":933,"children":935},{"class":517,"line":934},10,[936,940,945,949,954,958,964],{"type":488,"tag":515,"props":937,"children":938},{"style":761},[939],{"type":493,"value":818},{"type":488,"tag":515,"props":941,"children":942},{"style":712},[943],{"type":493,"value":944}," second",{"type":488,"tag":515,"props":946,"children":947},{"style":684},[948],{"type":493,"value":775},{"type":488,"tag":515,"props":950,"children":951},{"style":712},[952],{"type":493,"value":953}," Number",{"type":488,"tag":515,"props":955,"children":956},{"style":684},[957],{"type":493,"value":837},{"type":488,"tag":515,"props":959,"children":961},{"style":960},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[962],{"type":493,"value":963},"MAX_SAFE_INTEGER",{"type":488,"tag":515,"props":965,"children":966},{"style":684},[967],{"type":493,"value":848},{"type":488,"tag":515,"props":969,"children":971},{"class":517,"line":970},11,[972,977,981,986,991,995,1000,1005,1009,1013,1017,1021,1025,1030,1034],{"type":488,"tag":515,"props":973,"children":974},{"style":690},[975],{"type":493,"value":976},"  for",{"type":488,"tag":515,"props":978,"children":979},{"style":684},[980],{"type":493,"value":785},{"type":488,"tag":515,"props":982,"children":983},{"style":761},[984],{"type":493,"value":985},"let",{"type":488,"tag":515,"props":987,"children":988},{"style":712},[989],{"type":493,"value":990}," i",{"type":488,"tag":515,"props":992,"children":993},{"style":684},[994],{"type":493,"value":775},{"type":488,"tag":515,"props":996,"children":997},{"style":874},[998],{"type":493,"value":999}," 0",{"type":488,"tag":515,"props":1001,"children":1002},{"style":684},[1003],{"type":493,"value":1004},";",{"type":488,"tag":515,"props":1006,"children":1007},{"style":712},[1008],{"type":493,"value":990},{"type":488,"tag":515,"props":1010,"children":1011},{"style":684},[1012],{"type":493,"value":871},{"type":488,"tag":515,"props":1014,"children":1015},{"style":712},[1016],{"type":493,"value":823},{"type":488,"tag":515,"props":1018,"children":1019},{"style":684},[1020],{"type":493,"value":1004},{"type":488,"tag":515,"props":1022,"children":1023},{"style":712},[1024],{"type":493,"value":990},{"type":488,"tag":515,"props":1026,"children":1027},{"style":761},[1028],{"type":493,"value":1029},"++",{"type":488,"tag":515,"props":1031,"children":1032},{"style":684},[1033],{"type":493,"value":795},{"type":488,"tag":515,"props":1035,"children":1036},{"style":684},[1037],{"type":493,"value":800},{"type":488,"tag":515,"props":1039,"children":1041},{"class":517,"line":1040},12,[1042,1047,1051,1055,1059,1064,1069,1074,1078,1082],{"type":488,"tag":515,"props":1043,"children":1044},{"style":690},[1045],{"type":493,"value":1046},"    if",{"type":488,"tag":515,"props":1048,"children":1049},{"style":684},[1050],{"type":493,"value":785},{"type":488,"tag":515,"props":1052,"children":1053},{"style":712},[1054],{"type":493,"value":790},{"type":488,"tag":515,"props":1056,"children":1057},{"style":684},[1058],{"type":493,"value":921},{"type":488,"tag":515,"props":1060,"children":1061},{"style":712},[1062],{"type":493,"value":1063},"i",{"type":488,"tag":515,"props":1065,"children":1066},{"style":684},[1067],{"type":493,"value":1068},"]",{"type":488,"tag":515,"props":1070,"children":1071},{"style":684},[1072],{"type":493,"value":1073}," >",{"type":488,"tag":515,"props":1075,"children":1076},{"style":712},[1077],{"type":493,"value":944},{"type":488,"tag":515,"props":1079,"children":1080},{"style":684},[1081],{"type":493,"value":795},{"type":488,"tag":515,"props":1083,"children":1084},{"style":684},[1085],{"type":493,"value":800},{"type":488,"tag":515,"props":1087,"children":1089},{"class":517,"line":1088},13,[1090],{"type":488,"tag":515,"props":1091,"children":1092},{"style":670},[1093],{"type":493,"value":1094},"      // 找到第三个数\n",{"type":488,"tag":515,"props":1096,"children":1098},{"class":517,"line":1097},14,[1099,1104,1109],{"type":488,"tag":515,"props":1100,"children":1101},{"style":690},[1102],{"type":493,"value":1103},"      return",{"type":488,"tag":515,"props":1105,"children":1106},{"style":690},[1107],{"type":493,"value":1108}," true",{"type":488,"tag":515,"props":1110,"children":1111},{"style":684},[1112],{"type":493,"value":848},{"type":488,"tag":515,"props":1114,"children":1116},{"class":517,"line":1115},15,[1117,1122,1127,1132,1136,1140,1144,1148,1152,1156,1160,1164],{"type":488,"tag":515,"props":1118,"children":1119},{"style":684},[1120],{"type":493,"value":1121},"    }",{"type":488,"tag":515,"props":1123,"children":1124},{"style":690},[1125],{"type":493,"value":1126}," else",{"type":488,"tag":515,"props":1128,"children":1129},{"style":690},[1130],{"type":493,"value":1131}," if",{"type":488,"tag":515,"props":1133,"children":1134},{"style":684},[1135],{"type":493,"value":785},{"type":488,"tag":515,"props":1137,"children":1138},{"style":712},[1139],{"type":493,"value":790},{"type":488,"tag":515,"props":1141,"children":1142},{"style":684},[1143],{"type":493,"value":921},{"type":488,"tag":515,"props":1145,"children":1146},{"style":712},[1147],{"type":493,"value":1063},{"type":488,"tag":515,"props":1149,"children":1150},{"style":684},[1151],{"type":493,"value":1068},{"type":488,"tag":515,"props":1153,"children":1154},{"style":684},[1155],{"type":493,"value":1073},{"type":488,"tag":515,"props":1157,"children":1158},{"style":712},[1159],{"type":493,"value":908},{"type":488,"tag":515,"props":1161,"children":1162},{"style":684},[1163],{"type":493,"value":795},{"type":488,"tag":515,"props":1165,"children":1166},{"style":684},[1167],{"type":493,"value":800},{"type":488,"tag":515,"props":1169,"children":1171},{"class":517,"line":1170},16,[1172],{"type":488,"tag":515,"props":1173,"children":1174},{"style":670},[1175],{"type":493,"value":1176},"      // 更新第二个数\n",{"type":488,"tag":515,"props":1178,"children":1180},{"class":517,"line":1179},17,[1181,1186,1190,1194,1198,1202],{"type":488,"tag":515,"props":1182,"children":1183},{"style":712},[1184],{"type":493,"value":1185},"      second",{"type":488,"tag":515,"props":1187,"children":1188},{"style":684},[1189],{"type":493,"value":775},{"type":488,"tag":515,"props":1191,"children":1192},{"style":712},[1193],{"type":493,"value":832},{"type":488,"tag":515,"props":1195,"children":1196},{"style":684},[1197],{"type":493,"value":921},{"type":488,"tag":515,"props":1199,"children":1200},{"style":712},[1201],{"type":493,"value":1063},{"type":488,"tag":515,"props":1203,"children":1204},{"style":684},[1205],{"type":493,"value":931},{"type":488,"tag":515,"props":1207,"children":1209},{"class":517,"line":1208},18,[1210,1214,1218],{"type":488,"tag":515,"props":1211,"children":1212},{"style":684},[1213],{"type":493,"value":1121},{"type":488,"tag":515,"props":1215,"children":1216},{"style":690},[1217],{"type":493,"value":1126},{"type":488,"tag":515,"props":1219,"children":1220},{"style":684},[1221],{"type":493,"value":800},{"type":488,"tag":515,"props":1223,"children":1225},{"class":517,"line":1224},19,[1226],{"type":488,"tag":515,"props":1227,"children":1228},{"style":670},[1229],{"type":493,"value":1230},"      // 更新第一个数\n",{"type":488,"tag":515,"props":1232,"children":1234},{"class":517,"line":1233},20,[1235,1240,1244,1248,1252,1256],{"type":488,"tag":515,"props":1236,"children":1237},{"style":712},[1238],{"type":493,"value":1239},"      first",{"type":488,"tag":515,"props":1241,"children":1242},{"style":684},[1243],{"type":493,"value":775},{"type":488,"tag":515,"props":1245,"children":1246},{"style":712},[1247],{"type":493,"value":832},{"type":488,"tag":515,"props":1249,"children":1250},{"style":684},[1251],{"type":493,"value":921},{"type":488,"tag":515,"props":1253,"children":1254},{"style":712},[1255],{"type":493,"value":1063},{"type":488,"tag":515,"props":1257,"children":1258},{"style":684},[1259],{"type":493,"value":931},{"type":488,"tag":515,"props":1261,"children":1263},{"class":517,"line":1262},21,[1264],{"type":488,"tag":515,"props":1265,"children":1266},{"style":684},[1267],{"type":493,"value":1268},"    }\n",{"type":488,"tag":515,"props":1270,"children":1272},{"class":517,"line":1271},22,[1273],{"type":488,"tag":515,"props":1274,"children":1275},{"style":684},[1276],{"type":493,"value":1277},"  }\n",{"type":488,"tag":515,"props":1279,"children":1281},{"class":517,"line":1280},23,[1282,1287,1291],{"type":488,"tag":515,"props":1283,"children":1284},{"style":690},[1285],{"type":493,"value":1286},"  return",{"type":488,"tag":515,"props":1288,"children":1289},{"style":690},[1290],{"type":493,"value":891},{"type":488,"tag":515,"props":1292,"children":1293},{"style":684},[1294],{"type":493,"value":848},{"type":488,"tag":515,"props":1296,"children":1298},{"class":517,"line":1297},24,[1299],{"type":488,"tag":515,"props":1300,"children":1301},{"style":684},[1302],{"type":493,"value":1303},"};\n",{"type":488,"tag":1305,"props":1306,"children":1307},"style",{},[1308],{"type":493,"value":1309},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":757,"depth":757,"links":1311},[1312,1313],{"id":642,"depth":527,"text":642},{"id":647,"depth":527,"text":647,"children":1314},[1315],{"id":653,"depth":536,"text":653},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1322,1324],{"_path":219,"title":218,"description":1323},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":225,"title":224,"description":1325},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1714046227312]