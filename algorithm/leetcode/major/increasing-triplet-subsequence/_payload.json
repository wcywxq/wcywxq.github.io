[{"data":1,"prerenderedAt":1400},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":552,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1395},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":225,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":224,"description":556,"url":557,"body":558,"_type":1390,"_id":1391,"_source":1392,"_file":1393,"_extension":1394},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":559,"children":560,"toc":1384},"root",[561,568,573,578,617,622,653,658,688,693,708,713,719,724,730,1378],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"示例 1：",{"type":562,"tag":579,"props":580,"children":583},"pre",{"className":581,"code":582,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[584],{"type":562,"tag":585,"props":586,"children":587},"code",{"__ignoreMap":555},[588,599,608],{"type":562,"tag":589,"props":590,"children":593},"span",{"class":591,"line":592},"line",1,[594],{"type":562,"tag":589,"props":595,"children":596},{},[597],{"type":567,"value":598},"输入：nums = [1,2,3,4,5]\n",{"type":562,"tag":589,"props":600,"children":602},{"class":591,"line":601},2,[603],{"type":562,"tag":589,"props":604,"children":605},{},[606],{"type":567,"value":607},"输出：true\n",{"type":562,"tag":589,"props":609,"children":611},{"class":591,"line":610},3,[612],{"type":562,"tag":589,"props":613,"children":614},{},[615],{"type":567,"value":616},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":562,"tag":563,"props":618,"children":619},{},[620],{"type":567,"value":621},"示例 2：",{"type":562,"tag":579,"props":623,"children":625},{"className":581,"code":624,"language":567,"meta":555,"style":555},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[626],{"type":562,"tag":585,"props":627,"children":628},{"__ignoreMap":555},[629,637,645],{"type":562,"tag":589,"props":630,"children":631},{"class":591,"line":592},[632],{"type":562,"tag":589,"props":633,"children":634},{},[635],{"type":567,"value":636},"输入：nums = [5,4,3,2,1]\n",{"type":562,"tag":589,"props":638,"children":639},{"class":591,"line":601},[640],{"type":562,"tag":589,"props":641,"children":642},{},[643],{"type":567,"value":644},"输出：false\n",{"type":562,"tag":589,"props":646,"children":647},{"class":591,"line":610},[648],{"type":562,"tag":589,"props":649,"children":650},{},[651],{"type":567,"value":652},"解释：不存在满足题意的三元组\n",{"type":562,"tag":563,"props":654,"children":655},{},[656],{"type":567,"value":657},"示例 3：",{"type":562,"tag":579,"props":659,"children":661},{"className":581,"code":660,"language":567,"meta":555,"style":555},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[662],{"type":562,"tag":585,"props":663,"children":664},{"__ignoreMap":555},[665,673,680],{"type":562,"tag":589,"props":666,"children":667},{"class":591,"line":592},[668],{"type":562,"tag":589,"props":669,"children":670},{},[671],{"type":567,"value":672},"输入：nums = [2,1,5,0,4,6]\n",{"type":562,"tag":589,"props":674,"children":675},{"class":591,"line":601},[676],{"type":562,"tag":589,"props":677,"children":678},{},[679],{"type":567,"value":607},{"type":562,"tag":589,"props":681,"children":682},{"class":591,"line":610},[683],{"type":562,"tag":589,"props":684,"children":685},{},[686],{"type":567,"value":687},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":562,"tag":563,"props":689,"children":690},{},[691],{"type":567,"value":692},"提示：",{"type":562,"tag":694,"props":695,"children":696},"ul",{},[697,703],{"type":562,"tag":698,"props":699,"children":700},"li",{},[701],{"type":567,"value":702},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":562,"tag":698,"props":704,"children":705},{},[706],{"type":567,"value":707},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":562,"tag":563,"props":709,"children":710},{},[711],{"type":567,"value":712},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":562,"tag":714,"props":715,"children":717},"h2",{"id":716},"解题思路",[718],{"type":567,"value":716},{"type":562,"tag":714,"props":720,"children":722},{"id":721},"实现",[723],{"type":567,"value":721},{"type":562,"tag":725,"props":726,"children":728},"h3",{"id":727},"贪心",[729],{"type":567,"value":727},{"type":562,"tag":579,"props":731,"children":735},{"className":732,"code":733,"language":734,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[736],{"type":562,"tag":585,"props":737,"children":738},{"__ignoreMap":555},[739,748,790,820,829,875,884,923,970,1006,1042,1112,1160,1169,1187,1242,1251,1280,1296,1305,1334,1343,1352,1369],{"type":562,"tag":589,"props":740,"children":741},{"class":591,"line":592},[742],{"type":562,"tag":589,"props":743,"children":745},{"style":744},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[746],{"type":567,"value":747},"/**\n",{"type":562,"tag":589,"props":749,"children":750},{"class":591,"line":601},[751,756,762,768,773,779,784],{"type":562,"tag":589,"props":752,"children":753},{"style":744},[754],{"type":567,"value":755}," * ",{"type":562,"tag":589,"props":757,"children":759},{"style":758},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[760],{"type":567,"value":761},"@",{"type":562,"tag":589,"props":763,"children":765},{"style":764},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[766],{"type":567,"value":767},"param",{"type":562,"tag":589,"props":769,"children":770},{"style":758},[771],{"type":567,"value":772}," {",{"type":562,"tag":589,"props":774,"children":776},{"style":775},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[777],{"type":567,"value":778},"number[]",{"type":562,"tag":589,"props":780,"children":781},{"style":758},[782],{"type":567,"value":783},"}",{"type":562,"tag":589,"props":785,"children":787},{"style":786},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[788],{"type":567,"value":789}," nums\n",{"type":562,"tag":589,"props":791,"children":792},{"class":591,"line":610},[793,797,801,806,810,815],{"type":562,"tag":589,"props":794,"children":795},{"style":744},[796],{"type":567,"value":755},{"type":562,"tag":589,"props":798,"children":799},{"style":758},[800],{"type":567,"value":761},{"type":562,"tag":589,"props":802,"children":803},{"style":764},[804],{"type":567,"value":805},"return",{"type":562,"tag":589,"props":807,"children":808},{"style":758},[809],{"type":567,"value":772},{"type":562,"tag":589,"props":811,"children":812},{"style":775},[813],{"type":567,"value":814},"boolean",{"type":562,"tag":589,"props":816,"children":817},{"style":758},[818],{"type":567,"value":819},"}\n",{"type":562,"tag":589,"props":821,"children":823},{"class":591,"line":822},4,[824],{"type":562,"tag":589,"props":825,"children":826},{"style":744},[827],{"type":567,"value":828}," */\n",{"type":562,"tag":589,"props":830,"children":832},{"class":591,"line":831},5,[833,839,845,850,855,860,865,870],{"type":562,"tag":589,"props":834,"children":836},{"style":835},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[837],{"type":567,"value":838},"var",{"type":562,"tag":589,"props":840,"children":842},{"style":841},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[843],{"type":567,"value":844}," increasingTriplet",{"type":562,"tag":589,"props":846,"children":847},{"style":758},[848],{"type":567,"value":849}," =",{"type":562,"tag":589,"props":851,"children":852},{"style":835},[853],{"type":567,"value":854}," function",{"type":562,"tag":589,"props":856,"children":857},{"style":758},[858],{"type":567,"value":859}," (",{"type":562,"tag":589,"props":861,"children":862},{"style":786},[863],{"type":567,"value":864},"nums",{"type":562,"tag":589,"props":866,"children":867},{"style":758},[868],{"type":567,"value":869},")",{"type":562,"tag":589,"props":871,"children":872},{"style":758},[873],{"type":567,"value":874}," {\n",{"type":562,"tag":589,"props":876,"children":878},{"class":591,"line":877},6,[879],{"type":562,"tag":589,"props":880,"children":881},{"style":744},[882],{"type":567,"value":883},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":562,"tag":589,"props":885,"children":887},{"class":591,"line":886},7,[888,893,898,902,907,912,918],{"type":562,"tag":589,"props":889,"children":890},{"style":835},[891],{"type":567,"value":892},"  let",{"type":562,"tag":589,"props":894,"children":895},{"style":786},[896],{"type":567,"value":897}," len",{"type":562,"tag":589,"props":899,"children":900},{"style":758},[901],{"type":567,"value":849},{"type":562,"tag":589,"props":903,"children":904},{"style":786},[905],{"type":567,"value":906}," nums",{"type":562,"tag":589,"props":908,"children":909},{"style":758},[910],{"type":567,"value":911},".",{"type":562,"tag":589,"props":913,"children":915},{"style":914},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[916],{"type":567,"value":917},"length",{"type":562,"tag":589,"props":919,"children":920},{"style":758},[921],{"type":567,"value":922},";\n",{"type":562,"tag":589,"props":924,"children":926},{"class":591,"line":925},8,[927,932,936,941,946,952,956,961,966],{"type":562,"tag":589,"props":928,"children":929},{"style":764},[930],{"type":567,"value":931},"  if",{"type":562,"tag":589,"props":933,"children":934},{"style":758},[935],{"type":567,"value":859},{"type":562,"tag":589,"props":937,"children":938},{"style":786},[939],{"type":567,"value":940},"len",{"type":562,"tag":589,"props":942,"children":943},{"style":758},[944],{"type":567,"value":945}," \u003C",{"type":562,"tag":589,"props":947,"children":949},{"style":948},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[950],{"type":567,"value":951}," 3",{"type":562,"tag":589,"props":953,"children":954},{"style":758},[955],{"type":567,"value":869},{"type":562,"tag":589,"props":957,"children":958},{"style":764},[959],{"type":567,"value":960}," return",{"type":562,"tag":589,"props":962,"children":963},{"style":764},[964],{"type":567,"value":965}," false",{"type":562,"tag":589,"props":967,"children":968},{"style":758},[969],{"type":567,"value":922},{"type":562,"tag":589,"props":971,"children":973},{"class":591,"line":972},9,[974,978,983,987,991,996,1001],{"type":562,"tag":589,"props":975,"children":976},{"style":835},[977],{"type":567,"value":892},{"type":562,"tag":589,"props":979,"children":980},{"style":786},[981],{"type":567,"value":982}," first",{"type":562,"tag":589,"props":984,"children":985},{"style":758},[986],{"type":567,"value":849},{"type":562,"tag":589,"props":988,"children":989},{"style":786},[990],{"type":567,"value":906},{"type":562,"tag":589,"props":992,"children":993},{"style":758},[994],{"type":567,"value":995},"[",{"type":562,"tag":589,"props":997,"children":998},{"style":948},[999],{"type":567,"value":1000},"0",{"type":562,"tag":589,"props":1002,"children":1003},{"style":758},[1004],{"type":567,"value":1005},"];\n",{"type":562,"tag":589,"props":1007,"children":1009},{"class":591,"line":1008},10,[1010,1014,1019,1023,1028,1032,1038],{"type":562,"tag":589,"props":1011,"children":1012},{"style":835},[1013],{"type":567,"value":892},{"type":562,"tag":589,"props":1015,"children":1016},{"style":786},[1017],{"type":567,"value":1018}," second",{"type":562,"tag":589,"props":1020,"children":1021},{"style":758},[1022],{"type":567,"value":849},{"type":562,"tag":589,"props":1024,"children":1025},{"style":786},[1026],{"type":567,"value":1027}," Number",{"type":562,"tag":589,"props":1029,"children":1030},{"style":758},[1031],{"type":567,"value":911},{"type":562,"tag":589,"props":1033,"children":1035},{"style":1034},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[1036],{"type":567,"value":1037},"MAX_SAFE_INTEGER",{"type":562,"tag":589,"props":1039,"children":1040},{"style":758},[1041],{"type":567,"value":922},{"type":562,"tag":589,"props":1043,"children":1045},{"class":591,"line":1044},11,[1046,1051,1055,1060,1065,1069,1074,1079,1083,1087,1091,1095,1099,1104,1108],{"type":562,"tag":589,"props":1047,"children":1048},{"style":764},[1049],{"type":567,"value":1050},"  for",{"type":562,"tag":589,"props":1052,"children":1053},{"style":758},[1054],{"type":567,"value":859},{"type":562,"tag":589,"props":1056,"children":1057},{"style":835},[1058],{"type":567,"value":1059},"let",{"type":562,"tag":589,"props":1061,"children":1062},{"style":786},[1063],{"type":567,"value":1064}," i",{"type":562,"tag":589,"props":1066,"children":1067},{"style":758},[1068],{"type":567,"value":849},{"type":562,"tag":589,"props":1070,"children":1071},{"style":948},[1072],{"type":567,"value":1073}," 0",{"type":562,"tag":589,"props":1075,"children":1076},{"style":758},[1077],{"type":567,"value":1078},";",{"type":562,"tag":589,"props":1080,"children":1081},{"style":786},[1082],{"type":567,"value":1064},{"type":562,"tag":589,"props":1084,"children":1085},{"style":758},[1086],{"type":567,"value":945},{"type":562,"tag":589,"props":1088,"children":1089},{"style":786},[1090],{"type":567,"value":897},{"type":562,"tag":589,"props":1092,"children":1093},{"style":758},[1094],{"type":567,"value":1078},{"type":562,"tag":589,"props":1096,"children":1097},{"style":786},[1098],{"type":567,"value":1064},{"type":562,"tag":589,"props":1100,"children":1101},{"style":835},[1102],{"type":567,"value":1103},"++",{"type":562,"tag":589,"props":1105,"children":1106},{"style":758},[1107],{"type":567,"value":869},{"type":562,"tag":589,"props":1109,"children":1110},{"style":758},[1111],{"type":567,"value":874},{"type":562,"tag":589,"props":1113,"children":1115},{"class":591,"line":1114},12,[1116,1121,1125,1129,1133,1138,1143,1148,1152,1156],{"type":562,"tag":589,"props":1117,"children":1118},{"style":764},[1119],{"type":567,"value":1120},"    if",{"type":562,"tag":589,"props":1122,"children":1123},{"style":758},[1124],{"type":567,"value":859},{"type":562,"tag":589,"props":1126,"children":1127},{"style":786},[1128],{"type":567,"value":864},{"type":562,"tag":589,"props":1130,"children":1131},{"style":758},[1132],{"type":567,"value":995},{"type":562,"tag":589,"props":1134,"children":1135},{"style":786},[1136],{"type":567,"value":1137},"i",{"type":562,"tag":589,"props":1139,"children":1140},{"style":758},[1141],{"type":567,"value":1142},"]",{"type":562,"tag":589,"props":1144,"children":1145},{"style":758},[1146],{"type":567,"value":1147}," >",{"type":562,"tag":589,"props":1149,"children":1150},{"style":786},[1151],{"type":567,"value":1018},{"type":562,"tag":589,"props":1153,"children":1154},{"style":758},[1155],{"type":567,"value":869},{"type":562,"tag":589,"props":1157,"children":1158},{"style":758},[1159],{"type":567,"value":874},{"type":562,"tag":589,"props":1161,"children":1163},{"class":591,"line":1162},13,[1164],{"type":562,"tag":589,"props":1165,"children":1166},{"style":744},[1167],{"type":567,"value":1168},"      // 找到第三个数\n",{"type":562,"tag":589,"props":1170,"children":1172},{"class":591,"line":1171},14,[1173,1178,1183],{"type":562,"tag":589,"props":1174,"children":1175},{"style":764},[1176],{"type":567,"value":1177},"      return",{"type":562,"tag":589,"props":1179,"children":1180},{"style":764},[1181],{"type":567,"value":1182}," true",{"type":562,"tag":589,"props":1184,"children":1185},{"style":758},[1186],{"type":567,"value":922},{"type":562,"tag":589,"props":1188,"children":1190},{"class":591,"line":1189},15,[1191,1196,1201,1206,1210,1214,1218,1222,1226,1230,1234,1238],{"type":562,"tag":589,"props":1192,"children":1193},{"style":758},[1194],{"type":567,"value":1195},"    }",{"type":562,"tag":589,"props":1197,"children":1198},{"style":764},[1199],{"type":567,"value":1200}," else",{"type":562,"tag":589,"props":1202,"children":1203},{"style":764},[1204],{"type":567,"value":1205}," if",{"type":562,"tag":589,"props":1207,"children":1208},{"style":758},[1209],{"type":567,"value":859},{"type":562,"tag":589,"props":1211,"children":1212},{"style":786},[1213],{"type":567,"value":864},{"type":562,"tag":589,"props":1215,"children":1216},{"style":758},[1217],{"type":567,"value":995},{"type":562,"tag":589,"props":1219,"children":1220},{"style":786},[1221],{"type":567,"value":1137},{"type":562,"tag":589,"props":1223,"children":1224},{"style":758},[1225],{"type":567,"value":1142},{"type":562,"tag":589,"props":1227,"children":1228},{"style":758},[1229],{"type":567,"value":1147},{"type":562,"tag":589,"props":1231,"children":1232},{"style":786},[1233],{"type":567,"value":982},{"type":562,"tag":589,"props":1235,"children":1236},{"style":758},[1237],{"type":567,"value":869},{"type":562,"tag":589,"props":1239,"children":1240},{"style":758},[1241],{"type":567,"value":874},{"type":562,"tag":589,"props":1243,"children":1245},{"class":591,"line":1244},16,[1246],{"type":562,"tag":589,"props":1247,"children":1248},{"style":744},[1249],{"type":567,"value":1250},"      // 更新第二个数\n",{"type":562,"tag":589,"props":1252,"children":1254},{"class":591,"line":1253},17,[1255,1260,1264,1268,1272,1276],{"type":562,"tag":589,"props":1256,"children":1257},{"style":786},[1258],{"type":567,"value":1259},"      second",{"type":562,"tag":589,"props":1261,"children":1262},{"style":758},[1263],{"type":567,"value":849},{"type":562,"tag":589,"props":1265,"children":1266},{"style":786},[1267],{"type":567,"value":906},{"type":562,"tag":589,"props":1269,"children":1270},{"style":758},[1271],{"type":567,"value":995},{"type":562,"tag":589,"props":1273,"children":1274},{"style":786},[1275],{"type":567,"value":1137},{"type":562,"tag":589,"props":1277,"children":1278},{"style":758},[1279],{"type":567,"value":1005},{"type":562,"tag":589,"props":1281,"children":1283},{"class":591,"line":1282},18,[1284,1288,1292],{"type":562,"tag":589,"props":1285,"children":1286},{"style":758},[1287],{"type":567,"value":1195},{"type":562,"tag":589,"props":1289,"children":1290},{"style":764},[1291],{"type":567,"value":1200},{"type":562,"tag":589,"props":1293,"children":1294},{"style":758},[1295],{"type":567,"value":874},{"type":562,"tag":589,"props":1297,"children":1299},{"class":591,"line":1298},19,[1300],{"type":562,"tag":589,"props":1301,"children":1302},{"style":744},[1303],{"type":567,"value":1304},"      // 更新第一个数\n",{"type":562,"tag":589,"props":1306,"children":1308},{"class":591,"line":1307},20,[1309,1314,1318,1322,1326,1330],{"type":562,"tag":589,"props":1310,"children":1311},{"style":786},[1312],{"type":567,"value":1313},"      first",{"type":562,"tag":589,"props":1315,"children":1316},{"style":758},[1317],{"type":567,"value":849},{"type":562,"tag":589,"props":1319,"children":1320},{"style":786},[1321],{"type":567,"value":906},{"type":562,"tag":589,"props":1323,"children":1324},{"style":758},[1325],{"type":567,"value":995},{"type":562,"tag":589,"props":1327,"children":1328},{"style":786},[1329],{"type":567,"value":1137},{"type":562,"tag":589,"props":1331,"children":1332},{"style":758},[1333],{"type":567,"value":1005},{"type":562,"tag":589,"props":1335,"children":1337},{"class":591,"line":1336},21,[1338],{"type":562,"tag":589,"props":1339,"children":1340},{"style":758},[1341],{"type":567,"value":1342},"    }\n",{"type":562,"tag":589,"props":1344,"children":1346},{"class":591,"line":1345},22,[1347],{"type":562,"tag":589,"props":1348,"children":1349},{"style":758},[1350],{"type":567,"value":1351},"  }\n",{"type":562,"tag":589,"props":1353,"children":1355},{"class":591,"line":1354},23,[1356,1361,1365],{"type":562,"tag":589,"props":1357,"children":1358},{"style":764},[1359],{"type":567,"value":1360},"  return",{"type":562,"tag":589,"props":1362,"children":1363},{"style":764},[1364],{"type":567,"value":965},{"type":562,"tag":589,"props":1366,"children":1367},{"style":758},[1368],{"type":567,"value":922},{"type":562,"tag":589,"props":1370,"children":1372},{"class":591,"line":1371},24,[1373],{"type":562,"tag":589,"props":1374,"children":1375},{"style":758},[1376],{"type":567,"value":1377},"};\n",{"type":562,"tag":1379,"props":1380,"children":1381},"style",{},[1382],{"type":567,"value":1383},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":831,"depth":831,"links":1385},[1386,1387],{"id":716,"depth":601,"text":716},{"id":721,"depth":601,"text":721,"children":1388},[1389],{"id":727,"depth":610,"text":727},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1396,1398],{"_path":222,"title":221,"description":1397},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":228,"title":227,"description":1399},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1716810727586]