[{"data":1,"prerenderedAt":1354},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":506,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1349},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":222,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":221,"description":510,"url":511,"body":512,"_type":1344,"_id":1345,"_source":1346,"_file":1347,"_extension":1348},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":513,"children":514,"toc":1338},"root",[515,522,527,532,571,576,607,612,642,647,662,667,673,678,684,1332],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":521,"value":531},"示例 1：",{"type":516,"tag":533,"props":534,"children":537},"pre",{"className":535,"code":536,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[538],{"type":516,"tag":539,"props":540,"children":541},"code",{"__ignoreMap":509},[542,553,562],{"type":516,"tag":543,"props":544,"children":547},"span",{"class":545,"line":546},"line",1,[548],{"type":516,"tag":543,"props":549,"children":550},{},[551],{"type":521,"value":552},"输入：nums = [1,2,3,4,5]\n",{"type":516,"tag":543,"props":554,"children":556},{"class":545,"line":555},2,[557],{"type":516,"tag":543,"props":558,"children":559},{},[560],{"type":521,"value":561},"输出：true\n",{"type":516,"tag":543,"props":563,"children":565},{"class":545,"line":564},3,[566],{"type":516,"tag":543,"props":567,"children":568},{},[569],{"type":521,"value":570},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":516,"tag":517,"props":572,"children":573},{},[574],{"type":521,"value":575},"示例 2：",{"type":516,"tag":533,"props":577,"children":579},{"className":535,"code":578,"language":521,"meta":509,"style":509},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[580],{"type":516,"tag":539,"props":581,"children":582},{"__ignoreMap":509},[583,591,599],{"type":516,"tag":543,"props":584,"children":585},{"class":545,"line":546},[586],{"type":516,"tag":543,"props":587,"children":588},{},[589],{"type":521,"value":590},"输入：nums = [5,4,3,2,1]\n",{"type":516,"tag":543,"props":592,"children":593},{"class":545,"line":555},[594],{"type":516,"tag":543,"props":595,"children":596},{},[597],{"type":521,"value":598},"输出：false\n",{"type":516,"tag":543,"props":600,"children":601},{"class":545,"line":564},[602],{"type":516,"tag":543,"props":603,"children":604},{},[605],{"type":521,"value":606},"解释：不存在满足题意的三元组\n",{"type":516,"tag":517,"props":608,"children":609},{},[610],{"type":521,"value":611},"示例 3：",{"type":516,"tag":533,"props":613,"children":615},{"className":535,"code":614,"language":521,"meta":509,"style":509},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[616],{"type":516,"tag":539,"props":617,"children":618},{"__ignoreMap":509},[619,627,634],{"type":516,"tag":543,"props":620,"children":621},{"class":545,"line":546},[622],{"type":516,"tag":543,"props":623,"children":624},{},[625],{"type":521,"value":626},"输入：nums = [2,1,5,0,4,6]\n",{"type":516,"tag":543,"props":628,"children":629},{"class":545,"line":555},[630],{"type":516,"tag":543,"props":631,"children":632},{},[633],{"type":521,"value":561},{"type":516,"tag":543,"props":635,"children":636},{"class":545,"line":564},[637],{"type":516,"tag":543,"props":638,"children":639},{},[640],{"type":521,"value":641},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":516,"tag":517,"props":643,"children":644},{},[645],{"type":521,"value":646},"提示：",{"type":516,"tag":648,"props":649,"children":650},"ul",{},[651,657],{"type":516,"tag":652,"props":653,"children":654},"li",{},[655],{"type":521,"value":656},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":516,"tag":652,"props":658,"children":659},{},[660],{"type":521,"value":661},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":516,"tag":517,"props":663,"children":664},{},[665],{"type":521,"value":666},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":516,"tag":668,"props":669,"children":671},"h2",{"id":670},"解题思路",[672],{"type":521,"value":670},{"type":516,"tag":668,"props":674,"children":676},{"id":675},"实现",[677],{"type":521,"value":675},{"type":516,"tag":679,"props":680,"children":682},"h3",{"id":681},"贪心",[683],{"type":521,"value":681},{"type":516,"tag":533,"props":685,"children":689},{"className":686,"code":687,"language":688,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[690],{"type":516,"tag":539,"props":691,"children":692},{"__ignoreMap":509},[693,702,744,774,783,829,838,877,924,960,996,1066,1114,1123,1141,1196,1205,1234,1250,1259,1288,1297,1306,1323],{"type":516,"tag":543,"props":694,"children":695},{"class":545,"line":546},[696],{"type":516,"tag":543,"props":697,"children":699},{"style":698},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[700],{"type":521,"value":701},"/**\n",{"type":516,"tag":543,"props":703,"children":704},{"class":545,"line":555},[705,710,716,722,727,733,738],{"type":516,"tag":543,"props":706,"children":707},{"style":698},[708],{"type":521,"value":709}," * ",{"type":516,"tag":543,"props":711,"children":713},{"style":712},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[714],{"type":521,"value":715},"@",{"type":516,"tag":543,"props":717,"children":719},{"style":718},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[720],{"type":521,"value":721},"param",{"type":516,"tag":543,"props":723,"children":724},{"style":712},[725],{"type":521,"value":726}," {",{"type":516,"tag":543,"props":728,"children":730},{"style":729},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[731],{"type":521,"value":732},"number[]",{"type":516,"tag":543,"props":734,"children":735},{"style":712},[736],{"type":521,"value":737},"}",{"type":516,"tag":543,"props":739,"children":741},{"style":740},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[742],{"type":521,"value":743}," nums\n",{"type":516,"tag":543,"props":745,"children":746},{"class":545,"line":564},[747,751,755,760,764,769],{"type":516,"tag":543,"props":748,"children":749},{"style":698},[750],{"type":521,"value":709},{"type":516,"tag":543,"props":752,"children":753},{"style":712},[754],{"type":521,"value":715},{"type":516,"tag":543,"props":756,"children":757},{"style":718},[758],{"type":521,"value":759},"return",{"type":516,"tag":543,"props":761,"children":762},{"style":712},[763],{"type":521,"value":726},{"type":516,"tag":543,"props":765,"children":766},{"style":729},[767],{"type":521,"value":768},"boolean",{"type":516,"tag":543,"props":770,"children":771},{"style":712},[772],{"type":521,"value":773},"}\n",{"type":516,"tag":543,"props":775,"children":777},{"class":545,"line":776},4,[778],{"type":516,"tag":543,"props":779,"children":780},{"style":698},[781],{"type":521,"value":782}," */\n",{"type":516,"tag":543,"props":784,"children":786},{"class":545,"line":785},5,[787,793,799,804,809,814,819,824],{"type":516,"tag":543,"props":788,"children":790},{"style":789},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[791],{"type":521,"value":792},"var",{"type":516,"tag":543,"props":794,"children":796},{"style":795},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[797],{"type":521,"value":798}," increasingTriplet",{"type":516,"tag":543,"props":800,"children":801},{"style":712},[802],{"type":521,"value":803}," =",{"type":516,"tag":543,"props":805,"children":806},{"style":789},[807],{"type":521,"value":808}," function",{"type":516,"tag":543,"props":810,"children":811},{"style":712},[812],{"type":521,"value":813}," (",{"type":516,"tag":543,"props":815,"children":816},{"style":740},[817],{"type":521,"value":818},"nums",{"type":516,"tag":543,"props":820,"children":821},{"style":712},[822],{"type":521,"value":823},")",{"type":516,"tag":543,"props":825,"children":826},{"style":712},[827],{"type":521,"value":828}," {\n",{"type":516,"tag":543,"props":830,"children":832},{"class":545,"line":831},6,[833],{"type":516,"tag":543,"props":834,"children":835},{"style":698},[836],{"type":521,"value":837},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":516,"tag":543,"props":839,"children":841},{"class":545,"line":840},7,[842,847,852,856,861,866,872],{"type":516,"tag":543,"props":843,"children":844},{"style":789},[845],{"type":521,"value":846},"  let",{"type":516,"tag":543,"props":848,"children":849},{"style":740},[850],{"type":521,"value":851}," len",{"type":516,"tag":543,"props":853,"children":854},{"style":712},[855],{"type":521,"value":803},{"type":516,"tag":543,"props":857,"children":858},{"style":740},[859],{"type":521,"value":860}," nums",{"type":516,"tag":543,"props":862,"children":863},{"style":712},[864],{"type":521,"value":865},".",{"type":516,"tag":543,"props":867,"children":869},{"style":868},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[870],{"type":521,"value":871},"length",{"type":516,"tag":543,"props":873,"children":874},{"style":712},[875],{"type":521,"value":876},";\n",{"type":516,"tag":543,"props":878,"children":880},{"class":545,"line":879},8,[881,886,890,895,900,906,910,915,920],{"type":516,"tag":543,"props":882,"children":883},{"style":718},[884],{"type":521,"value":885},"  if",{"type":516,"tag":543,"props":887,"children":888},{"style":712},[889],{"type":521,"value":813},{"type":516,"tag":543,"props":891,"children":892},{"style":740},[893],{"type":521,"value":894},"len",{"type":516,"tag":543,"props":896,"children":897},{"style":712},[898],{"type":521,"value":899}," \u003C",{"type":516,"tag":543,"props":901,"children":903},{"style":902},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[904],{"type":521,"value":905}," 3",{"type":516,"tag":543,"props":907,"children":908},{"style":712},[909],{"type":521,"value":823},{"type":516,"tag":543,"props":911,"children":912},{"style":718},[913],{"type":521,"value":914}," return",{"type":516,"tag":543,"props":916,"children":917},{"style":718},[918],{"type":521,"value":919}," false",{"type":516,"tag":543,"props":921,"children":922},{"style":712},[923],{"type":521,"value":876},{"type":516,"tag":543,"props":925,"children":927},{"class":545,"line":926},9,[928,932,937,941,945,950,955],{"type":516,"tag":543,"props":929,"children":930},{"style":789},[931],{"type":521,"value":846},{"type":516,"tag":543,"props":933,"children":934},{"style":740},[935],{"type":521,"value":936}," first",{"type":516,"tag":543,"props":938,"children":939},{"style":712},[940],{"type":521,"value":803},{"type":516,"tag":543,"props":942,"children":943},{"style":740},[944],{"type":521,"value":860},{"type":516,"tag":543,"props":946,"children":947},{"style":712},[948],{"type":521,"value":949},"[",{"type":516,"tag":543,"props":951,"children":952},{"style":902},[953],{"type":521,"value":954},"0",{"type":516,"tag":543,"props":956,"children":957},{"style":712},[958],{"type":521,"value":959},"];\n",{"type":516,"tag":543,"props":961,"children":963},{"class":545,"line":962},10,[964,968,973,977,982,986,992],{"type":516,"tag":543,"props":965,"children":966},{"style":789},[967],{"type":521,"value":846},{"type":516,"tag":543,"props":969,"children":970},{"style":740},[971],{"type":521,"value":972}," second",{"type":516,"tag":543,"props":974,"children":975},{"style":712},[976],{"type":521,"value":803},{"type":516,"tag":543,"props":978,"children":979},{"style":740},[980],{"type":521,"value":981}," Number",{"type":516,"tag":543,"props":983,"children":984},{"style":712},[985],{"type":521,"value":865},{"type":516,"tag":543,"props":987,"children":989},{"style":988},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[990],{"type":521,"value":991},"MAX_SAFE_INTEGER",{"type":516,"tag":543,"props":993,"children":994},{"style":712},[995],{"type":521,"value":876},{"type":516,"tag":543,"props":997,"children":999},{"class":545,"line":998},11,[1000,1005,1009,1014,1019,1023,1028,1033,1037,1041,1045,1049,1053,1058,1062],{"type":516,"tag":543,"props":1001,"children":1002},{"style":718},[1003],{"type":521,"value":1004},"  for",{"type":516,"tag":543,"props":1006,"children":1007},{"style":712},[1008],{"type":521,"value":813},{"type":516,"tag":543,"props":1010,"children":1011},{"style":789},[1012],{"type":521,"value":1013},"let",{"type":516,"tag":543,"props":1015,"children":1016},{"style":740},[1017],{"type":521,"value":1018}," i",{"type":516,"tag":543,"props":1020,"children":1021},{"style":712},[1022],{"type":521,"value":803},{"type":516,"tag":543,"props":1024,"children":1025},{"style":902},[1026],{"type":521,"value":1027}," 0",{"type":516,"tag":543,"props":1029,"children":1030},{"style":712},[1031],{"type":521,"value":1032},";",{"type":516,"tag":543,"props":1034,"children":1035},{"style":740},[1036],{"type":521,"value":1018},{"type":516,"tag":543,"props":1038,"children":1039},{"style":712},[1040],{"type":521,"value":899},{"type":516,"tag":543,"props":1042,"children":1043},{"style":740},[1044],{"type":521,"value":851},{"type":516,"tag":543,"props":1046,"children":1047},{"style":712},[1048],{"type":521,"value":1032},{"type":516,"tag":543,"props":1050,"children":1051},{"style":740},[1052],{"type":521,"value":1018},{"type":516,"tag":543,"props":1054,"children":1055},{"style":789},[1056],{"type":521,"value":1057},"++",{"type":516,"tag":543,"props":1059,"children":1060},{"style":712},[1061],{"type":521,"value":823},{"type":516,"tag":543,"props":1063,"children":1064},{"style":712},[1065],{"type":521,"value":828},{"type":516,"tag":543,"props":1067,"children":1069},{"class":545,"line":1068},12,[1070,1075,1079,1083,1087,1092,1097,1102,1106,1110],{"type":516,"tag":543,"props":1071,"children":1072},{"style":718},[1073],{"type":521,"value":1074},"    if",{"type":516,"tag":543,"props":1076,"children":1077},{"style":712},[1078],{"type":521,"value":813},{"type":516,"tag":543,"props":1080,"children":1081},{"style":740},[1082],{"type":521,"value":818},{"type":516,"tag":543,"props":1084,"children":1085},{"style":712},[1086],{"type":521,"value":949},{"type":516,"tag":543,"props":1088,"children":1089},{"style":740},[1090],{"type":521,"value":1091},"i",{"type":516,"tag":543,"props":1093,"children":1094},{"style":712},[1095],{"type":521,"value":1096},"]",{"type":516,"tag":543,"props":1098,"children":1099},{"style":712},[1100],{"type":521,"value":1101}," >",{"type":516,"tag":543,"props":1103,"children":1104},{"style":740},[1105],{"type":521,"value":972},{"type":516,"tag":543,"props":1107,"children":1108},{"style":712},[1109],{"type":521,"value":823},{"type":516,"tag":543,"props":1111,"children":1112},{"style":712},[1113],{"type":521,"value":828},{"type":516,"tag":543,"props":1115,"children":1117},{"class":545,"line":1116},13,[1118],{"type":516,"tag":543,"props":1119,"children":1120},{"style":698},[1121],{"type":521,"value":1122},"      // 找到第三个数\n",{"type":516,"tag":543,"props":1124,"children":1126},{"class":545,"line":1125},14,[1127,1132,1137],{"type":516,"tag":543,"props":1128,"children":1129},{"style":718},[1130],{"type":521,"value":1131},"      return",{"type":516,"tag":543,"props":1133,"children":1134},{"style":718},[1135],{"type":521,"value":1136}," true",{"type":516,"tag":543,"props":1138,"children":1139},{"style":712},[1140],{"type":521,"value":876},{"type":516,"tag":543,"props":1142,"children":1144},{"class":545,"line":1143},15,[1145,1150,1155,1160,1164,1168,1172,1176,1180,1184,1188,1192],{"type":516,"tag":543,"props":1146,"children":1147},{"style":712},[1148],{"type":521,"value":1149},"    }",{"type":516,"tag":543,"props":1151,"children":1152},{"style":718},[1153],{"type":521,"value":1154}," else",{"type":516,"tag":543,"props":1156,"children":1157},{"style":718},[1158],{"type":521,"value":1159}," if",{"type":516,"tag":543,"props":1161,"children":1162},{"style":712},[1163],{"type":521,"value":813},{"type":516,"tag":543,"props":1165,"children":1166},{"style":740},[1167],{"type":521,"value":818},{"type":516,"tag":543,"props":1169,"children":1170},{"style":712},[1171],{"type":521,"value":949},{"type":516,"tag":543,"props":1173,"children":1174},{"style":740},[1175],{"type":521,"value":1091},{"type":516,"tag":543,"props":1177,"children":1178},{"style":712},[1179],{"type":521,"value":1096},{"type":516,"tag":543,"props":1181,"children":1182},{"style":712},[1183],{"type":521,"value":1101},{"type":516,"tag":543,"props":1185,"children":1186},{"style":740},[1187],{"type":521,"value":936},{"type":516,"tag":543,"props":1189,"children":1190},{"style":712},[1191],{"type":521,"value":823},{"type":516,"tag":543,"props":1193,"children":1194},{"style":712},[1195],{"type":521,"value":828},{"type":516,"tag":543,"props":1197,"children":1199},{"class":545,"line":1198},16,[1200],{"type":516,"tag":543,"props":1201,"children":1202},{"style":698},[1203],{"type":521,"value":1204},"      // 更新第二个数\n",{"type":516,"tag":543,"props":1206,"children":1208},{"class":545,"line":1207},17,[1209,1214,1218,1222,1226,1230],{"type":516,"tag":543,"props":1210,"children":1211},{"style":740},[1212],{"type":521,"value":1213},"      second",{"type":516,"tag":543,"props":1215,"children":1216},{"style":712},[1217],{"type":521,"value":803},{"type":516,"tag":543,"props":1219,"children":1220},{"style":740},[1221],{"type":521,"value":860},{"type":516,"tag":543,"props":1223,"children":1224},{"style":712},[1225],{"type":521,"value":949},{"type":516,"tag":543,"props":1227,"children":1228},{"style":740},[1229],{"type":521,"value":1091},{"type":516,"tag":543,"props":1231,"children":1232},{"style":712},[1233],{"type":521,"value":959},{"type":516,"tag":543,"props":1235,"children":1237},{"class":545,"line":1236},18,[1238,1242,1246],{"type":516,"tag":543,"props":1239,"children":1240},{"style":712},[1241],{"type":521,"value":1149},{"type":516,"tag":543,"props":1243,"children":1244},{"style":718},[1245],{"type":521,"value":1154},{"type":516,"tag":543,"props":1247,"children":1248},{"style":712},[1249],{"type":521,"value":828},{"type":516,"tag":543,"props":1251,"children":1253},{"class":545,"line":1252},19,[1254],{"type":516,"tag":543,"props":1255,"children":1256},{"style":698},[1257],{"type":521,"value":1258},"      // 更新第一个数\n",{"type":516,"tag":543,"props":1260,"children":1262},{"class":545,"line":1261},20,[1263,1268,1272,1276,1280,1284],{"type":516,"tag":543,"props":1264,"children":1265},{"style":740},[1266],{"type":521,"value":1267},"      first",{"type":516,"tag":543,"props":1269,"children":1270},{"style":712},[1271],{"type":521,"value":803},{"type":516,"tag":543,"props":1273,"children":1274},{"style":740},[1275],{"type":521,"value":860},{"type":516,"tag":543,"props":1277,"children":1278},{"style":712},[1279],{"type":521,"value":949},{"type":516,"tag":543,"props":1281,"children":1282},{"style":740},[1283],{"type":521,"value":1091},{"type":516,"tag":543,"props":1285,"children":1286},{"style":712},[1287],{"type":521,"value":959},{"type":516,"tag":543,"props":1289,"children":1291},{"class":545,"line":1290},21,[1292],{"type":516,"tag":543,"props":1293,"children":1294},{"style":712},[1295],{"type":521,"value":1296},"    }\n",{"type":516,"tag":543,"props":1298,"children":1300},{"class":545,"line":1299},22,[1301],{"type":516,"tag":543,"props":1302,"children":1303},{"style":712},[1304],{"type":521,"value":1305},"  }\n",{"type":516,"tag":543,"props":1307,"children":1309},{"class":545,"line":1308},23,[1310,1315,1319],{"type":516,"tag":543,"props":1311,"children":1312},{"style":718},[1313],{"type":521,"value":1314},"  return",{"type":516,"tag":543,"props":1316,"children":1317},{"style":718},[1318],{"type":521,"value":919},{"type":516,"tag":543,"props":1320,"children":1321},{"style":712},[1322],{"type":521,"value":876},{"type":516,"tag":543,"props":1324,"children":1326},{"class":545,"line":1325},24,[1327],{"type":516,"tag":543,"props":1328,"children":1329},{"style":712},[1330],{"type":521,"value":1331},"};\n",{"type":516,"tag":1333,"props":1334,"children":1335},"style",{},[1336],{"type":521,"value":1337},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":785,"depth":785,"links":1339},[1340,1341],{"id":670,"depth":555,"text":670},{"id":675,"depth":555,"text":675,"children":1342},[1343],{"id":681,"depth":564,"text":681},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1350,1352],{"_path":219,"title":218,"description":1351},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":225,"title":224,"description":1353},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1714058128686]