[{"data":1,"prerenderedAt":1351},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":503,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1346},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":222,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":221,"description":507,"url":508,"body":509,"_type":1341,"_id":1342,"_source":1343,"_file":1344,"_extension":1345},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":510,"children":511,"toc":1335},"root",[512,519,524,529,568,573,604,609,639,644,659,664,670,675,681,1329],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522],{"type":518,"value":523},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":513,"tag":514,"props":525,"children":526},{},[527],{"type":518,"value":528},"示例 1：",{"type":513,"tag":530,"props":531,"children":534},"pre",{"className":532,"code":533,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[535],{"type":513,"tag":536,"props":537,"children":538},"code",{"__ignoreMap":506},[539,550,559],{"type":513,"tag":540,"props":541,"children":544},"span",{"class":542,"line":543},"line",1,[545],{"type":513,"tag":540,"props":546,"children":547},{},[548],{"type":518,"value":549},"输入：nums = [1,2,3,4,5]\n",{"type":513,"tag":540,"props":551,"children":553},{"class":542,"line":552},2,[554],{"type":513,"tag":540,"props":555,"children":556},{},[557],{"type":518,"value":558},"输出：true\n",{"type":513,"tag":540,"props":560,"children":562},{"class":542,"line":561},3,[563],{"type":513,"tag":540,"props":564,"children":565},{},[566],{"type":518,"value":567},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":513,"tag":514,"props":569,"children":570},{},[571],{"type":518,"value":572},"示例 2：",{"type":513,"tag":530,"props":574,"children":576},{"className":532,"code":575,"language":518,"meta":506,"style":506},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[577],{"type":513,"tag":536,"props":578,"children":579},{"__ignoreMap":506},[580,588,596],{"type":513,"tag":540,"props":581,"children":582},{"class":542,"line":543},[583],{"type":513,"tag":540,"props":584,"children":585},{},[586],{"type":518,"value":587},"输入：nums = [5,4,3,2,1]\n",{"type":513,"tag":540,"props":589,"children":590},{"class":542,"line":552},[591],{"type":513,"tag":540,"props":592,"children":593},{},[594],{"type":518,"value":595},"输出：false\n",{"type":513,"tag":540,"props":597,"children":598},{"class":542,"line":561},[599],{"type":513,"tag":540,"props":600,"children":601},{},[602],{"type":518,"value":603},"解释：不存在满足题意的三元组\n",{"type":513,"tag":514,"props":605,"children":606},{},[607],{"type":518,"value":608},"示例 3：",{"type":513,"tag":530,"props":610,"children":612},{"className":532,"code":611,"language":518,"meta":506,"style":506},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[613],{"type":513,"tag":536,"props":614,"children":615},{"__ignoreMap":506},[616,624,631],{"type":513,"tag":540,"props":617,"children":618},{"class":542,"line":543},[619],{"type":513,"tag":540,"props":620,"children":621},{},[622],{"type":518,"value":623},"输入：nums = [2,1,5,0,4,6]\n",{"type":513,"tag":540,"props":625,"children":626},{"class":542,"line":552},[627],{"type":513,"tag":540,"props":628,"children":629},{},[630],{"type":518,"value":558},{"type":513,"tag":540,"props":632,"children":633},{"class":542,"line":561},[634],{"type":513,"tag":540,"props":635,"children":636},{},[637],{"type":518,"value":638},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":513,"tag":514,"props":640,"children":641},{},[642],{"type":518,"value":643},"提示：",{"type":513,"tag":645,"props":646,"children":647},"ul",{},[648,654],{"type":513,"tag":649,"props":650,"children":651},"li",{},[652],{"type":518,"value":653},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":513,"tag":649,"props":655,"children":656},{},[657],{"type":518,"value":658},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":513,"tag":514,"props":660,"children":661},{},[662],{"type":518,"value":663},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":513,"tag":665,"props":666,"children":668},"h2",{"id":667},"解题思路",[669],{"type":518,"value":667},{"type":513,"tag":665,"props":671,"children":673},{"id":672},"实现",[674],{"type":518,"value":672},{"type":513,"tag":676,"props":677,"children":679},"h3",{"id":678},"贪心",[680],{"type":518,"value":678},{"type":513,"tag":530,"props":682,"children":686},{"className":683,"code":684,"language":685,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[687],{"type":513,"tag":536,"props":688,"children":689},{"__ignoreMap":506},[690,699,741,771,780,826,835,874,921,957,993,1063,1111,1120,1138,1193,1202,1231,1247,1256,1285,1294,1303,1320],{"type":513,"tag":540,"props":691,"children":692},{"class":542,"line":543},[693],{"type":513,"tag":540,"props":694,"children":696},{"style":695},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[697],{"type":518,"value":698},"/**\n",{"type":513,"tag":540,"props":700,"children":701},{"class":542,"line":552},[702,707,713,719,724,730,735],{"type":513,"tag":540,"props":703,"children":704},{"style":695},[705],{"type":518,"value":706}," * ",{"type":513,"tag":540,"props":708,"children":710},{"style":709},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[711],{"type":518,"value":712},"@",{"type":513,"tag":540,"props":714,"children":716},{"style":715},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[717],{"type":518,"value":718},"param",{"type":513,"tag":540,"props":720,"children":721},{"style":709},[722],{"type":518,"value":723}," {",{"type":513,"tag":540,"props":725,"children":727},{"style":726},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[728],{"type":518,"value":729},"number[]",{"type":513,"tag":540,"props":731,"children":732},{"style":709},[733],{"type":518,"value":734},"}",{"type":513,"tag":540,"props":736,"children":738},{"style":737},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[739],{"type":518,"value":740}," nums\n",{"type":513,"tag":540,"props":742,"children":743},{"class":542,"line":561},[744,748,752,757,761,766],{"type":513,"tag":540,"props":745,"children":746},{"style":695},[747],{"type":518,"value":706},{"type":513,"tag":540,"props":749,"children":750},{"style":709},[751],{"type":518,"value":712},{"type":513,"tag":540,"props":753,"children":754},{"style":715},[755],{"type":518,"value":756},"return",{"type":513,"tag":540,"props":758,"children":759},{"style":709},[760],{"type":518,"value":723},{"type":513,"tag":540,"props":762,"children":763},{"style":726},[764],{"type":518,"value":765},"boolean",{"type":513,"tag":540,"props":767,"children":768},{"style":709},[769],{"type":518,"value":770},"}\n",{"type":513,"tag":540,"props":772,"children":774},{"class":542,"line":773},4,[775],{"type":513,"tag":540,"props":776,"children":777},{"style":695},[778],{"type":518,"value":779}," */\n",{"type":513,"tag":540,"props":781,"children":783},{"class":542,"line":782},5,[784,790,796,801,806,811,816,821],{"type":513,"tag":540,"props":785,"children":787},{"style":786},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[788],{"type":518,"value":789},"var",{"type":513,"tag":540,"props":791,"children":793},{"style":792},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[794],{"type":518,"value":795}," increasingTriplet",{"type":513,"tag":540,"props":797,"children":798},{"style":709},[799],{"type":518,"value":800}," =",{"type":513,"tag":540,"props":802,"children":803},{"style":786},[804],{"type":518,"value":805}," function",{"type":513,"tag":540,"props":807,"children":808},{"style":709},[809],{"type":518,"value":810}," (",{"type":513,"tag":540,"props":812,"children":813},{"style":737},[814],{"type":518,"value":815},"nums",{"type":513,"tag":540,"props":817,"children":818},{"style":709},[819],{"type":518,"value":820},")",{"type":513,"tag":540,"props":822,"children":823},{"style":709},[824],{"type":518,"value":825}," {\n",{"type":513,"tag":540,"props":827,"children":829},{"class":542,"line":828},6,[830],{"type":513,"tag":540,"props":831,"children":832},{"style":695},[833],{"type":518,"value":834},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":513,"tag":540,"props":836,"children":838},{"class":542,"line":837},7,[839,844,849,853,858,863,869],{"type":513,"tag":540,"props":840,"children":841},{"style":786},[842],{"type":518,"value":843},"  let",{"type":513,"tag":540,"props":845,"children":846},{"style":737},[847],{"type":518,"value":848}," len",{"type":513,"tag":540,"props":850,"children":851},{"style":709},[852],{"type":518,"value":800},{"type":513,"tag":540,"props":854,"children":855},{"style":737},[856],{"type":518,"value":857}," nums",{"type":513,"tag":540,"props":859,"children":860},{"style":709},[861],{"type":518,"value":862},".",{"type":513,"tag":540,"props":864,"children":866},{"style":865},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[867],{"type":518,"value":868},"length",{"type":513,"tag":540,"props":870,"children":871},{"style":709},[872],{"type":518,"value":873},";\n",{"type":513,"tag":540,"props":875,"children":877},{"class":542,"line":876},8,[878,883,887,892,897,903,907,912,917],{"type":513,"tag":540,"props":879,"children":880},{"style":715},[881],{"type":518,"value":882},"  if",{"type":513,"tag":540,"props":884,"children":885},{"style":709},[886],{"type":518,"value":810},{"type":513,"tag":540,"props":888,"children":889},{"style":737},[890],{"type":518,"value":891},"len",{"type":513,"tag":540,"props":893,"children":894},{"style":709},[895],{"type":518,"value":896}," \u003C",{"type":513,"tag":540,"props":898,"children":900},{"style":899},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[901],{"type":518,"value":902}," 3",{"type":513,"tag":540,"props":904,"children":905},{"style":709},[906],{"type":518,"value":820},{"type":513,"tag":540,"props":908,"children":909},{"style":715},[910],{"type":518,"value":911}," return",{"type":513,"tag":540,"props":913,"children":914},{"style":715},[915],{"type":518,"value":916}," false",{"type":513,"tag":540,"props":918,"children":919},{"style":709},[920],{"type":518,"value":873},{"type":513,"tag":540,"props":922,"children":924},{"class":542,"line":923},9,[925,929,934,938,942,947,952],{"type":513,"tag":540,"props":926,"children":927},{"style":786},[928],{"type":518,"value":843},{"type":513,"tag":540,"props":930,"children":931},{"style":737},[932],{"type":518,"value":933}," first",{"type":513,"tag":540,"props":935,"children":936},{"style":709},[937],{"type":518,"value":800},{"type":513,"tag":540,"props":939,"children":940},{"style":737},[941],{"type":518,"value":857},{"type":513,"tag":540,"props":943,"children":944},{"style":709},[945],{"type":518,"value":946},"[",{"type":513,"tag":540,"props":948,"children":949},{"style":899},[950],{"type":518,"value":951},"0",{"type":513,"tag":540,"props":953,"children":954},{"style":709},[955],{"type":518,"value":956},"];\n",{"type":513,"tag":540,"props":958,"children":960},{"class":542,"line":959},10,[961,965,970,974,979,983,989],{"type":513,"tag":540,"props":962,"children":963},{"style":786},[964],{"type":518,"value":843},{"type":513,"tag":540,"props":966,"children":967},{"style":737},[968],{"type":518,"value":969}," second",{"type":513,"tag":540,"props":971,"children":972},{"style":709},[973],{"type":518,"value":800},{"type":513,"tag":540,"props":975,"children":976},{"style":737},[977],{"type":518,"value":978}," Number",{"type":513,"tag":540,"props":980,"children":981},{"style":709},[982],{"type":518,"value":862},{"type":513,"tag":540,"props":984,"children":986},{"style":985},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[987],{"type":518,"value":988},"MAX_SAFE_INTEGER",{"type":513,"tag":540,"props":990,"children":991},{"style":709},[992],{"type":518,"value":873},{"type":513,"tag":540,"props":994,"children":996},{"class":542,"line":995},11,[997,1002,1006,1011,1016,1020,1025,1030,1034,1038,1042,1046,1050,1055,1059],{"type":513,"tag":540,"props":998,"children":999},{"style":715},[1000],{"type":518,"value":1001},"  for",{"type":513,"tag":540,"props":1003,"children":1004},{"style":709},[1005],{"type":518,"value":810},{"type":513,"tag":540,"props":1007,"children":1008},{"style":786},[1009],{"type":518,"value":1010},"let",{"type":513,"tag":540,"props":1012,"children":1013},{"style":737},[1014],{"type":518,"value":1015}," i",{"type":513,"tag":540,"props":1017,"children":1018},{"style":709},[1019],{"type":518,"value":800},{"type":513,"tag":540,"props":1021,"children":1022},{"style":899},[1023],{"type":518,"value":1024}," 0",{"type":513,"tag":540,"props":1026,"children":1027},{"style":709},[1028],{"type":518,"value":1029},";",{"type":513,"tag":540,"props":1031,"children":1032},{"style":737},[1033],{"type":518,"value":1015},{"type":513,"tag":540,"props":1035,"children":1036},{"style":709},[1037],{"type":518,"value":896},{"type":513,"tag":540,"props":1039,"children":1040},{"style":737},[1041],{"type":518,"value":848},{"type":513,"tag":540,"props":1043,"children":1044},{"style":709},[1045],{"type":518,"value":1029},{"type":513,"tag":540,"props":1047,"children":1048},{"style":737},[1049],{"type":518,"value":1015},{"type":513,"tag":540,"props":1051,"children":1052},{"style":786},[1053],{"type":518,"value":1054},"++",{"type":513,"tag":540,"props":1056,"children":1057},{"style":709},[1058],{"type":518,"value":820},{"type":513,"tag":540,"props":1060,"children":1061},{"style":709},[1062],{"type":518,"value":825},{"type":513,"tag":540,"props":1064,"children":1066},{"class":542,"line":1065},12,[1067,1072,1076,1080,1084,1089,1094,1099,1103,1107],{"type":513,"tag":540,"props":1068,"children":1069},{"style":715},[1070],{"type":518,"value":1071},"    if",{"type":513,"tag":540,"props":1073,"children":1074},{"style":709},[1075],{"type":518,"value":810},{"type":513,"tag":540,"props":1077,"children":1078},{"style":737},[1079],{"type":518,"value":815},{"type":513,"tag":540,"props":1081,"children":1082},{"style":709},[1083],{"type":518,"value":946},{"type":513,"tag":540,"props":1085,"children":1086},{"style":737},[1087],{"type":518,"value":1088},"i",{"type":513,"tag":540,"props":1090,"children":1091},{"style":709},[1092],{"type":518,"value":1093},"]",{"type":513,"tag":540,"props":1095,"children":1096},{"style":709},[1097],{"type":518,"value":1098}," >",{"type":513,"tag":540,"props":1100,"children":1101},{"style":737},[1102],{"type":518,"value":969},{"type":513,"tag":540,"props":1104,"children":1105},{"style":709},[1106],{"type":518,"value":820},{"type":513,"tag":540,"props":1108,"children":1109},{"style":709},[1110],{"type":518,"value":825},{"type":513,"tag":540,"props":1112,"children":1114},{"class":542,"line":1113},13,[1115],{"type":513,"tag":540,"props":1116,"children":1117},{"style":695},[1118],{"type":518,"value":1119},"      // 找到第三个数\n",{"type":513,"tag":540,"props":1121,"children":1123},{"class":542,"line":1122},14,[1124,1129,1134],{"type":513,"tag":540,"props":1125,"children":1126},{"style":715},[1127],{"type":518,"value":1128},"      return",{"type":513,"tag":540,"props":1130,"children":1131},{"style":715},[1132],{"type":518,"value":1133}," true",{"type":513,"tag":540,"props":1135,"children":1136},{"style":709},[1137],{"type":518,"value":873},{"type":513,"tag":540,"props":1139,"children":1141},{"class":542,"line":1140},15,[1142,1147,1152,1157,1161,1165,1169,1173,1177,1181,1185,1189],{"type":513,"tag":540,"props":1143,"children":1144},{"style":709},[1145],{"type":518,"value":1146},"    }",{"type":513,"tag":540,"props":1148,"children":1149},{"style":715},[1150],{"type":518,"value":1151}," else",{"type":513,"tag":540,"props":1153,"children":1154},{"style":715},[1155],{"type":518,"value":1156}," if",{"type":513,"tag":540,"props":1158,"children":1159},{"style":709},[1160],{"type":518,"value":810},{"type":513,"tag":540,"props":1162,"children":1163},{"style":737},[1164],{"type":518,"value":815},{"type":513,"tag":540,"props":1166,"children":1167},{"style":709},[1168],{"type":518,"value":946},{"type":513,"tag":540,"props":1170,"children":1171},{"style":737},[1172],{"type":518,"value":1088},{"type":513,"tag":540,"props":1174,"children":1175},{"style":709},[1176],{"type":518,"value":1093},{"type":513,"tag":540,"props":1178,"children":1179},{"style":709},[1180],{"type":518,"value":1098},{"type":513,"tag":540,"props":1182,"children":1183},{"style":737},[1184],{"type":518,"value":933},{"type":513,"tag":540,"props":1186,"children":1187},{"style":709},[1188],{"type":518,"value":820},{"type":513,"tag":540,"props":1190,"children":1191},{"style":709},[1192],{"type":518,"value":825},{"type":513,"tag":540,"props":1194,"children":1196},{"class":542,"line":1195},16,[1197],{"type":513,"tag":540,"props":1198,"children":1199},{"style":695},[1200],{"type":518,"value":1201},"      // 更新第二个数\n",{"type":513,"tag":540,"props":1203,"children":1205},{"class":542,"line":1204},17,[1206,1211,1215,1219,1223,1227],{"type":513,"tag":540,"props":1207,"children":1208},{"style":737},[1209],{"type":518,"value":1210},"      second",{"type":513,"tag":540,"props":1212,"children":1213},{"style":709},[1214],{"type":518,"value":800},{"type":513,"tag":540,"props":1216,"children":1217},{"style":737},[1218],{"type":518,"value":857},{"type":513,"tag":540,"props":1220,"children":1221},{"style":709},[1222],{"type":518,"value":946},{"type":513,"tag":540,"props":1224,"children":1225},{"style":737},[1226],{"type":518,"value":1088},{"type":513,"tag":540,"props":1228,"children":1229},{"style":709},[1230],{"type":518,"value":956},{"type":513,"tag":540,"props":1232,"children":1234},{"class":542,"line":1233},18,[1235,1239,1243],{"type":513,"tag":540,"props":1236,"children":1237},{"style":709},[1238],{"type":518,"value":1146},{"type":513,"tag":540,"props":1240,"children":1241},{"style":715},[1242],{"type":518,"value":1151},{"type":513,"tag":540,"props":1244,"children":1245},{"style":709},[1246],{"type":518,"value":825},{"type":513,"tag":540,"props":1248,"children":1250},{"class":542,"line":1249},19,[1251],{"type":513,"tag":540,"props":1252,"children":1253},{"style":695},[1254],{"type":518,"value":1255},"      // 更新第一个数\n",{"type":513,"tag":540,"props":1257,"children":1259},{"class":542,"line":1258},20,[1260,1265,1269,1273,1277,1281],{"type":513,"tag":540,"props":1261,"children":1262},{"style":737},[1263],{"type":518,"value":1264},"      first",{"type":513,"tag":540,"props":1266,"children":1267},{"style":709},[1268],{"type":518,"value":800},{"type":513,"tag":540,"props":1270,"children":1271},{"style":737},[1272],{"type":518,"value":857},{"type":513,"tag":540,"props":1274,"children":1275},{"style":709},[1276],{"type":518,"value":946},{"type":513,"tag":540,"props":1278,"children":1279},{"style":737},[1280],{"type":518,"value":1088},{"type":513,"tag":540,"props":1282,"children":1283},{"style":709},[1284],{"type":518,"value":956},{"type":513,"tag":540,"props":1286,"children":1288},{"class":542,"line":1287},21,[1289],{"type":513,"tag":540,"props":1290,"children":1291},{"style":709},[1292],{"type":518,"value":1293},"    }\n",{"type":513,"tag":540,"props":1295,"children":1297},{"class":542,"line":1296},22,[1298],{"type":513,"tag":540,"props":1299,"children":1300},{"style":709},[1301],{"type":518,"value":1302},"  }\n",{"type":513,"tag":540,"props":1304,"children":1306},{"class":542,"line":1305},23,[1307,1312,1316],{"type":513,"tag":540,"props":1308,"children":1309},{"style":715},[1310],{"type":518,"value":1311},"  return",{"type":513,"tag":540,"props":1313,"children":1314},{"style":715},[1315],{"type":518,"value":916},{"type":513,"tag":540,"props":1317,"children":1318},{"style":709},[1319],{"type":518,"value":873},{"type":513,"tag":540,"props":1321,"children":1323},{"class":542,"line":1322},24,[1324],{"type":513,"tag":540,"props":1325,"children":1326},{"style":709},[1327],{"type":518,"value":1328},"};\n",{"type":513,"tag":1330,"props":1331,"children":1332},"style",{},[1333],{"type":518,"value":1334},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":782,"depth":782,"links":1336},[1337,1338],{"id":667,"depth":552,"text":667},{"id":672,"depth":552,"text":672,"children":1339},[1340],{"id":678,"depth":561,"text":678},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1347,1349],{"_path":219,"title":218,"description":1348},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":225,"title":224,"description":1350},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1714056096316]