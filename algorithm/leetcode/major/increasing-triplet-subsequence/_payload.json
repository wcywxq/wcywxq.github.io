[{"data":1,"prerenderedAt":1397},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":549,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1392},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":225,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":224,"description":553,"url":554,"body":555,"_type":1387,"_id":1388,"_source":1389,"_file":1390,"_extension":1391},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":556,"children":557,"toc":1381},"root",[558,565,570,575,614,619,650,655,685,690,705,710,716,721,727,1375],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"示例 1：",{"type":559,"tag":576,"props":577,"children":580},"pre",{"className":578,"code":579,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[581],{"type":559,"tag":582,"props":583,"children":584},"code",{"__ignoreMap":552},[585,596,605],{"type":559,"tag":586,"props":587,"children":590},"span",{"class":588,"line":589},"line",1,[591],{"type":559,"tag":586,"props":592,"children":593},{},[594],{"type":564,"value":595},"输入：nums = [1,2,3,4,5]\n",{"type":559,"tag":586,"props":597,"children":599},{"class":588,"line":598},2,[600],{"type":559,"tag":586,"props":601,"children":602},{},[603],{"type":564,"value":604},"输出：true\n",{"type":559,"tag":586,"props":606,"children":608},{"class":588,"line":607},3,[609],{"type":559,"tag":586,"props":610,"children":611},{},[612],{"type":564,"value":613},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":559,"tag":560,"props":615,"children":616},{},[617],{"type":564,"value":618},"示例 2：",{"type":559,"tag":576,"props":620,"children":622},{"className":578,"code":621,"language":564,"meta":552,"style":552},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[623],{"type":559,"tag":582,"props":624,"children":625},{"__ignoreMap":552},[626,634,642],{"type":559,"tag":586,"props":627,"children":628},{"class":588,"line":589},[629],{"type":559,"tag":586,"props":630,"children":631},{},[632],{"type":564,"value":633},"输入：nums = [5,4,3,2,1]\n",{"type":559,"tag":586,"props":635,"children":636},{"class":588,"line":598},[637],{"type":559,"tag":586,"props":638,"children":639},{},[640],{"type":564,"value":641},"输出：false\n",{"type":559,"tag":586,"props":643,"children":644},{"class":588,"line":607},[645],{"type":559,"tag":586,"props":646,"children":647},{},[648],{"type":564,"value":649},"解释：不存在满足题意的三元组\n",{"type":559,"tag":560,"props":651,"children":652},{},[653],{"type":564,"value":654},"示例 3：",{"type":559,"tag":576,"props":656,"children":658},{"className":578,"code":657,"language":564,"meta":552,"style":552},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[659],{"type":559,"tag":582,"props":660,"children":661},{"__ignoreMap":552},[662,670,677],{"type":559,"tag":586,"props":663,"children":664},{"class":588,"line":589},[665],{"type":559,"tag":586,"props":666,"children":667},{},[668],{"type":564,"value":669},"输入：nums = [2,1,5,0,4,6]\n",{"type":559,"tag":586,"props":671,"children":672},{"class":588,"line":598},[673],{"type":559,"tag":586,"props":674,"children":675},{},[676],{"type":564,"value":604},{"type":559,"tag":586,"props":678,"children":679},{"class":588,"line":607},[680],{"type":559,"tag":586,"props":681,"children":682},{},[683],{"type":564,"value":684},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":559,"tag":560,"props":686,"children":687},{},[688],{"type":564,"value":689},"提示：",{"type":559,"tag":691,"props":692,"children":693},"ul",{},[694,700],{"type":559,"tag":695,"props":696,"children":697},"li",{},[698],{"type":564,"value":699},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":559,"tag":695,"props":701,"children":702},{},[703],{"type":564,"value":704},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":559,"tag":560,"props":706,"children":707},{},[708],{"type":564,"value":709},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":559,"tag":711,"props":712,"children":714},"h2",{"id":713},"解题思路",[715],{"type":564,"value":713},{"type":559,"tag":711,"props":717,"children":719},{"id":718},"实现",[720],{"type":564,"value":718},{"type":559,"tag":722,"props":723,"children":725},"h3",{"id":724},"贪心",[726],{"type":564,"value":724},{"type":559,"tag":576,"props":728,"children":732},{"className":729,"code":730,"language":731,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[733],{"type":559,"tag":582,"props":734,"children":735},{"__ignoreMap":552},[736,745,787,817,826,872,881,920,967,1003,1039,1109,1157,1166,1184,1239,1248,1277,1293,1302,1331,1340,1349,1366],{"type":559,"tag":586,"props":737,"children":738},{"class":588,"line":589},[739],{"type":559,"tag":586,"props":740,"children":742},{"style":741},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[743],{"type":564,"value":744},"/**\n",{"type":559,"tag":586,"props":746,"children":747},{"class":588,"line":598},[748,753,759,765,770,776,781],{"type":559,"tag":586,"props":749,"children":750},{"style":741},[751],{"type":564,"value":752}," * ",{"type":559,"tag":586,"props":754,"children":756},{"style":755},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[757],{"type":564,"value":758},"@",{"type":559,"tag":586,"props":760,"children":762},{"style":761},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[763],{"type":564,"value":764},"param",{"type":559,"tag":586,"props":766,"children":767},{"style":755},[768],{"type":564,"value":769}," {",{"type":559,"tag":586,"props":771,"children":773},{"style":772},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[774],{"type":564,"value":775},"number[]",{"type":559,"tag":586,"props":777,"children":778},{"style":755},[779],{"type":564,"value":780},"}",{"type":559,"tag":586,"props":782,"children":784},{"style":783},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[785],{"type":564,"value":786}," nums\n",{"type":559,"tag":586,"props":788,"children":789},{"class":588,"line":607},[790,794,798,803,807,812],{"type":559,"tag":586,"props":791,"children":792},{"style":741},[793],{"type":564,"value":752},{"type":559,"tag":586,"props":795,"children":796},{"style":755},[797],{"type":564,"value":758},{"type":559,"tag":586,"props":799,"children":800},{"style":761},[801],{"type":564,"value":802},"return",{"type":559,"tag":586,"props":804,"children":805},{"style":755},[806],{"type":564,"value":769},{"type":559,"tag":586,"props":808,"children":809},{"style":772},[810],{"type":564,"value":811},"boolean",{"type":559,"tag":586,"props":813,"children":814},{"style":755},[815],{"type":564,"value":816},"}\n",{"type":559,"tag":586,"props":818,"children":820},{"class":588,"line":819},4,[821],{"type":559,"tag":586,"props":822,"children":823},{"style":741},[824],{"type":564,"value":825}," */\n",{"type":559,"tag":586,"props":827,"children":829},{"class":588,"line":828},5,[830,836,842,847,852,857,862,867],{"type":559,"tag":586,"props":831,"children":833},{"style":832},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[834],{"type":564,"value":835},"var",{"type":559,"tag":586,"props":837,"children":839},{"style":838},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[840],{"type":564,"value":841}," increasingTriplet",{"type":559,"tag":586,"props":843,"children":844},{"style":755},[845],{"type":564,"value":846}," =",{"type":559,"tag":586,"props":848,"children":849},{"style":832},[850],{"type":564,"value":851}," function",{"type":559,"tag":586,"props":853,"children":854},{"style":755},[855],{"type":564,"value":856}," (",{"type":559,"tag":586,"props":858,"children":859},{"style":783},[860],{"type":564,"value":861},"nums",{"type":559,"tag":586,"props":863,"children":864},{"style":755},[865],{"type":564,"value":866},")",{"type":559,"tag":586,"props":868,"children":869},{"style":755},[870],{"type":564,"value":871}," {\n",{"type":559,"tag":586,"props":873,"children":875},{"class":588,"line":874},6,[876],{"type":559,"tag":586,"props":877,"children":878},{"style":741},[879],{"type":564,"value":880},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":559,"tag":586,"props":882,"children":884},{"class":588,"line":883},7,[885,890,895,899,904,909,915],{"type":559,"tag":586,"props":886,"children":887},{"style":832},[888],{"type":564,"value":889},"  let",{"type":559,"tag":586,"props":891,"children":892},{"style":783},[893],{"type":564,"value":894}," len",{"type":559,"tag":586,"props":896,"children":897},{"style":755},[898],{"type":564,"value":846},{"type":559,"tag":586,"props":900,"children":901},{"style":783},[902],{"type":564,"value":903}," nums",{"type":559,"tag":586,"props":905,"children":906},{"style":755},[907],{"type":564,"value":908},".",{"type":559,"tag":586,"props":910,"children":912},{"style":911},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[913],{"type":564,"value":914},"length",{"type":559,"tag":586,"props":916,"children":917},{"style":755},[918],{"type":564,"value":919},";\n",{"type":559,"tag":586,"props":921,"children":923},{"class":588,"line":922},8,[924,929,933,938,943,949,953,958,963],{"type":559,"tag":586,"props":925,"children":926},{"style":761},[927],{"type":564,"value":928},"  if",{"type":559,"tag":586,"props":930,"children":931},{"style":755},[932],{"type":564,"value":856},{"type":559,"tag":586,"props":934,"children":935},{"style":783},[936],{"type":564,"value":937},"len",{"type":559,"tag":586,"props":939,"children":940},{"style":755},[941],{"type":564,"value":942}," \u003C",{"type":559,"tag":586,"props":944,"children":946},{"style":945},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[947],{"type":564,"value":948}," 3",{"type":559,"tag":586,"props":950,"children":951},{"style":755},[952],{"type":564,"value":866},{"type":559,"tag":586,"props":954,"children":955},{"style":761},[956],{"type":564,"value":957}," return",{"type":559,"tag":586,"props":959,"children":960},{"style":761},[961],{"type":564,"value":962}," false",{"type":559,"tag":586,"props":964,"children":965},{"style":755},[966],{"type":564,"value":919},{"type":559,"tag":586,"props":968,"children":970},{"class":588,"line":969},9,[971,975,980,984,988,993,998],{"type":559,"tag":586,"props":972,"children":973},{"style":832},[974],{"type":564,"value":889},{"type":559,"tag":586,"props":976,"children":977},{"style":783},[978],{"type":564,"value":979}," first",{"type":559,"tag":586,"props":981,"children":982},{"style":755},[983],{"type":564,"value":846},{"type":559,"tag":586,"props":985,"children":986},{"style":783},[987],{"type":564,"value":903},{"type":559,"tag":586,"props":989,"children":990},{"style":755},[991],{"type":564,"value":992},"[",{"type":559,"tag":586,"props":994,"children":995},{"style":945},[996],{"type":564,"value":997},"0",{"type":559,"tag":586,"props":999,"children":1000},{"style":755},[1001],{"type":564,"value":1002},"];\n",{"type":559,"tag":586,"props":1004,"children":1006},{"class":588,"line":1005},10,[1007,1011,1016,1020,1025,1029,1035],{"type":559,"tag":586,"props":1008,"children":1009},{"style":832},[1010],{"type":564,"value":889},{"type":559,"tag":586,"props":1012,"children":1013},{"style":783},[1014],{"type":564,"value":1015}," second",{"type":559,"tag":586,"props":1017,"children":1018},{"style":755},[1019],{"type":564,"value":846},{"type":559,"tag":586,"props":1021,"children":1022},{"style":783},[1023],{"type":564,"value":1024}," Number",{"type":559,"tag":586,"props":1026,"children":1027},{"style":755},[1028],{"type":564,"value":908},{"type":559,"tag":586,"props":1030,"children":1032},{"style":1031},"--shiki-light:#393A34;--shiki-default:#393A34;--shiki-dark:#DBD7CAEE",[1033],{"type":564,"value":1034},"MAX_SAFE_INTEGER",{"type":559,"tag":586,"props":1036,"children":1037},{"style":755},[1038],{"type":564,"value":919},{"type":559,"tag":586,"props":1040,"children":1042},{"class":588,"line":1041},11,[1043,1048,1052,1057,1062,1066,1071,1076,1080,1084,1088,1092,1096,1101,1105],{"type":559,"tag":586,"props":1044,"children":1045},{"style":761},[1046],{"type":564,"value":1047},"  for",{"type":559,"tag":586,"props":1049,"children":1050},{"style":755},[1051],{"type":564,"value":856},{"type":559,"tag":586,"props":1053,"children":1054},{"style":832},[1055],{"type":564,"value":1056},"let",{"type":559,"tag":586,"props":1058,"children":1059},{"style":783},[1060],{"type":564,"value":1061}," i",{"type":559,"tag":586,"props":1063,"children":1064},{"style":755},[1065],{"type":564,"value":846},{"type":559,"tag":586,"props":1067,"children":1068},{"style":945},[1069],{"type":564,"value":1070}," 0",{"type":559,"tag":586,"props":1072,"children":1073},{"style":755},[1074],{"type":564,"value":1075},";",{"type":559,"tag":586,"props":1077,"children":1078},{"style":783},[1079],{"type":564,"value":1061},{"type":559,"tag":586,"props":1081,"children":1082},{"style":755},[1083],{"type":564,"value":942},{"type":559,"tag":586,"props":1085,"children":1086},{"style":783},[1087],{"type":564,"value":894},{"type":559,"tag":586,"props":1089,"children":1090},{"style":755},[1091],{"type":564,"value":1075},{"type":559,"tag":586,"props":1093,"children":1094},{"style":783},[1095],{"type":564,"value":1061},{"type":559,"tag":586,"props":1097,"children":1098},{"style":832},[1099],{"type":564,"value":1100},"++",{"type":559,"tag":586,"props":1102,"children":1103},{"style":755},[1104],{"type":564,"value":866},{"type":559,"tag":586,"props":1106,"children":1107},{"style":755},[1108],{"type":564,"value":871},{"type":559,"tag":586,"props":1110,"children":1112},{"class":588,"line":1111},12,[1113,1118,1122,1126,1130,1135,1140,1145,1149,1153],{"type":559,"tag":586,"props":1114,"children":1115},{"style":761},[1116],{"type":564,"value":1117},"    if",{"type":559,"tag":586,"props":1119,"children":1120},{"style":755},[1121],{"type":564,"value":856},{"type":559,"tag":586,"props":1123,"children":1124},{"style":783},[1125],{"type":564,"value":861},{"type":559,"tag":586,"props":1127,"children":1128},{"style":755},[1129],{"type":564,"value":992},{"type":559,"tag":586,"props":1131,"children":1132},{"style":783},[1133],{"type":564,"value":1134},"i",{"type":559,"tag":586,"props":1136,"children":1137},{"style":755},[1138],{"type":564,"value":1139},"]",{"type":559,"tag":586,"props":1141,"children":1142},{"style":755},[1143],{"type":564,"value":1144}," >",{"type":559,"tag":586,"props":1146,"children":1147},{"style":783},[1148],{"type":564,"value":1015},{"type":559,"tag":586,"props":1150,"children":1151},{"style":755},[1152],{"type":564,"value":866},{"type":559,"tag":586,"props":1154,"children":1155},{"style":755},[1156],{"type":564,"value":871},{"type":559,"tag":586,"props":1158,"children":1160},{"class":588,"line":1159},13,[1161],{"type":559,"tag":586,"props":1162,"children":1163},{"style":741},[1164],{"type":564,"value":1165},"      // 找到第三个数\n",{"type":559,"tag":586,"props":1167,"children":1169},{"class":588,"line":1168},14,[1170,1175,1180],{"type":559,"tag":586,"props":1171,"children":1172},{"style":761},[1173],{"type":564,"value":1174},"      return",{"type":559,"tag":586,"props":1176,"children":1177},{"style":761},[1178],{"type":564,"value":1179}," true",{"type":559,"tag":586,"props":1181,"children":1182},{"style":755},[1183],{"type":564,"value":919},{"type":559,"tag":586,"props":1185,"children":1187},{"class":588,"line":1186},15,[1188,1193,1198,1203,1207,1211,1215,1219,1223,1227,1231,1235],{"type":559,"tag":586,"props":1189,"children":1190},{"style":755},[1191],{"type":564,"value":1192},"    }",{"type":559,"tag":586,"props":1194,"children":1195},{"style":761},[1196],{"type":564,"value":1197}," else",{"type":559,"tag":586,"props":1199,"children":1200},{"style":761},[1201],{"type":564,"value":1202}," if",{"type":559,"tag":586,"props":1204,"children":1205},{"style":755},[1206],{"type":564,"value":856},{"type":559,"tag":586,"props":1208,"children":1209},{"style":783},[1210],{"type":564,"value":861},{"type":559,"tag":586,"props":1212,"children":1213},{"style":755},[1214],{"type":564,"value":992},{"type":559,"tag":586,"props":1216,"children":1217},{"style":783},[1218],{"type":564,"value":1134},{"type":559,"tag":586,"props":1220,"children":1221},{"style":755},[1222],{"type":564,"value":1139},{"type":559,"tag":586,"props":1224,"children":1225},{"style":755},[1226],{"type":564,"value":1144},{"type":559,"tag":586,"props":1228,"children":1229},{"style":783},[1230],{"type":564,"value":979},{"type":559,"tag":586,"props":1232,"children":1233},{"style":755},[1234],{"type":564,"value":866},{"type":559,"tag":586,"props":1236,"children":1237},{"style":755},[1238],{"type":564,"value":871},{"type":559,"tag":586,"props":1240,"children":1242},{"class":588,"line":1241},16,[1243],{"type":559,"tag":586,"props":1244,"children":1245},{"style":741},[1246],{"type":564,"value":1247},"      // 更新第二个数\n",{"type":559,"tag":586,"props":1249,"children":1251},{"class":588,"line":1250},17,[1252,1257,1261,1265,1269,1273],{"type":559,"tag":586,"props":1253,"children":1254},{"style":783},[1255],{"type":564,"value":1256},"      second",{"type":559,"tag":586,"props":1258,"children":1259},{"style":755},[1260],{"type":564,"value":846},{"type":559,"tag":586,"props":1262,"children":1263},{"style":783},[1264],{"type":564,"value":903},{"type":559,"tag":586,"props":1266,"children":1267},{"style":755},[1268],{"type":564,"value":992},{"type":559,"tag":586,"props":1270,"children":1271},{"style":783},[1272],{"type":564,"value":1134},{"type":559,"tag":586,"props":1274,"children":1275},{"style":755},[1276],{"type":564,"value":1002},{"type":559,"tag":586,"props":1278,"children":1280},{"class":588,"line":1279},18,[1281,1285,1289],{"type":559,"tag":586,"props":1282,"children":1283},{"style":755},[1284],{"type":564,"value":1192},{"type":559,"tag":586,"props":1286,"children":1287},{"style":761},[1288],{"type":564,"value":1197},{"type":559,"tag":586,"props":1290,"children":1291},{"style":755},[1292],{"type":564,"value":871},{"type":559,"tag":586,"props":1294,"children":1296},{"class":588,"line":1295},19,[1297],{"type":559,"tag":586,"props":1298,"children":1299},{"style":741},[1300],{"type":564,"value":1301},"      // 更新第一个数\n",{"type":559,"tag":586,"props":1303,"children":1305},{"class":588,"line":1304},20,[1306,1311,1315,1319,1323,1327],{"type":559,"tag":586,"props":1307,"children":1308},{"style":783},[1309],{"type":564,"value":1310},"      first",{"type":559,"tag":586,"props":1312,"children":1313},{"style":755},[1314],{"type":564,"value":846},{"type":559,"tag":586,"props":1316,"children":1317},{"style":783},[1318],{"type":564,"value":903},{"type":559,"tag":586,"props":1320,"children":1321},{"style":755},[1322],{"type":564,"value":992},{"type":559,"tag":586,"props":1324,"children":1325},{"style":783},[1326],{"type":564,"value":1134},{"type":559,"tag":586,"props":1328,"children":1329},{"style":755},[1330],{"type":564,"value":1002},{"type":559,"tag":586,"props":1332,"children":1334},{"class":588,"line":1333},21,[1335],{"type":559,"tag":586,"props":1336,"children":1337},{"style":755},[1338],{"type":564,"value":1339},"    }\n",{"type":559,"tag":586,"props":1341,"children":1343},{"class":588,"line":1342},22,[1344],{"type":559,"tag":586,"props":1345,"children":1346},{"style":755},[1347],{"type":564,"value":1348},"  }\n",{"type":559,"tag":586,"props":1350,"children":1352},{"class":588,"line":1351},23,[1353,1358,1362],{"type":559,"tag":586,"props":1354,"children":1355},{"style":761},[1356],{"type":564,"value":1357},"  return",{"type":559,"tag":586,"props":1359,"children":1360},{"style":761},[1361],{"type":564,"value":962},{"type":559,"tag":586,"props":1363,"children":1364},{"style":755},[1365],{"type":564,"value":919},{"type":559,"tag":586,"props":1367,"children":1369},{"class":588,"line":1368},24,[1370],{"type":559,"tag":586,"props":1371,"children":1372},{"style":755},[1373],{"type":564,"value":1374},"};\n",{"type":559,"tag":1376,"props":1377,"children":1378},"style",{},[1379],{"type":564,"value":1380},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":828,"depth":828,"links":1382},[1383,1384],{"id":713,"depth":598,"text":713},{"id":718,"depth":598,"text":718,"children":1385},[1386],{"id":724,"depth":607,"text":724},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1393,1395],{"_path":222,"title":221,"description":1394},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":228,"title":227,"description":1396},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1715007497600]