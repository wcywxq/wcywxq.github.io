[{"data":1,"prerenderedAt":1288},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":463,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1283},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":219,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":218,"description":467,"url":468,"body":469,"_type":1278,"_id":1279,"_source":1280,"_file":1281,"_extension":1282},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":470,"children":471,"toc":1272},"root",[472,479,484,489,528,533,564,569,599,604,619,624,630,635,641,1266],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":473,"tag":474,"props":485,"children":486},{},[487],{"type":478,"value":488},"示例 1：",{"type":473,"tag":490,"props":491,"children":494},"pre",{"className":492,"code":493,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[495],{"type":473,"tag":496,"props":497,"children":498},"code",{"__ignoreMap":466},[499,510,519],{"type":473,"tag":500,"props":501,"children":504},"span",{"class":502,"line":503},"line",1,[505],{"type":473,"tag":500,"props":506,"children":507},{},[508],{"type":478,"value":509},"输入：nums = [1,2,3,4,5]\n",{"type":473,"tag":500,"props":511,"children":513},{"class":502,"line":512},2,[514],{"type":473,"tag":500,"props":515,"children":516},{},[517],{"type":478,"value":518},"输出：true\n",{"type":473,"tag":500,"props":520,"children":522},{"class":502,"line":521},3,[523],{"type":473,"tag":500,"props":524,"children":525},{},[526],{"type":478,"value":527},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":473,"tag":474,"props":529,"children":530},{},[531],{"type":478,"value":532},"示例 2：",{"type":473,"tag":490,"props":534,"children":536},{"className":492,"code":535,"language":478,"meta":466,"style":466},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[537],{"type":473,"tag":496,"props":538,"children":539},{"__ignoreMap":466},[540,548,556],{"type":473,"tag":500,"props":541,"children":542},{"class":502,"line":503},[543],{"type":473,"tag":500,"props":544,"children":545},{},[546],{"type":478,"value":547},"输入：nums = [5,4,3,2,1]\n",{"type":473,"tag":500,"props":549,"children":550},{"class":502,"line":512},[551],{"type":473,"tag":500,"props":552,"children":553},{},[554],{"type":478,"value":555},"输出：false\n",{"type":473,"tag":500,"props":557,"children":558},{"class":502,"line":521},[559],{"type":473,"tag":500,"props":560,"children":561},{},[562],{"type":478,"value":563},"解释：不存在满足题意的三元组\n",{"type":473,"tag":474,"props":565,"children":566},{},[567],{"type":478,"value":568},"示例 3：",{"type":473,"tag":490,"props":570,"children":572},{"className":492,"code":571,"language":478,"meta":466,"style":466},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[573],{"type":473,"tag":496,"props":574,"children":575},{"__ignoreMap":466},[576,584,591],{"type":473,"tag":500,"props":577,"children":578},{"class":502,"line":503},[579],{"type":473,"tag":500,"props":580,"children":581},{},[582],{"type":478,"value":583},"输入：nums = [2,1,5,0,4,6]\n",{"type":473,"tag":500,"props":585,"children":586},{"class":502,"line":512},[587],{"type":473,"tag":500,"props":588,"children":589},{},[590],{"type":478,"value":518},{"type":473,"tag":500,"props":592,"children":593},{"class":502,"line":521},[594],{"type":473,"tag":500,"props":595,"children":596},{},[597],{"type":478,"value":598},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":473,"tag":474,"props":600,"children":601},{},[602],{"type":478,"value":603},"提示：",{"type":473,"tag":605,"props":606,"children":607},"ul",{},[608,614],{"type":473,"tag":609,"props":610,"children":611},"li",{},[612],{"type":478,"value":613},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":473,"tag":609,"props":615,"children":616},{},[617],{"type":478,"value":618},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":473,"tag":474,"props":620,"children":621},{},[622],{"type":478,"value":623},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":473,"tag":625,"props":626,"children":628},"h2",{"id":627},"解题思路",[629],{"type":478,"value":627},{"type":473,"tag":625,"props":631,"children":633},{"id":632},"实现",[634],{"type":478,"value":632},{"type":473,"tag":636,"props":637,"children":639},"h3",{"id":638},"贪心",[640],{"type":478,"value":638},{"type":473,"tag":490,"props":642,"children":646},{"className":643,"code":644,"language":645,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[647],{"type":473,"tag":496,"props":648,"children":649},{"__ignoreMap":466},[650,659,685,702,711,755,764,805,854,894,929,995,1039,1048,1066,1117,1126,1159,1176,1185,1218,1227,1236,1253],{"type":473,"tag":500,"props":651,"children":652},{"class":502,"line":503},[653],{"type":473,"tag":500,"props":654,"children":656},{"style":655},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[657],{"type":478,"value":658},"/**\n",{"type":473,"tag":500,"props":660,"children":661},{"class":502,"line":512},[662,667,673,679],{"type":473,"tag":500,"props":663,"children":664},{"style":655},[665],{"type":478,"value":666}," * ",{"type":473,"tag":500,"props":668,"children":670},{"style":669},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[671],{"type":478,"value":672},"@param",{"type":473,"tag":500,"props":674,"children":676},{"style":675},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[677],{"type":478,"value":678}," {number[]}",{"type":473,"tag":500,"props":680,"children":682},{"style":681},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[683],{"type":478,"value":684}," nums\n",{"type":473,"tag":500,"props":686,"children":687},{"class":502,"line":521},[688,692,697],{"type":473,"tag":500,"props":689,"children":690},{"style":655},[691],{"type":478,"value":666},{"type":473,"tag":500,"props":693,"children":694},{"style":669},[695],{"type":478,"value":696},"@return",{"type":473,"tag":500,"props":698,"children":699},{"style":675},[700],{"type":478,"value":701}," {boolean}\n",{"type":473,"tag":500,"props":703,"children":705},{"class":502,"line":704},4,[706],{"type":473,"tag":500,"props":707,"children":708},{"style":655},[709],{"type":478,"value":710}," */\n",{"type":473,"tag":500,"props":712,"children":714},{"class":502,"line":713},5,[715,721,727,733,738,744,750],{"type":473,"tag":500,"props":716,"children":718},{"style":717},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[719],{"type":478,"value":720},"var",{"type":473,"tag":500,"props":722,"children":724},{"style":723},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[725],{"type":478,"value":726}," increasingTriplet",{"type":473,"tag":500,"props":728,"children":730},{"style":729},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[731],{"type":478,"value":732}," =",{"type":473,"tag":500,"props":734,"children":735},{"style":717},[736],{"type":478,"value":737}," function",{"type":473,"tag":500,"props":739,"children":741},{"style":740},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[742],{"type":478,"value":743}," (",{"type":473,"tag":500,"props":745,"children":747},{"style":746},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[748],{"type":478,"value":749},"nums",{"type":473,"tag":500,"props":751,"children":752},{"style":740},[753],{"type":478,"value":754},") {\n",{"type":473,"tag":500,"props":756,"children":758},{"class":502,"line":757},6,[759],{"type":473,"tag":500,"props":760,"children":761},{"style":655},[762],{"type":478,"value":763},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":473,"tag":500,"props":765,"children":767},{"class":502,"line":766},7,[768,773,779,783,788,794,799],{"type":473,"tag":500,"props":769,"children":770},{"style":717},[771],{"type":478,"value":772},"  let",{"type":473,"tag":500,"props":774,"children":776},{"style":775},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[777],{"type":478,"value":778}," len",{"type":473,"tag":500,"props":780,"children":781},{"style":729},[782],{"type":478,"value":732},{"type":473,"tag":500,"props":784,"children":785},{"style":775},[786],{"type":478,"value":787}," nums",{"type":473,"tag":500,"props":789,"children":791},{"style":790},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[792],{"type":478,"value":793},".",{"type":473,"tag":500,"props":795,"children":796},{"style":740},[797],{"type":478,"value":798},"length",{"type":473,"tag":500,"props":800,"children":802},{"style":801},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[803],{"type":478,"value":804},";\n",{"type":473,"tag":500,"props":806,"children":808},{"class":502,"line":807},8,[809,815,819,824,829,835,840,845,850],{"type":473,"tag":500,"props":810,"children":812},{"style":811},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[813],{"type":478,"value":814},"  if",{"type":473,"tag":500,"props":816,"children":817},{"style":740},[818],{"type":478,"value":743},{"type":473,"tag":500,"props":820,"children":821},{"style":775},[822],{"type":478,"value":823},"len",{"type":473,"tag":500,"props":825,"children":826},{"style":729},[827],{"type":478,"value":828}," \u003C",{"type":473,"tag":500,"props":830,"children":832},{"style":831},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[833],{"type":478,"value":834}," 3",{"type":473,"tag":500,"props":836,"children":837},{"style":740},[838],{"type":478,"value":839},") ",{"type":473,"tag":500,"props":841,"children":842},{"style":811},[843],{"type":478,"value":844},"return",{"type":473,"tag":500,"props":846,"children":847},{"style":831},[848],{"type":478,"value":849}," false",{"type":473,"tag":500,"props":851,"children":852},{"style":801},[853],{"type":478,"value":804},{"type":473,"tag":500,"props":855,"children":857},{"class":502,"line":856},9,[858,862,867,871,875,880,885,890],{"type":473,"tag":500,"props":859,"children":860},{"style":717},[861],{"type":478,"value":772},{"type":473,"tag":500,"props":863,"children":864},{"style":775},[865],{"type":478,"value":866}," first",{"type":473,"tag":500,"props":868,"children":869},{"style":729},[870],{"type":478,"value":732},{"type":473,"tag":500,"props":872,"children":873},{"style":775},[874],{"type":478,"value":787},{"type":473,"tag":500,"props":876,"children":877},{"style":740},[878],{"type":478,"value":879},"[",{"type":473,"tag":500,"props":881,"children":882},{"style":831},[883],{"type":478,"value":884},"0",{"type":473,"tag":500,"props":886,"children":887},{"style":740},[888],{"type":478,"value":889},"]",{"type":473,"tag":500,"props":891,"children":892},{"style":801},[893],{"type":478,"value":804},{"type":473,"tag":500,"props":895,"children":897},{"class":502,"line":896},10,[898,902,907,911,916,920,925],{"type":473,"tag":500,"props":899,"children":900},{"style":717},[901],{"type":478,"value":772},{"type":473,"tag":500,"props":903,"children":904},{"style":775},[905],{"type":478,"value":906}," second",{"type":473,"tag":500,"props":908,"children":909},{"style":729},[910],{"type":478,"value":732},{"type":473,"tag":500,"props":912,"children":913},{"style":775},[914],{"type":478,"value":915}," Number",{"type":473,"tag":500,"props":917,"children":918},{"style":790},[919],{"type":478,"value":793},{"type":473,"tag":500,"props":921,"children":922},{"style":740},[923],{"type":478,"value":924},"MAX_SAFE_INTEGER",{"type":473,"tag":500,"props":926,"children":927},{"style":801},[928],{"type":478,"value":804},{"type":473,"tag":500,"props":930,"children":932},{"class":502,"line":931},11,[933,938,942,947,952,956,961,966,970,974,978,982,986,991],{"type":473,"tag":500,"props":934,"children":935},{"style":811},[936],{"type":478,"value":937},"  for",{"type":473,"tag":500,"props":939,"children":940},{"style":740},[941],{"type":478,"value":743},{"type":473,"tag":500,"props":943,"children":944},{"style":717},[945],{"type":478,"value":946},"let",{"type":473,"tag":500,"props":948,"children":949},{"style":775},[950],{"type":478,"value":951}," i",{"type":473,"tag":500,"props":953,"children":954},{"style":729},[955],{"type":478,"value":732},{"type":473,"tag":500,"props":957,"children":958},{"style":831},[959],{"type":478,"value":960}," 0",{"type":473,"tag":500,"props":962,"children":963},{"style":801},[964],{"type":478,"value":965},";",{"type":473,"tag":500,"props":967,"children":968},{"style":775},[969],{"type":478,"value":951},{"type":473,"tag":500,"props":971,"children":972},{"style":729},[973],{"type":478,"value":828},{"type":473,"tag":500,"props":975,"children":976},{"style":775},[977],{"type":478,"value":778},{"type":473,"tag":500,"props":979,"children":980},{"style":801},[981],{"type":478,"value":965},{"type":473,"tag":500,"props":983,"children":984},{"style":775},[985],{"type":478,"value":951},{"type":473,"tag":500,"props":987,"children":988},{"style":729},[989],{"type":478,"value":990},"++",{"type":473,"tag":500,"props":992,"children":993},{"style":740},[994],{"type":478,"value":754},{"type":473,"tag":500,"props":996,"children":998},{"class":502,"line":997},12,[999,1004,1008,1012,1016,1021,1026,1031,1035],{"type":473,"tag":500,"props":1000,"children":1001},{"style":811},[1002],{"type":478,"value":1003},"    if",{"type":473,"tag":500,"props":1005,"children":1006},{"style":740},[1007],{"type":478,"value":743},{"type":473,"tag":500,"props":1009,"children":1010},{"style":775},[1011],{"type":478,"value":749},{"type":473,"tag":500,"props":1013,"children":1014},{"style":740},[1015],{"type":478,"value":879},{"type":473,"tag":500,"props":1017,"children":1018},{"style":775},[1019],{"type":478,"value":1020},"i",{"type":473,"tag":500,"props":1022,"children":1023},{"style":740},[1024],{"type":478,"value":1025},"] ",{"type":473,"tag":500,"props":1027,"children":1028},{"style":729},[1029],{"type":478,"value":1030},">",{"type":473,"tag":500,"props":1032,"children":1033},{"style":775},[1034],{"type":478,"value":906},{"type":473,"tag":500,"props":1036,"children":1037},{"style":740},[1038],{"type":478,"value":754},{"type":473,"tag":500,"props":1040,"children":1042},{"class":502,"line":1041},13,[1043],{"type":473,"tag":500,"props":1044,"children":1045},{"style":655},[1046],{"type":478,"value":1047},"      // 找到第三个数\n",{"type":473,"tag":500,"props":1049,"children":1051},{"class":502,"line":1050},14,[1052,1057,1062],{"type":473,"tag":500,"props":1053,"children":1054},{"style":811},[1055],{"type":478,"value":1056},"      return",{"type":473,"tag":500,"props":1058,"children":1059},{"style":831},[1060],{"type":478,"value":1061}," true",{"type":473,"tag":500,"props":1063,"children":1064},{"style":801},[1065],{"type":478,"value":804},{"type":473,"tag":500,"props":1067,"children":1069},{"class":502,"line":1068},15,[1070,1075,1080,1085,1089,1093,1097,1101,1105,1109,1113],{"type":473,"tag":500,"props":1071,"children":1072},{"style":740},[1073],{"type":478,"value":1074},"    } ",{"type":473,"tag":500,"props":1076,"children":1077},{"style":811},[1078],{"type":478,"value":1079},"else",{"type":473,"tag":500,"props":1081,"children":1082},{"style":811},[1083],{"type":478,"value":1084}," if",{"type":473,"tag":500,"props":1086,"children":1087},{"style":740},[1088],{"type":478,"value":743},{"type":473,"tag":500,"props":1090,"children":1091},{"style":775},[1092],{"type":478,"value":749},{"type":473,"tag":500,"props":1094,"children":1095},{"style":740},[1096],{"type":478,"value":879},{"type":473,"tag":500,"props":1098,"children":1099},{"style":775},[1100],{"type":478,"value":1020},{"type":473,"tag":500,"props":1102,"children":1103},{"style":740},[1104],{"type":478,"value":1025},{"type":473,"tag":500,"props":1106,"children":1107},{"style":729},[1108],{"type":478,"value":1030},{"type":473,"tag":500,"props":1110,"children":1111},{"style":775},[1112],{"type":478,"value":866},{"type":473,"tag":500,"props":1114,"children":1115},{"style":740},[1116],{"type":478,"value":754},{"type":473,"tag":500,"props":1118,"children":1120},{"class":502,"line":1119},16,[1121],{"type":473,"tag":500,"props":1122,"children":1123},{"style":655},[1124],{"type":478,"value":1125},"      // 更新第二个数\n",{"type":473,"tag":500,"props":1127,"children":1129},{"class":502,"line":1128},17,[1130,1135,1139,1143,1147,1151,1155],{"type":473,"tag":500,"props":1131,"children":1132},{"style":775},[1133],{"type":478,"value":1134},"      second",{"type":473,"tag":500,"props":1136,"children":1137},{"style":729},[1138],{"type":478,"value":732},{"type":473,"tag":500,"props":1140,"children":1141},{"style":775},[1142],{"type":478,"value":787},{"type":473,"tag":500,"props":1144,"children":1145},{"style":740},[1146],{"type":478,"value":879},{"type":473,"tag":500,"props":1148,"children":1149},{"style":775},[1150],{"type":478,"value":1020},{"type":473,"tag":500,"props":1152,"children":1153},{"style":740},[1154],{"type":478,"value":889},{"type":473,"tag":500,"props":1156,"children":1157},{"style":801},[1158],{"type":478,"value":804},{"type":473,"tag":500,"props":1160,"children":1162},{"class":502,"line":1161},18,[1163,1167,1171],{"type":473,"tag":500,"props":1164,"children":1165},{"style":740},[1166],{"type":478,"value":1074},{"type":473,"tag":500,"props":1168,"children":1169},{"style":811},[1170],{"type":478,"value":1079},{"type":473,"tag":500,"props":1172,"children":1173},{"style":740},[1174],{"type":478,"value":1175}," {\n",{"type":473,"tag":500,"props":1177,"children":1179},{"class":502,"line":1178},19,[1180],{"type":473,"tag":500,"props":1181,"children":1182},{"style":655},[1183],{"type":478,"value":1184},"      // 更新第一个数\n",{"type":473,"tag":500,"props":1186,"children":1188},{"class":502,"line":1187},20,[1189,1194,1198,1202,1206,1210,1214],{"type":473,"tag":500,"props":1190,"children":1191},{"style":775},[1192],{"type":478,"value":1193},"      first",{"type":473,"tag":500,"props":1195,"children":1196},{"style":729},[1197],{"type":478,"value":732},{"type":473,"tag":500,"props":1199,"children":1200},{"style":775},[1201],{"type":478,"value":787},{"type":473,"tag":500,"props":1203,"children":1204},{"style":740},[1205],{"type":478,"value":879},{"type":473,"tag":500,"props":1207,"children":1208},{"style":775},[1209],{"type":478,"value":1020},{"type":473,"tag":500,"props":1211,"children":1212},{"style":740},[1213],{"type":478,"value":889},{"type":473,"tag":500,"props":1215,"children":1216},{"style":801},[1217],{"type":478,"value":804},{"type":473,"tag":500,"props":1219,"children":1221},{"class":502,"line":1220},21,[1222],{"type":473,"tag":500,"props":1223,"children":1224},{"style":740},[1225],{"type":478,"value":1226},"    }\n",{"type":473,"tag":500,"props":1228,"children":1230},{"class":502,"line":1229},22,[1231],{"type":473,"tag":500,"props":1232,"children":1233},{"style":740},[1234],{"type":478,"value":1235},"  }\n",{"type":473,"tag":500,"props":1237,"children":1239},{"class":502,"line":1238},23,[1240,1245,1249],{"type":473,"tag":500,"props":1241,"children":1242},{"style":811},[1243],{"type":478,"value":1244},"  return",{"type":473,"tag":500,"props":1246,"children":1247},{"style":831},[1248],{"type":478,"value":849},{"type":473,"tag":500,"props":1250,"children":1251},{"style":801},[1252],{"type":478,"value":804},{"type":473,"tag":500,"props":1254,"children":1256},{"class":502,"line":1255},24,[1257,1262],{"type":473,"tag":500,"props":1258,"children":1259},{"style":740},[1260],{"type":478,"value":1261},"}",{"type":473,"tag":500,"props":1263,"children":1264},{"style":801},[1265],{"type":478,"value":804},{"type":473,"tag":1267,"props":1268,"children":1269},"style",{},[1270],{"type":478,"value":1271},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":713,"depth":713,"links":1273},[1274,1275],{"id":627,"depth":512,"text":627},{"id":632,"depth":512,"text":632,"children":1276},[1277],{"id":638,"depth":521,"text":638},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1284,1286],{"_path":216,"title":215,"description":1285},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":222,"title":221,"description":1287},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1713695848834]