[{"data":1,"prerenderedAt":1285},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/increasing-triplet-subsequence":460,"/algorithm/leetcode/major/increasing-triplet-subsequence-surround":1280},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":216,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":215,"description":464,"url":465,"body":466,"_type":1275,"_id":1276,"_source":1277,"_file":1278,"_extension":1279},"major",false,"","给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。","https://leetcode.cn/problems/increasing-triplet-subsequence",{"type":467,"children":468,"toc":1269},"root",[469,476,481,486,525,530,561,566,596,601,616,621,627,632,638,1263],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"如果存在这样的三元组下标 (i, j, k) 且满足 i \u003C j \u003C k ，使得 nums[i] \u003C nums[j] \u003C nums[k] ，返回 true ；否则，返回 false 。",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"示例 1：",{"type":470,"tag":487,"props":488,"children":491},"pre",{"className":489,"code":490,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3,4,5]\n输出：true\n解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",[492],{"type":470,"tag":493,"props":494,"children":495},"code",{"__ignoreMap":463},[496,507,516],{"type":470,"tag":497,"props":498,"children":501},"span",{"class":499,"line":500},"line",1,[502],{"type":470,"tag":497,"props":503,"children":504},{},[505],{"type":475,"value":506},"输入：nums = [1,2,3,4,5]\n",{"type":470,"tag":497,"props":508,"children":510},{"class":499,"line":509},2,[511],{"type":470,"tag":497,"props":512,"children":513},{},[514],{"type":475,"value":515},"输出：true\n",{"type":470,"tag":497,"props":517,"children":519},{"class":499,"line":518},3,[520],{"type":470,"tag":497,"props":521,"children":522},{},[523],{"type":475,"value":524},"解释：任何 i \u003C j \u003C k 的三元组都满足题意\n",{"type":470,"tag":471,"props":526,"children":527},{},[528],{"type":475,"value":529},"示例 2：",{"type":470,"tag":487,"props":531,"children":533},{"className":489,"code":532,"language":475,"meta":463,"style":463},"输入：nums = [5,4,3,2,1]\n输出：false\n解释：不存在满足题意的三元组\n",[534],{"type":470,"tag":493,"props":535,"children":536},{"__ignoreMap":463},[537,545,553],{"type":470,"tag":497,"props":538,"children":539},{"class":499,"line":500},[540],{"type":470,"tag":497,"props":541,"children":542},{},[543],{"type":475,"value":544},"输入：nums = [5,4,3,2,1]\n",{"type":470,"tag":497,"props":546,"children":547},{"class":499,"line":509},[548],{"type":470,"tag":497,"props":549,"children":550},{},[551],{"type":475,"value":552},"输出：false\n",{"type":470,"tag":497,"props":554,"children":555},{"class":499,"line":518},[556],{"type":470,"tag":497,"props":557,"children":558},{},[559],{"type":475,"value":560},"解释：不存在满足题意的三元组\n",{"type":470,"tag":471,"props":562,"children":563},{},[564],{"type":475,"value":565},"示例 3：",{"type":470,"tag":487,"props":567,"children":569},{"className":489,"code":568,"language":475,"meta":463,"style":463},"输入：nums = [2,1,5,0,4,6]\n输出：true\n解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",[570],{"type":470,"tag":493,"props":571,"children":572},{"__ignoreMap":463},[573,581,588],{"type":470,"tag":497,"props":574,"children":575},{"class":499,"line":500},[576],{"type":470,"tag":497,"props":577,"children":578},{},[579],{"type":475,"value":580},"输入：nums = [2,1,5,0,4,6]\n",{"type":470,"tag":497,"props":582,"children":583},{"class":499,"line":509},[584],{"type":470,"tag":497,"props":585,"children":586},{},[587],{"type":475,"value":515},{"type":470,"tag":497,"props":589,"children":590},{"class":499,"line":518},[591],{"type":470,"tag":497,"props":592,"children":593},{},[594],{"type":475,"value":595},"解释：三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 \u003C nums[4] == 4 \u003C nums[5] == 6\n",{"type":470,"tag":471,"props":597,"children":598},{},[599],{"type":475,"value":600},"提示：",{"type":470,"tag":602,"props":603,"children":604},"ul",{},[605,611],{"type":470,"tag":606,"props":607,"children":608},"li",{},[609],{"type":475,"value":610},"1 \u003C= nums.length \u003C= 5 * 10^5",{"type":470,"tag":606,"props":612,"children":613},{},[614],{"type":475,"value":615},"-2^31 \u003C= nums[i] \u003C= 2^31 - 1",{"type":470,"tag":471,"props":617,"children":618},{},[619],{"type":475,"value":620},"进阶：你能实现时间复杂度为 O(n) ，空间复杂度为 O(1) 的解决方案吗？",{"type":470,"tag":622,"props":623,"children":625},"h2",{"id":624},"解题思路",[626],{"type":475,"value":624},{"type":470,"tag":622,"props":628,"children":630},{"id":629},"实现",[631],{"type":475,"value":629},{"type":470,"tag":633,"props":634,"children":636},"h3",{"id":635},"贪心",[637],{"type":475,"value":635},{"type":470,"tag":487,"props":639,"children":643},{"className":640,"code":641,"language":642,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function (nums) {\n  // 维护两个变量，代表递增序列中的第一个数、第二个数\n  let len = nums.length;\n  if (len \u003C 3) return false;\n  let first = nums[0];\n  let second = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i \u003C len; i++) {\n    if (nums[i] > second) {\n      // 找到第三个数\n      return true;\n    } else if (nums[i] > first) {\n      // 更新第二个数\n      second = nums[i];\n    } else {\n      // 更新第一个数\n      first = nums[i];\n    }\n  }\n  return false;\n};\n","js",[644],{"type":470,"tag":493,"props":645,"children":646},{"__ignoreMap":463},[647,656,682,699,708,752,761,802,851,891,926,992,1036,1045,1063,1114,1123,1156,1173,1182,1215,1224,1233,1250],{"type":470,"tag":497,"props":648,"children":649},{"class":499,"line":500},[650],{"type":470,"tag":497,"props":651,"children":653},{"style":652},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[654],{"type":475,"value":655},"/**\n",{"type":470,"tag":497,"props":657,"children":658},{"class":499,"line":509},[659,664,670,676],{"type":470,"tag":497,"props":660,"children":661},{"style":652},[662],{"type":475,"value":663}," * ",{"type":470,"tag":497,"props":665,"children":667},{"style":666},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[668],{"type":475,"value":669},"@param",{"type":470,"tag":497,"props":671,"children":673},{"style":672},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[674],{"type":475,"value":675}," {number[]}",{"type":470,"tag":497,"props":677,"children":679},{"style":678},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[680],{"type":475,"value":681}," nums\n",{"type":470,"tag":497,"props":683,"children":684},{"class":499,"line":518},[685,689,694],{"type":470,"tag":497,"props":686,"children":687},{"style":652},[688],{"type":475,"value":663},{"type":470,"tag":497,"props":690,"children":691},{"style":666},[692],{"type":475,"value":693},"@return",{"type":470,"tag":497,"props":695,"children":696},{"style":672},[697],{"type":475,"value":698}," {boolean}\n",{"type":470,"tag":497,"props":700,"children":702},{"class":499,"line":701},4,[703],{"type":470,"tag":497,"props":704,"children":705},{"style":652},[706],{"type":475,"value":707}," */\n",{"type":470,"tag":497,"props":709,"children":711},{"class":499,"line":710},5,[712,718,724,730,735,741,747],{"type":470,"tag":497,"props":713,"children":715},{"style":714},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[716],{"type":475,"value":717},"var",{"type":470,"tag":497,"props":719,"children":721},{"style":720},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[722],{"type":475,"value":723}," increasingTriplet",{"type":470,"tag":497,"props":725,"children":727},{"style":726},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[728],{"type":475,"value":729}," =",{"type":470,"tag":497,"props":731,"children":732},{"style":714},[733],{"type":475,"value":734}," function",{"type":470,"tag":497,"props":736,"children":738},{"style":737},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[739],{"type":475,"value":740}," (",{"type":470,"tag":497,"props":742,"children":744},{"style":743},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[745],{"type":475,"value":746},"nums",{"type":470,"tag":497,"props":748,"children":749},{"style":737},[750],{"type":475,"value":751},") {\n",{"type":470,"tag":497,"props":753,"children":755},{"class":499,"line":754},6,[756],{"type":470,"tag":497,"props":757,"children":758},{"style":652},[759],{"type":475,"value":760},"  // 维护两个变量，代表递增序列中的第一个数、第二个数\n",{"type":470,"tag":497,"props":762,"children":764},{"class":499,"line":763},7,[765,770,776,780,785,791,796],{"type":470,"tag":497,"props":766,"children":767},{"style":714},[768],{"type":475,"value":769},"  let",{"type":470,"tag":497,"props":771,"children":773},{"style":772},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[774],{"type":475,"value":775}," len",{"type":470,"tag":497,"props":777,"children":778},{"style":726},[779],{"type":475,"value":729},{"type":470,"tag":497,"props":781,"children":782},{"style":772},[783],{"type":475,"value":784}," nums",{"type":470,"tag":497,"props":786,"children":788},{"style":787},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[789],{"type":475,"value":790},".",{"type":470,"tag":497,"props":792,"children":793},{"style":737},[794],{"type":475,"value":795},"length",{"type":470,"tag":497,"props":797,"children":799},{"style":798},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[800],{"type":475,"value":801},";\n",{"type":470,"tag":497,"props":803,"children":805},{"class":499,"line":804},8,[806,812,816,821,826,832,837,842,847],{"type":470,"tag":497,"props":807,"children":809},{"style":808},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[810],{"type":475,"value":811},"  if",{"type":470,"tag":497,"props":813,"children":814},{"style":737},[815],{"type":475,"value":740},{"type":470,"tag":497,"props":817,"children":818},{"style":772},[819],{"type":475,"value":820},"len",{"type":470,"tag":497,"props":822,"children":823},{"style":726},[824],{"type":475,"value":825}," \u003C",{"type":470,"tag":497,"props":827,"children":829},{"style":828},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[830],{"type":475,"value":831}," 3",{"type":470,"tag":497,"props":833,"children":834},{"style":737},[835],{"type":475,"value":836},") ",{"type":470,"tag":497,"props":838,"children":839},{"style":808},[840],{"type":475,"value":841},"return",{"type":470,"tag":497,"props":843,"children":844},{"style":828},[845],{"type":475,"value":846}," false",{"type":470,"tag":497,"props":848,"children":849},{"style":798},[850],{"type":475,"value":801},{"type":470,"tag":497,"props":852,"children":854},{"class":499,"line":853},9,[855,859,864,868,872,877,882,887],{"type":470,"tag":497,"props":856,"children":857},{"style":714},[858],{"type":475,"value":769},{"type":470,"tag":497,"props":860,"children":861},{"style":772},[862],{"type":475,"value":863}," first",{"type":470,"tag":497,"props":865,"children":866},{"style":726},[867],{"type":475,"value":729},{"type":470,"tag":497,"props":869,"children":870},{"style":772},[871],{"type":475,"value":784},{"type":470,"tag":497,"props":873,"children":874},{"style":737},[875],{"type":475,"value":876},"[",{"type":470,"tag":497,"props":878,"children":879},{"style":828},[880],{"type":475,"value":881},"0",{"type":470,"tag":497,"props":883,"children":884},{"style":737},[885],{"type":475,"value":886},"]",{"type":470,"tag":497,"props":888,"children":889},{"style":798},[890],{"type":475,"value":801},{"type":470,"tag":497,"props":892,"children":894},{"class":499,"line":893},10,[895,899,904,908,913,917,922],{"type":470,"tag":497,"props":896,"children":897},{"style":714},[898],{"type":475,"value":769},{"type":470,"tag":497,"props":900,"children":901},{"style":772},[902],{"type":475,"value":903}," second",{"type":470,"tag":497,"props":905,"children":906},{"style":726},[907],{"type":475,"value":729},{"type":470,"tag":497,"props":909,"children":910},{"style":772},[911],{"type":475,"value":912}," Number",{"type":470,"tag":497,"props":914,"children":915},{"style":787},[916],{"type":475,"value":790},{"type":470,"tag":497,"props":918,"children":919},{"style":737},[920],{"type":475,"value":921},"MAX_SAFE_INTEGER",{"type":470,"tag":497,"props":923,"children":924},{"style":798},[925],{"type":475,"value":801},{"type":470,"tag":497,"props":927,"children":929},{"class":499,"line":928},11,[930,935,939,944,949,953,958,963,967,971,975,979,983,988],{"type":470,"tag":497,"props":931,"children":932},{"style":808},[933],{"type":475,"value":934},"  for",{"type":470,"tag":497,"props":936,"children":937},{"style":737},[938],{"type":475,"value":740},{"type":470,"tag":497,"props":940,"children":941},{"style":714},[942],{"type":475,"value":943},"let",{"type":470,"tag":497,"props":945,"children":946},{"style":772},[947],{"type":475,"value":948}," i",{"type":470,"tag":497,"props":950,"children":951},{"style":726},[952],{"type":475,"value":729},{"type":470,"tag":497,"props":954,"children":955},{"style":828},[956],{"type":475,"value":957}," 0",{"type":470,"tag":497,"props":959,"children":960},{"style":798},[961],{"type":475,"value":962},";",{"type":470,"tag":497,"props":964,"children":965},{"style":772},[966],{"type":475,"value":948},{"type":470,"tag":497,"props":968,"children":969},{"style":726},[970],{"type":475,"value":825},{"type":470,"tag":497,"props":972,"children":973},{"style":772},[974],{"type":475,"value":775},{"type":470,"tag":497,"props":976,"children":977},{"style":798},[978],{"type":475,"value":962},{"type":470,"tag":497,"props":980,"children":981},{"style":772},[982],{"type":475,"value":948},{"type":470,"tag":497,"props":984,"children":985},{"style":726},[986],{"type":475,"value":987},"++",{"type":470,"tag":497,"props":989,"children":990},{"style":737},[991],{"type":475,"value":751},{"type":470,"tag":497,"props":993,"children":995},{"class":499,"line":994},12,[996,1001,1005,1009,1013,1018,1023,1028,1032],{"type":470,"tag":497,"props":997,"children":998},{"style":808},[999],{"type":475,"value":1000},"    if",{"type":470,"tag":497,"props":1002,"children":1003},{"style":737},[1004],{"type":475,"value":740},{"type":470,"tag":497,"props":1006,"children":1007},{"style":772},[1008],{"type":475,"value":746},{"type":470,"tag":497,"props":1010,"children":1011},{"style":737},[1012],{"type":475,"value":876},{"type":470,"tag":497,"props":1014,"children":1015},{"style":772},[1016],{"type":475,"value":1017},"i",{"type":470,"tag":497,"props":1019,"children":1020},{"style":737},[1021],{"type":475,"value":1022},"] ",{"type":470,"tag":497,"props":1024,"children":1025},{"style":726},[1026],{"type":475,"value":1027},">",{"type":470,"tag":497,"props":1029,"children":1030},{"style":772},[1031],{"type":475,"value":903},{"type":470,"tag":497,"props":1033,"children":1034},{"style":737},[1035],{"type":475,"value":751},{"type":470,"tag":497,"props":1037,"children":1039},{"class":499,"line":1038},13,[1040],{"type":470,"tag":497,"props":1041,"children":1042},{"style":652},[1043],{"type":475,"value":1044},"      // 找到第三个数\n",{"type":470,"tag":497,"props":1046,"children":1048},{"class":499,"line":1047},14,[1049,1054,1059],{"type":470,"tag":497,"props":1050,"children":1051},{"style":808},[1052],{"type":475,"value":1053},"      return",{"type":470,"tag":497,"props":1055,"children":1056},{"style":828},[1057],{"type":475,"value":1058}," true",{"type":470,"tag":497,"props":1060,"children":1061},{"style":798},[1062],{"type":475,"value":801},{"type":470,"tag":497,"props":1064,"children":1066},{"class":499,"line":1065},15,[1067,1072,1077,1082,1086,1090,1094,1098,1102,1106,1110],{"type":470,"tag":497,"props":1068,"children":1069},{"style":737},[1070],{"type":475,"value":1071},"    } ",{"type":470,"tag":497,"props":1073,"children":1074},{"style":808},[1075],{"type":475,"value":1076},"else",{"type":470,"tag":497,"props":1078,"children":1079},{"style":808},[1080],{"type":475,"value":1081}," if",{"type":470,"tag":497,"props":1083,"children":1084},{"style":737},[1085],{"type":475,"value":740},{"type":470,"tag":497,"props":1087,"children":1088},{"style":772},[1089],{"type":475,"value":746},{"type":470,"tag":497,"props":1091,"children":1092},{"style":737},[1093],{"type":475,"value":876},{"type":470,"tag":497,"props":1095,"children":1096},{"style":772},[1097],{"type":475,"value":1017},{"type":470,"tag":497,"props":1099,"children":1100},{"style":737},[1101],{"type":475,"value":1022},{"type":470,"tag":497,"props":1103,"children":1104},{"style":726},[1105],{"type":475,"value":1027},{"type":470,"tag":497,"props":1107,"children":1108},{"style":772},[1109],{"type":475,"value":863},{"type":470,"tag":497,"props":1111,"children":1112},{"style":737},[1113],{"type":475,"value":751},{"type":470,"tag":497,"props":1115,"children":1117},{"class":499,"line":1116},16,[1118],{"type":470,"tag":497,"props":1119,"children":1120},{"style":652},[1121],{"type":475,"value":1122},"      // 更新第二个数\n",{"type":470,"tag":497,"props":1124,"children":1126},{"class":499,"line":1125},17,[1127,1132,1136,1140,1144,1148,1152],{"type":470,"tag":497,"props":1128,"children":1129},{"style":772},[1130],{"type":475,"value":1131},"      second",{"type":470,"tag":497,"props":1133,"children":1134},{"style":726},[1135],{"type":475,"value":729},{"type":470,"tag":497,"props":1137,"children":1138},{"style":772},[1139],{"type":475,"value":784},{"type":470,"tag":497,"props":1141,"children":1142},{"style":737},[1143],{"type":475,"value":876},{"type":470,"tag":497,"props":1145,"children":1146},{"style":772},[1147],{"type":475,"value":1017},{"type":470,"tag":497,"props":1149,"children":1150},{"style":737},[1151],{"type":475,"value":886},{"type":470,"tag":497,"props":1153,"children":1154},{"style":798},[1155],{"type":475,"value":801},{"type":470,"tag":497,"props":1157,"children":1159},{"class":499,"line":1158},18,[1160,1164,1168],{"type":470,"tag":497,"props":1161,"children":1162},{"style":737},[1163],{"type":475,"value":1071},{"type":470,"tag":497,"props":1165,"children":1166},{"style":808},[1167],{"type":475,"value":1076},{"type":470,"tag":497,"props":1169,"children":1170},{"style":737},[1171],{"type":475,"value":1172}," {\n",{"type":470,"tag":497,"props":1174,"children":1176},{"class":499,"line":1175},19,[1177],{"type":470,"tag":497,"props":1178,"children":1179},{"style":652},[1180],{"type":475,"value":1181},"      // 更新第一个数\n",{"type":470,"tag":497,"props":1183,"children":1185},{"class":499,"line":1184},20,[1186,1191,1195,1199,1203,1207,1211],{"type":470,"tag":497,"props":1187,"children":1188},{"style":772},[1189],{"type":475,"value":1190},"      first",{"type":470,"tag":497,"props":1192,"children":1193},{"style":726},[1194],{"type":475,"value":729},{"type":470,"tag":497,"props":1196,"children":1197},{"style":772},[1198],{"type":475,"value":784},{"type":470,"tag":497,"props":1200,"children":1201},{"style":737},[1202],{"type":475,"value":876},{"type":470,"tag":497,"props":1204,"children":1205},{"style":772},[1206],{"type":475,"value":1017},{"type":470,"tag":497,"props":1208,"children":1209},{"style":737},[1210],{"type":475,"value":886},{"type":470,"tag":497,"props":1212,"children":1213},{"style":798},[1214],{"type":475,"value":801},{"type":470,"tag":497,"props":1216,"children":1218},{"class":499,"line":1217},21,[1219],{"type":470,"tag":497,"props":1220,"children":1221},{"style":737},[1222],{"type":475,"value":1223},"    }\n",{"type":470,"tag":497,"props":1225,"children":1227},{"class":499,"line":1226},22,[1228],{"type":470,"tag":497,"props":1229,"children":1230},{"style":737},[1231],{"type":475,"value":1232},"  }\n",{"type":470,"tag":497,"props":1234,"children":1236},{"class":499,"line":1235},23,[1237,1242,1246],{"type":470,"tag":497,"props":1238,"children":1239},{"style":808},[1240],{"type":475,"value":1241},"  return",{"type":470,"tag":497,"props":1243,"children":1244},{"style":828},[1245],{"type":475,"value":846},{"type":470,"tag":497,"props":1247,"children":1248},{"style":798},[1249],{"type":475,"value":801},{"type":470,"tag":497,"props":1251,"children":1253},{"class":499,"line":1252},24,[1254,1259],{"type":470,"tag":497,"props":1255,"children":1256},{"style":737},[1257],{"type":475,"value":1258},"}",{"type":470,"tag":497,"props":1260,"children":1261},{"style":798},[1262],{"type":475,"value":801},{"type":470,"tag":1264,"props":1265,"children":1266},"style",{},[1267],{"type":475,"value":1268},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":710,"depth":710,"links":1270},[1271,1272],{"id":624,"depth":509,"text":624},{"id":629,"depth":509,"text":629,"children":1273},[1274],{"id":635,"depth":518,"text":635},"markdown","content:1.algorithm:3.leetcode:3.major:334.increasing-triplet-subsequence.md","content","1.algorithm/3.leetcode/3.major/334.increasing-triplet-subsequence.md","md",[1281,1283],{"_path":213,"title":212,"description":1282},"给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。",{"_path":219,"title":218,"description":1284},"编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。",1713626404627]