[{"data":1,"prerenderedAt":1189},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-search":460,"/algorithm/leetcode/major/binary-search-surround":1184},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":246,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":245,"description":464,"url":465,"body":466,"_type":1179,"_id":1180,"_source":1181,"_file":1182,"_extension":1183},"major",false,"","给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。","https://leetcode.cn/problems/binary-search",{"type":467,"children":468,"toc":1175},"root",[469,476,481,520,525,556,561,581,587,592,1169],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"示例 1:",{"type":470,"tag":482,"props":483,"children":486},"pre",{"className":484,"code":485,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入: nums = [-1,0,3,5,9,12], target = 9\n输出: 4\n解释: 9 出现在 nums 中并且下标为 4\n",[487],{"type":470,"tag":488,"props":489,"children":490},"code",{"__ignoreMap":463},[491,502,511],{"type":470,"tag":492,"props":493,"children":496},"span",{"class":494,"line":495},"line",1,[497],{"type":470,"tag":492,"props":498,"children":499},{},[500],{"type":475,"value":501},"输入: nums = [-1,0,3,5,9,12], target = 9\n",{"type":470,"tag":492,"props":503,"children":505},{"class":494,"line":504},2,[506],{"type":470,"tag":492,"props":507,"children":508},{},[509],{"type":475,"value":510},"输出: 4\n",{"type":470,"tag":492,"props":512,"children":514},{"class":494,"line":513},3,[515],{"type":470,"tag":492,"props":516,"children":517},{},[518],{"type":475,"value":519},"解释: 9 出现在 nums 中并且下标为 4\n",{"type":470,"tag":471,"props":521,"children":522},{},[523],{"type":475,"value":524},"示例 2:",{"type":470,"tag":482,"props":526,"children":528},{"className":484,"code":527,"language":475,"meta":463,"style":463},"输入: nums = [-1,0,3,5,9,12], target = 2\n输出: -1\n解释: 2 不存在 nums 中因此返回 -1\n",[529],{"type":470,"tag":488,"props":530,"children":531},{"__ignoreMap":463},[532,540,548],{"type":470,"tag":492,"props":533,"children":534},{"class":494,"line":495},[535],{"type":470,"tag":492,"props":536,"children":537},{},[538],{"type":475,"value":539},"输入: nums = [-1,0,3,5,9,12], target = 2\n",{"type":470,"tag":492,"props":541,"children":542},{"class":494,"line":504},[543],{"type":470,"tag":492,"props":544,"children":545},{},[546],{"type":475,"value":547},"输出: -1\n",{"type":470,"tag":492,"props":549,"children":550},{"class":494,"line":513},[551],{"type":470,"tag":492,"props":552,"children":553},{},[554],{"type":475,"value":555},"解释: 2 不存在 nums 中因此返回 -1\n",{"type":470,"tag":471,"props":557,"children":558},{},[559],{"type":475,"value":560},"提示：",{"type":470,"tag":562,"props":563,"children":564},"ul",{},[565,571,576],{"type":470,"tag":566,"props":567,"children":568},"li",{},[569],{"type":475,"value":570},"你可以假设 nums 中的所有元素是不重复的。",{"type":470,"tag":566,"props":572,"children":573},{},[574],{"type":475,"value":575},"n 将在 [1, 10000] 之间。",{"type":470,"tag":566,"props":577,"children":578},{},[579],{"type":475,"value":580},"nums 的每个元素都将在 [-9999, 9999] 之间。",{"type":470,"tag":582,"props":583,"children":585},"h2",{"id":584},"解题思路",[586],{"type":475,"value":584},{"type":470,"tag":582,"props":588,"children":590},{"id":589},"实现",[591],{"type":475,"value":589},{"type":470,"tag":482,"props":593,"children":597},{"className":594,"code":595,"language":596,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar search = function (nums, target) {\n  let length = nums.length;\n  let i = 0;\n  let j = length - 1;\n  while (i \u003C= j) {\n    let middleIndex = (i + j) >> 1;\n    let middle = nums[middleIndex];\n    if (middle === target) return middleIndex;\n    if (middle \u003C target) {\n      i = middleIndex + 1;\n    } else {\n      j = middleIndex - 1;\n    }\n  }\n  return -1;\n};\n","js",[598],{"type":470,"tag":488,"props":599,"children":600},{"__ignoreMap":463},[601,610,636,657,675,684,739,779,806,841,873,926,966,1010,1039,1068,1087,1116,1125,1134,1156],{"type":470,"tag":492,"props":602,"children":603},{"class":494,"line":495},[604],{"type":470,"tag":492,"props":605,"children":607},{"style":606},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[608],{"type":475,"value":609},"/**\n",{"type":470,"tag":492,"props":611,"children":612},{"class":494,"line":504},[613,618,624,630],{"type":470,"tag":492,"props":614,"children":615},{"style":606},[616],{"type":475,"value":617}," * ",{"type":470,"tag":492,"props":619,"children":621},{"style":620},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[622],{"type":475,"value":623},"@param",{"type":470,"tag":492,"props":625,"children":627},{"style":626},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[628],{"type":475,"value":629}," {number[]}",{"type":470,"tag":492,"props":631,"children":633},{"style":632},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[634],{"type":475,"value":635}," nums\n",{"type":470,"tag":492,"props":637,"children":638},{"class":494,"line":513},[639,643,647,652],{"type":470,"tag":492,"props":640,"children":641},{"style":606},[642],{"type":475,"value":617},{"type":470,"tag":492,"props":644,"children":645},{"style":620},[646],{"type":475,"value":623},{"type":470,"tag":492,"props":648,"children":649},{"style":626},[650],{"type":475,"value":651}," {number}",{"type":470,"tag":492,"props":653,"children":654},{"style":632},[655],{"type":475,"value":656}," target\n",{"type":470,"tag":492,"props":658,"children":660},{"class":494,"line":659},4,[661,665,670],{"type":470,"tag":492,"props":662,"children":663},{"style":606},[664],{"type":475,"value":617},{"type":470,"tag":492,"props":666,"children":667},{"style":620},[668],{"type":475,"value":669},"@return",{"type":470,"tag":492,"props":671,"children":672},{"style":626},[673],{"type":475,"value":674}," {number}\n",{"type":470,"tag":492,"props":676,"children":678},{"class":494,"line":677},5,[679],{"type":470,"tag":492,"props":680,"children":681},{"style":606},[682],{"type":475,"value":683}," */\n",{"type":470,"tag":492,"props":685,"children":687},{"class":494,"line":686},6,[688,694,700,706,711,717,723,729,734],{"type":470,"tag":492,"props":689,"children":691},{"style":690},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[692],{"type":475,"value":693},"var",{"type":470,"tag":492,"props":695,"children":697},{"style":696},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[698],{"type":475,"value":699}," search",{"type":470,"tag":492,"props":701,"children":703},{"style":702},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[704],{"type":475,"value":705}," =",{"type":470,"tag":492,"props":707,"children":708},{"style":690},[709],{"type":475,"value":710}," function",{"type":470,"tag":492,"props":712,"children":714},{"style":713},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[715],{"type":475,"value":716}," (",{"type":470,"tag":492,"props":718,"children":720},{"style":719},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[721],{"type":475,"value":722},"nums",{"type":470,"tag":492,"props":724,"children":726},{"style":725},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[727],{"type":475,"value":728},",",{"type":470,"tag":492,"props":730,"children":731},{"style":719},[732],{"type":475,"value":733}," target",{"type":470,"tag":492,"props":735,"children":736},{"style":713},[737],{"type":475,"value":738},") {\n",{"type":470,"tag":492,"props":740,"children":742},{"class":494,"line":741},7,[743,748,754,758,763,769,774],{"type":470,"tag":492,"props":744,"children":745},{"style":690},[746],{"type":475,"value":747},"  let",{"type":470,"tag":492,"props":749,"children":751},{"style":750},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[752],{"type":475,"value":753}," length",{"type":470,"tag":492,"props":755,"children":756},{"style":702},[757],{"type":475,"value":705},{"type":470,"tag":492,"props":759,"children":760},{"style":750},[761],{"type":475,"value":762}," nums",{"type":470,"tag":492,"props":764,"children":766},{"style":765},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[767],{"type":475,"value":768},".",{"type":470,"tag":492,"props":770,"children":771},{"style":713},[772],{"type":475,"value":773},"length",{"type":470,"tag":492,"props":775,"children":776},{"style":725},[777],{"type":475,"value":778},";\n",{"type":470,"tag":492,"props":780,"children":782},{"class":494,"line":781},8,[783,787,792,796,802],{"type":470,"tag":492,"props":784,"children":785},{"style":690},[786],{"type":475,"value":747},{"type":470,"tag":492,"props":788,"children":789},{"style":750},[790],{"type":475,"value":791}," i",{"type":470,"tag":492,"props":793,"children":794},{"style":702},[795],{"type":475,"value":705},{"type":470,"tag":492,"props":797,"children":799},{"style":798},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[800],{"type":475,"value":801}," 0",{"type":470,"tag":492,"props":803,"children":804},{"style":725},[805],{"type":475,"value":778},{"type":470,"tag":492,"props":807,"children":809},{"class":494,"line":808},9,[810,814,819,823,827,832,837],{"type":470,"tag":492,"props":811,"children":812},{"style":690},[813],{"type":475,"value":747},{"type":470,"tag":492,"props":815,"children":816},{"style":750},[817],{"type":475,"value":818}," j",{"type":470,"tag":492,"props":820,"children":821},{"style":702},[822],{"type":475,"value":705},{"type":470,"tag":492,"props":824,"children":825},{"style":750},[826],{"type":475,"value":753},{"type":470,"tag":492,"props":828,"children":829},{"style":702},[830],{"type":475,"value":831}," -",{"type":470,"tag":492,"props":833,"children":834},{"style":798},[835],{"type":475,"value":836}," 1",{"type":470,"tag":492,"props":838,"children":839},{"style":725},[840],{"type":475,"value":778},{"type":470,"tag":492,"props":842,"children":844},{"class":494,"line":843},10,[845,851,855,860,865,869],{"type":470,"tag":492,"props":846,"children":848},{"style":847},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[849],{"type":475,"value":850},"  while",{"type":470,"tag":492,"props":852,"children":853},{"style":713},[854],{"type":475,"value":716},{"type":470,"tag":492,"props":856,"children":857},{"style":750},[858],{"type":475,"value":859},"i",{"type":470,"tag":492,"props":861,"children":862},{"style":702},[863],{"type":475,"value":864}," \u003C=",{"type":470,"tag":492,"props":866,"children":867},{"style":750},[868],{"type":475,"value":818},{"type":470,"tag":492,"props":870,"children":871},{"style":713},[872],{"type":475,"value":738},{"type":470,"tag":492,"props":874,"children":876},{"class":494,"line":875},11,[877,882,887,891,895,899,904,908,913,918,922],{"type":470,"tag":492,"props":878,"children":879},{"style":690},[880],{"type":475,"value":881},"    let",{"type":470,"tag":492,"props":883,"children":884},{"style":750},[885],{"type":475,"value":886}," middleIndex",{"type":470,"tag":492,"props":888,"children":889},{"style":702},[890],{"type":475,"value":705},{"type":470,"tag":492,"props":892,"children":893},{"style":713},[894],{"type":475,"value":716},{"type":470,"tag":492,"props":896,"children":897},{"style":750},[898],{"type":475,"value":859},{"type":470,"tag":492,"props":900,"children":901},{"style":702},[902],{"type":475,"value":903}," +",{"type":470,"tag":492,"props":905,"children":906},{"style":750},[907],{"type":475,"value":818},{"type":470,"tag":492,"props":909,"children":910},{"style":713},[911],{"type":475,"value":912},") ",{"type":470,"tag":492,"props":914,"children":915},{"style":702},[916],{"type":475,"value":917},">>",{"type":470,"tag":492,"props":919,"children":920},{"style":798},[921],{"type":475,"value":836},{"type":470,"tag":492,"props":923,"children":924},{"style":725},[925],{"type":475,"value":778},{"type":470,"tag":492,"props":927,"children":929},{"class":494,"line":928},12,[930,934,939,943,947,952,957,962],{"type":470,"tag":492,"props":931,"children":932},{"style":690},[933],{"type":475,"value":881},{"type":470,"tag":492,"props":935,"children":936},{"style":750},[937],{"type":475,"value":938}," middle",{"type":470,"tag":492,"props":940,"children":941},{"style":702},[942],{"type":475,"value":705},{"type":470,"tag":492,"props":944,"children":945},{"style":750},[946],{"type":475,"value":762},{"type":470,"tag":492,"props":948,"children":949},{"style":713},[950],{"type":475,"value":951},"[",{"type":470,"tag":492,"props":953,"children":954},{"style":750},[955],{"type":475,"value":956},"middleIndex",{"type":470,"tag":492,"props":958,"children":959},{"style":713},[960],{"type":475,"value":961},"]",{"type":470,"tag":492,"props":963,"children":964},{"style":725},[965],{"type":475,"value":778},{"type":470,"tag":492,"props":967,"children":969},{"class":494,"line":968},13,[970,975,979,984,989,993,997,1002,1006],{"type":470,"tag":492,"props":971,"children":972},{"style":847},[973],{"type":475,"value":974},"    if",{"type":470,"tag":492,"props":976,"children":977},{"style":713},[978],{"type":475,"value":716},{"type":470,"tag":492,"props":980,"children":981},{"style":750},[982],{"type":475,"value":983},"middle",{"type":470,"tag":492,"props":985,"children":986},{"style":702},[987],{"type":475,"value":988}," ===",{"type":470,"tag":492,"props":990,"children":991},{"style":750},[992],{"type":475,"value":733},{"type":470,"tag":492,"props":994,"children":995},{"style":713},[996],{"type":475,"value":912},{"type":470,"tag":492,"props":998,"children":999},{"style":847},[1000],{"type":475,"value":1001},"return",{"type":470,"tag":492,"props":1003,"children":1004},{"style":750},[1005],{"type":475,"value":886},{"type":470,"tag":492,"props":1007,"children":1008},{"style":725},[1009],{"type":475,"value":778},{"type":470,"tag":492,"props":1011,"children":1013},{"class":494,"line":1012},14,[1014,1018,1022,1026,1031,1035],{"type":470,"tag":492,"props":1015,"children":1016},{"style":847},[1017],{"type":475,"value":974},{"type":470,"tag":492,"props":1019,"children":1020},{"style":713},[1021],{"type":475,"value":716},{"type":470,"tag":492,"props":1023,"children":1024},{"style":750},[1025],{"type":475,"value":983},{"type":470,"tag":492,"props":1027,"children":1028},{"style":702},[1029],{"type":475,"value":1030}," \u003C",{"type":470,"tag":492,"props":1032,"children":1033},{"style":750},[1034],{"type":475,"value":733},{"type":470,"tag":492,"props":1036,"children":1037},{"style":713},[1038],{"type":475,"value":738},{"type":470,"tag":492,"props":1040,"children":1042},{"class":494,"line":1041},15,[1043,1048,1052,1056,1060,1064],{"type":470,"tag":492,"props":1044,"children":1045},{"style":750},[1046],{"type":475,"value":1047},"      i",{"type":470,"tag":492,"props":1049,"children":1050},{"style":702},[1051],{"type":475,"value":705},{"type":470,"tag":492,"props":1053,"children":1054},{"style":750},[1055],{"type":475,"value":886},{"type":470,"tag":492,"props":1057,"children":1058},{"style":702},[1059],{"type":475,"value":903},{"type":470,"tag":492,"props":1061,"children":1062},{"style":798},[1063],{"type":475,"value":836},{"type":470,"tag":492,"props":1065,"children":1066},{"style":725},[1067],{"type":475,"value":778},{"type":470,"tag":492,"props":1069,"children":1071},{"class":494,"line":1070},16,[1072,1077,1082],{"type":470,"tag":492,"props":1073,"children":1074},{"style":713},[1075],{"type":475,"value":1076},"    } ",{"type":470,"tag":492,"props":1078,"children":1079},{"style":847},[1080],{"type":475,"value":1081},"else",{"type":470,"tag":492,"props":1083,"children":1084},{"style":713},[1085],{"type":475,"value":1086}," {\n",{"type":470,"tag":492,"props":1088,"children":1090},{"class":494,"line":1089},17,[1091,1096,1100,1104,1108,1112],{"type":470,"tag":492,"props":1092,"children":1093},{"style":750},[1094],{"type":475,"value":1095},"      j",{"type":470,"tag":492,"props":1097,"children":1098},{"style":702},[1099],{"type":475,"value":705},{"type":470,"tag":492,"props":1101,"children":1102},{"style":750},[1103],{"type":475,"value":886},{"type":470,"tag":492,"props":1105,"children":1106},{"style":702},[1107],{"type":475,"value":831},{"type":470,"tag":492,"props":1109,"children":1110},{"style":798},[1111],{"type":475,"value":836},{"type":470,"tag":492,"props":1113,"children":1114},{"style":725},[1115],{"type":475,"value":778},{"type":470,"tag":492,"props":1117,"children":1119},{"class":494,"line":1118},18,[1120],{"type":470,"tag":492,"props":1121,"children":1122},{"style":713},[1123],{"type":475,"value":1124},"    }\n",{"type":470,"tag":492,"props":1126,"children":1128},{"class":494,"line":1127},19,[1129],{"type":470,"tag":492,"props":1130,"children":1131},{"style":713},[1132],{"type":475,"value":1133},"  }\n",{"type":470,"tag":492,"props":1135,"children":1137},{"class":494,"line":1136},20,[1138,1143,1147,1152],{"type":470,"tag":492,"props":1139,"children":1140},{"style":847},[1141],{"type":475,"value":1142},"  return",{"type":470,"tag":492,"props":1144,"children":1145},{"style":702},[1146],{"type":475,"value":831},{"type":470,"tag":492,"props":1148,"children":1149},{"style":798},[1150],{"type":475,"value":1151},"1",{"type":470,"tag":492,"props":1153,"children":1154},{"style":725},[1155],{"type":475,"value":778},{"type":470,"tag":492,"props":1157,"children":1159},{"class":494,"line":1158},21,[1160,1165],{"type":470,"tag":492,"props":1161,"children":1162},{"style":713},[1163],{"type":475,"value":1164},"}",{"type":470,"tag":492,"props":1166,"children":1167},{"style":725},[1168],{"type":475,"value":778},{"type":470,"tag":1170,"props":1171,"children":1172},"style",{},[1173],{"type":475,"value":1174},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":677,"depth":677,"links":1176},[1177,1178],{"id":584,"depth":504,"text":584},{"id":589,"depth":504,"text":589},"markdown","content:1.algorithm:3.leetcode:3.major:704.binary-search.md","content","1.algorithm/3.leetcode/3.major/704.binary-search.md","md",[1185,1187],{"_path":243,"title":242,"description":1186},"给你一个只包含三种字符的字符串，支持的字符类型分别是 '('、')' 和 '*'。请你检验这个字符串是否为有效字符串，如果是有效字符串返回 true 。",{"_path":249,"title":248,"description":1188},"给你一个整数数组 nums，请你将该数组升序排列。",1713626405261]