[{"data":1,"prerenderedAt":1290},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-search":524,"/algorithm/leetcode/major/binary-search-surround":1285},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":252,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":251,"description":528,"url":529,"body":530,"_type":1280,"_id":1281,"_source":1282,"_file":1283,"_extension":1284},"major",false,"","给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。","https://leetcode.cn/problems/binary-search",{"type":531,"children":532,"toc":1276},"root",[533,540,545,584,589,620,625,645,651,656,1270],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"示例 1:",{"type":534,"tag":546,"props":547,"children":550},"pre",{"className":548,"code":549,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入: nums = [-1,0,3,5,9,12], target = 9\n输出: 4\n解释: 9 出现在 nums 中并且下标为 4\n",[551],{"type":534,"tag":552,"props":553,"children":554},"code",{"__ignoreMap":527},[555,566,575],{"type":534,"tag":556,"props":557,"children":560},"span",{"class":558,"line":559},"line",1,[561],{"type":534,"tag":556,"props":562,"children":563},{},[564],{"type":539,"value":565},"输入: nums = [-1,0,3,5,9,12], target = 9\n",{"type":534,"tag":556,"props":567,"children":569},{"class":558,"line":568},2,[570],{"type":534,"tag":556,"props":571,"children":572},{},[573],{"type":539,"value":574},"输出: 4\n",{"type":534,"tag":556,"props":576,"children":578},{"class":558,"line":577},3,[579],{"type":534,"tag":556,"props":580,"children":581},{},[582],{"type":539,"value":583},"解释: 9 出现在 nums 中并且下标为 4\n",{"type":534,"tag":535,"props":585,"children":586},{},[587],{"type":539,"value":588},"示例 2:",{"type":534,"tag":546,"props":590,"children":592},{"className":548,"code":591,"language":539,"meta":527,"style":527},"输入: nums = [-1,0,3,5,9,12], target = 2\n输出: -1\n解释: 2 不存在 nums 中因此返回 -1\n",[593],{"type":534,"tag":552,"props":594,"children":595},{"__ignoreMap":527},[596,604,612],{"type":534,"tag":556,"props":597,"children":598},{"class":558,"line":559},[599],{"type":534,"tag":556,"props":600,"children":601},{},[602],{"type":539,"value":603},"输入: nums = [-1,0,3,5,9,12], target = 2\n",{"type":534,"tag":556,"props":605,"children":606},{"class":558,"line":568},[607],{"type":534,"tag":556,"props":608,"children":609},{},[610],{"type":539,"value":611},"输出: -1\n",{"type":534,"tag":556,"props":613,"children":614},{"class":558,"line":577},[615],{"type":534,"tag":556,"props":616,"children":617},{},[618],{"type":539,"value":619},"解释: 2 不存在 nums 中因此返回 -1\n",{"type":534,"tag":535,"props":621,"children":622},{},[623],{"type":539,"value":624},"提示：",{"type":534,"tag":626,"props":627,"children":628},"ul",{},[629,635,640],{"type":534,"tag":630,"props":631,"children":632},"li",{},[633],{"type":539,"value":634},"你可以假设 nums 中的所有元素是不重复的。",{"type":534,"tag":630,"props":636,"children":637},{},[638],{"type":539,"value":639},"n 将在 [1, 10000] 之间。",{"type":534,"tag":630,"props":641,"children":642},{},[643],{"type":539,"value":644},"nums 的每个元素都将在 [-9999, 9999] 之间。",{"type":534,"tag":646,"props":647,"children":649},"h2",{"id":648},"解题思路",[650],{"type":539,"value":648},{"type":534,"tag":646,"props":652,"children":654},{"id":653},"实现",[655],{"type":539,"value":653},{"type":534,"tag":546,"props":657,"children":661},{"className":658,"code":659,"language":660,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar search = function (nums, target) {\n  let length = nums.length;\n  let i = 0;\n  let j = length - 1;\n  while (i \u003C= j) {\n    let middleIndex = (i + j) >> 1;\n    let middle = nums[middleIndex];\n    if (middle === target) return middleIndex;\n    if (middle \u003C target) {\n      i = middleIndex + 1;\n    } else {\n      j = middleIndex - 1;\n    }\n  }\n  return -1;\n};\n","js",[662],{"type":534,"tag":552,"props":663,"children":664},{"__ignoreMap":527},[665,674,716,749,779,788,844,883,910,945,980,1032,1068,1112,1145,1174,1192,1221,1230,1239,1261],{"type":534,"tag":556,"props":666,"children":667},{"class":558,"line":559},[668],{"type":534,"tag":556,"props":669,"children":671},{"style":670},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[672],{"type":539,"value":673},"/**\n",{"type":534,"tag":556,"props":675,"children":676},{"class":558,"line":568},[677,682,688,694,699,705,710],{"type":534,"tag":556,"props":678,"children":679},{"style":670},[680],{"type":539,"value":681}," * ",{"type":534,"tag":556,"props":683,"children":685},{"style":684},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[686],{"type":539,"value":687},"@",{"type":534,"tag":556,"props":689,"children":691},{"style":690},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[692],{"type":539,"value":693},"param",{"type":534,"tag":556,"props":695,"children":696},{"style":684},[697],{"type":539,"value":698}," {",{"type":534,"tag":556,"props":700,"children":702},{"style":701},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[703],{"type":539,"value":704},"number[]",{"type":534,"tag":556,"props":706,"children":707},{"style":684},[708],{"type":539,"value":709},"}",{"type":534,"tag":556,"props":711,"children":713},{"style":712},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[714],{"type":539,"value":715}," nums\n",{"type":534,"tag":556,"props":717,"children":718},{"class":558,"line":577},[719,723,727,731,735,740,744],{"type":534,"tag":556,"props":720,"children":721},{"style":670},[722],{"type":539,"value":681},{"type":534,"tag":556,"props":724,"children":725},{"style":684},[726],{"type":539,"value":687},{"type":534,"tag":556,"props":728,"children":729},{"style":690},[730],{"type":539,"value":693},{"type":534,"tag":556,"props":732,"children":733},{"style":684},[734],{"type":539,"value":698},{"type":534,"tag":556,"props":736,"children":737},{"style":701},[738],{"type":539,"value":739},"number",{"type":534,"tag":556,"props":741,"children":742},{"style":684},[743],{"type":539,"value":709},{"type":534,"tag":556,"props":745,"children":746},{"style":712},[747],{"type":539,"value":748}," target\n",{"type":534,"tag":556,"props":750,"children":752},{"class":558,"line":751},4,[753,757,761,766,770,774],{"type":534,"tag":556,"props":754,"children":755},{"style":670},[756],{"type":539,"value":681},{"type":534,"tag":556,"props":758,"children":759},{"style":684},[760],{"type":539,"value":687},{"type":534,"tag":556,"props":762,"children":763},{"style":690},[764],{"type":539,"value":765},"return",{"type":534,"tag":556,"props":767,"children":768},{"style":684},[769],{"type":539,"value":698},{"type":534,"tag":556,"props":771,"children":772},{"style":701},[773],{"type":539,"value":739},{"type":534,"tag":556,"props":775,"children":776},{"style":684},[777],{"type":539,"value":778},"}\n",{"type":534,"tag":556,"props":780,"children":782},{"class":558,"line":781},5,[783],{"type":534,"tag":556,"props":784,"children":785},{"style":670},[786],{"type":539,"value":787}," */\n",{"type":534,"tag":556,"props":789,"children":791},{"class":558,"line":790},6,[792,798,804,809,814,819,824,829,834,839],{"type":534,"tag":556,"props":793,"children":795},{"style":794},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[796],{"type":539,"value":797},"var",{"type":534,"tag":556,"props":799,"children":801},{"style":800},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[802],{"type":539,"value":803}," search",{"type":534,"tag":556,"props":805,"children":806},{"style":684},[807],{"type":539,"value":808}," =",{"type":534,"tag":556,"props":810,"children":811},{"style":794},[812],{"type":539,"value":813}," function",{"type":534,"tag":556,"props":815,"children":816},{"style":684},[817],{"type":539,"value":818}," (",{"type":534,"tag":556,"props":820,"children":821},{"style":712},[822],{"type":539,"value":823},"nums",{"type":534,"tag":556,"props":825,"children":826},{"style":684},[827],{"type":539,"value":828},",",{"type":534,"tag":556,"props":830,"children":831},{"style":712},[832],{"type":539,"value":833}," target",{"type":534,"tag":556,"props":835,"children":836},{"style":684},[837],{"type":539,"value":838},")",{"type":534,"tag":556,"props":840,"children":841},{"style":684},[842],{"type":539,"value":843}," {\n",{"type":534,"tag":556,"props":845,"children":847},{"class":558,"line":846},7,[848,853,858,862,867,872,878],{"type":534,"tag":556,"props":849,"children":850},{"style":794},[851],{"type":539,"value":852},"  let",{"type":534,"tag":556,"props":854,"children":855},{"style":712},[856],{"type":539,"value":857}," length",{"type":534,"tag":556,"props":859,"children":860},{"style":684},[861],{"type":539,"value":808},{"type":534,"tag":556,"props":863,"children":864},{"style":712},[865],{"type":539,"value":866}," nums",{"type":534,"tag":556,"props":868,"children":869},{"style":684},[870],{"type":539,"value":871},".",{"type":534,"tag":556,"props":873,"children":875},{"style":874},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[876],{"type":539,"value":877},"length",{"type":534,"tag":556,"props":879,"children":880},{"style":684},[881],{"type":539,"value":882},";\n",{"type":534,"tag":556,"props":884,"children":886},{"class":558,"line":885},8,[887,891,896,900,906],{"type":534,"tag":556,"props":888,"children":889},{"style":794},[890],{"type":539,"value":852},{"type":534,"tag":556,"props":892,"children":893},{"style":712},[894],{"type":539,"value":895}," i",{"type":534,"tag":556,"props":897,"children":898},{"style":684},[899],{"type":539,"value":808},{"type":534,"tag":556,"props":901,"children":903},{"style":902},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[904],{"type":539,"value":905}," 0",{"type":534,"tag":556,"props":907,"children":908},{"style":684},[909],{"type":539,"value":882},{"type":534,"tag":556,"props":911,"children":913},{"class":558,"line":912},9,[914,918,923,927,931,936,941],{"type":534,"tag":556,"props":915,"children":916},{"style":794},[917],{"type":539,"value":852},{"type":534,"tag":556,"props":919,"children":920},{"style":712},[921],{"type":539,"value":922}," j",{"type":534,"tag":556,"props":924,"children":925},{"style":684},[926],{"type":539,"value":808},{"type":534,"tag":556,"props":928,"children":929},{"style":712},[930],{"type":539,"value":857},{"type":534,"tag":556,"props":932,"children":933},{"style":794},[934],{"type":539,"value":935}," -",{"type":534,"tag":556,"props":937,"children":938},{"style":902},[939],{"type":539,"value":940}," 1",{"type":534,"tag":556,"props":942,"children":943},{"style":684},[944],{"type":539,"value":882},{"type":534,"tag":556,"props":946,"children":948},{"class":558,"line":947},10,[949,954,958,963,968,972,976],{"type":534,"tag":556,"props":950,"children":951},{"style":690},[952],{"type":539,"value":953},"  while",{"type":534,"tag":556,"props":955,"children":956},{"style":684},[957],{"type":539,"value":818},{"type":534,"tag":556,"props":959,"children":960},{"style":712},[961],{"type":539,"value":962},"i",{"type":534,"tag":556,"props":964,"children":965},{"style":684},[966],{"type":539,"value":967}," \u003C=",{"type":534,"tag":556,"props":969,"children":970},{"style":712},[971],{"type":539,"value":922},{"type":534,"tag":556,"props":973,"children":974},{"style":684},[975],{"type":539,"value":838},{"type":534,"tag":556,"props":977,"children":978},{"style":684},[979],{"type":539,"value":843},{"type":534,"tag":556,"props":981,"children":983},{"class":558,"line":982},11,[984,989,994,998,1002,1006,1011,1015,1019,1024,1028],{"type":534,"tag":556,"props":985,"children":986},{"style":794},[987],{"type":539,"value":988},"    let",{"type":534,"tag":556,"props":990,"children":991},{"style":712},[992],{"type":539,"value":993}," middleIndex",{"type":534,"tag":556,"props":995,"children":996},{"style":684},[997],{"type":539,"value":808},{"type":534,"tag":556,"props":999,"children":1000},{"style":684},[1001],{"type":539,"value":818},{"type":534,"tag":556,"props":1003,"children":1004},{"style":712},[1005],{"type":539,"value":962},{"type":534,"tag":556,"props":1007,"children":1008},{"style":794},[1009],{"type":539,"value":1010}," +",{"type":534,"tag":556,"props":1012,"children":1013},{"style":712},[1014],{"type":539,"value":922},{"type":534,"tag":556,"props":1016,"children":1017},{"style":684},[1018],{"type":539,"value":838},{"type":534,"tag":556,"props":1020,"children":1021},{"style":794},[1022],{"type":539,"value":1023}," >>",{"type":534,"tag":556,"props":1025,"children":1026},{"style":902},[1027],{"type":539,"value":940},{"type":534,"tag":556,"props":1029,"children":1030},{"style":684},[1031],{"type":539,"value":882},{"type":534,"tag":556,"props":1033,"children":1035},{"class":558,"line":1034},12,[1036,1040,1045,1049,1053,1058,1063],{"type":534,"tag":556,"props":1037,"children":1038},{"style":794},[1039],{"type":539,"value":988},{"type":534,"tag":556,"props":1041,"children":1042},{"style":712},[1043],{"type":539,"value":1044}," middle",{"type":534,"tag":556,"props":1046,"children":1047},{"style":684},[1048],{"type":539,"value":808},{"type":534,"tag":556,"props":1050,"children":1051},{"style":712},[1052],{"type":539,"value":866},{"type":534,"tag":556,"props":1054,"children":1055},{"style":684},[1056],{"type":539,"value":1057},"[",{"type":534,"tag":556,"props":1059,"children":1060},{"style":712},[1061],{"type":539,"value":1062},"middleIndex",{"type":534,"tag":556,"props":1064,"children":1065},{"style":684},[1066],{"type":539,"value":1067},"];\n",{"type":534,"tag":556,"props":1069,"children":1071},{"class":558,"line":1070},13,[1072,1077,1081,1086,1091,1095,1099,1104,1108],{"type":534,"tag":556,"props":1073,"children":1074},{"style":690},[1075],{"type":539,"value":1076},"    if",{"type":534,"tag":556,"props":1078,"children":1079},{"style":684},[1080],{"type":539,"value":818},{"type":534,"tag":556,"props":1082,"children":1083},{"style":712},[1084],{"type":539,"value":1085},"middle",{"type":534,"tag":556,"props":1087,"children":1088},{"style":794},[1089],{"type":539,"value":1090}," ===",{"type":534,"tag":556,"props":1092,"children":1093},{"style":712},[1094],{"type":539,"value":833},{"type":534,"tag":556,"props":1096,"children":1097},{"style":684},[1098],{"type":539,"value":838},{"type":534,"tag":556,"props":1100,"children":1101},{"style":690},[1102],{"type":539,"value":1103}," return",{"type":534,"tag":556,"props":1105,"children":1106},{"style":712},[1107],{"type":539,"value":993},{"type":534,"tag":556,"props":1109,"children":1110},{"style":684},[1111],{"type":539,"value":882},{"type":534,"tag":556,"props":1113,"children":1115},{"class":558,"line":1114},14,[1116,1120,1124,1128,1133,1137,1141],{"type":534,"tag":556,"props":1117,"children":1118},{"style":690},[1119],{"type":539,"value":1076},{"type":534,"tag":556,"props":1121,"children":1122},{"style":684},[1123],{"type":539,"value":818},{"type":534,"tag":556,"props":1125,"children":1126},{"style":712},[1127],{"type":539,"value":1085},{"type":534,"tag":556,"props":1129,"children":1130},{"style":684},[1131],{"type":539,"value":1132}," \u003C",{"type":534,"tag":556,"props":1134,"children":1135},{"style":712},[1136],{"type":539,"value":833},{"type":534,"tag":556,"props":1138,"children":1139},{"style":684},[1140],{"type":539,"value":838},{"type":534,"tag":556,"props":1142,"children":1143},{"style":684},[1144],{"type":539,"value":843},{"type":534,"tag":556,"props":1146,"children":1148},{"class":558,"line":1147},15,[1149,1154,1158,1162,1166,1170],{"type":534,"tag":556,"props":1150,"children":1151},{"style":712},[1152],{"type":539,"value":1153},"      i",{"type":534,"tag":556,"props":1155,"children":1156},{"style":684},[1157],{"type":539,"value":808},{"type":534,"tag":556,"props":1159,"children":1160},{"style":712},[1161],{"type":539,"value":993},{"type":534,"tag":556,"props":1163,"children":1164},{"style":794},[1165],{"type":539,"value":1010},{"type":534,"tag":556,"props":1167,"children":1168},{"style":902},[1169],{"type":539,"value":940},{"type":534,"tag":556,"props":1171,"children":1172},{"style":684},[1173],{"type":539,"value":882},{"type":534,"tag":556,"props":1175,"children":1177},{"class":558,"line":1176},16,[1178,1183,1188],{"type":534,"tag":556,"props":1179,"children":1180},{"style":684},[1181],{"type":539,"value":1182},"    }",{"type":534,"tag":556,"props":1184,"children":1185},{"style":690},[1186],{"type":539,"value":1187}," else",{"type":534,"tag":556,"props":1189,"children":1190},{"style":684},[1191],{"type":539,"value":843},{"type":534,"tag":556,"props":1193,"children":1195},{"class":558,"line":1194},17,[1196,1201,1205,1209,1213,1217],{"type":534,"tag":556,"props":1197,"children":1198},{"style":712},[1199],{"type":539,"value":1200},"      j",{"type":534,"tag":556,"props":1202,"children":1203},{"style":684},[1204],{"type":539,"value":808},{"type":534,"tag":556,"props":1206,"children":1207},{"style":712},[1208],{"type":539,"value":993},{"type":534,"tag":556,"props":1210,"children":1211},{"style":794},[1212],{"type":539,"value":935},{"type":534,"tag":556,"props":1214,"children":1215},{"style":902},[1216],{"type":539,"value":940},{"type":534,"tag":556,"props":1218,"children":1219},{"style":684},[1220],{"type":539,"value":882},{"type":534,"tag":556,"props":1222,"children":1224},{"class":558,"line":1223},18,[1225],{"type":534,"tag":556,"props":1226,"children":1227},{"style":684},[1228],{"type":539,"value":1229},"    }\n",{"type":534,"tag":556,"props":1231,"children":1233},{"class":558,"line":1232},19,[1234],{"type":534,"tag":556,"props":1235,"children":1236},{"style":684},[1237],{"type":539,"value":1238},"  }\n",{"type":534,"tag":556,"props":1240,"children":1242},{"class":558,"line":1241},20,[1243,1248,1252,1257],{"type":534,"tag":556,"props":1244,"children":1245},{"style":690},[1246],{"type":539,"value":1247},"  return",{"type":534,"tag":556,"props":1249,"children":1250},{"style":794},[1251],{"type":539,"value":935},{"type":534,"tag":556,"props":1253,"children":1254},{"style":902},[1255],{"type":539,"value":1256},"1",{"type":534,"tag":556,"props":1258,"children":1259},{"style":684},[1260],{"type":539,"value":882},{"type":534,"tag":556,"props":1262,"children":1264},{"class":558,"line":1263},21,[1265],{"type":534,"tag":556,"props":1266,"children":1267},{"style":684},[1268],{"type":539,"value":1269},"};\n",{"type":534,"tag":1271,"props":1272,"children":1273},"style",{},[1274],{"type":539,"value":1275},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":781,"depth":781,"links":1277},[1278,1279],{"id":648,"depth":568,"text":648},{"id":653,"depth":568,"text":653},"markdown","content:1.algorithm:3.leetcode:3.major:704.binary-search.md","content","1.algorithm/3.leetcode/3.major/704.binary-search.md","md",[1286,1288],{"_path":249,"title":248,"description":1287},"给你一个只包含三种字符的字符串，支持的字符类型分别是 '('、')' 和 '*'。请你检验这个字符串是否为有效字符串，如果是有效字符串返回 true 。",{"_path":255,"title":254,"description":1289},"给你一个整数数组 nums，请你将该数组升序排列。",1714096145628]