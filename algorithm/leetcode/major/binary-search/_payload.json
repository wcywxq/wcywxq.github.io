[{"data":1,"prerenderedAt":1309},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-search":543,"/algorithm/leetcode/major/binary-search-surround":1304},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":252,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":251,"description":547,"url":548,"body":549,"_type":1299,"_id":1300,"_source":1301,"_file":1302,"_extension":1303},"major",false,"","给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。","https://leetcode.cn/problems/binary-search",{"type":550,"children":551,"toc":1295},"root",[552,559,564,603,608,639,644,664,670,675,1289],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"示例 1:",{"type":553,"tag":565,"props":566,"children":569},"pre",{"className":567,"code":568,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入: nums = [-1,0,3,5,9,12], target = 9\n输出: 4\n解释: 9 出现在 nums 中并且下标为 4\n",[570],{"type":553,"tag":571,"props":572,"children":573},"code",{"__ignoreMap":546},[574,585,594],{"type":553,"tag":575,"props":576,"children":579},"span",{"class":577,"line":578},"line",1,[580],{"type":553,"tag":575,"props":581,"children":582},{},[583],{"type":558,"value":584},"输入: nums = [-1,0,3,5,9,12], target = 9\n",{"type":553,"tag":575,"props":586,"children":588},{"class":577,"line":587},2,[589],{"type":553,"tag":575,"props":590,"children":591},{},[592],{"type":558,"value":593},"输出: 4\n",{"type":553,"tag":575,"props":595,"children":597},{"class":577,"line":596},3,[598],{"type":553,"tag":575,"props":599,"children":600},{},[601],{"type":558,"value":602},"解释: 9 出现在 nums 中并且下标为 4\n",{"type":553,"tag":554,"props":604,"children":605},{},[606],{"type":558,"value":607},"示例 2:",{"type":553,"tag":565,"props":609,"children":611},{"className":567,"code":610,"language":558,"meta":546,"style":546},"输入: nums = [-1,0,3,5,9,12], target = 2\n输出: -1\n解释: 2 不存在 nums 中因此返回 -1\n",[612],{"type":553,"tag":571,"props":613,"children":614},{"__ignoreMap":546},[615,623,631],{"type":553,"tag":575,"props":616,"children":617},{"class":577,"line":578},[618],{"type":553,"tag":575,"props":619,"children":620},{},[621],{"type":558,"value":622},"输入: nums = [-1,0,3,5,9,12], target = 2\n",{"type":553,"tag":575,"props":624,"children":625},{"class":577,"line":587},[626],{"type":553,"tag":575,"props":627,"children":628},{},[629],{"type":558,"value":630},"输出: -1\n",{"type":553,"tag":575,"props":632,"children":633},{"class":577,"line":596},[634],{"type":553,"tag":575,"props":635,"children":636},{},[637],{"type":558,"value":638},"解释: 2 不存在 nums 中因此返回 -1\n",{"type":553,"tag":554,"props":640,"children":641},{},[642],{"type":558,"value":643},"提示：",{"type":553,"tag":645,"props":646,"children":647},"ul",{},[648,654,659],{"type":553,"tag":649,"props":650,"children":651},"li",{},[652],{"type":558,"value":653},"你可以假设 nums 中的所有元素是不重复的。",{"type":553,"tag":649,"props":655,"children":656},{},[657],{"type":558,"value":658},"n 将在 [1, 10000] 之间。",{"type":553,"tag":649,"props":660,"children":661},{},[662],{"type":558,"value":663},"nums 的每个元素都将在 [-9999, 9999] 之间。",{"type":553,"tag":665,"props":666,"children":668},"h2",{"id":667},"解题思路",[669],{"type":558,"value":667},{"type":553,"tag":665,"props":671,"children":673},{"id":672},"实现",[674],{"type":558,"value":672},{"type":553,"tag":565,"props":676,"children":680},{"className":677,"code":678,"language":679,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar search = function (nums, target) {\n  let length = nums.length;\n  let i = 0;\n  let j = length - 1;\n  while (i \u003C= j) {\n    let middleIndex = (i + j) >> 1;\n    let middle = nums[middleIndex];\n    if (middle === target) return middleIndex;\n    if (middle \u003C target) {\n      i = middleIndex + 1;\n    } else {\n      j = middleIndex - 1;\n    }\n  }\n  return -1;\n};\n","js",[681],{"type":553,"tag":571,"props":682,"children":683},{"__ignoreMap":546},[684,693,735,768,798,807,863,902,929,964,999,1051,1087,1131,1164,1193,1211,1240,1249,1258,1280],{"type":553,"tag":575,"props":685,"children":686},{"class":577,"line":578},[687],{"type":553,"tag":575,"props":688,"children":690},{"style":689},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[691],{"type":558,"value":692},"/**\n",{"type":553,"tag":575,"props":694,"children":695},{"class":577,"line":587},[696,701,707,713,718,724,729],{"type":553,"tag":575,"props":697,"children":698},{"style":689},[699],{"type":558,"value":700}," * ",{"type":553,"tag":575,"props":702,"children":704},{"style":703},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[705],{"type":558,"value":706},"@",{"type":553,"tag":575,"props":708,"children":710},{"style":709},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[711],{"type":558,"value":712},"param",{"type":553,"tag":575,"props":714,"children":715},{"style":703},[716],{"type":558,"value":717}," {",{"type":553,"tag":575,"props":719,"children":721},{"style":720},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[722],{"type":558,"value":723},"number[]",{"type":553,"tag":575,"props":725,"children":726},{"style":703},[727],{"type":558,"value":728},"}",{"type":553,"tag":575,"props":730,"children":732},{"style":731},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[733],{"type":558,"value":734}," nums\n",{"type":553,"tag":575,"props":736,"children":737},{"class":577,"line":596},[738,742,746,750,754,759,763],{"type":553,"tag":575,"props":739,"children":740},{"style":689},[741],{"type":558,"value":700},{"type":553,"tag":575,"props":743,"children":744},{"style":703},[745],{"type":558,"value":706},{"type":553,"tag":575,"props":747,"children":748},{"style":709},[749],{"type":558,"value":712},{"type":553,"tag":575,"props":751,"children":752},{"style":703},[753],{"type":558,"value":717},{"type":553,"tag":575,"props":755,"children":756},{"style":720},[757],{"type":558,"value":758},"number",{"type":553,"tag":575,"props":760,"children":761},{"style":703},[762],{"type":558,"value":728},{"type":553,"tag":575,"props":764,"children":765},{"style":731},[766],{"type":558,"value":767}," target\n",{"type":553,"tag":575,"props":769,"children":771},{"class":577,"line":770},4,[772,776,780,785,789,793],{"type":553,"tag":575,"props":773,"children":774},{"style":689},[775],{"type":558,"value":700},{"type":553,"tag":575,"props":777,"children":778},{"style":703},[779],{"type":558,"value":706},{"type":553,"tag":575,"props":781,"children":782},{"style":709},[783],{"type":558,"value":784},"return",{"type":553,"tag":575,"props":786,"children":787},{"style":703},[788],{"type":558,"value":717},{"type":553,"tag":575,"props":790,"children":791},{"style":720},[792],{"type":558,"value":758},{"type":553,"tag":575,"props":794,"children":795},{"style":703},[796],{"type":558,"value":797},"}\n",{"type":553,"tag":575,"props":799,"children":801},{"class":577,"line":800},5,[802],{"type":553,"tag":575,"props":803,"children":804},{"style":689},[805],{"type":558,"value":806}," */\n",{"type":553,"tag":575,"props":808,"children":810},{"class":577,"line":809},6,[811,817,823,828,833,838,843,848,853,858],{"type":553,"tag":575,"props":812,"children":814},{"style":813},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[815],{"type":558,"value":816},"var",{"type":553,"tag":575,"props":818,"children":820},{"style":819},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[821],{"type":558,"value":822}," search",{"type":553,"tag":575,"props":824,"children":825},{"style":703},[826],{"type":558,"value":827}," =",{"type":553,"tag":575,"props":829,"children":830},{"style":813},[831],{"type":558,"value":832}," function",{"type":553,"tag":575,"props":834,"children":835},{"style":703},[836],{"type":558,"value":837}," (",{"type":553,"tag":575,"props":839,"children":840},{"style":731},[841],{"type":558,"value":842},"nums",{"type":553,"tag":575,"props":844,"children":845},{"style":703},[846],{"type":558,"value":847},",",{"type":553,"tag":575,"props":849,"children":850},{"style":731},[851],{"type":558,"value":852}," target",{"type":553,"tag":575,"props":854,"children":855},{"style":703},[856],{"type":558,"value":857},")",{"type":553,"tag":575,"props":859,"children":860},{"style":703},[861],{"type":558,"value":862}," {\n",{"type":553,"tag":575,"props":864,"children":866},{"class":577,"line":865},7,[867,872,877,881,886,891,897],{"type":553,"tag":575,"props":868,"children":869},{"style":813},[870],{"type":558,"value":871},"  let",{"type":553,"tag":575,"props":873,"children":874},{"style":731},[875],{"type":558,"value":876}," length",{"type":553,"tag":575,"props":878,"children":879},{"style":703},[880],{"type":558,"value":827},{"type":553,"tag":575,"props":882,"children":883},{"style":731},[884],{"type":558,"value":885}," nums",{"type":553,"tag":575,"props":887,"children":888},{"style":703},[889],{"type":558,"value":890},".",{"type":553,"tag":575,"props":892,"children":894},{"style":893},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[895],{"type":558,"value":896},"length",{"type":553,"tag":575,"props":898,"children":899},{"style":703},[900],{"type":558,"value":901},";\n",{"type":553,"tag":575,"props":903,"children":905},{"class":577,"line":904},8,[906,910,915,919,925],{"type":553,"tag":575,"props":907,"children":908},{"style":813},[909],{"type":558,"value":871},{"type":553,"tag":575,"props":911,"children":912},{"style":731},[913],{"type":558,"value":914}," i",{"type":553,"tag":575,"props":916,"children":917},{"style":703},[918],{"type":558,"value":827},{"type":553,"tag":575,"props":920,"children":922},{"style":921},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[923],{"type":558,"value":924}," 0",{"type":553,"tag":575,"props":926,"children":927},{"style":703},[928],{"type":558,"value":901},{"type":553,"tag":575,"props":930,"children":932},{"class":577,"line":931},9,[933,937,942,946,950,955,960],{"type":553,"tag":575,"props":934,"children":935},{"style":813},[936],{"type":558,"value":871},{"type":553,"tag":575,"props":938,"children":939},{"style":731},[940],{"type":558,"value":941}," j",{"type":553,"tag":575,"props":943,"children":944},{"style":703},[945],{"type":558,"value":827},{"type":553,"tag":575,"props":947,"children":948},{"style":731},[949],{"type":558,"value":876},{"type":553,"tag":575,"props":951,"children":952},{"style":813},[953],{"type":558,"value":954}," -",{"type":553,"tag":575,"props":956,"children":957},{"style":921},[958],{"type":558,"value":959}," 1",{"type":553,"tag":575,"props":961,"children":962},{"style":703},[963],{"type":558,"value":901},{"type":553,"tag":575,"props":965,"children":967},{"class":577,"line":966},10,[968,973,977,982,987,991,995],{"type":553,"tag":575,"props":969,"children":970},{"style":709},[971],{"type":558,"value":972},"  while",{"type":553,"tag":575,"props":974,"children":975},{"style":703},[976],{"type":558,"value":837},{"type":553,"tag":575,"props":978,"children":979},{"style":731},[980],{"type":558,"value":981},"i",{"type":553,"tag":575,"props":983,"children":984},{"style":703},[985],{"type":558,"value":986}," \u003C=",{"type":553,"tag":575,"props":988,"children":989},{"style":731},[990],{"type":558,"value":941},{"type":553,"tag":575,"props":992,"children":993},{"style":703},[994],{"type":558,"value":857},{"type":553,"tag":575,"props":996,"children":997},{"style":703},[998],{"type":558,"value":862},{"type":553,"tag":575,"props":1000,"children":1002},{"class":577,"line":1001},11,[1003,1008,1013,1017,1021,1025,1030,1034,1038,1043,1047],{"type":553,"tag":575,"props":1004,"children":1005},{"style":813},[1006],{"type":558,"value":1007},"    let",{"type":553,"tag":575,"props":1009,"children":1010},{"style":731},[1011],{"type":558,"value":1012}," middleIndex",{"type":553,"tag":575,"props":1014,"children":1015},{"style":703},[1016],{"type":558,"value":827},{"type":553,"tag":575,"props":1018,"children":1019},{"style":703},[1020],{"type":558,"value":837},{"type":553,"tag":575,"props":1022,"children":1023},{"style":731},[1024],{"type":558,"value":981},{"type":553,"tag":575,"props":1026,"children":1027},{"style":813},[1028],{"type":558,"value":1029}," +",{"type":553,"tag":575,"props":1031,"children":1032},{"style":731},[1033],{"type":558,"value":941},{"type":553,"tag":575,"props":1035,"children":1036},{"style":703},[1037],{"type":558,"value":857},{"type":553,"tag":575,"props":1039,"children":1040},{"style":813},[1041],{"type":558,"value":1042}," >>",{"type":553,"tag":575,"props":1044,"children":1045},{"style":921},[1046],{"type":558,"value":959},{"type":553,"tag":575,"props":1048,"children":1049},{"style":703},[1050],{"type":558,"value":901},{"type":553,"tag":575,"props":1052,"children":1054},{"class":577,"line":1053},12,[1055,1059,1064,1068,1072,1077,1082],{"type":553,"tag":575,"props":1056,"children":1057},{"style":813},[1058],{"type":558,"value":1007},{"type":553,"tag":575,"props":1060,"children":1061},{"style":731},[1062],{"type":558,"value":1063}," middle",{"type":553,"tag":575,"props":1065,"children":1066},{"style":703},[1067],{"type":558,"value":827},{"type":553,"tag":575,"props":1069,"children":1070},{"style":731},[1071],{"type":558,"value":885},{"type":553,"tag":575,"props":1073,"children":1074},{"style":703},[1075],{"type":558,"value":1076},"[",{"type":553,"tag":575,"props":1078,"children":1079},{"style":731},[1080],{"type":558,"value":1081},"middleIndex",{"type":553,"tag":575,"props":1083,"children":1084},{"style":703},[1085],{"type":558,"value":1086},"];\n",{"type":553,"tag":575,"props":1088,"children":1090},{"class":577,"line":1089},13,[1091,1096,1100,1105,1110,1114,1118,1123,1127],{"type":553,"tag":575,"props":1092,"children":1093},{"style":709},[1094],{"type":558,"value":1095},"    if",{"type":553,"tag":575,"props":1097,"children":1098},{"style":703},[1099],{"type":558,"value":837},{"type":553,"tag":575,"props":1101,"children":1102},{"style":731},[1103],{"type":558,"value":1104},"middle",{"type":553,"tag":575,"props":1106,"children":1107},{"style":813},[1108],{"type":558,"value":1109}," ===",{"type":553,"tag":575,"props":1111,"children":1112},{"style":731},[1113],{"type":558,"value":852},{"type":553,"tag":575,"props":1115,"children":1116},{"style":703},[1117],{"type":558,"value":857},{"type":553,"tag":575,"props":1119,"children":1120},{"style":709},[1121],{"type":558,"value":1122}," return",{"type":553,"tag":575,"props":1124,"children":1125},{"style":731},[1126],{"type":558,"value":1012},{"type":553,"tag":575,"props":1128,"children":1129},{"style":703},[1130],{"type":558,"value":901},{"type":553,"tag":575,"props":1132,"children":1134},{"class":577,"line":1133},14,[1135,1139,1143,1147,1152,1156,1160],{"type":553,"tag":575,"props":1136,"children":1137},{"style":709},[1138],{"type":558,"value":1095},{"type":553,"tag":575,"props":1140,"children":1141},{"style":703},[1142],{"type":558,"value":837},{"type":553,"tag":575,"props":1144,"children":1145},{"style":731},[1146],{"type":558,"value":1104},{"type":553,"tag":575,"props":1148,"children":1149},{"style":703},[1150],{"type":558,"value":1151}," \u003C",{"type":553,"tag":575,"props":1153,"children":1154},{"style":731},[1155],{"type":558,"value":852},{"type":553,"tag":575,"props":1157,"children":1158},{"style":703},[1159],{"type":558,"value":857},{"type":553,"tag":575,"props":1161,"children":1162},{"style":703},[1163],{"type":558,"value":862},{"type":553,"tag":575,"props":1165,"children":1167},{"class":577,"line":1166},15,[1168,1173,1177,1181,1185,1189],{"type":553,"tag":575,"props":1169,"children":1170},{"style":731},[1171],{"type":558,"value":1172},"      i",{"type":553,"tag":575,"props":1174,"children":1175},{"style":703},[1176],{"type":558,"value":827},{"type":553,"tag":575,"props":1178,"children":1179},{"style":731},[1180],{"type":558,"value":1012},{"type":553,"tag":575,"props":1182,"children":1183},{"style":813},[1184],{"type":558,"value":1029},{"type":553,"tag":575,"props":1186,"children":1187},{"style":921},[1188],{"type":558,"value":959},{"type":553,"tag":575,"props":1190,"children":1191},{"style":703},[1192],{"type":558,"value":901},{"type":553,"tag":575,"props":1194,"children":1196},{"class":577,"line":1195},16,[1197,1202,1207],{"type":553,"tag":575,"props":1198,"children":1199},{"style":703},[1200],{"type":558,"value":1201},"    }",{"type":553,"tag":575,"props":1203,"children":1204},{"style":709},[1205],{"type":558,"value":1206}," else",{"type":553,"tag":575,"props":1208,"children":1209},{"style":703},[1210],{"type":558,"value":862},{"type":553,"tag":575,"props":1212,"children":1214},{"class":577,"line":1213},17,[1215,1220,1224,1228,1232,1236],{"type":553,"tag":575,"props":1216,"children":1217},{"style":731},[1218],{"type":558,"value":1219},"      j",{"type":553,"tag":575,"props":1221,"children":1222},{"style":703},[1223],{"type":558,"value":827},{"type":553,"tag":575,"props":1225,"children":1226},{"style":731},[1227],{"type":558,"value":1012},{"type":553,"tag":575,"props":1229,"children":1230},{"style":813},[1231],{"type":558,"value":954},{"type":553,"tag":575,"props":1233,"children":1234},{"style":921},[1235],{"type":558,"value":959},{"type":553,"tag":575,"props":1237,"children":1238},{"style":703},[1239],{"type":558,"value":901},{"type":553,"tag":575,"props":1241,"children":1243},{"class":577,"line":1242},18,[1244],{"type":553,"tag":575,"props":1245,"children":1246},{"style":703},[1247],{"type":558,"value":1248},"    }\n",{"type":553,"tag":575,"props":1250,"children":1252},{"class":577,"line":1251},19,[1253],{"type":553,"tag":575,"props":1254,"children":1255},{"style":703},[1256],{"type":558,"value":1257},"  }\n",{"type":553,"tag":575,"props":1259,"children":1261},{"class":577,"line":1260},20,[1262,1267,1271,1276],{"type":553,"tag":575,"props":1263,"children":1264},{"style":709},[1265],{"type":558,"value":1266},"  return",{"type":553,"tag":575,"props":1268,"children":1269},{"style":813},[1270],{"type":558,"value":954},{"type":553,"tag":575,"props":1272,"children":1273},{"style":921},[1274],{"type":558,"value":1275},"1",{"type":553,"tag":575,"props":1277,"children":1278},{"style":703},[1279],{"type":558,"value":901},{"type":553,"tag":575,"props":1281,"children":1283},{"class":577,"line":1282},21,[1284],{"type":553,"tag":575,"props":1285,"children":1286},{"style":703},[1287],{"type":558,"value":1288},"};\n",{"type":553,"tag":1290,"props":1291,"children":1292},"style",{},[1293],{"type":558,"value":1294},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":800,"depth":800,"links":1296},[1297,1298],{"id":667,"depth":587,"text":667},{"id":672,"depth":587,"text":672},"markdown","content:1.algorithm:3.leetcode:3.major:704.binary-search.md","content","1.algorithm/3.leetcode/3.major/704.binary-search.md","md",[1305,1307],{"_path":249,"title":248,"description":1306},"给你一个只包含三种字符的字符串，支持的字符类型分别是 '('、')' 和 '*'。请你检验这个字符串是否为有效字符串，如果是有效字符串返回 true 。",{"_path":255,"title":254,"description":1308},"给你一个整数数组 nums，请你将该数组升序排列。",1714099680406]