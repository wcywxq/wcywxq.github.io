[{"data":1,"prerenderedAt":1266},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-search":500,"/algorithm/leetcode/major/binary-search-surround":1261},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":252,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":251,"description":504,"url":505,"body":506,"_type":1256,"_id":1257,"_source":1258,"_file":1259,"_extension":1260},"major",false,"","给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。","https://leetcode.cn/problems/binary-search",{"type":507,"children":508,"toc":1252},"root",[509,516,521,560,565,596,601,621,627,632,1246],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"示例 1:",{"type":510,"tag":522,"props":523,"children":526},"pre",{"className":524,"code":525,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入: nums = [-1,0,3,5,9,12], target = 9\n输出: 4\n解释: 9 出现在 nums 中并且下标为 4\n",[527],{"type":510,"tag":528,"props":529,"children":530},"code",{"__ignoreMap":503},[531,542,551],{"type":510,"tag":532,"props":533,"children":536},"span",{"class":534,"line":535},"line",1,[537],{"type":510,"tag":532,"props":538,"children":539},{},[540],{"type":515,"value":541},"输入: nums = [-1,0,3,5,9,12], target = 9\n",{"type":510,"tag":532,"props":543,"children":545},{"class":534,"line":544},2,[546],{"type":510,"tag":532,"props":547,"children":548},{},[549],{"type":515,"value":550},"输出: 4\n",{"type":510,"tag":532,"props":552,"children":554},{"class":534,"line":553},3,[555],{"type":510,"tag":532,"props":556,"children":557},{},[558],{"type":515,"value":559},"解释: 9 出现在 nums 中并且下标为 4\n",{"type":510,"tag":511,"props":561,"children":562},{},[563],{"type":515,"value":564},"示例 2:",{"type":510,"tag":522,"props":566,"children":568},{"className":524,"code":567,"language":515,"meta":503,"style":503},"输入: nums = [-1,0,3,5,9,12], target = 2\n输出: -1\n解释: 2 不存在 nums 中因此返回 -1\n",[569],{"type":510,"tag":528,"props":570,"children":571},{"__ignoreMap":503},[572,580,588],{"type":510,"tag":532,"props":573,"children":574},{"class":534,"line":535},[575],{"type":510,"tag":532,"props":576,"children":577},{},[578],{"type":515,"value":579},"输入: nums = [-1,0,3,5,9,12], target = 2\n",{"type":510,"tag":532,"props":581,"children":582},{"class":534,"line":544},[583],{"type":510,"tag":532,"props":584,"children":585},{},[586],{"type":515,"value":587},"输出: -1\n",{"type":510,"tag":532,"props":589,"children":590},{"class":534,"line":553},[591],{"type":510,"tag":532,"props":592,"children":593},{},[594],{"type":515,"value":595},"解释: 2 不存在 nums 中因此返回 -1\n",{"type":510,"tag":511,"props":597,"children":598},{},[599],{"type":515,"value":600},"提示：",{"type":510,"tag":602,"props":603,"children":604},"ul",{},[605,611,616],{"type":510,"tag":606,"props":607,"children":608},"li",{},[609],{"type":515,"value":610},"你可以假设 nums 中的所有元素是不重复的。",{"type":510,"tag":606,"props":612,"children":613},{},[614],{"type":515,"value":615},"n 将在 [1, 10000] 之间。",{"type":510,"tag":606,"props":617,"children":618},{},[619],{"type":515,"value":620},"nums 的每个元素都将在 [-9999, 9999] 之间。",{"type":510,"tag":622,"props":623,"children":625},"h2",{"id":624},"解题思路",[626],{"type":515,"value":624},{"type":510,"tag":622,"props":628,"children":630},{"id":629},"实现",[631],{"type":515,"value":629},{"type":510,"tag":522,"props":633,"children":637},{"className":634,"code":635,"language":636,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar search = function (nums, target) {\n  let length = nums.length;\n  let i = 0;\n  let j = length - 1;\n  while (i \u003C= j) {\n    let middleIndex = (i + j) >> 1;\n    let middle = nums[middleIndex];\n    if (middle === target) return middleIndex;\n    if (middle \u003C target) {\n      i = middleIndex + 1;\n    } else {\n      j = middleIndex - 1;\n    }\n  }\n  return -1;\n};\n","js",[638],{"type":510,"tag":528,"props":639,"children":640},{"__ignoreMap":503},[641,650,692,725,755,764,820,859,886,921,956,1008,1044,1088,1121,1150,1168,1197,1206,1215,1237],{"type":510,"tag":532,"props":642,"children":643},{"class":534,"line":535},[644],{"type":510,"tag":532,"props":645,"children":647},{"style":646},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[648],{"type":515,"value":649},"/**\n",{"type":510,"tag":532,"props":651,"children":652},{"class":534,"line":544},[653,658,664,670,675,681,686],{"type":510,"tag":532,"props":654,"children":655},{"style":646},[656],{"type":515,"value":657}," * ",{"type":510,"tag":532,"props":659,"children":661},{"style":660},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[662],{"type":515,"value":663},"@",{"type":510,"tag":532,"props":665,"children":667},{"style":666},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[668],{"type":515,"value":669},"param",{"type":510,"tag":532,"props":671,"children":672},{"style":660},[673],{"type":515,"value":674}," {",{"type":510,"tag":532,"props":676,"children":678},{"style":677},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[679],{"type":515,"value":680},"number[]",{"type":510,"tag":532,"props":682,"children":683},{"style":660},[684],{"type":515,"value":685},"}",{"type":510,"tag":532,"props":687,"children":689},{"style":688},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[690],{"type":515,"value":691}," nums\n",{"type":510,"tag":532,"props":693,"children":694},{"class":534,"line":553},[695,699,703,707,711,716,720],{"type":510,"tag":532,"props":696,"children":697},{"style":646},[698],{"type":515,"value":657},{"type":510,"tag":532,"props":700,"children":701},{"style":660},[702],{"type":515,"value":663},{"type":510,"tag":532,"props":704,"children":705},{"style":666},[706],{"type":515,"value":669},{"type":510,"tag":532,"props":708,"children":709},{"style":660},[710],{"type":515,"value":674},{"type":510,"tag":532,"props":712,"children":713},{"style":677},[714],{"type":515,"value":715},"number",{"type":510,"tag":532,"props":717,"children":718},{"style":660},[719],{"type":515,"value":685},{"type":510,"tag":532,"props":721,"children":722},{"style":688},[723],{"type":515,"value":724}," target\n",{"type":510,"tag":532,"props":726,"children":728},{"class":534,"line":727},4,[729,733,737,742,746,750],{"type":510,"tag":532,"props":730,"children":731},{"style":646},[732],{"type":515,"value":657},{"type":510,"tag":532,"props":734,"children":735},{"style":660},[736],{"type":515,"value":663},{"type":510,"tag":532,"props":738,"children":739},{"style":666},[740],{"type":515,"value":741},"return",{"type":510,"tag":532,"props":743,"children":744},{"style":660},[745],{"type":515,"value":674},{"type":510,"tag":532,"props":747,"children":748},{"style":677},[749],{"type":515,"value":715},{"type":510,"tag":532,"props":751,"children":752},{"style":660},[753],{"type":515,"value":754},"}\n",{"type":510,"tag":532,"props":756,"children":758},{"class":534,"line":757},5,[759],{"type":510,"tag":532,"props":760,"children":761},{"style":646},[762],{"type":515,"value":763}," */\n",{"type":510,"tag":532,"props":765,"children":767},{"class":534,"line":766},6,[768,774,780,785,790,795,800,805,810,815],{"type":510,"tag":532,"props":769,"children":771},{"style":770},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[772],{"type":515,"value":773},"var",{"type":510,"tag":532,"props":775,"children":777},{"style":776},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[778],{"type":515,"value":779}," search",{"type":510,"tag":532,"props":781,"children":782},{"style":660},[783],{"type":515,"value":784}," =",{"type":510,"tag":532,"props":786,"children":787},{"style":770},[788],{"type":515,"value":789}," function",{"type":510,"tag":532,"props":791,"children":792},{"style":660},[793],{"type":515,"value":794}," (",{"type":510,"tag":532,"props":796,"children":797},{"style":688},[798],{"type":515,"value":799},"nums",{"type":510,"tag":532,"props":801,"children":802},{"style":660},[803],{"type":515,"value":804},",",{"type":510,"tag":532,"props":806,"children":807},{"style":688},[808],{"type":515,"value":809}," target",{"type":510,"tag":532,"props":811,"children":812},{"style":660},[813],{"type":515,"value":814},")",{"type":510,"tag":532,"props":816,"children":817},{"style":660},[818],{"type":515,"value":819}," {\n",{"type":510,"tag":532,"props":821,"children":823},{"class":534,"line":822},7,[824,829,834,838,843,848,854],{"type":510,"tag":532,"props":825,"children":826},{"style":770},[827],{"type":515,"value":828},"  let",{"type":510,"tag":532,"props":830,"children":831},{"style":688},[832],{"type":515,"value":833}," length",{"type":510,"tag":532,"props":835,"children":836},{"style":660},[837],{"type":515,"value":784},{"type":510,"tag":532,"props":839,"children":840},{"style":688},[841],{"type":515,"value":842}," nums",{"type":510,"tag":532,"props":844,"children":845},{"style":660},[846],{"type":515,"value":847},".",{"type":510,"tag":532,"props":849,"children":851},{"style":850},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[852],{"type":515,"value":853},"length",{"type":510,"tag":532,"props":855,"children":856},{"style":660},[857],{"type":515,"value":858},";\n",{"type":510,"tag":532,"props":860,"children":862},{"class":534,"line":861},8,[863,867,872,876,882],{"type":510,"tag":532,"props":864,"children":865},{"style":770},[866],{"type":515,"value":828},{"type":510,"tag":532,"props":868,"children":869},{"style":688},[870],{"type":515,"value":871}," i",{"type":510,"tag":532,"props":873,"children":874},{"style":660},[875],{"type":515,"value":784},{"type":510,"tag":532,"props":877,"children":879},{"style":878},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[880],{"type":515,"value":881}," 0",{"type":510,"tag":532,"props":883,"children":884},{"style":660},[885],{"type":515,"value":858},{"type":510,"tag":532,"props":887,"children":889},{"class":534,"line":888},9,[890,894,899,903,907,912,917],{"type":510,"tag":532,"props":891,"children":892},{"style":770},[893],{"type":515,"value":828},{"type":510,"tag":532,"props":895,"children":896},{"style":688},[897],{"type":515,"value":898}," j",{"type":510,"tag":532,"props":900,"children":901},{"style":660},[902],{"type":515,"value":784},{"type":510,"tag":532,"props":904,"children":905},{"style":688},[906],{"type":515,"value":833},{"type":510,"tag":532,"props":908,"children":909},{"style":770},[910],{"type":515,"value":911}," -",{"type":510,"tag":532,"props":913,"children":914},{"style":878},[915],{"type":515,"value":916}," 1",{"type":510,"tag":532,"props":918,"children":919},{"style":660},[920],{"type":515,"value":858},{"type":510,"tag":532,"props":922,"children":924},{"class":534,"line":923},10,[925,930,934,939,944,948,952],{"type":510,"tag":532,"props":926,"children":927},{"style":666},[928],{"type":515,"value":929},"  while",{"type":510,"tag":532,"props":931,"children":932},{"style":660},[933],{"type":515,"value":794},{"type":510,"tag":532,"props":935,"children":936},{"style":688},[937],{"type":515,"value":938},"i",{"type":510,"tag":532,"props":940,"children":941},{"style":660},[942],{"type":515,"value":943}," \u003C=",{"type":510,"tag":532,"props":945,"children":946},{"style":688},[947],{"type":515,"value":898},{"type":510,"tag":532,"props":949,"children":950},{"style":660},[951],{"type":515,"value":814},{"type":510,"tag":532,"props":953,"children":954},{"style":660},[955],{"type":515,"value":819},{"type":510,"tag":532,"props":957,"children":959},{"class":534,"line":958},11,[960,965,970,974,978,982,987,991,995,1000,1004],{"type":510,"tag":532,"props":961,"children":962},{"style":770},[963],{"type":515,"value":964},"    let",{"type":510,"tag":532,"props":966,"children":967},{"style":688},[968],{"type":515,"value":969}," middleIndex",{"type":510,"tag":532,"props":971,"children":972},{"style":660},[973],{"type":515,"value":784},{"type":510,"tag":532,"props":975,"children":976},{"style":660},[977],{"type":515,"value":794},{"type":510,"tag":532,"props":979,"children":980},{"style":688},[981],{"type":515,"value":938},{"type":510,"tag":532,"props":983,"children":984},{"style":770},[985],{"type":515,"value":986}," +",{"type":510,"tag":532,"props":988,"children":989},{"style":688},[990],{"type":515,"value":898},{"type":510,"tag":532,"props":992,"children":993},{"style":660},[994],{"type":515,"value":814},{"type":510,"tag":532,"props":996,"children":997},{"style":770},[998],{"type":515,"value":999}," >>",{"type":510,"tag":532,"props":1001,"children":1002},{"style":878},[1003],{"type":515,"value":916},{"type":510,"tag":532,"props":1005,"children":1006},{"style":660},[1007],{"type":515,"value":858},{"type":510,"tag":532,"props":1009,"children":1011},{"class":534,"line":1010},12,[1012,1016,1021,1025,1029,1034,1039],{"type":510,"tag":532,"props":1013,"children":1014},{"style":770},[1015],{"type":515,"value":964},{"type":510,"tag":532,"props":1017,"children":1018},{"style":688},[1019],{"type":515,"value":1020}," middle",{"type":510,"tag":532,"props":1022,"children":1023},{"style":660},[1024],{"type":515,"value":784},{"type":510,"tag":532,"props":1026,"children":1027},{"style":688},[1028],{"type":515,"value":842},{"type":510,"tag":532,"props":1030,"children":1031},{"style":660},[1032],{"type":515,"value":1033},"[",{"type":510,"tag":532,"props":1035,"children":1036},{"style":688},[1037],{"type":515,"value":1038},"middleIndex",{"type":510,"tag":532,"props":1040,"children":1041},{"style":660},[1042],{"type":515,"value":1043},"];\n",{"type":510,"tag":532,"props":1045,"children":1047},{"class":534,"line":1046},13,[1048,1053,1057,1062,1067,1071,1075,1080,1084],{"type":510,"tag":532,"props":1049,"children":1050},{"style":666},[1051],{"type":515,"value":1052},"    if",{"type":510,"tag":532,"props":1054,"children":1055},{"style":660},[1056],{"type":515,"value":794},{"type":510,"tag":532,"props":1058,"children":1059},{"style":688},[1060],{"type":515,"value":1061},"middle",{"type":510,"tag":532,"props":1063,"children":1064},{"style":770},[1065],{"type":515,"value":1066}," ===",{"type":510,"tag":532,"props":1068,"children":1069},{"style":688},[1070],{"type":515,"value":809},{"type":510,"tag":532,"props":1072,"children":1073},{"style":660},[1074],{"type":515,"value":814},{"type":510,"tag":532,"props":1076,"children":1077},{"style":666},[1078],{"type":515,"value":1079}," return",{"type":510,"tag":532,"props":1081,"children":1082},{"style":688},[1083],{"type":515,"value":969},{"type":510,"tag":532,"props":1085,"children":1086},{"style":660},[1087],{"type":515,"value":858},{"type":510,"tag":532,"props":1089,"children":1091},{"class":534,"line":1090},14,[1092,1096,1100,1104,1109,1113,1117],{"type":510,"tag":532,"props":1093,"children":1094},{"style":666},[1095],{"type":515,"value":1052},{"type":510,"tag":532,"props":1097,"children":1098},{"style":660},[1099],{"type":515,"value":794},{"type":510,"tag":532,"props":1101,"children":1102},{"style":688},[1103],{"type":515,"value":1061},{"type":510,"tag":532,"props":1105,"children":1106},{"style":660},[1107],{"type":515,"value":1108}," \u003C",{"type":510,"tag":532,"props":1110,"children":1111},{"style":688},[1112],{"type":515,"value":809},{"type":510,"tag":532,"props":1114,"children":1115},{"style":660},[1116],{"type":515,"value":814},{"type":510,"tag":532,"props":1118,"children":1119},{"style":660},[1120],{"type":515,"value":819},{"type":510,"tag":532,"props":1122,"children":1124},{"class":534,"line":1123},15,[1125,1130,1134,1138,1142,1146],{"type":510,"tag":532,"props":1126,"children":1127},{"style":688},[1128],{"type":515,"value":1129},"      i",{"type":510,"tag":532,"props":1131,"children":1132},{"style":660},[1133],{"type":515,"value":784},{"type":510,"tag":532,"props":1135,"children":1136},{"style":688},[1137],{"type":515,"value":969},{"type":510,"tag":532,"props":1139,"children":1140},{"style":770},[1141],{"type":515,"value":986},{"type":510,"tag":532,"props":1143,"children":1144},{"style":878},[1145],{"type":515,"value":916},{"type":510,"tag":532,"props":1147,"children":1148},{"style":660},[1149],{"type":515,"value":858},{"type":510,"tag":532,"props":1151,"children":1153},{"class":534,"line":1152},16,[1154,1159,1164],{"type":510,"tag":532,"props":1155,"children":1156},{"style":660},[1157],{"type":515,"value":1158},"    }",{"type":510,"tag":532,"props":1160,"children":1161},{"style":666},[1162],{"type":515,"value":1163}," else",{"type":510,"tag":532,"props":1165,"children":1166},{"style":660},[1167],{"type":515,"value":819},{"type":510,"tag":532,"props":1169,"children":1171},{"class":534,"line":1170},17,[1172,1177,1181,1185,1189,1193],{"type":510,"tag":532,"props":1173,"children":1174},{"style":688},[1175],{"type":515,"value":1176},"      j",{"type":510,"tag":532,"props":1178,"children":1179},{"style":660},[1180],{"type":515,"value":784},{"type":510,"tag":532,"props":1182,"children":1183},{"style":688},[1184],{"type":515,"value":969},{"type":510,"tag":532,"props":1186,"children":1187},{"style":770},[1188],{"type":515,"value":911},{"type":510,"tag":532,"props":1190,"children":1191},{"style":878},[1192],{"type":515,"value":916},{"type":510,"tag":532,"props":1194,"children":1195},{"style":660},[1196],{"type":515,"value":858},{"type":510,"tag":532,"props":1198,"children":1200},{"class":534,"line":1199},18,[1201],{"type":510,"tag":532,"props":1202,"children":1203},{"style":660},[1204],{"type":515,"value":1205},"    }\n",{"type":510,"tag":532,"props":1207,"children":1209},{"class":534,"line":1208},19,[1210],{"type":510,"tag":532,"props":1211,"children":1212},{"style":660},[1213],{"type":515,"value":1214},"  }\n",{"type":510,"tag":532,"props":1216,"children":1218},{"class":534,"line":1217},20,[1219,1224,1228,1233],{"type":510,"tag":532,"props":1220,"children":1221},{"style":666},[1222],{"type":515,"value":1223},"  return",{"type":510,"tag":532,"props":1225,"children":1226},{"style":770},[1227],{"type":515,"value":911},{"type":510,"tag":532,"props":1229,"children":1230},{"style":878},[1231],{"type":515,"value":1232},"1",{"type":510,"tag":532,"props":1234,"children":1235},{"style":660},[1236],{"type":515,"value":858},{"type":510,"tag":532,"props":1238,"children":1240},{"class":534,"line":1239},21,[1241],{"type":510,"tag":532,"props":1242,"children":1243},{"style":660},[1244],{"type":515,"value":1245},"};\n",{"type":510,"tag":1247,"props":1248,"children":1249},"style",{},[1250],{"type":515,"value":1251},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":757,"depth":757,"links":1253},[1254,1255],{"id":624,"depth":544,"text":624},{"id":629,"depth":544,"text":629},"markdown","content:1.algorithm:3.leetcode:3.major:704.binary-search.md","content","1.algorithm/3.leetcode/3.major/704.binary-search.md","md",[1262,1264],{"_path":249,"title":248,"description":1263},"给你一个只包含三种字符的字符串，支持的字符类型分别是 '('、')' 和 '*'。请你检验这个字符串是否为有效字符串，如果是有效字符串返回 true 。",{"_path":255,"title":254,"description":1265},"给你一个整数数组 nums，请你将该数组升序排列。",1714054339560]