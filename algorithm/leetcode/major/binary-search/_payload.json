[{"data":1,"prerenderedAt":1306},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-search":540,"/algorithm/leetcode/major/binary-search-surround":1301},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":252,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":251,"description":544,"url":545,"body":546,"_type":1296,"_id":1297,"_source":1298,"_file":1299,"_extension":1300},"major",false,"","给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。","https://leetcode.cn/problems/binary-search",{"type":547,"children":548,"toc":1292},"root",[549,556,561,600,605,636,641,661,667,672,1286],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"示例 1:",{"type":550,"tag":562,"props":563,"children":566},"pre",{"className":564,"code":565,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入: nums = [-1,0,3,5,9,12], target = 9\n输出: 4\n解释: 9 出现在 nums 中并且下标为 4\n",[567],{"type":550,"tag":568,"props":569,"children":570},"code",{"__ignoreMap":543},[571,582,591],{"type":550,"tag":572,"props":573,"children":576},"span",{"class":574,"line":575},"line",1,[577],{"type":550,"tag":572,"props":578,"children":579},{},[580],{"type":555,"value":581},"输入: nums = [-1,0,3,5,9,12], target = 9\n",{"type":550,"tag":572,"props":583,"children":585},{"class":574,"line":584},2,[586],{"type":550,"tag":572,"props":587,"children":588},{},[589],{"type":555,"value":590},"输出: 4\n",{"type":550,"tag":572,"props":592,"children":594},{"class":574,"line":593},3,[595],{"type":550,"tag":572,"props":596,"children":597},{},[598],{"type":555,"value":599},"解释: 9 出现在 nums 中并且下标为 4\n",{"type":550,"tag":551,"props":601,"children":602},{},[603],{"type":555,"value":604},"示例 2:",{"type":550,"tag":562,"props":606,"children":608},{"className":564,"code":607,"language":555,"meta":543,"style":543},"输入: nums = [-1,0,3,5,9,12], target = 2\n输出: -1\n解释: 2 不存在 nums 中因此返回 -1\n",[609],{"type":550,"tag":568,"props":610,"children":611},{"__ignoreMap":543},[612,620,628],{"type":550,"tag":572,"props":613,"children":614},{"class":574,"line":575},[615],{"type":550,"tag":572,"props":616,"children":617},{},[618],{"type":555,"value":619},"输入: nums = [-1,0,3,5,9,12], target = 2\n",{"type":550,"tag":572,"props":621,"children":622},{"class":574,"line":584},[623],{"type":550,"tag":572,"props":624,"children":625},{},[626],{"type":555,"value":627},"输出: -1\n",{"type":550,"tag":572,"props":629,"children":630},{"class":574,"line":593},[631],{"type":550,"tag":572,"props":632,"children":633},{},[634],{"type":555,"value":635},"解释: 2 不存在 nums 中因此返回 -1\n",{"type":550,"tag":551,"props":637,"children":638},{},[639],{"type":555,"value":640},"提示：",{"type":550,"tag":642,"props":643,"children":644},"ul",{},[645,651,656],{"type":550,"tag":646,"props":647,"children":648},"li",{},[649],{"type":555,"value":650},"你可以假设 nums 中的所有元素是不重复的。",{"type":550,"tag":646,"props":652,"children":653},{},[654],{"type":555,"value":655},"n 将在 [1, 10000] 之间。",{"type":550,"tag":646,"props":657,"children":658},{},[659],{"type":555,"value":660},"nums 的每个元素都将在 [-9999, 9999] 之间。",{"type":550,"tag":662,"props":663,"children":665},"h2",{"id":664},"解题思路",[666],{"type":555,"value":664},{"type":550,"tag":662,"props":668,"children":670},{"id":669},"实现",[671],{"type":555,"value":669},{"type":550,"tag":562,"props":673,"children":677},{"className":674,"code":675,"language":676,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar search = function (nums, target) {\n  let length = nums.length;\n  let i = 0;\n  let j = length - 1;\n  while (i \u003C= j) {\n    let middleIndex = (i + j) >> 1;\n    let middle = nums[middleIndex];\n    if (middle === target) return middleIndex;\n    if (middle \u003C target) {\n      i = middleIndex + 1;\n    } else {\n      j = middleIndex - 1;\n    }\n  }\n  return -1;\n};\n","js",[678],{"type":550,"tag":568,"props":679,"children":680},{"__ignoreMap":543},[681,690,732,765,795,804,860,899,926,961,996,1048,1084,1128,1161,1190,1208,1237,1246,1255,1277],{"type":550,"tag":572,"props":682,"children":683},{"class":574,"line":575},[684],{"type":550,"tag":572,"props":685,"children":687},{"style":686},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[688],{"type":555,"value":689},"/**\n",{"type":550,"tag":572,"props":691,"children":692},{"class":574,"line":584},[693,698,704,710,715,721,726],{"type":550,"tag":572,"props":694,"children":695},{"style":686},[696],{"type":555,"value":697}," * ",{"type":550,"tag":572,"props":699,"children":701},{"style":700},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[702],{"type":555,"value":703},"@",{"type":550,"tag":572,"props":705,"children":707},{"style":706},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[708],{"type":555,"value":709},"param",{"type":550,"tag":572,"props":711,"children":712},{"style":700},[713],{"type":555,"value":714}," {",{"type":550,"tag":572,"props":716,"children":718},{"style":717},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[719],{"type":555,"value":720},"number[]",{"type":550,"tag":572,"props":722,"children":723},{"style":700},[724],{"type":555,"value":725},"}",{"type":550,"tag":572,"props":727,"children":729},{"style":728},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[730],{"type":555,"value":731}," nums\n",{"type":550,"tag":572,"props":733,"children":734},{"class":574,"line":593},[735,739,743,747,751,756,760],{"type":550,"tag":572,"props":736,"children":737},{"style":686},[738],{"type":555,"value":697},{"type":550,"tag":572,"props":740,"children":741},{"style":700},[742],{"type":555,"value":703},{"type":550,"tag":572,"props":744,"children":745},{"style":706},[746],{"type":555,"value":709},{"type":550,"tag":572,"props":748,"children":749},{"style":700},[750],{"type":555,"value":714},{"type":550,"tag":572,"props":752,"children":753},{"style":717},[754],{"type":555,"value":755},"number",{"type":550,"tag":572,"props":757,"children":758},{"style":700},[759],{"type":555,"value":725},{"type":550,"tag":572,"props":761,"children":762},{"style":728},[763],{"type":555,"value":764}," target\n",{"type":550,"tag":572,"props":766,"children":768},{"class":574,"line":767},4,[769,773,777,782,786,790],{"type":550,"tag":572,"props":770,"children":771},{"style":686},[772],{"type":555,"value":697},{"type":550,"tag":572,"props":774,"children":775},{"style":700},[776],{"type":555,"value":703},{"type":550,"tag":572,"props":778,"children":779},{"style":706},[780],{"type":555,"value":781},"return",{"type":550,"tag":572,"props":783,"children":784},{"style":700},[785],{"type":555,"value":714},{"type":550,"tag":572,"props":787,"children":788},{"style":717},[789],{"type":555,"value":755},{"type":550,"tag":572,"props":791,"children":792},{"style":700},[793],{"type":555,"value":794},"}\n",{"type":550,"tag":572,"props":796,"children":798},{"class":574,"line":797},5,[799],{"type":550,"tag":572,"props":800,"children":801},{"style":686},[802],{"type":555,"value":803}," */\n",{"type":550,"tag":572,"props":805,"children":807},{"class":574,"line":806},6,[808,814,820,825,830,835,840,845,850,855],{"type":550,"tag":572,"props":809,"children":811},{"style":810},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[812],{"type":555,"value":813},"var",{"type":550,"tag":572,"props":815,"children":817},{"style":816},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[818],{"type":555,"value":819}," search",{"type":550,"tag":572,"props":821,"children":822},{"style":700},[823],{"type":555,"value":824}," =",{"type":550,"tag":572,"props":826,"children":827},{"style":810},[828],{"type":555,"value":829}," function",{"type":550,"tag":572,"props":831,"children":832},{"style":700},[833],{"type":555,"value":834}," (",{"type":550,"tag":572,"props":836,"children":837},{"style":728},[838],{"type":555,"value":839},"nums",{"type":550,"tag":572,"props":841,"children":842},{"style":700},[843],{"type":555,"value":844},",",{"type":550,"tag":572,"props":846,"children":847},{"style":728},[848],{"type":555,"value":849}," target",{"type":550,"tag":572,"props":851,"children":852},{"style":700},[853],{"type":555,"value":854},")",{"type":550,"tag":572,"props":856,"children":857},{"style":700},[858],{"type":555,"value":859}," {\n",{"type":550,"tag":572,"props":861,"children":863},{"class":574,"line":862},7,[864,869,874,878,883,888,894],{"type":550,"tag":572,"props":865,"children":866},{"style":810},[867],{"type":555,"value":868},"  let",{"type":550,"tag":572,"props":870,"children":871},{"style":728},[872],{"type":555,"value":873}," length",{"type":550,"tag":572,"props":875,"children":876},{"style":700},[877],{"type":555,"value":824},{"type":550,"tag":572,"props":879,"children":880},{"style":728},[881],{"type":555,"value":882}," nums",{"type":550,"tag":572,"props":884,"children":885},{"style":700},[886],{"type":555,"value":887},".",{"type":550,"tag":572,"props":889,"children":891},{"style":890},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[892],{"type":555,"value":893},"length",{"type":550,"tag":572,"props":895,"children":896},{"style":700},[897],{"type":555,"value":898},";\n",{"type":550,"tag":572,"props":900,"children":902},{"class":574,"line":901},8,[903,907,912,916,922],{"type":550,"tag":572,"props":904,"children":905},{"style":810},[906],{"type":555,"value":868},{"type":550,"tag":572,"props":908,"children":909},{"style":728},[910],{"type":555,"value":911}," i",{"type":550,"tag":572,"props":913,"children":914},{"style":700},[915],{"type":555,"value":824},{"type":550,"tag":572,"props":917,"children":919},{"style":918},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[920],{"type":555,"value":921}," 0",{"type":550,"tag":572,"props":923,"children":924},{"style":700},[925],{"type":555,"value":898},{"type":550,"tag":572,"props":927,"children":929},{"class":574,"line":928},9,[930,934,939,943,947,952,957],{"type":550,"tag":572,"props":931,"children":932},{"style":810},[933],{"type":555,"value":868},{"type":550,"tag":572,"props":935,"children":936},{"style":728},[937],{"type":555,"value":938}," j",{"type":550,"tag":572,"props":940,"children":941},{"style":700},[942],{"type":555,"value":824},{"type":550,"tag":572,"props":944,"children":945},{"style":728},[946],{"type":555,"value":873},{"type":550,"tag":572,"props":948,"children":949},{"style":810},[950],{"type":555,"value":951}," -",{"type":550,"tag":572,"props":953,"children":954},{"style":918},[955],{"type":555,"value":956}," 1",{"type":550,"tag":572,"props":958,"children":959},{"style":700},[960],{"type":555,"value":898},{"type":550,"tag":572,"props":962,"children":964},{"class":574,"line":963},10,[965,970,974,979,984,988,992],{"type":550,"tag":572,"props":966,"children":967},{"style":706},[968],{"type":555,"value":969},"  while",{"type":550,"tag":572,"props":971,"children":972},{"style":700},[973],{"type":555,"value":834},{"type":550,"tag":572,"props":975,"children":976},{"style":728},[977],{"type":555,"value":978},"i",{"type":550,"tag":572,"props":980,"children":981},{"style":700},[982],{"type":555,"value":983}," \u003C=",{"type":550,"tag":572,"props":985,"children":986},{"style":728},[987],{"type":555,"value":938},{"type":550,"tag":572,"props":989,"children":990},{"style":700},[991],{"type":555,"value":854},{"type":550,"tag":572,"props":993,"children":994},{"style":700},[995],{"type":555,"value":859},{"type":550,"tag":572,"props":997,"children":999},{"class":574,"line":998},11,[1000,1005,1010,1014,1018,1022,1027,1031,1035,1040,1044],{"type":550,"tag":572,"props":1001,"children":1002},{"style":810},[1003],{"type":555,"value":1004},"    let",{"type":550,"tag":572,"props":1006,"children":1007},{"style":728},[1008],{"type":555,"value":1009}," middleIndex",{"type":550,"tag":572,"props":1011,"children":1012},{"style":700},[1013],{"type":555,"value":824},{"type":550,"tag":572,"props":1015,"children":1016},{"style":700},[1017],{"type":555,"value":834},{"type":550,"tag":572,"props":1019,"children":1020},{"style":728},[1021],{"type":555,"value":978},{"type":550,"tag":572,"props":1023,"children":1024},{"style":810},[1025],{"type":555,"value":1026}," +",{"type":550,"tag":572,"props":1028,"children":1029},{"style":728},[1030],{"type":555,"value":938},{"type":550,"tag":572,"props":1032,"children":1033},{"style":700},[1034],{"type":555,"value":854},{"type":550,"tag":572,"props":1036,"children":1037},{"style":810},[1038],{"type":555,"value":1039}," >>",{"type":550,"tag":572,"props":1041,"children":1042},{"style":918},[1043],{"type":555,"value":956},{"type":550,"tag":572,"props":1045,"children":1046},{"style":700},[1047],{"type":555,"value":898},{"type":550,"tag":572,"props":1049,"children":1051},{"class":574,"line":1050},12,[1052,1056,1061,1065,1069,1074,1079],{"type":550,"tag":572,"props":1053,"children":1054},{"style":810},[1055],{"type":555,"value":1004},{"type":550,"tag":572,"props":1057,"children":1058},{"style":728},[1059],{"type":555,"value":1060}," middle",{"type":550,"tag":572,"props":1062,"children":1063},{"style":700},[1064],{"type":555,"value":824},{"type":550,"tag":572,"props":1066,"children":1067},{"style":728},[1068],{"type":555,"value":882},{"type":550,"tag":572,"props":1070,"children":1071},{"style":700},[1072],{"type":555,"value":1073},"[",{"type":550,"tag":572,"props":1075,"children":1076},{"style":728},[1077],{"type":555,"value":1078},"middleIndex",{"type":550,"tag":572,"props":1080,"children":1081},{"style":700},[1082],{"type":555,"value":1083},"];\n",{"type":550,"tag":572,"props":1085,"children":1087},{"class":574,"line":1086},13,[1088,1093,1097,1102,1107,1111,1115,1120,1124],{"type":550,"tag":572,"props":1089,"children":1090},{"style":706},[1091],{"type":555,"value":1092},"    if",{"type":550,"tag":572,"props":1094,"children":1095},{"style":700},[1096],{"type":555,"value":834},{"type":550,"tag":572,"props":1098,"children":1099},{"style":728},[1100],{"type":555,"value":1101},"middle",{"type":550,"tag":572,"props":1103,"children":1104},{"style":810},[1105],{"type":555,"value":1106}," ===",{"type":550,"tag":572,"props":1108,"children":1109},{"style":728},[1110],{"type":555,"value":849},{"type":550,"tag":572,"props":1112,"children":1113},{"style":700},[1114],{"type":555,"value":854},{"type":550,"tag":572,"props":1116,"children":1117},{"style":706},[1118],{"type":555,"value":1119}," return",{"type":550,"tag":572,"props":1121,"children":1122},{"style":728},[1123],{"type":555,"value":1009},{"type":550,"tag":572,"props":1125,"children":1126},{"style":700},[1127],{"type":555,"value":898},{"type":550,"tag":572,"props":1129,"children":1131},{"class":574,"line":1130},14,[1132,1136,1140,1144,1149,1153,1157],{"type":550,"tag":572,"props":1133,"children":1134},{"style":706},[1135],{"type":555,"value":1092},{"type":550,"tag":572,"props":1137,"children":1138},{"style":700},[1139],{"type":555,"value":834},{"type":550,"tag":572,"props":1141,"children":1142},{"style":728},[1143],{"type":555,"value":1101},{"type":550,"tag":572,"props":1145,"children":1146},{"style":700},[1147],{"type":555,"value":1148}," \u003C",{"type":550,"tag":572,"props":1150,"children":1151},{"style":728},[1152],{"type":555,"value":849},{"type":550,"tag":572,"props":1154,"children":1155},{"style":700},[1156],{"type":555,"value":854},{"type":550,"tag":572,"props":1158,"children":1159},{"style":700},[1160],{"type":555,"value":859},{"type":550,"tag":572,"props":1162,"children":1164},{"class":574,"line":1163},15,[1165,1170,1174,1178,1182,1186],{"type":550,"tag":572,"props":1166,"children":1167},{"style":728},[1168],{"type":555,"value":1169},"      i",{"type":550,"tag":572,"props":1171,"children":1172},{"style":700},[1173],{"type":555,"value":824},{"type":550,"tag":572,"props":1175,"children":1176},{"style":728},[1177],{"type":555,"value":1009},{"type":550,"tag":572,"props":1179,"children":1180},{"style":810},[1181],{"type":555,"value":1026},{"type":550,"tag":572,"props":1183,"children":1184},{"style":918},[1185],{"type":555,"value":956},{"type":550,"tag":572,"props":1187,"children":1188},{"style":700},[1189],{"type":555,"value":898},{"type":550,"tag":572,"props":1191,"children":1193},{"class":574,"line":1192},16,[1194,1199,1204],{"type":550,"tag":572,"props":1195,"children":1196},{"style":700},[1197],{"type":555,"value":1198},"    }",{"type":550,"tag":572,"props":1200,"children":1201},{"style":706},[1202],{"type":555,"value":1203}," else",{"type":550,"tag":572,"props":1205,"children":1206},{"style":700},[1207],{"type":555,"value":859},{"type":550,"tag":572,"props":1209,"children":1211},{"class":574,"line":1210},17,[1212,1217,1221,1225,1229,1233],{"type":550,"tag":572,"props":1213,"children":1214},{"style":728},[1215],{"type":555,"value":1216},"      j",{"type":550,"tag":572,"props":1218,"children":1219},{"style":700},[1220],{"type":555,"value":824},{"type":550,"tag":572,"props":1222,"children":1223},{"style":728},[1224],{"type":555,"value":1009},{"type":550,"tag":572,"props":1226,"children":1227},{"style":810},[1228],{"type":555,"value":951},{"type":550,"tag":572,"props":1230,"children":1231},{"style":918},[1232],{"type":555,"value":956},{"type":550,"tag":572,"props":1234,"children":1235},{"style":700},[1236],{"type":555,"value":898},{"type":550,"tag":572,"props":1238,"children":1240},{"class":574,"line":1239},18,[1241],{"type":550,"tag":572,"props":1242,"children":1243},{"style":700},[1244],{"type":555,"value":1245},"    }\n",{"type":550,"tag":572,"props":1247,"children":1249},{"class":574,"line":1248},19,[1250],{"type":550,"tag":572,"props":1251,"children":1252},{"style":700},[1253],{"type":555,"value":1254},"  }\n",{"type":550,"tag":572,"props":1256,"children":1258},{"class":574,"line":1257},20,[1259,1264,1268,1273],{"type":550,"tag":572,"props":1260,"children":1261},{"style":706},[1262],{"type":555,"value":1263},"  return",{"type":550,"tag":572,"props":1265,"children":1266},{"style":810},[1267],{"type":555,"value":951},{"type":550,"tag":572,"props":1269,"children":1270},{"style":918},[1271],{"type":555,"value":1272},"1",{"type":550,"tag":572,"props":1274,"children":1275},{"style":700},[1276],{"type":555,"value":898},{"type":550,"tag":572,"props":1278,"children":1280},{"class":574,"line":1279},21,[1281],{"type":550,"tag":572,"props":1282,"children":1283},{"style":700},[1284],{"type":555,"value":1285},"};\n",{"type":550,"tag":1287,"props":1288,"children":1289},"style",{},[1290],{"type":555,"value":1291},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":797,"depth":797,"links":1293},[1294,1295],{"id":664,"depth":584,"text":664},{"id":669,"depth":584,"text":669},"markdown","content:1.algorithm:3.leetcode:3.major:704.binary-search.md","content","1.algorithm/3.leetcode/3.major/704.binary-search.md","md",[1302,1304],{"_path":249,"title":248,"description":1303},"给你一个只包含三种字符的字符串，支持的字符类型分别是 '('、')' 和 '*'。请你检验这个字符串是否为有效字符串，如果是有效字符串返回 true 。",{"_path":255,"title":254,"description":1305},"给你一个整数数组 nums，请你将该数组升序排列。",1714099216664]