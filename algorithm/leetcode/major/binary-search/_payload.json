[{"data":1,"prerenderedAt":1312},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/binary-search":546,"/algorithm/leetcode/major/binary-search-surround":1307},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":252,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":251,"description":550,"url":551,"body":552,"_type":1302,"_id":1303,"_source":1304,"_file":1305,"_extension":1306},"major",false,"","给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。","https://leetcode.cn/problems/binary-search",{"type":553,"children":554,"toc":1298},"root",[555,562,567,606,611,642,647,667,673,678,1292],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"示例 1:",{"type":556,"tag":568,"props":569,"children":572},"pre",{"className":570,"code":571,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入: nums = [-1,0,3,5,9,12], target = 9\n输出: 4\n解释: 9 出现在 nums 中并且下标为 4\n",[573],{"type":556,"tag":574,"props":575,"children":576},"code",{"__ignoreMap":549},[577,588,597],{"type":556,"tag":578,"props":579,"children":582},"span",{"class":580,"line":581},"line",1,[583],{"type":556,"tag":578,"props":584,"children":585},{},[586],{"type":561,"value":587},"输入: nums = [-1,0,3,5,9,12], target = 9\n",{"type":556,"tag":578,"props":589,"children":591},{"class":580,"line":590},2,[592],{"type":556,"tag":578,"props":593,"children":594},{},[595],{"type":561,"value":596},"输出: 4\n",{"type":556,"tag":578,"props":598,"children":600},{"class":580,"line":599},3,[601],{"type":556,"tag":578,"props":602,"children":603},{},[604],{"type":561,"value":605},"解释: 9 出现在 nums 中并且下标为 4\n",{"type":556,"tag":557,"props":607,"children":608},{},[609],{"type":561,"value":610},"示例 2:",{"type":556,"tag":568,"props":612,"children":614},{"className":570,"code":613,"language":561,"meta":549,"style":549},"输入: nums = [-1,0,3,5,9,12], target = 2\n输出: -1\n解释: 2 不存在 nums 中因此返回 -1\n",[615],{"type":556,"tag":574,"props":616,"children":617},{"__ignoreMap":549},[618,626,634],{"type":556,"tag":578,"props":619,"children":620},{"class":580,"line":581},[621],{"type":556,"tag":578,"props":622,"children":623},{},[624],{"type":561,"value":625},"输入: nums = [-1,0,3,5,9,12], target = 2\n",{"type":556,"tag":578,"props":627,"children":628},{"class":580,"line":590},[629],{"type":556,"tag":578,"props":630,"children":631},{},[632],{"type":561,"value":633},"输出: -1\n",{"type":556,"tag":578,"props":635,"children":636},{"class":580,"line":599},[637],{"type":556,"tag":578,"props":638,"children":639},{},[640],{"type":561,"value":641},"解释: 2 不存在 nums 中因此返回 -1\n",{"type":556,"tag":557,"props":643,"children":644},{},[645],{"type":561,"value":646},"提示：",{"type":556,"tag":648,"props":649,"children":650},"ul",{},[651,657,662],{"type":556,"tag":652,"props":653,"children":654},"li",{},[655],{"type":561,"value":656},"你可以假设 nums 中的所有元素是不重复的。",{"type":556,"tag":652,"props":658,"children":659},{},[660],{"type":561,"value":661},"n 将在 [1, 10000] 之间。",{"type":556,"tag":652,"props":663,"children":664},{},[665],{"type":561,"value":666},"nums 的每个元素都将在 [-9999, 9999] 之间。",{"type":556,"tag":668,"props":669,"children":671},"h2",{"id":670},"解题思路",[672],{"type":561,"value":670},{"type":556,"tag":668,"props":674,"children":676},{"id":675},"实现",[677],{"type":561,"value":675},{"type":556,"tag":568,"props":679,"children":683},{"className":680,"code":681,"language":682,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar search = function (nums, target) {\n  let length = nums.length;\n  let i = 0;\n  let j = length - 1;\n  while (i \u003C= j) {\n    let middleIndex = (i + j) >> 1;\n    let middle = nums[middleIndex];\n    if (middle === target) return middleIndex;\n    if (middle \u003C target) {\n      i = middleIndex + 1;\n    } else {\n      j = middleIndex - 1;\n    }\n  }\n  return -1;\n};\n","js",[684],{"type":556,"tag":574,"props":685,"children":686},{"__ignoreMap":549},[687,696,738,771,801,810,866,905,932,967,1002,1054,1090,1134,1167,1196,1214,1243,1252,1261,1283],{"type":556,"tag":578,"props":688,"children":689},{"class":580,"line":581},[690],{"type":556,"tag":578,"props":691,"children":693},{"style":692},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[694],{"type":561,"value":695},"/**\n",{"type":556,"tag":578,"props":697,"children":698},{"class":580,"line":590},[699,704,710,716,721,727,732],{"type":556,"tag":578,"props":700,"children":701},{"style":692},[702],{"type":561,"value":703}," * ",{"type":556,"tag":578,"props":705,"children":707},{"style":706},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[708],{"type":561,"value":709},"@",{"type":556,"tag":578,"props":711,"children":713},{"style":712},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[714],{"type":561,"value":715},"param",{"type":556,"tag":578,"props":717,"children":718},{"style":706},[719],{"type":561,"value":720}," {",{"type":556,"tag":578,"props":722,"children":724},{"style":723},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[725],{"type":561,"value":726},"number[]",{"type":556,"tag":578,"props":728,"children":729},{"style":706},[730],{"type":561,"value":731},"}",{"type":556,"tag":578,"props":733,"children":735},{"style":734},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[736],{"type":561,"value":737}," nums\n",{"type":556,"tag":578,"props":739,"children":740},{"class":580,"line":599},[741,745,749,753,757,762,766],{"type":556,"tag":578,"props":742,"children":743},{"style":692},[744],{"type":561,"value":703},{"type":556,"tag":578,"props":746,"children":747},{"style":706},[748],{"type":561,"value":709},{"type":556,"tag":578,"props":750,"children":751},{"style":712},[752],{"type":561,"value":715},{"type":556,"tag":578,"props":754,"children":755},{"style":706},[756],{"type":561,"value":720},{"type":556,"tag":578,"props":758,"children":759},{"style":723},[760],{"type":561,"value":761},"number",{"type":556,"tag":578,"props":763,"children":764},{"style":706},[765],{"type":561,"value":731},{"type":556,"tag":578,"props":767,"children":768},{"style":734},[769],{"type":561,"value":770}," target\n",{"type":556,"tag":578,"props":772,"children":774},{"class":580,"line":773},4,[775,779,783,788,792,796],{"type":556,"tag":578,"props":776,"children":777},{"style":692},[778],{"type":561,"value":703},{"type":556,"tag":578,"props":780,"children":781},{"style":706},[782],{"type":561,"value":709},{"type":556,"tag":578,"props":784,"children":785},{"style":712},[786],{"type":561,"value":787},"return",{"type":556,"tag":578,"props":789,"children":790},{"style":706},[791],{"type":561,"value":720},{"type":556,"tag":578,"props":793,"children":794},{"style":723},[795],{"type":561,"value":761},{"type":556,"tag":578,"props":797,"children":798},{"style":706},[799],{"type":561,"value":800},"}\n",{"type":556,"tag":578,"props":802,"children":804},{"class":580,"line":803},5,[805],{"type":556,"tag":578,"props":806,"children":807},{"style":692},[808],{"type":561,"value":809}," */\n",{"type":556,"tag":578,"props":811,"children":813},{"class":580,"line":812},6,[814,820,826,831,836,841,846,851,856,861],{"type":556,"tag":578,"props":815,"children":817},{"style":816},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[818],{"type":561,"value":819},"var",{"type":556,"tag":578,"props":821,"children":823},{"style":822},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[824],{"type":561,"value":825}," search",{"type":556,"tag":578,"props":827,"children":828},{"style":706},[829],{"type":561,"value":830}," =",{"type":556,"tag":578,"props":832,"children":833},{"style":816},[834],{"type":561,"value":835}," function",{"type":556,"tag":578,"props":837,"children":838},{"style":706},[839],{"type":561,"value":840}," (",{"type":556,"tag":578,"props":842,"children":843},{"style":734},[844],{"type":561,"value":845},"nums",{"type":556,"tag":578,"props":847,"children":848},{"style":706},[849],{"type":561,"value":850},",",{"type":556,"tag":578,"props":852,"children":853},{"style":734},[854],{"type":561,"value":855}," target",{"type":556,"tag":578,"props":857,"children":858},{"style":706},[859],{"type":561,"value":860},")",{"type":556,"tag":578,"props":862,"children":863},{"style":706},[864],{"type":561,"value":865}," {\n",{"type":556,"tag":578,"props":867,"children":869},{"class":580,"line":868},7,[870,875,880,884,889,894,900],{"type":556,"tag":578,"props":871,"children":872},{"style":816},[873],{"type":561,"value":874},"  let",{"type":556,"tag":578,"props":876,"children":877},{"style":734},[878],{"type":561,"value":879}," length",{"type":556,"tag":578,"props":881,"children":882},{"style":706},[883],{"type":561,"value":830},{"type":556,"tag":578,"props":885,"children":886},{"style":734},[887],{"type":561,"value":888}," nums",{"type":556,"tag":578,"props":890,"children":891},{"style":706},[892],{"type":561,"value":893},".",{"type":556,"tag":578,"props":895,"children":897},{"style":896},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[898],{"type":561,"value":899},"length",{"type":556,"tag":578,"props":901,"children":902},{"style":706},[903],{"type":561,"value":904},";\n",{"type":556,"tag":578,"props":906,"children":908},{"class":580,"line":907},8,[909,913,918,922,928],{"type":556,"tag":578,"props":910,"children":911},{"style":816},[912],{"type":561,"value":874},{"type":556,"tag":578,"props":914,"children":915},{"style":734},[916],{"type":561,"value":917}," i",{"type":556,"tag":578,"props":919,"children":920},{"style":706},[921],{"type":561,"value":830},{"type":556,"tag":578,"props":923,"children":925},{"style":924},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[926],{"type":561,"value":927}," 0",{"type":556,"tag":578,"props":929,"children":930},{"style":706},[931],{"type":561,"value":904},{"type":556,"tag":578,"props":933,"children":935},{"class":580,"line":934},9,[936,940,945,949,953,958,963],{"type":556,"tag":578,"props":937,"children":938},{"style":816},[939],{"type":561,"value":874},{"type":556,"tag":578,"props":941,"children":942},{"style":734},[943],{"type":561,"value":944}," j",{"type":556,"tag":578,"props":946,"children":947},{"style":706},[948],{"type":561,"value":830},{"type":556,"tag":578,"props":950,"children":951},{"style":734},[952],{"type":561,"value":879},{"type":556,"tag":578,"props":954,"children":955},{"style":816},[956],{"type":561,"value":957}," -",{"type":556,"tag":578,"props":959,"children":960},{"style":924},[961],{"type":561,"value":962}," 1",{"type":556,"tag":578,"props":964,"children":965},{"style":706},[966],{"type":561,"value":904},{"type":556,"tag":578,"props":968,"children":970},{"class":580,"line":969},10,[971,976,980,985,990,994,998],{"type":556,"tag":578,"props":972,"children":973},{"style":712},[974],{"type":561,"value":975},"  while",{"type":556,"tag":578,"props":977,"children":978},{"style":706},[979],{"type":561,"value":840},{"type":556,"tag":578,"props":981,"children":982},{"style":734},[983],{"type":561,"value":984},"i",{"type":556,"tag":578,"props":986,"children":987},{"style":706},[988],{"type":561,"value":989}," \u003C=",{"type":556,"tag":578,"props":991,"children":992},{"style":734},[993],{"type":561,"value":944},{"type":556,"tag":578,"props":995,"children":996},{"style":706},[997],{"type":561,"value":860},{"type":556,"tag":578,"props":999,"children":1000},{"style":706},[1001],{"type":561,"value":865},{"type":556,"tag":578,"props":1003,"children":1005},{"class":580,"line":1004},11,[1006,1011,1016,1020,1024,1028,1033,1037,1041,1046,1050],{"type":556,"tag":578,"props":1007,"children":1008},{"style":816},[1009],{"type":561,"value":1010},"    let",{"type":556,"tag":578,"props":1012,"children":1013},{"style":734},[1014],{"type":561,"value":1015}," middleIndex",{"type":556,"tag":578,"props":1017,"children":1018},{"style":706},[1019],{"type":561,"value":830},{"type":556,"tag":578,"props":1021,"children":1022},{"style":706},[1023],{"type":561,"value":840},{"type":556,"tag":578,"props":1025,"children":1026},{"style":734},[1027],{"type":561,"value":984},{"type":556,"tag":578,"props":1029,"children":1030},{"style":816},[1031],{"type":561,"value":1032}," +",{"type":556,"tag":578,"props":1034,"children":1035},{"style":734},[1036],{"type":561,"value":944},{"type":556,"tag":578,"props":1038,"children":1039},{"style":706},[1040],{"type":561,"value":860},{"type":556,"tag":578,"props":1042,"children":1043},{"style":816},[1044],{"type":561,"value":1045}," >>",{"type":556,"tag":578,"props":1047,"children":1048},{"style":924},[1049],{"type":561,"value":962},{"type":556,"tag":578,"props":1051,"children":1052},{"style":706},[1053],{"type":561,"value":904},{"type":556,"tag":578,"props":1055,"children":1057},{"class":580,"line":1056},12,[1058,1062,1067,1071,1075,1080,1085],{"type":556,"tag":578,"props":1059,"children":1060},{"style":816},[1061],{"type":561,"value":1010},{"type":556,"tag":578,"props":1063,"children":1064},{"style":734},[1065],{"type":561,"value":1066}," middle",{"type":556,"tag":578,"props":1068,"children":1069},{"style":706},[1070],{"type":561,"value":830},{"type":556,"tag":578,"props":1072,"children":1073},{"style":734},[1074],{"type":561,"value":888},{"type":556,"tag":578,"props":1076,"children":1077},{"style":706},[1078],{"type":561,"value":1079},"[",{"type":556,"tag":578,"props":1081,"children":1082},{"style":734},[1083],{"type":561,"value":1084},"middleIndex",{"type":556,"tag":578,"props":1086,"children":1087},{"style":706},[1088],{"type":561,"value":1089},"];\n",{"type":556,"tag":578,"props":1091,"children":1093},{"class":580,"line":1092},13,[1094,1099,1103,1108,1113,1117,1121,1126,1130],{"type":556,"tag":578,"props":1095,"children":1096},{"style":712},[1097],{"type":561,"value":1098},"    if",{"type":556,"tag":578,"props":1100,"children":1101},{"style":706},[1102],{"type":561,"value":840},{"type":556,"tag":578,"props":1104,"children":1105},{"style":734},[1106],{"type":561,"value":1107},"middle",{"type":556,"tag":578,"props":1109,"children":1110},{"style":816},[1111],{"type":561,"value":1112}," ===",{"type":556,"tag":578,"props":1114,"children":1115},{"style":734},[1116],{"type":561,"value":855},{"type":556,"tag":578,"props":1118,"children":1119},{"style":706},[1120],{"type":561,"value":860},{"type":556,"tag":578,"props":1122,"children":1123},{"style":712},[1124],{"type":561,"value":1125}," return",{"type":556,"tag":578,"props":1127,"children":1128},{"style":734},[1129],{"type":561,"value":1015},{"type":556,"tag":578,"props":1131,"children":1132},{"style":706},[1133],{"type":561,"value":904},{"type":556,"tag":578,"props":1135,"children":1137},{"class":580,"line":1136},14,[1138,1142,1146,1150,1155,1159,1163],{"type":556,"tag":578,"props":1139,"children":1140},{"style":712},[1141],{"type":561,"value":1098},{"type":556,"tag":578,"props":1143,"children":1144},{"style":706},[1145],{"type":561,"value":840},{"type":556,"tag":578,"props":1147,"children":1148},{"style":734},[1149],{"type":561,"value":1107},{"type":556,"tag":578,"props":1151,"children":1152},{"style":706},[1153],{"type":561,"value":1154}," \u003C",{"type":556,"tag":578,"props":1156,"children":1157},{"style":734},[1158],{"type":561,"value":855},{"type":556,"tag":578,"props":1160,"children":1161},{"style":706},[1162],{"type":561,"value":860},{"type":556,"tag":578,"props":1164,"children":1165},{"style":706},[1166],{"type":561,"value":865},{"type":556,"tag":578,"props":1168,"children":1170},{"class":580,"line":1169},15,[1171,1176,1180,1184,1188,1192],{"type":556,"tag":578,"props":1172,"children":1173},{"style":734},[1174],{"type":561,"value":1175},"      i",{"type":556,"tag":578,"props":1177,"children":1178},{"style":706},[1179],{"type":561,"value":830},{"type":556,"tag":578,"props":1181,"children":1182},{"style":734},[1183],{"type":561,"value":1015},{"type":556,"tag":578,"props":1185,"children":1186},{"style":816},[1187],{"type":561,"value":1032},{"type":556,"tag":578,"props":1189,"children":1190},{"style":924},[1191],{"type":561,"value":962},{"type":556,"tag":578,"props":1193,"children":1194},{"style":706},[1195],{"type":561,"value":904},{"type":556,"tag":578,"props":1197,"children":1199},{"class":580,"line":1198},16,[1200,1205,1210],{"type":556,"tag":578,"props":1201,"children":1202},{"style":706},[1203],{"type":561,"value":1204},"    }",{"type":556,"tag":578,"props":1206,"children":1207},{"style":712},[1208],{"type":561,"value":1209}," else",{"type":556,"tag":578,"props":1211,"children":1212},{"style":706},[1213],{"type":561,"value":865},{"type":556,"tag":578,"props":1215,"children":1217},{"class":580,"line":1216},17,[1218,1223,1227,1231,1235,1239],{"type":556,"tag":578,"props":1219,"children":1220},{"style":734},[1221],{"type":561,"value":1222},"      j",{"type":556,"tag":578,"props":1224,"children":1225},{"style":706},[1226],{"type":561,"value":830},{"type":556,"tag":578,"props":1228,"children":1229},{"style":734},[1230],{"type":561,"value":1015},{"type":556,"tag":578,"props":1232,"children":1233},{"style":816},[1234],{"type":561,"value":957},{"type":556,"tag":578,"props":1236,"children":1237},{"style":924},[1238],{"type":561,"value":962},{"type":556,"tag":578,"props":1240,"children":1241},{"style":706},[1242],{"type":561,"value":904},{"type":556,"tag":578,"props":1244,"children":1246},{"class":580,"line":1245},18,[1247],{"type":556,"tag":578,"props":1248,"children":1249},{"style":706},[1250],{"type":561,"value":1251},"    }\n",{"type":556,"tag":578,"props":1253,"children":1255},{"class":580,"line":1254},19,[1256],{"type":556,"tag":578,"props":1257,"children":1258},{"style":706},[1259],{"type":561,"value":1260},"  }\n",{"type":556,"tag":578,"props":1262,"children":1264},{"class":580,"line":1263},20,[1265,1270,1274,1279],{"type":556,"tag":578,"props":1266,"children":1267},{"style":712},[1268],{"type":561,"value":1269},"  return",{"type":556,"tag":578,"props":1271,"children":1272},{"style":816},[1273],{"type":561,"value":957},{"type":556,"tag":578,"props":1275,"children":1276},{"style":924},[1277],{"type":561,"value":1278},"1",{"type":556,"tag":578,"props":1280,"children":1281},{"style":706},[1282],{"type":561,"value":904},{"type":556,"tag":578,"props":1284,"children":1286},{"class":580,"line":1285},21,[1287],{"type":556,"tag":578,"props":1288,"children":1289},{"style":706},[1290],{"type":561,"value":1291},"};\n",{"type":556,"tag":1293,"props":1294,"children":1295},"style",{},[1296],{"type":561,"value":1297},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":803,"depth":803,"links":1299},[1300,1301],{"id":670,"depth":590,"text":670},{"id":675,"depth":590,"text":675},"markdown","content:1.algorithm:3.leetcode:3.major:704.binary-search.md","content","1.algorithm/3.leetcode/3.major/704.binary-search.md","md",[1308,1310],{"_path":249,"title":248,"description":1309},"给你一个只包含三种字符的字符串，支持的字符类型分别是 '('、')' 和 '*'。请你检验这个字符串是否为有效字符串，如果是有效字符串返回 true 。",{"_path":255,"title":254,"description":1311},"给你一个整数数组 nums，请你将该数组升序排列。",1715002845921]