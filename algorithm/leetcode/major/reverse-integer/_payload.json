[{"data":1,"prerenderedAt":1192},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-integer":559,"/algorithm/leetcode/major/reverse-integer-surround":1187},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":75,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":74,"description":563,"url":564,"body":565,"_type":1182,"_id":1183,"_source":1184,"_file":1185,"_extension":1186},"major",false,"","给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。","https://leetcode.cn/problems/reverse-integer",{"type":566,"children":567,"toc":1178},"root",[568,575,580,585,590,620,625,648,653,676,681,704,709,719,725,730,1172],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"如果反转后整数超过 32 位的有符号整数的范围 [−2^31, 2^31 − 1] ，就返回 0。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"假设环境不允许存储 64 位整数（有符号或无符号）。",{"type":569,"tag":570,"props":586,"children":587},{},[588],{"type":574,"value":589},"示例 1：",{"type":569,"tag":591,"props":592,"children":595},"pre",{"className":593,"code":594,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：x = 123\n输出：321\n",[596],{"type":569,"tag":597,"props":598,"children":599},"code",{"__ignoreMap":562},[600,611],{"type":569,"tag":601,"props":602,"children":605},"span",{"class":603,"line":604},"line",1,[606],{"type":569,"tag":601,"props":607,"children":608},{},[609],{"type":574,"value":610},"输入：x = 123\n",{"type":569,"tag":601,"props":612,"children":614},{"class":603,"line":613},2,[615],{"type":569,"tag":601,"props":616,"children":617},{},[618],{"type":574,"value":619},"输出：321\n",{"type":569,"tag":570,"props":621,"children":622},{},[623],{"type":574,"value":624},"示例 2：",{"type":569,"tag":591,"props":626,"children":628},{"className":593,"code":627,"language":574,"meta":562,"style":562},"输入：x = -123\n输出：-321\n",[629],{"type":569,"tag":597,"props":630,"children":631},{"__ignoreMap":562},[632,640],{"type":569,"tag":601,"props":633,"children":634},{"class":603,"line":604},[635],{"type":569,"tag":601,"props":636,"children":637},{},[638],{"type":574,"value":639},"输入：x = -123\n",{"type":569,"tag":601,"props":641,"children":642},{"class":603,"line":613},[643],{"type":569,"tag":601,"props":644,"children":645},{},[646],{"type":574,"value":647},"输出：-321\n",{"type":569,"tag":570,"props":649,"children":650},{},[651],{"type":574,"value":652},"示例 3：",{"type":569,"tag":591,"props":654,"children":656},{"className":593,"code":655,"language":574,"meta":562,"style":562},"输入：x = 120\n输出：21\n",[657],{"type":569,"tag":597,"props":658,"children":659},{"__ignoreMap":562},[660,668],{"type":569,"tag":601,"props":661,"children":662},{"class":603,"line":604},[663],{"type":569,"tag":601,"props":664,"children":665},{},[666],{"type":574,"value":667},"输入：x = 120\n",{"type":569,"tag":601,"props":669,"children":670},{"class":603,"line":613},[671],{"type":569,"tag":601,"props":672,"children":673},{},[674],{"type":574,"value":675},"输出：21\n",{"type":569,"tag":570,"props":677,"children":678},{},[679],{"type":574,"value":680},"示例 4：",{"type":569,"tag":591,"props":682,"children":684},{"className":593,"code":683,"language":574,"meta":562,"style":562},"输入：x = 0\n输出：0\n",[685],{"type":569,"tag":597,"props":686,"children":687},{"__ignoreMap":562},[688,696],{"type":569,"tag":601,"props":689,"children":690},{"class":603,"line":604},[691],{"type":569,"tag":601,"props":692,"children":693},{},[694],{"type":574,"value":695},"输入：x = 0\n",{"type":569,"tag":601,"props":697,"children":698},{"class":603,"line":613},[699],{"type":569,"tag":601,"props":700,"children":701},{},[702],{"type":574,"value":703},"输出：0\n",{"type":569,"tag":570,"props":705,"children":706},{},[707],{"type":574,"value":708},"提示：",{"type":569,"tag":710,"props":711,"children":712},"ul",{},[713],{"type":569,"tag":714,"props":715,"children":716},"li",{},[717],{"type":574,"value":718},"-2^31 \u003C= x \u003C= 2^31 - 1",{"type":569,"tag":720,"props":721,"children":723},"h2",{"id":722},"解题思路",[724],{"type":574,"value":722},{"type":569,"tag":720,"props":726,"children":728},{"id":727},"实现",[729],{"type":574,"value":727},{"type":569,"tag":591,"props":731,"children":735},{"className":732,"code":733,"language":734,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar reverse = function (x) {\n  let y = parseInt(x.toString().split(\"\").reverse().join(\"\"));\n  if (y \u003C Math.pow(-2, 31) || y > Math.pow(2, 31)) {\n    return 0;\n  }\n  return x \u003C 0 ? -y : y;\n};\n","js",[736],{"type":569,"tag":597,"props":737,"children":738},{"__ignoreMap":562},[739,748,790,820,829,875,969,1086,1105,1114,1163],{"type":569,"tag":601,"props":740,"children":741},{"class":603,"line":604},[742],{"type":569,"tag":601,"props":743,"children":745},{"style":744},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[746],{"type":574,"value":747},"/**\n",{"type":569,"tag":601,"props":749,"children":750},{"class":603,"line":613},[751,756,762,768,773,779,784],{"type":569,"tag":601,"props":752,"children":753},{"style":744},[754],{"type":574,"value":755}," * ",{"type":569,"tag":601,"props":757,"children":759},{"style":758},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[760],{"type":574,"value":761},"@",{"type":569,"tag":601,"props":763,"children":765},{"style":764},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[766],{"type":574,"value":767},"param",{"type":569,"tag":601,"props":769,"children":770},{"style":758},[771],{"type":574,"value":772}," {",{"type":569,"tag":601,"props":774,"children":776},{"style":775},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[777],{"type":574,"value":778},"number",{"type":569,"tag":601,"props":780,"children":781},{"style":758},[782],{"type":574,"value":783},"}",{"type":569,"tag":601,"props":785,"children":787},{"style":786},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[788],{"type":574,"value":789}," x\n",{"type":569,"tag":601,"props":791,"children":793},{"class":603,"line":792},3,[794,798,802,807,811,815],{"type":569,"tag":601,"props":795,"children":796},{"style":744},[797],{"type":574,"value":755},{"type":569,"tag":601,"props":799,"children":800},{"style":758},[801],{"type":574,"value":761},{"type":569,"tag":601,"props":803,"children":804},{"style":764},[805],{"type":574,"value":806},"return",{"type":569,"tag":601,"props":808,"children":809},{"style":758},[810],{"type":574,"value":772},{"type":569,"tag":601,"props":812,"children":813},{"style":775},[814],{"type":574,"value":778},{"type":569,"tag":601,"props":816,"children":817},{"style":758},[818],{"type":574,"value":819},"}\n",{"type":569,"tag":601,"props":821,"children":823},{"class":603,"line":822},4,[824],{"type":569,"tag":601,"props":825,"children":826},{"style":744},[827],{"type":574,"value":828}," */\n",{"type":569,"tag":601,"props":830,"children":832},{"class":603,"line":831},5,[833,839,845,850,855,860,865,870],{"type":569,"tag":601,"props":834,"children":836},{"style":835},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[837],{"type":574,"value":838},"var",{"type":569,"tag":601,"props":840,"children":842},{"style":841},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[843],{"type":574,"value":844}," reverse",{"type":569,"tag":601,"props":846,"children":847},{"style":758},[848],{"type":574,"value":849}," =",{"type":569,"tag":601,"props":851,"children":852},{"style":835},[853],{"type":574,"value":854}," function",{"type":569,"tag":601,"props":856,"children":857},{"style":758},[858],{"type":574,"value":859}," (",{"type":569,"tag":601,"props":861,"children":862},{"style":786},[863],{"type":574,"value":864},"x",{"type":569,"tag":601,"props":866,"children":867},{"style":758},[868],{"type":574,"value":869},")",{"type":569,"tag":601,"props":871,"children":872},{"style":758},[873],{"type":574,"value":874}," {\n",{"type":569,"tag":601,"props":876,"children":878},{"class":603,"line":877},6,[879,884,889,893,898,903,907,912,917,922,927,931,937,942,947,951,956,960,964],{"type":569,"tag":601,"props":880,"children":881},{"style":835},[882],{"type":574,"value":883},"  let",{"type":569,"tag":601,"props":885,"children":886},{"style":786},[887],{"type":574,"value":888}," y",{"type":569,"tag":601,"props":890,"children":891},{"style":758},[892],{"type":574,"value":849},{"type":569,"tag":601,"props":894,"children":895},{"style":841},[896],{"type":574,"value":897}," parseInt",{"type":569,"tag":601,"props":899,"children":900},{"style":758},[901],{"type":574,"value":902},"(",{"type":569,"tag":601,"props":904,"children":905},{"style":786},[906],{"type":574,"value":864},{"type":569,"tag":601,"props":908,"children":909},{"style":758},[910],{"type":574,"value":911},".",{"type":569,"tag":601,"props":913,"children":914},{"style":841},[915],{"type":574,"value":916},"toString",{"type":569,"tag":601,"props":918,"children":919},{"style":758},[920],{"type":574,"value":921},"().",{"type":569,"tag":601,"props":923,"children":924},{"style":841},[925],{"type":574,"value":926},"split",{"type":569,"tag":601,"props":928,"children":929},{"style":758},[930],{"type":574,"value":902},{"type":569,"tag":601,"props":932,"children":934},{"style":933},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[935],{"type":574,"value":936},"\"\"",{"type":569,"tag":601,"props":938,"children":939},{"style":758},[940],{"type":574,"value":941},").",{"type":569,"tag":601,"props":943,"children":944},{"style":841},[945],{"type":574,"value":946},"reverse",{"type":569,"tag":601,"props":948,"children":949},{"style":758},[950],{"type":574,"value":921},{"type":569,"tag":601,"props":952,"children":953},{"style":841},[954],{"type":574,"value":955},"join",{"type":569,"tag":601,"props":957,"children":958},{"style":758},[959],{"type":574,"value":902},{"type":569,"tag":601,"props":961,"children":962},{"style":933},[963],{"type":574,"value":936},{"type":569,"tag":601,"props":965,"children":966},{"style":758},[967],{"type":574,"value":968},"));\n",{"type":569,"tag":601,"props":970,"children":972},{"class":603,"line":971},7,[973,978,982,987,992,997,1001,1006,1010,1015,1021,1026,1031,1035,1040,1044,1049,1053,1057,1061,1065,1069,1073,1077,1082],{"type":569,"tag":601,"props":974,"children":975},{"style":764},[976],{"type":574,"value":977},"  if",{"type":569,"tag":601,"props":979,"children":980},{"style":758},[981],{"type":574,"value":859},{"type":569,"tag":601,"props":983,"children":984},{"style":786},[985],{"type":574,"value":986},"y",{"type":569,"tag":601,"props":988,"children":989},{"style":758},[990],{"type":574,"value":991}," \u003C",{"type":569,"tag":601,"props":993,"children":994},{"style":786},[995],{"type":574,"value":996}," Math",{"type":569,"tag":601,"props":998,"children":999},{"style":758},[1000],{"type":574,"value":911},{"type":569,"tag":601,"props":1002,"children":1003},{"style":841},[1004],{"type":574,"value":1005},"pow",{"type":569,"tag":601,"props":1007,"children":1008},{"style":758},[1009],{"type":574,"value":902},{"type":569,"tag":601,"props":1011,"children":1012},{"style":835},[1013],{"type":574,"value":1014},"-",{"type":569,"tag":601,"props":1016,"children":1018},{"style":1017},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1019],{"type":574,"value":1020},"2",{"type":569,"tag":601,"props":1022,"children":1023},{"style":758},[1024],{"type":574,"value":1025},",",{"type":569,"tag":601,"props":1027,"children":1028},{"style":1017},[1029],{"type":574,"value":1030}," 31",{"type":569,"tag":601,"props":1032,"children":1033},{"style":758},[1034],{"type":574,"value":869},{"type":569,"tag":601,"props":1036,"children":1037},{"style":835},[1038],{"type":574,"value":1039}," ||",{"type":569,"tag":601,"props":1041,"children":1042},{"style":786},[1043],{"type":574,"value":888},{"type":569,"tag":601,"props":1045,"children":1046},{"style":758},[1047],{"type":574,"value":1048}," >",{"type":569,"tag":601,"props":1050,"children":1051},{"style":786},[1052],{"type":574,"value":996},{"type":569,"tag":601,"props":1054,"children":1055},{"style":758},[1056],{"type":574,"value":911},{"type":569,"tag":601,"props":1058,"children":1059},{"style":841},[1060],{"type":574,"value":1005},{"type":569,"tag":601,"props":1062,"children":1063},{"style":758},[1064],{"type":574,"value":902},{"type":569,"tag":601,"props":1066,"children":1067},{"style":1017},[1068],{"type":574,"value":1020},{"type":569,"tag":601,"props":1070,"children":1071},{"style":758},[1072],{"type":574,"value":1025},{"type":569,"tag":601,"props":1074,"children":1075},{"style":1017},[1076],{"type":574,"value":1030},{"type":569,"tag":601,"props":1078,"children":1079},{"style":758},[1080],{"type":574,"value":1081},"))",{"type":569,"tag":601,"props":1083,"children":1084},{"style":758},[1085],{"type":574,"value":874},{"type":569,"tag":601,"props":1087,"children":1089},{"class":603,"line":1088},8,[1090,1095,1100],{"type":569,"tag":601,"props":1091,"children":1092},{"style":764},[1093],{"type":574,"value":1094},"    return",{"type":569,"tag":601,"props":1096,"children":1097},{"style":1017},[1098],{"type":574,"value":1099}," 0",{"type":569,"tag":601,"props":1101,"children":1102},{"style":758},[1103],{"type":574,"value":1104},";\n",{"type":569,"tag":601,"props":1106,"children":1108},{"class":603,"line":1107},9,[1109],{"type":569,"tag":601,"props":1110,"children":1111},{"style":758},[1112],{"type":574,"value":1113},"  }\n",{"type":569,"tag":601,"props":1115,"children":1117},{"class":603,"line":1116},10,[1118,1123,1128,1132,1136,1141,1146,1150,1155,1159],{"type":569,"tag":601,"props":1119,"children":1120},{"style":764},[1121],{"type":574,"value":1122},"  return",{"type":569,"tag":601,"props":1124,"children":1125},{"style":786},[1126],{"type":574,"value":1127}," x",{"type":569,"tag":601,"props":1129,"children":1130},{"style":758},[1131],{"type":574,"value":991},{"type":569,"tag":601,"props":1133,"children":1134},{"style":1017},[1135],{"type":574,"value":1099},{"type":569,"tag":601,"props":1137,"children":1138},{"style":835},[1139],{"type":574,"value":1140}," ?",{"type":569,"tag":601,"props":1142,"children":1143},{"style":835},[1144],{"type":574,"value":1145}," -",{"type":569,"tag":601,"props":1147,"children":1148},{"style":786},[1149],{"type":574,"value":986},{"type":569,"tag":601,"props":1151,"children":1152},{"style":835},[1153],{"type":574,"value":1154}," :",{"type":569,"tag":601,"props":1156,"children":1157},{"style":786},[1158],{"type":574,"value":888},{"type":569,"tag":601,"props":1160,"children":1161},{"style":758},[1162],{"type":574,"value":1104},{"type":569,"tag":601,"props":1164,"children":1166},{"class":603,"line":1165},11,[1167],{"type":569,"tag":601,"props":1168,"children":1169},{"style":758},[1170],{"type":574,"value":1171},"};\n",{"type":569,"tag":1173,"props":1174,"children":1175},"style",{},[1176],{"type":574,"value":1177},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":831,"depth":831,"links":1179},[1180,1181],{"id":722,"depth":613,"text":722},{"id":727,"depth":613,"text":727},"markdown","content:1.algorithm:3.leetcode:3.major:7.reverse-integer.md","content","1.algorithm/3.leetcode/3.major/7.reverse-integer.md","md",[1188,1190],{"_path":72,"title":71,"description":1189},"给你一个字符串 s，找到 s 中最长的回文\n子串\n。",{"_path":78,"title":77,"description":1191},"给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。",1717735568340]