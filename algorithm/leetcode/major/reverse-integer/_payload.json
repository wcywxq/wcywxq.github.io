[{"data":1,"prerenderedAt":1084},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/reverse-integer":460,"/algorithm/leetcode/major/reverse-integer-surround":1079},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":69,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":68,"description":464,"url":465,"body":466,"_type":1074,"_id":1075,"_source":1076,"_file":1077,"_extension":1078},"major",false,"","给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。","https://leetcode.cn/problems/reverse-integer",{"type":467,"children":468,"toc":1070},"root",[469,476,481,486,491,521,526,549,554,577,582,605,610,620,626,631,1064],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"如果反转后整数超过 32 位的有符号整数的范围 [−2^31, 2^31 − 1] ，就返回 0。",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"假设环境不允许存储 64 位整数（有符号或无符号）。",{"type":470,"tag":471,"props":487,"children":488},{},[489],{"type":475,"value":490},"示例 1：",{"type":470,"tag":492,"props":493,"children":496},"pre",{"className":494,"code":495,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：x = 123\n输出：321\n",[497],{"type":470,"tag":498,"props":499,"children":500},"code",{"__ignoreMap":463},[501,512],{"type":470,"tag":502,"props":503,"children":506},"span",{"class":504,"line":505},"line",1,[507],{"type":470,"tag":502,"props":508,"children":509},{},[510],{"type":475,"value":511},"输入：x = 123\n",{"type":470,"tag":502,"props":513,"children":515},{"class":504,"line":514},2,[516],{"type":470,"tag":502,"props":517,"children":518},{},[519],{"type":475,"value":520},"输出：321\n",{"type":470,"tag":471,"props":522,"children":523},{},[524],{"type":475,"value":525},"示例 2：",{"type":470,"tag":492,"props":527,"children":529},{"className":494,"code":528,"language":475,"meta":463,"style":463},"输入：x = -123\n输出：-321\n",[530],{"type":470,"tag":498,"props":531,"children":532},{"__ignoreMap":463},[533,541],{"type":470,"tag":502,"props":534,"children":535},{"class":504,"line":505},[536],{"type":470,"tag":502,"props":537,"children":538},{},[539],{"type":475,"value":540},"输入：x = -123\n",{"type":470,"tag":502,"props":542,"children":543},{"class":504,"line":514},[544],{"type":470,"tag":502,"props":545,"children":546},{},[547],{"type":475,"value":548},"输出：-321\n",{"type":470,"tag":471,"props":550,"children":551},{},[552],{"type":475,"value":553},"示例 3：",{"type":470,"tag":492,"props":555,"children":557},{"className":494,"code":556,"language":475,"meta":463,"style":463},"输入：x = 120\n输出：21\n",[558],{"type":470,"tag":498,"props":559,"children":560},{"__ignoreMap":463},[561,569],{"type":470,"tag":502,"props":562,"children":563},{"class":504,"line":505},[564],{"type":470,"tag":502,"props":565,"children":566},{},[567],{"type":475,"value":568},"输入：x = 120\n",{"type":470,"tag":502,"props":570,"children":571},{"class":504,"line":514},[572],{"type":470,"tag":502,"props":573,"children":574},{},[575],{"type":475,"value":576},"输出：21\n",{"type":470,"tag":471,"props":578,"children":579},{},[580],{"type":475,"value":581},"示例 4：",{"type":470,"tag":492,"props":583,"children":585},{"className":494,"code":584,"language":475,"meta":463,"style":463},"输入：x = 0\n输出：0\n",[586],{"type":470,"tag":498,"props":587,"children":588},{"__ignoreMap":463},[589,597],{"type":470,"tag":502,"props":590,"children":591},{"class":504,"line":505},[592],{"type":470,"tag":502,"props":593,"children":594},{},[595],{"type":475,"value":596},"输入：x = 0\n",{"type":470,"tag":502,"props":598,"children":599},{"class":504,"line":514},[600],{"type":470,"tag":502,"props":601,"children":602},{},[603],{"type":475,"value":604},"输出：0\n",{"type":470,"tag":471,"props":606,"children":607},{},[608],{"type":475,"value":609},"提示：",{"type":470,"tag":611,"props":612,"children":613},"ul",{},[614],{"type":470,"tag":615,"props":616,"children":617},"li",{},[618],{"type":475,"value":619},"-2^31 \u003C= x \u003C= 2^31 - 1",{"type":470,"tag":621,"props":622,"children":624},"h2",{"id":623},"解题思路",[625],{"type":475,"value":623},{"type":470,"tag":621,"props":627,"children":629},{"id":628},"实现",[630],{"type":475,"value":628},{"type":470,"tag":492,"props":632,"children":636},{"className":633,"code":634,"language":635,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number} x\n * @return {number}\n */\nvar reverse = function (x) {\n  let y = parseInt(x.toString().split(\"\").reverse().join(\"\"));\n  if (y \u003C Math.pow(-2, 31) || y > Math.pow(2, 31)) {\n    return 0;\n  }\n  return x \u003C 0 ? -y : y;\n};\n","js",[637],{"type":470,"tag":498,"props":638,"children":639},{"__ignoreMap":463},[640,649,675,693,702,746,860,975,993,1002,1051],{"type":470,"tag":502,"props":641,"children":642},{"class":504,"line":505},[643],{"type":470,"tag":502,"props":644,"children":646},{"style":645},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[647],{"type":475,"value":648},"/**\n",{"type":470,"tag":502,"props":650,"children":651},{"class":504,"line":514},[652,657,663,669],{"type":470,"tag":502,"props":653,"children":654},{"style":645},[655],{"type":475,"value":656}," * ",{"type":470,"tag":502,"props":658,"children":660},{"style":659},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[661],{"type":475,"value":662},"@param",{"type":470,"tag":502,"props":664,"children":666},{"style":665},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[667],{"type":475,"value":668}," {number}",{"type":470,"tag":502,"props":670,"children":672},{"style":671},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[673],{"type":475,"value":674}," x\n",{"type":470,"tag":502,"props":676,"children":678},{"class":504,"line":677},3,[679,683,688],{"type":470,"tag":502,"props":680,"children":681},{"style":645},[682],{"type":475,"value":656},{"type":470,"tag":502,"props":684,"children":685},{"style":659},[686],{"type":475,"value":687},"@return",{"type":470,"tag":502,"props":689,"children":690},{"style":665},[691],{"type":475,"value":692}," {number}\n",{"type":470,"tag":502,"props":694,"children":696},{"class":504,"line":695},4,[697],{"type":470,"tag":502,"props":698,"children":699},{"style":645},[700],{"type":475,"value":701}," */\n",{"type":470,"tag":502,"props":703,"children":705},{"class":504,"line":704},5,[706,712,718,724,729,735,741],{"type":470,"tag":502,"props":707,"children":709},{"style":708},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[710],{"type":475,"value":711},"var",{"type":470,"tag":502,"props":713,"children":715},{"style":714},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[716],{"type":475,"value":717}," reverse",{"type":470,"tag":502,"props":719,"children":721},{"style":720},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[722],{"type":475,"value":723}," =",{"type":470,"tag":502,"props":725,"children":726},{"style":708},[727],{"type":475,"value":728}," function",{"type":470,"tag":502,"props":730,"children":732},{"style":731},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[733],{"type":475,"value":734}," (",{"type":470,"tag":502,"props":736,"children":738},{"style":737},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[739],{"type":475,"value":740},"x",{"type":470,"tag":502,"props":742,"children":743},{"style":731},[744],{"type":475,"value":745},") {\n",{"type":470,"tag":502,"props":747,"children":749},{"class":504,"line":748},6,[750,755,761,765,770,775,779,785,790,795,799,804,808,814,819,823,828,832,836,841,845,849,854],{"type":470,"tag":502,"props":751,"children":752},{"style":708},[753],{"type":475,"value":754},"  let",{"type":470,"tag":502,"props":756,"children":758},{"style":757},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[759],{"type":475,"value":760}," y",{"type":470,"tag":502,"props":762,"children":763},{"style":720},[764],{"type":475,"value":723},{"type":470,"tag":502,"props":766,"children":767},{"style":714},[768],{"type":475,"value":769}," parseInt",{"type":470,"tag":502,"props":771,"children":772},{"style":731},[773],{"type":475,"value":774},"(",{"type":470,"tag":502,"props":776,"children":777},{"style":757},[778],{"type":475,"value":740},{"type":470,"tag":502,"props":780,"children":782},{"style":781},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[783],{"type":475,"value":784},".",{"type":470,"tag":502,"props":786,"children":787},{"style":714},[788],{"type":475,"value":789},"toString",{"type":470,"tag":502,"props":791,"children":792},{"style":731},[793],{"type":475,"value":794},"()",{"type":470,"tag":502,"props":796,"children":797},{"style":781},[798],{"type":475,"value":784},{"type":470,"tag":502,"props":800,"children":801},{"style":714},[802],{"type":475,"value":803},"split",{"type":470,"tag":502,"props":805,"children":806},{"style":731},[807],{"type":475,"value":774},{"type":470,"tag":502,"props":809,"children":811},{"style":810},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[812],{"type":475,"value":813},"\"\"",{"type":470,"tag":502,"props":815,"children":816},{"style":731},[817],{"type":475,"value":818},")",{"type":470,"tag":502,"props":820,"children":821},{"style":781},[822],{"type":475,"value":784},{"type":470,"tag":502,"props":824,"children":825},{"style":714},[826],{"type":475,"value":827},"reverse",{"type":470,"tag":502,"props":829,"children":830},{"style":731},[831],{"type":475,"value":794},{"type":470,"tag":502,"props":833,"children":834},{"style":781},[835],{"type":475,"value":784},{"type":470,"tag":502,"props":837,"children":838},{"style":714},[839],{"type":475,"value":840},"join",{"type":470,"tag":502,"props":842,"children":843},{"style":731},[844],{"type":475,"value":774},{"type":470,"tag":502,"props":846,"children":847},{"style":810},[848],{"type":475,"value":813},{"type":470,"tag":502,"props":850,"children":851},{"style":731},[852],{"type":475,"value":853},"))",{"type":470,"tag":502,"props":855,"children":857},{"style":856},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[858],{"type":475,"value":859},";\n",{"type":470,"tag":502,"props":861,"children":863},{"class":504,"line":862},7,[864,870,874,879,884,889,893,898,902,907,913,918,923,928,933,937,942,946,950,954,958,962,966,970],{"type":470,"tag":502,"props":865,"children":867},{"style":866},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[868],{"type":475,"value":869},"  if",{"type":470,"tag":502,"props":871,"children":872},{"style":731},[873],{"type":475,"value":734},{"type":470,"tag":502,"props":875,"children":876},{"style":757},[877],{"type":475,"value":878},"y",{"type":470,"tag":502,"props":880,"children":881},{"style":720},[882],{"type":475,"value":883}," \u003C",{"type":470,"tag":502,"props":885,"children":886},{"style":757},[887],{"type":475,"value":888}," Math",{"type":470,"tag":502,"props":890,"children":891},{"style":781},[892],{"type":475,"value":784},{"type":470,"tag":502,"props":894,"children":895},{"style":714},[896],{"type":475,"value":897},"pow",{"type":470,"tag":502,"props":899,"children":900},{"style":731},[901],{"type":475,"value":774},{"type":470,"tag":502,"props":903,"children":904},{"style":720},[905],{"type":475,"value":906},"-",{"type":470,"tag":502,"props":908,"children":910},{"style":909},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[911],{"type":475,"value":912},"2",{"type":470,"tag":502,"props":914,"children":915},{"style":856},[916],{"type":475,"value":917},",",{"type":470,"tag":502,"props":919,"children":920},{"style":909},[921],{"type":475,"value":922}," 31",{"type":470,"tag":502,"props":924,"children":925},{"style":731},[926],{"type":475,"value":927},") ",{"type":470,"tag":502,"props":929,"children":930},{"style":720},[931],{"type":475,"value":932},"||",{"type":470,"tag":502,"props":934,"children":935},{"style":757},[936],{"type":475,"value":760},{"type":470,"tag":502,"props":938,"children":939},{"style":720},[940],{"type":475,"value":941}," >",{"type":470,"tag":502,"props":943,"children":944},{"style":757},[945],{"type":475,"value":888},{"type":470,"tag":502,"props":947,"children":948},{"style":781},[949],{"type":475,"value":784},{"type":470,"tag":502,"props":951,"children":952},{"style":714},[953],{"type":475,"value":897},{"type":470,"tag":502,"props":955,"children":956},{"style":731},[957],{"type":475,"value":774},{"type":470,"tag":502,"props":959,"children":960},{"style":909},[961],{"type":475,"value":912},{"type":470,"tag":502,"props":963,"children":964},{"style":856},[965],{"type":475,"value":917},{"type":470,"tag":502,"props":967,"children":968},{"style":909},[969],{"type":475,"value":922},{"type":470,"tag":502,"props":971,"children":972},{"style":731},[973],{"type":475,"value":974},")) {\n",{"type":470,"tag":502,"props":976,"children":978},{"class":504,"line":977},8,[979,984,989],{"type":470,"tag":502,"props":980,"children":981},{"style":866},[982],{"type":475,"value":983},"    return",{"type":470,"tag":502,"props":985,"children":986},{"style":909},[987],{"type":475,"value":988}," 0",{"type":470,"tag":502,"props":990,"children":991},{"style":856},[992],{"type":475,"value":859},{"type":470,"tag":502,"props":994,"children":996},{"class":504,"line":995},9,[997],{"type":470,"tag":502,"props":998,"children":999},{"style":731},[1000],{"type":475,"value":1001},"  }\n",{"type":470,"tag":502,"props":1003,"children":1005},{"class":504,"line":1004},10,[1006,1011,1016,1020,1024,1029,1034,1038,1043,1047],{"type":470,"tag":502,"props":1007,"children":1008},{"style":866},[1009],{"type":475,"value":1010},"  return",{"type":470,"tag":502,"props":1012,"children":1013},{"style":757},[1014],{"type":475,"value":1015}," x",{"type":470,"tag":502,"props":1017,"children":1018},{"style":720},[1019],{"type":475,"value":883},{"type":470,"tag":502,"props":1021,"children":1022},{"style":909},[1023],{"type":475,"value":988},{"type":470,"tag":502,"props":1025,"children":1026},{"style":720},[1027],{"type":475,"value":1028}," ?",{"type":470,"tag":502,"props":1030,"children":1031},{"style":720},[1032],{"type":475,"value":1033}," -",{"type":470,"tag":502,"props":1035,"children":1036},{"style":757},[1037],{"type":475,"value":878},{"type":470,"tag":502,"props":1039,"children":1040},{"style":720},[1041],{"type":475,"value":1042}," :",{"type":470,"tag":502,"props":1044,"children":1045},{"style":757},[1046],{"type":475,"value":760},{"type":470,"tag":502,"props":1048,"children":1049},{"style":856},[1050],{"type":475,"value":859},{"type":470,"tag":502,"props":1052,"children":1054},{"class":504,"line":1053},11,[1055,1060],{"type":470,"tag":502,"props":1056,"children":1057},{"style":731},[1058],{"type":475,"value":1059},"}",{"type":470,"tag":502,"props":1061,"children":1062},{"style":856},[1063],{"type":475,"value":859},{"type":470,"tag":1065,"props":1066,"children":1067},"style",{},[1068],{"type":475,"value":1069},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":704,"depth":704,"links":1071},[1072,1073],{"id":623,"depth":514,"text":623},{"id":628,"depth":514,"text":628},"markdown","content:1.algorithm:3.leetcode:3.major:7.reverse-integer.md","content","1.algorithm/3.leetcode/3.major/7.reverse-integer.md","md",[1080,1082],{"_path":66,"title":65,"description":1081},"给你一个字符串 s，找到 s 中最长的回文\n子串\n。",{"_path":72,"title":71,"description":1083},"给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。",1713626051449]