[{"data":1,"prerenderedAt":1610},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":549,"/algorithm/leetcode/major/next-permutation-surround":1605},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":105,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":104,"description":553,"url":554,"body":555,"_type":1600,"_id":1601,"_source":1602,"_file":1603,"_extension":1604},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":556,"children":557,"toc":1594},"root",[558,565,575,580,598,603,608,613,643,648,671,676,699,704,717,723,728,734,1588],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":566,"props":567,"children":568},"ul",{},[569],{"type":559,"tag":570,"props":571,"children":572},"li",{},[573],{"type":564,"value":574},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":559,"tag":560,"props":576,"children":577},{},[578],{"type":564,"value":579},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":559,"tag":566,"props":581,"children":582},{},[583,588,593],{"type":559,"tag":570,"props":584,"children":585},{},[586],{"type":564,"value":587},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":559,"tag":570,"props":589,"children":590},{},[591],{"type":564,"value":592},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":559,"tag":570,"props":594,"children":595},{},[596],{"type":564,"value":597},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":559,"tag":560,"props":599,"children":600},{},[601],{"type":564,"value":602},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":559,"tag":560,"props":604,"children":605},{},[606],{"type":564,"value":607},"必须 原地 修改，只允许使用额外常数空间。",{"type":559,"tag":560,"props":609,"children":610},{},[611],{"type":564,"value":612},"示例 1：",{"type":559,"tag":614,"props":615,"children":618},"pre",{"className":616,"code":617,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[619],{"type":559,"tag":620,"props":621,"children":622},"code",{"__ignoreMap":552},[623,634],{"type":559,"tag":624,"props":625,"children":628},"span",{"class":626,"line":627},"line",1,[629],{"type":559,"tag":624,"props":630,"children":631},{},[632],{"type":564,"value":633},"输入：nums = [1,2,3]\n",{"type":559,"tag":624,"props":635,"children":637},{"class":626,"line":636},2,[638],{"type":559,"tag":624,"props":639,"children":640},{},[641],{"type":564,"value":642},"输出：[1,3,2]\n",{"type":559,"tag":560,"props":644,"children":645},{},[646],{"type":564,"value":647},"示例 2：",{"type":559,"tag":614,"props":649,"children":651},{"className":616,"code":650,"language":564,"meta":552,"style":552},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[652],{"type":559,"tag":620,"props":653,"children":654},{"__ignoreMap":552},[655,663],{"type":559,"tag":624,"props":656,"children":657},{"class":626,"line":627},[658],{"type":559,"tag":624,"props":659,"children":660},{},[661],{"type":564,"value":662},"输入：nums = [3,2,1]\n",{"type":559,"tag":624,"props":664,"children":665},{"class":626,"line":636},[666],{"type":559,"tag":624,"props":667,"children":668},{},[669],{"type":564,"value":670},"输出：[1,2,3]\n",{"type":559,"tag":560,"props":672,"children":673},{},[674],{"type":564,"value":675},"示例 3：",{"type":559,"tag":614,"props":677,"children":679},{"className":616,"code":678,"language":564,"meta":552,"style":552},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[680],{"type":559,"tag":620,"props":681,"children":682},{"__ignoreMap":552},[683,691],{"type":559,"tag":624,"props":684,"children":685},{"class":626,"line":627},[686],{"type":559,"tag":624,"props":687,"children":688},{},[689],{"type":564,"value":690},"输入：nums = [1,1,5]\n",{"type":559,"tag":624,"props":692,"children":693},{"class":626,"line":636},[694],{"type":559,"tag":624,"props":695,"children":696},{},[697],{"type":564,"value":698},"输出：[1,5,1]\n",{"type":559,"tag":560,"props":700,"children":701},{},[702],{"type":564,"value":703},"提示：",{"type":559,"tag":566,"props":705,"children":706},{},[707,712],{"type":559,"tag":570,"props":708,"children":709},{},[710],{"type":564,"value":711},"1 \u003C= nums.length \u003C= 100",{"type":559,"tag":570,"props":713,"children":714},{},[715],{"type":564,"value":716},"0 \u003C= nums[i] \u003C= 100",{"type":559,"tag":718,"props":719,"children":721},"h2",{"id":720},"解题思路",[722],{"type":564,"value":720},{"type":559,"tag":718,"props":724,"children":726},{"id":725},"实现",[727],{"type":564,"value":725},{"type":559,"tag":729,"props":730,"children":732},"h3",{"id":731},"双指针",[733],{"type":564,"value":731},{"type":559,"tag":614,"props":735,"children":739},{"className":736,"code":737,"language":738,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[740],{"type":559,"tag":620,"props":741,"children":742},{"__ignoreMap":552},[743,752,794,829,838,884,893,943,1029,1047,1056,1065,1098,1140,1210,1227,1236,1245,1330,1338,1347,1380,1421,1455,1536,1554,1571,1579],{"type":559,"tag":624,"props":744,"children":745},{"class":626,"line":627},[746],{"type":559,"tag":624,"props":747,"children":749},{"style":748},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[750],{"type":564,"value":751},"/**\n",{"type":559,"tag":624,"props":753,"children":754},{"class":626,"line":636},[755,760,766,772,777,783,788],{"type":559,"tag":624,"props":756,"children":757},{"style":748},[758],{"type":564,"value":759}," * ",{"type":559,"tag":624,"props":761,"children":763},{"style":762},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[764],{"type":564,"value":765},"@",{"type":559,"tag":624,"props":767,"children":769},{"style":768},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[770],{"type":564,"value":771},"param",{"type":559,"tag":624,"props":773,"children":774},{"style":762},[775],{"type":564,"value":776}," {",{"type":559,"tag":624,"props":778,"children":780},{"style":779},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[781],{"type":564,"value":782},"number[]",{"type":559,"tag":624,"props":784,"children":785},{"style":762},[786],{"type":564,"value":787},"}",{"type":559,"tag":624,"props":789,"children":791},{"style":790},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[792],{"type":564,"value":793}," nums\n",{"type":559,"tag":624,"props":795,"children":797},{"class":626,"line":796},3,[798,802,806,811,815,820,824],{"type":559,"tag":624,"props":799,"children":800},{"style":748},[801],{"type":564,"value":759},{"type":559,"tag":624,"props":803,"children":804},{"style":762},[805],{"type":564,"value":765},{"type":559,"tag":624,"props":807,"children":808},{"style":768},[809],{"type":564,"value":810},"return",{"type":559,"tag":624,"props":812,"children":813},{"style":762},[814],{"type":564,"value":776},{"type":559,"tag":624,"props":816,"children":817},{"style":779},[818],{"type":564,"value":819},"void",{"type":559,"tag":624,"props":821,"children":822},{"style":762},[823],{"type":564,"value":787},{"type":559,"tag":624,"props":825,"children":826},{"style":748},[827],{"type":564,"value":828}," Do not return anything, modify nums in-place instead.\n",{"type":559,"tag":624,"props":830,"children":832},{"class":626,"line":831},4,[833],{"type":559,"tag":624,"props":834,"children":835},{"style":748},[836],{"type":564,"value":837}," */\n",{"type":559,"tag":624,"props":839,"children":841},{"class":626,"line":840},5,[842,848,854,859,864,869,874,879],{"type":559,"tag":624,"props":843,"children":845},{"style":844},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[846],{"type":564,"value":847},"var",{"type":559,"tag":624,"props":849,"children":851},{"style":850},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[852],{"type":564,"value":853}," nextPermutation",{"type":559,"tag":624,"props":855,"children":856},{"style":762},[857],{"type":564,"value":858}," =",{"type":559,"tag":624,"props":860,"children":861},{"style":844},[862],{"type":564,"value":863}," function",{"type":559,"tag":624,"props":865,"children":866},{"style":762},[867],{"type":564,"value":868}," (",{"type":559,"tag":624,"props":870,"children":871},{"style":790},[872],{"type":564,"value":873},"nums",{"type":559,"tag":624,"props":875,"children":876},{"style":762},[877],{"type":564,"value":878},")",{"type":559,"tag":624,"props":880,"children":881},{"style":762},[882],{"type":564,"value":883}," {\n",{"type":559,"tag":624,"props":885,"children":887},{"class":626,"line":886},6,[888],{"type":559,"tag":624,"props":889,"children":890},{"style":748},[891],{"type":564,"value":892},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":559,"tag":624,"props":894,"children":896},{"class":626,"line":895},7,[897,902,907,911,916,921,927,932,938],{"type":559,"tag":624,"props":898,"children":899},{"style":844},[900],{"type":564,"value":901},"  let",{"type":559,"tag":624,"props":903,"children":904},{"style":790},[905],{"type":564,"value":906}," i",{"type":559,"tag":624,"props":908,"children":909},{"style":762},[910],{"type":564,"value":858},{"type":559,"tag":624,"props":912,"children":913},{"style":790},[914],{"type":564,"value":915}," nums",{"type":559,"tag":624,"props":917,"children":918},{"style":762},[919],{"type":564,"value":920},".",{"type":559,"tag":624,"props":922,"children":924},{"style":923},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[925],{"type":564,"value":926},"length",{"type":559,"tag":624,"props":928,"children":929},{"style":844},[930],{"type":564,"value":931}," -",{"type":559,"tag":624,"props":933,"children":935},{"style":934},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[936],{"type":564,"value":937}," 2",{"type":559,"tag":624,"props":939,"children":940},{"style":762},[941],{"type":564,"value":942},";\n",{"type":559,"tag":624,"props":944,"children":946},{"class":626,"line":945},8,[947,952,956,961,966,971,976,980,985,989,994,998,1002,1006,1010,1015,1020,1025],{"type":559,"tag":624,"props":948,"children":949},{"style":768},[950],{"type":564,"value":951},"  while",{"type":559,"tag":624,"props":953,"children":954},{"style":762},[955],{"type":564,"value":868},{"type":559,"tag":624,"props":957,"children":958},{"style":790},[959],{"type":564,"value":960},"i",{"type":559,"tag":624,"props":962,"children":963},{"style":762},[964],{"type":564,"value":965}," >=",{"type":559,"tag":624,"props":967,"children":968},{"style":934},[969],{"type":564,"value":970}," 0",{"type":559,"tag":624,"props":972,"children":973},{"style":844},[974],{"type":564,"value":975}," &&",{"type":559,"tag":624,"props":977,"children":978},{"style":790},[979],{"type":564,"value":915},{"type":559,"tag":624,"props":981,"children":982},{"style":762},[983],{"type":564,"value":984},"[",{"type":559,"tag":624,"props":986,"children":987},{"style":790},[988],{"type":564,"value":960},{"type":559,"tag":624,"props":990,"children":991},{"style":762},[992],{"type":564,"value":993},"]",{"type":559,"tag":624,"props":995,"children":996},{"style":762},[997],{"type":564,"value":965},{"type":559,"tag":624,"props":999,"children":1000},{"style":790},[1001],{"type":564,"value":915},{"type":559,"tag":624,"props":1003,"children":1004},{"style":762},[1005],{"type":564,"value":984},{"type":559,"tag":624,"props":1007,"children":1008},{"style":790},[1009],{"type":564,"value":960},{"type":559,"tag":624,"props":1011,"children":1012},{"style":844},[1013],{"type":564,"value":1014}," +",{"type":559,"tag":624,"props":1016,"children":1017},{"style":934},[1018],{"type":564,"value":1019}," 1",{"type":559,"tag":624,"props":1021,"children":1022},{"style":762},[1023],{"type":564,"value":1024},"])",{"type":559,"tag":624,"props":1026,"children":1027},{"style":762},[1028],{"type":564,"value":883},{"type":559,"tag":624,"props":1030,"children":1032},{"class":626,"line":1031},9,[1033,1038,1043],{"type":559,"tag":624,"props":1034,"children":1035},{"style":790},[1036],{"type":564,"value":1037},"    i",{"type":559,"tag":624,"props":1039,"children":1040},{"style":844},[1041],{"type":564,"value":1042},"--",{"type":559,"tag":624,"props":1044,"children":1045},{"style":762},[1046],{"type":564,"value":942},{"type":559,"tag":624,"props":1048,"children":1050},{"class":626,"line":1049},10,[1051],{"type":559,"tag":624,"props":1052,"children":1053},{"style":762},[1054],{"type":564,"value":1055},"  }\n",{"type":559,"tag":624,"props":1057,"children":1059},{"class":626,"line":1058},11,[1060],{"type":559,"tag":624,"props":1061,"children":1062},{"style":748},[1063],{"type":564,"value":1064},"  // i 在数组中存在，进行交换\n",{"type":559,"tag":624,"props":1066,"children":1068},{"class":626,"line":1067},12,[1069,1074,1078,1082,1086,1090,1094],{"type":559,"tag":624,"props":1070,"children":1071},{"style":768},[1072],{"type":564,"value":1073},"  if",{"type":559,"tag":624,"props":1075,"children":1076},{"style":762},[1077],{"type":564,"value":868},{"type":559,"tag":624,"props":1079,"children":1080},{"style":790},[1081],{"type":564,"value":960},{"type":559,"tag":624,"props":1083,"children":1084},{"style":762},[1085],{"type":564,"value":965},{"type":559,"tag":624,"props":1087,"children":1088},{"style":934},[1089],{"type":564,"value":970},{"type":559,"tag":624,"props":1091,"children":1092},{"style":762},[1093],{"type":564,"value":878},{"type":559,"tag":624,"props":1095,"children":1096},{"style":762},[1097],{"type":564,"value":883},{"type":559,"tag":624,"props":1099,"children":1101},{"class":626,"line":1100},13,[1102,1107,1112,1116,1120,1124,1128,1132,1136],{"type":559,"tag":624,"props":1103,"children":1104},{"style":844},[1105],{"type":564,"value":1106},"    let",{"type":559,"tag":624,"props":1108,"children":1109},{"style":790},[1110],{"type":564,"value":1111}," j",{"type":559,"tag":624,"props":1113,"children":1114},{"style":762},[1115],{"type":564,"value":858},{"type":559,"tag":624,"props":1117,"children":1118},{"style":790},[1119],{"type":564,"value":915},{"type":559,"tag":624,"props":1121,"children":1122},{"style":762},[1123],{"type":564,"value":920},{"type":559,"tag":624,"props":1125,"children":1126},{"style":923},[1127],{"type":564,"value":926},{"type":559,"tag":624,"props":1129,"children":1130},{"style":844},[1131],{"type":564,"value":931},{"type":559,"tag":624,"props":1133,"children":1134},{"style":934},[1135],{"type":564,"value":1019},{"type":559,"tag":624,"props":1137,"children":1138},{"style":762},[1139],{"type":564,"value":942},{"type":559,"tag":624,"props":1141,"children":1143},{"class":626,"line":1142},14,[1144,1149,1153,1158,1162,1166,1170,1174,1178,1182,1186,1190,1194,1198,1202,1206],{"type":559,"tag":624,"props":1145,"children":1146},{"style":768},[1147],{"type":564,"value":1148},"    while",{"type":559,"tag":624,"props":1150,"children":1151},{"style":762},[1152],{"type":564,"value":868},{"type":559,"tag":624,"props":1154,"children":1155},{"style":790},[1156],{"type":564,"value":1157},"j",{"type":559,"tag":624,"props":1159,"children":1160},{"style":762},[1161],{"type":564,"value":965},{"type":559,"tag":624,"props":1163,"children":1164},{"style":934},[1165],{"type":564,"value":970},{"type":559,"tag":624,"props":1167,"children":1168},{"style":844},[1169],{"type":564,"value":975},{"type":559,"tag":624,"props":1171,"children":1172},{"style":790},[1173],{"type":564,"value":915},{"type":559,"tag":624,"props":1175,"children":1176},{"style":762},[1177],{"type":564,"value":984},{"type":559,"tag":624,"props":1179,"children":1180},{"style":790},[1181],{"type":564,"value":960},{"type":559,"tag":624,"props":1183,"children":1184},{"style":762},[1185],{"type":564,"value":993},{"type":559,"tag":624,"props":1187,"children":1188},{"style":762},[1189],{"type":564,"value":965},{"type":559,"tag":624,"props":1191,"children":1192},{"style":790},[1193],{"type":564,"value":915},{"type":559,"tag":624,"props":1195,"children":1196},{"style":762},[1197],{"type":564,"value":984},{"type":559,"tag":624,"props":1199,"children":1200},{"style":790},[1201],{"type":564,"value":1157},{"type":559,"tag":624,"props":1203,"children":1204},{"style":762},[1205],{"type":564,"value":1024},{"type":559,"tag":624,"props":1207,"children":1208},{"style":762},[1209],{"type":564,"value":883},{"type":559,"tag":624,"props":1211,"children":1213},{"class":626,"line":1212},15,[1214,1219,1223],{"type":559,"tag":624,"props":1215,"children":1216},{"style":790},[1217],{"type":564,"value":1218},"      j",{"type":559,"tag":624,"props":1220,"children":1221},{"style":844},[1222],{"type":564,"value":1042},{"type":559,"tag":624,"props":1224,"children":1225},{"style":762},[1226],{"type":564,"value":942},{"type":559,"tag":624,"props":1228,"children":1230},{"class":626,"line":1229},16,[1231],{"type":559,"tag":624,"props":1232,"children":1233},{"style":762},[1234],{"type":564,"value":1235},"    }\n",{"type":559,"tag":624,"props":1237,"children":1239},{"class":626,"line":1238},17,[1240],{"type":559,"tag":624,"props":1241,"children":1242},{"style":748},[1243],{"type":564,"value":1244},"    // 交换\n",{"type":559,"tag":624,"props":1246,"children":1248},{"class":626,"line":1247},18,[1249,1254,1258,1262,1266,1271,1275,1279,1283,1288,1292,1297,1301,1305,1309,1313,1317,1321,1325],{"type":559,"tag":624,"props":1250,"children":1251},{"style":762},[1252],{"type":564,"value":1253},"    [",{"type":559,"tag":624,"props":1255,"children":1256},{"style":790},[1257],{"type":564,"value":873},{"type":559,"tag":624,"props":1259,"children":1260},{"style":762},[1261],{"type":564,"value":984},{"type":559,"tag":624,"props":1263,"children":1264},{"style":790},[1265],{"type":564,"value":960},{"type":559,"tag":624,"props":1267,"children":1268},{"style":762},[1269],{"type":564,"value":1270},"],",{"type":559,"tag":624,"props":1272,"children":1273},{"style":790},[1274],{"type":564,"value":915},{"type":559,"tag":624,"props":1276,"children":1277},{"style":762},[1278],{"type":564,"value":984},{"type":559,"tag":624,"props":1280,"children":1281},{"style":790},[1282],{"type":564,"value":1157},{"type":559,"tag":624,"props":1284,"children":1285},{"style":762},[1286],{"type":564,"value":1287},"]]",{"type":559,"tag":624,"props":1289,"children":1290},{"style":762},[1291],{"type":564,"value":858},{"type":559,"tag":624,"props":1293,"children":1294},{"style":762},[1295],{"type":564,"value":1296}," [",{"type":559,"tag":624,"props":1298,"children":1299},{"style":790},[1300],{"type":564,"value":873},{"type":559,"tag":624,"props":1302,"children":1303},{"style":762},[1304],{"type":564,"value":984},{"type":559,"tag":624,"props":1306,"children":1307},{"style":790},[1308],{"type":564,"value":1157},{"type":559,"tag":624,"props":1310,"children":1311},{"style":762},[1312],{"type":564,"value":1270},{"type":559,"tag":624,"props":1314,"children":1315},{"style":790},[1316],{"type":564,"value":915},{"type":559,"tag":624,"props":1318,"children":1319},{"style":762},[1320],{"type":564,"value":984},{"type":559,"tag":624,"props":1322,"children":1323},{"style":790},[1324],{"type":564,"value":960},{"type":559,"tag":624,"props":1326,"children":1327},{"style":762},[1328],{"type":564,"value":1329},"]];\n",{"type":559,"tag":624,"props":1331,"children":1333},{"class":626,"line":1332},19,[1334],{"type":559,"tag":624,"props":1335,"children":1336},{"style":762},[1337],{"type":564,"value":1055},{"type":559,"tag":624,"props":1339,"children":1341},{"class":626,"line":1340},20,[1342],{"type":559,"tag":624,"props":1343,"children":1344},{"style":748},[1345],{"type":564,"value":1346},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":559,"tag":624,"props":1348,"children":1350},{"class":626,"line":1349},21,[1351,1355,1360,1364,1368,1372,1376],{"type":559,"tag":624,"props":1352,"children":1353},{"style":844},[1354],{"type":564,"value":901},{"type":559,"tag":624,"props":1356,"children":1357},{"style":790},[1358],{"type":564,"value":1359}," l",{"type":559,"tag":624,"props":1361,"children":1362},{"style":762},[1363],{"type":564,"value":858},{"type":559,"tag":624,"props":1365,"children":1366},{"style":790},[1367],{"type":564,"value":906},{"type":559,"tag":624,"props":1369,"children":1370},{"style":844},[1371],{"type":564,"value":1014},{"type":559,"tag":624,"props":1373,"children":1374},{"style":934},[1375],{"type":564,"value":1019},{"type":559,"tag":624,"props":1377,"children":1378},{"style":762},[1379],{"type":564,"value":942},{"type":559,"tag":624,"props":1381,"children":1383},{"class":626,"line":1382},22,[1384,1388,1393,1397,1401,1405,1409,1413,1417],{"type":559,"tag":624,"props":1385,"children":1386},{"style":844},[1387],{"type":564,"value":901},{"type":559,"tag":624,"props":1389,"children":1390},{"style":790},[1391],{"type":564,"value":1392}," r",{"type":559,"tag":624,"props":1394,"children":1395},{"style":762},[1396],{"type":564,"value":858},{"type":559,"tag":624,"props":1398,"children":1399},{"style":790},[1400],{"type":564,"value":915},{"type":559,"tag":624,"props":1402,"children":1403},{"style":762},[1404],{"type":564,"value":920},{"type":559,"tag":624,"props":1406,"children":1407},{"style":923},[1408],{"type":564,"value":926},{"type":559,"tag":624,"props":1410,"children":1411},{"style":844},[1412],{"type":564,"value":931},{"type":559,"tag":624,"props":1414,"children":1415},{"style":934},[1416],{"type":564,"value":1019},{"type":559,"tag":624,"props":1418,"children":1419},{"style":762},[1420],{"type":564,"value":942},{"type":559,"tag":624,"props":1422,"children":1424},{"class":626,"line":1423},23,[1425,1429,1433,1438,1443,1447,1451],{"type":559,"tag":624,"props":1426,"children":1427},{"style":768},[1428],{"type":564,"value":951},{"type":559,"tag":624,"props":1430,"children":1431},{"style":762},[1432],{"type":564,"value":868},{"type":559,"tag":624,"props":1434,"children":1435},{"style":790},[1436],{"type":564,"value":1437},"l",{"type":559,"tag":624,"props":1439,"children":1440},{"style":762},[1441],{"type":564,"value":1442}," \u003C",{"type":559,"tag":624,"props":1444,"children":1445},{"style":790},[1446],{"type":564,"value":1392},{"type":559,"tag":624,"props":1448,"children":1449},{"style":762},[1450],{"type":564,"value":878},{"type":559,"tag":624,"props":1452,"children":1453},{"style":762},[1454],{"type":564,"value":883},{"type":559,"tag":624,"props":1456,"children":1458},{"class":626,"line":1457},24,[1459,1463,1467,1471,1475,1479,1483,1487,1492,1496,1500,1504,1508,1512,1516,1520,1524,1528,1532],{"type":559,"tag":624,"props":1460,"children":1461},{"style":762},[1462],{"type":564,"value":1253},{"type":559,"tag":624,"props":1464,"children":1465},{"style":790},[1466],{"type":564,"value":873},{"type":559,"tag":624,"props":1468,"children":1469},{"style":762},[1470],{"type":564,"value":984},{"type":559,"tag":624,"props":1472,"children":1473},{"style":790},[1474],{"type":564,"value":1437},{"type":559,"tag":624,"props":1476,"children":1477},{"style":762},[1478],{"type":564,"value":1270},{"type":559,"tag":624,"props":1480,"children":1481},{"style":790},[1482],{"type":564,"value":915},{"type":559,"tag":624,"props":1484,"children":1485},{"style":762},[1486],{"type":564,"value":984},{"type":559,"tag":624,"props":1488,"children":1489},{"style":790},[1490],{"type":564,"value":1491},"r",{"type":559,"tag":624,"props":1493,"children":1494},{"style":762},[1495],{"type":564,"value":1287},{"type":559,"tag":624,"props":1497,"children":1498},{"style":762},[1499],{"type":564,"value":858},{"type":559,"tag":624,"props":1501,"children":1502},{"style":762},[1503],{"type":564,"value":1296},{"type":559,"tag":624,"props":1505,"children":1506},{"style":790},[1507],{"type":564,"value":873},{"type":559,"tag":624,"props":1509,"children":1510},{"style":762},[1511],{"type":564,"value":984},{"type":559,"tag":624,"props":1513,"children":1514},{"style":790},[1515],{"type":564,"value":1491},{"type":559,"tag":624,"props":1517,"children":1518},{"style":762},[1519],{"type":564,"value":1270},{"type":559,"tag":624,"props":1521,"children":1522},{"style":790},[1523],{"type":564,"value":915},{"type":559,"tag":624,"props":1525,"children":1526},{"style":762},[1527],{"type":564,"value":984},{"type":559,"tag":624,"props":1529,"children":1530},{"style":790},[1531],{"type":564,"value":1437},{"type":559,"tag":624,"props":1533,"children":1534},{"style":762},[1535],{"type":564,"value":1329},{"type":559,"tag":624,"props":1537,"children":1539},{"class":626,"line":1538},25,[1540,1545,1550],{"type":559,"tag":624,"props":1541,"children":1542},{"style":790},[1543],{"type":564,"value":1544},"    l",{"type":559,"tag":624,"props":1546,"children":1547},{"style":844},[1548],{"type":564,"value":1549},"++",{"type":559,"tag":624,"props":1551,"children":1552},{"style":762},[1553],{"type":564,"value":942},{"type":559,"tag":624,"props":1555,"children":1557},{"class":626,"line":1556},26,[1558,1563,1567],{"type":559,"tag":624,"props":1559,"children":1560},{"style":790},[1561],{"type":564,"value":1562},"    r",{"type":559,"tag":624,"props":1564,"children":1565},{"style":844},[1566],{"type":564,"value":1042},{"type":559,"tag":624,"props":1568,"children":1569},{"style":762},[1570],{"type":564,"value":942},{"type":559,"tag":624,"props":1572,"children":1574},{"class":626,"line":1573},27,[1575],{"type":559,"tag":624,"props":1576,"children":1577},{"style":762},[1578],{"type":564,"value":1055},{"type":559,"tag":624,"props":1580,"children":1582},{"class":626,"line":1581},28,[1583],{"type":559,"tag":624,"props":1584,"children":1585},{"style":762},[1586],{"type":564,"value":1587},"};\n",{"type":559,"tag":1589,"props":1590,"children":1591},"style",{},[1592],{"type":564,"value":1593},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":840,"depth":840,"links":1595},[1596,1597],{"id":720,"depth":636,"text":720},{"id":725,"depth":636,"text":725,"children":1598},[1599],{"id":731,"depth":796,"text":731},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1606,1608],{"_path":102,"title":101,"description":1607},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":108,"title":107,"description":1609},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1715008123608]