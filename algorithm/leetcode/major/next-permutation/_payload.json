[{"data":1,"prerenderedAt":1620},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":559,"/algorithm/leetcode/major/next-permutation-surround":1615},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":105,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":104,"description":563,"url":564,"body":565,"_type":1610,"_id":1611,"_source":1612,"_file":1613,"_extension":1614},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":566,"children":567,"toc":1604},"root",[568,575,585,590,608,613,618,623,653,658,681,686,709,714,727,733,738,744,1598],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":576,"props":577,"children":578},"ul",{},[579],{"type":569,"tag":580,"props":581,"children":582},"li",{},[583],{"type":574,"value":584},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":569,"tag":570,"props":586,"children":587},{},[588],{"type":574,"value":589},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":569,"tag":576,"props":591,"children":592},{},[593,598,603],{"type":569,"tag":580,"props":594,"children":595},{},[596],{"type":574,"value":597},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":569,"tag":580,"props":599,"children":600},{},[601],{"type":574,"value":602},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":569,"tag":580,"props":604,"children":605},{},[606],{"type":574,"value":607},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":569,"tag":570,"props":609,"children":610},{},[611],{"type":574,"value":612},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":569,"tag":570,"props":614,"children":615},{},[616],{"type":574,"value":617},"必须 原地 修改，只允许使用额外常数空间。",{"type":569,"tag":570,"props":619,"children":620},{},[621],{"type":574,"value":622},"示例 1：",{"type":569,"tag":624,"props":625,"children":628},"pre",{"className":626,"code":627,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[629],{"type":569,"tag":630,"props":631,"children":632},"code",{"__ignoreMap":562},[633,644],{"type":569,"tag":634,"props":635,"children":638},"span",{"class":636,"line":637},"line",1,[639],{"type":569,"tag":634,"props":640,"children":641},{},[642],{"type":574,"value":643},"输入：nums = [1,2,3]\n",{"type":569,"tag":634,"props":645,"children":647},{"class":636,"line":646},2,[648],{"type":569,"tag":634,"props":649,"children":650},{},[651],{"type":574,"value":652},"输出：[1,3,2]\n",{"type":569,"tag":570,"props":654,"children":655},{},[656],{"type":574,"value":657},"示例 2：",{"type":569,"tag":624,"props":659,"children":661},{"className":626,"code":660,"language":574,"meta":562,"style":562},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[662],{"type":569,"tag":630,"props":663,"children":664},{"__ignoreMap":562},[665,673],{"type":569,"tag":634,"props":666,"children":667},{"class":636,"line":637},[668],{"type":569,"tag":634,"props":669,"children":670},{},[671],{"type":574,"value":672},"输入：nums = [3,2,1]\n",{"type":569,"tag":634,"props":674,"children":675},{"class":636,"line":646},[676],{"type":569,"tag":634,"props":677,"children":678},{},[679],{"type":574,"value":680},"输出：[1,2,3]\n",{"type":569,"tag":570,"props":682,"children":683},{},[684],{"type":574,"value":685},"示例 3：",{"type":569,"tag":624,"props":687,"children":689},{"className":626,"code":688,"language":574,"meta":562,"style":562},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[690],{"type":569,"tag":630,"props":691,"children":692},{"__ignoreMap":562},[693,701],{"type":569,"tag":634,"props":694,"children":695},{"class":636,"line":637},[696],{"type":569,"tag":634,"props":697,"children":698},{},[699],{"type":574,"value":700},"输入：nums = [1,1,5]\n",{"type":569,"tag":634,"props":702,"children":703},{"class":636,"line":646},[704],{"type":569,"tag":634,"props":705,"children":706},{},[707],{"type":574,"value":708},"输出：[1,5,1]\n",{"type":569,"tag":570,"props":710,"children":711},{},[712],{"type":574,"value":713},"提示：",{"type":569,"tag":576,"props":715,"children":716},{},[717,722],{"type":569,"tag":580,"props":718,"children":719},{},[720],{"type":574,"value":721},"1 \u003C= nums.length \u003C= 100",{"type":569,"tag":580,"props":723,"children":724},{},[725],{"type":574,"value":726},"0 \u003C= nums[i] \u003C= 100",{"type":569,"tag":728,"props":729,"children":731},"h2",{"id":730},"解题思路",[732],{"type":574,"value":730},{"type":569,"tag":728,"props":734,"children":736},{"id":735},"实现",[737],{"type":574,"value":735},{"type":569,"tag":739,"props":740,"children":742},"h3",{"id":741},"双指针",[743],{"type":574,"value":741},{"type":569,"tag":624,"props":745,"children":749},{"className":746,"code":747,"language":748,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[750],{"type":569,"tag":630,"props":751,"children":752},{"__ignoreMap":562},[753,762,804,839,848,894,903,953,1039,1057,1066,1075,1108,1150,1220,1237,1246,1255,1340,1348,1357,1390,1431,1465,1546,1564,1581,1589],{"type":569,"tag":634,"props":754,"children":755},{"class":636,"line":637},[756],{"type":569,"tag":634,"props":757,"children":759},{"style":758},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[760],{"type":574,"value":761},"/**\n",{"type":569,"tag":634,"props":763,"children":764},{"class":636,"line":646},[765,770,776,782,787,793,798],{"type":569,"tag":634,"props":766,"children":767},{"style":758},[768],{"type":574,"value":769}," * ",{"type":569,"tag":634,"props":771,"children":773},{"style":772},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[774],{"type":574,"value":775},"@",{"type":569,"tag":634,"props":777,"children":779},{"style":778},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[780],{"type":574,"value":781},"param",{"type":569,"tag":634,"props":783,"children":784},{"style":772},[785],{"type":574,"value":786}," {",{"type":569,"tag":634,"props":788,"children":790},{"style":789},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[791],{"type":574,"value":792},"number[]",{"type":569,"tag":634,"props":794,"children":795},{"style":772},[796],{"type":574,"value":797},"}",{"type":569,"tag":634,"props":799,"children":801},{"style":800},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[802],{"type":574,"value":803}," nums\n",{"type":569,"tag":634,"props":805,"children":807},{"class":636,"line":806},3,[808,812,816,821,825,830,834],{"type":569,"tag":634,"props":809,"children":810},{"style":758},[811],{"type":574,"value":769},{"type":569,"tag":634,"props":813,"children":814},{"style":772},[815],{"type":574,"value":775},{"type":569,"tag":634,"props":817,"children":818},{"style":778},[819],{"type":574,"value":820},"return",{"type":569,"tag":634,"props":822,"children":823},{"style":772},[824],{"type":574,"value":786},{"type":569,"tag":634,"props":826,"children":827},{"style":789},[828],{"type":574,"value":829},"void",{"type":569,"tag":634,"props":831,"children":832},{"style":772},[833],{"type":574,"value":797},{"type":569,"tag":634,"props":835,"children":836},{"style":758},[837],{"type":574,"value":838}," Do not return anything, modify nums in-place instead.\n",{"type":569,"tag":634,"props":840,"children":842},{"class":636,"line":841},4,[843],{"type":569,"tag":634,"props":844,"children":845},{"style":758},[846],{"type":574,"value":847}," */\n",{"type":569,"tag":634,"props":849,"children":851},{"class":636,"line":850},5,[852,858,864,869,874,879,884,889],{"type":569,"tag":634,"props":853,"children":855},{"style":854},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[856],{"type":574,"value":857},"var",{"type":569,"tag":634,"props":859,"children":861},{"style":860},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[862],{"type":574,"value":863}," nextPermutation",{"type":569,"tag":634,"props":865,"children":866},{"style":772},[867],{"type":574,"value":868}," =",{"type":569,"tag":634,"props":870,"children":871},{"style":854},[872],{"type":574,"value":873}," function",{"type":569,"tag":634,"props":875,"children":876},{"style":772},[877],{"type":574,"value":878}," (",{"type":569,"tag":634,"props":880,"children":881},{"style":800},[882],{"type":574,"value":883},"nums",{"type":569,"tag":634,"props":885,"children":886},{"style":772},[887],{"type":574,"value":888},")",{"type":569,"tag":634,"props":890,"children":891},{"style":772},[892],{"type":574,"value":893}," {\n",{"type":569,"tag":634,"props":895,"children":897},{"class":636,"line":896},6,[898],{"type":569,"tag":634,"props":899,"children":900},{"style":758},[901],{"type":574,"value":902},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":569,"tag":634,"props":904,"children":906},{"class":636,"line":905},7,[907,912,917,921,926,931,937,942,948],{"type":569,"tag":634,"props":908,"children":909},{"style":854},[910],{"type":574,"value":911},"  let",{"type":569,"tag":634,"props":913,"children":914},{"style":800},[915],{"type":574,"value":916}," i",{"type":569,"tag":634,"props":918,"children":919},{"style":772},[920],{"type":574,"value":868},{"type":569,"tag":634,"props":922,"children":923},{"style":800},[924],{"type":574,"value":925}," nums",{"type":569,"tag":634,"props":927,"children":928},{"style":772},[929],{"type":574,"value":930},".",{"type":569,"tag":634,"props":932,"children":934},{"style":933},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[935],{"type":574,"value":936},"length",{"type":569,"tag":634,"props":938,"children":939},{"style":854},[940],{"type":574,"value":941}," -",{"type":569,"tag":634,"props":943,"children":945},{"style":944},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[946],{"type":574,"value":947}," 2",{"type":569,"tag":634,"props":949,"children":950},{"style":772},[951],{"type":574,"value":952},";\n",{"type":569,"tag":634,"props":954,"children":956},{"class":636,"line":955},8,[957,962,966,971,976,981,986,990,995,999,1004,1008,1012,1016,1020,1025,1030,1035],{"type":569,"tag":634,"props":958,"children":959},{"style":778},[960],{"type":574,"value":961},"  while",{"type":569,"tag":634,"props":963,"children":964},{"style":772},[965],{"type":574,"value":878},{"type":569,"tag":634,"props":967,"children":968},{"style":800},[969],{"type":574,"value":970},"i",{"type":569,"tag":634,"props":972,"children":973},{"style":772},[974],{"type":574,"value":975}," >=",{"type":569,"tag":634,"props":977,"children":978},{"style":944},[979],{"type":574,"value":980}," 0",{"type":569,"tag":634,"props":982,"children":983},{"style":854},[984],{"type":574,"value":985}," &&",{"type":569,"tag":634,"props":987,"children":988},{"style":800},[989],{"type":574,"value":925},{"type":569,"tag":634,"props":991,"children":992},{"style":772},[993],{"type":574,"value":994},"[",{"type":569,"tag":634,"props":996,"children":997},{"style":800},[998],{"type":574,"value":970},{"type":569,"tag":634,"props":1000,"children":1001},{"style":772},[1002],{"type":574,"value":1003},"]",{"type":569,"tag":634,"props":1005,"children":1006},{"style":772},[1007],{"type":574,"value":975},{"type":569,"tag":634,"props":1009,"children":1010},{"style":800},[1011],{"type":574,"value":925},{"type":569,"tag":634,"props":1013,"children":1014},{"style":772},[1015],{"type":574,"value":994},{"type":569,"tag":634,"props":1017,"children":1018},{"style":800},[1019],{"type":574,"value":970},{"type":569,"tag":634,"props":1021,"children":1022},{"style":854},[1023],{"type":574,"value":1024}," +",{"type":569,"tag":634,"props":1026,"children":1027},{"style":944},[1028],{"type":574,"value":1029}," 1",{"type":569,"tag":634,"props":1031,"children":1032},{"style":772},[1033],{"type":574,"value":1034},"])",{"type":569,"tag":634,"props":1036,"children":1037},{"style":772},[1038],{"type":574,"value":893},{"type":569,"tag":634,"props":1040,"children":1042},{"class":636,"line":1041},9,[1043,1048,1053],{"type":569,"tag":634,"props":1044,"children":1045},{"style":800},[1046],{"type":574,"value":1047},"    i",{"type":569,"tag":634,"props":1049,"children":1050},{"style":854},[1051],{"type":574,"value":1052},"--",{"type":569,"tag":634,"props":1054,"children":1055},{"style":772},[1056],{"type":574,"value":952},{"type":569,"tag":634,"props":1058,"children":1060},{"class":636,"line":1059},10,[1061],{"type":569,"tag":634,"props":1062,"children":1063},{"style":772},[1064],{"type":574,"value":1065},"  }\n",{"type":569,"tag":634,"props":1067,"children":1069},{"class":636,"line":1068},11,[1070],{"type":569,"tag":634,"props":1071,"children":1072},{"style":758},[1073],{"type":574,"value":1074},"  // i 在数组中存在，进行交换\n",{"type":569,"tag":634,"props":1076,"children":1078},{"class":636,"line":1077},12,[1079,1084,1088,1092,1096,1100,1104],{"type":569,"tag":634,"props":1080,"children":1081},{"style":778},[1082],{"type":574,"value":1083},"  if",{"type":569,"tag":634,"props":1085,"children":1086},{"style":772},[1087],{"type":574,"value":878},{"type":569,"tag":634,"props":1089,"children":1090},{"style":800},[1091],{"type":574,"value":970},{"type":569,"tag":634,"props":1093,"children":1094},{"style":772},[1095],{"type":574,"value":975},{"type":569,"tag":634,"props":1097,"children":1098},{"style":944},[1099],{"type":574,"value":980},{"type":569,"tag":634,"props":1101,"children":1102},{"style":772},[1103],{"type":574,"value":888},{"type":569,"tag":634,"props":1105,"children":1106},{"style":772},[1107],{"type":574,"value":893},{"type":569,"tag":634,"props":1109,"children":1111},{"class":636,"line":1110},13,[1112,1117,1122,1126,1130,1134,1138,1142,1146],{"type":569,"tag":634,"props":1113,"children":1114},{"style":854},[1115],{"type":574,"value":1116},"    let",{"type":569,"tag":634,"props":1118,"children":1119},{"style":800},[1120],{"type":574,"value":1121}," j",{"type":569,"tag":634,"props":1123,"children":1124},{"style":772},[1125],{"type":574,"value":868},{"type":569,"tag":634,"props":1127,"children":1128},{"style":800},[1129],{"type":574,"value":925},{"type":569,"tag":634,"props":1131,"children":1132},{"style":772},[1133],{"type":574,"value":930},{"type":569,"tag":634,"props":1135,"children":1136},{"style":933},[1137],{"type":574,"value":936},{"type":569,"tag":634,"props":1139,"children":1140},{"style":854},[1141],{"type":574,"value":941},{"type":569,"tag":634,"props":1143,"children":1144},{"style":944},[1145],{"type":574,"value":1029},{"type":569,"tag":634,"props":1147,"children":1148},{"style":772},[1149],{"type":574,"value":952},{"type":569,"tag":634,"props":1151,"children":1153},{"class":636,"line":1152},14,[1154,1159,1163,1168,1172,1176,1180,1184,1188,1192,1196,1200,1204,1208,1212,1216],{"type":569,"tag":634,"props":1155,"children":1156},{"style":778},[1157],{"type":574,"value":1158},"    while",{"type":569,"tag":634,"props":1160,"children":1161},{"style":772},[1162],{"type":574,"value":878},{"type":569,"tag":634,"props":1164,"children":1165},{"style":800},[1166],{"type":574,"value":1167},"j",{"type":569,"tag":634,"props":1169,"children":1170},{"style":772},[1171],{"type":574,"value":975},{"type":569,"tag":634,"props":1173,"children":1174},{"style":944},[1175],{"type":574,"value":980},{"type":569,"tag":634,"props":1177,"children":1178},{"style":854},[1179],{"type":574,"value":985},{"type":569,"tag":634,"props":1181,"children":1182},{"style":800},[1183],{"type":574,"value":925},{"type":569,"tag":634,"props":1185,"children":1186},{"style":772},[1187],{"type":574,"value":994},{"type":569,"tag":634,"props":1189,"children":1190},{"style":800},[1191],{"type":574,"value":970},{"type":569,"tag":634,"props":1193,"children":1194},{"style":772},[1195],{"type":574,"value":1003},{"type":569,"tag":634,"props":1197,"children":1198},{"style":772},[1199],{"type":574,"value":975},{"type":569,"tag":634,"props":1201,"children":1202},{"style":800},[1203],{"type":574,"value":925},{"type":569,"tag":634,"props":1205,"children":1206},{"style":772},[1207],{"type":574,"value":994},{"type":569,"tag":634,"props":1209,"children":1210},{"style":800},[1211],{"type":574,"value":1167},{"type":569,"tag":634,"props":1213,"children":1214},{"style":772},[1215],{"type":574,"value":1034},{"type":569,"tag":634,"props":1217,"children":1218},{"style":772},[1219],{"type":574,"value":893},{"type":569,"tag":634,"props":1221,"children":1223},{"class":636,"line":1222},15,[1224,1229,1233],{"type":569,"tag":634,"props":1225,"children":1226},{"style":800},[1227],{"type":574,"value":1228},"      j",{"type":569,"tag":634,"props":1230,"children":1231},{"style":854},[1232],{"type":574,"value":1052},{"type":569,"tag":634,"props":1234,"children":1235},{"style":772},[1236],{"type":574,"value":952},{"type":569,"tag":634,"props":1238,"children":1240},{"class":636,"line":1239},16,[1241],{"type":569,"tag":634,"props":1242,"children":1243},{"style":772},[1244],{"type":574,"value":1245},"    }\n",{"type":569,"tag":634,"props":1247,"children":1249},{"class":636,"line":1248},17,[1250],{"type":569,"tag":634,"props":1251,"children":1252},{"style":758},[1253],{"type":574,"value":1254},"    // 交换\n",{"type":569,"tag":634,"props":1256,"children":1258},{"class":636,"line":1257},18,[1259,1264,1268,1272,1276,1281,1285,1289,1293,1298,1302,1307,1311,1315,1319,1323,1327,1331,1335],{"type":569,"tag":634,"props":1260,"children":1261},{"style":772},[1262],{"type":574,"value":1263},"    [",{"type":569,"tag":634,"props":1265,"children":1266},{"style":800},[1267],{"type":574,"value":883},{"type":569,"tag":634,"props":1269,"children":1270},{"style":772},[1271],{"type":574,"value":994},{"type":569,"tag":634,"props":1273,"children":1274},{"style":800},[1275],{"type":574,"value":970},{"type":569,"tag":634,"props":1277,"children":1278},{"style":772},[1279],{"type":574,"value":1280},"],",{"type":569,"tag":634,"props":1282,"children":1283},{"style":800},[1284],{"type":574,"value":925},{"type":569,"tag":634,"props":1286,"children":1287},{"style":772},[1288],{"type":574,"value":994},{"type":569,"tag":634,"props":1290,"children":1291},{"style":800},[1292],{"type":574,"value":1167},{"type":569,"tag":634,"props":1294,"children":1295},{"style":772},[1296],{"type":574,"value":1297},"]]",{"type":569,"tag":634,"props":1299,"children":1300},{"style":772},[1301],{"type":574,"value":868},{"type":569,"tag":634,"props":1303,"children":1304},{"style":772},[1305],{"type":574,"value":1306}," [",{"type":569,"tag":634,"props":1308,"children":1309},{"style":800},[1310],{"type":574,"value":883},{"type":569,"tag":634,"props":1312,"children":1313},{"style":772},[1314],{"type":574,"value":994},{"type":569,"tag":634,"props":1316,"children":1317},{"style":800},[1318],{"type":574,"value":1167},{"type":569,"tag":634,"props":1320,"children":1321},{"style":772},[1322],{"type":574,"value":1280},{"type":569,"tag":634,"props":1324,"children":1325},{"style":800},[1326],{"type":574,"value":925},{"type":569,"tag":634,"props":1328,"children":1329},{"style":772},[1330],{"type":574,"value":994},{"type":569,"tag":634,"props":1332,"children":1333},{"style":800},[1334],{"type":574,"value":970},{"type":569,"tag":634,"props":1336,"children":1337},{"style":772},[1338],{"type":574,"value":1339},"]];\n",{"type":569,"tag":634,"props":1341,"children":1343},{"class":636,"line":1342},19,[1344],{"type":569,"tag":634,"props":1345,"children":1346},{"style":772},[1347],{"type":574,"value":1065},{"type":569,"tag":634,"props":1349,"children":1351},{"class":636,"line":1350},20,[1352],{"type":569,"tag":634,"props":1353,"children":1354},{"style":758},[1355],{"type":574,"value":1356},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":569,"tag":634,"props":1358,"children":1360},{"class":636,"line":1359},21,[1361,1365,1370,1374,1378,1382,1386],{"type":569,"tag":634,"props":1362,"children":1363},{"style":854},[1364],{"type":574,"value":911},{"type":569,"tag":634,"props":1366,"children":1367},{"style":800},[1368],{"type":574,"value":1369}," l",{"type":569,"tag":634,"props":1371,"children":1372},{"style":772},[1373],{"type":574,"value":868},{"type":569,"tag":634,"props":1375,"children":1376},{"style":800},[1377],{"type":574,"value":916},{"type":569,"tag":634,"props":1379,"children":1380},{"style":854},[1381],{"type":574,"value":1024},{"type":569,"tag":634,"props":1383,"children":1384},{"style":944},[1385],{"type":574,"value":1029},{"type":569,"tag":634,"props":1387,"children":1388},{"style":772},[1389],{"type":574,"value":952},{"type":569,"tag":634,"props":1391,"children":1393},{"class":636,"line":1392},22,[1394,1398,1403,1407,1411,1415,1419,1423,1427],{"type":569,"tag":634,"props":1395,"children":1396},{"style":854},[1397],{"type":574,"value":911},{"type":569,"tag":634,"props":1399,"children":1400},{"style":800},[1401],{"type":574,"value":1402}," r",{"type":569,"tag":634,"props":1404,"children":1405},{"style":772},[1406],{"type":574,"value":868},{"type":569,"tag":634,"props":1408,"children":1409},{"style":800},[1410],{"type":574,"value":925},{"type":569,"tag":634,"props":1412,"children":1413},{"style":772},[1414],{"type":574,"value":930},{"type":569,"tag":634,"props":1416,"children":1417},{"style":933},[1418],{"type":574,"value":936},{"type":569,"tag":634,"props":1420,"children":1421},{"style":854},[1422],{"type":574,"value":941},{"type":569,"tag":634,"props":1424,"children":1425},{"style":944},[1426],{"type":574,"value":1029},{"type":569,"tag":634,"props":1428,"children":1429},{"style":772},[1430],{"type":574,"value":952},{"type":569,"tag":634,"props":1432,"children":1434},{"class":636,"line":1433},23,[1435,1439,1443,1448,1453,1457,1461],{"type":569,"tag":634,"props":1436,"children":1437},{"style":778},[1438],{"type":574,"value":961},{"type":569,"tag":634,"props":1440,"children":1441},{"style":772},[1442],{"type":574,"value":878},{"type":569,"tag":634,"props":1444,"children":1445},{"style":800},[1446],{"type":574,"value":1447},"l",{"type":569,"tag":634,"props":1449,"children":1450},{"style":772},[1451],{"type":574,"value":1452}," \u003C",{"type":569,"tag":634,"props":1454,"children":1455},{"style":800},[1456],{"type":574,"value":1402},{"type":569,"tag":634,"props":1458,"children":1459},{"style":772},[1460],{"type":574,"value":888},{"type":569,"tag":634,"props":1462,"children":1463},{"style":772},[1464],{"type":574,"value":893},{"type":569,"tag":634,"props":1466,"children":1468},{"class":636,"line":1467},24,[1469,1473,1477,1481,1485,1489,1493,1497,1502,1506,1510,1514,1518,1522,1526,1530,1534,1538,1542],{"type":569,"tag":634,"props":1470,"children":1471},{"style":772},[1472],{"type":574,"value":1263},{"type":569,"tag":634,"props":1474,"children":1475},{"style":800},[1476],{"type":574,"value":883},{"type":569,"tag":634,"props":1478,"children":1479},{"style":772},[1480],{"type":574,"value":994},{"type":569,"tag":634,"props":1482,"children":1483},{"style":800},[1484],{"type":574,"value":1447},{"type":569,"tag":634,"props":1486,"children":1487},{"style":772},[1488],{"type":574,"value":1280},{"type":569,"tag":634,"props":1490,"children":1491},{"style":800},[1492],{"type":574,"value":925},{"type":569,"tag":634,"props":1494,"children":1495},{"style":772},[1496],{"type":574,"value":994},{"type":569,"tag":634,"props":1498,"children":1499},{"style":800},[1500],{"type":574,"value":1501},"r",{"type":569,"tag":634,"props":1503,"children":1504},{"style":772},[1505],{"type":574,"value":1297},{"type":569,"tag":634,"props":1507,"children":1508},{"style":772},[1509],{"type":574,"value":868},{"type":569,"tag":634,"props":1511,"children":1512},{"style":772},[1513],{"type":574,"value":1306},{"type":569,"tag":634,"props":1515,"children":1516},{"style":800},[1517],{"type":574,"value":883},{"type":569,"tag":634,"props":1519,"children":1520},{"style":772},[1521],{"type":574,"value":994},{"type":569,"tag":634,"props":1523,"children":1524},{"style":800},[1525],{"type":574,"value":1501},{"type":569,"tag":634,"props":1527,"children":1528},{"style":772},[1529],{"type":574,"value":1280},{"type":569,"tag":634,"props":1531,"children":1532},{"style":800},[1533],{"type":574,"value":925},{"type":569,"tag":634,"props":1535,"children":1536},{"style":772},[1537],{"type":574,"value":994},{"type":569,"tag":634,"props":1539,"children":1540},{"style":800},[1541],{"type":574,"value":1447},{"type":569,"tag":634,"props":1543,"children":1544},{"style":772},[1545],{"type":574,"value":1339},{"type":569,"tag":634,"props":1547,"children":1549},{"class":636,"line":1548},25,[1550,1555,1560],{"type":569,"tag":634,"props":1551,"children":1552},{"style":800},[1553],{"type":574,"value":1554},"    l",{"type":569,"tag":634,"props":1556,"children":1557},{"style":854},[1558],{"type":574,"value":1559},"++",{"type":569,"tag":634,"props":1561,"children":1562},{"style":772},[1563],{"type":574,"value":952},{"type":569,"tag":634,"props":1565,"children":1567},{"class":636,"line":1566},26,[1568,1573,1577],{"type":569,"tag":634,"props":1569,"children":1570},{"style":800},[1571],{"type":574,"value":1572},"    r",{"type":569,"tag":634,"props":1574,"children":1575},{"style":854},[1576],{"type":574,"value":1052},{"type":569,"tag":634,"props":1578,"children":1579},{"style":772},[1580],{"type":574,"value":952},{"type":569,"tag":634,"props":1582,"children":1584},{"class":636,"line":1583},27,[1585],{"type":569,"tag":634,"props":1586,"children":1587},{"style":772},[1588],{"type":574,"value":1065},{"type":569,"tag":634,"props":1590,"children":1592},{"class":636,"line":1591},28,[1593],{"type":569,"tag":634,"props":1594,"children":1595},{"style":772},[1596],{"type":574,"value":1597},"};\n",{"type":569,"tag":1599,"props":1600,"children":1601},"style",{},[1602],{"type":574,"value":1603},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":850,"depth":850,"links":1605},[1606,1607],{"id":730,"depth":646,"text":730},{"id":735,"depth":646,"text":735,"children":1608},[1609],{"id":741,"depth":806,"text":741},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1616,1618],{"_path":102,"title":101,"description":1617},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":108,"title":107,"description":1619},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1717734304271]