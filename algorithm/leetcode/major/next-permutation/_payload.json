[{"data":1,"prerenderedAt":1613},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":552,"/algorithm/leetcode/major/next-permutation-surround":1608},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":105,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":104,"description":556,"url":557,"body":558,"_type":1603,"_id":1604,"_source":1605,"_file":1606,"_extension":1607},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":559,"children":560,"toc":1597},"root",[561,568,578,583,601,606,611,616,646,651,674,679,702,707,720,726,731,737,1591],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":569,"props":570,"children":571},"ul",{},[572],{"type":562,"tag":573,"props":574,"children":575},"li",{},[576],{"type":567,"value":577},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":562,"tag":563,"props":579,"children":580},{},[581],{"type":567,"value":582},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":562,"tag":569,"props":584,"children":585},{},[586,591,596],{"type":562,"tag":573,"props":587,"children":588},{},[589],{"type":567,"value":590},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":562,"tag":573,"props":592,"children":593},{},[594],{"type":567,"value":595},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":562,"tag":573,"props":597,"children":598},{},[599],{"type":567,"value":600},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":562,"tag":563,"props":602,"children":603},{},[604],{"type":567,"value":605},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":562,"tag":563,"props":607,"children":608},{},[609],{"type":567,"value":610},"必须 原地 修改，只允许使用额外常数空间。",{"type":562,"tag":563,"props":612,"children":613},{},[614],{"type":567,"value":615},"示例 1：",{"type":562,"tag":617,"props":618,"children":621},"pre",{"className":619,"code":620,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[622],{"type":562,"tag":623,"props":624,"children":625},"code",{"__ignoreMap":555},[626,637],{"type":562,"tag":627,"props":628,"children":631},"span",{"class":629,"line":630},"line",1,[632],{"type":562,"tag":627,"props":633,"children":634},{},[635],{"type":567,"value":636},"输入：nums = [1,2,3]\n",{"type":562,"tag":627,"props":638,"children":640},{"class":629,"line":639},2,[641],{"type":562,"tag":627,"props":642,"children":643},{},[644],{"type":567,"value":645},"输出：[1,3,2]\n",{"type":562,"tag":563,"props":647,"children":648},{},[649],{"type":567,"value":650},"示例 2：",{"type":562,"tag":617,"props":652,"children":654},{"className":619,"code":653,"language":567,"meta":555,"style":555},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[655],{"type":562,"tag":623,"props":656,"children":657},{"__ignoreMap":555},[658,666],{"type":562,"tag":627,"props":659,"children":660},{"class":629,"line":630},[661],{"type":562,"tag":627,"props":662,"children":663},{},[664],{"type":567,"value":665},"输入：nums = [3,2,1]\n",{"type":562,"tag":627,"props":667,"children":668},{"class":629,"line":639},[669],{"type":562,"tag":627,"props":670,"children":671},{},[672],{"type":567,"value":673},"输出：[1,2,3]\n",{"type":562,"tag":563,"props":675,"children":676},{},[677],{"type":567,"value":678},"示例 3：",{"type":562,"tag":617,"props":680,"children":682},{"className":619,"code":681,"language":567,"meta":555,"style":555},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[683],{"type":562,"tag":623,"props":684,"children":685},{"__ignoreMap":555},[686,694],{"type":562,"tag":627,"props":687,"children":688},{"class":629,"line":630},[689],{"type":562,"tag":627,"props":690,"children":691},{},[692],{"type":567,"value":693},"输入：nums = [1,1,5]\n",{"type":562,"tag":627,"props":695,"children":696},{"class":629,"line":639},[697],{"type":562,"tag":627,"props":698,"children":699},{},[700],{"type":567,"value":701},"输出：[1,5,1]\n",{"type":562,"tag":563,"props":703,"children":704},{},[705],{"type":567,"value":706},"提示：",{"type":562,"tag":569,"props":708,"children":709},{},[710,715],{"type":562,"tag":573,"props":711,"children":712},{},[713],{"type":567,"value":714},"1 \u003C= nums.length \u003C= 100",{"type":562,"tag":573,"props":716,"children":717},{},[718],{"type":567,"value":719},"0 \u003C= nums[i] \u003C= 100",{"type":562,"tag":721,"props":722,"children":724},"h2",{"id":723},"解题思路",[725],{"type":567,"value":723},{"type":562,"tag":721,"props":727,"children":729},{"id":728},"实现",[730],{"type":567,"value":728},{"type":562,"tag":732,"props":733,"children":735},"h3",{"id":734},"双指针",[736],{"type":567,"value":734},{"type":562,"tag":617,"props":738,"children":742},{"className":739,"code":740,"language":741,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[743],{"type":562,"tag":623,"props":744,"children":745},{"__ignoreMap":555},[746,755,797,832,841,887,896,946,1032,1050,1059,1068,1101,1143,1213,1230,1239,1248,1333,1341,1350,1383,1424,1458,1539,1557,1574,1582],{"type":562,"tag":627,"props":747,"children":748},{"class":629,"line":630},[749],{"type":562,"tag":627,"props":750,"children":752},{"style":751},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[753],{"type":567,"value":754},"/**\n",{"type":562,"tag":627,"props":756,"children":757},{"class":629,"line":639},[758,763,769,775,780,786,791],{"type":562,"tag":627,"props":759,"children":760},{"style":751},[761],{"type":567,"value":762}," * ",{"type":562,"tag":627,"props":764,"children":766},{"style":765},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[767],{"type":567,"value":768},"@",{"type":562,"tag":627,"props":770,"children":772},{"style":771},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[773],{"type":567,"value":774},"param",{"type":562,"tag":627,"props":776,"children":777},{"style":765},[778],{"type":567,"value":779}," {",{"type":562,"tag":627,"props":781,"children":783},{"style":782},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[784],{"type":567,"value":785},"number[]",{"type":562,"tag":627,"props":787,"children":788},{"style":765},[789],{"type":567,"value":790},"}",{"type":562,"tag":627,"props":792,"children":794},{"style":793},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[795],{"type":567,"value":796}," nums\n",{"type":562,"tag":627,"props":798,"children":800},{"class":629,"line":799},3,[801,805,809,814,818,823,827],{"type":562,"tag":627,"props":802,"children":803},{"style":751},[804],{"type":567,"value":762},{"type":562,"tag":627,"props":806,"children":807},{"style":765},[808],{"type":567,"value":768},{"type":562,"tag":627,"props":810,"children":811},{"style":771},[812],{"type":567,"value":813},"return",{"type":562,"tag":627,"props":815,"children":816},{"style":765},[817],{"type":567,"value":779},{"type":562,"tag":627,"props":819,"children":820},{"style":782},[821],{"type":567,"value":822},"void",{"type":562,"tag":627,"props":824,"children":825},{"style":765},[826],{"type":567,"value":790},{"type":562,"tag":627,"props":828,"children":829},{"style":751},[830],{"type":567,"value":831}," Do not return anything, modify nums in-place instead.\n",{"type":562,"tag":627,"props":833,"children":835},{"class":629,"line":834},4,[836],{"type":562,"tag":627,"props":837,"children":838},{"style":751},[839],{"type":567,"value":840}," */\n",{"type":562,"tag":627,"props":842,"children":844},{"class":629,"line":843},5,[845,851,857,862,867,872,877,882],{"type":562,"tag":627,"props":846,"children":848},{"style":847},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[849],{"type":567,"value":850},"var",{"type":562,"tag":627,"props":852,"children":854},{"style":853},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[855],{"type":567,"value":856}," nextPermutation",{"type":562,"tag":627,"props":858,"children":859},{"style":765},[860],{"type":567,"value":861}," =",{"type":562,"tag":627,"props":863,"children":864},{"style":847},[865],{"type":567,"value":866}," function",{"type":562,"tag":627,"props":868,"children":869},{"style":765},[870],{"type":567,"value":871}," (",{"type":562,"tag":627,"props":873,"children":874},{"style":793},[875],{"type":567,"value":876},"nums",{"type":562,"tag":627,"props":878,"children":879},{"style":765},[880],{"type":567,"value":881},")",{"type":562,"tag":627,"props":883,"children":884},{"style":765},[885],{"type":567,"value":886}," {\n",{"type":562,"tag":627,"props":888,"children":890},{"class":629,"line":889},6,[891],{"type":562,"tag":627,"props":892,"children":893},{"style":751},[894],{"type":567,"value":895},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":562,"tag":627,"props":897,"children":899},{"class":629,"line":898},7,[900,905,910,914,919,924,930,935,941],{"type":562,"tag":627,"props":901,"children":902},{"style":847},[903],{"type":567,"value":904},"  let",{"type":562,"tag":627,"props":906,"children":907},{"style":793},[908],{"type":567,"value":909}," i",{"type":562,"tag":627,"props":911,"children":912},{"style":765},[913],{"type":567,"value":861},{"type":562,"tag":627,"props":915,"children":916},{"style":793},[917],{"type":567,"value":918}," nums",{"type":562,"tag":627,"props":920,"children":921},{"style":765},[922],{"type":567,"value":923},".",{"type":562,"tag":627,"props":925,"children":927},{"style":926},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[928],{"type":567,"value":929},"length",{"type":562,"tag":627,"props":931,"children":932},{"style":847},[933],{"type":567,"value":934}," -",{"type":562,"tag":627,"props":936,"children":938},{"style":937},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[939],{"type":567,"value":940}," 2",{"type":562,"tag":627,"props":942,"children":943},{"style":765},[944],{"type":567,"value":945},";\n",{"type":562,"tag":627,"props":947,"children":949},{"class":629,"line":948},8,[950,955,959,964,969,974,979,983,988,992,997,1001,1005,1009,1013,1018,1023,1028],{"type":562,"tag":627,"props":951,"children":952},{"style":771},[953],{"type":567,"value":954},"  while",{"type":562,"tag":627,"props":956,"children":957},{"style":765},[958],{"type":567,"value":871},{"type":562,"tag":627,"props":960,"children":961},{"style":793},[962],{"type":567,"value":963},"i",{"type":562,"tag":627,"props":965,"children":966},{"style":765},[967],{"type":567,"value":968}," >=",{"type":562,"tag":627,"props":970,"children":971},{"style":937},[972],{"type":567,"value":973}," 0",{"type":562,"tag":627,"props":975,"children":976},{"style":847},[977],{"type":567,"value":978}," &&",{"type":562,"tag":627,"props":980,"children":981},{"style":793},[982],{"type":567,"value":918},{"type":562,"tag":627,"props":984,"children":985},{"style":765},[986],{"type":567,"value":987},"[",{"type":562,"tag":627,"props":989,"children":990},{"style":793},[991],{"type":567,"value":963},{"type":562,"tag":627,"props":993,"children":994},{"style":765},[995],{"type":567,"value":996},"]",{"type":562,"tag":627,"props":998,"children":999},{"style":765},[1000],{"type":567,"value":968},{"type":562,"tag":627,"props":1002,"children":1003},{"style":793},[1004],{"type":567,"value":918},{"type":562,"tag":627,"props":1006,"children":1007},{"style":765},[1008],{"type":567,"value":987},{"type":562,"tag":627,"props":1010,"children":1011},{"style":793},[1012],{"type":567,"value":963},{"type":562,"tag":627,"props":1014,"children":1015},{"style":847},[1016],{"type":567,"value":1017}," +",{"type":562,"tag":627,"props":1019,"children":1020},{"style":937},[1021],{"type":567,"value":1022}," 1",{"type":562,"tag":627,"props":1024,"children":1025},{"style":765},[1026],{"type":567,"value":1027},"])",{"type":562,"tag":627,"props":1029,"children":1030},{"style":765},[1031],{"type":567,"value":886},{"type":562,"tag":627,"props":1033,"children":1035},{"class":629,"line":1034},9,[1036,1041,1046],{"type":562,"tag":627,"props":1037,"children":1038},{"style":793},[1039],{"type":567,"value":1040},"    i",{"type":562,"tag":627,"props":1042,"children":1043},{"style":847},[1044],{"type":567,"value":1045},"--",{"type":562,"tag":627,"props":1047,"children":1048},{"style":765},[1049],{"type":567,"value":945},{"type":562,"tag":627,"props":1051,"children":1053},{"class":629,"line":1052},10,[1054],{"type":562,"tag":627,"props":1055,"children":1056},{"style":765},[1057],{"type":567,"value":1058},"  }\n",{"type":562,"tag":627,"props":1060,"children":1062},{"class":629,"line":1061},11,[1063],{"type":562,"tag":627,"props":1064,"children":1065},{"style":751},[1066],{"type":567,"value":1067},"  // i 在数组中存在，进行交换\n",{"type":562,"tag":627,"props":1069,"children":1071},{"class":629,"line":1070},12,[1072,1077,1081,1085,1089,1093,1097],{"type":562,"tag":627,"props":1073,"children":1074},{"style":771},[1075],{"type":567,"value":1076},"  if",{"type":562,"tag":627,"props":1078,"children":1079},{"style":765},[1080],{"type":567,"value":871},{"type":562,"tag":627,"props":1082,"children":1083},{"style":793},[1084],{"type":567,"value":963},{"type":562,"tag":627,"props":1086,"children":1087},{"style":765},[1088],{"type":567,"value":968},{"type":562,"tag":627,"props":1090,"children":1091},{"style":937},[1092],{"type":567,"value":973},{"type":562,"tag":627,"props":1094,"children":1095},{"style":765},[1096],{"type":567,"value":881},{"type":562,"tag":627,"props":1098,"children":1099},{"style":765},[1100],{"type":567,"value":886},{"type":562,"tag":627,"props":1102,"children":1104},{"class":629,"line":1103},13,[1105,1110,1115,1119,1123,1127,1131,1135,1139],{"type":562,"tag":627,"props":1106,"children":1107},{"style":847},[1108],{"type":567,"value":1109},"    let",{"type":562,"tag":627,"props":1111,"children":1112},{"style":793},[1113],{"type":567,"value":1114}," j",{"type":562,"tag":627,"props":1116,"children":1117},{"style":765},[1118],{"type":567,"value":861},{"type":562,"tag":627,"props":1120,"children":1121},{"style":793},[1122],{"type":567,"value":918},{"type":562,"tag":627,"props":1124,"children":1125},{"style":765},[1126],{"type":567,"value":923},{"type":562,"tag":627,"props":1128,"children":1129},{"style":926},[1130],{"type":567,"value":929},{"type":562,"tag":627,"props":1132,"children":1133},{"style":847},[1134],{"type":567,"value":934},{"type":562,"tag":627,"props":1136,"children":1137},{"style":937},[1138],{"type":567,"value":1022},{"type":562,"tag":627,"props":1140,"children":1141},{"style":765},[1142],{"type":567,"value":945},{"type":562,"tag":627,"props":1144,"children":1146},{"class":629,"line":1145},14,[1147,1152,1156,1161,1165,1169,1173,1177,1181,1185,1189,1193,1197,1201,1205,1209],{"type":562,"tag":627,"props":1148,"children":1149},{"style":771},[1150],{"type":567,"value":1151},"    while",{"type":562,"tag":627,"props":1153,"children":1154},{"style":765},[1155],{"type":567,"value":871},{"type":562,"tag":627,"props":1157,"children":1158},{"style":793},[1159],{"type":567,"value":1160},"j",{"type":562,"tag":627,"props":1162,"children":1163},{"style":765},[1164],{"type":567,"value":968},{"type":562,"tag":627,"props":1166,"children":1167},{"style":937},[1168],{"type":567,"value":973},{"type":562,"tag":627,"props":1170,"children":1171},{"style":847},[1172],{"type":567,"value":978},{"type":562,"tag":627,"props":1174,"children":1175},{"style":793},[1176],{"type":567,"value":918},{"type":562,"tag":627,"props":1178,"children":1179},{"style":765},[1180],{"type":567,"value":987},{"type":562,"tag":627,"props":1182,"children":1183},{"style":793},[1184],{"type":567,"value":963},{"type":562,"tag":627,"props":1186,"children":1187},{"style":765},[1188],{"type":567,"value":996},{"type":562,"tag":627,"props":1190,"children":1191},{"style":765},[1192],{"type":567,"value":968},{"type":562,"tag":627,"props":1194,"children":1195},{"style":793},[1196],{"type":567,"value":918},{"type":562,"tag":627,"props":1198,"children":1199},{"style":765},[1200],{"type":567,"value":987},{"type":562,"tag":627,"props":1202,"children":1203},{"style":793},[1204],{"type":567,"value":1160},{"type":562,"tag":627,"props":1206,"children":1207},{"style":765},[1208],{"type":567,"value":1027},{"type":562,"tag":627,"props":1210,"children":1211},{"style":765},[1212],{"type":567,"value":886},{"type":562,"tag":627,"props":1214,"children":1216},{"class":629,"line":1215},15,[1217,1222,1226],{"type":562,"tag":627,"props":1218,"children":1219},{"style":793},[1220],{"type":567,"value":1221},"      j",{"type":562,"tag":627,"props":1223,"children":1224},{"style":847},[1225],{"type":567,"value":1045},{"type":562,"tag":627,"props":1227,"children":1228},{"style":765},[1229],{"type":567,"value":945},{"type":562,"tag":627,"props":1231,"children":1233},{"class":629,"line":1232},16,[1234],{"type":562,"tag":627,"props":1235,"children":1236},{"style":765},[1237],{"type":567,"value":1238},"    }\n",{"type":562,"tag":627,"props":1240,"children":1242},{"class":629,"line":1241},17,[1243],{"type":562,"tag":627,"props":1244,"children":1245},{"style":751},[1246],{"type":567,"value":1247},"    // 交换\n",{"type":562,"tag":627,"props":1249,"children":1251},{"class":629,"line":1250},18,[1252,1257,1261,1265,1269,1274,1278,1282,1286,1291,1295,1300,1304,1308,1312,1316,1320,1324,1328],{"type":562,"tag":627,"props":1253,"children":1254},{"style":765},[1255],{"type":567,"value":1256},"    [",{"type":562,"tag":627,"props":1258,"children":1259},{"style":793},[1260],{"type":567,"value":876},{"type":562,"tag":627,"props":1262,"children":1263},{"style":765},[1264],{"type":567,"value":987},{"type":562,"tag":627,"props":1266,"children":1267},{"style":793},[1268],{"type":567,"value":963},{"type":562,"tag":627,"props":1270,"children":1271},{"style":765},[1272],{"type":567,"value":1273},"],",{"type":562,"tag":627,"props":1275,"children":1276},{"style":793},[1277],{"type":567,"value":918},{"type":562,"tag":627,"props":1279,"children":1280},{"style":765},[1281],{"type":567,"value":987},{"type":562,"tag":627,"props":1283,"children":1284},{"style":793},[1285],{"type":567,"value":1160},{"type":562,"tag":627,"props":1287,"children":1288},{"style":765},[1289],{"type":567,"value":1290},"]]",{"type":562,"tag":627,"props":1292,"children":1293},{"style":765},[1294],{"type":567,"value":861},{"type":562,"tag":627,"props":1296,"children":1297},{"style":765},[1298],{"type":567,"value":1299}," [",{"type":562,"tag":627,"props":1301,"children":1302},{"style":793},[1303],{"type":567,"value":876},{"type":562,"tag":627,"props":1305,"children":1306},{"style":765},[1307],{"type":567,"value":987},{"type":562,"tag":627,"props":1309,"children":1310},{"style":793},[1311],{"type":567,"value":1160},{"type":562,"tag":627,"props":1313,"children":1314},{"style":765},[1315],{"type":567,"value":1273},{"type":562,"tag":627,"props":1317,"children":1318},{"style":793},[1319],{"type":567,"value":918},{"type":562,"tag":627,"props":1321,"children":1322},{"style":765},[1323],{"type":567,"value":987},{"type":562,"tag":627,"props":1325,"children":1326},{"style":793},[1327],{"type":567,"value":963},{"type":562,"tag":627,"props":1329,"children":1330},{"style":765},[1331],{"type":567,"value":1332},"]];\n",{"type":562,"tag":627,"props":1334,"children":1336},{"class":629,"line":1335},19,[1337],{"type":562,"tag":627,"props":1338,"children":1339},{"style":765},[1340],{"type":567,"value":1058},{"type":562,"tag":627,"props":1342,"children":1344},{"class":629,"line":1343},20,[1345],{"type":562,"tag":627,"props":1346,"children":1347},{"style":751},[1348],{"type":567,"value":1349},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":562,"tag":627,"props":1351,"children":1353},{"class":629,"line":1352},21,[1354,1358,1363,1367,1371,1375,1379],{"type":562,"tag":627,"props":1355,"children":1356},{"style":847},[1357],{"type":567,"value":904},{"type":562,"tag":627,"props":1359,"children":1360},{"style":793},[1361],{"type":567,"value":1362}," l",{"type":562,"tag":627,"props":1364,"children":1365},{"style":765},[1366],{"type":567,"value":861},{"type":562,"tag":627,"props":1368,"children":1369},{"style":793},[1370],{"type":567,"value":909},{"type":562,"tag":627,"props":1372,"children":1373},{"style":847},[1374],{"type":567,"value":1017},{"type":562,"tag":627,"props":1376,"children":1377},{"style":937},[1378],{"type":567,"value":1022},{"type":562,"tag":627,"props":1380,"children":1381},{"style":765},[1382],{"type":567,"value":945},{"type":562,"tag":627,"props":1384,"children":1386},{"class":629,"line":1385},22,[1387,1391,1396,1400,1404,1408,1412,1416,1420],{"type":562,"tag":627,"props":1388,"children":1389},{"style":847},[1390],{"type":567,"value":904},{"type":562,"tag":627,"props":1392,"children":1393},{"style":793},[1394],{"type":567,"value":1395}," r",{"type":562,"tag":627,"props":1397,"children":1398},{"style":765},[1399],{"type":567,"value":861},{"type":562,"tag":627,"props":1401,"children":1402},{"style":793},[1403],{"type":567,"value":918},{"type":562,"tag":627,"props":1405,"children":1406},{"style":765},[1407],{"type":567,"value":923},{"type":562,"tag":627,"props":1409,"children":1410},{"style":926},[1411],{"type":567,"value":929},{"type":562,"tag":627,"props":1413,"children":1414},{"style":847},[1415],{"type":567,"value":934},{"type":562,"tag":627,"props":1417,"children":1418},{"style":937},[1419],{"type":567,"value":1022},{"type":562,"tag":627,"props":1421,"children":1422},{"style":765},[1423],{"type":567,"value":945},{"type":562,"tag":627,"props":1425,"children":1427},{"class":629,"line":1426},23,[1428,1432,1436,1441,1446,1450,1454],{"type":562,"tag":627,"props":1429,"children":1430},{"style":771},[1431],{"type":567,"value":954},{"type":562,"tag":627,"props":1433,"children":1434},{"style":765},[1435],{"type":567,"value":871},{"type":562,"tag":627,"props":1437,"children":1438},{"style":793},[1439],{"type":567,"value":1440},"l",{"type":562,"tag":627,"props":1442,"children":1443},{"style":765},[1444],{"type":567,"value":1445}," \u003C",{"type":562,"tag":627,"props":1447,"children":1448},{"style":793},[1449],{"type":567,"value":1395},{"type":562,"tag":627,"props":1451,"children":1452},{"style":765},[1453],{"type":567,"value":881},{"type":562,"tag":627,"props":1455,"children":1456},{"style":765},[1457],{"type":567,"value":886},{"type":562,"tag":627,"props":1459,"children":1461},{"class":629,"line":1460},24,[1462,1466,1470,1474,1478,1482,1486,1490,1495,1499,1503,1507,1511,1515,1519,1523,1527,1531,1535],{"type":562,"tag":627,"props":1463,"children":1464},{"style":765},[1465],{"type":567,"value":1256},{"type":562,"tag":627,"props":1467,"children":1468},{"style":793},[1469],{"type":567,"value":876},{"type":562,"tag":627,"props":1471,"children":1472},{"style":765},[1473],{"type":567,"value":987},{"type":562,"tag":627,"props":1475,"children":1476},{"style":793},[1477],{"type":567,"value":1440},{"type":562,"tag":627,"props":1479,"children":1480},{"style":765},[1481],{"type":567,"value":1273},{"type":562,"tag":627,"props":1483,"children":1484},{"style":793},[1485],{"type":567,"value":918},{"type":562,"tag":627,"props":1487,"children":1488},{"style":765},[1489],{"type":567,"value":987},{"type":562,"tag":627,"props":1491,"children":1492},{"style":793},[1493],{"type":567,"value":1494},"r",{"type":562,"tag":627,"props":1496,"children":1497},{"style":765},[1498],{"type":567,"value":1290},{"type":562,"tag":627,"props":1500,"children":1501},{"style":765},[1502],{"type":567,"value":861},{"type":562,"tag":627,"props":1504,"children":1505},{"style":765},[1506],{"type":567,"value":1299},{"type":562,"tag":627,"props":1508,"children":1509},{"style":793},[1510],{"type":567,"value":876},{"type":562,"tag":627,"props":1512,"children":1513},{"style":765},[1514],{"type":567,"value":987},{"type":562,"tag":627,"props":1516,"children":1517},{"style":793},[1518],{"type":567,"value":1494},{"type":562,"tag":627,"props":1520,"children":1521},{"style":765},[1522],{"type":567,"value":1273},{"type":562,"tag":627,"props":1524,"children":1525},{"style":793},[1526],{"type":567,"value":918},{"type":562,"tag":627,"props":1528,"children":1529},{"style":765},[1530],{"type":567,"value":987},{"type":562,"tag":627,"props":1532,"children":1533},{"style":793},[1534],{"type":567,"value":1440},{"type":562,"tag":627,"props":1536,"children":1537},{"style":765},[1538],{"type":567,"value":1332},{"type":562,"tag":627,"props":1540,"children":1542},{"class":629,"line":1541},25,[1543,1548,1553],{"type":562,"tag":627,"props":1544,"children":1545},{"style":793},[1546],{"type":567,"value":1547},"    l",{"type":562,"tag":627,"props":1549,"children":1550},{"style":847},[1551],{"type":567,"value":1552},"++",{"type":562,"tag":627,"props":1554,"children":1555},{"style":765},[1556],{"type":567,"value":945},{"type":562,"tag":627,"props":1558,"children":1560},{"class":629,"line":1559},26,[1561,1566,1570],{"type":562,"tag":627,"props":1562,"children":1563},{"style":793},[1564],{"type":567,"value":1565},"    r",{"type":562,"tag":627,"props":1567,"children":1568},{"style":847},[1569],{"type":567,"value":1045},{"type":562,"tag":627,"props":1571,"children":1572},{"style":765},[1573],{"type":567,"value":945},{"type":562,"tag":627,"props":1575,"children":1577},{"class":629,"line":1576},27,[1578],{"type":562,"tag":627,"props":1579,"children":1580},{"style":765},[1581],{"type":567,"value":1058},{"type":562,"tag":627,"props":1583,"children":1585},{"class":629,"line":1584},28,[1586],{"type":562,"tag":627,"props":1587,"children":1588},{"style":765},[1589],{"type":567,"value":1590},"};\n",{"type":562,"tag":1592,"props":1593,"children":1594},"style",{},[1595],{"type":567,"value":1596},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":843,"depth":843,"links":1598},[1599,1600],{"id":723,"depth":639,"text":723},{"id":728,"depth":639,"text":728,"children":1601},[1602],{"id":734,"depth":799,"text":734},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1609,1611],{"_path":102,"title":101,"description":1610},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":108,"title":107,"description":1612},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1715137597580]