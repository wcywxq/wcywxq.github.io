[{"data":1,"prerenderedAt":1539},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":478,"/algorithm/leetcode/major/next-permutation-surround":1534},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":105,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":104,"description":482,"url":483,"body":484,"_type":1529,"_id":1530,"_source":1531,"_file":1532,"_extension":1533},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":485,"children":486,"toc":1523},"root",[487,494,504,509,527,532,537,542,572,577,600,605,628,633,646,652,657,663,1517],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":495,"props":496,"children":497},"ul",{},[498],{"type":488,"tag":499,"props":500,"children":501},"li",{},[502],{"type":493,"value":503},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":488,"tag":489,"props":505,"children":506},{},[507],{"type":493,"value":508},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":488,"tag":495,"props":510,"children":511},{},[512,517,522],{"type":488,"tag":499,"props":513,"children":514},{},[515],{"type":493,"value":516},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":488,"tag":499,"props":518,"children":519},{},[520],{"type":493,"value":521},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":488,"tag":499,"props":523,"children":524},{},[525],{"type":493,"value":526},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":488,"tag":489,"props":528,"children":529},{},[530],{"type":493,"value":531},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":488,"tag":489,"props":533,"children":534},{},[535],{"type":493,"value":536},"必须 原地 修改，只允许使用额外常数空间。",{"type":488,"tag":489,"props":538,"children":539},{},[540],{"type":493,"value":541},"示例 1：",{"type":488,"tag":543,"props":544,"children":547},"pre",{"className":545,"code":546,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[548],{"type":488,"tag":549,"props":550,"children":551},"code",{"__ignoreMap":481},[552,563],{"type":488,"tag":553,"props":554,"children":557},"span",{"class":555,"line":556},"line",1,[558],{"type":488,"tag":553,"props":559,"children":560},{},[561],{"type":493,"value":562},"输入：nums = [1,2,3]\n",{"type":488,"tag":553,"props":564,"children":566},{"class":555,"line":565},2,[567],{"type":488,"tag":553,"props":568,"children":569},{},[570],{"type":493,"value":571},"输出：[1,3,2]\n",{"type":488,"tag":489,"props":573,"children":574},{},[575],{"type":493,"value":576},"示例 2：",{"type":488,"tag":543,"props":578,"children":580},{"className":545,"code":579,"language":493,"meta":481,"style":481},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[581],{"type":488,"tag":549,"props":582,"children":583},{"__ignoreMap":481},[584,592],{"type":488,"tag":553,"props":585,"children":586},{"class":555,"line":556},[587],{"type":488,"tag":553,"props":588,"children":589},{},[590],{"type":493,"value":591},"输入：nums = [3,2,1]\n",{"type":488,"tag":553,"props":593,"children":594},{"class":555,"line":565},[595],{"type":488,"tag":553,"props":596,"children":597},{},[598],{"type":493,"value":599},"输出：[1,2,3]\n",{"type":488,"tag":489,"props":601,"children":602},{},[603],{"type":493,"value":604},"示例 3：",{"type":488,"tag":543,"props":606,"children":608},{"className":545,"code":607,"language":493,"meta":481,"style":481},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[609],{"type":488,"tag":549,"props":610,"children":611},{"__ignoreMap":481},[612,620],{"type":488,"tag":553,"props":613,"children":614},{"class":555,"line":556},[615],{"type":488,"tag":553,"props":616,"children":617},{},[618],{"type":493,"value":619},"输入：nums = [1,1,5]\n",{"type":488,"tag":553,"props":621,"children":622},{"class":555,"line":565},[623],{"type":488,"tag":553,"props":624,"children":625},{},[626],{"type":493,"value":627},"输出：[1,5,1]\n",{"type":488,"tag":489,"props":629,"children":630},{},[631],{"type":493,"value":632},"提示：",{"type":488,"tag":495,"props":634,"children":635},{},[636,641],{"type":488,"tag":499,"props":637,"children":638},{},[639],{"type":493,"value":640},"1 \u003C= nums.length \u003C= 100",{"type":488,"tag":499,"props":642,"children":643},{},[644],{"type":493,"value":645},"0 \u003C= nums[i] \u003C= 100",{"type":488,"tag":647,"props":648,"children":650},"h2",{"id":649},"解题思路",[651],{"type":493,"value":649},{"type":488,"tag":647,"props":653,"children":655},{"id":654},"实现",[656],{"type":493,"value":654},{"type":488,"tag":658,"props":659,"children":661},"h3",{"id":660},"双指针",[662],{"type":493,"value":660},{"type":488,"tag":543,"props":664,"children":668},{"className":665,"code":666,"language":667,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[669],{"type":488,"tag":549,"props":670,"children":671},{"__ignoreMap":481},[672,681,723,758,767,813,822,872,958,976,985,994,1027,1069,1139,1156,1165,1174,1259,1267,1276,1309,1350,1384,1465,1483,1500,1508],{"type":488,"tag":553,"props":673,"children":674},{"class":555,"line":556},[675],{"type":488,"tag":553,"props":676,"children":678},{"style":677},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[679],{"type":493,"value":680},"/**\n",{"type":488,"tag":553,"props":682,"children":683},{"class":555,"line":565},[684,689,695,701,706,712,717],{"type":488,"tag":553,"props":685,"children":686},{"style":677},[687],{"type":493,"value":688}," * ",{"type":488,"tag":553,"props":690,"children":692},{"style":691},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[693],{"type":493,"value":694},"@",{"type":488,"tag":553,"props":696,"children":698},{"style":697},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[699],{"type":493,"value":700},"param",{"type":488,"tag":553,"props":702,"children":703},{"style":691},[704],{"type":493,"value":705}," {",{"type":488,"tag":553,"props":707,"children":709},{"style":708},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[710],{"type":493,"value":711},"number[]",{"type":488,"tag":553,"props":713,"children":714},{"style":691},[715],{"type":493,"value":716},"}",{"type":488,"tag":553,"props":718,"children":720},{"style":719},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[721],{"type":493,"value":722}," nums\n",{"type":488,"tag":553,"props":724,"children":726},{"class":555,"line":725},3,[727,731,735,740,744,749,753],{"type":488,"tag":553,"props":728,"children":729},{"style":677},[730],{"type":493,"value":688},{"type":488,"tag":553,"props":732,"children":733},{"style":691},[734],{"type":493,"value":694},{"type":488,"tag":553,"props":736,"children":737},{"style":697},[738],{"type":493,"value":739},"return",{"type":488,"tag":553,"props":741,"children":742},{"style":691},[743],{"type":493,"value":705},{"type":488,"tag":553,"props":745,"children":746},{"style":708},[747],{"type":493,"value":748},"void",{"type":488,"tag":553,"props":750,"children":751},{"style":691},[752],{"type":493,"value":716},{"type":488,"tag":553,"props":754,"children":755},{"style":677},[756],{"type":493,"value":757}," Do not return anything, modify nums in-place instead.\n",{"type":488,"tag":553,"props":759,"children":761},{"class":555,"line":760},4,[762],{"type":488,"tag":553,"props":763,"children":764},{"style":677},[765],{"type":493,"value":766}," */\n",{"type":488,"tag":553,"props":768,"children":770},{"class":555,"line":769},5,[771,777,783,788,793,798,803,808],{"type":488,"tag":553,"props":772,"children":774},{"style":773},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[775],{"type":493,"value":776},"var",{"type":488,"tag":553,"props":778,"children":780},{"style":779},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[781],{"type":493,"value":782}," nextPermutation",{"type":488,"tag":553,"props":784,"children":785},{"style":691},[786],{"type":493,"value":787}," =",{"type":488,"tag":553,"props":789,"children":790},{"style":773},[791],{"type":493,"value":792}," function",{"type":488,"tag":553,"props":794,"children":795},{"style":691},[796],{"type":493,"value":797}," (",{"type":488,"tag":553,"props":799,"children":800},{"style":719},[801],{"type":493,"value":802},"nums",{"type":488,"tag":553,"props":804,"children":805},{"style":691},[806],{"type":493,"value":807},")",{"type":488,"tag":553,"props":809,"children":810},{"style":691},[811],{"type":493,"value":812}," {\n",{"type":488,"tag":553,"props":814,"children":816},{"class":555,"line":815},6,[817],{"type":488,"tag":553,"props":818,"children":819},{"style":677},[820],{"type":493,"value":821},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":488,"tag":553,"props":823,"children":825},{"class":555,"line":824},7,[826,831,836,840,845,850,856,861,867],{"type":488,"tag":553,"props":827,"children":828},{"style":773},[829],{"type":493,"value":830},"  let",{"type":488,"tag":553,"props":832,"children":833},{"style":719},[834],{"type":493,"value":835}," i",{"type":488,"tag":553,"props":837,"children":838},{"style":691},[839],{"type":493,"value":787},{"type":488,"tag":553,"props":841,"children":842},{"style":719},[843],{"type":493,"value":844}," nums",{"type":488,"tag":553,"props":846,"children":847},{"style":691},[848],{"type":493,"value":849},".",{"type":488,"tag":553,"props":851,"children":853},{"style":852},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[854],{"type":493,"value":855},"length",{"type":488,"tag":553,"props":857,"children":858},{"style":773},[859],{"type":493,"value":860}," -",{"type":488,"tag":553,"props":862,"children":864},{"style":863},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[865],{"type":493,"value":866}," 2",{"type":488,"tag":553,"props":868,"children":869},{"style":691},[870],{"type":493,"value":871},";\n",{"type":488,"tag":553,"props":873,"children":875},{"class":555,"line":874},8,[876,881,885,890,895,900,905,909,914,918,923,927,931,935,939,944,949,954],{"type":488,"tag":553,"props":877,"children":878},{"style":697},[879],{"type":493,"value":880},"  while",{"type":488,"tag":553,"props":882,"children":883},{"style":691},[884],{"type":493,"value":797},{"type":488,"tag":553,"props":886,"children":887},{"style":719},[888],{"type":493,"value":889},"i",{"type":488,"tag":553,"props":891,"children":892},{"style":691},[893],{"type":493,"value":894}," >=",{"type":488,"tag":553,"props":896,"children":897},{"style":863},[898],{"type":493,"value":899}," 0",{"type":488,"tag":553,"props":901,"children":902},{"style":773},[903],{"type":493,"value":904}," &&",{"type":488,"tag":553,"props":906,"children":907},{"style":719},[908],{"type":493,"value":844},{"type":488,"tag":553,"props":910,"children":911},{"style":691},[912],{"type":493,"value":913},"[",{"type":488,"tag":553,"props":915,"children":916},{"style":719},[917],{"type":493,"value":889},{"type":488,"tag":553,"props":919,"children":920},{"style":691},[921],{"type":493,"value":922},"]",{"type":488,"tag":553,"props":924,"children":925},{"style":691},[926],{"type":493,"value":894},{"type":488,"tag":553,"props":928,"children":929},{"style":719},[930],{"type":493,"value":844},{"type":488,"tag":553,"props":932,"children":933},{"style":691},[934],{"type":493,"value":913},{"type":488,"tag":553,"props":936,"children":937},{"style":719},[938],{"type":493,"value":889},{"type":488,"tag":553,"props":940,"children":941},{"style":773},[942],{"type":493,"value":943}," +",{"type":488,"tag":553,"props":945,"children":946},{"style":863},[947],{"type":493,"value":948}," 1",{"type":488,"tag":553,"props":950,"children":951},{"style":691},[952],{"type":493,"value":953},"])",{"type":488,"tag":553,"props":955,"children":956},{"style":691},[957],{"type":493,"value":812},{"type":488,"tag":553,"props":959,"children":961},{"class":555,"line":960},9,[962,967,972],{"type":488,"tag":553,"props":963,"children":964},{"style":719},[965],{"type":493,"value":966},"    i",{"type":488,"tag":553,"props":968,"children":969},{"style":773},[970],{"type":493,"value":971},"--",{"type":488,"tag":553,"props":973,"children":974},{"style":691},[975],{"type":493,"value":871},{"type":488,"tag":553,"props":977,"children":979},{"class":555,"line":978},10,[980],{"type":488,"tag":553,"props":981,"children":982},{"style":691},[983],{"type":493,"value":984},"  }\n",{"type":488,"tag":553,"props":986,"children":988},{"class":555,"line":987},11,[989],{"type":488,"tag":553,"props":990,"children":991},{"style":677},[992],{"type":493,"value":993},"  // i 在数组中存在，进行交换\n",{"type":488,"tag":553,"props":995,"children":997},{"class":555,"line":996},12,[998,1003,1007,1011,1015,1019,1023],{"type":488,"tag":553,"props":999,"children":1000},{"style":697},[1001],{"type":493,"value":1002},"  if",{"type":488,"tag":553,"props":1004,"children":1005},{"style":691},[1006],{"type":493,"value":797},{"type":488,"tag":553,"props":1008,"children":1009},{"style":719},[1010],{"type":493,"value":889},{"type":488,"tag":553,"props":1012,"children":1013},{"style":691},[1014],{"type":493,"value":894},{"type":488,"tag":553,"props":1016,"children":1017},{"style":863},[1018],{"type":493,"value":899},{"type":488,"tag":553,"props":1020,"children":1021},{"style":691},[1022],{"type":493,"value":807},{"type":488,"tag":553,"props":1024,"children":1025},{"style":691},[1026],{"type":493,"value":812},{"type":488,"tag":553,"props":1028,"children":1030},{"class":555,"line":1029},13,[1031,1036,1041,1045,1049,1053,1057,1061,1065],{"type":488,"tag":553,"props":1032,"children":1033},{"style":773},[1034],{"type":493,"value":1035},"    let",{"type":488,"tag":553,"props":1037,"children":1038},{"style":719},[1039],{"type":493,"value":1040}," j",{"type":488,"tag":553,"props":1042,"children":1043},{"style":691},[1044],{"type":493,"value":787},{"type":488,"tag":553,"props":1046,"children":1047},{"style":719},[1048],{"type":493,"value":844},{"type":488,"tag":553,"props":1050,"children":1051},{"style":691},[1052],{"type":493,"value":849},{"type":488,"tag":553,"props":1054,"children":1055},{"style":852},[1056],{"type":493,"value":855},{"type":488,"tag":553,"props":1058,"children":1059},{"style":773},[1060],{"type":493,"value":860},{"type":488,"tag":553,"props":1062,"children":1063},{"style":863},[1064],{"type":493,"value":948},{"type":488,"tag":553,"props":1066,"children":1067},{"style":691},[1068],{"type":493,"value":871},{"type":488,"tag":553,"props":1070,"children":1072},{"class":555,"line":1071},14,[1073,1078,1082,1087,1091,1095,1099,1103,1107,1111,1115,1119,1123,1127,1131,1135],{"type":488,"tag":553,"props":1074,"children":1075},{"style":697},[1076],{"type":493,"value":1077},"    while",{"type":488,"tag":553,"props":1079,"children":1080},{"style":691},[1081],{"type":493,"value":797},{"type":488,"tag":553,"props":1083,"children":1084},{"style":719},[1085],{"type":493,"value":1086},"j",{"type":488,"tag":553,"props":1088,"children":1089},{"style":691},[1090],{"type":493,"value":894},{"type":488,"tag":553,"props":1092,"children":1093},{"style":863},[1094],{"type":493,"value":899},{"type":488,"tag":553,"props":1096,"children":1097},{"style":773},[1098],{"type":493,"value":904},{"type":488,"tag":553,"props":1100,"children":1101},{"style":719},[1102],{"type":493,"value":844},{"type":488,"tag":553,"props":1104,"children":1105},{"style":691},[1106],{"type":493,"value":913},{"type":488,"tag":553,"props":1108,"children":1109},{"style":719},[1110],{"type":493,"value":889},{"type":488,"tag":553,"props":1112,"children":1113},{"style":691},[1114],{"type":493,"value":922},{"type":488,"tag":553,"props":1116,"children":1117},{"style":691},[1118],{"type":493,"value":894},{"type":488,"tag":553,"props":1120,"children":1121},{"style":719},[1122],{"type":493,"value":844},{"type":488,"tag":553,"props":1124,"children":1125},{"style":691},[1126],{"type":493,"value":913},{"type":488,"tag":553,"props":1128,"children":1129},{"style":719},[1130],{"type":493,"value":1086},{"type":488,"tag":553,"props":1132,"children":1133},{"style":691},[1134],{"type":493,"value":953},{"type":488,"tag":553,"props":1136,"children":1137},{"style":691},[1138],{"type":493,"value":812},{"type":488,"tag":553,"props":1140,"children":1142},{"class":555,"line":1141},15,[1143,1148,1152],{"type":488,"tag":553,"props":1144,"children":1145},{"style":719},[1146],{"type":493,"value":1147},"      j",{"type":488,"tag":553,"props":1149,"children":1150},{"style":773},[1151],{"type":493,"value":971},{"type":488,"tag":553,"props":1153,"children":1154},{"style":691},[1155],{"type":493,"value":871},{"type":488,"tag":553,"props":1157,"children":1159},{"class":555,"line":1158},16,[1160],{"type":488,"tag":553,"props":1161,"children":1162},{"style":691},[1163],{"type":493,"value":1164},"    }\n",{"type":488,"tag":553,"props":1166,"children":1168},{"class":555,"line":1167},17,[1169],{"type":488,"tag":553,"props":1170,"children":1171},{"style":677},[1172],{"type":493,"value":1173},"    // 交换\n",{"type":488,"tag":553,"props":1175,"children":1177},{"class":555,"line":1176},18,[1178,1183,1187,1191,1195,1200,1204,1208,1212,1217,1221,1226,1230,1234,1238,1242,1246,1250,1254],{"type":488,"tag":553,"props":1179,"children":1180},{"style":691},[1181],{"type":493,"value":1182},"    [",{"type":488,"tag":553,"props":1184,"children":1185},{"style":719},[1186],{"type":493,"value":802},{"type":488,"tag":553,"props":1188,"children":1189},{"style":691},[1190],{"type":493,"value":913},{"type":488,"tag":553,"props":1192,"children":1193},{"style":719},[1194],{"type":493,"value":889},{"type":488,"tag":553,"props":1196,"children":1197},{"style":691},[1198],{"type":493,"value":1199},"],",{"type":488,"tag":553,"props":1201,"children":1202},{"style":719},[1203],{"type":493,"value":844},{"type":488,"tag":553,"props":1205,"children":1206},{"style":691},[1207],{"type":493,"value":913},{"type":488,"tag":553,"props":1209,"children":1210},{"style":719},[1211],{"type":493,"value":1086},{"type":488,"tag":553,"props":1213,"children":1214},{"style":691},[1215],{"type":493,"value":1216},"]]",{"type":488,"tag":553,"props":1218,"children":1219},{"style":691},[1220],{"type":493,"value":787},{"type":488,"tag":553,"props":1222,"children":1223},{"style":691},[1224],{"type":493,"value":1225}," [",{"type":488,"tag":553,"props":1227,"children":1228},{"style":719},[1229],{"type":493,"value":802},{"type":488,"tag":553,"props":1231,"children":1232},{"style":691},[1233],{"type":493,"value":913},{"type":488,"tag":553,"props":1235,"children":1236},{"style":719},[1237],{"type":493,"value":1086},{"type":488,"tag":553,"props":1239,"children":1240},{"style":691},[1241],{"type":493,"value":1199},{"type":488,"tag":553,"props":1243,"children":1244},{"style":719},[1245],{"type":493,"value":844},{"type":488,"tag":553,"props":1247,"children":1248},{"style":691},[1249],{"type":493,"value":913},{"type":488,"tag":553,"props":1251,"children":1252},{"style":719},[1253],{"type":493,"value":889},{"type":488,"tag":553,"props":1255,"children":1256},{"style":691},[1257],{"type":493,"value":1258},"]];\n",{"type":488,"tag":553,"props":1260,"children":1262},{"class":555,"line":1261},19,[1263],{"type":488,"tag":553,"props":1264,"children":1265},{"style":691},[1266],{"type":493,"value":984},{"type":488,"tag":553,"props":1268,"children":1270},{"class":555,"line":1269},20,[1271],{"type":488,"tag":553,"props":1272,"children":1273},{"style":677},[1274],{"type":493,"value":1275},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":488,"tag":553,"props":1277,"children":1279},{"class":555,"line":1278},21,[1280,1284,1289,1293,1297,1301,1305],{"type":488,"tag":553,"props":1281,"children":1282},{"style":773},[1283],{"type":493,"value":830},{"type":488,"tag":553,"props":1285,"children":1286},{"style":719},[1287],{"type":493,"value":1288}," l",{"type":488,"tag":553,"props":1290,"children":1291},{"style":691},[1292],{"type":493,"value":787},{"type":488,"tag":553,"props":1294,"children":1295},{"style":719},[1296],{"type":493,"value":835},{"type":488,"tag":553,"props":1298,"children":1299},{"style":773},[1300],{"type":493,"value":943},{"type":488,"tag":553,"props":1302,"children":1303},{"style":863},[1304],{"type":493,"value":948},{"type":488,"tag":553,"props":1306,"children":1307},{"style":691},[1308],{"type":493,"value":871},{"type":488,"tag":553,"props":1310,"children":1312},{"class":555,"line":1311},22,[1313,1317,1322,1326,1330,1334,1338,1342,1346],{"type":488,"tag":553,"props":1314,"children":1315},{"style":773},[1316],{"type":493,"value":830},{"type":488,"tag":553,"props":1318,"children":1319},{"style":719},[1320],{"type":493,"value":1321}," r",{"type":488,"tag":553,"props":1323,"children":1324},{"style":691},[1325],{"type":493,"value":787},{"type":488,"tag":553,"props":1327,"children":1328},{"style":719},[1329],{"type":493,"value":844},{"type":488,"tag":553,"props":1331,"children":1332},{"style":691},[1333],{"type":493,"value":849},{"type":488,"tag":553,"props":1335,"children":1336},{"style":852},[1337],{"type":493,"value":855},{"type":488,"tag":553,"props":1339,"children":1340},{"style":773},[1341],{"type":493,"value":860},{"type":488,"tag":553,"props":1343,"children":1344},{"style":863},[1345],{"type":493,"value":948},{"type":488,"tag":553,"props":1347,"children":1348},{"style":691},[1349],{"type":493,"value":871},{"type":488,"tag":553,"props":1351,"children":1353},{"class":555,"line":1352},23,[1354,1358,1362,1367,1372,1376,1380],{"type":488,"tag":553,"props":1355,"children":1356},{"style":697},[1357],{"type":493,"value":880},{"type":488,"tag":553,"props":1359,"children":1360},{"style":691},[1361],{"type":493,"value":797},{"type":488,"tag":553,"props":1363,"children":1364},{"style":719},[1365],{"type":493,"value":1366},"l",{"type":488,"tag":553,"props":1368,"children":1369},{"style":691},[1370],{"type":493,"value":1371}," \u003C",{"type":488,"tag":553,"props":1373,"children":1374},{"style":719},[1375],{"type":493,"value":1321},{"type":488,"tag":553,"props":1377,"children":1378},{"style":691},[1379],{"type":493,"value":807},{"type":488,"tag":553,"props":1381,"children":1382},{"style":691},[1383],{"type":493,"value":812},{"type":488,"tag":553,"props":1385,"children":1387},{"class":555,"line":1386},24,[1388,1392,1396,1400,1404,1408,1412,1416,1421,1425,1429,1433,1437,1441,1445,1449,1453,1457,1461],{"type":488,"tag":553,"props":1389,"children":1390},{"style":691},[1391],{"type":493,"value":1182},{"type":488,"tag":553,"props":1393,"children":1394},{"style":719},[1395],{"type":493,"value":802},{"type":488,"tag":553,"props":1397,"children":1398},{"style":691},[1399],{"type":493,"value":913},{"type":488,"tag":553,"props":1401,"children":1402},{"style":719},[1403],{"type":493,"value":1366},{"type":488,"tag":553,"props":1405,"children":1406},{"style":691},[1407],{"type":493,"value":1199},{"type":488,"tag":553,"props":1409,"children":1410},{"style":719},[1411],{"type":493,"value":844},{"type":488,"tag":553,"props":1413,"children":1414},{"style":691},[1415],{"type":493,"value":913},{"type":488,"tag":553,"props":1417,"children":1418},{"style":719},[1419],{"type":493,"value":1420},"r",{"type":488,"tag":553,"props":1422,"children":1423},{"style":691},[1424],{"type":493,"value":1216},{"type":488,"tag":553,"props":1426,"children":1427},{"style":691},[1428],{"type":493,"value":787},{"type":488,"tag":553,"props":1430,"children":1431},{"style":691},[1432],{"type":493,"value":1225},{"type":488,"tag":553,"props":1434,"children":1435},{"style":719},[1436],{"type":493,"value":802},{"type":488,"tag":553,"props":1438,"children":1439},{"style":691},[1440],{"type":493,"value":913},{"type":488,"tag":553,"props":1442,"children":1443},{"style":719},[1444],{"type":493,"value":1420},{"type":488,"tag":553,"props":1446,"children":1447},{"style":691},[1448],{"type":493,"value":1199},{"type":488,"tag":553,"props":1450,"children":1451},{"style":719},[1452],{"type":493,"value":844},{"type":488,"tag":553,"props":1454,"children":1455},{"style":691},[1456],{"type":493,"value":913},{"type":488,"tag":553,"props":1458,"children":1459},{"style":719},[1460],{"type":493,"value":1366},{"type":488,"tag":553,"props":1462,"children":1463},{"style":691},[1464],{"type":493,"value":1258},{"type":488,"tag":553,"props":1466,"children":1468},{"class":555,"line":1467},25,[1469,1474,1479],{"type":488,"tag":553,"props":1470,"children":1471},{"style":719},[1472],{"type":493,"value":1473},"    l",{"type":488,"tag":553,"props":1475,"children":1476},{"style":773},[1477],{"type":493,"value":1478},"++",{"type":488,"tag":553,"props":1480,"children":1481},{"style":691},[1482],{"type":493,"value":871},{"type":488,"tag":553,"props":1484,"children":1486},{"class":555,"line":1485},26,[1487,1492,1496],{"type":488,"tag":553,"props":1488,"children":1489},{"style":719},[1490],{"type":493,"value":1491},"    r",{"type":488,"tag":553,"props":1493,"children":1494},{"style":773},[1495],{"type":493,"value":971},{"type":488,"tag":553,"props":1497,"children":1498},{"style":691},[1499],{"type":493,"value":871},{"type":488,"tag":553,"props":1501,"children":1503},{"class":555,"line":1502},27,[1504],{"type":488,"tag":553,"props":1505,"children":1506},{"style":691},[1507],{"type":493,"value":984},{"type":488,"tag":553,"props":1509,"children":1511},{"class":555,"line":1510},28,[1512],{"type":488,"tag":553,"props":1513,"children":1514},{"style":691},[1515],{"type":493,"value":1516},"};\n",{"type":488,"tag":1518,"props":1519,"children":1520},"style",{},[1521],{"type":493,"value":1522},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":769,"depth":769,"links":1524},[1525,1526],{"id":649,"depth":565,"text":649},{"id":654,"depth":565,"text":654,"children":1527},[1528],{"id":660,"depth":725,"text":660},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1535,1537],{"_path":102,"title":101,"description":1536},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":108,"title":107,"description":1538},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1714046223887]