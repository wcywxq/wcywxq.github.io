[{"data":1,"prerenderedAt":1501},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":452,"/algorithm/leetcode/major/next-permutation-surround":1496},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":96,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":95,"description":456,"url":457,"body":458,"_type":1491,"_id":1492,"_source":1493,"_file":1494,"_extension":1495},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":459,"children":460,"toc":1485},"root",[461,468,478,483,501,506,511,516,546,551,574,579,602,607,620,626,631,637,1479],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":469,"props":470,"children":471},"ul",{},[472],{"type":462,"tag":473,"props":474,"children":475},"li",{},[476],{"type":467,"value":477},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":462,"tag":463,"props":479,"children":480},{},[481],{"type":467,"value":482},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":462,"tag":469,"props":484,"children":485},{},[486,491,496],{"type":462,"tag":473,"props":487,"children":488},{},[489],{"type":467,"value":490},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":462,"tag":473,"props":492,"children":493},{},[494],{"type":467,"value":495},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":462,"tag":473,"props":497,"children":498},{},[499],{"type":467,"value":500},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":462,"tag":463,"props":502,"children":503},{},[504],{"type":467,"value":505},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":462,"tag":463,"props":507,"children":508},{},[509],{"type":467,"value":510},"必须 原地 修改，只允许使用额外常数空间。",{"type":462,"tag":463,"props":512,"children":513},{},[514],{"type":467,"value":515},"示例 1：",{"type":462,"tag":517,"props":518,"children":521},"pre",{"className":519,"code":520,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[522],{"type":462,"tag":523,"props":524,"children":525},"code",{"__ignoreMap":455},[526,537],{"type":462,"tag":527,"props":528,"children":531},"span",{"class":529,"line":530},"line",1,[532],{"type":462,"tag":527,"props":533,"children":534},{},[535],{"type":467,"value":536},"输入：nums = [1,2,3]\n",{"type":462,"tag":527,"props":538,"children":540},{"class":529,"line":539},2,[541],{"type":462,"tag":527,"props":542,"children":543},{},[544],{"type":467,"value":545},"输出：[1,3,2]\n",{"type":462,"tag":463,"props":547,"children":548},{},[549],{"type":467,"value":550},"示例 2：",{"type":462,"tag":517,"props":552,"children":554},{"className":519,"code":553,"language":467,"meta":455,"style":455},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[555],{"type":462,"tag":523,"props":556,"children":557},{"__ignoreMap":455},[558,566],{"type":462,"tag":527,"props":559,"children":560},{"class":529,"line":530},[561],{"type":462,"tag":527,"props":562,"children":563},{},[564],{"type":467,"value":565},"输入：nums = [3,2,1]\n",{"type":462,"tag":527,"props":567,"children":568},{"class":529,"line":539},[569],{"type":462,"tag":527,"props":570,"children":571},{},[572],{"type":467,"value":573},"输出：[1,2,3]\n",{"type":462,"tag":463,"props":575,"children":576},{},[577],{"type":467,"value":578},"示例 3：",{"type":462,"tag":517,"props":580,"children":582},{"className":519,"code":581,"language":467,"meta":455,"style":455},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[583],{"type":462,"tag":523,"props":584,"children":585},{"__ignoreMap":455},[586,594],{"type":462,"tag":527,"props":587,"children":588},{"class":529,"line":530},[589],{"type":462,"tag":527,"props":590,"children":591},{},[592],{"type":467,"value":593},"输入：nums = [1,1,5]\n",{"type":462,"tag":527,"props":595,"children":596},{"class":529,"line":539},[597],{"type":462,"tag":527,"props":598,"children":599},{},[600],{"type":467,"value":601},"输出：[1,5,1]\n",{"type":462,"tag":463,"props":603,"children":604},{},[605],{"type":467,"value":606},"提示：",{"type":462,"tag":469,"props":608,"children":609},{},[610,615],{"type":462,"tag":473,"props":611,"children":612},{},[613],{"type":467,"value":614},"1 \u003C= nums.length \u003C= 100",{"type":462,"tag":473,"props":616,"children":617},{},[618],{"type":467,"value":619},"0 \u003C= nums[i] \u003C= 100",{"type":462,"tag":621,"props":622,"children":624},"h2",{"id":623},"解题思路",[625],{"type":467,"value":623},{"type":462,"tag":621,"props":627,"children":629},{"id":628},"实现",[630],{"type":467,"value":628},{"type":462,"tag":632,"props":633,"children":635},"h3",{"id":634},"双指针",[636],{"type":467,"value":634},{"type":462,"tag":517,"props":638,"children":642},{"className":639,"code":640,"language":641,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[643],{"type":462,"tag":523,"props":644,"children":645},{"__ignoreMap":455},[646,655,681,704,713,757,766,818,902,920,929,938,967,1009,1075,1092,1101,1110,1209,1217,1226,1259,1300,1330,1423,1441,1458,1466],{"type":462,"tag":527,"props":647,"children":648},{"class":529,"line":530},[649],{"type":462,"tag":527,"props":650,"children":652},{"style":651},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[653],{"type":467,"value":654},"/**\n",{"type":462,"tag":527,"props":656,"children":657},{"class":529,"line":539},[658,663,669,675],{"type":462,"tag":527,"props":659,"children":660},{"style":651},[661],{"type":467,"value":662}," * ",{"type":462,"tag":527,"props":664,"children":666},{"style":665},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[667],{"type":467,"value":668},"@param",{"type":462,"tag":527,"props":670,"children":672},{"style":671},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[673],{"type":467,"value":674}," {number[]}",{"type":462,"tag":527,"props":676,"children":678},{"style":677},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[679],{"type":467,"value":680}," nums\n",{"type":462,"tag":527,"props":682,"children":684},{"class":529,"line":683},3,[685,689,694,699],{"type":462,"tag":527,"props":686,"children":687},{"style":651},[688],{"type":467,"value":662},{"type":462,"tag":527,"props":690,"children":691},{"style":665},[692],{"type":467,"value":693},"@return",{"type":462,"tag":527,"props":695,"children":696},{"style":671},[697],{"type":467,"value":698}," {void}",{"type":462,"tag":527,"props":700,"children":701},{"style":651},[702],{"type":467,"value":703}," Do not return anything, modify nums in-place instead.\n",{"type":462,"tag":527,"props":705,"children":707},{"class":529,"line":706},4,[708],{"type":462,"tag":527,"props":709,"children":710},{"style":651},[711],{"type":467,"value":712}," */\n",{"type":462,"tag":527,"props":714,"children":716},{"class":529,"line":715},5,[717,723,729,735,740,746,752],{"type":462,"tag":527,"props":718,"children":720},{"style":719},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[721],{"type":467,"value":722},"var",{"type":462,"tag":527,"props":724,"children":726},{"style":725},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[727],{"type":467,"value":728}," nextPermutation",{"type":462,"tag":527,"props":730,"children":732},{"style":731},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[733],{"type":467,"value":734}," =",{"type":462,"tag":527,"props":736,"children":737},{"style":719},[738],{"type":467,"value":739}," function",{"type":462,"tag":527,"props":741,"children":743},{"style":742},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[744],{"type":467,"value":745}," (",{"type":462,"tag":527,"props":747,"children":749},{"style":748},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[750],{"type":467,"value":751},"nums",{"type":462,"tag":527,"props":753,"children":754},{"style":742},[755],{"type":467,"value":756},") {\n",{"type":462,"tag":527,"props":758,"children":760},{"class":529,"line":759},6,[761],{"type":462,"tag":527,"props":762,"children":763},{"style":651},[764],{"type":467,"value":765},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":462,"tag":527,"props":767,"children":769},{"class":529,"line":768},7,[770,775,781,785,790,796,801,806,812],{"type":462,"tag":527,"props":771,"children":772},{"style":719},[773],{"type":467,"value":774},"  let",{"type":462,"tag":527,"props":776,"children":778},{"style":777},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[779],{"type":467,"value":780}," i",{"type":462,"tag":527,"props":782,"children":783},{"style":731},[784],{"type":467,"value":734},{"type":462,"tag":527,"props":786,"children":787},{"style":777},[788],{"type":467,"value":789}," nums",{"type":462,"tag":527,"props":791,"children":793},{"style":792},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[794],{"type":467,"value":795},".",{"type":462,"tag":527,"props":797,"children":798},{"style":742},[799],{"type":467,"value":800},"length ",{"type":462,"tag":527,"props":802,"children":803},{"style":731},[804],{"type":467,"value":805},"-",{"type":462,"tag":527,"props":807,"children":809},{"style":808},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[810],{"type":467,"value":811}," 2",{"type":462,"tag":527,"props":813,"children":815},{"style":814},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[816],{"type":467,"value":817},";\n",{"type":462,"tag":527,"props":819,"children":821},{"class":529,"line":820},8,[822,828,832,837,842,847,852,856,861,865,870,875,879,883,887,892,897],{"type":462,"tag":527,"props":823,"children":825},{"style":824},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[826],{"type":467,"value":827},"  while",{"type":462,"tag":527,"props":829,"children":830},{"style":742},[831],{"type":467,"value":745},{"type":462,"tag":527,"props":833,"children":834},{"style":777},[835],{"type":467,"value":836},"i",{"type":462,"tag":527,"props":838,"children":839},{"style":731},[840],{"type":467,"value":841}," >=",{"type":462,"tag":527,"props":843,"children":844},{"style":808},[845],{"type":467,"value":846}," 0",{"type":462,"tag":527,"props":848,"children":849},{"style":731},[850],{"type":467,"value":851}," &&",{"type":462,"tag":527,"props":853,"children":854},{"style":777},[855],{"type":467,"value":789},{"type":462,"tag":527,"props":857,"children":858},{"style":742},[859],{"type":467,"value":860},"[",{"type":462,"tag":527,"props":862,"children":863},{"style":777},[864],{"type":467,"value":836},{"type":462,"tag":527,"props":866,"children":867},{"style":742},[868],{"type":467,"value":869},"] ",{"type":462,"tag":527,"props":871,"children":872},{"style":731},[873],{"type":467,"value":874},">=",{"type":462,"tag":527,"props":876,"children":877},{"style":777},[878],{"type":467,"value":789},{"type":462,"tag":527,"props":880,"children":881},{"style":742},[882],{"type":467,"value":860},{"type":462,"tag":527,"props":884,"children":885},{"style":777},[886],{"type":467,"value":836},{"type":462,"tag":527,"props":888,"children":889},{"style":731},[890],{"type":467,"value":891}," +",{"type":462,"tag":527,"props":893,"children":894},{"style":808},[895],{"type":467,"value":896}," 1",{"type":462,"tag":527,"props":898,"children":899},{"style":742},[900],{"type":467,"value":901},"]) {\n",{"type":462,"tag":527,"props":903,"children":905},{"class":529,"line":904},9,[906,911,916],{"type":462,"tag":527,"props":907,"children":908},{"style":777},[909],{"type":467,"value":910},"    i",{"type":462,"tag":527,"props":912,"children":913},{"style":731},[914],{"type":467,"value":915},"--",{"type":462,"tag":527,"props":917,"children":918},{"style":814},[919],{"type":467,"value":817},{"type":462,"tag":527,"props":921,"children":923},{"class":529,"line":922},10,[924],{"type":462,"tag":527,"props":925,"children":926},{"style":742},[927],{"type":467,"value":928},"  }\n",{"type":462,"tag":527,"props":930,"children":932},{"class":529,"line":931},11,[933],{"type":462,"tag":527,"props":934,"children":935},{"style":651},[936],{"type":467,"value":937},"  // i 在数组中存在，进行交换\n",{"type":462,"tag":527,"props":939,"children":941},{"class":529,"line":940},12,[942,947,951,955,959,963],{"type":462,"tag":527,"props":943,"children":944},{"style":824},[945],{"type":467,"value":946},"  if",{"type":462,"tag":527,"props":948,"children":949},{"style":742},[950],{"type":467,"value":745},{"type":462,"tag":527,"props":952,"children":953},{"style":777},[954],{"type":467,"value":836},{"type":462,"tag":527,"props":956,"children":957},{"style":731},[958],{"type":467,"value":841},{"type":462,"tag":527,"props":960,"children":961},{"style":808},[962],{"type":467,"value":846},{"type":462,"tag":527,"props":964,"children":965},{"style":742},[966],{"type":467,"value":756},{"type":462,"tag":527,"props":968,"children":970},{"class":529,"line":969},13,[971,976,981,985,989,993,997,1001,1005],{"type":462,"tag":527,"props":972,"children":973},{"style":719},[974],{"type":467,"value":975},"    let",{"type":462,"tag":527,"props":977,"children":978},{"style":777},[979],{"type":467,"value":980}," j",{"type":462,"tag":527,"props":982,"children":983},{"style":731},[984],{"type":467,"value":734},{"type":462,"tag":527,"props":986,"children":987},{"style":777},[988],{"type":467,"value":789},{"type":462,"tag":527,"props":990,"children":991},{"style":792},[992],{"type":467,"value":795},{"type":462,"tag":527,"props":994,"children":995},{"style":742},[996],{"type":467,"value":800},{"type":462,"tag":527,"props":998,"children":999},{"style":731},[1000],{"type":467,"value":805},{"type":462,"tag":527,"props":1002,"children":1003},{"style":808},[1004],{"type":467,"value":896},{"type":462,"tag":527,"props":1006,"children":1007},{"style":814},[1008],{"type":467,"value":817},{"type":462,"tag":527,"props":1010,"children":1012},{"class":529,"line":1011},14,[1013,1018,1022,1027,1031,1035,1039,1043,1047,1051,1055,1059,1063,1067,1071],{"type":462,"tag":527,"props":1014,"children":1015},{"style":824},[1016],{"type":467,"value":1017},"    while",{"type":462,"tag":527,"props":1019,"children":1020},{"style":742},[1021],{"type":467,"value":745},{"type":462,"tag":527,"props":1023,"children":1024},{"style":777},[1025],{"type":467,"value":1026},"j",{"type":462,"tag":527,"props":1028,"children":1029},{"style":731},[1030],{"type":467,"value":841},{"type":462,"tag":527,"props":1032,"children":1033},{"style":808},[1034],{"type":467,"value":846},{"type":462,"tag":527,"props":1036,"children":1037},{"style":731},[1038],{"type":467,"value":851},{"type":462,"tag":527,"props":1040,"children":1041},{"style":777},[1042],{"type":467,"value":789},{"type":462,"tag":527,"props":1044,"children":1045},{"style":742},[1046],{"type":467,"value":860},{"type":462,"tag":527,"props":1048,"children":1049},{"style":777},[1050],{"type":467,"value":836},{"type":462,"tag":527,"props":1052,"children":1053},{"style":742},[1054],{"type":467,"value":869},{"type":462,"tag":527,"props":1056,"children":1057},{"style":731},[1058],{"type":467,"value":874},{"type":462,"tag":527,"props":1060,"children":1061},{"style":777},[1062],{"type":467,"value":789},{"type":462,"tag":527,"props":1064,"children":1065},{"style":742},[1066],{"type":467,"value":860},{"type":462,"tag":527,"props":1068,"children":1069},{"style":777},[1070],{"type":467,"value":1026},{"type":462,"tag":527,"props":1072,"children":1073},{"style":742},[1074],{"type":467,"value":901},{"type":462,"tag":527,"props":1076,"children":1078},{"class":529,"line":1077},15,[1079,1084,1088],{"type":462,"tag":527,"props":1080,"children":1081},{"style":777},[1082],{"type":467,"value":1083},"      j",{"type":462,"tag":527,"props":1085,"children":1086},{"style":731},[1087],{"type":467,"value":915},{"type":462,"tag":527,"props":1089,"children":1090},{"style":814},[1091],{"type":467,"value":817},{"type":462,"tag":527,"props":1093,"children":1095},{"class":529,"line":1094},16,[1096],{"type":462,"tag":527,"props":1097,"children":1098},{"style":742},[1099],{"type":467,"value":1100},"    }\n",{"type":462,"tag":527,"props":1102,"children":1104},{"class":529,"line":1103},17,[1105],{"type":462,"tag":527,"props":1106,"children":1107},{"style":651},[1108],{"type":467,"value":1109},"    // 交换\n",{"type":462,"tag":527,"props":1111,"children":1113},{"class":529,"line":1112},18,[1114,1119,1123,1127,1131,1136,1141,1145,1149,1153,1158,1163,1168,1172,1176,1180,1184,1188,1192,1196,1200,1205],{"type":462,"tag":527,"props":1115,"children":1116},{"style":742},[1117],{"type":467,"value":1118},"    [",{"type":462,"tag":527,"props":1120,"children":1121},{"style":777},[1122],{"type":467,"value":751},{"type":462,"tag":527,"props":1124,"children":1125},{"style":742},[1126],{"type":467,"value":860},{"type":462,"tag":527,"props":1128,"children":1129},{"style":777},[1130],{"type":467,"value":836},{"type":462,"tag":527,"props":1132,"children":1133},{"style":742},[1134],{"type":467,"value":1135},"]",{"type":462,"tag":527,"props":1137,"children":1138},{"style":814},[1139],{"type":467,"value":1140},",",{"type":462,"tag":527,"props":1142,"children":1143},{"style":777},[1144],{"type":467,"value":789},{"type":462,"tag":527,"props":1146,"children":1147},{"style":742},[1148],{"type":467,"value":860},{"type":462,"tag":527,"props":1150,"children":1151},{"style":777},[1152],{"type":467,"value":1026},{"type":462,"tag":527,"props":1154,"children":1155},{"style":742},[1156],{"type":467,"value":1157},"]] ",{"type":462,"tag":527,"props":1159,"children":1160},{"style":731},[1161],{"type":467,"value":1162},"=",{"type":462,"tag":527,"props":1164,"children":1165},{"style":742},[1166],{"type":467,"value":1167}," [",{"type":462,"tag":527,"props":1169,"children":1170},{"style":777},[1171],{"type":467,"value":751},{"type":462,"tag":527,"props":1173,"children":1174},{"style":742},[1175],{"type":467,"value":860},{"type":462,"tag":527,"props":1177,"children":1178},{"style":777},[1179],{"type":467,"value":1026},{"type":462,"tag":527,"props":1181,"children":1182},{"style":742},[1183],{"type":467,"value":1135},{"type":462,"tag":527,"props":1185,"children":1186},{"style":814},[1187],{"type":467,"value":1140},{"type":462,"tag":527,"props":1189,"children":1190},{"style":777},[1191],{"type":467,"value":789},{"type":462,"tag":527,"props":1193,"children":1194},{"style":742},[1195],{"type":467,"value":860},{"type":462,"tag":527,"props":1197,"children":1198},{"style":777},[1199],{"type":467,"value":836},{"type":462,"tag":527,"props":1201,"children":1202},{"style":742},[1203],{"type":467,"value":1204},"]]",{"type":462,"tag":527,"props":1206,"children":1207},{"style":814},[1208],{"type":467,"value":817},{"type":462,"tag":527,"props":1210,"children":1212},{"class":529,"line":1211},19,[1213],{"type":462,"tag":527,"props":1214,"children":1215},{"style":742},[1216],{"type":467,"value":928},{"type":462,"tag":527,"props":1218,"children":1220},{"class":529,"line":1219},20,[1221],{"type":462,"tag":527,"props":1222,"children":1223},{"style":651},[1224],{"type":467,"value":1225},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":462,"tag":527,"props":1227,"children":1229},{"class":529,"line":1228},21,[1230,1234,1239,1243,1247,1251,1255],{"type":462,"tag":527,"props":1231,"children":1232},{"style":719},[1233],{"type":467,"value":774},{"type":462,"tag":527,"props":1235,"children":1236},{"style":777},[1237],{"type":467,"value":1238}," l",{"type":462,"tag":527,"props":1240,"children":1241},{"style":731},[1242],{"type":467,"value":734},{"type":462,"tag":527,"props":1244,"children":1245},{"style":777},[1246],{"type":467,"value":780},{"type":462,"tag":527,"props":1248,"children":1249},{"style":731},[1250],{"type":467,"value":891},{"type":462,"tag":527,"props":1252,"children":1253},{"style":808},[1254],{"type":467,"value":896},{"type":462,"tag":527,"props":1256,"children":1257},{"style":814},[1258],{"type":467,"value":817},{"type":462,"tag":527,"props":1260,"children":1262},{"class":529,"line":1261},22,[1263,1267,1272,1276,1280,1284,1288,1292,1296],{"type":462,"tag":527,"props":1264,"children":1265},{"style":719},[1266],{"type":467,"value":774},{"type":462,"tag":527,"props":1268,"children":1269},{"style":777},[1270],{"type":467,"value":1271}," r",{"type":462,"tag":527,"props":1273,"children":1274},{"style":731},[1275],{"type":467,"value":734},{"type":462,"tag":527,"props":1277,"children":1278},{"style":777},[1279],{"type":467,"value":789},{"type":462,"tag":527,"props":1281,"children":1282},{"style":792},[1283],{"type":467,"value":795},{"type":462,"tag":527,"props":1285,"children":1286},{"style":742},[1287],{"type":467,"value":800},{"type":462,"tag":527,"props":1289,"children":1290},{"style":731},[1291],{"type":467,"value":805},{"type":462,"tag":527,"props":1293,"children":1294},{"style":808},[1295],{"type":467,"value":896},{"type":462,"tag":527,"props":1297,"children":1298},{"style":814},[1299],{"type":467,"value":817},{"type":462,"tag":527,"props":1301,"children":1303},{"class":529,"line":1302},23,[1304,1308,1312,1317,1322,1326],{"type":462,"tag":527,"props":1305,"children":1306},{"style":824},[1307],{"type":467,"value":827},{"type":462,"tag":527,"props":1309,"children":1310},{"style":742},[1311],{"type":467,"value":745},{"type":462,"tag":527,"props":1313,"children":1314},{"style":777},[1315],{"type":467,"value":1316},"l",{"type":462,"tag":527,"props":1318,"children":1319},{"style":731},[1320],{"type":467,"value":1321}," \u003C",{"type":462,"tag":527,"props":1323,"children":1324},{"style":777},[1325],{"type":467,"value":1271},{"type":462,"tag":527,"props":1327,"children":1328},{"style":742},[1329],{"type":467,"value":756},{"type":462,"tag":527,"props":1331,"children":1333},{"class":529,"line":1332},24,[1334,1338,1342,1346,1350,1354,1358,1362,1366,1371,1375,1379,1383,1387,1391,1395,1399,1403,1407,1411,1415,1419],{"type":462,"tag":527,"props":1335,"children":1336},{"style":742},[1337],{"type":467,"value":1118},{"type":462,"tag":527,"props":1339,"children":1340},{"style":777},[1341],{"type":467,"value":751},{"type":462,"tag":527,"props":1343,"children":1344},{"style":742},[1345],{"type":467,"value":860},{"type":462,"tag":527,"props":1347,"children":1348},{"style":777},[1349],{"type":467,"value":1316},{"type":462,"tag":527,"props":1351,"children":1352},{"style":742},[1353],{"type":467,"value":1135},{"type":462,"tag":527,"props":1355,"children":1356},{"style":814},[1357],{"type":467,"value":1140},{"type":462,"tag":527,"props":1359,"children":1360},{"style":777},[1361],{"type":467,"value":789},{"type":462,"tag":527,"props":1363,"children":1364},{"style":742},[1365],{"type":467,"value":860},{"type":462,"tag":527,"props":1367,"children":1368},{"style":777},[1369],{"type":467,"value":1370},"r",{"type":462,"tag":527,"props":1372,"children":1373},{"style":742},[1374],{"type":467,"value":1157},{"type":462,"tag":527,"props":1376,"children":1377},{"style":731},[1378],{"type":467,"value":1162},{"type":462,"tag":527,"props":1380,"children":1381},{"style":742},[1382],{"type":467,"value":1167},{"type":462,"tag":527,"props":1384,"children":1385},{"style":777},[1386],{"type":467,"value":751},{"type":462,"tag":527,"props":1388,"children":1389},{"style":742},[1390],{"type":467,"value":860},{"type":462,"tag":527,"props":1392,"children":1393},{"style":777},[1394],{"type":467,"value":1370},{"type":462,"tag":527,"props":1396,"children":1397},{"style":742},[1398],{"type":467,"value":1135},{"type":462,"tag":527,"props":1400,"children":1401},{"style":814},[1402],{"type":467,"value":1140},{"type":462,"tag":527,"props":1404,"children":1405},{"style":777},[1406],{"type":467,"value":789},{"type":462,"tag":527,"props":1408,"children":1409},{"style":742},[1410],{"type":467,"value":860},{"type":462,"tag":527,"props":1412,"children":1413},{"style":777},[1414],{"type":467,"value":1316},{"type":462,"tag":527,"props":1416,"children":1417},{"style":742},[1418],{"type":467,"value":1204},{"type":462,"tag":527,"props":1420,"children":1421},{"style":814},[1422],{"type":467,"value":817},{"type":462,"tag":527,"props":1424,"children":1426},{"class":529,"line":1425},25,[1427,1432,1437],{"type":462,"tag":527,"props":1428,"children":1429},{"style":777},[1430],{"type":467,"value":1431},"    l",{"type":462,"tag":527,"props":1433,"children":1434},{"style":731},[1435],{"type":467,"value":1436},"++",{"type":462,"tag":527,"props":1438,"children":1439},{"style":814},[1440],{"type":467,"value":817},{"type":462,"tag":527,"props":1442,"children":1444},{"class":529,"line":1443},26,[1445,1450,1454],{"type":462,"tag":527,"props":1446,"children":1447},{"style":777},[1448],{"type":467,"value":1449},"    r",{"type":462,"tag":527,"props":1451,"children":1452},{"style":731},[1453],{"type":467,"value":915},{"type":462,"tag":527,"props":1455,"children":1456},{"style":814},[1457],{"type":467,"value":817},{"type":462,"tag":527,"props":1459,"children":1461},{"class":529,"line":1460},27,[1462],{"type":462,"tag":527,"props":1463,"children":1464},{"style":742},[1465],{"type":467,"value":928},{"type":462,"tag":527,"props":1467,"children":1469},{"class":529,"line":1468},28,[1470,1475],{"type":462,"tag":527,"props":1471,"children":1472},{"style":742},[1473],{"type":467,"value":1474},"}",{"type":462,"tag":527,"props":1476,"children":1477},{"style":814},[1478],{"type":467,"value":817},{"type":462,"tag":1480,"props":1481,"children":1482},"style",{},[1483],{"type":467,"value":1484},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":715,"depth":715,"links":1486},[1487,1488],{"id":623,"depth":539,"text":623},{"id":628,"depth":539,"text":628,"children":1489},[1490],{"id":634,"depth":683,"text":634},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1497,1499],{"_path":93,"title":92,"description":1498},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":99,"title":98,"description":1500},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1713457419993]