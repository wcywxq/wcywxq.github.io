[{"data":1,"prerenderedAt":1601},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":540,"/algorithm/leetcode/major/next-permutation-surround":1596},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":105,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":104,"description":544,"url":545,"body":546,"_type":1591,"_id":1592,"_source":1593,"_file":1594,"_extension":1595},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":547,"children":548,"toc":1585},"root",[549,556,566,571,589,594,599,604,634,639,662,667,690,695,708,714,719,725,1579],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":557,"props":558,"children":559},"ul",{},[560],{"type":550,"tag":561,"props":562,"children":563},"li",{},[564],{"type":555,"value":565},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":550,"tag":551,"props":567,"children":568},{},[569],{"type":555,"value":570},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":550,"tag":557,"props":572,"children":573},{},[574,579,584],{"type":550,"tag":561,"props":575,"children":576},{},[577],{"type":555,"value":578},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":550,"tag":561,"props":580,"children":581},{},[582],{"type":555,"value":583},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":550,"tag":561,"props":585,"children":586},{},[587],{"type":555,"value":588},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":550,"tag":551,"props":590,"children":591},{},[592],{"type":555,"value":593},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":550,"tag":551,"props":595,"children":596},{},[597],{"type":555,"value":598},"必须 原地 修改，只允许使用额外常数空间。",{"type":550,"tag":551,"props":600,"children":601},{},[602],{"type":555,"value":603},"示例 1：",{"type":550,"tag":605,"props":606,"children":609},"pre",{"className":607,"code":608,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[610],{"type":550,"tag":611,"props":612,"children":613},"code",{"__ignoreMap":543},[614,625],{"type":550,"tag":615,"props":616,"children":619},"span",{"class":617,"line":618},"line",1,[620],{"type":550,"tag":615,"props":621,"children":622},{},[623],{"type":555,"value":624},"输入：nums = [1,2,3]\n",{"type":550,"tag":615,"props":626,"children":628},{"class":617,"line":627},2,[629],{"type":550,"tag":615,"props":630,"children":631},{},[632],{"type":555,"value":633},"输出：[1,3,2]\n",{"type":550,"tag":551,"props":635,"children":636},{},[637],{"type":555,"value":638},"示例 2：",{"type":550,"tag":605,"props":640,"children":642},{"className":607,"code":641,"language":555,"meta":543,"style":543},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[643],{"type":550,"tag":611,"props":644,"children":645},{"__ignoreMap":543},[646,654],{"type":550,"tag":615,"props":647,"children":648},{"class":617,"line":618},[649],{"type":550,"tag":615,"props":650,"children":651},{},[652],{"type":555,"value":653},"输入：nums = [3,2,1]\n",{"type":550,"tag":615,"props":655,"children":656},{"class":617,"line":627},[657],{"type":550,"tag":615,"props":658,"children":659},{},[660],{"type":555,"value":661},"输出：[1,2,3]\n",{"type":550,"tag":551,"props":663,"children":664},{},[665],{"type":555,"value":666},"示例 3：",{"type":550,"tag":605,"props":668,"children":670},{"className":607,"code":669,"language":555,"meta":543,"style":543},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[671],{"type":550,"tag":611,"props":672,"children":673},{"__ignoreMap":543},[674,682],{"type":550,"tag":615,"props":675,"children":676},{"class":617,"line":618},[677],{"type":550,"tag":615,"props":678,"children":679},{},[680],{"type":555,"value":681},"输入：nums = [1,1,5]\n",{"type":550,"tag":615,"props":683,"children":684},{"class":617,"line":627},[685],{"type":550,"tag":615,"props":686,"children":687},{},[688],{"type":555,"value":689},"输出：[1,5,1]\n",{"type":550,"tag":551,"props":691,"children":692},{},[693],{"type":555,"value":694},"提示：",{"type":550,"tag":557,"props":696,"children":697},{},[698,703],{"type":550,"tag":561,"props":699,"children":700},{},[701],{"type":555,"value":702},"1 \u003C= nums.length \u003C= 100",{"type":550,"tag":561,"props":704,"children":705},{},[706],{"type":555,"value":707},"0 \u003C= nums[i] \u003C= 100",{"type":550,"tag":709,"props":710,"children":712},"h2",{"id":711},"解题思路",[713],{"type":555,"value":711},{"type":550,"tag":709,"props":715,"children":717},{"id":716},"实现",[718],{"type":555,"value":716},{"type":550,"tag":720,"props":721,"children":723},"h3",{"id":722},"双指针",[724],{"type":555,"value":722},{"type":550,"tag":605,"props":726,"children":730},{"className":727,"code":728,"language":729,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[731],{"type":550,"tag":611,"props":732,"children":733},{"__ignoreMap":543},[734,743,785,820,829,875,884,934,1020,1038,1047,1056,1089,1131,1201,1218,1227,1236,1321,1329,1338,1371,1412,1446,1527,1545,1562,1570],{"type":550,"tag":615,"props":735,"children":736},{"class":617,"line":618},[737],{"type":550,"tag":615,"props":738,"children":740},{"style":739},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[741],{"type":555,"value":742},"/**\n",{"type":550,"tag":615,"props":744,"children":745},{"class":617,"line":627},[746,751,757,763,768,774,779],{"type":550,"tag":615,"props":747,"children":748},{"style":739},[749],{"type":555,"value":750}," * ",{"type":550,"tag":615,"props":752,"children":754},{"style":753},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[755],{"type":555,"value":756},"@",{"type":550,"tag":615,"props":758,"children":760},{"style":759},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[761],{"type":555,"value":762},"param",{"type":550,"tag":615,"props":764,"children":765},{"style":753},[766],{"type":555,"value":767}," {",{"type":550,"tag":615,"props":769,"children":771},{"style":770},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[772],{"type":555,"value":773},"number[]",{"type":550,"tag":615,"props":775,"children":776},{"style":753},[777],{"type":555,"value":778},"}",{"type":550,"tag":615,"props":780,"children":782},{"style":781},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[783],{"type":555,"value":784}," nums\n",{"type":550,"tag":615,"props":786,"children":788},{"class":617,"line":787},3,[789,793,797,802,806,811,815],{"type":550,"tag":615,"props":790,"children":791},{"style":739},[792],{"type":555,"value":750},{"type":550,"tag":615,"props":794,"children":795},{"style":753},[796],{"type":555,"value":756},{"type":550,"tag":615,"props":798,"children":799},{"style":759},[800],{"type":555,"value":801},"return",{"type":550,"tag":615,"props":803,"children":804},{"style":753},[805],{"type":555,"value":767},{"type":550,"tag":615,"props":807,"children":808},{"style":770},[809],{"type":555,"value":810},"void",{"type":550,"tag":615,"props":812,"children":813},{"style":753},[814],{"type":555,"value":778},{"type":550,"tag":615,"props":816,"children":817},{"style":739},[818],{"type":555,"value":819}," Do not return anything, modify nums in-place instead.\n",{"type":550,"tag":615,"props":821,"children":823},{"class":617,"line":822},4,[824],{"type":550,"tag":615,"props":825,"children":826},{"style":739},[827],{"type":555,"value":828}," */\n",{"type":550,"tag":615,"props":830,"children":832},{"class":617,"line":831},5,[833,839,845,850,855,860,865,870],{"type":550,"tag":615,"props":834,"children":836},{"style":835},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[837],{"type":555,"value":838},"var",{"type":550,"tag":615,"props":840,"children":842},{"style":841},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[843],{"type":555,"value":844}," nextPermutation",{"type":550,"tag":615,"props":846,"children":847},{"style":753},[848],{"type":555,"value":849}," =",{"type":550,"tag":615,"props":851,"children":852},{"style":835},[853],{"type":555,"value":854}," function",{"type":550,"tag":615,"props":856,"children":857},{"style":753},[858],{"type":555,"value":859}," (",{"type":550,"tag":615,"props":861,"children":862},{"style":781},[863],{"type":555,"value":864},"nums",{"type":550,"tag":615,"props":866,"children":867},{"style":753},[868],{"type":555,"value":869},")",{"type":550,"tag":615,"props":871,"children":872},{"style":753},[873],{"type":555,"value":874}," {\n",{"type":550,"tag":615,"props":876,"children":878},{"class":617,"line":877},6,[879],{"type":550,"tag":615,"props":880,"children":881},{"style":739},[882],{"type":555,"value":883},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":550,"tag":615,"props":885,"children":887},{"class":617,"line":886},7,[888,893,898,902,907,912,918,923,929],{"type":550,"tag":615,"props":889,"children":890},{"style":835},[891],{"type":555,"value":892},"  let",{"type":550,"tag":615,"props":894,"children":895},{"style":781},[896],{"type":555,"value":897}," i",{"type":550,"tag":615,"props":899,"children":900},{"style":753},[901],{"type":555,"value":849},{"type":550,"tag":615,"props":903,"children":904},{"style":781},[905],{"type":555,"value":906}," nums",{"type":550,"tag":615,"props":908,"children":909},{"style":753},[910],{"type":555,"value":911},".",{"type":550,"tag":615,"props":913,"children":915},{"style":914},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[916],{"type":555,"value":917},"length",{"type":550,"tag":615,"props":919,"children":920},{"style":835},[921],{"type":555,"value":922}," -",{"type":550,"tag":615,"props":924,"children":926},{"style":925},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[927],{"type":555,"value":928}," 2",{"type":550,"tag":615,"props":930,"children":931},{"style":753},[932],{"type":555,"value":933},";\n",{"type":550,"tag":615,"props":935,"children":937},{"class":617,"line":936},8,[938,943,947,952,957,962,967,971,976,980,985,989,993,997,1001,1006,1011,1016],{"type":550,"tag":615,"props":939,"children":940},{"style":759},[941],{"type":555,"value":942},"  while",{"type":550,"tag":615,"props":944,"children":945},{"style":753},[946],{"type":555,"value":859},{"type":550,"tag":615,"props":948,"children":949},{"style":781},[950],{"type":555,"value":951},"i",{"type":550,"tag":615,"props":953,"children":954},{"style":753},[955],{"type":555,"value":956}," >=",{"type":550,"tag":615,"props":958,"children":959},{"style":925},[960],{"type":555,"value":961}," 0",{"type":550,"tag":615,"props":963,"children":964},{"style":835},[965],{"type":555,"value":966}," &&",{"type":550,"tag":615,"props":968,"children":969},{"style":781},[970],{"type":555,"value":906},{"type":550,"tag":615,"props":972,"children":973},{"style":753},[974],{"type":555,"value":975},"[",{"type":550,"tag":615,"props":977,"children":978},{"style":781},[979],{"type":555,"value":951},{"type":550,"tag":615,"props":981,"children":982},{"style":753},[983],{"type":555,"value":984},"]",{"type":550,"tag":615,"props":986,"children":987},{"style":753},[988],{"type":555,"value":956},{"type":550,"tag":615,"props":990,"children":991},{"style":781},[992],{"type":555,"value":906},{"type":550,"tag":615,"props":994,"children":995},{"style":753},[996],{"type":555,"value":975},{"type":550,"tag":615,"props":998,"children":999},{"style":781},[1000],{"type":555,"value":951},{"type":550,"tag":615,"props":1002,"children":1003},{"style":835},[1004],{"type":555,"value":1005}," +",{"type":550,"tag":615,"props":1007,"children":1008},{"style":925},[1009],{"type":555,"value":1010}," 1",{"type":550,"tag":615,"props":1012,"children":1013},{"style":753},[1014],{"type":555,"value":1015},"])",{"type":550,"tag":615,"props":1017,"children":1018},{"style":753},[1019],{"type":555,"value":874},{"type":550,"tag":615,"props":1021,"children":1023},{"class":617,"line":1022},9,[1024,1029,1034],{"type":550,"tag":615,"props":1025,"children":1026},{"style":781},[1027],{"type":555,"value":1028},"    i",{"type":550,"tag":615,"props":1030,"children":1031},{"style":835},[1032],{"type":555,"value":1033},"--",{"type":550,"tag":615,"props":1035,"children":1036},{"style":753},[1037],{"type":555,"value":933},{"type":550,"tag":615,"props":1039,"children":1041},{"class":617,"line":1040},10,[1042],{"type":550,"tag":615,"props":1043,"children":1044},{"style":753},[1045],{"type":555,"value":1046},"  }\n",{"type":550,"tag":615,"props":1048,"children":1050},{"class":617,"line":1049},11,[1051],{"type":550,"tag":615,"props":1052,"children":1053},{"style":739},[1054],{"type":555,"value":1055},"  // i 在数组中存在，进行交换\n",{"type":550,"tag":615,"props":1057,"children":1059},{"class":617,"line":1058},12,[1060,1065,1069,1073,1077,1081,1085],{"type":550,"tag":615,"props":1061,"children":1062},{"style":759},[1063],{"type":555,"value":1064},"  if",{"type":550,"tag":615,"props":1066,"children":1067},{"style":753},[1068],{"type":555,"value":859},{"type":550,"tag":615,"props":1070,"children":1071},{"style":781},[1072],{"type":555,"value":951},{"type":550,"tag":615,"props":1074,"children":1075},{"style":753},[1076],{"type":555,"value":956},{"type":550,"tag":615,"props":1078,"children":1079},{"style":925},[1080],{"type":555,"value":961},{"type":550,"tag":615,"props":1082,"children":1083},{"style":753},[1084],{"type":555,"value":869},{"type":550,"tag":615,"props":1086,"children":1087},{"style":753},[1088],{"type":555,"value":874},{"type":550,"tag":615,"props":1090,"children":1092},{"class":617,"line":1091},13,[1093,1098,1103,1107,1111,1115,1119,1123,1127],{"type":550,"tag":615,"props":1094,"children":1095},{"style":835},[1096],{"type":555,"value":1097},"    let",{"type":550,"tag":615,"props":1099,"children":1100},{"style":781},[1101],{"type":555,"value":1102}," j",{"type":550,"tag":615,"props":1104,"children":1105},{"style":753},[1106],{"type":555,"value":849},{"type":550,"tag":615,"props":1108,"children":1109},{"style":781},[1110],{"type":555,"value":906},{"type":550,"tag":615,"props":1112,"children":1113},{"style":753},[1114],{"type":555,"value":911},{"type":550,"tag":615,"props":1116,"children":1117},{"style":914},[1118],{"type":555,"value":917},{"type":550,"tag":615,"props":1120,"children":1121},{"style":835},[1122],{"type":555,"value":922},{"type":550,"tag":615,"props":1124,"children":1125},{"style":925},[1126],{"type":555,"value":1010},{"type":550,"tag":615,"props":1128,"children":1129},{"style":753},[1130],{"type":555,"value":933},{"type":550,"tag":615,"props":1132,"children":1134},{"class":617,"line":1133},14,[1135,1140,1144,1149,1153,1157,1161,1165,1169,1173,1177,1181,1185,1189,1193,1197],{"type":550,"tag":615,"props":1136,"children":1137},{"style":759},[1138],{"type":555,"value":1139},"    while",{"type":550,"tag":615,"props":1141,"children":1142},{"style":753},[1143],{"type":555,"value":859},{"type":550,"tag":615,"props":1145,"children":1146},{"style":781},[1147],{"type":555,"value":1148},"j",{"type":550,"tag":615,"props":1150,"children":1151},{"style":753},[1152],{"type":555,"value":956},{"type":550,"tag":615,"props":1154,"children":1155},{"style":925},[1156],{"type":555,"value":961},{"type":550,"tag":615,"props":1158,"children":1159},{"style":835},[1160],{"type":555,"value":966},{"type":550,"tag":615,"props":1162,"children":1163},{"style":781},[1164],{"type":555,"value":906},{"type":550,"tag":615,"props":1166,"children":1167},{"style":753},[1168],{"type":555,"value":975},{"type":550,"tag":615,"props":1170,"children":1171},{"style":781},[1172],{"type":555,"value":951},{"type":550,"tag":615,"props":1174,"children":1175},{"style":753},[1176],{"type":555,"value":984},{"type":550,"tag":615,"props":1178,"children":1179},{"style":753},[1180],{"type":555,"value":956},{"type":550,"tag":615,"props":1182,"children":1183},{"style":781},[1184],{"type":555,"value":906},{"type":550,"tag":615,"props":1186,"children":1187},{"style":753},[1188],{"type":555,"value":975},{"type":550,"tag":615,"props":1190,"children":1191},{"style":781},[1192],{"type":555,"value":1148},{"type":550,"tag":615,"props":1194,"children":1195},{"style":753},[1196],{"type":555,"value":1015},{"type":550,"tag":615,"props":1198,"children":1199},{"style":753},[1200],{"type":555,"value":874},{"type":550,"tag":615,"props":1202,"children":1204},{"class":617,"line":1203},15,[1205,1210,1214],{"type":550,"tag":615,"props":1206,"children":1207},{"style":781},[1208],{"type":555,"value":1209},"      j",{"type":550,"tag":615,"props":1211,"children":1212},{"style":835},[1213],{"type":555,"value":1033},{"type":550,"tag":615,"props":1215,"children":1216},{"style":753},[1217],{"type":555,"value":933},{"type":550,"tag":615,"props":1219,"children":1221},{"class":617,"line":1220},16,[1222],{"type":550,"tag":615,"props":1223,"children":1224},{"style":753},[1225],{"type":555,"value":1226},"    }\n",{"type":550,"tag":615,"props":1228,"children":1230},{"class":617,"line":1229},17,[1231],{"type":550,"tag":615,"props":1232,"children":1233},{"style":739},[1234],{"type":555,"value":1235},"    // 交换\n",{"type":550,"tag":615,"props":1237,"children":1239},{"class":617,"line":1238},18,[1240,1245,1249,1253,1257,1262,1266,1270,1274,1279,1283,1288,1292,1296,1300,1304,1308,1312,1316],{"type":550,"tag":615,"props":1241,"children":1242},{"style":753},[1243],{"type":555,"value":1244},"    [",{"type":550,"tag":615,"props":1246,"children":1247},{"style":781},[1248],{"type":555,"value":864},{"type":550,"tag":615,"props":1250,"children":1251},{"style":753},[1252],{"type":555,"value":975},{"type":550,"tag":615,"props":1254,"children":1255},{"style":781},[1256],{"type":555,"value":951},{"type":550,"tag":615,"props":1258,"children":1259},{"style":753},[1260],{"type":555,"value":1261},"],",{"type":550,"tag":615,"props":1263,"children":1264},{"style":781},[1265],{"type":555,"value":906},{"type":550,"tag":615,"props":1267,"children":1268},{"style":753},[1269],{"type":555,"value":975},{"type":550,"tag":615,"props":1271,"children":1272},{"style":781},[1273],{"type":555,"value":1148},{"type":550,"tag":615,"props":1275,"children":1276},{"style":753},[1277],{"type":555,"value":1278},"]]",{"type":550,"tag":615,"props":1280,"children":1281},{"style":753},[1282],{"type":555,"value":849},{"type":550,"tag":615,"props":1284,"children":1285},{"style":753},[1286],{"type":555,"value":1287}," [",{"type":550,"tag":615,"props":1289,"children":1290},{"style":781},[1291],{"type":555,"value":864},{"type":550,"tag":615,"props":1293,"children":1294},{"style":753},[1295],{"type":555,"value":975},{"type":550,"tag":615,"props":1297,"children":1298},{"style":781},[1299],{"type":555,"value":1148},{"type":550,"tag":615,"props":1301,"children":1302},{"style":753},[1303],{"type":555,"value":1261},{"type":550,"tag":615,"props":1305,"children":1306},{"style":781},[1307],{"type":555,"value":906},{"type":550,"tag":615,"props":1309,"children":1310},{"style":753},[1311],{"type":555,"value":975},{"type":550,"tag":615,"props":1313,"children":1314},{"style":781},[1315],{"type":555,"value":951},{"type":550,"tag":615,"props":1317,"children":1318},{"style":753},[1319],{"type":555,"value":1320},"]];\n",{"type":550,"tag":615,"props":1322,"children":1324},{"class":617,"line":1323},19,[1325],{"type":550,"tag":615,"props":1326,"children":1327},{"style":753},[1328],{"type":555,"value":1046},{"type":550,"tag":615,"props":1330,"children":1332},{"class":617,"line":1331},20,[1333],{"type":550,"tag":615,"props":1334,"children":1335},{"style":739},[1336],{"type":555,"value":1337},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":550,"tag":615,"props":1339,"children":1341},{"class":617,"line":1340},21,[1342,1346,1351,1355,1359,1363,1367],{"type":550,"tag":615,"props":1343,"children":1344},{"style":835},[1345],{"type":555,"value":892},{"type":550,"tag":615,"props":1347,"children":1348},{"style":781},[1349],{"type":555,"value":1350}," l",{"type":550,"tag":615,"props":1352,"children":1353},{"style":753},[1354],{"type":555,"value":849},{"type":550,"tag":615,"props":1356,"children":1357},{"style":781},[1358],{"type":555,"value":897},{"type":550,"tag":615,"props":1360,"children":1361},{"style":835},[1362],{"type":555,"value":1005},{"type":550,"tag":615,"props":1364,"children":1365},{"style":925},[1366],{"type":555,"value":1010},{"type":550,"tag":615,"props":1368,"children":1369},{"style":753},[1370],{"type":555,"value":933},{"type":550,"tag":615,"props":1372,"children":1374},{"class":617,"line":1373},22,[1375,1379,1384,1388,1392,1396,1400,1404,1408],{"type":550,"tag":615,"props":1376,"children":1377},{"style":835},[1378],{"type":555,"value":892},{"type":550,"tag":615,"props":1380,"children":1381},{"style":781},[1382],{"type":555,"value":1383}," r",{"type":550,"tag":615,"props":1385,"children":1386},{"style":753},[1387],{"type":555,"value":849},{"type":550,"tag":615,"props":1389,"children":1390},{"style":781},[1391],{"type":555,"value":906},{"type":550,"tag":615,"props":1393,"children":1394},{"style":753},[1395],{"type":555,"value":911},{"type":550,"tag":615,"props":1397,"children":1398},{"style":914},[1399],{"type":555,"value":917},{"type":550,"tag":615,"props":1401,"children":1402},{"style":835},[1403],{"type":555,"value":922},{"type":550,"tag":615,"props":1405,"children":1406},{"style":925},[1407],{"type":555,"value":1010},{"type":550,"tag":615,"props":1409,"children":1410},{"style":753},[1411],{"type":555,"value":933},{"type":550,"tag":615,"props":1413,"children":1415},{"class":617,"line":1414},23,[1416,1420,1424,1429,1434,1438,1442],{"type":550,"tag":615,"props":1417,"children":1418},{"style":759},[1419],{"type":555,"value":942},{"type":550,"tag":615,"props":1421,"children":1422},{"style":753},[1423],{"type":555,"value":859},{"type":550,"tag":615,"props":1425,"children":1426},{"style":781},[1427],{"type":555,"value":1428},"l",{"type":550,"tag":615,"props":1430,"children":1431},{"style":753},[1432],{"type":555,"value":1433}," \u003C",{"type":550,"tag":615,"props":1435,"children":1436},{"style":781},[1437],{"type":555,"value":1383},{"type":550,"tag":615,"props":1439,"children":1440},{"style":753},[1441],{"type":555,"value":869},{"type":550,"tag":615,"props":1443,"children":1444},{"style":753},[1445],{"type":555,"value":874},{"type":550,"tag":615,"props":1447,"children":1449},{"class":617,"line":1448},24,[1450,1454,1458,1462,1466,1470,1474,1478,1483,1487,1491,1495,1499,1503,1507,1511,1515,1519,1523],{"type":550,"tag":615,"props":1451,"children":1452},{"style":753},[1453],{"type":555,"value":1244},{"type":550,"tag":615,"props":1455,"children":1456},{"style":781},[1457],{"type":555,"value":864},{"type":550,"tag":615,"props":1459,"children":1460},{"style":753},[1461],{"type":555,"value":975},{"type":550,"tag":615,"props":1463,"children":1464},{"style":781},[1465],{"type":555,"value":1428},{"type":550,"tag":615,"props":1467,"children":1468},{"style":753},[1469],{"type":555,"value":1261},{"type":550,"tag":615,"props":1471,"children":1472},{"style":781},[1473],{"type":555,"value":906},{"type":550,"tag":615,"props":1475,"children":1476},{"style":753},[1477],{"type":555,"value":975},{"type":550,"tag":615,"props":1479,"children":1480},{"style":781},[1481],{"type":555,"value":1482},"r",{"type":550,"tag":615,"props":1484,"children":1485},{"style":753},[1486],{"type":555,"value":1278},{"type":550,"tag":615,"props":1488,"children":1489},{"style":753},[1490],{"type":555,"value":849},{"type":550,"tag":615,"props":1492,"children":1493},{"style":753},[1494],{"type":555,"value":1287},{"type":550,"tag":615,"props":1496,"children":1497},{"style":781},[1498],{"type":555,"value":864},{"type":550,"tag":615,"props":1500,"children":1501},{"style":753},[1502],{"type":555,"value":975},{"type":550,"tag":615,"props":1504,"children":1505},{"style":781},[1506],{"type":555,"value":1482},{"type":550,"tag":615,"props":1508,"children":1509},{"style":753},[1510],{"type":555,"value":1261},{"type":550,"tag":615,"props":1512,"children":1513},{"style":781},[1514],{"type":555,"value":906},{"type":550,"tag":615,"props":1516,"children":1517},{"style":753},[1518],{"type":555,"value":975},{"type":550,"tag":615,"props":1520,"children":1521},{"style":781},[1522],{"type":555,"value":1428},{"type":550,"tag":615,"props":1524,"children":1525},{"style":753},[1526],{"type":555,"value":1320},{"type":550,"tag":615,"props":1528,"children":1530},{"class":617,"line":1529},25,[1531,1536,1541],{"type":550,"tag":615,"props":1532,"children":1533},{"style":781},[1534],{"type":555,"value":1535},"    l",{"type":550,"tag":615,"props":1537,"children":1538},{"style":835},[1539],{"type":555,"value":1540},"++",{"type":550,"tag":615,"props":1542,"children":1543},{"style":753},[1544],{"type":555,"value":933},{"type":550,"tag":615,"props":1546,"children":1548},{"class":617,"line":1547},26,[1549,1554,1558],{"type":550,"tag":615,"props":1550,"children":1551},{"style":781},[1552],{"type":555,"value":1553},"    r",{"type":550,"tag":615,"props":1555,"children":1556},{"style":835},[1557],{"type":555,"value":1033},{"type":550,"tag":615,"props":1559,"children":1560},{"style":753},[1561],{"type":555,"value":933},{"type":550,"tag":615,"props":1563,"children":1565},{"class":617,"line":1564},27,[1566],{"type":550,"tag":615,"props":1567,"children":1568},{"style":753},[1569],{"type":555,"value":1046},{"type":550,"tag":615,"props":1571,"children":1573},{"class":617,"line":1572},28,[1574],{"type":550,"tag":615,"props":1575,"children":1576},{"style":753},[1577],{"type":555,"value":1578},"};\n",{"type":550,"tag":1580,"props":1581,"children":1582},"style",{},[1583],{"type":555,"value":1584},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":831,"depth":831,"links":1586},[1587,1588],{"id":711,"depth":627,"text":711},{"id":716,"depth":627,"text":716,"children":1589},[1590],{"id":722,"depth":787,"text":722},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1597,1599],{"_path":102,"title":101,"description":1598},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":108,"title":107,"description":1600},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1714099212954]