[{"data":1,"prerenderedAt":1607},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":546,"/algorithm/leetcode/major/next-permutation-surround":1602},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":105,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":104,"description":550,"url":551,"body":552,"_type":1597,"_id":1598,"_source":1599,"_file":1600,"_extension":1601},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":553,"children":554,"toc":1591},"root",[555,562,572,577,595,600,605,610,640,645,668,673,696,701,714,720,725,731,1585],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":563,"props":564,"children":565},"ul",{},[566],{"type":556,"tag":567,"props":568,"children":569},"li",{},[570],{"type":561,"value":571},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":556,"tag":557,"props":573,"children":574},{},[575],{"type":561,"value":576},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":556,"tag":563,"props":578,"children":579},{},[580,585,590],{"type":556,"tag":567,"props":581,"children":582},{},[583],{"type":561,"value":584},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":556,"tag":567,"props":586,"children":587},{},[588],{"type":561,"value":589},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":556,"tag":567,"props":591,"children":592},{},[593],{"type":561,"value":594},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":556,"tag":557,"props":596,"children":597},{},[598],{"type":561,"value":599},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":556,"tag":557,"props":601,"children":602},{},[603],{"type":561,"value":604},"必须 原地 修改，只允许使用额外常数空间。",{"type":556,"tag":557,"props":606,"children":607},{},[608],{"type":561,"value":609},"示例 1：",{"type":556,"tag":611,"props":612,"children":615},"pre",{"className":613,"code":614,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[616],{"type":556,"tag":617,"props":618,"children":619},"code",{"__ignoreMap":549},[620,631],{"type":556,"tag":621,"props":622,"children":625},"span",{"class":623,"line":624},"line",1,[626],{"type":556,"tag":621,"props":627,"children":628},{},[629],{"type":561,"value":630},"输入：nums = [1,2,3]\n",{"type":556,"tag":621,"props":632,"children":634},{"class":623,"line":633},2,[635],{"type":556,"tag":621,"props":636,"children":637},{},[638],{"type":561,"value":639},"输出：[1,3,2]\n",{"type":556,"tag":557,"props":641,"children":642},{},[643],{"type":561,"value":644},"示例 2：",{"type":556,"tag":611,"props":646,"children":648},{"className":613,"code":647,"language":561,"meta":549,"style":549},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[649],{"type":556,"tag":617,"props":650,"children":651},{"__ignoreMap":549},[652,660],{"type":556,"tag":621,"props":653,"children":654},{"class":623,"line":624},[655],{"type":556,"tag":621,"props":656,"children":657},{},[658],{"type":561,"value":659},"输入：nums = [3,2,1]\n",{"type":556,"tag":621,"props":661,"children":662},{"class":623,"line":633},[663],{"type":556,"tag":621,"props":664,"children":665},{},[666],{"type":561,"value":667},"输出：[1,2,3]\n",{"type":556,"tag":557,"props":669,"children":670},{},[671],{"type":561,"value":672},"示例 3：",{"type":556,"tag":611,"props":674,"children":676},{"className":613,"code":675,"language":561,"meta":549,"style":549},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[677],{"type":556,"tag":617,"props":678,"children":679},{"__ignoreMap":549},[680,688],{"type":556,"tag":621,"props":681,"children":682},{"class":623,"line":624},[683],{"type":556,"tag":621,"props":684,"children":685},{},[686],{"type":561,"value":687},"输入：nums = [1,1,5]\n",{"type":556,"tag":621,"props":689,"children":690},{"class":623,"line":633},[691],{"type":556,"tag":621,"props":692,"children":693},{},[694],{"type":561,"value":695},"输出：[1,5,1]\n",{"type":556,"tag":557,"props":697,"children":698},{},[699],{"type":561,"value":700},"提示：",{"type":556,"tag":563,"props":702,"children":703},{},[704,709],{"type":556,"tag":567,"props":705,"children":706},{},[707],{"type":561,"value":708},"1 \u003C= nums.length \u003C= 100",{"type":556,"tag":567,"props":710,"children":711},{},[712],{"type":561,"value":713},"0 \u003C= nums[i] \u003C= 100",{"type":556,"tag":715,"props":716,"children":718},"h2",{"id":717},"解题思路",[719],{"type":561,"value":717},{"type":556,"tag":715,"props":721,"children":723},{"id":722},"实现",[724],{"type":561,"value":722},{"type":556,"tag":726,"props":727,"children":729},"h3",{"id":728},"双指针",[730],{"type":561,"value":728},{"type":556,"tag":611,"props":732,"children":736},{"className":733,"code":734,"language":735,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[737],{"type":556,"tag":617,"props":738,"children":739},{"__ignoreMap":549},[740,749,791,826,835,881,890,940,1026,1044,1053,1062,1095,1137,1207,1224,1233,1242,1327,1335,1344,1377,1418,1452,1533,1551,1568,1576],{"type":556,"tag":621,"props":741,"children":742},{"class":623,"line":624},[743],{"type":556,"tag":621,"props":744,"children":746},{"style":745},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[747],{"type":561,"value":748},"/**\n",{"type":556,"tag":621,"props":750,"children":751},{"class":623,"line":633},[752,757,763,769,774,780,785],{"type":556,"tag":621,"props":753,"children":754},{"style":745},[755],{"type":561,"value":756}," * ",{"type":556,"tag":621,"props":758,"children":760},{"style":759},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[761],{"type":561,"value":762},"@",{"type":556,"tag":621,"props":764,"children":766},{"style":765},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[767],{"type":561,"value":768},"param",{"type":556,"tag":621,"props":770,"children":771},{"style":759},[772],{"type":561,"value":773}," {",{"type":556,"tag":621,"props":775,"children":777},{"style":776},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[778],{"type":561,"value":779},"number[]",{"type":556,"tag":621,"props":781,"children":782},{"style":759},[783],{"type":561,"value":784},"}",{"type":556,"tag":621,"props":786,"children":788},{"style":787},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[789],{"type":561,"value":790}," nums\n",{"type":556,"tag":621,"props":792,"children":794},{"class":623,"line":793},3,[795,799,803,808,812,817,821],{"type":556,"tag":621,"props":796,"children":797},{"style":745},[798],{"type":561,"value":756},{"type":556,"tag":621,"props":800,"children":801},{"style":759},[802],{"type":561,"value":762},{"type":556,"tag":621,"props":804,"children":805},{"style":765},[806],{"type":561,"value":807},"return",{"type":556,"tag":621,"props":809,"children":810},{"style":759},[811],{"type":561,"value":773},{"type":556,"tag":621,"props":813,"children":814},{"style":776},[815],{"type":561,"value":816},"void",{"type":556,"tag":621,"props":818,"children":819},{"style":759},[820],{"type":561,"value":784},{"type":556,"tag":621,"props":822,"children":823},{"style":745},[824],{"type":561,"value":825}," Do not return anything, modify nums in-place instead.\n",{"type":556,"tag":621,"props":827,"children":829},{"class":623,"line":828},4,[830],{"type":556,"tag":621,"props":831,"children":832},{"style":745},[833],{"type":561,"value":834}," */\n",{"type":556,"tag":621,"props":836,"children":838},{"class":623,"line":837},5,[839,845,851,856,861,866,871,876],{"type":556,"tag":621,"props":840,"children":842},{"style":841},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[843],{"type":561,"value":844},"var",{"type":556,"tag":621,"props":846,"children":848},{"style":847},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[849],{"type":561,"value":850}," nextPermutation",{"type":556,"tag":621,"props":852,"children":853},{"style":759},[854],{"type":561,"value":855}," =",{"type":556,"tag":621,"props":857,"children":858},{"style":841},[859],{"type":561,"value":860}," function",{"type":556,"tag":621,"props":862,"children":863},{"style":759},[864],{"type":561,"value":865}," (",{"type":556,"tag":621,"props":867,"children":868},{"style":787},[869],{"type":561,"value":870},"nums",{"type":556,"tag":621,"props":872,"children":873},{"style":759},[874],{"type":561,"value":875},")",{"type":556,"tag":621,"props":877,"children":878},{"style":759},[879],{"type":561,"value":880}," {\n",{"type":556,"tag":621,"props":882,"children":884},{"class":623,"line":883},6,[885],{"type":556,"tag":621,"props":886,"children":887},{"style":745},[888],{"type":561,"value":889},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":556,"tag":621,"props":891,"children":893},{"class":623,"line":892},7,[894,899,904,908,913,918,924,929,935],{"type":556,"tag":621,"props":895,"children":896},{"style":841},[897],{"type":561,"value":898},"  let",{"type":556,"tag":621,"props":900,"children":901},{"style":787},[902],{"type":561,"value":903}," i",{"type":556,"tag":621,"props":905,"children":906},{"style":759},[907],{"type":561,"value":855},{"type":556,"tag":621,"props":909,"children":910},{"style":787},[911],{"type":561,"value":912}," nums",{"type":556,"tag":621,"props":914,"children":915},{"style":759},[916],{"type":561,"value":917},".",{"type":556,"tag":621,"props":919,"children":921},{"style":920},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[922],{"type":561,"value":923},"length",{"type":556,"tag":621,"props":925,"children":926},{"style":841},[927],{"type":561,"value":928}," -",{"type":556,"tag":621,"props":930,"children":932},{"style":931},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[933],{"type":561,"value":934}," 2",{"type":556,"tag":621,"props":936,"children":937},{"style":759},[938],{"type":561,"value":939},";\n",{"type":556,"tag":621,"props":941,"children":943},{"class":623,"line":942},8,[944,949,953,958,963,968,973,977,982,986,991,995,999,1003,1007,1012,1017,1022],{"type":556,"tag":621,"props":945,"children":946},{"style":765},[947],{"type":561,"value":948},"  while",{"type":556,"tag":621,"props":950,"children":951},{"style":759},[952],{"type":561,"value":865},{"type":556,"tag":621,"props":954,"children":955},{"style":787},[956],{"type":561,"value":957},"i",{"type":556,"tag":621,"props":959,"children":960},{"style":759},[961],{"type":561,"value":962}," >=",{"type":556,"tag":621,"props":964,"children":965},{"style":931},[966],{"type":561,"value":967}," 0",{"type":556,"tag":621,"props":969,"children":970},{"style":841},[971],{"type":561,"value":972}," &&",{"type":556,"tag":621,"props":974,"children":975},{"style":787},[976],{"type":561,"value":912},{"type":556,"tag":621,"props":978,"children":979},{"style":759},[980],{"type":561,"value":981},"[",{"type":556,"tag":621,"props":983,"children":984},{"style":787},[985],{"type":561,"value":957},{"type":556,"tag":621,"props":987,"children":988},{"style":759},[989],{"type":561,"value":990},"]",{"type":556,"tag":621,"props":992,"children":993},{"style":759},[994],{"type":561,"value":962},{"type":556,"tag":621,"props":996,"children":997},{"style":787},[998],{"type":561,"value":912},{"type":556,"tag":621,"props":1000,"children":1001},{"style":759},[1002],{"type":561,"value":981},{"type":556,"tag":621,"props":1004,"children":1005},{"style":787},[1006],{"type":561,"value":957},{"type":556,"tag":621,"props":1008,"children":1009},{"style":841},[1010],{"type":561,"value":1011}," +",{"type":556,"tag":621,"props":1013,"children":1014},{"style":931},[1015],{"type":561,"value":1016}," 1",{"type":556,"tag":621,"props":1018,"children":1019},{"style":759},[1020],{"type":561,"value":1021},"])",{"type":556,"tag":621,"props":1023,"children":1024},{"style":759},[1025],{"type":561,"value":880},{"type":556,"tag":621,"props":1027,"children":1029},{"class":623,"line":1028},9,[1030,1035,1040],{"type":556,"tag":621,"props":1031,"children":1032},{"style":787},[1033],{"type":561,"value":1034},"    i",{"type":556,"tag":621,"props":1036,"children":1037},{"style":841},[1038],{"type":561,"value":1039},"--",{"type":556,"tag":621,"props":1041,"children":1042},{"style":759},[1043],{"type":561,"value":939},{"type":556,"tag":621,"props":1045,"children":1047},{"class":623,"line":1046},10,[1048],{"type":556,"tag":621,"props":1049,"children":1050},{"style":759},[1051],{"type":561,"value":1052},"  }\n",{"type":556,"tag":621,"props":1054,"children":1056},{"class":623,"line":1055},11,[1057],{"type":556,"tag":621,"props":1058,"children":1059},{"style":745},[1060],{"type":561,"value":1061},"  // i 在数组中存在，进行交换\n",{"type":556,"tag":621,"props":1063,"children":1065},{"class":623,"line":1064},12,[1066,1071,1075,1079,1083,1087,1091],{"type":556,"tag":621,"props":1067,"children":1068},{"style":765},[1069],{"type":561,"value":1070},"  if",{"type":556,"tag":621,"props":1072,"children":1073},{"style":759},[1074],{"type":561,"value":865},{"type":556,"tag":621,"props":1076,"children":1077},{"style":787},[1078],{"type":561,"value":957},{"type":556,"tag":621,"props":1080,"children":1081},{"style":759},[1082],{"type":561,"value":962},{"type":556,"tag":621,"props":1084,"children":1085},{"style":931},[1086],{"type":561,"value":967},{"type":556,"tag":621,"props":1088,"children":1089},{"style":759},[1090],{"type":561,"value":875},{"type":556,"tag":621,"props":1092,"children":1093},{"style":759},[1094],{"type":561,"value":880},{"type":556,"tag":621,"props":1096,"children":1098},{"class":623,"line":1097},13,[1099,1104,1109,1113,1117,1121,1125,1129,1133],{"type":556,"tag":621,"props":1100,"children":1101},{"style":841},[1102],{"type":561,"value":1103},"    let",{"type":556,"tag":621,"props":1105,"children":1106},{"style":787},[1107],{"type":561,"value":1108}," j",{"type":556,"tag":621,"props":1110,"children":1111},{"style":759},[1112],{"type":561,"value":855},{"type":556,"tag":621,"props":1114,"children":1115},{"style":787},[1116],{"type":561,"value":912},{"type":556,"tag":621,"props":1118,"children":1119},{"style":759},[1120],{"type":561,"value":917},{"type":556,"tag":621,"props":1122,"children":1123},{"style":920},[1124],{"type":561,"value":923},{"type":556,"tag":621,"props":1126,"children":1127},{"style":841},[1128],{"type":561,"value":928},{"type":556,"tag":621,"props":1130,"children":1131},{"style":931},[1132],{"type":561,"value":1016},{"type":556,"tag":621,"props":1134,"children":1135},{"style":759},[1136],{"type":561,"value":939},{"type":556,"tag":621,"props":1138,"children":1140},{"class":623,"line":1139},14,[1141,1146,1150,1155,1159,1163,1167,1171,1175,1179,1183,1187,1191,1195,1199,1203],{"type":556,"tag":621,"props":1142,"children":1143},{"style":765},[1144],{"type":561,"value":1145},"    while",{"type":556,"tag":621,"props":1147,"children":1148},{"style":759},[1149],{"type":561,"value":865},{"type":556,"tag":621,"props":1151,"children":1152},{"style":787},[1153],{"type":561,"value":1154},"j",{"type":556,"tag":621,"props":1156,"children":1157},{"style":759},[1158],{"type":561,"value":962},{"type":556,"tag":621,"props":1160,"children":1161},{"style":931},[1162],{"type":561,"value":967},{"type":556,"tag":621,"props":1164,"children":1165},{"style":841},[1166],{"type":561,"value":972},{"type":556,"tag":621,"props":1168,"children":1169},{"style":787},[1170],{"type":561,"value":912},{"type":556,"tag":621,"props":1172,"children":1173},{"style":759},[1174],{"type":561,"value":981},{"type":556,"tag":621,"props":1176,"children":1177},{"style":787},[1178],{"type":561,"value":957},{"type":556,"tag":621,"props":1180,"children":1181},{"style":759},[1182],{"type":561,"value":990},{"type":556,"tag":621,"props":1184,"children":1185},{"style":759},[1186],{"type":561,"value":962},{"type":556,"tag":621,"props":1188,"children":1189},{"style":787},[1190],{"type":561,"value":912},{"type":556,"tag":621,"props":1192,"children":1193},{"style":759},[1194],{"type":561,"value":981},{"type":556,"tag":621,"props":1196,"children":1197},{"style":787},[1198],{"type":561,"value":1154},{"type":556,"tag":621,"props":1200,"children":1201},{"style":759},[1202],{"type":561,"value":1021},{"type":556,"tag":621,"props":1204,"children":1205},{"style":759},[1206],{"type":561,"value":880},{"type":556,"tag":621,"props":1208,"children":1210},{"class":623,"line":1209},15,[1211,1216,1220],{"type":556,"tag":621,"props":1212,"children":1213},{"style":787},[1214],{"type":561,"value":1215},"      j",{"type":556,"tag":621,"props":1217,"children":1218},{"style":841},[1219],{"type":561,"value":1039},{"type":556,"tag":621,"props":1221,"children":1222},{"style":759},[1223],{"type":561,"value":939},{"type":556,"tag":621,"props":1225,"children":1227},{"class":623,"line":1226},16,[1228],{"type":556,"tag":621,"props":1229,"children":1230},{"style":759},[1231],{"type":561,"value":1232},"    }\n",{"type":556,"tag":621,"props":1234,"children":1236},{"class":623,"line":1235},17,[1237],{"type":556,"tag":621,"props":1238,"children":1239},{"style":745},[1240],{"type":561,"value":1241},"    // 交换\n",{"type":556,"tag":621,"props":1243,"children":1245},{"class":623,"line":1244},18,[1246,1251,1255,1259,1263,1268,1272,1276,1280,1285,1289,1294,1298,1302,1306,1310,1314,1318,1322],{"type":556,"tag":621,"props":1247,"children":1248},{"style":759},[1249],{"type":561,"value":1250},"    [",{"type":556,"tag":621,"props":1252,"children":1253},{"style":787},[1254],{"type":561,"value":870},{"type":556,"tag":621,"props":1256,"children":1257},{"style":759},[1258],{"type":561,"value":981},{"type":556,"tag":621,"props":1260,"children":1261},{"style":787},[1262],{"type":561,"value":957},{"type":556,"tag":621,"props":1264,"children":1265},{"style":759},[1266],{"type":561,"value":1267},"],",{"type":556,"tag":621,"props":1269,"children":1270},{"style":787},[1271],{"type":561,"value":912},{"type":556,"tag":621,"props":1273,"children":1274},{"style":759},[1275],{"type":561,"value":981},{"type":556,"tag":621,"props":1277,"children":1278},{"style":787},[1279],{"type":561,"value":1154},{"type":556,"tag":621,"props":1281,"children":1282},{"style":759},[1283],{"type":561,"value":1284},"]]",{"type":556,"tag":621,"props":1286,"children":1287},{"style":759},[1288],{"type":561,"value":855},{"type":556,"tag":621,"props":1290,"children":1291},{"style":759},[1292],{"type":561,"value":1293}," [",{"type":556,"tag":621,"props":1295,"children":1296},{"style":787},[1297],{"type":561,"value":870},{"type":556,"tag":621,"props":1299,"children":1300},{"style":759},[1301],{"type":561,"value":981},{"type":556,"tag":621,"props":1303,"children":1304},{"style":787},[1305],{"type":561,"value":1154},{"type":556,"tag":621,"props":1307,"children":1308},{"style":759},[1309],{"type":561,"value":1267},{"type":556,"tag":621,"props":1311,"children":1312},{"style":787},[1313],{"type":561,"value":912},{"type":556,"tag":621,"props":1315,"children":1316},{"style":759},[1317],{"type":561,"value":981},{"type":556,"tag":621,"props":1319,"children":1320},{"style":787},[1321],{"type":561,"value":957},{"type":556,"tag":621,"props":1323,"children":1324},{"style":759},[1325],{"type":561,"value":1326},"]];\n",{"type":556,"tag":621,"props":1328,"children":1330},{"class":623,"line":1329},19,[1331],{"type":556,"tag":621,"props":1332,"children":1333},{"style":759},[1334],{"type":561,"value":1052},{"type":556,"tag":621,"props":1336,"children":1338},{"class":623,"line":1337},20,[1339],{"type":556,"tag":621,"props":1340,"children":1341},{"style":745},[1342],{"type":561,"value":1343},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":556,"tag":621,"props":1345,"children":1347},{"class":623,"line":1346},21,[1348,1352,1357,1361,1365,1369,1373],{"type":556,"tag":621,"props":1349,"children":1350},{"style":841},[1351],{"type":561,"value":898},{"type":556,"tag":621,"props":1353,"children":1354},{"style":787},[1355],{"type":561,"value":1356}," l",{"type":556,"tag":621,"props":1358,"children":1359},{"style":759},[1360],{"type":561,"value":855},{"type":556,"tag":621,"props":1362,"children":1363},{"style":787},[1364],{"type":561,"value":903},{"type":556,"tag":621,"props":1366,"children":1367},{"style":841},[1368],{"type":561,"value":1011},{"type":556,"tag":621,"props":1370,"children":1371},{"style":931},[1372],{"type":561,"value":1016},{"type":556,"tag":621,"props":1374,"children":1375},{"style":759},[1376],{"type":561,"value":939},{"type":556,"tag":621,"props":1378,"children":1380},{"class":623,"line":1379},22,[1381,1385,1390,1394,1398,1402,1406,1410,1414],{"type":556,"tag":621,"props":1382,"children":1383},{"style":841},[1384],{"type":561,"value":898},{"type":556,"tag":621,"props":1386,"children":1387},{"style":787},[1388],{"type":561,"value":1389}," r",{"type":556,"tag":621,"props":1391,"children":1392},{"style":759},[1393],{"type":561,"value":855},{"type":556,"tag":621,"props":1395,"children":1396},{"style":787},[1397],{"type":561,"value":912},{"type":556,"tag":621,"props":1399,"children":1400},{"style":759},[1401],{"type":561,"value":917},{"type":556,"tag":621,"props":1403,"children":1404},{"style":920},[1405],{"type":561,"value":923},{"type":556,"tag":621,"props":1407,"children":1408},{"style":841},[1409],{"type":561,"value":928},{"type":556,"tag":621,"props":1411,"children":1412},{"style":931},[1413],{"type":561,"value":1016},{"type":556,"tag":621,"props":1415,"children":1416},{"style":759},[1417],{"type":561,"value":939},{"type":556,"tag":621,"props":1419,"children":1421},{"class":623,"line":1420},23,[1422,1426,1430,1435,1440,1444,1448],{"type":556,"tag":621,"props":1423,"children":1424},{"style":765},[1425],{"type":561,"value":948},{"type":556,"tag":621,"props":1427,"children":1428},{"style":759},[1429],{"type":561,"value":865},{"type":556,"tag":621,"props":1431,"children":1432},{"style":787},[1433],{"type":561,"value":1434},"l",{"type":556,"tag":621,"props":1436,"children":1437},{"style":759},[1438],{"type":561,"value":1439}," \u003C",{"type":556,"tag":621,"props":1441,"children":1442},{"style":787},[1443],{"type":561,"value":1389},{"type":556,"tag":621,"props":1445,"children":1446},{"style":759},[1447],{"type":561,"value":875},{"type":556,"tag":621,"props":1449,"children":1450},{"style":759},[1451],{"type":561,"value":880},{"type":556,"tag":621,"props":1453,"children":1455},{"class":623,"line":1454},24,[1456,1460,1464,1468,1472,1476,1480,1484,1489,1493,1497,1501,1505,1509,1513,1517,1521,1525,1529],{"type":556,"tag":621,"props":1457,"children":1458},{"style":759},[1459],{"type":561,"value":1250},{"type":556,"tag":621,"props":1461,"children":1462},{"style":787},[1463],{"type":561,"value":870},{"type":556,"tag":621,"props":1465,"children":1466},{"style":759},[1467],{"type":561,"value":981},{"type":556,"tag":621,"props":1469,"children":1470},{"style":787},[1471],{"type":561,"value":1434},{"type":556,"tag":621,"props":1473,"children":1474},{"style":759},[1475],{"type":561,"value":1267},{"type":556,"tag":621,"props":1477,"children":1478},{"style":787},[1479],{"type":561,"value":912},{"type":556,"tag":621,"props":1481,"children":1482},{"style":759},[1483],{"type":561,"value":981},{"type":556,"tag":621,"props":1485,"children":1486},{"style":787},[1487],{"type":561,"value":1488},"r",{"type":556,"tag":621,"props":1490,"children":1491},{"style":759},[1492],{"type":561,"value":1284},{"type":556,"tag":621,"props":1494,"children":1495},{"style":759},[1496],{"type":561,"value":855},{"type":556,"tag":621,"props":1498,"children":1499},{"style":759},[1500],{"type":561,"value":1293},{"type":556,"tag":621,"props":1502,"children":1503},{"style":787},[1504],{"type":561,"value":870},{"type":556,"tag":621,"props":1506,"children":1507},{"style":759},[1508],{"type":561,"value":981},{"type":556,"tag":621,"props":1510,"children":1511},{"style":787},[1512],{"type":561,"value":1488},{"type":556,"tag":621,"props":1514,"children":1515},{"style":759},[1516],{"type":561,"value":1267},{"type":556,"tag":621,"props":1518,"children":1519},{"style":787},[1520],{"type":561,"value":912},{"type":556,"tag":621,"props":1522,"children":1523},{"style":759},[1524],{"type":561,"value":981},{"type":556,"tag":621,"props":1526,"children":1527},{"style":787},[1528],{"type":561,"value":1434},{"type":556,"tag":621,"props":1530,"children":1531},{"style":759},[1532],{"type":561,"value":1326},{"type":556,"tag":621,"props":1534,"children":1536},{"class":623,"line":1535},25,[1537,1542,1547],{"type":556,"tag":621,"props":1538,"children":1539},{"style":787},[1540],{"type":561,"value":1541},"    l",{"type":556,"tag":621,"props":1543,"children":1544},{"style":841},[1545],{"type":561,"value":1546},"++",{"type":556,"tag":621,"props":1548,"children":1549},{"style":759},[1550],{"type":561,"value":939},{"type":556,"tag":621,"props":1552,"children":1554},{"class":623,"line":1553},26,[1555,1560,1564],{"type":556,"tag":621,"props":1556,"children":1557},{"style":787},[1558],{"type":561,"value":1559},"    r",{"type":556,"tag":621,"props":1561,"children":1562},{"style":841},[1563],{"type":561,"value":1039},{"type":556,"tag":621,"props":1565,"children":1566},{"style":759},[1567],{"type":561,"value":939},{"type":556,"tag":621,"props":1569,"children":1571},{"class":623,"line":1570},27,[1572],{"type":556,"tag":621,"props":1573,"children":1574},{"style":759},[1575],{"type":561,"value":1052},{"type":556,"tag":621,"props":1577,"children":1579},{"class":623,"line":1578},28,[1580],{"type":556,"tag":621,"props":1581,"children":1582},{"style":759},[1583],{"type":561,"value":1584},"};\n",{"type":556,"tag":1586,"props":1587,"children":1588},"style",{},[1589],{"type":561,"value":1590},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":837,"depth":837,"links":1592},[1593,1594],{"id":717,"depth":633,"text":717},{"id":722,"depth":633,"text":722,"children":1595},[1596],{"id":728,"depth":793,"text":728},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1603,1605],{"_path":102,"title":101,"description":1604},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":108,"title":107,"description":1606},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1715002841924]