[{"data":1,"prerenderedAt":1604},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":543,"/algorithm/leetcode/major/next-permutation-surround":1599},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":105,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":104,"description":547,"url":548,"body":549,"_type":1594,"_id":1595,"_source":1596,"_file":1597,"_extension":1598},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":550,"children":551,"toc":1588},"root",[552,559,569,574,592,597,602,607,637,642,665,670,693,698,711,717,722,728,1582],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":560,"props":561,"children":562},"ul",{},[563],{"type":553,"tag":564,"props":565,"children":566},"li",{},[567],{"type":558,"value":568},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":553,"tag":554,"props":570,"children":571},{},[572],{"type":558,"value":573},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":553,"tag":560,"props":575,"children":576},{},[577,582,587],{"type":553,"tag":564,"props":578,"children":579},{},[580],{"type":558,"value":581},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":553,"tag":564,"props":583,"children":584},{},[585],{"type":558,"value":586},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":553,"tag":564,"props":588,"children":589},{},[590],{"type":558,"value":591},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":553,"tag":554,"props":593,"children":594},{},[595],{"type":558,"value":596},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":553,"tag":554,"props":598,"children":599},{},[600],{"type":558,"value":601},"必须 原地 修改，只允许使用额外常数空间。",{"type":553,"tag":554,"props":603,"children":604},{},[605],{"type":558,"value":606},"示例 1：",{"type":553,"tag":608,"props":609,"children":612},"pre",{"className":610,"code":611,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[613],{"type":553,"tag":614,"props":615,"children":616},"code",{"__ignoreMap":546},[617,628],{"type":553,"tag":618,"props":619,"children":622},"span",{"class":620,"line":621},"line",1,[623],{"type":553,"tag":618,"props":624,"children":625},{},[626],{"type":558,"value":627},"输入：nums = [1,2,3]\n",{"type":553,"tag":618,"props":629,"children":631},{"class":620,"line":630},2,[632],{"type":553,"tag":618,"props":633,"children":634},{},[635],{"type":558,"value":636},"输出：[1,3,2]\n",{"type":553,"tag":554,"props":638,"children":639},{},[640],{"type":558,"value":641},"示例 2：",{"type":553,"tag":608,"props":643,"children":645},{"className":610,"code":644,"language":558,"meta":546,"style":546},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[646],{"type":553,"tag":614,"props":647,"children":648},{"__ignoreMap":546},[649,657],{"type":553,"tag":618,"props":650,"children":651},{"class":620,"line":621},[652],{"type":553,"tag":618,"props":653,"children":654},{},[655],{"type":558,"value":656},"输入：nums = [3,2,1]\n",{"type":553,"tag":618,"props":658,"children":659},{"class":620,"line":630},[660],{"type":553,"tag":618,"props":661,"children":662},{},[663],{"type":558,"value":664},"输出：[1,2,3]\n",{"type":553,"tag":554,"props":666,"children":667},{},[668],{"type":558,"value":669},"示例 3：",{"type":553,"tag":608,"props":671,"children":673},{"className":610,"code":672,"language":558,"meta":546,"style":546},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[674],{"type":553,"tag":614,"props":675,"children":676},{"__ignoreMap":546},[677,685],{"type":553,"tag":618,"props":678,"children":679},{"class":620,"line":621},[680],{"type":553,"tag":618,"props":681,"children":682},{},[683],{"type":558,"value":684},"输入：nums = [1,1,5]\n",{"type":553,"tag":618,"props":686,"children":687},{"class":620,"line":630},[688],{"type":553,"tag":618,"props":689,"children":690},{},[691],{"type":558,"value":692},"输出：[1,5,1]\n",{"type":553,"tag":554,"props":694,"children":695},{},[696],{"type":558,"value":697},"提示：",{"type":553,"tag":560,"props":699,"children":700},{},[701,706],{"type":553,"tag":564,"props":702,"children":703},{},[704],{"type":558,"value":705},"1 \u003C= nums.length \u003C= 100",{"type":553,"tag":564,"props":707,"children":708},{},[709],{"type":558,"value":710},"0 \u003C= nums[i] \u003C= 100",{"type":553,"tag":712,"props":713,"children":715},"h2",{"id":714},"解题思路",[716],{"type":558,"value":714},{"type":553,"tag":712,"props":718,"children":720},{"id":719},"实现",[721],{"type":558,"value":719},{"type":553,"tag":723,"props":724,"children":726},"h3",{"id":725},"双指针",[727],{"type":558,"value":725},{"type":553,"tag":608,"props":729,"children":733},{"className":730,"code":731,"language":732,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[734],{"type":553,"tag":614,"props":735,"children":736},{"__ignoreMap":546},[737,746,788,823,832,878,887,937,1023,1041,1050,1059,1092,1134,1204,1221,1230,1239,1324,1332,1341,1374,1415,1449,1530,1548,1565,1573],{"type":553,"tag":618,"props":738,"children":739},{"class":620,"line":621},[740],{"type":553,"tag":618,"props":741,"children":743},{"style":742},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[744],{"type":558,"value":745},"/**\n",{"type":553,"tag":618,"props":747,"children":748},{"class":620,"line":630},[749,754,760,766,771,777,782],{"type":553,"tag":618,"props":750,"children":751},{"style":742},[752],{"type":558,"value":753}," * ",{"type":553,"tag":618,"props":755,"children":757},{"style":756},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[758],{"type":558,"value":759},"@",{"type":553,"tag":618,"props":761,"children":763},{"style":762},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[764],{"type":558,"value":765},"param",{"type":553,"tag":618,"props":767,"children":768},{"style":756},[769],{"type":558,"value":770}," {",{"type":553,"tag":618,"props":772,"children":774},{"style":773},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[775],{"type":558,"value":776},"number[]",{"type":553,"tag":618,"props":778,"children":779},{"style":756},[780],{"type":558,"value":781},"}",{"type":553,"tag":618,"props":783,"children":785},{"style":784},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[786],{"type":558,"value":787}," nums\n",{"type":553,"tag":618,"props":789,"children":791},{"class":620,"line":790},3,[792,796,800,805,809,814,818],{"type":553,"tag":618,"props":793,"children":794},{"style":742},[795],{"type":558,"value":753},{"type":553,"tag":618,"props":797,"children":798},{"style":756},[799],{"type":558,"value":759},{"type":553,"tag":618,"props":801,"children":802},{"style":762},[803],{"type":558,"value":804},"return",{"type":553,"tag":618,"props":806,"children":807},{"style":756},[808],{"type":558,"value":770},{"type":553,"tag":618,"props":810,"children":811},{"style":773},[812],{"type":558,"value":813},"void",{"type":553,"tag":618,"props":815,"children":816},{"style":756},[817],{"type":558,"value":781},{"type":553,"tag":618,"props":819,"children":820},{"style":742},[821],{"type":558,"value":822}," Do not return anything, modify nums in-place instead.\n",{"type":553,"tag":618,"props":824,"children":826},{"class":620,"line":825},4,[827],{"type":553,"tag":618,"props":828,"children":829},{"style":742},[830],{"type":558,"value":831}," */\n",{"type":553,"tag":618,"props":833,"children":835},{"class":620,"line":834},5,[836,842,848,853,858,863,868,873],{"type":553,"tag":618,"props":837,"children":839},{"style":838},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[840],{"type":558,"value":841},"var",{"type":553,"tag":618,"props":843,"children":845},{"style":844},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[846],{"type":558,"value":847}," nextPermutation",{"type":553,"tag":618,"props":849,"children":850},{"style":756},[851],{"type":558,"value":852}," =",{"type":553,"tag":618,"props":854,"children":855},{"style":838},[856],{"type":558,"value":857}," function",{"type":553,"tag":618,"props":859,"children":860},{"style":756},[861],{"type":558,"value":862}," (",{"type":553,"tag":618,"props":864,"children":865},{"style":784},[866],{"type":558,"value":867},"nums",{"type":553,"tag":618,"props":869,"children":870},{"style":756},[871],{"type":558,"value":872},")",{"type":553,"tag":618,"props":874,"children":875},{"style":756},[876],{"type":558,"value":877}," {\n",{"type":553,"tag":618,"props":879,"children":881},{"class":620,"line":880},6,[882],{"type":553,"tag":618,"props":883,"children":884},{"style":742},[885],{"type":558,"value":886},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":553,"tag":618,"props":888,"children":890},{"class":620,"line":889},7,[891,896,901,905,910,915,921,926,932],{"type":553,"tag":618,"props":892,"children":893},{"style":838},[894],{"type":558,"value":895},"  let",{"type":553,"tag":618,"props":897,"children":898},{"style":784},[899],{"type":558,"value":900}," i",{"type":553,"tag":618,"props":902,"children":903},{"style":756},[904],{"type":558,"value":852},{"type":553,"tag":618,"props":906,"children":907},{"style":784},[908],{"type":558,"value":909}," nums",{"type":553,"tag":618,"props":911,"children":912},{"style":756},[913],{"type":558,"value":914},".",{"type":553,"tag":618,"props":916,"children":918},{"style":917},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[919],{"type":558,"value":920},"length",{"type":553,"tag":618,"props":922,"children":923},{"style":838},[924],{"type":558,"value":925}," -",{"type":553,"tag":618,"props":927,"children":929},{"style":928},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[930],{"type":558,"value":931}," 2",{"type":553,"tag":618,"props":933,"children":934},{"style":756},[935],{"type":558,"value":936},";\n",{"type":553,"tag":618,"props":938,"children":940},{"class":620,"line":939},8,[941,946,950,955,960,965,970,974,979,983,988,992,996,1000,1004,1009,1014,1019],{"type":553,"tag":618,"props":942,"children":943},{"style":762},[944],{"type":558,"value":945},"  while",{"type":553,"tag":618,"props":947,"children":948},{"style":756},[949],{"type":558,"value":862},{"type":553,"tag":618,"props":951,"children":952},{"style":784},[953],{"type":558,"value":954},"i",{"type":553,"tag":618,"props":956,"children":957},{"style":756},[958],{"type":558,"value":959}," >=",{"type":553,"tag":618,"props":961,"children":962},{"style":928},[963],{"type":558,"value":964}," 0",{"type":553,"tag":618,"props":966,"children":967},{"style":838},[968],{"type":558,"value":969}," &&",{"type":553,"tag":618,"props":971,"children":972},{"style":784},[973],{"type":558,"value":909},{"type":553,"tag":618,"props":975,"children":976},{"style":756},[977],{"type":558,"value":978},"[",{"type":553,"tag":618,"props":980,"children":981},{"style":784},[982],{"type":558,"value":954},{"type":553,"tag":618,"props":984,"children":985},{"style":756},[986],{"type":558,"value":987},"]",{"type":553,"tag":618,"props":989,"children":990},{"style":756},[991],{"type":558,"value":959},{"type":553,"tag":618,"props":993,"children":994},{"style":784},[995],{"type":558,"value":909},{"type":553,"tag":618,"props":997,"children":998},{"style":756},[999],{"type":558,"value":978},{"type":553,"tag":618,"props":1001,"children":1002},{"style":784},[1003],{"type":558,"value":954},{"type":553,"tag":618,"props":1005,"children":1006},{"style":838},[1007],{"type":558,"value":1008}," +",{"type":553,"tag":618,"props":1010,"children":1011},{"style":928},[1012],{"type":558,"value":1013}," 1",{"type":553,"tag":618,"props":1015,"children":1016},{"style":756},[1017],{"type":558,"value":1018},"])",{"type":553,"tag":618,"props":1020,"children":1021},{"style":756},[1022],{"type":558,"value":877},{"type":553,"tag":618,"props":1024,"children":1026},{"class":620,"line":1025},9,[1027,1032,1037],{"type":553,"tag":618,"props":1028,"children":1029},{"style":784},[1030],{"type":558,"value":1031},"    i",{"type":553,"tag":618,"props":1033,"children":1034},{"style":838},[1035],{"type":558,"value":1036},"--",{"type":553,"tag":618,"props":1038,"children":1039},{"style":756},[1040],{"type":558,"value":936},{"type":553,"tag":618,"props":1042,"children":1044},{"class":620,"line":1043},10,[1045],{"type":553,"tag":618,"props":1046,"children":1047},{"style":756},[1048],{"type":558,"value":1049},"  }\n",{"type":553,"tag":618,"props":1051,"children":1053},{"class":620,"line":1052},11,[1054],{"type":553,"tag":618,"props":1055,"children":1056},{"style":742},[1057],{"type":558,"value":1058},"  // i 在数组中存在，进行交换\n",{"type":553,"tag":618,"props":1060,"children":1062},{"class":620,"line":1061},12,[1063,1068,1072,1076,1080,1084,1088],{"type":553,"tag":618,"props":1064,"children":1065},{"style":762},[1066],{"type":558,"value":1067},"  if",{"type":553,"tag":618,"props":1069,"children":1070},{"style":756},[1071],{"type":558,"value":862},{"type":553,"tag":618,"props":1073,"children":1074},{"style":784},[1075],{"type":558,"value":954},{"type":553,"tag":618,"props":1077,"children":1078},{"style":756},[1079],{"type":558,"value":959},{"type":553,"tag":618,"props":1081,"children":1082},{"style":928},[1083],{"type":558,"value":964},{"type":553,"tag":618,"props":1085,"children":1086},{"style":756},[1087],{"type":558,"value":872},{"type":553,"tag":618,"props":1089,"children":1090},{"style":756},[1091],{"type":558,"value":877},{"type":553,"tag":618,"props":1093,"children":1095},{"class":620,"line":1094},13,[1096,1101,1106,1110,1114,1118,1122,1126,1130],{"type":553,"tag":618,"props":1097,"children":1098},{"style":838},[1099],{"type":558,"value":1100},"    let",{"type":553,"tag":618,"props":1102,"children":1103},{"style":784},[1104],{"type":558,"value":1105}," j",{"type":553,"tag":618,"props":1107,"children":1108},{"style":756},[1109],{"type":558,"value":852},{"type":553,"tag":618,"props":1111,"children":1112},{"style":784},[1113],{"type":558,"value":909},{"type":553,"tag":618,"props":1115,"children":1116},{"style":756},[1117],{"type":558,"value":914},{"type":553,"tag":618,"props":1119,"children":1120},{"style":917},[1121],{"type":558,"value":920},{"type":553,"tag":618,"props":1123,"children":1124},{"style":838},[1125],{"type":558,"value":925},{"type":553,"tag":618,"props":1127,"children":1128},{"style":928},[1129],{"type":558,"value":1013},{"type":553,"tag":618,"props":1131,"children":1132},{"style":756},[1133],{"type":558,"value":936},{"type":553,"tag":618,"props":1135,"children":1137},{"class":620,"line":1136},14,[1138,1143,1147,1152,1156,1160,1164,1168,1172,1176,1180,1184,1188,1192,1196,1200],{"type":553,"tag":618,"props":1139,"children":1140},{"style":762},[1141],{"type":558,"value":1142},"    while",{"type":553,"tag":618,"props":1144,"children":1145},{"style":756},[1146],{"type":558,"value":862},{"type":553,"tag":618,"props":1148,"children":1149},{"style":784},[1150],{"type":558,"value":1151},"j",{"type":553,"tag":618,"props":1153,"children":1154},{"style":756},[1155],{"type":558,"value":959},{"type":553,"tag":618,"props":1157,"children":1158},{"style":928},[1159],{"type":558,"value":964},{"type":553,"tag":618,"props":1161,"children":1162},{"style":838},[1163],{"type":558,"value":969},{"type":553,"tag":618,"props":1165,"children":1166},{"style":784},[1167],{"type":558,"value":909},{"type":553,"tag":618,"props":1169,"children":1170},{"style":756},[1171],{"type":558,"value":978},{"type":553,"tag":618,"props":1173,"children":1174},{"style":784},[1175],{"type":558,"value":954},{"type":553,"tag":618,"props":1177,"children":1178},{"style":756},[1179],{"type":558,"value":987},{"type":553,"tag":618,"props":1181,"children":1182},{"style":756},[1183],{"type":558,"value":959},{"type":553,"tag":618,"props":1185,"children":1186},{"style":784},[1187],{"type":558,"value":909},{"type":553,"tag":618,"props":1189,"children":1190},{"style":756},[1191],{"type":558,"value":978},{"type":553,"tag":618,"props":1193,"children":1194},{"style":784},[1195],{"type":558,"value":1151},{"type":553,"tag":618,"props":1197,"children":1198},{"style":756},[1199],{"type":558,"value":1018},{"type":553,"tag":618,"props":1201,"children":1202},{"style":756},[1203],{"type":558,"value":877},{"type":553,"tag":618,"props":1205,"children":1207},{"class":620,"line":1206},15,[1208,1213,1217],{"type":553,"tag":618,"props":1209,"children":1210},{"style":784},[1211],{"type":558,"value":1212},"      j",{"type":553,"tag":618,"props":1214,"children":1215},{"style":838},[1216],{"type":558,"value":1036},{"type":553,"tag":618,"props":1218,"children":1219},{"style":756},[1220],{"type":558,"value":936},{"type":553,"tag":618,"props":1222,"children":1224},{"class":620,"line":1223},16,[1225],{"type":553,"tag":618,"props":1226,"children":1227},{"style":756},[1228],{"type":558,"value":1229},"    }\n",{"type":553,"tag":618,"props":1231,"children":1233},{"class":620,"line":1232},17,[1234],{"type":553,"tag":618,"props":1235,"children":1236},{"style":742},[1237],{"type":558,"value":1238},"    // 交换\n",{"type":553,"tag":618,"props":1240,"children":1242},{"class":620,"line":1241},18,[1243,1248,1252,1256,1260,1265,1269,1273,1277,1282,1286,1291,1295,1299,1303,1307,1311,1315,1319],{"type":553,"tag":618,"props":1244,"children":1245},{"style":756},[1246],{"type":558,"value":1247},"    [",{"type":553,"tag":618,"props":1249,"children":1250},{"style":784},[1251],{"type":558,"value":867},{"type":553,"tag":618,"props":1253,"children":1254},{"style":756},[1255],{"type":558,"value":978},{"type":553,"tag":618,"props":1257,"children":1258},{"style":784},[1259],{"type":558,"value":954},{"type":553,"tag":618,"props":1261,"children":1262},{"style":756},[1263],{"type":558,"value":1264},"],",{"type":553,"tag":618,"props":1266,"children":1267},{"style":784},[1268],{"type":558,"value":909},{"type":553,"tag":618,"props":1270,"children":1271},{"style":756},[1272],{"type":558,"value":978},{"type":553,"tag":618,"props":1274,"children":1275},{"style":784},[1276],{"type":558,"value":1151},{"type":553,"tag":618,"props":1278,"children":1279},{"style":756},[1280],{"type":558,"value":1281},"]]",{"type":553,"tag":618,"props":1283,"children":1284},{"style":756},[1285],{"type":558,"value":852},{"type":553,"tag":618,"props":1287,"children":1288},{"style":756},[1289],{"type":558,"value":1290}," [",{"type":553,"tag":618,"props":1292,"children":1293},{"style":784},[1294],{"type":558,"value":867},{"type":553,"tag":618,"props":1296,"children":1297},{"style":756},[1298],{"type":558,"value":978},{"type":553,"tag":618,"props":1300,"children":1301},{"style":784},[1302],{"type":558,"value":1151},{"type":553,"tag":618,"props":1304,"children":1305},{"style":756},[1306],{"type":558,"value":1264},{"type":553,"tag":618,"props":1308,"children":1309},{"style":784},[1310],{"type":558,"value":909},{"type":553,"tag":618,"props":1312,"children":1313},{"style":756},[1314],{"type":558,"value":978},{"type":553,"tag":618,"props":1316,"children":1317},{"style":784},[1318],{"type":558,"value":954},{"type":553,"tag":618,"props":1320,"children":1321},{"style":756},[1322],{"type":558,"value":1323},"]];\n",{"type":553,"tag":618,"props":1325,"children":1327},{"class":620,"line":1326},19,[1328],{"type":553,"tag":618,"props":1329,"children":1330},{"style":756},[1331],{"type":558,"value":1049},{"type":553,"tag":618,"props":1333,"children":1335},{"class":620,"line":1334},20,[1336],{"type":553,"tag":618,"props":1337,"children":1338},{"style":742},[1339],{"type":558,"value":1340},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":553,"tag":618,"props":1342,"children":1344},{"class":620,"line":1343},21,[1345,1349,1354,1358,1362,1366,1370],{"type":553,"tag":618,"props":1346,"children":1347},{"style":838},[1348],{"type":558,"value":895},{"type":553,"tag":618,"props":1350,"children":1351},{"style":784},[1352],{"type":558,"value":1353}," l",{"type":553,"tag":618,"props":1355,"children":1356},{"style":756},[1357],{"type":558,"value":852},{"type":553,"tag":618,"props":1359,"children":1360},{"style":784},[1361],{"type":558,"value":900},{"type":553,"tag":618,"props":1363,"children":1364},{"style":838},[1365],{"type":558,"value":1008},{"type":553,"tag":618,"props":1367,"children":1368},{"style":928},[1369],{"type":558,"value":1013},{"type":553,"tag":618,"props":1371,"children":1372},{"style":756},[1373],{"type":558,"value":936},{"type":553,"tag":618,"props":1375,"children":1377},{"class":620,"line":1376},22,[1378,1382,1387,1391,1395,1399,1403,1407,1411],{"type":553,"tag":618,"props":1379,"children":1380},{"style":838},[1381],{"type":558,"value":895},{"type":553,"tag":618,"props":1383,"children":1384},{"style":784},[1385],{"type":558,"value":1386}," r",{"type":553,"tag":618,"props":1388,"children":1389},{"style":756},[1390],{"type":558,"value":852},{"type":553,"tag":618,"props":1392,"children":1393},{"style":784},[1394],{"type":558,"value":909},{"type":553,"tag":618,"props":1396,"children":1397},{"style":756},[1398],{"type":558,"value":914},{"type":553,"tag":618,"props":1400,"children":1401},{"style":917},[1402],{"type":558,"value":920},{"type":553,"tag":618,"props":1404,"children":1405},{"style":838},[1406],{"type":558,"value":925},{"type":553,"tag":618,"props":1408,"children":1409},{"style":928},[1410],{"type":558,"value":1013},{"type":553,"tag":618,"props":1412,"children":1413},{"style":756},[1414],{"type":558,"value":936},{"type":553,"tag":618,"props":1416,"children":1418},{"class":620,"line":1417},23,[1419,1423,1427,1432,1437,1441,1445],{"type":553,"tag":618,"props":1420,"children":1421},{"style":762},[1422],{"type":558,"value":945},{"type":553,"tag":618,"props":1424,"children":1425},{"style":756},[1426],{"type":558,"value":862},{"type":553,"tag":618,"props":1428,"children":1429},{"style":784},[1430],{"type":558,"value":1431},"l",{"type":553,"tag":618,"props":1433,"children":1434},{"style":756},[1435],{"type":558,"value":1436}," \u003C",{"type":553,"tag":618,"props":1438,"children":1439},{"style":784},[1440],{"type":558,"value":1386},{"type":553,"tag":618,"props":1442,"children":1443},{"style":756},[1444],{"type":558,"value":872},{"type":553,"tag":618,"props":1446,"children":1447},{"style":756},[1448],{"type":558,"value":877},{"type":553,"tag":618,"props":1450,"children":1452},{"class":620,"line":1451},24,[1453,1457,1461,1465,1469,1473,1477,1481,1486,1490,1494,1498,1502,1506,1510,1514,1518,1522,1526],{"type":553,"tag":618,"props":1454,"children":1455},{"style":756},[1456],{"type":558,"value":1247},{"type":553,"tag":618,"props":1458,"children":1459},{"style":784},[1460],{"type":558,"value":867},{"type":553,"tag":618,"props":1462,"children":1463},{"style":756},[1464],{"type":558,"value":978},{"type":553,"tag":618,"props":1466,"children":1467},{"style":784},[1468],{"type":558,"value":1431},{"type":553,"tag":618,"props":1470,"children":1471},{"style":756},[1472],{"type":558,"value":1264},{"type":553,"tag":618,"props":1474,"children":1475},{"style":784},[1476],{"type":558,"value":909},{"type":553,"tag":618,"props":1478,"children":1479},{"style":756},[1480],{"type":558,"value":978},{"type":553,"tag":618,"props":1482,"children":1483},{"style":784},[1484],{"type":558,"value":1485},"r",{"type":553,"tag":618,"props":1487,"children":1488},{"style":756},[1489],{"type":558,"value":1281},{"type":553,"tag":618,"props":1491,"children":1492},{"style":756},[1493],{"type":558,"value":852},{"type":553,"tag":618,"props":1495,"children":1496},{"style":756},[1497],{"type":558,"value":1290},{"type":553,"tag":618,"props":1499,"children":1500},{"style":784},[1501],{"type":558,"value":867},{"type":553,"tag":618,"props":1503,"children":1504},{"style":756},[1505],{"type":558,"value":978},{"type":553,"tag":618,"props":1507,"children":1508},{"style":784},[1509],{"type":558,"value":1485},{"type":553,"tag":618,"props":1511,"children":1512},{"style":756},[1513],{"type":558,"value":1264},{"type":553,"tag":618,"props":1515,"children":1516},{"style":784},[1517],{"type":558,"value":909},{"type":553,"tag":618,"props":1519,"children":1520},{"style":756},[1521],{"type":558,"value":978},{"type":553,"tag":618,"props":1523,"children":1524},{"style":784},[1525],{"type":558,"value":1431},{"type":553,"tag":618,"props":1527,"children":1528},{"style":756},[1529],{"type":558,"value":1323},{"type":553,"tag":618,"props":1531,"children":1533},{"class":620,"line":1532},25,[1534,1539,1544],{"type":553,"tag":618,"props":1535,"children":1536},{"style":784},[1537],{"type":558,"value":1538},"    l",{"type":553,"tag":618,"props":1540,"children":1541},{"style":838},[1542],{"type":558,"value":1543},"++",{"type":553,"tag":618,"props":1545,"children":1546},{"style":756},[1547],{"type":558,"value":936},{"type":553,"tag":618,"props":1549,"children":1551},{"class":620,"line":1550},26,[1552,1557,1561],{"type":553,"tag":618,"props":1553,"children":1554},{"style":784},[1555],{"type":558,"value":1556},"    r",{"type":553,"tag":618,"props":1558,"children":1559},{"style":838},[1560],{"type":558,"value":1036},{"type":553,"tag":618,"props":1562,"children":1563},{"style":756},[1564],{"type":558,"value":936},{"type":553,"tag":618,"props":1566,"children":1568},{"class":620,"line":1567},27,[1569],{"type":553,"tag":618,"props":1570,"children":1571},{"style":756},[1572],{"type":558,"value":1049},{"type":553,"tag":618,"props":1574,"children":1576},{"class":620,"line":1575},28,[1577],{"type":553,"tag":618,"props":1578,"children":1579},{"style":756},[1580],{"type":558,"value":1581},"};\n",{"type":553,"tag":1583,"props":1584,"children":1585},"style",{},[1586],{"type":558,"value":1587},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":834,"depth":834,"links":1589},[1590,1591],{"id":714,"depth":630,"text":714},{"id":719,"depth":630,"text":719,"children":1592},[1593],{"id":725,"depth":790,"text":725},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1600,1602],{"_path":102,"title":101,"description":1601},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":108,"title":107,"description":1603},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1714099676686]