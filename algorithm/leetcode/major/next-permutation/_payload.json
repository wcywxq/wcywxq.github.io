[{"data":1,"prerenderedAt":1612},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":551,"/algorithm/leetcode/major/next-permutation-surround":1607},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":105,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":104,"description":555,"url":556,"body":557,"_type":1602,"_id":1603,"_source":1604,"_file":1605,"_extension":1606},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":558,"children":559,"toc":1596},"root",[560,567,577,582,600,605,610,615,645,650,673,678,701,706,719,725,730,736,1590],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":568,"props":569,"children":570},"ul",{},[571],{"type":561,"tag":572,"props":573,"children":574},"li",{},[575],{"type":566,"value":576},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":561,"tag":562,"props":578,"children":579},{},[580],{"type":566,"value":581},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":561,"tag":568,"props":583,"children":584},{},[585,590,595],{"type":561,"tag":572,"props":586,"children":587},{},[588],{"type":566,"value":589},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":561,"tag":572,"props":591,"children":592},{},[593],{"type":566,"value":594},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":561,"tag":572,"props":596,"children":597},{},[598],{"type":566,"value":599},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":561,"tag":562,"props":601,"children":602},{},[603],{"type":566,"value":604},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":561,"tag":562,"props":606,"children":607},{},[608],{"type":566,"value":609},"必须 原地 修改，只允许使用额外常数空间。",{"type":561,"tag":562,"props":611,"children":612},{},[613],{"type":566,"value":614},"示例 1：",{"type":561,"tag":616,"props":617,"children":620},"pre",{"className":618,"code":619,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[621],{"type":561,"tag":622,"props":623,"children":624},"code",{"__ignoreMap":554},[625,636],{"type":561,"tag":626,"props":627,"children":630},"span",{"class":628,"line":629},"line",1,[631],{"type":561,"tag":626,"props":632,"children":633},{},[634],{"type":566,"value":635},"输入：nums = [1,2,3]\n",{"type":561,"tag":626,"props":637,"children":639},{"class":628,"line":638},2,[640],{"type":561,"tag":626,"props":641,"children":642},{},[643],{"type":566,"value":644},"输出：[1,3,2]\n",{"type":561,"tag":562,"props":646,"children":647},{},[648],{"type":566,"value":649},"示例 2：",{"type":561,"tag":616,"props":651,"children":653},{"className":618,"code":652,"language":566,"meta":554,"style":554},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[654],{"type":561,"tag":622,"props":655,"children":656},{"__ignoreMap":554},[657,665],{"type":561,"tag":626,"props":658,"children":659},{"class":628,"line":629},[660],{"type":561,"tag":626,"props":661,"children":662},{},[663],{"type":566,"value":664},"输入：nums = [3,2,1]\n",{"type":561,"tag":626,"props":666,"children":667},{"class":628,"line":638},[668],{"type":561,"tag":626,"props":669,"children":670},{},[671],{"type":566,"value":672},"输出：[1,2,3]\n",{"type":561,"tag":562,"props":674,"children":675},{},[676],{"type":566,"value":677},"示例 3：",{"type":561,"tag":616,"props":679,"children":681},{"className":618,"code":680,"language":566,"meta":554,"style":554},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[682],{"type":561,"tag":622,"props":683,"children":684},{"__ignoreMap":554},[685,693],{"type":561,"tag":626,"props":686,"children":687},{"class":628,"line":629},[688],{"type":561,"tag":626,"props":689,"children":690},{},[691],{"type":566,"value":692},"输入：nums = [1,1,5]\n",{"type":561,"tag":626,"props":694,"children":695},{"class":628,"line":638},[696],{"type":561,"tag":626,"props":697,"children":698},{},[699],{"type":566,"value":700},"输出：[1,5,1]\n",{"type":561,"tag":562,"props":702,"children":703},{},[704],{"type":566,"value":705},"提示：",{"type":561,"tag":568,"props":707,"children":708},{},[709,714],{"type":561,"tag":572,"props":710,"children":711},{},[712],{"type":566,"value":713},"1 \u003C= nums.length \u003C= 100",{"type":561,"tag":572,"props":715,"children":716},{},[717],{"type":566,"value":718},"0 \u003C= nums[i] \u003C= 100",{"type":561,"tag":720,"props":721,"children":723},"h2",{"id":722},"解题思路",[724],{"type":566,"value":722},{"type":561,"tag":720,"props":726,"children":728},{"id":727},"实现",[729],{"type":566,"value":727},{"type":561,"tag":731,"props":732,"children":734},"h3",{"id":733},"双指针",[735],{"type":566,"value":733},{"type":561,"tag":616,"props":737,"children":741},{"className":738,"code":739,"language":740,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[742],{"type":561,"tag":622,"props":743,"children":744},{"__ignoreMap":554},[745,754,796,831,840,886,895,945,1031,1049,1058,1067,1100,1142,1212,1229,1238,1247,1332,1340,1349,1382,1423,1457,1538,1556,1573,1581],{"type":561,"tag":626,"props":746,"children":747},{"class":628,"line":629},[748],{"type":561,"tag":626,"props":749,"children":751},{"style":750},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[752],{"type":566,"value":753},"/**\n",{"type":561,"tag":626,"props":755,"children":756},{"class":628,"line":638},[757,762,768,774,779,785,790],{"type":561,"tag":626,"props":758,"children":759},{"style":750},[760],{"type":566,"value":761}," * ",{"type":561,"tag":626,"props":763,"children":765},{"style":764},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[766],{"type":566,"value":767},"@",{"type":561,"tag":626,"props":769,"children":771},{"style":770},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[772],{"type":566,"value":773},"param",{"type":561,"tag":626,"props":775,"children":776},{"style":764},[777],{"type":566,"value":778}," {",{"type":561,"tag":626,"props":780,"children":782},{"style":781},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[783],{"type":566,"value":784},"number[]",{"type":561,"tag":626,"props":786,"children":787},{"style":764},[788],{"type":566,"value":789},"}",{"type":561,"tag":626,"props":791,"children":793},{"style":792},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[794],{"type":566,"value":795}," nums\n",{"type":561,"tag":626,"props":797,"children":799},{"class":628,"line":798},3,[800,804,808,813,817,822,826],{"type":561,"tag":626,"props":801,"children":802},{"style":750},[803],{"type":566,"value":761},{"type":561,"tag":626,"props":805,"children":806},{"style":764},[807],{"type":566,"value":767},{"type":561,"tag":626,"props":809,"children":810},{"style":770},[811],{"type":566,"value":812},"return",{"type":561,"tag":626,"props":814,"children":815},{"style":764},[816],{"type":566,"value":778},{"type":561,"tag":626,"props":818,"children":819},{"style":781},[820],{"type":566,"value":821},"void",{"type":561,"tag":626,"props":823,"children":824},{"style":764},[825],{"type":566,"value":789},{"type":561,"tag":626,"props":827,"children":828},{"style":750},[829],{"type":566,"value":830}," Do not return anything, modify nums in-place instead.\n",{"type":561,"tag":626,"props":832,"children":834},{"class":628,"line":833},4,[835],{"type":561,"tag":626,"props":836,"children":837},{"style":750},[838],{"type":566,"value":839}," */\n",{"type":561,"tag":626,"props":841,"children":843},{"class":628,"line":842},5,[844,850,856,861,866,871,876,881],{"type":561,"tag":626,"props":845,"children":847},{"style":846},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[848],{"type":566,"value":849},"var",{"type":561,"tag":626,"props":851,"children":853},{"style":852},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[854],{"type":566,"value":855}," nextPermutation",{"type":561,"tag":626,"props":857,"children":858},{"style":764},[859],{"type":566,"value":860}," =",{"type":561,"tag":626,"props":862,"children":863},{"style":846},[864],{"type":566,"value":865}," function",{"type":561,"tag":626,"props":867,"children":868},{"style":764},[869],{"type":566,"value":870}," (",{"type":561,"tag":626,"props":872,"children":873},{"style":792},[874],{"type":566,"value":875},"nums",{"type":561,"tag":626,"props":877,"children":878},{"style":764},[879],{"type":566,"value":880},")",{"type":561,"tag":626,"props":882,"children":883},{"style":764},[884],{"type":566,"value":885}," {\n",{"type":561,"tag":626,"props":887,"children":889},{"class":628,"line":888},6,[890],{"type":561,"tag":626,"props":891,"children":892},{"style":750},[893],{"type":566,"value":894},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":561,"tag":626,"props":896,"children":898},{"class":628,"line":897},7,[899,904,909,913,918,923,929,934,940],{"type":561,"tag":626,"props":900,"children":901},{"style":846},[902],{"type":566,"value":903},"  let",{"type":561,"tag":626,"props":905,"children":906},{"style":792},[907],{"type":566,"value":908}," i",{"type":561,"tag":626,"props":910,"children":911},{"style":764},[912],{"type":566,"value":860},{"type":561,"tag":626,"props":914,"children":915},{"style":792},[916],{"type":566,"value":917}," nums",{"type":561,"tag":626,"props":919,"children":920},{"style":764},[921],{"type":566,"value":922},".",{"type":561,"tag":626,"props":924,"children":926},{"style":925},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[927],{"type":566,"value":928},"length",{"type":561,"tag":626,"props":930,"children":931},{"style":846},[932],{"type":566,"value":933}," -",{"type":561,"tag":626,"props":935,"children":937},{"style":936},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[938],{"type":566,"value":939}," 2",{"type":561,"tag":626,"props":941,"children":942},{"style":764},[943],{"type":566,"value":944},";\n",{"type":561,"tag":626,"props":946,"children":948},{"class":628,"line":947},8,[949,954,958,963,968,973,978,982,987,991,996,1000,1004,1008,1012,1017,1022,1027],{"type":561,"tag":626,"props":950,"children":951},{"style":770},[952],{"type":566,"value":953},"  while",{"type":561,"tag":626,"props":955,"children":956},{"style":764},[957],{"type":566,"value":870},{"type":561,"tag":626,"props":959,"children":960},{"style":792},[961],{"type":566,"value":962},"i",{"type":561,"tag":626,"props":964,"children":965},{"style":764},[966],{"type":566,"value":967}," >=",{"type":561,"tag":626,"props":969,"children":970},{"style":936},[971],{"type":566,"value":972}," 0",{"type":561,"tag":626,"props":974,"children":975},{"style":846},[976],{"type":566,"value":977}," &&",{"type":561,"tag":626,"props":979,"children":980},{"style":792},[981],{"type":566,"value":917},{"type":561,"tag":626,"props":983,"children":984},{"style":764},[985],{"type":566,"value":986},"[",{"type":561,"tag":626,"props":988,"children":989},{"style":792},[990],{"type":566,"value":962},{"type":561,"tag":626,"props":992,"children":993},{"style":764},[994],{"type":566,"value":995},"]",{"type":561,"tag":626,"props":997,"children":998},{"style":764},[999],{"type":566,"value":967},{"type":561,"tag":626,"props":1001,"children":1002},{"style":792},[1003],{"type":566,"value":917},{"type":561,"tag":626,"props":1005,"children":1006},{"style":764},[1007],{"type":566,"value":986},{"type":561,"tag":626,"props":1009,"children":1010},{"style":792},[1011],{"type":566,"value":962},{"type":561,"tag":626,"props":1013,"children":1014},{"style":846},[1015],{"type":566,"value":1016}," +",{"type":561,"tag":626,"props":1018,"children":1019},{"style":936},[1020],{"type":566,"value":1021}," 1",{"type":561,"tag":626,"props":1023,"children":1024},{"style":764},[1025],{"type":566,"value":1026},"])",{"type":561,"tag":626,"props":1028,"children":1029},{"style":764},[1030],{"type":566,"value":885},{"type":561,"tag":626,"props":1032,"children":1034},{"class":628,"line":1033},9,[1035,1040,1045],{"type":561,"tag":626,"props":1036,"children":1037},{"style":792},[1038],{"type":566,"value":1039},"    i",{"type":561,"tag":626,"props":1041,"children":1042},{"style":846},[1043],{"type":566,"value":1044},"--",{"type":561,"tag":626,"props":1046,"children":1047},{"style":764},[1048],{"type":566,"value":944},{"type":561,"tag":626,"props":1050,"children":1052},{"class":628,"line":1051},10,[1053],{"type":561,"tag":626,"props":1054,"children":1055},{"style":764},[1056],{"type":566,"value":1057},"  }\n",{"type":561,"tag":626,"props":1059,"children":1061},{"class":628,"line":1060},11,[1062],{"type":561,"tag":626,"props":1063,"children":1064},{"style":750},[1065],{"type":566,"value":1066},"  // i 在数组中存在，进行交换\n",{"type":561,"tag":626,"props":1068,"children":1070},{"class":628,"line":1069},12,[1071,1076,1080,1084,1088,1092,1096],{"type":561,"tag":626,"props":1072,"children":1073},{"style":770},[1074],{"type":566,"value":1075},"  if",{"type":561,"tag":626,"props":1077,"children":1078},{"style":764},[1079],{"type":566,"value":870},{"type":561,"tag":626,"props":1081,"children":1082},{"style":792},[1083],{"type":566,"value":962},{"type":561,"tag":626,"props":1085,"children":1086},{"style":764},[1087],{"type":566,"value":967},{"type":561,"tag":626,"props":1089,"children":1090},{"style":936},[1091],{"type":566,"value":972},{"type":561,"tag":626,"props":1093,"children":1094},{"style":764},[1095],{"type":566,"value":880},{"type":561,"tag":626,"props":1097,"children":1098},{"style":764},[1099],{"type":566,"value":885},{"type":561,"tag":626,"props":1101,"children":1103},{"class":628,"line":1102},13,[1104,1109,1114,1118,1122,1126,1130,1134,1138],{"type":561,"tag":626,"props":1105,"children":1106},{"style":846},[1107],{"type":566,"value":1108},"    let",{"type":561,"tag":626,"props":1110,"children":1111},{"style":792},[1112],{"type":566,"value":1113}," j",{"type":561,"tag":626,"props":1115,"children":1116},{"style":764},[1117],{"type":566,"value":860},{"type":561,"tag":626,"props":1119,"children":1120},{"style":792},[1121],{"type":566,"value":917},{"type":561,"tag":626,"props":1123,"children":1124},{"style":764},[1125],{"type":566,"value":922},{"type":561,"tag":626,"props":1127,"children":1128},{"style":925},[1129],{"type":566,"value":928},{"type":561,"tag":626,"props":1131,"children":1132},{"style":846},[1133],{"type":566,"value":933},{"type":561,"tag":626,"props":1135,"children":1136},{"style":936},[1137],{"type":566,"value":1021},{"type":561,"tag":626,"props":1139,"children":1140},{"style":764},[1141],{"type":566,"value":944},{"type":561,"tag":626,"props":1143,"children":1145},{"class":628,"line":1144},14,[1146,1151,1155,1160,1164,1168,1172,1176,1180,1184,1188,1192,1196,1200,1204,1208],{"type":561,"tag":626,"props":1147,"children":1148},{"style":770},[1149],{"type":566,"value":1150},"    while",{"type":561,"tag":626,"props":1152,"children":1153},{"style":764},[1154],{"type":566,"value":870},{"type":561,"tag":626,"props":1156,"children":1157},{"style":792},[1158],{"type":566,"value":1159},"j",{"type":561,"tag":626,"props":1161,"children":1162},{"style":764},[1163],{"type":566,"value":967},{"type":561,"tag":626,"props":1165,"children":1166},{"style":936},[1167],{"type":566,"value":972},{"type":561,"tag":626,"props":1169,"children":1170},{"style":846},[1171],{"type":566,"value":977},{"type":561,"tag":626,"props":1173,"children":1174},{"style":792},[1175],{"type":566,"value":917},{"type":561,"tag":626,"props":1177,"children":1178},{"style":764},[1179],{"type":566,"value":986},{"type":561,"tag":626,"props":1181,"children":1182},{"style":792},[1183],{"type":566,"value":962},{"type":561,"tag":626,"props":1185,"children":1186},{"style":764},[1187],{"type":566,"value":995},{"type":561,"tag":626,"props":1189,"children":1190},{"style":764},[1191],{"type":566,"value":967},{"type":561,"tag":626,"props":1193,"children":1194},{"style":792},[1195],{"type":566,"value":917},{"type":561,"tag":626,"props":1197,"children":1198},{"style":764},[1199],{"type":566,"value":986},{"type":561,"tag":626,"props":1201,"children":1202},{"style":792},[1203],{"type":566,"value":1159},{"type":561,"tag":626,"props":1205,"children":1206},{"style":764},[1207],{"type":566,"value":1026},{"type":561,"tag":626,"props":1209,"children":1210},{"style":764},[1211],{"type":566,"value":885},{"type":561,"tag":626,"props":1213,"children":1215},{"class":628,"line":1214},15,[1216,1221,1225],{"type":561,"tag":626,"props":1217,"children":1218},{"style":792},[1219],{"type":566,"value":1220},"      j",{"type":561,"tag":626,"props":1222,"children":1223},{"style":846},[1224],{"type":566,"value":1044},{"type":561,"tag":626,"props":1226,"children":1227},{"style":764},[1228],{"type":566,"value":944},{"type":561,"tag":626,"props":1230,"children":1232},{"class":628,"line":1231},16,[1233],{"type":561,"tag":626,"props":1234,"children":1235},{"style":764},[1236],{"type":566,"value":1237},"    }\n",{"type":561,"tag":626,"props":1239,"children":1241},{"class":628,"line":1240},17,[1242],{"type":561,"tag":626,"props":1243,"children":1244},{"style":750},[1245],{"type":566,"value":1246},"    // 交换\n",{"type":561,"tag":626,"props":1248,"children":1250},{"class":628,"line":1249},18,[1251,1256,1260,1264,1268,1273,1277,1281,1285,1290,1294,1299,1303,1307,1311,1315,1319,1323,1327],{"type":561,"tag":626,"props":1252,"children":1253},{"style":764},[1254],{"type":566,"value":1255},"    [",{"type":561,"tag":626,"props":1257,"children":1258},{"style":792},[1259],{"type":566,"value":875},{"type":561,"tag":626,"props":1261,"children":1262},{"style":764},[1263],{"type":566,"value":986},{"type":561,"tag":626,"props":1265,"children":1266},{"style":792},[1267],{"type":566,"value":962},{"type":561,"tag":626,"props":1269,"children":1270},{"style":764},[1271],{"type":566,"value":1272},"],",{"type":561,"tag":626,"props":1274,"children":1275},{"style":792},[1276],{"type":566,"value":917},{"type":561,"tag":626,"props":1278,"children":1279},{"style":764},[1280],{"type":566,"value":986},{"type":561,"tag":626,"props":1282,"children":1283},{"style":792},[1284],{"type":566,"value":1159},{"type":561,"tag":626,"props":1286,"children":1287},{"style":764},[1288],{"type":566,"value":1289},"]]",{"type":561,"tag":626,"props":1291,"children":1292},{"style":764},[1293],{"type":566,"value":860},{"type":561,"tag":626,"props":1295,"children":1296},{"style":764},[1297],{"type":566,"value":1298}," [",{"type":561,"tag":626,"props":1300,"children":1301},{"style":792},[1302],{"type":566,"value":875},{"type":561,"tag":626,"props":1304,"children":1305},{"style":764},[1306],{"type":566,"value":986},{"type":561,"tag":626,"props":1308,"children":1309},{"style":792},[1310],{"type":566,"value":1159},{"type":561,"tag":626,"props":1312,"children":1313},{"style":764},[1314],{"type":566,"value":1272},{"type":561,"tag":626,"props":1316,"children":1317},{"style":792},[1318],{"type":566,"value":917},{"type":561,"tag":626,"props":1320,"children":1321},{"style":764},[1322],{"type":566,"value":986},{"type":561,"tag":626,"props":1324,"children":1325},{"style":792},[1326],{"type":566,"value":962},{"type":561,"tag":626,"props":1328,"children":1329},{"style":764},[1330],{"type":566,"value":1331},"]];\n",{"type":561,"tag":626,"props":1333,"children":1335},{"class":628,"line":1334},19,[1336],{"type":561,"tag":626,"props":1337,"children":1338},{"style":764},[1339],{"type":566,"value":1057},{"type":561,"tag":626,"props":1341,"children":1343},{"class":628,"line":1342},20,[1344],{"type":561,"tag":626,"props":1345,"children":1346},{"style":750},[1347],{"type":566,"value":1348},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":561,"tag":626,"props":1350,"children":1352},{"class":628,"line":1351},21,[1353,1357,1362,1366,1370,1374,1378],{"type":561,"tag":626,"props":1354,"children":1355},{"style":846},[1356],{"type":566,"value":903},{"type":561,"tag":626,"props":1358,"children":1359},{"style":792},[1360],{"type":566,"value":1361}," l",{"type":561,"tag":626,"props":1363,"children":1364},{"style":764},[1365],{"type":566,"value":860},{"type":561,"tag":626,"props":1367,"children":1368},{"style":792},[1369],{"type":566,"value":908},{"type":561,"tag":626,"props":1371,"children":1372},{"style":846},[1373],{"type":566,"value":1016},{"type":561,"tag":626,"props":1375,"children":1376},{"style":936},[1377],{"type":566,"value":1021},{"type":561,"tag":626,"props":1379,"children":1380},{"style":764},[1381],{"type":566,"value":944},{"type":561,"tag":626,"props":1383,"children":1385},{"class":628,"line":1384},22,[1386,1390,1395,1399,1403,1407,1411,1415,1419],{"type":561,"tag":626,"props":1387,"children":1388},{"style":846},[1389],{"type":566,"value":903},{"type":561,"tag":626,"props":1391,"children":1392},{"style":792},[1393],{"type":566,"value":1394}," r",{"type":561,"tag":626,"props":1396,"children":1397},{"style":764},[1398],{"type":566,"value":860},{"type":561,"tag":626,"props":1400,"children":1401},{"style":792},[1402],{"type":566,"value":917},{"type":561,"tag":626,"props":1404,"children":1405},{"style":764},[1406],{"type":566,"value":922},{"type":561,"tag":626,"props":1408,"children":1409},{"style":925},[1410],{"type":566,"value":928},{"type":561,"tag":626,"props":1412,"children":1413},{"style":846},[1414],{"type":566,"value":933},{"type":561,"tag":626,"props":1416,"children":1417},{"style":936},[1418],{"type":566,"value":1021},{"type":561,"tag":626,"props":1420,"children":1421},{"style":764},[1422],{"type":566,"value":944},{"type":561,"tag":626,"props":1424,"children":1426},{"class":628,"line":1425},23,[1427,1431,1435,1440,1445,1449,1453],{"type":561,"tag":626,"props":1428,"children":1429},{"style":770},[1430],{"type":566,"value":953},{"type":561,"tag":626,"props":1432,"children":1433},{"style":764},[1434],{"type":566,"value":870},{"type":561,"tag":626,"props":1436,"children":1437},{"style":792},[1438],{"type":566,"value":1439},"l",{"type":561,"tag":626,"props":1441,"children":1442},{"style":764},[1443],{"type":566,"value":1444}," \u003C",{"type":561,"tag":626,"props":1446,"children":1447},{"style":792},[1448],{"type":566,"value":1394},{"type":561,"tag":626,"props":1450,"children":1451},{"style":764},[1452],{"type":566,"value":880},{"type":561,"tag":626,"props":1454,"children":1455},{"style":764},[1456],{"type":566,"value":885},{"type":561,"tag":626,"props":1458,"children":1460},{"class":628,"line":1459},24,[1461,1465,1469,1473,1477,1481,1485,1489,1494,1498,1502,1506,1510,1514,1518,1522,1526,1530,1534],{"type":561,"tag":626,"props":1462,"children":1463},{"style":764},[1464],{"type":566,"value":1255},{"type":561,"tag":626,"props":1466,"children":1467},{"style":792},[1468],{"type":566,"value":875},{"type":561,"tag":626,"props":1470,"children":1471},{"style":764},[1472],{"type":566,"value":986},{"type":561,"tag":626,"props":1474,"children":1475},{"style":792},[1476],{"type":566,"value":1439},{"type":561,"tag":626,"props":1478,"children":1479},{"style":764},[1480],{"type":566,"value":1272},{"type":561,"tag":626,"props":1482,"children":1483},{"style":792},[1484],{"type":566,"value":917},{"type":561,"tag":626,"props":1486,"children":1487},{"style":764},[1488],{"type":566,"value":986},{"type":561,"tag":626,"props":1490,"children":1491},{"style":792},[1492],{"type":566,"value":1493},"r",{"type":561,"tag":626,"props":1495,"children":1496},{"style":764},[1497],{"type":566,"value":1289},{"type":561,"tag":626,"props":1499,"children":1500},{"style":764},[1501],{"type":566,"value":860},{"type":561,"tag":626,"props":1503,"children":1504},{"style":764},[1505],{"type":566,"value":1298},{"type":561,"tag":626,"props":1507,"children":1508},{"style":792},[1509],{"type":566,"value":875},{"type":561,"tag":626,"props":1511,"children":1512},{"style":764},[1513],{"type":566,"value":986},{"type":561,"tag":626,"props":1515,"children":1516},{"style":792},[1517],{"type":566,"value":1493},{"type":561,"tag":626,"props":1519,"children":1520},{"style":764},[1521],{"type":566,"value":1272},{"type":561,"tag":626,"props":1523,"children":1524},{"style":792},[1525],{"type":566,"value":917},{"type":561,"tag":626,"props":1527,"children":1528},{"style":764},[1529],{"type":566,"value":986},{"type":561,"tag":626,"props":1531,"children":1532},{"style":792},[1533],{"type":566,"value":1439},{"type":561,"tag":626,"props":1535,"children":1536},{"style":764},[1537],{"type":566,"value":1331},{"type":561,"tag":626,"props":1539,"children":1541},{"class":628,"line":1540},25,[1542,1547,1552],{"type":561,"tag":626,"props":1543,"children":1544},{"style":792},[1545],{"type":566,"value":1546},"    l",{"type":561,"tag":626,"props":1548,"children":1549},{"style":846},[1550],{"type":566,"value":1551},"++",{"type":561,"tag":626,"props":1553,"children":1554},{"style":764},[1555],{"type":566,"value":944},{"type":561,"tag":626,"props":1557,"children":1559},{"class":628,"line":1558},26,[1560,1565,1569],{"type":561,"tag":626,"props":1561,"children":1562},{"style":792},[1563],{"type":566,"value":1564},"    r",{"type":561,"tag":626,"props":1566,"children":1567},{"style":846},[1568],{"type":566,"value":1044},{"type":561,"tag":626,"props":1570,"children":1571},{"style":764},[1572],{"type":566,"value":944},{"type":561,"tag":626,"props":1574,"children":1576},{"class":628,"line":1575},27,[1577],{"type":561,"tag":626,"props":1578,"children":1579},{"style":764},[1580],{"type":566,"value":1057},{"type":561,"tag":626,"props":1582,"children":1584},{"class":628,"line":1583},28,[1585],{"type":561,"tag":626,"props":1586,"children":1587},{"style":764},[1588],{"type":566,"value":1589},"};\n",{"type":561,"tag":1591,"props":1592,"children":1593},"style",{},[1594],{"type":566,"value":1595},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":842,"depth":842,"links":1597},[1598,1599],{"id":722,"depth":638,"text":722},{"id":727,"depth":638,"text":727,"children":1600},[1601],{"id":733,"depth":798,"text":733},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1608,1610],{"_path":102,"title":101,"description":1609},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":108,"title":107,"description":1611},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1715135010698]