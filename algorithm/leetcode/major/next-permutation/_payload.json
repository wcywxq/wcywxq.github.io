[{"data":1,"prerenderedAt":1512},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":463,"/algorithm/leetcode/major/next-permutation-surround":1507},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":102,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":101,"description":467,"url":468,"body":469,"_type":1502,"_id":1503,"_source":1504,"_file":1505,"_extension":1506},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":470,"children":471,"toc":1496},"root",[472,479,489,494,512,517,522,527,557,562,585,590,613,618,631,637,642,648,1490],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":480,"props":481,"children":482},"ul",{},[483],{"type":473,"tag":484,"props":485,"children":486},"li",{},[487],{"type":478,"value":488},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":473,"tag":474,"props":490,"children":491},{},[492],{"type":478,"value":493},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":473,"tag":480,"props":495,"children":496},{},[497,502,507],{"type":473,"tag":484,"props":498,"children":499},{},[500],{"type":478,"value":501},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":473,"tag":484,"props":503,"children":504},{},[505],{"type":478,"value":506},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":473,"tag":484,"props":508,"children":509},{},[510],{"type":478,"value":511},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":473,"tag":474,"props":513,"children":514},{},[515],{"type":478,"value":516},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":473,"tag":474,"props":518,"children":519},{},[520],{"type":478,"value":521},"必须 原地 修改，只允许使用额外常数空间。",{"type":473,"tag":474,"props":523,"children":524},{},[525],{"type":478,"value":526},"示例 1：",{"type":473,"tag":528,"props":529,"children":532},"pre",{"className":530,"code":531,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[533],{"type":473,"tag":534,"props":535,"children":536},"code",{"__ignoreMap":466},[537,548],{"type":473,"tag":538,"props":539,"children":542},"span",{"class":540,"line":541},"line",1,[543],{"type":473,"tag":538,"props":544,"children":545},{},[546],{"type":478,"value":547},"输入：nums = [1,2,3]\n",{"type":473,"tag":538,"props":549,"children":551},{"class":540,"line":550},2,[552],{"type":473,"tag":538,"props":553,"children":554},{},[555],{"type":478,"value":556},"输出：[1,3,2]\n",{"type":473,"tag":474,"props":558,"children":559},{},[560],{"type":478,"value":561},"示例 2：",{"type":473,"tag":528,"props":563,"children":565},{"className":530,"code":564,"language":478,"meta":466,"style":466},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[566],{"type":473,"tag":534,"props":567,"children":568},{"__ignoreMap":466},[569,577],{"type":473,"tag":538,"props":570,"children":571},{"class":540,"line":541},[572],{"type":473,"tag":538,"props":573,"children":574},{},[575],{"type":478,"value":576},"输入：nums = [3,2,1]\n",{"type":473,"tag":538,"props":578,"children":579},{"class":540,"line":550},[580],{"type":473,"tag":538,"props":581,"children":582},{},[583],{"type":478,"value":584},"输出：[1,2,3]\n",{"type":473,"tag":474,"props":586,"children":587},{},[588],{"type":478,"value":589},"示例 3：",{"type":473,"tag":528,"props":591,"children":593},{"className":530,"code":592,"language":478,"meta":466,"style":466},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[594],{"type":473,"tag":534,"props":595,"children":596},{"__ignoreMap":466},[597,605],{"type":473,"tag":538,"props":598,"children":599},{"class":540,"line":541},[600],{"type":473,"tag":538,"props":601,"children":602},{},[603],{"type":478,"value":604},"输入：nums = [1,1,5]\n",{"type":473,"tag":538,"props":606,"children":607},{"class":540,"line":550},[608],{"type":473,"tag":538,"props":609,"children":610},{},[611],{"type":478,"value":612},"输出：[1,5,1]\n",{"type":473,"tag":474,"props":614,"children":615},{},[616],{"type":478,"value":617},"提示：",{"type":473,"tag":480,"props":619,"children":620},{},[621,626],{"type":473,"tag":484,"props":622,"children":623},{},[624],{"type":478,"value":625},"1 \u003C= nums.length \u003C= 100",{"type":473,"tag":484,"props":627,"children":628},{},[629],{"type":478,"value":630},"0 \u003C= nums[i] \u003C= 100",{"type":473,"tag":632,"props":633,"children":635},"h2",{"id":634},"解题思路",[636],{"type":478,"value":634},{"type":473,"tag":632,"props":638,"children":640},{"id":639},"实现",[641],{"type":478,"value":639},{"type":473,"tag":643,"props":644,"children":646},"h3",{"id":645},"双指针",[647],{"type":478,"value":645},{"type":473,"tag":528,"props":649,"children":653},{"className":650,"code":651,"language":652,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[654],{"type":473,"tag":534,"props":655,"children":656},{"__ignoreMap":466},[657,666,692,715,724,768,777,829,913,931,940,949,978,1020,1086,1103,1112,1121,1220,1228,1237,1270,1311,1341,1434,1452,1469,1477],{"type":473,"tag":538,"props":658,"children":659},{"class":540,"line":541},[660],{"type":473,"tag":538,"props":661,"children":663},{"style":662},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[664],{"type":478,"value":665},"/**\n",{"type":473,"tag":538,"props":667,"children":668},{"class":540,"line":550},[669,674,680,686],{"type":473,"tag":538,"props":670,"children":671},{"style":662},[672],{"type":478,"value":673}," * ",{"type":473,"tag":538,"props":675,"children":677},{"style":676},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[678],{"type":478,"value":679},"@param",{"type":473,"tag":538,"props":681,"children":683},{"style":682},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[684],{"type":478,"value":685}," {number[]}",{"type":473,"tag":538,"props":687,"children":689},{"style":688},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[690],{"type":478,"value":691}," nums\n",{"type":473,"tag":538,"props":693,"children":695},{"class":540,"line":694},3,[696,700,705,710],{"type":473,"tag":538,"props":697,"children":698},{"style":662},[699],{"type":478,"value":673},{"type":473,"tag":538,"props":701,"children":702},{"style":676},[703],{"type":478,"value":704},"@return",{"type":473,"tag":538,"props":706,"children":707},{"style":682},[708],{"type":478,"value":709}," {void}",{"type":473,"tag":538,"props":711,"children":712},{"style":662},[713],{"type":478,"value":714}," Do not return anything, modify nums in-place instead.\n",{"type":473,"tag":538,"props":716,"children":718},{"class":540,"line":717},4,[719],{"type":473,"tag":538,"props":720,"children":721},{"style":662},[722],{"type":478,"value":723}," */\n",{"type":473,"tag":538,"props":725,"children":727},{"class":540,"line":726},5,[728,734,740,746,751,757,763],{"type":473,"tag":538,"props":729,"children":731},{"style":730},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[732],{"type":478,"value":733},"var",{"type":473,"tag":538,"props":735,"children":737},{"style":736},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[738],{"type":478,"value":739}," nextPermutation",{"type":473,"tag":538,"props":741,"children":743},{"style":742},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[744],{"type":478,"value":745}," =",{"type":473,"tag":538,"props":747,"children":748},{"style":730},[749],{"type":478,"value":750}," function",{"type":473,"tag":538,"props":752,"children":754},{"style":753},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[755],{"type":478,"value":756}," (",{"type":473,"tag":538,"props":758,"children":760},{"style":759},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[761],{"type":478,"value":762},"nums",{"type":473,"tag":538,"props":764,"children":765},{"style":753},[766],{"type":478,"value":767},") {\n",{"type":473,"tag":538,"props":769,"children":771},{"class":540,"line":770},6,[772],{"type":473,"tag":538,"props":773,"children":774},{"style":662},[775],{"type":478,"value":776},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":473,"tag":538,"props":778,"children":780},{"class":540,"line":779},7,[781,786,792,796,801,807,812,817,823],{"type":473,"tag":538,"props":782,"children":783},{"style":730},[784],{"type":478,"value":785},"  let",{"type":473,"tag":538,"props":787,"children":789},{"style":788},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[790],{"type":478,"value":791}," i",{"type":473,"tag":538,"props":793,"children":794},{"style":742},[795],{"type":478,"value":745},{"type":473,"tag":538,"props":797,"children":798},{"style":788},[799],{"type":478,"value":800}," nums",{"type":473,"tag":538,"props":802,"children":804},{"style":803},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[805],{"type":478,"value":806},".",{"type":473,"tag":538,"props":808,"children":809},{"style":753},[810],{"type":478,"value":811},"length ",{"type":473,"tag":538,"props":813,"children":814},{"style":742},[815],{"type":478,"value":816},"-",{"type":473,"tag":538,"props":818,"children":820},{"style":819},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[821],{"type":478,"value":822}," 2",{"type":473,"tag":538,"props":824,"children":826},{"style":825},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[827],{"type":478,"value":828},";\n",{"type":473,"tag":538,"props":830,"children":832},{"class":540,"line":831},8,[833,839,843,848,853,858,863,867,872,876,881,886,890,894,898,903,908],{"type":473,"tag":538,"props":834,"children":836},{"style":835},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[837],{"type":478,"value":838},"  while",{"type":473,"tag":538,"props":840,"children":841},{"style":753},[842],{"type":478,"value":756},{"type":473,"tag":538,"props":844,"children":845},{"style":788},[846],{"type":478,"value":847},"i",{"type":473,"tag":538,"props":849,"children":850},{"style":742},[851],{"type":478,"value":852}," >=",{"type":473,"tag":538,"props":854,"children":855},{"style":819},[856],{"type":478,"value":857}," 0",{"type":473,"tag":538,"props":859,"children":860},{"style":742},[861],{"type":478,"value":862}," &&",{"type":473,"tag":538,"props":864,"children":865},{"style":788},[866],{"type":478,"value":800},{"type":473,"tag":538,"props":868,"children":869},{"style":753},[870],{"type":478,"value":871},"[",{"type":473,"tag":538,"props":873,"children":874},{"style":788},[875],{"type":478,"value":847},{"type":473,"tag":538,"props":877,"children":878},{"style":753},[879],{"type":478,"value":880},"] ",{"type":473,"tag":538,"props":882,"children":883},{"style":742},[884],{"type":478,"value":885},">=",{"type":473,"tag":538,"props":887,"children":888},{"style":788},[889],{"type":478,"value":800},{"type":473,"tag":538,"props":891,"children":892},{"style":753},[893],{"type":478,"value":871},{"type":473,"tag":538,"props":895,"children":896},{"style":788},[897],{"type":478,"value":847},{"type":473,"tag":538,"props":899,"children":900},{"style":742},[901],{"type":478,"value":902}," +",{"type":473,"tag":538,"props":904,"children":905},{"style":819},[906],{"type":478,"value":907}," 1",{"type":473,"tag":538,"props":909,"children":910},{"style":753},[911],{"type":478,"value":912},"]) {\n",{"type":473,"tag":538,"props":914,"children":916},{"class":540,"line":915},9,[917,922,927],{"type":473,"tag":538,"props":918,"children":919},{"style":788},[920],{"type":478,"value":921},"    i",{"type":473,"tag":538,"props":923,"children":924},{"style":742},[925],{"type":478,"value":926},"--",{"type":473,"tag":538,"props":928,"children":929},{"style":825},[930],{"type":478,"value":828},{"type":473,"tag":538,"props":932,"children":934},{"class":540,"line":933},10,[935],{"type":473,"tag":538,"props":936,"children":937},{"style":753},[938],{"type":478,"value":939},"  }\n",{"type":473,"tag":538,"props":941,"children":943},{"class":540,"line":942},11,[944],{"type":473,"tag":538,"props":945,"children":946},{"style":662},[947],{"type":478,"value":948},"  // i 在数组中存在，进行交换\n",{"type":473,"tag":538,"props":950,"children":952},{"class":540,"line":951},12,[953,958,962,966,970,974],{"type":473,"tag":538,"props":954,"children":955},{"style":835},[956],{"type":478,"value":957},"  if",{"type":473,"tag":538,"props":959,"children":960},{"style":753},[961],{"type":478,"value":756},{"type":473,"tag":538,"props":963,"children":964},{"style":788},[965],{"type":478,"value":847},{"type":473,"tag":538,"props":967,"children":968},{"style":742},[969],{"type":478,"value":852},{"type":473,"tag":538,"props":971,"children":972},{"style":819},[973],{"type":478,"value":857},{"type":473,"tag":538,"props":975,"children":976},{"style":753},[977],{"type":478,"value":767},{"type":473,"tag":538,"props":979,"children":981},{"class":540,"line":980},13,[982,987,992,996,1000,1004,1008,1012,1016],{"type":473,"tag":538,"props":983,"children":984},{"style":730},[985],{"type":478,"value":986},"    let",{"type":473,"tag":538,"props":988,"children":989},{"style":788},[990],{"type":478,"value":991}," j",{"type":473,"tag":538,"props":993,"children":994},{"style":742},[995],{"type":478,"value":745},{"type":473,"tag":538,"props":997,"children":998},{"style":788},[999],{"type":478,"value":800},{"type":473,"tag":538,"props":1001,"children":1002},{"style":803},[1003],{"type":478,"value":806},{"type":473,"tag":538,"props":1005,"children":1006},{"style":753},[1007],{"type":478,"value":811},{"type":473,"tag":538,"props":1009,"children":1010},{"style":742},[1011],{"type":478,"value":816},{"type":473,"tag":538,"props":1013,"children":1014},{"style":819},[1015],{"type":478,"value":907},{"type":473,"tag":538,"props":1017,"children":1018},{"style":825},[1019],{"type":478,"value":828},{"type":473,"tag":538,"props":1021,"children":1023},{"class":540,"line":1022},14,[1024,1029,1033,1038,1042,1046,1050,1054,1058,1062,1066,1070,1074,1078,1082],{"type":473,"tag":538,"props":1025,"children":1026},{"style":835},[1027],{"type":478,"value":1028},"    while",{"type":473,"tag":538,"props":1030,"children":1031},{"style":753},[1032],{"type":478,"value":756},{"type":473,"tag":538,"props":1034,"children":1035},{"style":788},[1036],{"type":478,"value":1037},"j",{"type":473,"tag":538,"props":1039,"children":1040},{"style":742},[1041],{"type":478,"value":852},{"type":473,"tag":538,"props":1043,"children":1044},{"style":819},[1045],{"type":478,"value":857},{"type":473,"tag":538,"props":1047,"children":1048},{"style":742},[1049],{"type":478,"value":862},{"type":473,"tag":538,"props":1051,"children":1052},{"style":788},[1053],{"type":478,"value":800},{"type":473,"tag":538,"props":1055,"children":1056},{"style":753},[1057],{"type":478,"value":871},{"type":473,"tag":538,"props":1059,"children":1060},{"style":788},[1061],{"type":478,"value":847},{"type":473,"tag":538,"props":1063,"children":1064},{"style":753},[1065],{"type":478,"value":880},{"type":473,"tag":538,"props":1067,"children":1068},{"style":742},[1069],{"type":478,"value":885},{"type":473,"tag":538,"props":1071,"children":1072},{"style":788},[1073],{"type":478,"value":800},{"type":473,"tag":538,"props":1075,"children":1076},{"style":753},[1077],{"type":478,"value":871},{"type":473,"tag":538,"props":1079,"children":1080},{"style":788},[1081],{"type":478,"value":1037},{"type":473,"tag":538,"props":1083,"children":1084},{"style":753},[1085],{"type":478,"value":912},{"type":473,"tag":538,"props":1087,"children":1089},{"class":540,"line":1088},15,[1090,1095,1099],{"type":473,"tag":538,"props":1091,"children":1092},{"style":788},[1093],{"type":478,"value":1094},"      j",{"type":473,"tag":538,"props":1096,"children":1097},{"style":742},[1098],{"type":478,"value":926},{"type":473,"tag":538,"props":1100,"children":1101},{"style":825},[1102],{"type":478,"value":828},{"type":473,"tag":538,"props":1104,"children":1106},{"class":540,"line":1105},16,[1107],{"type":473,"tag":538,"props":1108,"children":1109},{"style":753},[1110],{"type":478,"value":1111},"    }\n",{"type":473,"tag":538,"props":1113,"children":1115},{"class":540,"line":1114},17,[1116],{"type":473,"tag":538,"props":1117,"children":1118},{"style":662},[1119],{"type":478,"value":1120},"    // 交换\n",{"type":473,"tag":538,"props":1122,"children":1124},{"class":540,"line":1123},18,[1125,1130,1134,1138,1142,1147,1152,1156,1160,1164,1169,1174,1179,1183,1187,1191,1195,1199,1203,1207,1211,1216],{"type":473,"tag":538,"props":1126,"children":1127},{"style":753},[1128],{"type":478,"value":1129},"    [",{"type":473,"tag":538,"props":1131,"children":1132},{"style":788},[1133],{"type":478,"value":762},{"type":473,"tag":538,"props":1135,"children":1136},{"style":753},[1137],{"type":478,"value":871},{"type":473,"tag":538,"props":1139,"children":1140},{"style":788},[1141],{"type":478,"value":847},{"type":473,"tag":538,"props":1143,"children":1144},{"style":753},[1145],{"type":478,"value":1146},"]",{"type":473,"tag":538,"props":1148,"children":1149},{"style":825},[1150],{"type":478,"value":1151},",",{"type":473,"tag":538,"props":1153,"children":1154},{"style":788},[1155],{"type":478,"value":800},{"type":473,"tag":538,"props":1157,"children":1158},{"style":753},[1159],{"type":478,"value":871},{"type":473,"tag":538,"props":1161,"children":1162},{"style":788},[1163],{"type":478,"value":1037},{"type":473,"tag":538,"props":1165,"children":1166},{"style":753},[1167],{"type":478,"value":1168},"]] ",{"type":473,"tag":538,"props":1170,"children":1171},{"style":742},[1172],{"type":478,"value":1173},"=",{"type":473,"tag":538,"props":1175,"children":1176},{"style":753},[1177],{"type":478,"value":1178}," [",{"type":473,"tag":538,"props":1180,"children":1181},{"style":788},[1182],{"type":478,"value":762},{"type":473,"tag":538,"props":1184,"children":1185},{"style":753},[1186],{"type":478,"value":871},{"type":473,"tag":538,"props":1188,"children":1189},{"style":788},[1190],{"type":478,"value":1037},{"type":473,"tag":538,"props":1192,"children":1193},{"style":753},[1194],{"type":478,"value":1146},{"type":473,"tag":538,"props":1196,"children":1197},{"style":825},[1198],{"type":478,"value":1151},{"type":473,"tag":538,"props":1200,"children":1201},{"style":788},[1202],{"type":478,"value":800},{"type":473,"tag":538,"props":1204,"children":1205},{"style":753},[1206],{"type":478,"value":871},{"type":473,"tag":538,"props":1208,"children":1209},{"style":788},[1210],{"type":478,"value":847},{"type":473,"tag":538,"props":1212,"children":1213},{"style":753},[1214],{"type":478,"value":1215},"]]",{"type":473,"tag":538,"props":1217,"children":1218},{"style":825},[1219],{"type":478,"value":828},{"type":473,"tag":538,"props":1221,"children":1223},{"class":540,"line":1222},19,[1224],{"type":473,"tag":538,"props":1225,"children":1226},{"style":753},[1227],{"type":478,"value":939},{"type":473,"tag":538,"props":1229,"children":1231},{"class":540,"line":1230},20,[1232],{"type":473,"tag":538,"props":1233,"children":1234},{"style":662},[1235],{"type":478,"value":1236},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":473,"tag":538,"props":1238,"children":1240},{"class":540,"line":1239},21,[1241,1245,1250,1254,1258,1262,1266],{"type":473,"tag":538,"props":1242,"children":1243},{"style":730},[1244],{"type":478,"value":785},{"type":473,"tag":538,"props":1246,"children":1247},{"style":788},[1248],{"type":478,"value":1249}," l",{"type":473,"tag":538,"props":1251,"children":1252},{"style":742},[1253],{"type":478,"value":745},{"type":473,"tag":538,"props":1255,"children":1256},{"style":788},[1257],{"type":478,"value":791},{"type":473,"tag":538,"props":1259,"children":1260},{"style":742},[1261],{"type":478,"value":902},{"type":473,"tag":538,"props":1263,"children":1264},{"style":819},[1265],{"type":478,"value":907},{"type":473,"tag":538,"props":1267,"children":1268},{"style":825},[1269],{"type":478,"value":828},{"type":473,"tag":538,"props":1271,"children":1273},{"class":540,"line":1272},22,[1274,1278,1283,1287,1291,1295,1299,1303,1307],{"type":473,"tag":538,"props":1275,"children":1276},{"style":730},[1277],{"type":478,"value":785},{"type":473,"tag":538,"props":1279,"children":1280},{"style":788},[1281],{"type":478,"value":1282}," r",{"type":473,"tag":538,"props":1284,"children":1285},{"style":742},[1286],{"type":478,"value":745},{"type":473,"tag":538,"props":1288,"children":1289},{"style":788},[1290],{"type":478,"value":800},{"type":473,"tag":538,"props":1292,"children":1293},{"style":803},[1294],{"type":478,"value":806},{"type":473,"tag":538,"props":1296,"children":1297},{"style":753},[1298],{"type":478,"value":811},{"type":473,"tag":538,"props":1300,"children":1301},{"style":742},[1302],{"type":478,"value":816},{"type":473,"tag":538,"props":1304,"children":1305},{"style":819},[1306],{"type":478,"value":907},{"type":473,"tag":538,"props":1308,"children":1309},{"style":825},[1310],{"type":478,"value":828},{"type":473,"tag":538,"props":1312,"children":1314},{"class":540,"line":1313},23,[1315,1319,1323,1328,1333,1337],{"type":473,"tag":538,"props":1316,"children":1317},{"style":835},[1318],{"type":478,"value":838},{"type":473,"tag":538,"props":1320,"children":1321},{"style":753},[1322],{"type":478,"value":756},{"type":473,"tag":538,"props":1324,"children":1325},{"style":788},[1326],{"type":478,"value":1327},"l",{"type":473,"tag":538,"props":1329,"children":1330},{"style":742},[1331],{"type":478,"value":1332}," \u003C",{"type":473,"tag":538,"props":1334,"children":1335},{"style":788},[1336],{"type":478,"value":1282},{"type":473,"tag":538,"props":1338,"children":1339},{"style":753},[1340],{"type":478,"value":767},{"type":473,"tag":538,"props":1342,"children":1344},{"class":540,"line":1343},24,[1345,1349,1353,1357,1361,1365,1369,1373,1377,1382,1386,1390,1394,1398,1402,1406,1410,1414,1418,1422,1426,1430],{"type":473,"tag":538,"props":1346,"children":1347},{"style":753},[1348],{"type":478,"value":1129},{"type":473,"tag":538,"props":1350,"children":1351},{"style":788},[1352],{"type":478,"value":762},{"type":473,"tag":538,"props":1354,"children":1355},{"style":753},[1356],{"type":478,"value":871},{"type":473,"tag":538,"props":1358,"children":1359},{"style":788},[1360],{"type":478,"value":1327},{"type":473,"tag":538,"props":1362,"children":1363},{"style":753},[1364],{"type":478,"value":1146},{"type":473,"tag":538,"props":1366,"children":1367},{"style":825},[1368],{"type":478,"value":1151},{"type":473,"tag":538,"props":1370,"children":1371},{"style":788},[1372],{"type":478,"value":800},{"type":473,"tag":538,"props":1374,"children":1375},{"style":753},[1376],{"type":478,"value":871},{"type":473,"tag":538,"props":1378,"children":1379},{"style":788},[1380],{"type":478,"value":1381},"r",{"type":473,"tag":538,"props":1383,"children":1384},{"style":753},[1385],{"type":478,"value":1168},{"type":473,"tag":538,"props":1387,"children":1388},{"style":742},[1389],{"type":478,"value":1173},{"type":473,"tag":538,"props":1391,"children":1392},{"style":753},[1393],{"type":478,"value":1178},{"type":473,"tag":538,"props":1395,"children":1396},{"style":788},[1397],{"type":478,"value":762},{"type":473,"tag":538,"props":1399,"children":1400},{"style":753},[1401],{"type":478,"value":871},{"type":473,"tag":538,"props":1403,"children":1404},{"style":788},[1405],{"type":478,"value":1381},{"type":473,"tag":538,"props":1407,"children":1408},{"style":753},[1409],{"type":478,"value":1146},{"type":473,"tag":538,"props":1411,"children":1412},{"style":825},[1413],{"type":478,"value":1151},{"type":473,"tag":538,"props":1415,"children":1416},{"style":788},[1417],{"type":478,"value":800},{"type":473,"tag":538,"props":1419,"children":1420},{"style":753},[1421],{"type":478,"value":871},{"type":473,"tag":538,"props":1423,"children":1424},{"style":788},[1425],{"type":478,"value":1327},{"type":473,"tag":538,"props":1427,"children":1428},{"style":753},[1429],{"type":478,"value":1215},{"type":473,"tag":538,"props":1431,"children":1432},{"style":825},[1433],{"type":478,"value":828},{"type":473,"tag":538,"props":1435,"children":1437},{"class":540,"line":1436},25,[1438,1443,1448],{"type":473,"tag":538,"props":1439,"children":1440},{"style":788},[1441],{"type":478,"value":1442},"    l",{"type":473,"tag":538,"props":1444,"children":1445},{"style":742},[1446],{"type":478,"value":1447},"++",{"type":473,"tag":538,"props":1449,"children":1450},{"style":825},[1451],{"type":478,"value":828},{"type":473,"tag":538,"props":1453,"children":1455},{"class":540,"line":1454},26,[1456,1461,1465],{"type":473,"tag":538,"props":1457,"children":1458},{"style":788},[1459],{"type":478,"value":1460},"    r",{"type":473,"tag":538,"props":1462,"children":1463},{"style":742},[1464],{"type":478,"value":926},{"type":473,"tag":538,"props":1466,"children":1467},{"style":825},[1468],{"type":478,"value":828},{"type":473,"tag":538,"props":1470,"children":1472},{"class":540,"line":1471},27,[1473],{"type":473,"tag":538,"props":1474,"children":1475},{"style":753},[1476],{"type":478,"value":939},{"type":473,"tag":538,"props":1478,"children":1480},{"class":540,"line":1479},28,[1481,1486],{"type":473,"tag":538,"props":1482,"children":1483},{"style":753},[1484],{"type":478,"value":1485},"}",{"type":473,"tag":538,"props":1487,"children":1488},{"style":825},[1489],{"type":478,"value":828},{"type":473,"tag":1491,"props":1492,"children":1493},"style",{},[1494],{"type":478,"value":1495},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":726,"depth":726,"links":1497},[1498,1499],{"id":634,"depth":550,"text":634},{"id":639,"depth":550,"text":639,"children":1500},[1501],{"id":645,"depth":694,"text":645},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1508,1510],{"_path":99,"title":98,"description":1509},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":105,"title":104,"description":1511},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1713695845880]