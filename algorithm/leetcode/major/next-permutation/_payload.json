[{"data":1,"prerenderedAt":1506},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":457,"/algorithm/leetcode/major/next-permutation-surround":1501},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":96,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":95,"description":461,"url":462,"body":463,"_type":1496,"_id":1497,"_source":1498,"_file":1499,"_extension":1500},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":464,"children":465,"toc":1490},"root",[466,473,483,488,506,511,516,521,551,556,579,584,607,612,625,631,636,642,1484],{"type":467,"tag":468,"props":469,"children":470},"element","p",{},[471],{"type":472,"value":461},"text",{"type":467,"tag":474,"props":475,"children":476},"ul",{},[477],{"type":467,"tag":478,"props":479,"children":480},"li",{},[481],{"type":472,"value":482},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":467,"tag":468,"props":484,"children":485},{},[486],{"type":472,"value":487},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":467,"tag":474,"props":489,"children":490},{},[491,496,501],{"type":467,"tag":478,"props":492,"children":493},{},[494],{"type":472,"value":495},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":467,"tag":478,"props":497,"children":498},{},[499],{"type":472,"value":500},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":467,"tag":478,"props":502,"children":503},{},[504],{"type":472,"value":505},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":467,"tag":468,"props":507,"children":508},{},[509],{"type":472,"value":510},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":467,"tag":468,"props":512,"children":513},{},[514],{"type":472,"value":515},"必须 原地 修改，只允许使用额外常数空间。",{"type":467,"tag":468,"props":517,"children":518},{},[519],{"type":472,"value":520},"示例 1：",{"type":467,"tag":522,"props":523,"children":526},"pre",{"className":524,"code":525,"language":472,"meta":460,"style":460},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[527],{"type":467,"tag":528,"props":529,"children":530},"code",{"__ignoreMap":460},[531,542],{"type":467,"tag":532,"props":533,"children":536},"span",{"class":534,"line":535},"line",1,[537],{"type":467,"tag":532,"props":538,"children":539},{},[540],{"type":472,"value":541},"输入：nums = [1,2,3]\n",{"type":467,"tag":532,"props":543,"children":545},{"class":534,"line":544},2,[546],{"type":467,"tag":532,"props":547,"children":548},{},[549],{"type":472,"value":550},"输出：[1,3,2]\n",{"type":467,"tag":468,"props":552,"children":553},{},[554],{"type":472,"value":555},"示例 2：",{"type":467,"tag":522,"props":557,"children":559},{"className":524,"code":558,"language":472,"meta":460,"style":460},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[560],{"type":467,"tag":528,"props":561,"children":562},{"__ignoreMap":460},[563,571],{"type":467,"tag":532,"props":564,"children":565},{"class":534,"line":535},[566],{"type":467,"tag":532,"props":567,"children":568},{},[569],{"type":472,"value":570},"输入：nums = [3,2,1]\n",{"type":467,"tag":532,"props":572,"children":573},{"class":534,"line":544},[574],{"type":467,"tag":532,"props":575,"children":576},{},[577],{"type":472,"value":578},"输出：[1,2,3]\n",{"type":467,"tag":468,"props":580,"children":581},{},[582],{"type":472,"value":583},"示例 3：",{"type":467,"tag":522,"props":585,"children":587},{"className":524,"code":586,"language":472,"meta":460,"style":460},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[588],{"type":467,"tag":528,"props":589,"children":590},{"__ignoreMap":460},[591,599],{"type":467,"tag":532,"props":592,"children":593},{"class":534,"line":535},[594],{"type":467,"tag":532,"props":595,"children":596},{},[597],{"type":472,"value":598},"输入：nums = [1,1,5]\n",{"type":467,"tag":532,"props":600,"children":601},{"class":534,"line":544},[602],{"type":467,"tag":532,"props":603,"children":604},{},[605],{"type":472,"value":606},"输出：[1,5,1]\n",{"type":467,"tag":468,"props":608,"children":609},{},[610],{"type":472,"value":611},"提示：",{"type":467,"tag":474,"props":613,"children":614},{},[615,620],{"type":467,"tag":478,"props":616,"children":617},{},[618],{"type":472,"value":619},"1 \u003C= nums.length \u003C= 100",{"type":467,"tag":478,"props":621,"children":622},{},[623],{"type":472,"value":624},"0 \u003C= nums[i] \u003C= 100",{"type":467,"tag":626,"props":627,"children":629},"h2",{"id":628},"解题思路",[630],{"type":472,"value":628},{"type":467,"tag":626,"props":632,"children":634},{"id":633},"实现",[635],{"type":472,"value":633},{"type":467,"tag":637,"props":638,"children":640},"h3",{"id":639},"双指针",[641],{"type":472,"value":639},{"type":467,"tag":522,"props":643,"children":647},{"className":644,"code":645,"language":646,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[648],{"type":467,"tag":528,"props":649,"children":650},{"__ignoreMap":460},[651,660,686,709,718,762,771,823,907,925,934,943,972,1014,1080,1097,1106,1115,1214,1222,1231,1264,1305,1335,1428,1446,1463,1471],{"type":467,"tag":532,"props":652,"children":653},{"class":534,"line":535},[654],{"type":467,"tag":532,"props":655,"children":657},{"style":656},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[658],{"type":472,"value":659},"/**\n",{"type":467,"tag":532,"props":661,"children":662},{"class":534,"line":544},[663,668,674,680],{"type":467,"tag":532,"props":664,"children":665},{"style":656},[666],{"type":472,"value":667}," * ",{"type":467,"tag":532,"props":669,"children":671},{"style":670},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[672],{"type":472,"value":673},"@param",{"type":467,"tag":532,"props":675,"children":677},{"style":676},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[678],{"type":472,"value":679}," {number[]}",{"type":467,"tag":532,"props":681,"children":683},{"style":682},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[684],{"type":472,"value":685}," nums\n",{"type":467,"tag":532,"props":687,"children":689},{"class":534,"line":688},3,[690,694,699,704],{"type":467,"tag":532,"props":691,"children":692},{"style":656},[693],{"type":472,"value":667},{"type":467,"tag":532,"props":695,"children":696},{"style":670},[697],{"type":472,"value":698},"@return",{"type":467,"tag":532,"props":700,"children":701},{"style":676},[702],{"type":472,"value":703}," {void}",{"type":467,"tag":532,"props":705,"children":706},{"style":656},[707],{"type":472,"value":708}," Do not return anything, modify nums in-place instead.\n",{"type":467,"tag":532,"props":710,"children":712},{"class":534,"line":711},4,[713],{"type":467,"tag":532,"props":714,"children":715},{"style":656},[716],{"type":472,"value":717}," */\n",{"type":467,"tag":532,"props":719,"children":721},{"class":534,"line":720},5,[722,728,734,740,745,751,757],{"type":467,"tag":532,"props":723,"children":725},{"style":724},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[726],{"type":472,"value":727},"var",{"type":467,"tag":532,"props":729,"children":731},{"style":730},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[732],{"type":472,"value":733}," nextPermutation",{"type":467,"tag":532,"props":735,"children":737},{"style":736},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[738],{"type":472,"value":739}," =",{"type":467,"tag":532,"props":741,"children":742},{"style":724},[743],{"type":472,"value":744}," function",{"type":467,"tag":532,"props":746,"children":748},{"style":747},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[749],{"type":472,"value":750}," (",{"type":467,"tag":532,"props":752,"children":754},{"style":753},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[755],{"type":472,"value":756},"nums",{"type":467,"tag":532,"props":758,"children":759},{"style":747},[760],{"type":472,"value":761},") {\n",{"type":467,"tag":532,"props":763,"children":765},{"class":534,"line":764},6,[766],{"type":467,"tag":532,"props":767,"children":768},{"style":656},[769],{"type":472,"value":770},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":467,"tag":532,"props":772,"children":774},{"class":534,"line":773},7,[775,780,786,790,795,801,806,811,817],{"type":467,"tag":532,"props":776,"children":777},{"style":724},[778],{"type":472,"value":779},"  let",{"type":467,"tag":532,"props":781,"children":783},{"style":782},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[784],{"type":472,"value":785}," i",{"type":467,"tag":532,"props":787,"children":788},{"style":736},[789],{"type":472,"value":739},{"type":467,"tag":532,"props":791,"children":792},{"style":782},[793],{"type":472,"value":794}," nums",{"type":467,"tag":532,"props":796,"children":798},{"style":797},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[799],{"type":472,"value":800},".",{"type":467,"tag":532,"props":802,"children":803},{"style":747},[804],{"type":472,"value":805},"length ",{"type":467,"tag":532,"props":807,"children":808},{"style":736},[809],{"type":472,"value":810},"-",{"type":467,"tag":532,"props":812,"children":814},{"style":813},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[815],{"type":472,"value":816}," 2",{"type":467,"tag":532,"props":818,"children":820},{"style":819},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[821],{"type":472,"value":822},";\n",{"type":467,"tag":532,"props":824,"children":826},{"class":534,"line":825},8,[827,833,837,842,847,852,857,861,866,870,875,880,884,888,892,897,902],{"type":467,"tag":532,"props":828,"children":830},{"style":829},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[831],{"type":472,"value":832},"  while",{"type":467,"tag":532,"props":834,"children":835},{"style":747},[836],{"type":472,"value":750},{"type":467,"tag":532,"props":838,"children":839},{"style":782},[840],{"type":472,"value":841},"i",{"type":467,"tag":532,"props":843,"children":844},{"style":736},[845],{"type":472,"value":846}," >=",{"type":467,"tag":532,"props":848,"children":849},{"style":813},[850],{"type":472,"value":851}," 0",{"type":467,"tag":532,"props":853,"children":854},{"style":736},[855],{"type":472,"value":856}," &&",{"type":467,"tag":532,"props":858,"children":859},{"style":782},[860],{"type":472,"value":794},{"type":467,"tag":532,"props":862,"children":863},{"style":747},[864],{"type":472,"value":865},"[",{"type":467,"tag":532,"props":867,"children":868},{"style":782},[869],{"type":472,"value":841},{"type":467,"tag":532,"props":871,"children":872},{"style":747},[873],{"type":472,"value":874},"] ",{"type":467,"tag":532,"props":876,"children":877},{"style":736},[878],{"type":472,"value":879},">=",{"type":467,"tag":532,"props":881,"children":882},{"style":782},[883],{"type":472,"value":794},{"type":467,"tag":532,"props":885,"children":886},{"style":747},[887],{"type":472,"value":865},{"type":467,"tag":532,"props":889,"children":890},{"style":782},[891],{"type":472,"value":841},{"type":467,"tag":532,"props":893,"children":894},{"style":736},[895],{"type":472,"value":896}," +",{"type":467,"tag":532,"props":898,"children":899},{"style":813},[900],{"type":472,"value":901}," 1",{"type":467,"tag":532,"props":903,"children":904},{"style":747},[905],{"type":472,"value":906},"]) {\n",{"type":467,"tag":532,"props":908,"children":910},{"class":534,"line":909},9,[911,916,921],{"type":467,"tag":532,"props":912,"children":913},{"style":782},[914],{"type":472,"value":915},"    i",{"type":467,"tag":532,"props":917,"children":918},{"style":736},[919],{"type":472,"value":920},"--",{"type":467,"tag":532,"props":922,"children":923},{"style":819},[924],{"type":472,"value":822},{"type":467,"tag":532,"props":926,"children":928},{"class":534,"line":927},10,[929],{"type":467,"tag":532,"props":930,"children":931},{"style":747},[932],{"type":472,"value":933},"  }\n",{"type":467,"tag":532,"props":935,"children":937},{"class":534,"line":936},11,[938],{"type":467,"tag":532,"props":939,"children":940},{"style":656},[941],{"type":472,"value":942},"  // i 在数组中存在，进行交换\n",{"type":467,"tag":532,"props":944,"children":946},{"class":534,"line":945},12,[947,952,956,960,964,968],{"type":467,"tag":532,"props":948,"children":949},{"style":829},[950],{"type":472,"value":951},"  if",{"type":467,"tag":532,"props":953,"children":954},{"style":747},[955],{"type":472,"value":750},{"type":467,"tag":532,"props":957,"children":958},{"style":782},[959],{"type":472,"value":841},{"type":467,"tag":532,"props":961,"children":962},{"style":736},[963],{"type":472,"value":846},{"type":467,"tag":532,"props":965,"children":966},{"style":813},[967],{"type":472,"value":851},{"type":467,"tag":532,"props":969,"children":970},{"style":747},[971],{"type":472,"value":761},{"type":467,"tag":532,"props":973,"children":975},{"class":534,"line":974},13,[976,981,986,990,994,998,1002,1006,1010],{"type":467,"tag":532,"props":977,"children":978},{"style":724},[979],{"type":472,"value":980},"    let",{"type":467,"tag":532,"props":982,"children":983},{"style":782},[984],{"type":472,"value":985}," j",{"type":467,"tag":532,"props":987,"children":988},{"style":736},[989],{"type":472,"value":739},{"type":467,"tag":532,"props":991,"children":992},{"style":782},[993],{"type":472,"value":794},{"type":467,"tag":532,"props":995,"children":996},{"style":797},[997],{"type":472,"value":800},{"type":467,"tag":532,"props":999,"children":1000},{"style":747},[1001],{"type":472,"value":805},{"type":467,"tag":532,"props":1003,"children":1004},{"style":736},[1005],{"type":472,"value":810},{"type":467,"tag":532,"props":1007,"children":1008},{"style":813},[1009],{"type":472,"value":901},{"type":467,"tag":532,"props":1011,"children":1012},{"style":819},[1013],{"type":472,"value":822},{"type":467,"tag":532,"props":1015,"children":1017},{"class":534,"line":1016},14,[1018,1023,1027,1032,1036,1040,1044,1048,1052,1056,1060,1064,1068,1072,1076],{"type":467,"tag":532,"props":1019,"children":1020},{"style":829},[1021],{"type":472,"value":1022},"    while",{"type":467,"tag":532,"props":1024,"children":1025},{"style":747},[1026],{"type":472,"value":750},{"type":467,"tag":532,"props":1028,"children":1029},{"style":782},[1030],{"type":472,"value":1031},"j",{"type":467,"tag":532,"props":1033,"children":1034},{"style":736},[1035],{"type":472,"value":846},{"type":467,"tag":532,"props":1037,"children":1038},{"style":813},[1039],{"type":472,"value":851},{"type":467,"tag":532,"props":1041,"children":1042},{"style":736},[1043],{"type":472,"value":856},{"type":467,"tag":532,"props":1045,"children":1046},{"style":782},[1047],{"type":472,"value":794},{"type":467,"tag":532,"props":1049,"children":1050},{"style":747},[1051],{"type":472,"value":865},{"type":467,"tag":532,"props":1053,"children":1054},{"style":782},[1055],{"type":472,"value":841},{"type":467,"tag":532,"props":1057,"children":1058},{"style":747},[1059],{"type":472,"value":874},{"type":467,"tag":532,"props":1061,"children":1062},{"style":736},[1063],{"type":472,"value":879},{"type":467,"tag":532,"props":1065,"children":1066},{"style":782},[1067],{"type":472,"value":794},{"type":467,"tag":532,"props":1069,"children":1070},{"style":747},[1071],{"type":472,"value":865},{"type":467,"tag":532,"props":1073,"children":1074},{"style":782},[1075],{"type":472,"value":1031},{"type":467,"tag":532,"props":1077,"children":1078},{"style":747},[1079],{"type":472,"value":906},{"type":467,"tag":532,"props":1081,"children":1083},{"class":534,"line":1082},15,[1084,1089,1093],{"type":467,"tag":532,"props":1085,"children":1086},{"style":782},[1087],{"type":472,"value":1088},"      j",{"type":467,"tag":532,"props":1090,"children":1091},{"style":736},[1092],{"type":472,"value":920},{"type":467,"tag":532,"props":1094,"children":1095},{"style":819},[1096],{"type":472,"value":822},{"type":467,"tag":532,"props":1098,"children":1100},{"class":534,"line":1099},16,[1101],{"type":467,"tag":532,"props":1102,"children":1103},{"style":747},[1104],{"type":472,"value":1105},"    }\n",{"type":467,"tag":532,"props":1107,"children":1109},{"class":534,"line":1108},17,[1110],{"type":467,"tag":532,"props":1111,"children":1112},{"style":656},[1113],{"type":472,"value":1114},"    // 交换\n",{"type":467,"tag":532,"props":1116,"children":1118},{"class":534,"line":1117},18,[1119,1124,1128,1132,1136,1141,1146,1150,1154,1158,1163,1168,1173,1177,1181,1185,1189,1193,1197,1201,1205,1210],{"type":467,"tag":532,"props":1120,"children":1121},{"style":747},[1122],{"type":472,"value":1123},"    [",{"type":467,"tag":532,"props":1125,"children":1126},{"style":782},[1127],{"type":472,"value":756},{"type":467,"tag":532,"props":1129,"children":1130},{"style":747},[1131],{"type":472,"value":865},{"type":467,"tag":532,"props":1133,"children":1134},{"style":782},[1135],{"type":472,"value":841},{"type":467,"tag":532,"props":1137,"children":1138},{"style":747},[1139],{"type":472,"value":1140},"]",{"type":467,"tag":532,"props":1142,"children":1143},{"style":819},[1144],{"type":472,"value":1145},",",{"type":467,"tag":532,"props":1147,"children":1148},{"style":782},[1149],{"type":472,"value":794},{"type":467,"tag":532,"props":1151,"children":1152},{"style":747},[1153],{"type":472,"value":865},{"type":467,"tag":532,"props":1155,"children":1156},{"style":782},[1157],{"type":472,"value":1031},{"type":467,"tag":532,"props":1159,"children":1160},{"style":747},[1161],{"type":472,"value":1162},"]] ",{"type":467,"tag":532,"props":1164,"children":1165},{"style":736},[1166],{"type":472,"value":1167},"=",{"type":467,"tag":532,"props":1169,"children":1170},{"style":747},[1171],{"type":472,"value":1172}," [",{"type":467,"tag":532,"props":1174,"children":1175},{"style":782},[1176],{"type":472,"value":756},{"type":467,"tag":532,"props":1178,"children":1179},{"style":747},[1180],{"type":472,"value":865},{"type":467,"tag":532,"props":1182,"children":1183},{"style":782},[1184],{"type":472,"value":1031},{"type":467,"tag":532,"props":1186,"children":1187},{"style":747},[1188],{"type":472,"value":1140},{"type":467,"tag":532,"props":1190,"children":1191},{"style":819},[1192],{"type":472,"value":1145},{"type":467,"tag":532,"props":1194,"children":1195},{"style":782},[1196],{"type":472,"value":794},{"type":467,"tag":532,"props":1198,"children":1199},{"style":747},[1200],{"type":472,"value":865},{"type":467,"tag":532,"props":1202,"children":1203},{"style":782},[1204],{"type":472,"value":841},{"type":467,"tag":532,"props":1206,"children":1207},{"style":747},[1208],{"type":472,"value":1209},"]]",{"type":467,"tag":532,"props":1211,"children":1212},{"style":819},[1213],{"type":472,"value":822},{"type":467,"tag":532,"props":1215,"children":1217},{"class":534,"line":1216},19,[1218],{"type":467,"tag":532,"props":1219,"children":1220},{"style":747},[1221],{"type":472,"value":933},{"type":467,"tag":532,"props":1223,"children":1225},{"class":534,"line":1224},20,[1226],{"type":467,"tag":532,"props":1227,"children":1228},{"style":656},[1229],{"type":472,"value":1230},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":467,"tag":532,"props":1232,"children":1234},{"class":534,"line":1233},21,[1235,1239,1244,1248,1252,1256,1260],{"type":467,"tag":532,"props":1236,"children":1237},{"style":724},[1238],{"type":472,"value":779},{"type":467,"tag":532,"props":1240,"children":1241},{"style":782},[1242],{"type":472,"value":1243}," l",{"type":467,"tag":532,"props":1245,"children":1246},{"style":736},[1247],{"type":472,"value":739},{"type":467,"tag":532,"props":1249,"children":1250},{"style":782},[1251],{"type":472,"value":785},{"type":467,"tag":532,"props":1253,"children":1254},{"style":736},[1255],{"type":472,"value":896},{"type":467,"tag":532,"props":1257,"children":1258},{"style":813},[1259],{"type":472,"value":901},{"type":467,"tag":532,"props":1261,"children":1262},{"style":819},[1263],{"type":472,"value":822},{"type":467,"tag":532,"props":1265,"children":1267},{"class":534,"line":1266},22,[1268,1272,1277,1281,1285,1289,1293,1297,1301],{"type":467,"tag":532,"props":1269,"children":1270},{"style":724},[1271],{"type":472,"value":779},{"type":467,"tag":532,"props":1273,"children":1274},{"style":782},[1275],{"type":472,"value":1276}," r",{"type":467,"tag":532,"props":1278,"children":1279},{"style":736},[1280],{"type":472,"value":739},{"type":467,"tag":532,"props":1282,"children":1283},{"style":782},[1284],{"type":472,"value":794},{"type":467,"tag":532,"props":1286,"children":1287},{"style":797},[1288],{"type":472,"value":800},{"type":467,"tag":532,"props":1290,"children":1291},{"style":747},[1292],{"type":472,"value":805},{"type":467,"tag":532,"props":1294,"children":1295},{"style":736},[1296],{"type":472,"value":810},{"type":467,"tag":532,"props":1298,"children":1299},{"style":813},[1300],{"type":472,"value":901},{"type":467,"tag":532,"props":1302,"children":1303},{"style":819},[1304],{"type":472,"value":822},{"type":467,"tag":532,"props":1306,"children":1308},{"class":534,"line":1307},23,[1309,1313,1317,1322,1327,1331],{"type":467,"tag":532,"props":1310,"children":1311},{"style":829},[1312],{"type":472,"value":832},{"type":467,"tag":532,"props":1314,"children":1315},{"style":747},[1316],{"type":472,"value":750},{"type":467,"tag":532,"props":1318,"children":1319},{"style":782},[1320],{"type":472,"value":1321},"l",{"type":467,"tag":532,"props":1323,"children":1324},{"style":736},[1325],{"type":472,"value":1326}," \u003C",{"type":467,"tag":532,"props":1328,"children":1329},{"style":782},[1330],{"type":472,"value":1276},{"type":467,"tag":532,"props":1332,"children":1333},{"style":747},[1334],{"type":472,"value":761},{"type":467,"tag":532,"props":1336,"children":1338},{"class":534,"line":1337},24,[1339,1343,1347,1351,1355,1359,1363,1367,1371,1376,1380,1384,1388,1392,1396,1400,1404,1408,1412,1416,1420,1424],{"type":467,"tag":532,"props":1340,"children":1341},{"style":747},[1342],{"type":472,"value":1123},{"type":467,"tag":532,"props":1344,"children":1345},{"style":782},[1346],{"type":472,"value":756},{"type":467,"tag":532,"props":1348,"children":1349},{"style":747},[1350],{"type":472,"value":865},{"type":467,"tag":532,"props":1352,"children":1353},{"style":782},[1354],{"type":472,"value":1321},{"type":467,"tag":532,"props":1356,"children":1357},{"style":747},[1358],{"type":472,"value":1140},{"type":467,"tag":532,"props":1360,"children":1361},{"style":819},[1362],{"type":472,"value":1145},{"type":467,"tag":532,"props":1364,"children":1365},{"style":782},[1366],{"type":472,"value":794},{"type":467,"tag":532,"props":1368,"children":1369},{"style":747},[1370],{"type":472,"value":865},{"type":467,"tag":532,"props":1372,"children":1373},{"style":782},[1374],{"type":472,"value":1375},"r",{"type":467,"tag":532,"props":1377,"children":1378},{"style":747},[1379],{"type":472,"value":1162},{"type":467,"tag":532,"props":1381,"children":1382},{"style":736},[1383],{"type":472,"value":1167},{"type":467,"tag":532,"props":1385,"children":1386},{"style":747},[1387],{"type":472,"value":1172},{"type":467,"tag":532,"props":1389,"children":1390},{"style":782},[1391],{"type":472,"value":756},{"type":467,"tag":532,"props":1393,"children":1394},{"style":747},[1395],{"type":472,"value":865},{"type":467,"tag":532,"props":1397,"children":1398},{"style":782},[1399],{"type":472,"value":1375},{"type":467,"tag":532,"props":1401,"children":1402},{"style":747},[1403],{"type":472,"value":1140},{"type":467,"tag":532,"props":1405,"children":1406},{"style":819},[1407],{"type":472,"value":1145},{"type":467,"tag":532,"props":1409,"children":1410},{"style":782},[1411],{"type":472,"value":794},{"type":467,"tag":532,"props":1413,"children":1414},{"style":747},[1415],{"type":472,"value":865},{"type":467,"tag":532,"props":1417,"children":1418},{"style":782},[1419],{"type":472,"value":1321},{"type":467,"tag":532,"props":1421,"children":1422},{"style":747},[1423],{"type":472,"value":1209},{"type":467,"tag":532,"props":1425,"children":1426},{"style":819},[1427],{"type":472,"value":822},{"type":467,"tag":532,"props":1429,"children":1431},{"class":534,"line":1430},25,[1432,1437,1442],{"type":467,"tag":532,"props":1433,"children":1434},{"style":782},[1435],{"type":472,"value":1436},"    l",{"type":467,"tag":532,"props":1438,"children":1439},{"style":736},[1440],{"type":472,"value":1441},"++",{"type":467,"tag":532,"props":1443,"children":1444},{"style":819},[1445],{"type":472,"value":822},{"type":467,"tag":532,"props":1447,"children":1449},{"class":534,"line":1448},26,[1450,1455,1459],{"type":467,"tag":532,"props":1451,"children":1452},{"style":782},[1453],{"type":472,"value":1454},"    r",{"type":467,"tag":532,"props":1456,"children":1457},{"style":736},[1458],{"type":472,"value":920},{"type":467,"tag":532,"props":1460,"children":1461},{"style":819},[1462],{"type":472,"value":822},{"type":467,"tag":532,"props":1464,"children":1466},{"class":534,"line":1465},27,[1467],{"type":467,"tag":532,"props":1468,"children":1469},{"style":747},[1470],{"type":472,"value":933},{"type":467,"tag":532,"props":1472,"children":1474},{"class":534,"line":1473},28,[1475,1480],{"type":467,"tag":532,"props":1476,"children":1477},{"style":747},[1478],{"type":472,"value":1479},"}",{"type":467,"tag":532,"props":1481,"children":1482},{"style":819},[1483],{"type":472,"value":822},{"type":467,"tag":1485,"props":1486,"children":1487},"style",{},[1488],{"type":472,"value":1489},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":720,"depth":720,"links":1491},[1492,1493],{"id":628,"depth":544,"text":628},{"id":633,"depth":544,"text":633,"children":1494},[1495],{"id":639,"depth":688,"text":639},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1502,1504],{"_path":93,"title":92,"description":1503},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":99,"title":98,"description":1505},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1713597605555]