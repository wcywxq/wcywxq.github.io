[{"data":1,"prerenderedAt":1509},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":460,"/algorithm/leetcode/major/next-permutation-surround":1504},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":99,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":98,"description":464,"url":465,"body":466,"_type":1499,"_id":1500,"_source":1501,"_file":1502,"_extension":1503},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":467,"children":468,"toc":1493},"root",[469,476,486,491,509,514,519,524,554,559,582,587,610,615,628,634,639,645,1487],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":477,"props":478,"children":479},"ul",{},[480],{"type":470,"tag":481,"props":482,"children":483},"li",{},[484],{"type":475,"value":485},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":470,"tag":471,"props":487,"children":488},{},[489],{"type":475,"value":490},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":470,"tag":477,"props":492,"children":493},{},[494,499,504],{"type":470,"tag":481,"props":495,"children":496},{},[497],{"type":475,"value":498},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":470,"tag":481,"props":500,"children":501},{},[502],{"type":475,"value":503},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":470,"tag":481,"props":505,"children":506},{},[507],{"type":475,"value":508},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":470,"tag":471,"props":510,"children":511},{},[512],{"type":475,"value":513},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":470,"tag":471,"props":515,"children":516},{},[517],{"type":475,"value":518},"必须 原地 修改，只允许使用额外常数空间。",{"type":470,"tag":471,"props":520,"children":521},{},[522],{"type":475,"value":523},"示例 1：",{"type":470,"tag":525,"props":526,"children":529},"pre",{"className":527,"code":528,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[530],{"type":470,"tag":531,"props":532,"children":533},"code",{"__ignoreMap":463},[534,545],{"type":470,"tag":535,"props":536,"children":539},"span",{"class":537,"line":538},"line",1,[540],{"type":470,"tag":535,"props":541,"children":542},{},[543],{"type":475,"value":544},"输入：nums = [1,2,3]\n",{"type":470,"tag":535,"props":546,"children":548},{"class":537,"line":547},2,[549],{"type":470,"tag":535,"props":550,"children":551},{},[552],{"type":475,"value":553},"输出：[1,3,2]\n",{"type":470,"tag":471,"props":555,"children":556},{},[557],{"type":475,"value":558},"示例 2：",{"type":470,"tag":525,"props":560,"children":562},{"className":527,"code":561,"language":475,"meta":463,"style":463},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[563],{"type":470,"tag":531,"props":564,"children":565},{"__ignoreMap":463},[566,574],{"type":470,"tag":535,"props":567,"children":568},{"class":537,"line":538},[569],{"type":470,"tag":535,"props":570,"children":571},{},[572],{"type":475,"value":573},"输入：nums = [3,2,1]\n",{"type":470,"tag":535,"props":575,"children":576},{"class":537,"line":547},[577],{"type":470,"tag":535,"props":578,"children":579},{},[580],{"type":475,"value":581},"输出：[1,2,3]\n",{"type":470,"tag":471,"props":583,"children":584},{},[585],{"type":475,"value":586},"示例 3：",{"type":470,"tag":525,"props":588,"children":590},{"className":527,"code":589,"language":475,"meta":463,"style":463},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[591],{"type":470,"tag":531,"props":592,"children":593},{"__ignoreMap":463},[594,602],{"type":470,"tag":535,"props":595,"children":596},{"class":537,"line":538},[597],{"type":470,"tag":535,"props":598,"children":599},{},[600],{"type":475,"value":601},"输入：nums = [1,1,5]\n",{"type":470,"tag":535,"props":603,"children":604},{"class":537,"line":547},[605],{"type":470,"tag":535,"props":606,"children":607},{},[608],{"type":475,"value":609},"输出：[1,5,1]\n",{"type":470,"tag":471,"props":611,"children":612},{},[613],{"type":475,"value":614},"提示：",{"type":470,"tag":477,"props":616,"children":617},{},[618,623],{"type":470,"tag":481,"props":619,"children":620},{},[621],{"type":475,"value":622},"1 \u003C= nums.length \u003C= 100",{"type":470,"tag":481,"props":624,"children":625},{},[626],{"type":475,"value":627},"0 \u003C= nums[i] \u003C= 100",{"type":470,"tag":629,"props":630,"children":632},"h2",{"id":631},"解题思路",[633],{"type":475,"value":631},{"type":470,"tag":629,"props":635,"children":637},{"id":636},"实现",[638],{"type":475,"value":636},{"type":470,"tag":640,"props":641,"children":643},"h3",{"id":642},"双指针",[644],{"type":475,"value":642},{"type":470,"tag":525,"props":646,"children":650},{"className":647,"code":648,"language":649,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[651],{"type":470,"tag":531,"props":652,"children":653},{"__ignoreMap":463},[654,663,689,712,721,765,774,826,910,928,937,946,975,1017,1083,1100,1109,1118,1217,1225,1234,1267,1308,1338,1431,1449,1466,1474],{"type":470,"tag":535,"props":655,"children":656},{"class":537,"line":538},[657],{"type":470,"tag":535,"props":658,"children":660},{"style":659},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[661],{"type":475,"value":662},"/**\n",{"type":470,"tag":535,"props":664,"children":665},{"class":537,"line":547},[666,671,677,683],{"type":470,"tag":535,"props":667,"children":668},{"style":659},[669],{"type":475,"value":670}," * ",{"type":470,"tag":535,"props":672,"children":674},{"style":673},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[675],{"type":475,"value":676},"@param",{"type":470,"tag":535,"props":678,"children":680},{"style":679},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[681],{"type":475,"value":682}," {number[]}",{"type":470,"tag":535,"props":684,"children":686},{"style":685},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[687],{"type":475,"value":688}," nums\n",{"type":470,"tag":535,"props":690,"children":692},{"class":537,"line":691},3,[693,697,702,707],{"type":470,"tag":535,"props":694,"children":695},{"style":659},[696],{"type":475,"value":670},{"type":470,"tag":535,"props":698,"children":699},{"style":673},[700],{"type":475,"value":701},"@return",{"type":470,"tag":535,"props":703,"children":704},{"style":679},[705],{"type":475,"value":706}," {void}",{"type":470,"tag":535,"props":708,"children":709},{"style":659},[710],{"type":475,"value":711}," Do not return anything, modify nums in-place instead.\n",{"type":470,"tag":535,"props":713,"children":715},{"class":537,"line":714},4,[716],{"type":470,"tag":535,"props":717,"children":718},{"style":659},[719],{"type":475,"value":720}," */\n",{"type":470,"tag":535,"props":722,"children":724},{"class":537,"line":723},5,[725,731,737,743,748,754,760],{"type":470,"tag":535,"props":726,"children":728},{"style":727},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[729],{"type":475,"value":730},"var",{"type":470,"tag":535,"props":732,"children":734},{"style":733},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[735],{"type":475,"value":736}," nextPermutation",{"type":470,"tag":535,"props":738,"children":740},{"style":739},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[741],{"type":475,"value":742}," =",{"type":470,"tag":535,"props":744,"children":745},{"style":727},[746],{"type":475,"value":747}," function",{"type":470,"tag":535,"props":749,"children":751},{"style":750},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[752],{"type":475,"value":753}," (",{"type":470,"tag":535,"props":755,"children":757},{"style":756},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[758],{"type":475,"value":759},"nums",{"type":470,"tag":535,"props":761,"children":762},{"style":750},[763],{"type":475,"value":764},") {\n",{"type":470,"tag":535,"props":766,"children":768},{"class":537,"line":767},6,[769],{"type":470,"tag":535,"props":770,"children":771},{"style":659},[772],{"type":475,"value":773},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":470,"tag":535,"props":775,"children":777},{"class":537,"line":776},7,[778,783,789,793,798,804,809,814,820],{"type":470,"tag":535,"props":779,"children":780},{"style":727},[781],{"type":475,"value":782},"  let",{"type":470,"tag":535,"props":784,"children":786},{"style":785},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[787],{"type":475,"value":788}," i",{"type":470,"tag":535,"props":790,"children":791},{"style":739},[792],{"type":475,"value":742},{"type":470,"tag":535,"props":794,"children":795},{"style":785},[796],{"type":475,"value":797}," nums",{"type":470,"tag":535,"props":799,"children":801},{"style":800},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[802],{"type":475,"value":803},".",{"type":470,"tag":535,"props":805,"children":806},{"style":750},[807],{"type":475,"value":808},"length ",{"type":470,"tag":535,"props":810,"children":811},{"style":739},[812],{"type":475,"value":813},"-",{"type":470,"tag":535,"props":815,"children":817},{"style":816},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[818],{"type":475,"value":819}," 2",{"type":470,"tag":535,"props":821,"children":823},{"style":822},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[824],{"type":475,"value":825},";\n",{"type":470,"tag":535,"props":827,"children":829},{"class":537,"line":828},8,[830,836,840,845,850,855,860,864,869,873,878,883,887,891,895,900,905],{"type":470,"tag":535,"props":831,"children":833},{"style":832},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[834],{"type":475,"value":835},"  while",{"type":470,"tag":535,"props":837,"children":838},{"style":750},[839],{"type":475,"value":753},{"type":470,"tag":535,"props":841,"children":842},{"style":785},[843],{"type":475,"value":844},"i",{"type":470,"tag":535,"props":846,"children":847},{"style":739},[848],{"type":475,"value":849}," >=",{"type":470,"tag":535,"props":851,"children":852},{"style":816},[853],{"type":475,"value":854}," 0",{"type":470,"tag":535,"props":856,"children":857},{"style":739},[858],{"type":475,"value":859}," &&",{"type":470,"tag":535,"props":861,"children":862},{"style":785},[863],{"type":475,"value":797},{"type":470,"tag":535,"props":865,"children":866},{"style":750},[867],{"type":475,"value":868},"[",{"type":470,"tag":535,"props":870,"children":871},{"style":785},[872],{"type":475,"value":844},{"type":470,"tag":535,"props":874,"children":875},{"style":750},[876],{"type":475,"value":877},"] ",{"type":470,"tag":535,"props":879,"children":880},{"style":739},[881],{"type":475,"value":882},">=",{"type":470,"tag":535,"props":884,"children":885},{"style":785},[886],{"type":475,"value":797},{"type":470,"tag":535,"props":888,"children":889},{"style":750},[890],{"type":475,"value":868},{"type":470,"tag":535,"props":892,"children":893},{"style":785},[894],{"type":475,"value":844},{"type":470,"tag":535,"props":896,"children":897},{"style":739},[898],{"type":475,"value":899}," +",{"type":470,"tag":535,"props":901,"children":902},{"style":816},[903],{"type":475,"value":904}," 1",{"type":470,"tag":535,"props":906,"children":907},{"style":750},[908],{"type":475,"value":909},"]) {\n",{"type":470,"tag":535,"props":911,"children":913},{"class":537,"line":912},9,[914,919,924],{"type":470,"tag":535,"props":915,"children":916},{"style":785},[917],{"type":475,"value":918},"    i",{"type":470,"tag":535,"props":920,"children":921},{"style":739},[922],{"type":475,"value":923},"--",{"type":470,"tag":535,"props":925,"children":926},{"style":822},[927],{"type":475,"value":825},{"type":470,"tag":535,"props":929,"children":931},{"class":537,"line":930},10,[932],{"type":470,"tag":535,"props":933,"children":934},{"style":750},[935],{"type":475,"value":936},"  }\n",{"type":470,"tag":535,"props":938,"children":940},{"class":537,"line":939},11,[941],{"type":470,"tag":535,"props":942,"children":943},{"style":659},[944],{"type":475,"value":945},"  // i 在数组中存在，进行交换\n",{"type":470,"tag":535,"props":947,"children":949},{"class":537,"line":948},12,[950,955,959,963,967,971],{"type":470,"tag":535,"props":951,"children":952},{"style":832},[953],{"type":475,"value":954},"  if",{"type":470,"tag":535,"props":956,"children":957},{"style":750},[958],{"type":475,"value":753},{"type":470,"tag":535,"props":960,"children":961},{"style":785},[962],{"type":475,"value":844},{"type":470,"tag":535,"props":964,"children":965},{"style":739},[966],{"type":475,"value":849},{"type":470,"tag":535,"props":968,"children":969},{"style":816},[970],{"type":475,"value":854},{"type":470,"tag":535,"props":972,"children":973},{"style":750},[974],{"type":475,"value":764},{"type":470,"tag":535,"props":976,"children":978},{"class":537,"line":977},13,[979,984,989,993,997,1001,1005,1009,1013],{"type":470,"tag":535,"props":980,"children":981},{"style":727},[982],{"type":475,"value":983},"    let",{"type":470,"tag":535,"props":985,"children":986},{"style":785},[987],{"type":475,"value":988}," j",{"type":470,"tag":535,"props":990,"children":991},{"style":739},[992],{"type":475,"value":742},{"type":470,"tag":535,"props":994,"children":995},{"style":785},[996],{"type":475,"value":797},{"type":470,"tag":535,"props":998,"children":999},{"style":800},[1000],{"type":475,"value":803},{"type":470,"tag":535,"props":1002,"children":1003},{"style":750},[1004],{"type":475,"value":808},{"type":470,"tag":535,"props":1006,"children":1007},{"style":739},[1008],{"type":475,"value":813},{"type":470,"tag":535,"props":1010,"children":1011},{"style":816},[1012],{"type":475,"value":904},{"type":470,"tag":535,"props":1014,"children":1015},{"style":822},[1016],{"type":475,"value":825},{"type":470,"tag":535,"props":1018,"children":1020},{"class":537,"line":1019},14,[1021,1026,1030,1035,1039,1043,1047,1051,1055,1059,1063,1067,1071,1075,1079],{"type":470,"tag":535,"props":1022,"children":1023},{"style":832},[1024],{"type":475,"value":1025},"    while",{"type":470,"tag":535,"props":1027,"children":1028},{"style":750},[1029],{"type":475,"value":753},{"type":470,"tag":535,"props":1031,"children":1032},{"style":785},[1033],{"type":475,"value":1034},"j",{"type":470,"tag":535,"props":1036,"children":1037},{"style":739},[1038],{"type":475,"value":849},{"type":470,"tag":535,"props":1040,"children":1041},{"style":816},[1042],{"type":475,"value":854},{"type":470,"tag":535,"props":1044,"children":1045},{"style":739},[1046],{"type":475,"value":859},{"type":470,"tag":535,"props":1048,"children":1049},{"style":785},[1050],{"type":475,"value":797},{"type":470,"tag":535,"props":1052,"children":1053},{"style":750},[1054],{"type":475,"value":868},{"type":470,"tag":535,"props":1056,"children":1057},{"style":785},[1058],{"type":475,"value":844},{"type":470,"tag":535,"props":1060,"children":1061},{"style":750},[1062],{"type":475,"value":877},{"type":470,"tag":535,"props":1064,"children":1065},{"style":739},[1066],{"type":475,"value":882},{"type":470,"tag":535,"props":1068,"children":1069},{"style":785},[1070],{"type":475,"value":797},{"type":470,"tag":535,"props":1072,"children":1073},{"style":750},[1074],{"type":475,"value":868},{"type":470,"tag":535,"props":1076,"children":1077},{"style":785},[1078],{"type":475,"value":1034},{"type":470,"tag":535,"props":1080,"children":1081},{"style":750},[1082],{"type":475,"value":909},{"type":470,"tag":535,"props":1084,"children":1086},{"class":537,"line":1085},15,[1087,1092,1096],{"type":470,"tag":535,"props":1088,"children":1089},{"style":785},[1090],{"type":475,"value":1091},"      j",{"type":470,"tag":535,"props":1093,"children":1094},{"style":739},[1095],{"type":475,"value":923},{"type":470,"tag":535,"props":1097,"children":1098},{"style":822},[1099],{"type":475,"value":825},{"type":470,"tag":535,"props":1101,"children":1103},{"class":537,"line":1102},16,[1104],{"type":470,"tag":535,"props":1105,"children":1106},{"style":750},[1107],{"type":475,"value":1108},"    }\n",{"type":470,"tag":535,"props":1110,"children":1112},{"class":537,"line":1111},17,[1113],{"type":470,"tag":535,"props":1114,"children":1115},{"style":659},[1116],{"type":475,"value":1117},"    // 交换\n",{"type":470,"tag":535,"props":1119,"children":1121},{"class":537,"line":1120},18,[1122,1127,1131,1135,1139,1144,1149,1153,1157,1161,1166,1171,1176,1180,1184,1188,1192,1196,1200,1204,1208,1213],{"type":470,"tag":535,"props":1123,"children":1124},{"style":750},[1125],{"type":475,"value":1126},"    [",{"type":470,"tag":535,"props":1128,"children":1129},{"style":785},[1130],{"type":475,"value":759},{"type":470,"tag":535,"props":1132,"children":1133},{"style":750},[1134],{"type":475,"value":868},{"type":470,"tag":535,"props":1136,"children":1137},{"style":785},[1138],{"type":475,"value":844},{"type":470,"tag":535,"props":1140,"children":1141},{"style":750},[1142],{"type":475,"value":1143},"]",{"type":470,"tag":535,"props":1145,"children":1146},{"style":822},[1147],{"type":475,"value":1148},",",{"type":470,"tag":535,"props":1150,"children":1151},{"style":785},[1152],{"type":475,"value":797},{"type":470,"tag":535,"props":1154,"children":1155},{"style":750},[1156],{"type":475,"value":868},{"type":470,"tag":535,"props":1158,"children":1159},{"style":785},[1160],{"type":475,"value":1034},{"type":470,"tag":535,"props":1162,"children":1163},{"style":750},[1164],{"type":475,"value":1165},"]] ",{"type":470,"tag":535,"props":1167,"children":1168},{"style":739},[1169],{"type":475,"value":1170},"=",{"type":470,"tag":535,"props":1172,"children":1173},{"style":750},[1174],{"type":475,"value":1175}," [",{"type":470,"tag":535,"props":1177,"children":1178},{"style":785},[1179],{"type":475,"value":759},{"type":470,"tag":535,"props":1181,"children":1182},{"style":750},[1183],{"type":475,"value":868},{"type":470,"tag":535,"props":1185,"children":1186},{"style":785},[1187],{"type":475,"value":1034},{"type":470,"tag":535,"props":1189,"children":1190},{"style":750},[1191],{"type":475,"value":1143},{"type":470,"tag":535,"props":1193,"children":1194},{"style":822},[1195],{"type":475,"value":1148},{"type":470,"tag":535,"props":1197,"children":1198},{"style":785},[1199],{"type":475,"value":797},{"type":470,"tag":535,"props":1201,"children":1202},{"style":750},[1203],{"type":475,"value":868},{"type":470,"tag":535,"props":1205,"children":1206},{"style":785},[1207],{"type":475,"value":844},{"type":470,"tag":535,"props":1209,"children":1210},{"style":750},[1211],{"type":475,"value":1212},"]]",{"type":470,"tag":535,"props":1214,"children":1215},{"style":822},[1216],{"type":475,"value":825},{"type":470,"tag":535,"props":1218,"children":1220},{"class":537,"line":1219},19,[1221],{"type":470,"tag":535,"props":1222,"children":1223},{"style":750},[1224],{"type":475,"value":936},{"type":470,"tag":535,"props":1226,"children":1228},{"class":537,"line":1227},20,[1229],{"type":470,"tag":535,"props":1230,"children":1231},{"style":659},[1232],{"type":475,"value":1233},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":470,"tag":535,"props":1235,"children":1237},{"class":537,"line":1236},21,[1238,1242,1247,1251,1255,1259,1263],{"type":470,"tag":535,"props":1239,"children":1240},{"style":727},[1241],{"type":475,"value":782},{"type":470,"tag":535,"props":1243,"children":1244},{"style":785},[1245],{"type":475,"value":1246}," l",{"type":470,"tag":535,"props":1248,"children":1249},{"style":739},[1250],{"type":475,"value":742},{"type":470,"tag":535,"props":1252,"children":1253},{"style":785},[1254],{"type":475,"value":788},{"type":470,"tag":535,"props":1256,"children":1257},{"style":739},[1258],{"type":475,"value":899},{"type":470,"tag":535,"props":1260,"children":1261},{"style":816},[1262],{"type":475,"value":904},{"type":470,"tag":535,"props":1264,"children":1265},{"style":822},[1266],{"type":475,"value":825},{"type":470,"tag":535,"props":1268,"children":1270},{"class":537,"line":1269},22,[1271,1275,1280,1284,1288,1292,1296,1300,1304],{"type":470,"tag":535,"props":1272,"children":1273},{"style":727},[1274],{"type":475,"value":782},{"type":470,"tag":535,"props":1276,"children":1277},{"style":785},[1278],{"type":475,"value":1279}," r",{"type":470,"tag":535,"props":1281,"children":1282},{"style":739},[1283],{"type":475,"value":742},{"type":470,"tag":535,"props":1285,"children":1286},{"style":785},[1287],{"type":475,"value":797},{"type":470,"tag":535,"props":1289,"children":1290},{"style":800},[1291],{"type":475,"value":803},{"type":470,"tag":535,"props":1293,"children":1294},{"style":750},[1295],{"type":475,"value":808},{"type":470,"tag":535,"props":1297,"children":1298},{"style":739},[1299],{"type":475,"value":813},{"type":470,"tag":535,"props":1301,"children":1302},{"style":816},[1303],{"type":475,"value":904},{"type":470,"tag":535,"props":1305,"children":1306},{"style":822},[1307],{"type":475,"value":825},{"type":470,"tag":535,"props":1309,"children":1311},{"class":537,"line":1310},23,[1312,1316,1320,1325,1330,1334],{"type":470,"tag":535,"props":1313,"children":1314},{"style":832},[1315],{"type":475,"value":835},{"type":470,"tag":535,"props":1317,"children":1318},{"style":750},[1319],{"type":475,"value":753},{"type":470,"tag":535,"props":1321,"children":1322},{"style":785},[1323],{"type":475,"value":1324},"l",{"type":470,"tag":535,"props":1326,"children":1327},{"style":739},[1328],{"type":475,"value":1329}," \u003C",{"type":470,"tag":535,"props":1331,"children":1332},{"style":785},[1333],{"type":475,"value":1279},{"type":470,"tag":535,"props":1335,"children":1336},{"style":750},[1337],{"type":475,"value":764},{"type":470,"tag":535,"props":1339,"children":1341},{"class":537,"line":1340},24,[1342,1346,1350,1354,1358,1362,1366,1370,1374,1379,1383,1387,1391,1395,1399,1403,1407,1411,1415,1419,1423,1427],{"type":470,"tag":535,"props":1343,"children":1344},{"style":750},[1345],{"type":475,"value":1126},{"type":470,"tag":535,"props":1347,"children":1348},{"style":785},[1349],{"type":475,"value":759},{"type":470,"tag":535,"props":1351,"children":1352},{"style":750},[1353],{"type":475,"value":868},{"type":470,"tag":535,"props":1355,"children":1356},{"style":785},[1357],{"type":475,"value":1324},{"type":470,"tag":535,"props":1359,"children":1360},{"style":750},[1361],{"type":475,"value":1143},{"type":470,"tag":535,"props":1363,"children":1364},{"style":822},[1365],{"type":475,"value":1148},{"type":470,"tag":535,"props":1367,"children":1368},{"style":785},[1369],{"type":475,"value":797},{"type":470,"tag":535,"props":1371,"children":1372},{"style":750},[1373],{"type":475,"value":868},{"type":470,"tag":535,"props":1375,"children":1376},{"style":785},[1377],{"type":475,"value":1378},"r",{"type":470,"tag":535,"props":1380,"children":1381},{"style":750},[1382],{"type":475,"value":1165},{"type":470,"tag":535,"props":1384,"children":1385},{"style":739},[1386],{"type":475,"value":1170},{"type":470,"tag":535,"props":1388,"children":1389},{"style":750},[1390],{"type":475,"value":1175},{"type":470,"tag":535,"props":1392,"children":1393},{"style":785},[1394],{"type":475,"value":759},{"type":470,"tag":535,"props":1396,"children":1397},{"style":750},[1398],{"type":475,"value":868},{"type":470,"tag":535,"props":1400,"children":1401},{"style":785},[1402],{"type":475,"value":1378},{"type":470,"tag":535,"props":1404,"children":1405},{"style":750},[1406],{"type":475,"value":1143},{"type":470,"tag":535,"props":1408,"children":1409},{"style":822},[1410],{"type":475,"value":1148},{"type":470,"tag":535,"props":1412,"children":1413},{"style":785},[1414],{"type":475,"value":797},{"type":470,"tag":535,"props":1416,"children":1417},{"style":750},[1418],{"type":475,"value":868},{"type":470,"tag":535,"props":1420,"children":1421},{"style":785},[1422],{"type":475,"value":1324},{"type":470,"tag":535,"props":1424,"children":1425},{"style":750},[1426],{"type":475,"value":1212},{"type":470,"tag":535,"props":1428,"children":1429},{"style":822},[1430],{"type":475,"value":825},{"type":470,"tag":535,"props":1432,"children":1434},{"class":537,"line":1433},25,[1435,1440,1445],{"type":470,"tag":535,"props":1436,"children":1437},{"style":785},[1438],{"type":475,"value":1439},"    l",{"type":470,"tag":535,"props":1441,"children":1442},{"style":739},[1443],{"type":475,"value":1444},"++",{"type":470,"tag":535,"props":1446,"children":1447},{"style":822},[1448],{"type":475,"value":825},{"type":470,"tag":535,"props":1450,"children":1452},{"class":537,"line":1451},26,[1453,1458,1462],{"type":470,"tag":535,"props":1454,"children":1455},{"style":785},[1456],{"type":475,"value":1457},"    r",{"type":470,"tag":535,"props":1459,"children":1460},{"style":739},[1461],{"type":475,"value":923},{"type":470,"tag":535,"props":1463,"children":1464},{"style":822},[1465],{"type":475,"value":825},{"type":470,"tag":535,"props":1467,"children":1469},{"class":537,"line":1468},27,[1470],{"type":470,"tag":535,"props":1471,"children":1472},{"style":750},[1473],{"type":475,"value":936},{"type":470,"tag":535,"props":1475,"children":1477},{"class":537,"line":1476},28,[1478,1483],{"type":470,"tag":535,"props":1479,"children":1480},{"style":750},[1481],{"type":475,"value":1482},"}",{"type":470,"tag":535,"props":1484,"children":1485},{"style":822},[1486],{"type":475,"value":825},{"type":470,"tag":1488,"props":1489,"children":1490},"style",{},[1491],{"type":475,"value":1492},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":723,"depth":723,"links":1494},[1495,1496],{"id":631,"depth":547,"text":631},{"id":636,"depth":547,"text":636,"children":1497},[1498],{"id":642,"depth":691,"text":642},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1505,1507],{"_path":96,"title":95,"description":1506},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":102,"title":101,"description":1508},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1713626052509]