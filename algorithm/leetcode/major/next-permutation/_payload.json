[{"data":1,"prerenderedAt":1564},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":503,"/algorithm/leetcode/major/next-permutation-surround":1559},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":105,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":104,"description":507,"url":508,"body":509,"_type":1554,"_id":1555,"_source":1556,"_file":1557,"_extension":1558},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":510,"children":511,"toc":1548},"root",[512,519,529,534,552,557,562,567,597,602,625,630,653,658,671,677,682,688,1542],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":520,"props":521,"children":522},"ul",{},[523],{"type":513,"tag":524,"props":525,"children":526},"li",{},[527],{"type":518,"value":528},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":513,"tag":514,"props":530,"children":531},{},[532],{"type":518,"value":533},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":513,"tag":520,"props":535,"children":536},{},[537,542,547],{"type":513,"tag":524,"props":538,"children":539},{},[540],{"type":518,"value":541},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":513,"tag":524,"props":543,"children":544},{},[545],{"type":518,"value":546},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":513,"tag":524,"props":548,"children":549},{},[550],{"type":518,"value":551},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":513,"tag":514,"props":553,"children":554},{},[555],{"type":518,"value":556},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":513,"tag":514,"props":558,"children":559},{},[560],{"type":518,"value":561},"必须 原地 修改，只允许使用额外常数空间。",{"type":513,"tag":514,"props":563,"children":564},{},[565],{"type":518,"value":566},"示例 1：",{"type":513,"tag":568,"props":569,"children":572},"pre",{"className":570,"code":571,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[573],{"type":513,"tag":574,"props":575,"children":576},"code",{"__ignoreMap":506},[577,588],{"type":513,"tag":578,"props":579,"children":582},"span",{"class":580,"line":581},"line",1,[583],{"type":513,"tag":578,"props":584,"children":585},{},[586],{"type":518,"value":587},"输入：nums = [1,2,3]\n",{"type":513,"tag":578,"props":589,"children":591},{"class":580,"line":590},2,[592],{"type":513,"tag":578,"props":593,"children":594},{},[595],{"type":518,"value":596},"输出：[1,3,2]\n",{"type":513,"tag":514,"props":598,"children":599},{},[600],{"type":518,"value":601},"示例 2：",{"type":513,"tag":568,"props":603,"children":605},{"className":570,"code":604,"language":518,"meta":506,"style":506},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[606],{"type":513,"tag":574,"props":607,"children":608},{"__ignoreMap":506},[609,617],{"type":513,"tag":578,"props":610,"children":611},{"class":580,"line":581},[612],{"type":513,"tag":578,"props":613,"children":614},{},[615],{"type":518,"value":616},"输入：nums = [3,2,1]\n",{"type":513,"tag":578,"props":618,"children":619},{"class":580,"line":590},[620],{"type":513,"tag":578,"props":621,"children":622},{},[623],{"type":518,"value":624},"输出：[1,2,3]\n",{"type":513,"tag":514,"props":626,"children":627},{},[628],{"type":518,"value":629},"示例 3：",{"type":513,"tag":568,"props":631,"children":633},{"className":570,"code":632,"language":518,"meta":506,"style":506},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[634],{"type":513,"tag":574,"props":635,"children":636},{"__ignoreMap":506},[637,645],{"type":513,"tag":578,"props":638,"children":639},{"class":580,"line":581},[640],{"type":513,"tag":578,"props":641,"children":642},{},[643],{"type":518,"value":644},"输入：nums = [1,1,5]\n",{"type":513,"tag":578,"props":646,"children":647},{"class":580,"line":590},[648],{"type":513,"tag":578,"props":649,"children":650},{},[651],{"type":518,"value":652},"输出：[1,5,1]\n",{"type":513,"tag":514,"props":654,"children":655},{},[656],{"type":518,"value":657},"提示：",{"type":513,"tag":520,"props":659,"children":660},{},[661,666],{"type":513,"tag":524,"props":662,"children":663},{},[664],{"type":518,"value":665},"1 \u003C= nums.length \u003C= 100",{"type":513,"tag":524,"props":667,"children":668},{},[669],{"type":518,"value":670},"0 \u003C= nums[i] \u003C= 100",{"type":513,"tag":672,"props":673,"children":675},"h2",{"id":674},"解题思路",[676],{"type":518,"value":674},{"type":513,"tag":672,"props":678,"children":680},{"id":679},"实现",[681],{"type":518,"value":679},{"type":513,"tag":683,"props":684,"children":686},"h3",{"id":685},"双指针",[687],{"type":518,"value":685},{"type":513,"tag":568,"props":689,"children":693},{"className":690,"code":691,"language":692,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[694],{"type":513,"tag":574,"props":695,"children":696},{"__ignoreMap":506},[697,706,748,783,792,838,847,897,983,1001,1010,1019,1052,1094,1164,1181,1190,1199,1284,1292,1301,1334,1375,1409,1490,1508,1525,1533],{"type":513,"tag":578,"props":698,"children":699},{"class":580,"line":581},[700],{"type":513,"tag":578,"props":701,"children":703},{"style":702},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[704],{"type":518,"value":705},"/**\n",{"type":513,"tag":578,"props":707,"children":708},{"class":580,"line":590},[709,714,720,726,731,737,742],{"type":513,"tag":578,"props":710,"children":711},{"style":702},[712],{"type":518,"value":713}," * ",{"type":513,"tag":578,"props":715,"children":717},{"style":716},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[718],{"type":518,"value":719},"@",{"type":513,"tag":578,"props":721,"children":723},{"style":722},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[724],{"type":518,"value":725},"param",{"type":513,"tag":578,"props":727,"children":728},{"style":716},[729],{"type":518,"value":730}," {",{"type":513,"tag":578,"props":732,"children":734},{"style":733},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[735],{"type":518,"value":736},"number[]",{"type":513,"tag":578,"props":738,"children":739},{"style":716},[740],{"type":518,"value":741},"}",{"type":513,"tag":578,"props":743,"children":745},{"style":744},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[746],{"type":518,"value":747}," nums\n",{"type":513,"tag":578,"props":749,"children":751},{"class":580,"line":750},3,[752,756,760,765,769,774,778],{"type":513,"tag":578,"props":753,"children":754},{"style":702},[755],{"type":518,"value":713},{"type":513,"tag":578,"props":757,"children":758},{"style":716},[759],{"type":518,"value":719},{"type":513,"tag":578,"props":761,"children":762},{"style":722},[763],{"type":518,"value":764},"return",{"type":513,"tag":578,"props":766,"children":767},{"style":716},[768],{"type":518,"value":730},{"type":513,"tag":578,"props":770,"children":771},{"style":733},[772],{"type":518,"value":773},"void",{"type":513,"tag":578,"props":775,"children":776},{"style":716},[777],{"type":518,"value":741},{"type":513,"tag":578,"props":779,"children":780},{"style":702},[781],{"type":518,"value":782}," Do not return anything, modify nums in-place instead.\n",{"type":513,"tag":578,"props":784,"children":786},{"class":580,"line":785},4,[787],{"type":513,"tag":578,"props":788,"children":789},{"style":702},[790],{"type":518,"value":791}," */\n",{"type":513,"tag":578,"props":793,"children":795},{"class":580,"line":794},5,[796,802,808,813,818,823,828,833],{"type":513,"tag":578,"props":797,"children":799},{"style":798},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[800],{"type":518,"value":801},"var",{"type":513,"tag":578,"props":803,"children":805},{"style":804},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[806],{"type":518,"value":807}," nextPermutation",{"type":513,"tag":578,"props":809,"children":810},{"style":716},[811],{"type":518,"value":812}," =",{"type":513,"tag":578,"props":814,"children":815},{"style":798},[816],{"type":518,"value":817}," function",{"type":513,"tag":578,"props":819,"children":820},{"style":716},[821],{"type":518,"value":822}," (",{"type":513,"tag":578,"props":824,"children":825},{"style":744},[826],{"type":518,"value":827},"nums",{"type":513,"tag":578,"props":829,"children":830},{"style":716},[831],{"type":518,"value":832},")",{"type":513,"tag":578,"props":834,"children":835},{"style":716},[836],{"type":518,"value":837}," {\n",{"type":513,"tag":578,"props":839,"children":841},{"class":580,"line":840},6,[842],{"type":513,"tag":578,"props":843,"children":844},{"style":702},[845],{"type":518,"value":846},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":513,"tag":578,"props":848,"children":850},{"class":580,"line":849},7,[851,856,861,865,870,875,881,886,892],{"type":513,"tag":578,"props":852,"children":853},{"style":798},[854],{"type":518,"value":855},"  let",{"type":513,"tag":578,"props":857,"children":858},{"style":744},[859],{"type":518,"value":860}," i",{"type":513,"tag":578,"props":862,"children":863},{"style":716},[864],{"type":518,"value":812},{"type":513,"tag":578,"props":866,"children":867},{"style":744},[868],{"type":518,"value":869}," nums",{"type":513,"tag":578,"props":871,"children":872},{"style":716},[873],{"type":518,"value":874},".",{"type":513,"tag":578,"props":876,"children":878},{"style":877},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[879],{"type":518,"value":880},"length",{"type":513,"tag":578,"props":882,"children":883},{"style":798},[884],{"type":518,"value":885}," -",{"type":513,"tag":578,"props":887,"children":889},{"style":888},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[890],{"type":518,"value":891}," 2",{"type":513,"tag":578,"props":893,"children":894},{"style":716},[895],{"type":518,"value":896},";\n",{"type":513,"tag":578,"props":898,"children":900},{"class":580,"line":899},8,[901,906,910,915,920,925,930,934,939,943,948,952,956,960,964,969,974,979],{"type":513,"tag":578,"props":902,"children":903},{"style":722},[904],{"type":518,"value":905},"  while",{"type":513,"tag":578,"props":907,"children":908},{"style":716},[909],{"type":518,"value":822},{"type":513,"tag":578,"props":911,"children":912},{"style":744},[913],{"type":518,"value":914},"i",{"type":513,"tag":578,"props":916,"children":917},{"style":716},[918],{"type":518,"value":919}," >=",{"type":513,"tag":578,"props":921,"children":922},{"style":888},[923],{"type":518,"value":924}," 0",{"type":513,"tag":578,"props":926,"children":927},{"style":798},[928],{"type":518,"value":929}," &&",{"type":513,"tag":578,"props":931,"children":932},{"style":744},[933],{"type":518,"value":869},{"type":513,"tag":578,"props":935,"children":936},{"style":716},[937],{"type":518,"value":938},"[",{"type":513,"tag":578,"props":940,"children":941},{"style":744},[942],{"type":518,"value":914},{"type":513,"tag":578,"props":944,"children":945},{"style":716},[946],{"type":518,"value":947},"]",{"type":513,"tag":578,"props":949,"children":950},{"style":716},[951],{"type":518,"value":919},{"type":513,"tag":578,"props":953,"children":954},{"style":744},[955],{"type":518,"value":869},{"type":513,"tag":578,"props":957,"children":958},{"style":716},[959],{"type":518,"value":938},{"type":513,"tag":578,"props":961,"children":962},{"style":744},[963],{"type":518,"value":914},{"type":513,"tag":578,"props":965,"children":966},{"style":798},[967],{"type":518,"value":968}," +",{"type":513,"tag":578,"props":970,"children":971},{"style":888},[972],{"type":518,"value":973}," 1",{"type":513,"tag":578,"props":975,"children":976},{"style":716},[977],{"type":518,"value":978},"])",{"type":513,"tag":578,"props":980,"children":981},{"style":716},[982],{"type":518,"value":837},{"type":513,"tag":578,"props":984,"children":986},{"class":580,"line":985},9,[987,992,997],{"type":513,"tag":578,"props":988,"children":989},{"style":744},[990],{"type":518,"value":991},"    i",{"type":513,"tag":578,"props":993,"children":994},{"style":798},[995],{"type":518,"value":996},"--",{"type":513,"tag":578,"props":998,"children":999},{"style":716},[1000],{"type":518,"value":896},{"type":513,"tag":578,"props":1002,"children":1004},{"class":580,"line":1003},10,[1005],{"type":513,"tag":578,"props":1006,"children":1007},{"style":716},[1008],{"type":518,"value":1009},"  }\n",{"type":513,"tag":578,"props":1011,"children":1013},{"class":580,"line":1012},11,[1014],{"type":513,"tag":578,"props":1015,"children":1016},{"style":702},[1017],{"type":518,"value":1018},"  // i 在数组中存在，进行交换\n",{"type":513,"tag":578,"props":1020,"children":1022},{"class":580,"line":1021},12,[1023,1028,1032,1036,1040,1044,1048],{"type":513,"tag":578,"props":1024,"children":1025},{"style":722},[1026],{"type":518,"value":1027},"  if",{"type":513,"tag":578,"props":1029,"children":1030},{"style":716},[1031],{"type":518,"value":822},{"type":513,"tag":578,"props":1033,"children":1034},{"style":744},[1035],{"type":518,"value":914},{"type":513,"tag":578,"props":1037,"children":1038},{"style":716},[1039],{"type":518,"value":919},{"type":513,"tag":578,"props":1041,"children":1042},{"style":888},[1043],{"type":518,"value":924},{"type":513,"tag":578,"props":1045,"children":1046},{"style":716},[1047],{"type":518,"value":832},{"type":513,"tag":578,"props":1049,"children":1050},{"style":716},[1051],{"type":518,"value":837},{"type":513,"tag":578,"props":1053,"children":1055},{"class":580,"line":1054},13,[1056,1061,1066,1070,1074,1078,1082,1086,1090],{"type":513,"tag":578,"props":1057,"children":1058},{"style":798},[1059],{"type":518,"value":1060},"    let",{"type":513,"tag":578,"props":1062,"children":1063},{"style":744},[1064],{"type":518,"value":1065}," j",{"type":513,"tag":578,"props":1067,"children":1068},{"style":716},[1069],{"type":518,"value":812},{"type":513,"tag":578,"props":1071,"children":1072},{"style":744},[1073],{"type":518,"value":869},{"type":513,"tag":578,"props":1075,"children":1076},{"style":716},[1077],{"type":518,"value":874},{"type":513,"tag":578,"props":1079,"children":1080},{"style":877},[1081],{"type":518,"value":880},{"type":513,"tag":578,"props":1083,"children":1084},{"style":798},[1085],{"type":518,"value":885},{"type":513,"tag":578,"props":1087,"children":1088},{"style":888},[1089],{"type":518,"value":973},{"type":513,"tag":578,"props":1091,"children":1092},{"style":716},[1093],{"type":518,"value":896},{"type":513,"tag":578,"props":1095,"children":1097},{"class":580,"line":1096},14,[1098,1103,1107,1112,1116,1120,1124,1128,1132,1136,1140,1144,1148,1152,1156,1160],{"type":513,"tag":578,"props":1099,"children":1100},{"style":722},[1101],{"type":518,"value":1102},"    while",{"type":513,"tag":578,"props":1104,"children":1105},{"style":716},[1106],{"type":518,"value":822},{"type":513,"tag":578,"props":1108,"children":1109},{"style":744},[1110],{"type":518,"value":1111},"j",{"type":513,"tag":578,"props":1113,"children":1114},{"style":716},[1115],{"type":518,"value":919},{"type":513,"tag":578,"props":1117,"children":1118},{"style":888},[1119],{"type":518,"value":924},{"type":513,"tag":578,"props":1121,"children":1122},{"style":798},[1123],{"type":518,"value":929},{"type":513,"tag":578,"props":1125,"children":1126},{"style":744},[1127],{"type":518,"value":869},{"type":513,"tag":578,"props":1129,"children":1130},{"style":716},[1131],{"type":518,"value":938},{"type":513,"tag":578,"props":1133,"children":1134},{"style":744},[1135],{"type":518,"value":914},{"type":513,"tag":578,"props":1137,"children":1138},{"style":716},[1139],{"type":518,"value":947},{"type":513,"tag":578,"props":1141,"children":1142},{"style":716},[1143],{"type":518,"value":919},{"type":513,"tag":578,"props":1145,"children":1146},{"style":744},[1147],{"type":518,"value":869},{"type":513,"tag":578,"props":1149,"children":1150},{"style":716},[1151],{"type":518,"value":938},{"type":513,"tag":578,"props":1153,"children":1154},{"style":744},[1155],{"type":518,"value":1111},{"type":513,"tag":578,"props":1157,"children":1158},{"style":716},[1159],{"type":518,"value":978},{"type":513,"tag":578,"props":1161,"children":1162},{"style":716},[1163],{"type":518,"value":837},{"type":513,"tag":578,"props":1165,"children":1167},{"class":580,"line":1166},15,[1168,1173,1177],{"type":513,"tag":578,"props":1169,"children":1170},{"style":744},[1171],{"type":518,"value":1172},"      j",{"type":513,"tag":578,"props":1174,"children":1175},{"style":798},[1176],{"type":518,"value":996},{"type":513,"tag":578,"props":1178,"children":1179},{"style":716},[1180],{"type":518,"value":896},{"type":513,"tag":578,"props":1182,"children":1184},{"class":580,"line":1183},16,[1185],{"type":513,"tag":578,"props":1186,"children":1187},{"style":716},[1188],{"type":518,"value":1189},"    }\n",{"type":513,"tag":578,"props":1191,"children":1193},{"class":580,"line":1192},17,[1194],{"type":513,"tag":578,"props":1195,"children":1196},{"style":702},[1197],{"type":518,"value":1198},"    // 交换\n",{"type":513,"tag":578,"props":1200,"children":1202},{"class":580,"line":1201},18,[1203,1208,1212,1216,1220,1225,1229,1233,1237,1242,1246,1251,1255,1259,1263,1267,1271,1275,1279],{"type":513,"tag":578,"props":1204,"children":1205},{"style":716},[1206],{"type":518,"value":1207},"    [",{"type":513,"tag":578,"props":1209,"children":1210},{"style":744},[1211],{"type":518,"value":827},{"type":513,"tag":578,"props":1213,"children":1214},{"style":716},[1215],{"type":518,"value":938},{"type":513,"tag":578,"props":1217,"children":1218},{"style":744},[1219],{"type":518,"value":914},{"type":513,"tag":578,"props":1221,"children":1222},{"style":716},[1223],{"type":518,"value":1224},"],",{"type":513,"tag":578,"props":1226,"children":1227},{"style":744},[1228],{"type":518,"value":869},{"type":513,"tag":578,"props":1230,"children":1231},{"style":716},[1232],{"type":518,"value":938},{"type":513,"tag":578,"props":1234,"children":1235},{"style":744},[1236],{"type":518,"value":1111},{"type":513,"tag":578,"props":1238,"children":1239},{"style":716},[1240],{"type":518,"value":1241},"]]",{"type":513,"tag":578,"props":1243,"children":1244},{"style":716},[1245],{"type":518,"value":812},{"type":513,"tag":578,"props":1247,"children":1248},{"style":716},[1249],{"type":518,"value":1250}," [",{"type":513,"tag":578,"props":1252,"children":1253},{"style":744},[1254],{"type":518,"value":827},{"type":513,"tag":578,"props":1256,"children":1257},{"style":716},[1258],{"type":518,"value":938},{"type":513,"tag":578,"props":1260,"children":1261},{"style":744},[1262],{"type":518,"value":1111},{"type":513,"tag":578,"props":1264,"children":1265},{"style":716},[1266],{"type":518,"value":1224},{"type":513,"tag":578,"props":1268,"children":1269},{"style":744},[1270],{"type":518,"value":869},{"type":513,"tag":578,"props":1272,"children":1273},{"style":716},[1274],{"type":518,"value":938},{"type":513,"tag":578,"props":1276,"children":1277},{"style":744},[1278],{"type":518,"value":914},{"type":513,"tag":578,"props":1280,"children":1281},{"style":716},[1282],{"type":518,"value":1283},"]];\n",{"type":513,"tag":578,"props":1285,"children":1287},{"class":580,"line":1286},19,[1288],{"type":513,"tag":578,"props":1289,"children":1290},{"style":716},[1291],{"type":518,"value":1009},{"type":513,"tag":578,"props":1293,"children":1295},{"class":580,"line":1294},20,[1296],{"type":513,"tag":578,"props":1297,"children":1298},{"style":702},[1299],{"type":518,"value":1300},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":513,"tag":578,"props":1302,"children":1304},{"class":580,"line":1303},21,[1305,1309,1314,1318,1322,1326,1330],{"type":513,"tag":578,"props":1306,"children":1307},{"style":798},[1308],{"type":518,"value":855},{"type":513,"tag":578,"props":1310,"children":1311},{"style":744},[1312],{"type":518,"value":1313}," l",{"type":513,"tag":578,"props":1315,"children":1316},{"style":716},[1317],{"type":518,"value":812},{"type":513,"tag":578,"props":1319,"children":1320},{"style":744},[1321],{"type":518,"value":860},{"type":513,"tag":578,"props":1323,"children":1324},{"style":798},[1325],{"type":518,"value":968},{"type":513,"tag":578,"props":1327,"children":1328},{"style":888},[1329],{"type":518,"value":973},{"type":513,"tag":578,"props":1331,"children":1332},{"style":716},[1333],{"type":518,"value":896},{"type":513,"tag":578,"props":1335,"children":1337},{"class":580,"line":1336},22,[1338,1342,1347,1351,1355,1359,1363,1367,1371],{"type":513,"tag":578,"props":1339,"children":1340},{"style":798},[1341],{"type":518,"value":855},{"type":513,"tag":578,"props":1343,"children":1344},{"style":744},[1345],{"type":518,"value":1346}," r",{"type":513,"tag":578,"props":1348,"children":1349},{"style":716},[1350],{"type":518,"value":812},{"type":513,"tag":578,"props":1352,"children":1353},{"style":744},[1354],{"type":518,"value":869},{"type":513,"tag":578,"props":1356,"children":1357},{"style":716},[1358],{"type":518,"value":874},{"type":513,"tag":578,"props":1360,"children":1361},{"style":877},[1362],{"type":518,"value":880},{"type":513,"tag":578,"props":1364,"children":1365},{"style":798},[1366],{"type":518,"value":885},{"type":513,"tag":578,"props":1368,"children":1369},{"style":888},[1370],{"type":518,"value":973},{"type":513,"tag":578,"props":1372,"children":1373},{"style":716},[1374],{"type":518,"value":896},{"type":513,"tag":578,"props":1376,"children":1378},{"class":580,"line":1377},23,[1379,1383,1387,1392,1397,1401,1405],{"type":513,"tag":578,"props":1380,"children":1381},{"style":722},[1382],{"type":518,"value":905},{"type":513,"tag":578,"props":1384,"children":1385},{"style":716},[1386],{"type":518,"value":822},{"type":513,"tag":578,"props":1388,"children":1389},{"style":744},[1390],{"type":518,"value":1391},"l",{"type":513,"tag":578,"props":1393,"children":1394},{"style":716},[1395],{"type":518,"value":1396}," \u003C",{"type":513,"tag":578,"props":1398,"children":1399},{"style":744},[1400],{"type":518,"value":1346},{"type":513,"tag":578,"props":1402,"children":1403},{"style":716},[1404],{"type":518,"value":832},{"type":513,"tag":578,"props":1406,"children":1407},{"style":716},[1408],{"type":518,"value":837},{"type":513,"tag":578,"props":1410,"children":1412},{"class":580,"line":1411},24,[1413,1417,1421,1425,1429,1433,1437,1441,1446,1450,1454,1458,1462,1466,1470,1474,1478,1482,1486],{"type":513,"tag":578,"props":1414,"children":1415},{"style":716},[1416],{"type":518,"value":1207},{"type":513,"tag":578,"props":1418,"children":1419},{"style":744},[1420],{"type":518,"value":827},{"type":513,"tag":578,"props":1422,"children":1423},{"style":716},[1424],{"type":518,"value":938},{"type":513,"tag":578,"props":1426,"children":1427},{"style":744},[1428],{"type":518,"value":1391},{"type":513,"tag":578,"props":1430,"children":1431},{"style":716},[1432],{"type":518,"value":1224},{"type":513,"tag":578,"props":1434,"children":1435},{"style":744},[1436],{"type":518,"value":869},{"type":513,"tag":578,"props":1438,"children":1439},{"style":716},[1440],{"type":518,"value":938},{"type":513,"tag":578,"props":1442,"children":1443},{"style":744},[1444],{"type":518,"value":1445},"r",{"type":513,"tag":578,"props":1447,"children":1448},{"style":716},[1449],{"type":518,"value":1241},{"type":513,"tag":578,"props":1451,"children":1452},{"style":716},[1453],{"type":518,"value":812},{"type":513,"tag":578,"props":1455,"children":1456},{"style":716},[1457],{"type":518,"value":1250},{"type":513,"tag":578,"props":1459,"children":1460},{"style":744},[1461],{"type":518,"value":827},{"type":513,"tag":578,"props":1463,"children":1464},{"style":716},[1465],{"type":518,"value":938},{"type":513,"tag":578,"props":1467,"children":1468},{"style":744},[1469],{"type":518,"value":1445},{"type":513,"tag":578,"props":1471,"children":1472},{"style":716},[1473],{"type":518,"value":1224},{"type":513,"tag":578,"props":1475,"children":1476},{"style":744},[1477],{"type":518,"value":869},{"type":513,"tag":578,"props":1479,"children":1480},{"style":716},[1481],{"type":518,"value":938},{"type":513,"tag":578,"props":1483,"children":1484},{"style":744},[1485],{"type":518,"value":1391},{"type":513,"tag":578,"props":1487,"children":1488},{"style":716},[1489],{"type":518,"value":1283},{"type":513,"tag":578,"props":1491,"children":1493},{"class":580,"line":1492},25,[1494,1499,1504],{"type":513,"tag":578,"props":1495,"children":1496},{"style":744},[1497],{"type":518,"value":1498},"    l",{"type":513,"tag":578,"props":1500,"children":1501},{"style":798},[1502],{"type":518,"value":1503},"++",{"type":513,"tag":578,"props":1505,"children":1506},{"style":716},[1507],{"type":518,"value":896},{"type":513,"tag":578,"props":1509,"children":1511},{"class":580,"line":1510},26,[1512,1517,1521],{"type":513,"tag":578,"props":1513,"children":1514},{"style":744},[1515],{"type":518,"value":1516},"    r",{"type":513,"tag":578,"props":1518,"children":1519},{"style":798},[1520],{"type":518,"value":996},{"type":513,"tag":578,"props":1522,"children":1523},{"style":716},[1524],{"type":518,"value":896},{"type":513,"tag":578,"props":1526,"children":1528},{"class":580,"line":1527},27,[1529],{"type":513,"tag":578,"props":1530,"children":1531},{"style":716},[1532],{"type":518,"value":1009},{"type":513,"tag":578,"props":1534,"children":1536},{"class":580,"line":1535},28,[1537],{"type":513,"tag":578,"props":1538,"children":1539},{"style":716},[1540],{"type":518,"value":1541},"};\n",{"type":513,"tag":1543,"props":1544,"children":1545},"style",{},[1546],{"type":518,"value":1547},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":794,"depth":794,"links":1549},[1550,1551],{"id":674,"depth":590,"text":674},{"id":679,"depth":590,"text":679,"children":1552},[1553],{"id":685,"depth":750,"text":685},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1560,1562],{"_path":102,"title":101,"description":1561},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":108,"title":107,"description":1563},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1714056092653]