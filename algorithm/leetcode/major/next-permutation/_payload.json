[{"data":1,"prerenderedAt":1561},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":500,"/algorithm/leetcode/major/next-permutation-surround":1556},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":105,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":104,"description":504,"url":505,"body":506,"_type":1551,"_id":1552,"_source":1553,"_file":1554,"_extension":1555},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":507,"children":508,"toc":1545},"root",[509,516,526,531,549,554,559,564,594,599,622,627,650,655,668,674,679,685,1539],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":517,"props":518,"children":519},"ul",{},[520],{"type":510,"tag":521,"props":522,"children":523},"li",{},[524],{"type":515,"value":525},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":510,"tag":511,"props":527,"children":528},{},[529],{"type":515,"value":530},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":510,"tag":517,"props":532,"children":533},{},[534,539,544],{"type":510,"tag":521,"props":535,"children":536},{},[537],{"type":515,"value":538},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":510,"tag":521,"props":540,"children":541},{},[542],{"type":515,"value":543},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":510,"tag":521,"props":545,"children":546},{},[547],{"type":515,"value":548},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":510,"tag":511,"props":550,"children":551},{},[552],{"type":515,"value":553},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":510,"tag":511,"props":555,"children":556},{},[557],{"type":515,"value":558},"必须 原地 修改，只允许使用额外常数空间。",{"type":510,"tag":511,"props":560,"children":561},{},[562],{"type":515,"value":563},"示例 1：",{"type":510,"tag":565,"props":566,"children":569},"pre",{"className":567,"code":568,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[570],{"type":510,"tag":571,"props":572,"children":573},"code",{"__ignoreMap":503},[574,585],{"type":510,"tag":575,"props":576,"children":579},"span",{"class":577,"line":578},"line",1,[580],{"type":510,"tag":575,"props":581,"children":582},{},[583],{"type":515,"value":584},"输入：nums = [1,2,3]\n",{"type":510,"tag":575,"props":586,"children":588},{"class":577,"line":587},2,[589],{"type":510,"tag":575,"props":590,"children":591},{},[592],{"type":515,"value":593},"输出：[1,3,2]\n",{"type":510,"tag":511,"props":595,"children":596},{},[597],{"type":515,"value":598},"示例 2：",{"type":510,"tag":565,"props":600,"children":602},{"className":567,"code":601,"language":515,"meta":503,"style":503},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[603],{"type":510,"tag":571,"props":604,"children":605},{"__ignoreMap":503},[606,614],{"type":510,"tag":575,"props":607,"children":608},{"class":577,"line":578},[609],{"type":510,"tag":575,"props":610,"children":611},{},[612],{"type":515,"value":613},"输入：nums = [3,2,1]\n",{"type":510,"tag":575,"props":615,"children":616},{"class":577,"line":587},[617],{"type":510,"tag":575,"props":618,"children":619},{},[620],{"type":515,"value":621},"输出：[1,2,3]\n",{"type":510,"tag":511,"props":623,"children":624},{},[625],{"type":515,"value":626},"示例 3：",{"type":510,"tag":565,"props":628,"children":630},{"className":567,"code":629,"language":515,"meta":503,"style":503},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[631],{"type":510,"tag":571,"props":632,"children":633},{"__ignoreMap":503},[634,642],{"type":510,"tag":575,"props":635,"children":636},{"class":577,"line":578},[637],{"type":510,"tag":575,"props":638,"children":639},{},[640],{"type":515,"value":641},"输入：nums = [1,1,5]\n",{"type":510,"tag":575,"props":643,"children":644},{"class":577,"line":587},[645],{"type":510,"tag":575,"props":646,"children":647},{},[648],{"type":515,"value":649},"输出：[1,5,1]\n",{"type":510,"tag":511,"props":651,"children":652},{},[653],{"type":515,"value":654},"提示：",{"type":510,"tag":517,"props":656,"children":657},{},[658,663],{"type":510,"tag":521,"props":659,"children":660},{},[661],{"type":515,"value":662},"1 \u003C= nums.length \u003C= 100",{"type":510,"tag":521,"props":664,"children":665},{},[666],{"type":515,"value":667},"0 \u003C= nums[i] \u003C= 100",{"type":510,"tag":669,"props":670,"children":672},"h2",{"id":671},"解题思路",[673],{"type":515,"value":671},{"type":510,"tag":669,"props":675,"children":677},{"id":676},"实现",[678],{"type":515,"value":676},{"type":510,"tag":680,"props":681,"children":683},"h3",{"id":682},"双指针",[684],{"type":515,"value":682},{"type":510,"tag":565,"props":686,"children":690},{"className":687,"code":688,"language":689,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[691],{"type":510,"tag":571,"props":692,"children":693},{"__ignoreMap":503},[694,703,745,780,789,835,844,894,980,998,1007,1016,1049,1091,1161,1178,1187,1196,1281,1289,1298,1331,1372,1406,1487,1505,1522,1530],{"type":510,"tag":575,"props":695,"children":696},{"class":577,"line":578},[697],{"type":510,"tag":575,"props":698,"children":700},{"style":699},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[701],{"type":515,"value":702},"/**\n",{"type":510,"tag":575,"props":704,"children":705},{"class":577,"line":587},[706,711,717,723,728,734,739],{"type":510,"tag":575,"props":707,"children":708},{"style":699},[709],{"type":515,"value":710}," * ",{"type":510,"tag":575,"props":712,"children":714},{"style":713},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[715],{"type":515,"value":716},"@",{"type":510,"tag":575,"props":718,"children":720},{"style":719},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[721],{"type":515,"value":722},"param",{"type":510,"tag":575,"props":724,"children":725},{"style":713},[726],{"type":515,"value":727}," {",{"type":510,"tag":575,"props":729,"children":731},{"style":730},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[732],{"type":515,"value":733},"number[]",{"type":510,"tag":575,"props":735,"children":736},{"style":713},[737],{"type":515,"value":738},"}",{"type":510,"tag":575,"props":740,"children":742},{"style":741},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[743],{"type":515,"value":744}," nums\n",{"type":510,"tag":575,"props":746,"children":748},{"class":577,"line":747},3,[749,753,757,762,766,771,775],{"type":510,"tag":575,"props":750,"children":751},{"style":699},[752],{"type":515,"value":710},{"type":510,"tag":575,"props":754,"children":755},{"style":713},[756],{"type":515,"value":716},{"type":510,"tag":575,"props":758,"children":759},{"style":719},[760],{"type":515,"value":761},"return",{"type":510,"tag":575,"props":763,"children":764},{"style":713},[765],{"type":515,"value":727},{"type":510,"tag":575,"props":767,"children":768},{"style":730},[769],{"type":515,"value":770},"void",{"type":510,"tag":575,"props":772,"children":773},{"style":713},[774],{"type":515,"value":738},{"type":510,"tag":575,"props":776,"children":777},{"style":699},[778],{"type":515,"value":779}," Do not return anything, modify nums in-place instead.\n",{"type":510,"tag":575,"props":781,"children":783},{"class":577,"line":782},4,[784],{"type":510,"tag":575,"props":785,"children":786},{"style":699},[787],{"type":515,"value":788}," */\n",{"type":510,"tag":575,"props":790,"children":792},{"class":577,"line":791},5,[793,799,805,810,815,820,825,830],{"type":510,"tag":575,"props":794,"children":796},{"style":795},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[797],{"type":515,"value":798},"var",{"type":510,"tag":575,"props":800,"children":802},{"style":801},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[803],{"type":515,"value":804}," nextPermutation",{"type":510,"tag":575,"props":806,"children":807},{"style":713},[808],{"type":515,"value":809}," =",{"type":510,"tag":575,"props":811,"children":812},{"style":795},[813],{"type":515,"value":814}," function",{"type":510,"tag":575,"props":816,"children":817},{"style":713},[818],{"type":515,"value":819}," (",{"type":510,"tag":575,"props":821,"children":822},{"style":741},[823],{"type":515,"value":824},"nums",{"type":510,"tag":575,"props":826,"children":827},{"style":713},[828],{"type":515,"value":829},")",{"type":510,"tag":575,"props":831,"children":832},{"style":713},[833],{"type":515,"value":834}," {\n",{"type":510,"tag":575,"props":836,"children":838},{"class":577,"line":837},6,[839],{"type":510,"tag":575,"props":840,"children":841},{"style":699},[842],{"type":515,"value":843},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":510,"tag":575,"props":845,"children":847},{"class":577,"line":846},7,[848,853,858,862,867,872,878,883,889],{"type":510,"tag":575,"props":849,"children":850},{"style":795},[851],{"type":515,"value":852},"  let",{"type":510,"tag":575,"props":854,"children":855},{"style":741},[856],{"type":515,"value":857}," i",{"type":510,"tag":575,"props":859,"children":860},{"style":713},[861],{"type":515,"value":809},{"type":510,"tag":575,"props":863,"children":864},{"style":741},[865],{"type":515,"value":866}," nums",{"type":510,"tag":575,"props":868,"children":869},{"style":713},[870],{"type":515,"value":871},".",{"type":510,"tag":575,"props":873,"children":875},{"style":874},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[876],{"type":515,"value":877},"length",{"type":510,"tag":575,"props":879,"children":880},{"style":795},[881],{"type":515,"value":882}," -",{"type":510,"tag":575,"props":884,"children":886},{"style":885},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[887],{"type":515,"value":888}," 2",{"type":510,"tag":575,"props":890,"children":891},{"style":713},[892],{"type":515,"value":893},";\n",{"type":510,"tag":575,"props":895,"children":897},{"class":577,"line":896},8,[898,903,907,912,917,922,927,931,936,940,945,949,953,957,961,966,971,976],{"type":510,"tag":575,"props":899,"children":900},{"style":719},[901],{"type":515,"value":902},"  while",{"type":510,"tag":575,"props":904,"children":905},{"style":713},[906],{"type":515,"value":819},{"type":510,"tag":575,"props":908,"children":909},{"style":741},[910],{"type":515,"value":911},"i",{"type":510,"tag":575,"props":913,"children":914},{"style":713},[915],{"type":515,"value":916}," >=",{"type":510,"tag":575,"props":918,"children":919},{"style":885},[920],{"type":515,"value":921}," 0",{"type":510,"tag":575,"props":923,"children":924},{"style":795},[925],{"type":515,"value":926}," &&",{"type":510,"tag":575,"props":928,"children":929},{"style":741},[930],{"type":515,"value":866},{"type":510,"tag":575,"props":932,"children":933},{"style":713},[934],{"type":515,"value":935},"[",{"type":510,"tag":575,"props":937,"children":938},{"style":741},[939],{"type":515,"value":911},{"type":510,"tag":575,"props":941,"children":942},{"style":713},[943],{"type":515,"value":944},"]",{"type":510,"tag":575,"props":946,"children":947},{"style":713},[948],{"type":515,"value":916},{"type":510,"tag":575,"props":950,"children":951},{"style":741},[952],{"type":515,"value":866},{"type":510,"tag":575,"props":954,"children":955},{"style":713},[956],{"type":515,"value":935},{"type":510,"tag":575,"props":958,"children":959},{"style":741},[960],{"type":515,"value":911},{"type":510,"tag":575,"props":962,"children":963},{"style":795},[964],{"type":515,"value":965}," +",{"type":510,"tag":575,"props":967,"children":968},{"style":885},[969],{"type":515,"value":970}," 1",{"type":510,"tag":575,"props":972,"children":973},{"style":713},[974],{"type":515,"value":975},"])",{"type":510,"tag":575,"props":977,"children":978},{"style":713},[979],{"type":515,"value":834},{"type":510,"tag":575,"props":981,"children":983},{"class":577,"line":982},9,[984,989,994],{"type":510,"tag":575,"props":985,"children":986},{"style":741},[987],{"type":515,"value":988},"    i",{"type":510,"tag":575,"props":990,"children":991},{"style":795},[992],{"type":515,"value":993},"--",{"type":510,"tag":575,"props":995,"children":996},{"style":713},[997],{"type":515,"value":893},{"type":510,"tag":575,"props":999,"children":1001},{"class":577,"line":1000},10,[1002],{"type":510,"tag":575,"props":1003,"children":1004},{"style":713},[1005],{"type":515,"value":1006},"  }\n",{"type":510,"tag":575,"props":1008,"children":1010},{"class":577,"line":1009},11,[1011],{"type":510,"tag":575,"props":1012,"children":1013},{"style":699},[1014],{"type":515,"value":1015},"  // i 在数组中存在，进行交换\n",{"type":510,"tag":575,"props":1017,"children":1019},{"class":577,"line":1018},12,[1020,1025,1029,1033,1037,1041,1045],{"type":510,"tag":575,"props":1021,"children":1022},{"style":719},[1023],{"type":515,"value":1024},"  if",{"type":510,"tag":575,"props":1026,"children":1027},{"style":713},[1028],{"type":515,"value":819},{"type":510,"tag":575,"props":1030,"children":1031},{"style":741},[1032],{"type":515,"value":911},{"type":510,"tag":575,"props":1034,"children":1035},{"style":713},[1036],{"type":515,"value":916},{"type":510,"tag":575,"props":1038,"children":1039},{"style":885},[1040],{"type":515,"value":921},{"type":510,"tag":575,"props":1042,"children":1043},{"style":713},[1044],{"type":515,"value":829},{"type":510,"tag":575,"props":1046,"children":1047},{"style":713},[1048],{"type":515,"value":834},{"type":510,"tag":575,"props":1050,"children":1052},{"class":577,"line":1051},13,[1053,1058,1063,1067,1071,1075,1079,1083,1087],{"type":510,"tag":575,"props":1054,"children":1055},{"style":795},[1056],{"type":515,"value":1057},"    let",{"type":510,"tag":575,"props":1059,"children":1060},{"style":741},[1061],{"type":515,"value":1062}," j",{"type":510,"tag":575,"props":1064,"children":1065},{"style":713},[1066],{"type":515,"value":809},{"type":510,"tag":575,"props":1068,"children":1069},{"style":741},[1070],{"type":515,"value":866},{"type":510,"tag":575,"props":1072,"children":1073},{"style":713},[1074],{"type":515,"value":871},{"type":510,"tag":575,"props":1076,"children":1077},{"style":874},[1078],{"type":515,"value":877},{"type":510,"tag":575,"props":1080,"children":1081},{"style":795},[1082],{"type":515,"value":882},{"type":510,"tag":575,"props":1084,"children":1085},{"style":885},[1086],{"type":515,"value":970},{"type":510,"tag":575,"props":1088,"children":1089},{"style":713},[1090],{"type":515,"value":893},{"type":510,"tag":575,"props":1092,"children":1094},{"class":577,"line":1093},14,[1095,1100,1104,1109,1113,1117,1121,1125,1129,1133,1137,1141,1145,1149,1153,1157],{"type":510,"tag":575,"props":1096,"children":1097},{"style":719},[1098],{"type":515,"value":1099},"    while",{"type":510,"tag":575,"props":1101,"children":1102},{"style":713},[1103],{"type":515,"value":819},{"type":510,"tag":575,"props":1105,"children":1106},{"style":741},[1107],{"type":515,"value":1108},"j",{"type":510,"tag":575,"props":1110,"children":1111},{"style":713},[1112],{"type":515,"value":916},{"type":510,"tag":575,"props":1114,"children":1115},{"style":885},[1116],{"type":515,"value":921},{"type":510,"tag":575,"props":1118,"children":1119},{"style":795},[1120],{"type":515,"value":926},{"type":510,"tag":575,"props":1122,"children":1123},{"style":741},[1124],{"type":515,"value":866},{"type":510,"tag":575,"props":1126,"children":1127},{"style":713},[1128],{"type":515,"value":935},{"type":510,"tag":575,"props":1130,"children":1131},{"style":741},[1132],{"type":515,"value":911},{"type":510,"tag":575,"props":1134,"children":1135},{"style":713},[1136],{"type":515,"value":944},{"type":510,"tag":575,"props":1138,"children":1139},{"style":713},[1140],{"type":515,"value":916},{"type":510,"tag":575,"props":1142,"children":1143},{"style":741},[1144],{"type":515,"value":866},{"type":510,"tag":575,"props":1146,"children":1147},{"style":713},[1148],{"type":515,"value":935},{"type":510,"tag":575,"props":1150,"children":1151},{"style":741},[1152],{"type":515,"value":1108},{"type":510,"tag":575,"props":1154,"children":1155},{"style":713},[1156],{"type":515,"value":975},{"type":510,"tag":575,"props":1158,"children":1159},{"style":713},[1160],{"type":515,"value":834},{"type":510,"tag":575,"props":1162,"children":1164},{"class":577,"line":1163},15,[1165,1170,1174],{"type":510,"tag":575,"props":1166,"children":1167},{"style":741},[1168],{"type":515,"value":1169},"      j",{"type":510,"tag":575,"props":1171,"children":1172},{"style":795},[1173],{"type":515,"value":993},{"type":510,"tag":575,"props":1175,"children":1176},{"style":713},[1177],{"type":515,"value":893},{"type":510,"tag":575,"props":1179,"children":1181},{"class":577,"line":1180},16,[1182],{"type":510,"tag":575,"props":1183,"children":1184},{"style":713},[1185],{"type":515,"value":1186},"    }\n",{"type":510,"tag":575,"props":1188,"children":1190},{"class":577,"line":1189},17,[1191],{"type":510,"tag":575,"props":1192,"children":1193},{"style":699},[1194],{"type":515,"value":1195},"    // 交换\n",{"type":510,"tag":575,"props":1197,"children":1199},{"class":577,"line":1198},18,[1200,1205,1209,1213,1217,1222,1226,1230,1234,1239,1243,1248,1252,1256,1260,1264,1268,1272,1276],{"type":510,"tag":575,"props":1201,"children":1202},{"style":713},[1203],{"type":515,"value":1204},"    [",{"type":510,"tag":575,"props":1206,"children":1207},{"style":741},[1208],{"type":515,"value":824},{"type":510,"tag":575,"props":1210,"children":1211},{"style":713},[1212],{"type":515,"value":935},{"type":510,"tag":575,"props":1214,"children":1215},{"style":741},[1216],{"type":515,"value":911},{"type":510,"tag":575,"props":1218,"children":1219},{"style":713},[1220],{"type":515,"value":1221},"],",{"type":510,"tag":575,"props":1223,"children":1224},{"style":741},[1225],{"type":515,"value":866},{"type":510,"tag":575,"props":1227,"children":1228},{"style":713},[1229],{"type":515,"value":935},{"type":510,"tag":575,"props":1231,"children":1232},{"style":741},[1233],{"type":515,"value":1108},{"type":510,"tag":575,"props":1235,"children":1236},{"style":713},[1237],{"type":515,"value":1238},"]]",{"type":510,"tag":575,"props":1240,"children":1241},{"style":713},[1242],{"type":515,"value":809},{"type":510,"tag":575,"props":1244,"children":1245},{"style":713},[1246],{"type":515,"value":1247}," [",{"type":510,"tag":575,"props":1249,"children":1250},{"style":741},[1251],{"type":515,"value":824},{"type":510,"tag":575,"props":1253,"children":1254},{"style":713},[1255],{"type":515,"value":935},{"type":510,"tag":575,"props":1257,"children":1258},{"style":741},[1259],{"type":515,"value":1108},{"type":510,"tag":575,"props":1261,"children":1262},{"style":713},[1263],{"type":515,"value":1221},{"type":510,"tag":575,"props":1265,"children":1266},{"style":741},[1267],{"type":515,"value":866},{"type":510,"tag":575,"props":1269,"children":1270},{"style":713},[1271],{"type":515,"value":935},{"type":510,"tag":575,"props":1273,"children":1274},{"style":741},[1275],{"type":515,"value":911},{"type":510,"tag":575,"props":1277,"children":1278},{"style":713},[1279],{"type":515,"value":1280},"]];\n",{"type":510,"tag":575,"props":1282,"children":1284},{"class":577,"line":1283},19,[1285],{"type":510,"tag":575,"props":1286,"children":1287},{"style":713},[1288],{"type":515,"value":1006},{"type":510,"tag":575,"props":1290,"children":1292},{"class":577,"line":1291},20,[1293],{"type":510,"tag":575,"props":1294,"children":1295},{"style":699},[1296],{"type":515,"value":1297},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":510,"tag":575,"props":1299,"children":1301},{"class":577,"line":1300},21,[1302,1306,1311,1315,1319,1323,1327],{"type":510,"tag":575,"props":1303,"children":1304},{"style":795},[1305],{"type":515,"value":852},{"type":510,"tag":575,"props":1307,"children":1308},{"style":741},[1309],{"type":515,"value":1310}," l",{"type":510,"tag":575,"props":1312,"children":1313},{"style":713},[1314],{"type":515,"value":809},{"type":510,"tag":575,"props":1316,"children":1317},{"style":741},[1318],{"type":515,"value":857},{"type":510,"tag":575,"props":1320,"children":1321},{"style":795},[1322],{"type":515,"value":965},{"type":510,"tag":575,"props":1324,"children":1325},{"style":885},[1326],{"type":515,"value":970},{"type":510,"tag":575,"props":1328,"children":1329},{"style":713},[1330],{"type":515,"value":893},{"type":510,"tag":575,"props":1332,"children":1334},{"class":577,"line":1333},22,[1335,1339,1344,1348,1352,1356,1360,1364,1368],{"type":510,"tag":575,"props":1336,"children":1337},{"style":795},[1338],{"type":515,"value":852},{"type":510,"tag":575,"props":1340,"children":1341},{"style":741},[1342],{"type":515,"value":1343}," r",{"type":510,"tag":575,"props":1345,"children":1346},{"style":713},[1347],{"type":515,"value":809},{"type":510,"tag":575,"props":1349,"children":1350},{"style":741},[1351],{"type":515,"value":866},{"type":510,"tag":575,"props":1353,"children":1354},{"style":713},[1355],{"type":515,"value":871},{"type":510,"tag":575,"props":1357,"children":1358},{"style":874},[1359],{"type":515,"value":877},{"type":510,"tag":575,"props":1361,"children":1362},{"style":795},[1363],{"type":515,"value":882},{"type":510,"tag":575,"props":1365,"children":1366},{"style":885},[1367],{"type":515,"value":970},{"type":510,"tag":575,"props":1369,"children":1370},{"style":713},[1371],{"type":515,"value":893},{"type":510,"tag":575,"props":1373,"children":1375},{"class":577,"line":1374},23,[1376,1380,1384,1389,1394,1398,1402],{"type":510,"tag":575,"props":1377,"children":1378},{"style":719},[1379],{"type":515,"value":902},{"type":510,"tag":575,"props":1381,"children":1382},{"style":713},[1383],{"type":515,"value":819},{"type":510,"tag":575,"props":1385,"children":1386},{"style":741},[1387],{"type":515,"value":1388},"l",{"type":510,"tag":575,"props":1390,"children":1391},{"style":713},[1392],{"type":515,"value":1393}," \u003C",{"type":510,"tag":575,"props":1395,"children":1396},{"style":741},[1397],{"type":515,"value":1343},{"type":510,"tag":575,"props":1399,"children":1400},{"style":713},[1401],{"type":515,"value":829},{"type":510,"tag":575,"props":1403,"children":1404},{"style":713},[1405],{"type":515,"value":834},{"type":510,"tag":575,"props":1407,"children":1409},{"class":577,"line":1408},24,[1410,1414,1418,1422,1426,1430,1434,1438,1443,1447,1451,1455,1459,1463,1467,1471,1475,1479,1483],{"type":510,"tag":575,"props":1411,"children":1412},{"style":713},[1413],{"type":515,"value":1204},{"type":510,"tag":575,"props":1415,"children":1416},{"style":741},[1417],{"type":515,"value":824},{"type":510,"tag":575,"props":1419,"children":1420},{"style":713},[1421],{"type":515,"value":935},{"type":510,"tag":575,"props":1423,"children":1424},{"style":741},[1425],{"type":515,"value":1388},{"type":510,"tag":575,"props":1427,"children":1428},{"style":713},[1429],{"type":515,"value":1221},{"type":510,"tag":575,"props":1431,"children":1432},{"style":741},[1433],{"type":515,"value":866},{"type":510,"tag":575,"props":1435,"children":1436},{"style":713},[1437],{"type":515,"value":935},{"type":510,"tag":575,"props":1439,"children":1440},{"style":741},[1441],{"type":515,"value":1442},"r",{"type":510,"tag":575,"props":1444,"children":1445},{"style":713},[1446],{"type":515,"value":1238},{"type":510,"tag":575,"props":1448,"children":1449},{"style":713},[1450],{"type":515,"value":809},{"type":510,"tag":575,"props":1452,"children":1453},{"style":713},[1454],{"type":515,"value":1247},{"type":510,"tag":575,"props":1456,"children":1457},{"style":741},[1458],{"type":515,"value":824},{"type":510,"tag":575,"props":1460,"children":1461},{"style":713},[1462],{"type":515,"value":935},{"type":510,"tag":575,"props":1464,"children":1465},{"style":741},[1466],{"type":515,"value":1442},{"type":510,"tag":575,"props":1468,"children":1469},{"style":713},[1470],{"type":515,"value":1221},{"type":510,"tag":575,"props":1472,"children":1473},{"style":741},[1474],{"type":515,"value":866},{"type":510,"tag":575,"props":1476,"children":1477},{"style":713},[1478],{"type":515,"value":935},{"type":510,"tag":575,"props":1480,"children":1481},{"style":741},[1482],{"type":515,"value":1388},{"type":510,"tag":575,"props":1484,"children":1485},{"style":713},[1486],{"type":515,"value":1280},{"type":510,"tag":575,"props":1488,"children":1490},{"class":577,"line":1489},25,[1491,1496,1501],{"type":510,"tag":575,"props":1492,"children":1493},{"style":741},[1494],{"type":515,"value":1495},"    l",{"type":510,"tag":575,"props":1497,"children":1498},{"style":795},[1499],{"type":515,"value":1500},"++",{"type":510,"tag":575,"props":1502,"children":1503},{"style":713},[1504],{"type":515,"value":893},{"type":510,"tag":575,"props":1506,"children":1508},{"class":577,"line":1507},26,[1509,1514,1518],{"type":510,"tag":575,"props":1510,"children":1511},{"style":741},[1512],{"type":515,"value":1513},"    r",{"type":510,"tag":575,"props":1515,"children":1516},{"style":795},[1517],{"type":515,"value":993},{"type":510,"tag":575,"props":1519,"children":1520},{"style":713},[1521],{"type":515,"value":893},{"type":510,"tag":575,"props":1523,"children":1525},{"class":577,"line":1524},27,[1526],{"type":510,"tag":575,"props":1527,"children":1528},{"style":713},[1529],{"type":515,"value":1006},{"type":510,"tag":575,"props":1531,"children":1533},{"class":577,"line":1532},28,[1534],{"type":510,"tag":575,"props":1535,"children":1536},{"style":713},[1537],{"type":515,"value":1538},"};\n",{"type":510,"tag":1540,"props":1541,"children":1542},"style",{},[1543],{"type":515,"value":1544},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":791,"depth":791,"links":1546},[1547,1548],{"id":671,"depth":587,"text":671},{"id":676,"depth":587,"text":676,"children":1549},[1550],{"id":682,"depth":747,"text":682},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1557,1559],{"_path":102,"title":101,"description":1558},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":108,"title":107,"description":1560},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1714054335739]