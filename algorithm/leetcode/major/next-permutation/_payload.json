[{"data":1,"prerenderedAt":1515},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/next-permutation":466,"/algorithm/leetcode/major/next-permutation-surround":1510},[4,269,298,443,451],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"前端八股文","/frontend-endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/frontend-endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/frontend-endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/frontend-endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":442},"前端代码考核","/frontend-code-assessment",[302,351,435],{"title":303,"_path":304,"children":305},"源码实现","/frontend-code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/frontend-code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/frontend-code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/frontend-code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/frontend-code-assessment/scene",[355,377,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432],{"title":356,"_path":357,"children":358},"Promise","/frontend-code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[381],{"title":382,"_path":383},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":385,"_path":386},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":388,"_path":389},"倒计时","/frontend-code-assessment/scene/countdown",{"title":391,"_path":392},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":394,"_path":395},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":397,"_path":398},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":400,"_path":401},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":403,"_path":404},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":406,"_path":407},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":409,"_path":410},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":412,"_path":413},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":415,"_path":416},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":418,"_path":419},"随机数","/frontend-code-assessment/scene/random-number",{"title":421,"_path":422},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":424,"_path":425},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":427,"_path":428},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":430,"_path":431},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":433,"_path":434},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":436,"_path":437,"children":438},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[439],{"title":440,"_path":441},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":444,"_path":445,"children":446,"icon":450},"项目","/pro",[447],{"title":448,"_path":449},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":452,"_path":453,"children":454,"icon":465},"后端语言","/backend-languages",[455],{"title":456,"_path":457,"children":458},"Python","/backend-languages/python",[459,462],{"title":460,"_path":461},"基础","/backend-languages/python/base",{"title":463,"_path":464},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":105,"_dir":467,"_draft":468,"_partial":468,"_locale":469,"title":104,"description":470,"url":471,"body":472,"_type":1505,"_id":1506,"_source":1507,"_file":1508,"_extension":1509},"major",false,"","整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。","https://leetcode.cn/problems/next-permutation",{"type":473,"children":474,"toc":1499},"root",[475,482,492,497,515,520,525,530,560,565,588,593,616,621,634,640,645,651,1493],{"type":476,"tag":477,"props":478,"children":479},"element","p",{},[480],{"type":481,"value":470},"text",{"type":476,"tag":483,"props":484,"children":485},"ul",{},[486],{"type":476,"tag":487,"props":488,"children":489},"li",{},[490],{"type":481,"value":491},"例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[1,2,3]、[1,3,2]、[3,1,2]、[2,3,1] 。",{"type":476,"tag":477,"props":493,"children":494},{},[495],{"type":481,"value":496},"整数数组的 下一个排列 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 下一个排列 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。",{"type":476,"tag":483,"props":498,"children":499},{},[500,505,510],{"type":476,"tag":487,"props":501,"children":502},{},[503],{"type":481,"value":504},"例如，arr = [1,2,3] 的下一个排列是 [1,3,2] 。",{"type":476,"tag":487,"props":506,"children":507},{},[508],{"type":481,"value":509},"类似地，arr = [2,3,1] 的下一个排列是 [3,1,2] 。",{"type":476,"tag":487,"props":511,"children":512},{},[513],{"type":481,"value":514},"而 arr = [3,2,1] 的下一个排列是 [1,2,3] ，因为 [3,2,1] 不存在一个字典序更大的排列。",{"type":476,"tag":477,"props":516,"children":517},{},[518],{"type":481,"value":519},"给你一个整数数组 nums ，找出 nums 的下一个排列。",{"type":476,"tag":477,"props":521,"children":522},{},[523],{"type":481,"value":524},"必须 原地 修改，只允许使用额外常数空间。",{"type":476,"tag":477,"props":526,"children":527},{},[528],{"type":481,"value":529},"示例 1：",{"type":476,"tag":531,"props":532,"children":535},"pre",{"className":533,"code":534,"language":481,"meta":469,"style":469},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：nums = [1,2,3]\n输出：[1,3,2]\n",[536],{"type":476,"tag":537,"props":538,"children":539},"code",{"__ignoreMap":469},[540,551],{"type":476,"tag":541,"props":542,"children":545},"span",{"class":543,"line":544},"line",1,[546],{"type":476,"tag":541,"props":547,"children":548},{},[549],{"type":481,"value":550},"输入：nums = [1,2,3]\n",{"type":476,"tag":541,"props":552,"children":554},{"class":543,"line":553},2,[555],{"type":476,"tag":541,"props":556,"children":557},{},[558],{"type":481,"value":559},"输出：[1,3,2]\n",{"type":476,"tag":477,"props":561,"children":562},{},[563],{"type":481,"value":564},"示例 2：",{"type":476,"tag":531,"props":566,"children":568},{"className":533,"code":567,"language":481,"meta":469,"style":469},"输入：nums = [3,2,1]\n输出：[1,2,3]\n",[569],{"type":476,"tag":537,"props":570,"children":571},{"__ignoreMap":469},[572,580],{"type":476,"tag":541,"props":573,"children":574},{"class":543,"line":544},[575],{"type":476,"tag":541,"props":576,"children":577},{},[578],{"type":481,"value":579},"输入：nums = [3,2,1]\n",{"type":476,"tag":541,"props":581,"children":582},{"class":543,"line":553},[583],{"type":476,"tag":541,"props":584,"children":585},{},[586],{"type":481,"value":587},"输出：[1,2,3]\n",{"type":476,"tag":477,"props":589,"children":590},{},[591],{"type":481,"value":592},"示例 3：",{"type":476,"tag":531,"props":594,"children":596},{"className":533,"code":595,"language":481,"meta":469,"style":469},"输入：nums = [1,1,5]\n输出：[1,5,1]\n",[597],{"type":476,"tag":537,"props":598,"children":599},{"__ignoreMap":469},[600,608],{"type":476,"tag":541,"props":601,"children":602},{"class":543,"line":544},[603],{"type":476,"tag":541,"props":604,"children":605},{},[606],{"type":481,"value":607},"输入：nums = [1,1,5]\n",{"type":476,"tag":541,"props":609,"children":610},{"class":543,"line":553},[611],{"type":476,"tag":541,"props":612,"children":613},{},[614],{"type":481,"value":615},"输出：[1,5,1]\n",{"type":476,"tag":477,"props":617,"children":618},{},[619],{"type":481,"value":620},"提示：",{"type":476,"tag":483,"props":622,"children":623},{},[624,629],{"type":476,"tag":487,"props":625,"children":626},{},[627],{"type":481,"value":628},"1 \u003C= nums.length \u003C= 100",{"type":476,"tag":487,"props":630,"children":631},{},[632],{"type":481,"value":633},"0 \u003C= nums[i] \u003C= 100",{"type":476,"tag":635,"props":636,"children":638},"h2",{"id":637},"解题思路",[639],{"type":481,"value":637},{"type":476,"tag":635,"props":641,"children":643},{"id":642},"实现",[644],{"type":481,"value":642},{"type":476,"tag":646,"props":647,"children":649},"h3",{"id":648},"双指针",[650],{"type":481,"value":648},{"type":476,"tag":531,"props":652,"children":656},{"className":653,"code":654,"language":655,"meta":469,"style":469},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar nextPermutation = function (nums) {\n  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n  let i = nums.length - 2;\n  while (i >= 0 && nums[i] >= nums[i + 1]) {\n    i--;\n  }\n  // i 在数组中存在，进行交换\n  if (i >= 0) {\n    let j = nums.length - 1;\n    while (j >= 0 && nums[i] >= nums[j]) {\n      j--;\n    }\n    // 交换\n    [nums[i], nums[j]] = [nums[j], nums[i]];\n  }\n  // i 不存在，说明是递减序列，则 i 是 -1\n  let l = i + 1;\n  let r = nums.length - 1;\n  while (l \u003C r) {\n    [nums[l], nums[r]] = [nums[r], nums[l]];\n    l++;\n    r--;\n  }\n};\n","js",[657],{"type":476,"tag":537,"props":658,"children":659},{"__ignoreMap":469},[660,669,695,718,727,771,780,832,916,934,943,952,981,1023,1089,1106,1115,1124,1223,1231,1240,1273,1314,1344,1437,1455,1472,1480],{"type":476,"tag":541,"props":661,"children":662},{"class":543,"line":544},[663],{"type":476,"tag":541,"props":664,"children":666},{"style":665},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[667],{"type":481,"value":668},"/**\n",{"type":476,"tag":541,"props":670,"children":671},{"class":543,"line":553},[672,677,683,689],{"type":476,"tag":541,"props":673,"children":674},{"style":665},[675],{"type":481,"value":676}," * ",{"type":476,"tag":541,"props":678,"children":680},{"style":679},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[681],{"type":481,"value":682},"@param",{"type":476,"tag":541,"props":684,"children":686},{"style":685},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[687],{"type":481,"value":688}," {number[]}",{"type":476,"tag":541,"props":690,"children":692},{"style":691},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[693],{"type":481,"value":694}," nums\n",{"type":476,"tag":541,"props":696,"children":698},{"class":543,"line":697},3,[699,703,708,713],{"type":476,"tag":541,"props":700,"children":701},{"style":665},[702],{"type":481,"value":676},{"type":476,"tag":541,"props":704,"children":705},{"style":679},[706],{"type":481,"value":707},"@return",{"type":476,"tag":541,"props":709,"children":710},{"style":685},[711],{"type":481,"value":712}," {void}",{"type":476,"tag":541,"props":714,"children":715},{"style":665},[716],{"type":481,"value":717}," Do not return anything, modify nums in-place instead.\n",{"type":476,"tag":541,"props":719,"children":721},{"class":543,"line":720},4,[722],{"type":476,"tag":541,"props":723,"children":724},{"style":665},[725],{"type":481,"value":726}," */\n",{"type":476,"tag":541,"props":728,"children":730},{"class":543,"line":729},5,[731,737,743,749,754,760,766],{"type":476,"tag":541,"props":732,"children":734},{"style":733},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[735],{"type":481,"value":736},"var",{"type":476,"tag":541,"props":738,"children":740},{"style":739},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[741],{"type":481,"value":742}," nextPermutation",{"type":476,"tag":541,"props":744,"children":746},{"style":745},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[747],{"type":481,"value":748}," =",{"type":476,"tag":541,"props":750,"children":751},{"style":733},[752],{"type":481,"value":753}," function",{"type":476,"tag":541,"props":755,"children":757},{"style":756},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[758],{"type":481,"value":759}," (",{"type":476,"tag":541,"props":761,"children":763},{"style":762},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[764],{"type":481,"value":765},"nums",{"type":476,"tag":541,"props":767,"children":768},{"style":756},[769],{"type":481,"value":770},") {\n",{"type":476,"tag":541,"props":772,"children":774},{"class":543,"line":773},6,[775],{"type":476,"tag":541,"props":776,"children":777},{"style":665},[778],{"type":481,"value":779},"  // 因为 nums[i + 1] 存在，所以 i + 1 就是最后一个元素\n",{"type":476,"tag":541,"props":781,"children":783},{"class":543,"line":782},7,[784,789,795,799,804,810,815,820,826],{"type":476,"tag":541,"props":785,"children":786},{"style":733},[787],{"type":481,"value":788},"  let",{"type":476,"tag":541,"props":790,"children":792},{"style":791},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[793],{"type":481,"value":794}," i",{"type":476,"tag":541,"props":796,"children":797},{"style":745},[798],{"type":481,"value":748},{"type":476,"tag":541,"props":800,"children":801},{"style":791},[802],{"type":481,"value":803}," nums",{"type":476,"tag":541,"props":805,"children":807},{"style":806},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[808],{"type":481,"value":809},".",{"type":476,"tag":541,"props":811,"children":812},{"style":756},[813],{"type":481,"value":814},"length ",{"type":476,"tag":541,"props":816,"children":817},{"style":745},[818],{"type":481,"value":819},"-",{"type":476,"tag":541,"props":821,"children":823},{"style":822},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[824],{"type":481,"value":825}," 2",{"type":476,"tag":541,"props":827,"children":829},{"style":828},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[830],{"type":481,"value":831},";\n",{"type":476,"tag":541,"props":833,"children":835},{"class":543,"line":834},8,[836,842,846,851,856,861,866,870,875,879,884,889,893,897,901,906,911],{"type":476,"tag":541,"props":837,"children":839},{"style":838},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[840],{"type":481,"value":841},"  while",{"type":476,"tag":541,"props":843,"children":844},{"style":756},[845],{"type":481,"value":759},{"type":476,"tag":541,"props":847,"children":848},{"style":791},[849],{"type":481,"value":850},"i",{"type":476,"tag":541,"props":852,"children":853},{"style":745},[854],{"type":481,"value":855}," >=",{"type":476,"tag":541,"props":857,"children":858},{"style":822},[859],{"type":481,"value":860}," 0",{"type":476,"tag":541,"props":862,"children":863},{"style":745},[864],{"type":481,"value":865}," &&",{"type":476,"tag":541,"props":867,"children":868},{"style":791},[869],{"type":481,"value":803},{"type":476,"tag":541,"props":871,"children":872},{"style":756},[873],{"type":481,"value":874},"[",{"type":476,"tag":541,"props":876,"children":877},{"style":791},[878],{"type":481,"value":850},{"type":476,"tag":541,"props":880,"children":881},{"style":756},[882],{"type":481,"value":883},"] ",{"type":476,"tag":541,"props":885,"children":886},{"style":745},[887],{"type":481,"value":888},">=",{"type":476,"tag":541,"props":890,"children":891},{"style":791},[892],{"type":481,"value":803},{"type":476,"tag":541,"props":894,"children":895},{"style":756},[896],{"type":481,"value":874},{"type":476,"tag":541,"props":898,"children":899},{"style":791},[900],{"type":481,"value":850},{"type":476,"tag":541,"props":902,"children":903},{"style":745},[904],{"type":481,"value":905}," +",{"type":476,"tag":541,"props":907,"children":908},{"style":822},[909],{"type":481,"value":910}," 1",{"type":476,"tag":541,"props":912,"children":913},{"style":756},[914],{"type":481,"value":915},"]) {\n",{"type":476,"tag":541,"props":917,"children":919},{"class":543,"line":918},9,[920,925,930],{"type":476,"tag":541,"props":921,"children":922},{"style":791},[923],{"type":481,"value":924},"    i",{"type":476,"tag":541,"props":926,"children":927},{"style":745},[928],{"type":481,"value":929},"--",{"type":476,"tag":541,"props":931,"children":932},{"style":828},[933],{"type":481,"value":831},{"type":476,"tag":541,"props":935,"children":937},{"class":543,"line":936},10,[938],{"type":476,"tag":541,"props":939,"children":940},{"style":756},[941],{"type":481,"value":942},"  }\n",{"type":476,"tag":541,"props":944,"children":946},{"class":543,"line":945},11,[947],{"type":476,"tag":541,"props":948,"children":949},{"style":665},[950],{"type":481,"value":951},"  // i 在数组中存在，进行交换\n",{"type":476,"tag":541,"props":953,"children":955},{"class":543,"line":954},12,[956,961,965,969,973,977],{"type":476,"tag":541,"props":957,"children":958},{"style":838},[959],{"type":481,"value":960},"  if",{"type":476,"tag":541,"props":962,"children":963},{"style":756},[964],{"type":481,"value":759},{"type":476,"tag":541,"props":966,"children":967},{"style":791},[968],{"type":481,"value":850},{"type":476,"tag":541,"props":970,"children":971},{"style":745},[972],{"type":481,"value":855},{"type":476,"tag":541,"props":974,"children":975},{"style":822},[976],{"type":481,"value":860},{"type":476,"tag":541,"props":978,"children":979},{"style":756},[980],{"type":481,"value":770},{"type":476,"tag":541,"props":982,"children":984},{"class":543,"line":983},13,[985,990,995,999,1003,1007,1011,1015,1019],{"type":476,"tag":541,"props":986,"children":987},{"style":733},[988],{"type":481,"value":989},"    let",{"type":476,"tag":541,"props":991,"children":992},{"style":791},[993],{"type":481,"value":994}," j",{"type":476,"tag":541,"props":996,"children":997},{"style":745},[998],{"type":481,"value":748},{"type":476,"tag":541,"props":1000,"children":1001},{"style":791},[1002],{"type":481,"value":803},{"type":476,"tag":541,"props":1004,"children":1005},{"style":806},[1006],{"type":481,"value":809},{"type":476,"tag":541,"props":1008,"children":1009},{"style":756},[1010],{"type":481,"value":814},{"type":476,"tag":541,"props":1012,"children":1013},{"style":745},[1014],{"type":481,"value":819},{"type":476,"tag":541,"props":1016,"children":1017},{"style":822},[1018],{"type":481,"value":910},{"type":476,"tag":541,"props":1020,"children":1021},{"style":828},[1022],{"type":481,"value":831},{"type":476,"tag":541,"props":1024,"children":1026},{"class":543,"line":1025},14,[1027,1032,1036,1041,1045,1049,1053,1057,1061,1065,1069,1073,1077,1081,1085],{"type":476,"tag":541,"props":1028,"children":1029},{"style":838},[1030],{"type":481,"value":1031},"    while",{"type":476,"tag":541,"props":1033,"children":1034},{"style":756},[1035],{"type":481,"value":759},{"type":476,"tag":541,"props":1037,"children":1038},{"style":791},[1039],{"type":481,"value":1040},"j",{"type":476,"tag":541,"props":1042,"children":1043},{"style":745},[1044],{"type":481,"value":855},{"type":476,"tag":541,"props":1046,"children":1047},{"style":822},[1048],{"type":481,"value":860},{"type":476,"tag":541,"props":1050,"children":1051},{"style":745},[1052],{"type":481,"value":865},{"type":476,"tag":541,"props":1054,"children":1055},{"style":791},[1056],{"type":481,"value":803},{"type":476,"tag":541,"props":1058,"children":1059},{"style":756},[1060],{"type":481,"value":874},{"type":476,"tag":541,"props":1062,"children":1063},{"style":791},[1064],{"type":481,"value":850},{"type":476,"tag":541,"props":1066,"children":1067},{"style":756},[1068],{"type":481,"value":883},{"type":476,"tag":541,"props":1070,"children":1071},{"style":745},[1072],{"type":481,"value":888},{"type":476,"tag":541,"props":1074,"children":1075},{"style":791},[1076],{"type":481,"value":803},{"type":476,"tag":541,"props":1078,"children":1079},{"style":756},[1080],{"type":481,"value":874},{"type":476,"tag":541,"props":1082,"children":1083},{"style":791},[1084],{"type":481,"value":1040},{"type":476,"tag":541,"props":1086,"children":1087},{"style":756},[1088],{"type":481,"value":915},{"type":476,"tag":541,"props":1090,"children":1092},{"class":543,"line":1091},15,[1093,1098,1102],{"type":476,"tag":541,"props":1094,"children":1095},{"style":791},[1096],{"type":481,"value":1097},"      j",{"type":476,"tag":541,"props":1099,"children":1100},{"style":745},[1101],{"type":481,"value":929},{"type":476,"tag":541,"props":1103,"children":1104},{"style":828},[1105],{"type":481,"value":831},{"type":476,"tag":541,"props":1107,"children":1109},{"class":543,"line":1108},16,[1110],{"type":476,"tag":541,"props":1111,"children":1112},{"style":756},[1113],{"type":481,"value":1114},"    }\n",{"type":476,"tag":541,"props":1116,"children":1118},{"class":543,"line":1117},17,[1119],{"type":476,"tag":541,"props":1120,"children":1121},{"style":665},[1122],{"type":481,"value":1123},"    // 交换\n",{"type":476,"tag":541,"props":1125,"children":1127},{"class":543,"line":1126},18,[1128,1133,1137,1141,1145,1150,1155,1159,1163,1167,1172,1177,1182,1186,1190,1194,1198,1202,1206,1210,1214,1219],{"type":476,"tag":541,"props":1129,"children":1130},{"style":756},[1131],{"type":481,"value":1132},"    [",{"type":476,"tag":541,"props":1134,"children":1135},{"style":791},[1136],{"type":481,"value":765},{"type":476,"tag":541,"props":1138,"children":1139},{"style":756},[1140],{"type":481,"value":874},{"type":476,"tag":541,"props":1142,"children":1143},{"style":791},[1144],{"type":481,"value":850},{"type":476,"tag":541,"props":1146,"children":1147},{"style":756},[1148],{"type":481,"value":1149},"]",{"type":476,"tag":541,"props":1151,"children":1152},{"style":828},[1153],{"type":481,"value":1154},",",{"type":476,"tag":541,"props":1156,"children":1157},{"style":791},[1158],{"type":481,"value":803},{"type":476,"tag":541,"props":1160,"children":1161},{"style":756},[1162],{"type":481,"value":874},{"type":476,"tag":541,"props":1164,"children":1165},{"style":791},[1166],{"type":481,"value":1040},{"type":476,"tag":541,"props":1168,"children":1169},{"style":756},[1170],{"type":481,"value":1171},"]] ",{"type":476,"tag":541,"props":1173,"children":1174},{"style":745},[1175],{"type":481,"value":1176},"=",{"type":476,"tag":541,"props":1178,"children":1179},{"style":756},[1180],{"type":481,"value":1181}," [",{"type":476,"tag":541,"props":1183,"children":1184},{"style":791},[1185],{"type":481,"value":765},{"type":476,"tag":541,"props":1187,"children":1188},{"style":756},[1189],{"type":481,"value":874},{"type":476,"tag":541,"props":1191,"children":1192},{"style":791},[1193],{"type":481,"value":1040},{"type":476,"tag":541,"props":1195,"children":1196},{"style":756},[1197],{"type":481,"value":1149},{"type":476,"tag":541,"props":1199,"children":1200},{"style":828},[1201],{"type":481,"value":1154},{"type":476,"tag":541,"props":1203,"children":1204},{"style":791},[1205],{"type":481,"value":803},{"type":476,"tag":541,"props":1207,"children":1208},{"style":756},[1209],{"type":481,"value":874},{"type":476,"tag":541,"props":1211,"children":1212},{"style":791},[1213],{"type":481,"value":850},{"type":476,"tag":541,"props":1215,"children":1216},{"style":756},[1217],{"type":481,"value":1218},"]]",{"type":476,"tag":541,"props":1220,"children":1221},{"style":828},[1222],{"type":481,"value":831},{"type":476,"tag":541,"props":1224,"children":1226},{"class":543,"line":1225},19,[1227],{"type":476,"tag":541,"props":1228,"children":1229},{"style":756},[1230],{"type":481,"value":942},{"type":476,"tag":541,"props":1232,"children":1234},{"class":543,"line":1233},20,[1235],{"type":476,"tag":541,"props":1236,"children":1237},{"style":665},[1238],{"type":481,"value":1239},"  // i 不存在，说明是递减序列，则 i 是 -1\n",{"type":476,"tag":541,"props":1241,"children":1243},{"class":543,"line":1242},21,[1244,1248,1253,1257,1261,1265,1269],{"type":476,"tag":541,"props":1245,"children":1246},{"style":733},[1247],{"type":481,"value":788},{"type":476,"tag":541,"props":1249,"children":1250},{"style":791},[1251],{"type":481,"value":1252}," l",{"type":476,"tag":541,"props":1254,"children":1255},{"style":745},[1256],{"type":481,"value":748},{"type":476,"tag":541,"props":1258,"children":1259},{"style":791},[1260],{"type":481,"value":794},{"type":476,"tag":541,"props":1262,"children":1263},{"style":745},[1264],{"type":481,"value":905},{"type":476,"tag":541,"props":1266,"children":1267},{"style":822},[1268],{"type":481,"value":910},{"type":476,"tag":541,"props":1270,"children":1271},{"style":828},[1272],{"type":481,"value":831},{"type":476,"tag":541,"props":1274,"children":1276},{"class":543,"line":1275},22,[1277,1281,1286,1290,1294,1298,1302,1306,1310],{"type":476,"tag":541,"props":1278,"children":1279},{"style":733},[1280],{"type":481,"value":788},{"type":476,"tag":541,"props":1282,"children":1283},{"style":791},[1284],{"type":481,"value":1285}," r",{"type":476,"tag":541,"props":1287,"children":1288},{"style":745},[1289],{"type":481,"value":748},{"type":476,"tag":541,"props":1291,"children":1292},{"style":791},[1293],{"type":481,"value":803},{"type":476,"tag":541,"props":1295,"children":1296},{"style":806},[1297],{"type":481,"value":809},{"type":476,"tag":541,"props":1299,"children":1300},{"style":756},[1301],{"type":481,"value":814},{"type":476,"tag":541,"props":1303,"children":1304},{"style":745},[1305],{"type":481,"value":819},{"type":476,"tag":541,"props":1307,"children":1308},{"style":822},[1309],{"type":481,"value":910},{"type":476,"tag":541,"props":1311,"children":1312},{"style":828},[1313],{"type":481,"value":831},{"type":476,"tag":541,"props":1315,"children":1317},{"class":543,"line":1316},23,[1318,1322,1326,1331,1336,1340],{"type":476,"tag":541,"props":1319,"children":1320},{"style":838},[1321],{"type":481,"value":841},{"type":476,"tag":541,"props":1323,"children":1324},{"style":756},[1325],{"type":481,"value":759},{"type":476,"tag":541,"props":1327,"children":1328},{"style":791},[1329],{"type":481,"value":1330},"l",{"type":476,"tag":541,"props":1332,"children":1333},{"style":745},[1334],{"type":481,"value":1335}," \u003C",{"type":476,"tag":541,"props":1337,"children":1338},{"style":791},[1339],{"type":481,"value":1285},{"type":476,"tag":541,"props":1341,"children":1342},{"style":756},[1343],{"type":481,"value":770},{"type":476,"tag":541,"props":1345,"children":1347},{"class":543,"line":1346},24,[1348,1352,1356,1360,1364,1368,1372,1376,1380,1385,1389,1393,1397,1401,1405,1409,1413,1417,1421,1425,1429,1433],{"type":476,"tag":541,"props":1349,"children":1350},{"style":756},[1351],{"type":481,"value":1132},{"type":476,"tag":541,"props":1353,"children":1354},{"style":791},[1355],{"type":481,"value":765},{"type":476,"tag":541,"props":1357,"children":1358},{"style":756},[1359],{"type":481,"value":874},{"type":476,"tag":541,"props":1361,"children":1362},{"style":791},[1363],{"type":481,"value":1330},{"type":476,"tag":541,"props":1365,"children":1366},{"style":756},[1367],{"type":481,"value":1149},{"type":476,"tag":541,"props":1369,"children":1370},{"style":828},[1371],{"type":481,"value":1154},{"type":476,"tag":541,"props":1373,"children":1374},{"style":791},[1375],{"type":481,"value":803},{"type":476,"tag":541,"props":1377,"children":1378},{"style":756},[1379],{"type":481,"value":874},{"type":476,"tag":541,"props":1381,"children":1382},{"style":791},[1383],{"type":481,"value":1384},"r",{"type":476,"tag":541,"props":1386,"children":1387},{"style":756},[1388],{"type":481,"value":1171},{"type":476,"tag":541,"props":1390,"children":1391},{"style":745},[1392],{"type":481,"value":1176},{"type":476,"tag":541,"props":1394,"children":1395},{"style":756},[1396],{"type":481,"value":1181},{"type":476,"tag":541,"props":1398,"children":1399},{"style":791},[1400],{"type":481,"value":765},{"type":476,"tag":541,"props":1402,"children":1403},{"style":756},[1404],{"type":481,"value":874},{"type":476,"tag":541,"props":1406,"children":1407},{"style":791},[1408],{"type":481,"value":1384},{"type":476,"tag":541,"props":1410,"children":1411},{"style":756},[1412],{"type":481,"value":1149},{"type":476,"tag":541,"props":1414,"children":1415},{"style":828},[1416],{"type":481,"value":1154},{"type":476,"tag":541,"props":1418,"children":1419},{"style":791},[1420],{"type":481,"value":803},{"type":476,"tag":541,"props":1422,"children":1423},{"style":756},[1424],{"type":481,"value":874},{"type":476,"tag":541,"props":1426,"children":1427},{"style":791},[1428],{"type":481,"value":1330},{"type":476,"tag":541,"props":1430,"children":1431},{"style":756},[1432],{"type":481,"value":1218},{"type":476,"tag":541,"props":1434,"children":1435},{"style":828},[1436],{"type":481,"value":831},{"type":476,"tag":541,"props":1438,"children":1440},{"class":543,"line":1439},25,[1441,1446,1451],{"type":476,"tag":541,"props":1442,"children":1443},{"style":791},[1444],{"type":481,"value":1445},"    l",{"type":476,"tag":541,"props":1447,"children":1448},{"style":745},[1449],{"type":481,"value":1450},"++",{"type":476,"tag":541,"props":1452,"children":1453},{"style":828},[1454],{"type":481,"value":831},{"type":476,"tag":541,"props":1456,"children":1458},{"class":543,"line":1457},26,[1459,1464,1468],{"type":476,"tag":541,"props":1460,"children":1461},{"style":791},[1462],{"type":481,"value":1463},"    r",{"type":476,"tag":541,"props":1465,"children":1466},{"style":745},[1467],{"type":481,"value":929},{"type":476,"tag":541,"props":1469,"children":1470},{"style":828},[1471],{"type":481,"value":831},{"type":476,"tag":541,"props":1473,"children":1475},{"class":543,"line":1474},27,[1476],{"type":476,"tag":541,"props":1477,"children":1478},{"style":756},[1479],{"type":481,"value":942},{"type":476,"tag":541,"props":1481,"children":1483},{"class":543,"line":1482},28,[1484,1489],{"type":476,"tag":541,"props":1485,"children":1486},{"style":756},[1487],{"type":481,"value":1488},"}",{"type":476,"tag":541,"props":1490,"children":1491},{"style":828},[1492],{"type":481,"value":831},{"type":476,"tag":1494,"props":1495,"children":1496},"style",{},[1497],{"type":481,"value":1498},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":469,"searchDepth":729,"depth":729,"links":1500},[1501,1502],{"id":637,"depth":553,"text":637},{"id":642,"depth":553,"text":642,"children":1503},[1504],{"id":648,"depth":697,"text":648},"markdown","content:1.algorithm:3.leetcode:3.major:31.next-permutation.md","content","1.algorithm/3.leetcode/3.major/31.next-permutation.md","md",[1511,1513],{"_path":102,"title":101,"description":1512},"给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。",{"_path":108,"title":107,"description":1514},"给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号\n子串\n的长度。",1714007213070]