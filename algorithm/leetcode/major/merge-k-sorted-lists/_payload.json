[{"data":1,"prerenderedAt":1955},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/merge-k-sorted-lists":559,"/algorithm/leetcode/major/merge-k-sorted-lists-surround":1950},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":96,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":95,"description":563,"url":564,"body":565,"_type":1945,"_id":1946,"_source":1947,"_file":1948,"_extension":1949},"major",false,"","给你一个链表数组，每个链表都已经按升序排列。","https://leetcode.cn/problems/merge-k-sorted-lists",{"type":566,"children":567,"toc":1939},"root",[568,575,580,585,687,692,715,720,742,747,782,788,793,806,811,817,1933],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"请你将所有链表合并到一个升序链表中，返回合并后的链表。",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"示例 1：",{"type":569,"tag":586,"props":587,"children":590},"pre",{"className":588,"code":589,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：lists = [[1,4,5],[1,3,4],[2,6]]\n输出：[1,1,2,3,4,4,5,6]\n解释：链表数组如下：\n[\n1->4->5,\n1->3->4,\n2->6\n]\n将它们合并到一个有序链表中得到。\n1->1->2->3->4->4->5->6\n",[591],{"type":569,"tag":592,"props":593,"children":594},"code",{"__ignoreMap":562},[595,606,615,624,633,642,651,660,669,678],{"type":569,"tag":596,"props":597,"children":600},"span",{"class":598,"line":599},"line",1,[601],{"type":569,"tag":596,"props":602,"children":603},{},[604],{"type":574,"value":605},"输入：lists = [[1,4,5],[1,3,4],[2,6]]\n",{"type":569,"tag":596,"props":607,"children":609},{"class":598,"line":608},2,[610],{"type":569,"tag":596,"props":611,"children":612},{},[613],{"type":574,"value":614},"输出：[1,1,2,3,4,4,5,6]\n",{"type":569,"tag":596,"props":616,"children":618},{"class":598,"line":617},3,[619],{"type":569,"tag":596,"props":620,"children":621},{},[622],{"type":574,"value":623},"解释：链表数组如下：\n",{"type":569,"tag":596,"props":625,"children":627},{"class":598,"line":626},4,[628],{"type":569,"tag":596,"props":629,"children":630},{},[631],{"type":574,"value":632},"[\n",{"type":569,"tag":596,"props":634,"children":636},{"class":598,"line":635},5,[637],{"type":569,"tag":596,"props":638,"children":639},{},[640],{"type":574,"value":641},"1->4->5,\n",{"type":569,"tag":596,"props":643,"children":645},{"class":598,"line":644},6,[646],{"type":569,"tag":596,"props":647,"children":648},{},[649],{"type":574,"value":650},"1->3->4,\n",{"type":569,"tag":596,"props":652,"children":654},{"class":598,"line":653},7,[655],{"type":569,"tag":596,"props":656,"children":657},{},[658],{"type":574,"value":659},"2->6\n",{"type":569,"tag":596,"props":661,"children":663},{"class":598,"line":662},8,[664],{"type":569,"tag":596,"props":665,"children":666},{},[667],{"type":574,"value":668},"]\n",{"type":569,"tag":596,"props":670,"children":672},{"class":598,"line":671},9,[673],{"type":569,"tag":596,"props":674,"children":675},{},[676],{"type":574,"value":677},"将它们合并到一个有序链表中得到。\n",{"type":569,"tag":596,"props":679,"children":681},{"class":598,"line":680},10,[682],{"type":569,"tag":596,"props":683,"children":684},{},[685],{"type":574,"value":686},"1->1->2->3->4->4->5->6\n",{"type":569,"tag":570,"props":688,"children":689},{},[690],{"type":574,"value":691},"示例 2：",{"type":569,"tag":586,"props":693,"children":695},{"className":588,"code":694,"language":574,"meta":562,"style":562},"输入：lists = []\n输出：[]\n",[696],{"type":569,"tag":592,"props":697,"children":698},{"__ignoreMap":562},[699,707],{"type":569,"tag":596,"props":700,"children":701},{"class":598,"line":599},[702],{"type":569,"tag":596,"props":703,"children":704},{},[705],{"type":574,"value":706},"输入：lists = []\n",{"type":569,"tag":596,"props":708,"children":709},{"class":598,"line":608},[710],{"type":569,"tag":596,"props":711,"children":712},{},[713],{"type":574,"value":714},"输出：[]\n",{"type":569,"tag":570,"props":716,"children":717},{},[718],{"type":574,"value":719},"示例 3：",{"type":569,"tag":586,"props":721,"children":723},{"className":588,"code":722,"language":574,"meta":562,"style":562},"输入：lists = [[]]\n输出：[]\n",[724],{"type":569,"tag":592,"props":725,"children":726},{"__ignoreMap":562},[727,735],{"type":569,"tag":596,"props":728,"children":729},{"class":598,"line":599},[730],{"type":569,"tag":596,"props":731,"children":732},{},[733],{"type":574,"value":734},"输入：lists = [[]]\n",{"type":569,"tag":596,"props":736,"children":737},{"class":598,"line":608},[738],{"type":569,"tag":596,"props":739,"children":740},{},[741],{"type":574,"value":714},{"type":569,"tag":570,"props":743,"children":744},{},[745],{"type":574,"value":746},"提示：",{"type":569,"tag":748,"props":749,"children":750},"ul",{},[751,757,762,767,772,777],{"type":569,"tag":752,"props":753,"children":754},"li",{},[755],{"type":574,"value":756},"k == lists.length",{"type":569,"tag":752,"props":758,"children":759},{},[760],{"type":574,"value":761},"0 \u003C= k \u003C= 10^4",{"type":569,"tag":752,"props":763,"children":764},{},[765],{"type":574,"value":766},"0 \u003C= lists[i].length \u003C= 500",{"type":569,"tag":752,"props":768,"children":769},{},[770],{"type":574,"value":771},"-10^4 \u003C= lists[i][j] \u003C= 10^4",{"type":569,"tag":752,"props":773,"children":774},{},[775],{"type":574,"value":776},"lists[i] 按 升序 排列",{"type":569,"tag":752,"props":778,"children":779},{},[780],{"type":574,"value":781},"lists[i].length 的总和不超过 10^4",{"type":569,"tag":783,"props":784,"children":786},"h2",{"id":785},"解题思路",[787],{"type":574,"value":785},{"type":569,"tag":570,"props":789,"children":790},{},[791],{"type":574,"value":792},"此题是合并 k 个升序链表，和 #88 很像，但有两点区别：",{"type":569,"tag":748,"props":794,"children":795},{},[796,801],{"type":569,"tag":752,"props":797,"children":798},{},[799],{"type":574,"value":800},"此题数据结构为链表，由于是线性的，相对不复杂",{"type":569,"tag":752,"props":802,"children":803},{},[804],{"type":574,"value":805},"此题需合并 k 个元素",{"type":569,"tag":783,"props":807,"children":809},{"id":808},"实现",[810],{"type":574,"value":808},{"type":569,"tag":812,"props":813,"children":815},"h3",{"id":814},"分冶",[816],{"type":574,"value":814},{"type":569,"tag":586,"props":818,"children":822},{"className":819,"code":820,"language":821,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode[]} lists\n * @return {ListNode}\n */\nvar mergeKLists = function (lists) {\n  // 拆分\n  function merge(l1, l2) {\n    const head = new ListNode();\n    let current = head;\n    while (l1 && l2) {\n      if (l1.val \u003C l2.val) {\n        current.next = l1;\n        l1 = l1.next;\n      } else {\n        current.next = l2;\n        l2 = l2.next;\n      }\n      current = current.next;\n    }\n\n    current.next = l1 || l2;\n\n    return head.next;\n  }\n\n  // 分冶，归并排序\n  function dfs(i, j) {\n    const len = j - i;\n    if (!len) return null;\n    if (len === 1) return list[i];\n\n    const mid = len >> 1;\n    const l1 = dfs(i, i + mid); // 合并左半部分\n    const l2 = dfs(i + mid, j); // 合并右半部分\n    return merge(l1, l2);\n  }\n\n  // 合并\n  return dfs(0, lists.length);\n};\n","js",[823],{"type":569,"tag":592,"props":824,"children":825},{"__ignoreMap":562},[826,835,843,851,859,867,875,883,890,932,962,970,1016,1025,1067,1100,1127,1161,1213,1244,1273,1291,1319,1348,1357,1386,1395,1405,1443,1451,1476,1485,1493,1502,1541,1576,1617,1671,1679,1713,1768,1821,1854,1862,1870,1879,1924],{"type":569,"tag":596,"props":827,"children":828},{"class":598,"line":599},[829],{"type":569,"tag":596,"props":830,"children":832},{"style":831},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[833],{"type":574,"value":834},"/**\n",{"type":569,"tag":596,"props":836,"children":837},{"class":598,"line":608},[838],{"type":569,"tag":596,"props":839,"children":840},{"style":831},[841],{"type":574,"value":842}," * Definition for singly-linked list.\n",{"type":569,"tag":596,"props":844,"children":845},{"class":598,"line":617},[846],{"type":569,"tag":596,"props":847,"children":848},{"style":831},[849],{"type":574,"value":850}," * function ListNode(val, next) {\n",{"type":569,"tag":596,"props":852,"children":853},{"class":598,"line":626},[854],{"type":569,"tag":596,"props":855,"children":856},{"style":831},[857],{"type":574,"value":858}," *     this.val = (val===undefined ? 0 : val)\n",{"type":569,"tag":596,"props":860,"children":861},{"class":598,"line":635},[862],{"type":569,"tag":596,"props":863,"children":864},{"style":831},[865],{"type":574,"value":866}," *     this.next = (next===undefined ? null : next)\n",{"type":569,"tag":596,"props":868,"children":869},{"class":598,"line":644},[870],{"type":569,"tag":596,"props":871,"children":872},{"style":831},[873],{"type":574,"value":874}," * }\n",{"type":569,"tag":596,"props":876,"children":877},{"class":598,"line":653},[878],{"type":569,"tag":596,"props":879,"children":880},{"style":831},[881],{"type":574,"value":882}," */\n",{"type":569,"tag":596,"props":884,"children":885},{"class":598,"line":662},[886],{"type":569,"tag":596,"props":887,"children":888},{"style":831},[889],{"type":574,"value":834},{"type":569,"tag":596,"props":891,"children":892},{"class":598,"line":671},[893,898,904,910,915,921,926],{"type":569,"tag":596,"props":894,"children":895},{"style":831},[896],{"type":574,"value":897}," * ",{"type":569,"tag":596,"props":899,"children":901},{"style":900},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[902],{"type":574,"value":903},"@",{"type":569,"tag":596,"props":905,"children":907},{"style":906},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[908],{"type":574,"value":909},"param",{"type":569,"tag":596,"props":911,"children":912},{"style":900},[913],{"type":574,"value":914}," {",{"type":569,"tag":596,"props":916,"children":918},{"style":917},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[919],{"type":574,"value":920},"ListNode[]",{"type":569,"tag":596,"props":922,"children":923},{"style":900},[924],{"type":574,"value":925},"}",{"type":569,"tag":596,"props":927,"children":929},{"style":928},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[930],{"type":574,"value":931}," lists\n",{"type":569,"tag":596,"props":933,"children":934},{"class":598,"line":680},[935,939,943,948,952,957],{"type":569,"tag":596,"props":936,"children":937},{"style":831},[938],{"type":574,"value":897},{"type":569,"tag":596,"props":940,"children":941},{"style":900},[942],{"type":574,"value":903},{"type":569,"tag":596,"props":944,"children":945},{"style":906},[946],{"type":574,"value":947},"return",{"type":569,"tag":596,"props":949,"children":950},{"style":900},[951],{"type":574,"value":914},{"type":569,"tag":596,"props":953,"children":954},{"style":917},[955],{"type":574,"value":956},"ListNode",{"type":569,"tag":596,"props":958,"children":959},{"style":900},[960],{"type":574,"value":961},"}\n",{"type":569,"tag":596,"props":963,"children":965},{"class":598,"line":964},11,[966],{"type":569,"tag":596,"props":967,"children":968},{"style":831},[969],{"type":574,"value":882},{"type":569,"tag":596,"props":971,"children":973},{"class":598,"line":972},12,[974,980,986,991,996,1001,1006,1011],{"type":569,"tag":596,"props":975,"children":977},{"style":976},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[978],{"type":574,"value":979},"var",{"type":569,"tag":596,"props":981,"children":983},{"style":982},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[984],{"type":574,"value":985}," mergeKLists",{"type":569,"tag":596,"props":987,"children":988},{"style":900},[989],{"type":574,"value":990}," =",{"type":569,"tag":596,"props":992,"children":993},{"style":976},[994],{"type":574,"value":995}," function",{"type":569,"tag":596,"props":997,"children":998},{"style":900},[999],{"type":574,"value":1000}," (",{"type":569,"tag":596,"props":1002,"children":1003},{"style":928},[1004],{"type":574,"value":1005},"lists",{"type":569,"tag":596,"props":1007,"children":1008},{"style":900},[1009],{"type":574,"value":1010},")",{"type":569,"tag":596,"props":1012,"children":1013},{"style":900},[1014],{"type":574,"value":1015}," {\n",{"type":569,"tag":596,"props":1017,"children":1019},{"class":598,"line":1018},13,[1020],{"type":569,"tag":596,"props":1021,"children":1022},{"style":831},[1023],{"type":574,"value":1024},"  // 拆分\n",{"type":569,"tag":596,"props":1026,"children":1028},{"class":598,"line":1027},14,[1029,1034,1039,1044,1049,1054,1059,1063],{"type":569,"tag":596,"props":1030,"children":1031},{"style":976},[1032],{"type":574,"value":1033},"  function",{"type":569,"tag":596,"props":1035,"children":1036},{"style":982},[1037],{"type":574,"value":1038}," merge",{"type":569,"tag":596,"props":1040,"children":1041},{"style":900},[1042],{"type":574,"value":1043},"(",{"type":569,"tag":596,"props":1045,"children":1046},{"style":928},[1047],{"type":574,"value":1048},"l1",{"type":569,"tag":596,"props":1050,"children":1051},{"style":900},[1052],{"type":574,"value":1053},",",{"type":569,"tag":596,"props":1055,"children":1056},{"style":928},[1057],{"type":574,"value":1058}," l2",{"type":569,"tag":596,"props":1060,"children":1061},{"style":900},[1062],{"type":574,"value":1010},{"type":569,"tag":596,"props":1064,"children":1065},{"style":900},[1066],{"type":574,"value":1015},{"type":569,"tag":596,"props":1068,"children":1070},{"class":598,"line":1069},15,[1071,1076,1081,1085,1090,1095],{"type":569,"tag":596,"props":1072,"children":1073},{"style":976},[1074],{"type":574,"value":1075},"    const",{"type":569,"tag":596,"props":1077,"children":1078},{"style":928},[1079],{"type":574,"value":1080}," head",{"type":569,"tag":596,"props":1082,"children":1083},{"style":900},[1084],{"type":574,"value":990},{"type":569,"tag":596,"props":1086,"children":1087},{"style":976},[1088],{"type":574,"value":1089}," new",{"type":569,"tag":596,"props":1091,"children":1092},{"style":982},[1093],{"type":574,"value":1094}," ListNode",{"type":569,"tag":596,"props":1096,"children":1097},{"style":900},[1098],{"type":574,"value":1099},"();\n",{"type":569,"tag":596,"props":1101,"children":1103},{"class":598,"line":1102},16,[1104,1109,1114,1118,1122],{"type":569,"tag":596,"props":1105,"children":1106},{"style":976},[1107],{"type":574,"value":1108},"    let",{"type":569,"tag":596,"props":1110,"children":1111},{"style":928},[1112],{"type":574,"value":1113}," current",{"type":569,"tag":596,"props":1115,"children":1116},{"style":900},[1117],{"type":574,"value":990},{"type":569,"tag":596,"props":1119,"children":1120},{"style":928},[1121],{"type":574,"value":1080},{"type":569,"tag":596,"props":1123,"children":1124},{"style":900},[1125],{"type":574,"value":1126},";\n",{"type":569,"tag":596,"props":1128,"children":1130},{"class":598,"line":1129},17,[1131,1136,1140,1144,1149,1153,1157],{"type":569,"tag":596,"props":1132,"children":1133},{"style":906},[1134],{"type":574,"value":1135},"    while",{"type":569,"tag":596,"props":1137,"children":1138},{"style":900},[1139],{"type":574,"value":1000},{"type":569,"tag":596,"props":1141,"children":1142},{"style":928},[1143],{"type":574,"value":1048},{"type":569,"tag":596,"props":1145,"children":1146},{"style":976},[1147],{"type":574,"value":1148}," &&",{"type":569,"tag":596,"props":1150,"children":1151},{"style":928},[1152],{"type":574,"value":1058},{"type":569,"tag":596,"props":1154,"children":1155},{"style":900},[1156],{"type":574,"value":1010},{"type":569,"tag":596,"props":1158,"children":1159},{"style":900},[1160],{"type":574,"value":1015},{"type":569,"tag":596,"props":1162,"children":1164},{"class":598,"line":1163},18,[1165,1170,1174,1178,1183,1188,1193,1197,1201,1205,1209],{"type":569,"tag":596,"props":1166,"children":1167},{"style":906},[1168],{"type":574,"value":1169},"      if",{"type":569,"tag":596,"props":1171,"children":1172},{"style":900},[1173],{"type":574,"value":1000},{"type":569,"tag":596,"props":1175,"children":1176},{"style":928},[1177],{"type":574,"value":1048},{"type":569,"tag":596,"props":1179,"children":1180},{"style":900},[1181],{"type":574,"value":1182},".",{"type":569,"tag":596,"props":1184,"children":1185},{"style":928},[1186],{"type":574,"value":1187},"val",{"type":569,"tag":596,"props":1189,"children":1190},{"style":900},[1191],{"type":574,"value":1192}," \u003C",{"type":569,"tag":596,"props":1194,"children":1195},{"style":928},[1196],{"type":574,"value":1058},{"type":569,"tag":596,"props":1198,"children":1199},{"style":900},[1200],{"type":574,"value":1182},{"type":569,"tag":596,"props":1202,"children":1203},{"style":928},[1204],{"type":574,"value":1187},{"type":569,"tag":596,"props":1206,"children":1207},{"style":900},[1208],{"type":574,"value":1010},{"type":569,"tag":596,"props":1210,"children":1211},{"style":900},[1212],{"type":574,"value":1015},{"type":569,"tag":596,"props":1214,"children":1216},{"class":598,"line":1215},19,[1217,1222,1226,1231,1235,1240],{"type":569,"tag":596,"props":1218,"children":1219},{"style":928},[1220],{"type":574,"value":1221},"        current",{"type":569,"tag":596,"props":1223,"children":1224},{"style":900},[1225],{"type":574,"value":1182},{"type":569,"tag":596,"props":1227,"children":1228},{"style":928},[1229],{"type":574,"value":1230},"next",{"type":569,"tag":596,"props":1232,"children":1233},{"style":900},[1234],{"type":574,"value":990},{"type":569,"tag":596,"props":1236,"children":1237},{"style":928},[1238],{"type":574,"value":1239}," l1",{"type":569,"tag":596,"props":1241,"children":1242},{"style":900},[1243],{"type":574,"value":1126},{"type":569,"tag":596,"props":1245,"children":1247},{"class":598,"line":1246},20,[1248,1253,1257,1261,1265,1269],{"type":569,"tag":596,"props":1249,"children":1250},{"style":928},[1251],{"type":574,"value":1252},"        l1",{"type":569,"tag":596,"props":1254,"children":1255},{"style":900},[1256],{"type":574,"value":990},{"type":569,"tag":596,"props":1258,"children":1259},{"style":928},[1260],{"type":574,"value":1239},{"type":569,"tag":596,"props":1262,"children":1263},{"style":900},[1264],{"type":574,"value":1182},{"type":569,"tag":596,"props":1266,"children":1267},{"style":928},[1268],{"type":574,"value":1230},{"type":569,"tag":596,"props":1270,"children":1271},{"style":900},[1272],{"type":574,"value":1126},{"type":569,"tag":596,"props":1274,"children":1276},{"class":598,"line":1275},21,[1277,1282,1287],{"type":569,"tag":596,"props":1278,"children":1279},{"style":900},[1280],{"type":574,"value":1281},"      }",{"type":569,"tag":596,"props":1283,"children":1284},{"style":906},[1285],{"type":574,"value":1286}," else",{"type":569,"tag":596,"props":1288,"children":1289},{"style":900},[1290],{"type":574,"value":1015},{"type":569,"tag":596,"props":1292,"children":1294},{"class":598,"line":1293},22,[1295,1299,1303,1307,1311,1315],{"type":569,"tag":596,"props":1296,"children":1297},{"style":928},[1298],{"type":574,"value":1221},{"type":569,"tag":596,"props":1300,"children":1301},{"style":900},[1302],{"type":574,"value":1182},{"type":569,"tag":596,"props":1304,"children":1305},{"style":928},[1306],{"type":574,"value":1230},{"type":569,"tag":596,"props":1308,"children":1309},{"style":900},[1310],{"type":574,"value":990},{"type":569,"tag":596,"props":1312,"children":1313},{"style":928},[1314],{"type":574,"value":1058},{"type":569,"tag":596,"props":1316,"children":1317},{"style":900},[1318],{"type":574,"value":1126},{"type":569,"tag":596,"props":1320,"children":1322},{"class":598,"line":1321},23,[1323,1328,1332,1336,1340,1344],{"type":569,"tag":596,"props":1324,"children":1325},{"style":928},[1326],{"type":574,"value":1327},"        l2",{"type":569,"tag":596,"props":1329,"children":1330},{"style":900},[1331],{"type":574,"value":990},{"type":569,"tag":596,"props":1333,"children":1334},{"style":928},[1335],{"type":574,"value":1058},{"type":569,"tag":596,"props":1337,"children":1338},{"style":900},[1339],{"type":574,"value":1182},{"type":569,"tag":596,"props":1341,"children":1342},{"style":928},[1343],{"type":574,"value":1230},{"type":569,"tag":596,"props":1345,"children":1346},{"style":900},[1347],{"type":574,"value":1126},{"type":569,"tag":596,"props":1349,"children":1351},{"class":598,"line":1350},24,[1352],{"type":569,"tag":596,"props":1353,"children":1354},{"style":900},[1355],{"type":574,"value":1356},"      }\n",{"type":569,"tag":596,"props":1358,"children":1360},{"class":598,"line":1359},25,[1361,1366,1370,1374,1378,1382],{"type":569,"tag":596,"props":1362,"children":1363},{"style":928},[1364],{"type":574,"value":1365},"      current",{"type":569,"tag":596,"props":1367,"children":1368},{"style":900},[1369],{"type":574,"value":990},{"type":569,"tag":596,"props":1371,"children":1372},{"style":928},[1373],{"type":574,"value":1113},{"type":569,"tag":596,"props":1375,"children":1376},{"style":900},[1377],{"type":574,"value":1182},{"type":569,"tag":596,"props":1379,"children":1380},{"style":928},[1381],{"type":574,"value":1230},{"type":569,"tag":596,"props":1383,"children":1384},{"style":900},[1385],{"type":574,"value":1126},{"type":569,"tag":596,"props":1387,"children":1389},{"class":598,"line":1388},26,[1390],{"type":569,"tag":596,"props":1391,"children":1392},{"style":900},[1393],{"type":574,"value":1394},"    }\n",{"type":569,"tag":596,"props":1396,"children":1398},{"class":598,"line":1397},27,[1399],{"type":569,"tag":596,"props":1400,"children":1402},{"emptyLinePlaceholder":1401},true,[1403],{"type":574,"value":1404},"\n",{"type":569,"tag":596,"props":1406,"children":1408},{"class":598,"line":1407},28,[1409,1414,1418,1422,1426,1430,1435,1439],{"type":569,"tag":596,"props":1410,"children":1411},{"style":928},[1412],{"type":574,"value":1413},"    current",{"type":569,"tag":596,"props":1415,"children":1416},{"style":900},[1417],{"type":574,"value":1182},{"type":569,"tag":596,"props":1419,"children":1420},{"style":928},[1421],{"type":574,"value":1230},{"type":569,"tag":596,"props":1423,"children":1424},{"style":900},[1425],{"type":574,"value":990},{"type":569,"tag":596,"props":1427,"children":1428},{"style":928},[1429],{"type":574,"value":1239},{"type":569,"tag":596,"props":1431,"children":1432},{"style":976},[1433],{"type":574,"value":1434}," ||",{"type":569,"tag":596,"props":1436,"children":1437},{"style":928},[1438],{"type":574,"value":1058},{"type":569,"tag":596,"props":1440,"children":1441},{"style":900},[1442],{"type":574,"value":1126},{"type":569,"tag":596,"props":1444,"children":1446},{"class":598,"line":1445},29,[1447],{"type":569,"tag":596,"props":1448,"children":1449},{"emptyLinePlaceholder":1401},[1450],{"type":574,"value":1404},{"type":569,"tag":596,"props":1452,"children":1454},{"class":598,"line":1453},30,[1455,1460,1464,1468,1472],{"type":569,"tag":596,"props":1456,"children":1457},{"style":906},[1458],{"type":574,"value":1459},"    return",{"type":569,"tag":596,"props":1461,"children":1462},{"style":928},[1463],{"type":574,"value":1080},{"type":569,"tag":596,"props":1465,"children":1466},{"style":900},[1467],{"type":574,"value":1182},{"type":569,"tag":596,"props":1469,"children":1470},{"style":928},[1471],{"type":574,"value":1230},{"type":569,"tag":596,"props":1473,"children":1474},{"style":900},[1475],{"type":574,"value":1126},{"type":569,"tag":596,"props":1477,"children":1479},{"class":598,"line":1478},31,[1480],{"type":569,"tag":596,"props":1481,"children":1482},{"style":900},[1483],{"type":574,"value":1484},"  }\n",{"type":569,"tag":596,"props":1486,"children":1488},{"class":598,"line":1487},32,[1489],{"type":569,"tag":596,"props":1490,"children":1491},{"emptyLinePlaceholder":1401},[1492],{"type":574,"value":1404},{"type":569,"tag":596,"props":1494,"children":1496},{"class":598,"line":1495},33,[1497],{"type":569,"tag":596,"props":1498,"children":1499},{"style":831},[1500],{"type":574,"value":1501},"  // 分冶，归并排序\n",{"type":569,"tag":596,"props":1503,"children":1505},{"class":598,"line":1504},34,[1506,1510,1515,1519,1524,1528,1533,1537],{"type":569,"tag":596,"props":1507,"children":1508},{"style":976},[1509],{"type":574,"value":1033},{"type":569,"tag":596,"props":1511,"children":1512},{"style":982},[1513],{"type":574,"value":1514}," dfs",{"type":569,"tag":596,"props":1516,"children":1517},{"style":900},[1518],{"type":574,"value":1043},{"type":569,"tag":596,"props":1520,"children":1521},{"style":928},[1522],{"type":574,"value":1523},"i",{"type":569,"tag":596,"props":1525,"children":1526},{"style":900},[1527],{"type":574,"value":1053},{"type":569,"tag":596,"props":1529,"children":1530},{"style":928},[1531],{"type":574,"value":1532}," j",{"type":569,"tag":596,"props":1534,"children":1535},{"style":900},[1536],{"type":574,"value":1010},{"type":569,"tag":596,"props":1538,"children":1539},{"style":900},[1540],{"type":574,"value":1015},{"type":569,"tag":596,"props":1542,"children":1544},{"class":598,"line":1543},35,[1545,1549,1554,1558,1562,1567,1572],{"type":569,"tag":596,"props":1546,"children":1547},{"style":976},[1548],{"type":574,"value":1075},{"type":569,"tag":596,"props":1550,"children":1551},{"style":928},[1552],{"type":574,"value":1553}," len",{"type":569,"tag":596,"props":1555,"children":1556},{"style":900},[1557],{"type":574,"value":990},{"type":569,"tag":596,"props":1559,"children":1560},{"style":928},[1561],{"type":574,"value":1532},{"type":569,"tag":596,"props":1563,"children":1564},{"style":976},[1565],{"type":574,"value":1566}," -",{"type":569,"tag":596,"props":1568,"children":1569},{"style":928},[1570],{"type":574,"value":1571}," i",{"type":569,"tag":596,"props":1573,"children":1574},{"style":900},[1575],{"type":574,"value":1126},{"type":569,"tag":596,"props":1577,"children":1579},{"class":598,"line":1578},36,[1580,1585,1589,1594,1599,1603,1608,1613],{"type":569,"tag":596,"props":1581,"children":1582},{"style":906},[1583],{"type":574,"value":1584},"    if",{"type":569,"tag":596,"props":1586,"children":1587},{"style":900},[1588],{"type":574,"value":1000},{"type":569,"tag":596,"props":1590,"children":1591},{"style":976},[1592],{"type":574,"value":1593},"!",{"type":569,"tag":596,"props":1595,"children":1596},{"style":928},[1597],{"type":574,"value":1598},"len",{"type":569,"tag":596,"props":1600,"children":1601},{"style":900},[1602],{"type":574,"value":1010},{"type":569,"tag":596,"props":1604,"children":1605},{"style":906},[1606],{"type":574,"value":1607}," return",{"type":569,"tag":596,"props":1609,"children":1610},{"style":976},[1611],{"type":574,"value":1612}," null",{"type":569,"tag":596,"props":1614,"children":1615},{"style":900},[1616],{"type":574,"value":1126},{"type":569,"tag":596,"props":1618,"children":1620},{"class":598,"line":1619},37,[1621,1625,1629,1633,1638,1644,1648,1652,1657,1662,1666],{"type":569,"tag":596,"props":1622,"children":1623},{"style":906},[1624],{"type":574,"value":1584},{"type":569,"tag":596,"props":1626,"children":1627},{"style":900},[1628],{"type":574,"value":1000},{"type":569,"tag":596,"props":1630,"children":1631},{"style":928},[1632],{"type":574,"value":1598},{"type":569,"tag":596,"props":1634,"children":1635},{"style":976},[1636],{"type":574,"value":1637}," ===",{"type":569,"tag":596,"props":1639,"children":1641},{"style":1640},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1642],{"type":574,"value":1643}," 1",{"type":569,"tag":596,"props":1645,"children":1646},{"style":900},[1647],{"type":574,"value":1010},{"type":569,"tag":596,"props":1649,"children":1650},{"style":906},[1651],{"type":574,"value":1607},{"type":569,"tag":596,"props":1653,"children":1654},{"style":928},[1655],{"type":574,"value":1656}," list",{"type":569,"tag":596,"props":1658,"children":1659},{"style":900},[1660],{"type":574,"value":1661},"[",{"type":569,"tag":596,"props":1663,"children":1664},{"style":928},[1665],{"type":574,"value":1523},{"type":569,"tag":596,"props":1667,"children":1668},{"style":900},[1669],{"type":574,"value":1670},"];\n",{"type":569,"tag":596,"props":1672,"children":1674},{"class":598,"line":1673},38,[1675],{"type":569,"tag":596,"props":1676,"children":1677},{"emptyLinePlaceholder":1401},[1678],{"type":574,"value":1404},{"type":569,"tag":596,"props":1680,"children":1682},{"class":598,"line":1681},39,[1683,1687,1692,1696,1700,1705,1709],{"type":569,"tag":596,"props":1684,"children":1685},{"style":976},[1686],{"type":574,"value":1075},{"type":569,"tag":596,"props":1688,"children":1689},{"style":928},[1690],{"type":574,"value":1691}," mid",{"type":569,"tag":596,"props":1693,"children":1694},{"style":900},[1695],{"type":574,"value":990},{"type":569,"tag":596,"props":1697,"children":1698},{"style":928},[1699],{"type":574,"value":1553},{"type":569,"tag":596,"props":1701,"children":1702},{"style":976},[1703],{"type":574,"value":1704}," >>",{"type":569,"tag":596,"props":1706,"children":1707},{"style":1640},[1708],{"type":574,"value":1643},{"type":569,"tag":596,"props":1710,"children":1711},{"style":900},[1712],{"type":574,"value":1126},{"type":569,"tag":596,"props":1714,"children":1716},{"class":598,"line":1715},40,[1717,1721,1725,1729,1733,1737,1741,1745,1749,1754,1758,1763],{"type":569,"tag":596,"props":1718,"children":1719},{"style":976},[1720],{"type":574,"value":1075},{"type":569,"tag":596,"props":1722,"children":1723},{"style":928},[1724],{"type":574,"value":1239},{"type":569,"tag":596,"props":1726,"children":1727},{"style":900},[1728],{"type":574,"value":990},{"type":569,"tag":596,"props":1730,"children":1731},{"style":982},[1732],{"type":574,"value":1514},{"type":569,"tag":596,"props":1734,"children":1735},{"style":900},[1736],{"type":574,"value":1043},{"type":569,"tag":596,"props":1738,"children":1739},{"style":928},[1740],{"type":574,"value":1523},{"type":569,"tag":596,"props":1742,"children":1743},{"style":900},[1744],{"type":574,"value":1053},{"type":569,"tag":596,"props":1746,"children":1747},{"style":928},[1748],{"type":574,"value":1571},{"type":569,"tag":596,"props":1750,"children":1751},{"style":976},[1752],{"type":574,"value":1753}," +",{"type":569,"tag":596,"props":1755,"children":1756},{"style":928},[1757],{"type":574,"value":1691},{"type":569,"tag":596,"props":1759,"children":1760},{"style":900},[1761],{"type":574,"value":1762},");",{"type":569,"tag":596,"props":1764,"children":1765},{"style":831},[1766],{"type":574,"value":1767}," // 合并左半部分\n",{"type":569,"tag":596,"props":1769,"children":1771},{"class":598,"line":1770},41,[1772,1776,1780,1784,1788,1792,1796,1800,1804,1808,1812,1816],{"type":569,"tag":596,"props":1773,"children":1774},{"style":976},[1775],{"type":574,"value":1075},{"type":569,"tag":596,"props":1777,"children":1778},{"style":928},[1779],{"type":574,"value":1058},{"type":569,"tag":596,"props":1781,"children":1782},{"style":900},[1783],{"type":574,"value":990},{"type":569,"tag":596,"props":1785,"children":1786},{"style":982},[1787],{"type":574,"value":1514},{"type":569,"tag":596,"props":1789,"children":1790},{"style":900},[1791],{"type":574,"value":1043},{"type":569,"tag":596,"props":1793,"children":1794},{"style":928},[1795],{"type":574,"value":1523},{"type":569,"tag":596,"props":1797,"children":1798},{"style":976},[1799],{"type":574,"value":1753},{"type":569,"tag":596,"props":1801,"children":1802},{"style":928},[1803],{"type":574,"value":1691},{"type":569,"tag":596,"props":1805,"children":1806},{"style":900},[1807],{"type":574,"value":1053},{"type":569,"tag":596,"props":1809,"children":1810},{"style":928},[1811],{"type":574,"value":1532},{"type":569,"tag":596,"props":1813,"children":1814},{"style":900},[1815],{"type":574,"value":1762},{"type":569,"tag":596,"props":1817,"children":1818},{"style":831},[1819],{"type":574,"value":1820}," // 合并右半部分\n",{"type":569,"tag":596,"props":1822,"children":1824},{"class":598,"line":1823},42,[1825,1829,1833,1837,1841,1845,1849],{"type":569,"tag":596,"props":1826,"children":1827},{"style":906},[1828],{"type":574,"value":1459},{"type":569,"tag":596,"props":1830,"children":1831},{"style":982},[1832],{"type":574,"value":1038},{"type":569,"tag":596,"props":1834,"children":1835},{"style":900},[1836],{"type":574,"value":1043},{"type":569,"tag":596,"props":1838,"children":1839},{"style":928},[1840],{"type":574,"value":1048},{"type":569,"tag":596,"props":1842,"children":1843},{"style":900},[1844],{"type":574,"value":1053},{"type":569,"tag":596,"props":1846,"children":1847},{"style":928},[1848],{"type":574,"value":1058},{"type":569,"tag":596,"props":1850,"children":1851},{"style":900},[1852],{"type":574,"value":1853},");\n",{"type":569,"tag":596,"props":1855,"children":1857},{"class":598,"line":1856},43,[1858],{"type":569,"tag":596,"props":1859,"children":1860},{"style":900},[1861],{"type":574,"value":1484},{"type":569,"tag":596,"props":1863,"children":1865},{"class":598,"line":1864},44,[1866],{"type":569,"tag":596,"props":1867,"children":1868},{"emptyLinePlaceholder":1401},[1869],{"type":574,"value":1404},{"type":569,"tag":596,"props":1871,"children":1873},{"class":598,"line":1872},45,[1874],{"type":569,"tag":596,"props":1875,"children":1876},{"style":831},[1877],{"type":574,"value":1878},"  // 合并\n",{"type":569,"tag":596,"props":1880,"children":1882},{"class":598,"line":1881},46,[1883,1888,1892,1896,1901,1905,1910,1914,1920],{"type":569,"tag":596,"props":1884,"children":1885},{"style":906},[1886],{"type":574,"value":1887},"  return",{"type":569,"tag":596,"props":1889,"children":1890},{"style":982},[1891],{"type":574,"value":1514},{"type":569,"tag":596,"props":1893,"children":1894},{"style":900},[1895],{"type":574,"value":1043},{"type":569,"tag":596,"props":1897,"children":1898},{"style":1640},[1899],{"type":574,"value":1900},"0",{"type":569,"tag":596,"props":1902,"children":1903},{"style":900},[1904],{"type":574,"value":1053},{"type":569,"tag":596,"props":1906,"children":1907},{"style":928},[1908],{"type":574,"value":1909}," lists",{"type":569,"tag":596,"props":1911,"children":1912},{"style":900},[1913],{"type":574,"value":1182},{"type":569,"tag":596,"props":1915,"children":1917},{"style":1916},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1918],{"type":574,"value":1919},"length",{"type":569,"tag":596,"props":1921,"children":1922},{"style":900},[1923],{"type":574,"value":1853},{"type":569,"tag":596,"props":1925,"children":1927},{"class":598,"line":1926},47,[1928],{"type":569,"tag":596,"props":1929,"children":1930},{"style":900},[1931],{"type":574,"value":1932},"};\n",{"type":569,"tag":1934,"props":1935,"children":1936},"style",{},[1937],{"type":574,"value":1938},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":635,"depth":635,"links":1940},[1941,1942],{"id":785,"depth":608,"text":785},{"id":808,"depth":608,"text":808,"children":1943},[1944],{"id":814,"depth":617,"text":814},"markdown","content:1.algorithm:3.leetcode:3.major:23.merge-k-sorted-lists.md","content","1.algorithm/3.leetcode/3.major/23.merge-k-sorted-lists.md","md",[1951,1953],{"_path":93,"title":92,"description":1952},"数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。",{"_path":99,"title":98,"description":1954},"给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。",1717735568409]