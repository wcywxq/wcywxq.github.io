[{"data":1,"prerenderedAt":1948},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/merge-k-sorted-lists":552,"/algorithm/leetcode/major/merge-k-sorted-lists-surround":1943},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":96,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":95,"description":556,"url":557,"body":558,"_type":1938,"_id":1939,"_source":1940,"_file":1941,"_extension":1942},"major",false,"","给你一个链表数组，每个链表都已经按升序排列。","https://leetcode.cn/problems/merge-k-sorted-lists",{"type":559,"children":560,"toc":1932},"root",[561,568,573,578,680,685,708,713,735,740,775,781,786,799,804,810,1926],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"请你将所有链表合并到一个升序链表中，返回合并后的链表。",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"示例 1：",{"type":562,"tag":579,"props":580,"children":583},"pre",{"className":581,"code":582,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：lists = [[1,4,5],[1,3,4],[2,6]]\n输出：[1,1,2,3,4,4,5,6]\n解释：链表数组如下：\n[\n1->4->5,\n1->3->4,\n2->6\n]\n将它们合并到一个有序链表中得到。\n1->1->2->3->4->4->5->6\n",[584],{"type":562,"tag":585,"props":586,"children":587},"code",{"__ignoreMap":555},[588,599,608,617,626,635,644,653,662,671],{"type":562,"tag":589,"props":590,"children":593},"span",{"class":591,"line":592},"line",1,[594],{"type":562,"tag":589,"props":595,"children":596},{},[597],{"type":567,"value":598},"输入：lists = [[1,4,5],[1,3,4],[2,6]]\n",{"type":562,"tag":589,"props":600,"children":602},{"class":591,"line":601},2,[603],{"type":562,"tag":589,"props":604,"children":605},{},[606],{"type":567,"value":607},"输出：[1,1,2,3,4,4,5,6]\n",{"type":562,"tag":589,"props":609,"children":611},{"class":591,"line":610},3,[612],{"type":562,"tag":589,"props":613,"children":614},{},[615],{"type":567,"value":616},"解释：链表数组如下：\n",{"type":562,"tag":589,"props":618,"children":620},{"class":591,"line":619},4,[621],{"type":562,"tag":589,"props":622,"children":623},{},[624],{"type":567,"value":625},"[\n",{"type":562,"tag":589,"props":627,"children":629},{"class":591,"line":628},5,[630],{"type":562,"tag":589,"props":631,"children":632},{},[633],{"type":567,"value":634},"1->4->5,\n",{"type":562,"tag":589,"props":636,"children":638},{"class":591,"line":637},6,[639],{"type":562,"tag":589,"props":640,"children":641},{},[642],{"type":567,"value":643},"1->3->4,\n",{"type":562,"tag":589,"props":645,"children":647},{"class":591,"line":646},7,[648],{"type":562,"tag":589,"props":649,"children":650},{},[651],{"type":567,"value":652},"2->6\n",{"type":562,"tag":589,"props":654,"children":656},{"class":591,"line":655},8,[657],{"type":562,"tag":589,"props":658,"children":659},{},[660],{"type":567,"value":661},"]\n",{"type":562,"tag":589,"props":663,"children":665},{"class":591,"line":664},9,[666],{"type":562,"tag":589,"props":667,"children":668},{},[669],{"type":567,"value":670},"将它们合并到一个有序链表中得到。\n",{"type":562,"tag":589,"props":672,"children":674},{"class":591,"line":673},10,[675],{"type":562,"tag":589,"props":676,"children":677},{},[678],{"type":567,"value":679},"1->1->2->3->4->4->5->6\n",{"type":562,"tag":563,"props":681,"children":682},{},[683],{"type":567,"value":684},"示例 2：",{"type":562,"tag":579,"props":686,"children":688},{"className":581,"code":687,"language":567,"meta":555,"style":555},"输入：lists = []\n输出：[]\n",[689],{"type":562,"tag":585,"props":690,"children":691},{"__ignoreMap":555},[692,700],{"type":562,"tag":589,"props":693,"children":694},{"class":591,"line":592},[695],{"type":562,"tag":589,"props":696,"children":697},{},[698],{"type":567,"value":699},"输入：lists = []\n",{"type":562,"tag":589,"props":701,"children":702},{"class":591,"line":601},[703],{"type":562,"tag":589,"props":704,"children":705},{},[706],{"type":567,"value":707},"输出：[]\n",{"type":562,"tag":563,"props":709,"children":710},{},[711],{"type":567,"value":712},"示例 3：",{"type":562,"tag":579,"props":714,"children":716},{"className":581,"code":715,"language":567,"meta":555,"style":555},"输入：lists = [[]]\n输出：[]\n",[717],{"type":562,"tag":585,"props":718,"children":719},{"__ignoreMap":555},[720,728],{"type":562,"tag":589,"props":721,"children":722},{"class":591,"line":592},[723],{"type":562,"tag":589,"props":724,"children":725},{},[726],{"type":567,"value":727},"输入：lists = [[]]\n",{"type":562,"tag":589,"props":729,"children":730},{"class":591,"line":601},[731],{"type":562,"tag":589,"props":732,"children":733},{},[734],{"type":567,"value":707},{"type":562,"tag":563,"props":736,"children":737},{},[738],{"type":567,"value":739},"提示：",{"type":562,"tag":741,"props":742,"children":743},"ul",{},[744,750,755,760,765,770],{"type":562,"tag":745,"props":746,"children":747},"li",{},[748],{"type":567,"value":749},"k == lists.length",{"type":562,"tag":745,"props":751,"children":752},{},[753],{"type":567,"value":754},"0 \u003C= k \u003C= 10^4",{"type":562,"tag":745,"props":756,"children":757},{},[758],{"type":567,"value":759},"0 \u003C= lists[i].length \u003C= 500",{"type":562,"tag":745,"props":761,"children":762},{},[763],{"type":567,"value":764},"-10^4 \u003C= lists[i][j] \u003C= 10^4",{"type":562,"tag":745,"props":766,"children":767},{},[768],{"type":567,"value":769},"lists[i] 按 升序 排列",{"type":562,"tag":745,"props":771,"children":772},{},[773],{"type":567,"value":774},"lists[i].length 的总和不超过 10^4",{"type":562,"tag":776,"props":777,"children":779},"h2",{"id":778},"解题思路",[780],{"type":567,"value":778},{"type":562,"tag":563,"props":782,"children":783},{},[784],{"type":567,"value":785},"此题是合并 k 个升序链表，和 #88 很像，但有两点区别：",{"type":562,"tag":741,"props":787,"children":788},{},[789,794],{"type":562,"tag":745,"props":790,"children":791},{},[792],{"type":567,"value":793},"此题数据结构为链表，由于是线性的，相对不复杂",{"type":562,"tag":745,"props":795,"children":796},{},[797],{"type":567,"value":798},"此题需合并 k 个元素",{"type":562,"tag":776,"props":800,"children":802},{"id":801},"实现",[803],{"type":567,"value":801},{"type":562,"tag":805,"props":806,"children":808},"h3",{"id":807},"分冶",[809],{"type":567,"value":807},{"type":562,"tag":579,"props":811,"children":815},{"className":812,"code":813,"language":814,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode[]} lists\n * @return {ListNode}\n */\nvar mergeKLists = function (lists) {\n  // 拆分\n  function merge(l1, l2) {\n    const head = new ListNode();\n    let current = head;\n    while (l1 && l2) {\n      if (l1.val \u003C l2.val) {\n        current.next = l1;\n        l1 = l1.next;\n      } else {\n        current.next = l2;\n        l2 = l2.next;\n      }\n      current = current.next;\n    }\n\n    current.next = l1 || l2;\n\n    return head.next;\n  }\n\n  // 分冶，归并排序\n  function dfs(i, j) {\n    const len = j - i;\n    if (!len) return null;\n    if (len === 1) return list[i];\n\n    const mid = len >> 1;\n    const l1 = dfs(i, i + mid); // 合并左半部分\n    const l2 = dfs(i + mid, j); // 合并右半部分\n    return merge(l1, l2);\n  }\n\n  // 合并\n  return dfs(0, lists.length);\n};\n","js",[816],{"type":562,"tag":585,"props":817,"children":818},{"__ignoreMap":555},[819,828,836,844,852,860,868,876,883,925,955,963,1009,1018,1060,1093,1120,1154,1206,1237,1266,1284,1312,1341,1350,1379,1388,1398,1436,1444,1469,1478,1486,1495,1534,1569,1610,1664,1672,1706,1761,1814,1847,1855,1863,1872,1917],{"type":562,"tag":589,"props":820,"children":821},{"class":591,"line":592},[822],{"type":562,"tag":589,"props":823,"children":825},{"style":824},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[826],{"type":567,"value":827},"/**\n",{"type":562,"tag":589,"props":829,"children":830},{"class":591,"line":601},[831],{"type":562,"tag":589,"props":832,"children":833},{"style":824},[834],{"type":567,"value":835}," * Definition for singly-linked list.\n",{"type":562,"tag":589,"props":837,"children":838},{"class":591,"line":610},[839],{"type":562,"tag":589,"props":840,"children":841},{"style":824},[842],{"type":567,"value":843}," * function ListNode(val, next) {\n",{"type":562,"tag":589,"props":845,"children":846},{"class":591,"line":619},[847],{"type":562,"tag":589,"props":848,"children":849},{"style":824},[850],{"type":567,"value":851}," *     this.val = (val===undefined ? 0 : val)\n",{"type":562,"tag":589,"props":853,"children":854},{"class":591,"line":628},[855],{"type":562,"tag":589,"props":856,"children":857},{"style":824},[858],{"type":567,"value":859}," *     this.next = (next===undefined ? null : next)\n",{"type":562,"tag":589,"props":861,"children":862},{"class":591,"line":637},[863],{"type":562,"tag":589,"props":864,"children":865},{"style":824},[866],{"type":567,"value":867}," * }\n",{"type":562,"tag":589,"props":869,"children":870},{"class":591,"line":646},[871],{"type":562,"tag":589,"props":872,"children":873},{"style":824},[874],{"type":567,"value":875}," */\n",{"type":562,"tag":589,"props":877,"children":878},{"class":591,"line":655},[879],{"type":562,"tag":589,"props":880,"children":881},{"style":824},[882],{"type":567,"value":827},{"type":562,"tag":589,"props":884,"children":885},{"class":591,"line":664},[886,891,897,903,908,914,919],{"type":562,"tag":589,"props":887,"children":888},{"style":824},[889],{"type":567,"value":890}," * ",{"type":562,"tag":589,"props":892,"children":894},{"style":893},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[895],{"type":567,"value":896},"@",{"type":562,"tag":589,"props":898,"children":900},{"style":899},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[901],{"type":567,"value":902},"param",{"type":562,"tag":589,"props":904,"children":905},{"style":893},[906],{"type":567,"value":907}," {",{"type":562,"tag":589,"props":909,"children":911},{"style":910},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[912],{"type":567,"value":913},"ListNode[]",{"type":562,"tag":589,"props":915,"children":916},{"style":893},[917],{"type":567,"value":918},"}",{"type":562,"tag":589,"props":920,"children":922},{"style":921},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[923],{"type":567,"value":924}," lists\n",{"type":562,"tag":589,"props":926,"children":927},{"class":591,"line":673},[928,932,936,941,945,950],{"type":562,"tag":589,"props":929,"children":930},{"style":824},[931],{"type":567,"value":890},{"type":562,"tag":589,"props":933,"children":934},{"style":893},[935],{"type":567,"value":896},{"type":562,"tag":589,"props":937,"children":938},{"style":899},[939],{"type":567,"value":940},"return",{"type":562,"tag":589,"props":942,"children":943},{"style":893},[944],{"type":567,"value":907},{"type":562,"tag":589,"props":946,"children":947},{"style":910},[948],{"type":567,"value":949},"ListNode",{"type":562,"tag":589,"props":951,"children":952},{"style":893},[953],{"type":567,"value":954},"}\n",{"type":562,"tag":589,"props":956,"children":958},{"class":591,"line":957},11,[959],{"type":562,"tag":589,"props":960,"children":961},{"style":824},[962],{"type":567,"value":875},{"type":562,"tag":589,"props":964,"children":966},{"class":591,"line":965},12,[967,973,979,984,989,994,999,1004],{"type":562,"tag":589,"props":968,"children":970},{"style":969},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[971],{"type":567,"value":972},"var",{"type":562,"tag":589,"props":974,"children":976},{"style":975},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[977],{"type":567,"value":978}," mergeKLists",{"type":562,"tag":589,"props":980,"children":981},{"style":893},[982],{"type":567,"value":983}," =",{"type":562,"tag":589,"props":985,"children":986},{"style":969},[987],{"type":567,"value":988}," function",{"type":562,"tag":589,"props":990,"children":991},{"style":893},[992],{"type":567,"value":993}," (",{"type":562,"tag":589,"props":995,"children":996},{"style":921},[997],{"type":567,"value":998},"lists",{"type":562,"tag":589,"props":1000,"children":1001},{"style":893},[1002],{"type":567,"value":1003},")",{"type":562,"tag":589,"props":1005,"children":1006},{"style":893},[1007],{"type":567,"value":1008}," {\n",{"type":562,"tag":589,"props":1010,"children":1012},{"class":591,"line":1011},13,[1013],{"type":562,"tag":589,"props":1014,"children":1015},{"style":824},[1016],{"type":567,"value":1017},"  // 拆分\n",{"type":562,"tag":589,"props":1019,"children":1021},{"class":591,"line":1020},14,[1022,1027,1032,1037,1042,1047,1052,1056],{"type":562,"tag":589,"props":1023,"children":1024},{"style":969},[1025],{"type":567,"value":1026},"  function",{"type":562,"tag":589,"props":1028,"children":1029},{"style":975},[1030],{"type":567,"value":1031}," merge",{"type":562,"tag":589,"props":1033,"children":1034},{"style":893},[1035],{"type":567,"value":1036},"(",{"type":562,"tag":589,"props":1038,"children":1039},{"style":921},[1040],{"type":567,"value":1041},"l1",{"type":562,"tag":589,"props":1043,"children":1044},{"style":893},[1045],{"type":567,"value":1046},",",{"type":562,"tag":589,"props":1048,"children":1049},{"style":921},[1050],{"type":567,"value":1051}," l2",{"type":562,"tag":589,"props":1053,"children":1054},{"style":893},[1055],{"type":567,"value":1003},{"type":562,"tag":589,"props":1057,"children":1058},{"style":893},[1059],{"type":567,"value":1008},{"type":562,"tag":589,"props":1061,"children":1063},{"class":591,"line":1062},15,[1064,1069,1074,1078,1083,1088],{"type":562,"tag":589,"props":1065,"children":1066},{"style":969},[1067],{"type":567,"value":1068},"    const",{"type":562,"tag":589,"props":1070,"children":1071},{"style":921},[1072],{"type":567,"value":1073}," head",{"type":562,"tag":589,"props":1075,"children":1076},{"style":893},[1077],{"type":567,"value":983},{"type":562,"tag":589,"props":1079,"children":1080},{"style":969},[1081],{"type":567,"value":1082}," new",{"type":562,"tag":589,"props":1084,"children":1085},{"style":975},[1086],{"type":567,"value":1087}," ListNode",{"type":562,"tag":589,"props":1089,"children":1090},{"style":893},[1091],{"type":567,"value":1092},"();\n",{"type":562,"tag":589,"props":1094,"children":1096},{"class":591,"line":1095},16,[1097,1102,1107,1111,1115],{"type":562,"tag":589,"props":1098,"children":1099},{"style":969},[1100],{"type":567,"value":1101},"    let",{"type":562,"tag":589,"props":1103,"children":1104},{"style":921},[1105],{"type":567,"value":1106}," current",{"type":562,"tag":589,"props":1108,"children":1109},{"style":893},[1110],{"type":567,"value":983},{"type":562,"tag":589,"props":1112,"children":1113},{"style":921},[1114],{"type":567,"value":1073},{"type":562,"tag":589,"props":1116,"children":1117},{"style":893},[1118],{"type":567,"value":1119},";\n",{"type":562,"tag":589,"props":1121,"children":1123},{"class":591,"line":1122},17,[1124,1129,1133,1137,1142,1146,1150],{"type":562,"tag":589,"props":1125,"children":1126},{"style":899},[1127],{"type":567,"value":1128},"    while",{"type":562,"tag":589,"props":1130,"children":1131},{"style":893},[1132],{"type":567,"value":993},{"type":562,"tag":589,"props":1134,"children":1135},{"style":921},[1136],{"type":567,"value":1041},{"type":562,"tag":589,"props":1138,"children":1139},{"style":969},[1140],{"type":567,"value":1141}," &&",{"type":562,"tag":589,"props":1143,"children":1144},{"style":921},[1145],{"type":567,"value":1051},{"type":562,"tag":589,"props":1147,"children":1148},{"style":893},[1149],{"type":567,"value":1003},{"type":562,"tag":589,"props":1151,"children":1152},{"style":893},[1153],{"type":567,"value":1008},{"type":562,"tag":589,"props":1155,"children":1157},{"class":591,"line":1156},18,[1158,1163,1167,1171,1176,1181,1186,1190,1194,1198,1202],{"type":562,"tag":589,"props":1159,"children":1160},{"style":899},[1161],{"type":567,"value":1162},"      if",{"type":562,"tag":589,"props":1164,"children":1165},{"style":893},[1166],{"type":567,"value":993},{"type":562,"tag":589,"props":1168,"children":1169},{"style":921},[1170],{"type":567,"value":1041},{"type":562,"tag":589,"props":1172,"children":1173},{"style":893},[1174],{"type":567,"value":1175},".",{"type":562,"tag":589,"props":1177,"children":1178},{"style":921},[1179],{"type":567,"value":1180},"val",{"type":562,"tag":589,"props":1182,"children":1183},{"style":893},[1184],{"type":567,"value":1185}," \u003C",{"type":562,"tag":589,"props":1187,"children":1188},{"style":921},[1189],{"type":567,"value":1051},{"type":562,"tag":589,"props":1191,"children":1192},{"style":893},[1193],{"type":567,"value":1175},{"type":562,"tag":589,"props":1195,"children":1196},{"style":921},[1197],{"type":567,"value":1180},{"type":562,"tag":589,"props":1199,"children":1200},{"style":893},[1201],{"type":567,"value":1003},{"type":562,"tag":589,"props":1203,"children":1204},{"style":893},[1205],{"type":567,"value":1008},{"type":562,"tag":589,"props":1207,"children":1209},{"class":591,"line":1208},19,[1210,1215,1219,1224,1228,1233],{"type":562,"tag":589,"props":1211,"children":1212},{"style":921},[1213],{"type":567,"value":1214},"        current",{"type":562,"tag":589,"props":1216,"children":1217},{"style":893},[1218],{"type":567,"value":1175},{"type":562,"tag":589,"props":1220,"children":1221},{"style":921},[1222],{"type":567,"value":1223},"next",{"type":562,"tag":589,"props":1225,"children":1226},{"style":893},[1227],{"type":567,"value":983},{"type":562,"tag":589,"props":1229,"children":1230},{"style":921},[1231],{"type":567,"value":1232}," l1",{"type":562,"tag":589,"props":1234,"children":1235},{"style":893},[1236],{"type":567,"value":1119},{"type":562,"tag":589,"props":1238,"children":1240},{"class":591,"line":1239},20,[1241,1246,1250,1254,1258,1262],{"type":562,"tag":589,"props":1242,"children":1243},{"style":921},[1244],{"type":567,"value":1245},"        l1",{"type":562,"tag":589,"props":1247,"children":1248},{"style":893},[1249],{"type":567,"value":983},{"type":562,"tag":589,"props":1251,"children":1252},{"style":921},[1253],{"type":567,"value":1232},{"type":562,"tag":589,"props":1255,"children":1256},{"style":893},[1257],{"type":567,"value":1175},{"type":562,"tag":589,"props":1259,"children":1260},{"style":921},[1261],{"type":567,"value":1223},{"type":562,"tag":589,"props":1263,"children":1264},{"style":893},[1265],{"type":567,"value":1119},{"type":562,"tag":589,"props":1267,"children":1269},{"class":591,"line":1268},21,[1270,1275,1280],{"type":562,"tag":589,"props":1271,"children":1272},{"style":893},[1273],{"type":567,"value":1274},"      }",{"type":562,"tag":589,"props":1276,"children":1277},{"style":899},[1278],{"type":567,"value":1279}," else",{"type":562,"tag":589,"props":1281,"children":1282},{"style":893},[1283],{"type":567,"value":1008},{"type":562,"tag":589,"props":1285,"children":1287},{"class":591,"line":1286},22,[1288,1292,1296,1300,1304,1308],{"type":562,"tag":589,"props":1289,"children":1290},{"style":921},[1291],{"type":567,"value":1214},{"type":562,"tag":589,"props":1293,"children":1294},{"style":893},[1295],{"type":567,"value":1175},{"type":562,"tag":589,"props":1297,"children":1298},{"style":921},[1299],{"type":567,"value":1223},{"type":562,"tag":589,"props":1301,"children":1302},{"style":893},[1303],{"type":567,"value":983},{"type":562,"tag":589,"props":1305,"children":1306},{"style":921},[1307],{"type":567,"value":1051},{"type":562,"tag":589,"props":1309,"children":1310},{"style":893},[1311],{"type":567,"value":1119},{"type":562,"tag":589,"props":1313,"children":1315},{"class":591,"line":1314},23,[1316,1321,1325,1329,1333,1337],{"type":562,"tag":589,"props":1317,"children":1318},{"style":921},[1319],{"type":567,"value":1320},"        l2",{"type":562,"tag":589,"props":1322,"children":1323},{"style":893},[1324],{"type":567,"value":983},{"type":562,"tag":589,"props":1326,"children":1327},{"style":921},[1328],{"type":567,"value":1051},{"type":562,"tag":589,"props":1330,"children":1331},{"style":893},[1332],{"type":567,"value":1175},{"type":562,"tag":589,"props":1334,"children":1335},{"style":921},[1336],{"type":567,"value":1223},{"type":562,"tag":589,"props":1338,"children":1339},{"style":893},[1340],{"type":567,"value":1119},{"type":562,"tag":589,"props":1342,"children":1344},{"class":591,"line":1343},24,[1345],{"type":562,"tag":589,"props":1346,"children":1347},{"style":893},[1348],{"type":567,"value":1349},"      }\n",{"type":562,"tag":589,"props":1351,"children":1353},{"class":591,"line":1352},25,[1354,1359,1363,1367,1371,1375],{"type":562,"tag":589,"props":1355,"children":1356},{"style":921},[1357],{"type":567,"value":1358},"      current",{"type":562,"tag":589,"props":1360,"children":1361},{"style":893},[1362],{"type":567,"value":983},{"type":562,"tag":589,"props":1364,"children":1365},{"style":921},[1366],{"type":567,"value":1106},{"type":562,"tag":589,"props":1368,"children":1369},{"style":893},[1370],{"type":567,"value":1175},{"type":562,"tag":589,"props":1372,"children":1373},{"style":921},[1374],{"type":567,"value":1223},{"type":562,"tag":589,"props":1376,"children":1377},{"style":893},[1378],{"type":567,"value":1119},{"type":562,"tag":589,"props":1380,"children":1382},{"class":591,"line":1381},26,[1383],{"type":562,"tag":589,"props":1384,"children":1385},{"style":893},[1386],{"type":567,"value":1387},"    }\n",{"type":562,"tag":589,"props":1389,"children":1391},{"class":591,"line":1390},27,[1392],{"type":562,"tag":589,"props":1393,"children":1395},{"emptyLinePlaceholder":1394},true,[1396],{"type":567,"value":1397},"\n",{"type":562,"tag":589,"props":1399,"children":1401},{"class":591,"line":1400},28,[1402,1407,1411,1415,1419,1423,1428,1432],{"type":562,"tag":589,"props":1403,"children":1404},{"style":921},[1405],{"type":567,"value":1406},"    current",{"type":562,"tag":589,"props":1408,"children":1409},{"style":893},[1410],{"type":567,"value":1175},{"type":562,"tag":589,"props":1412,"children":1413},{"style":921},[1414],{"type":567,"value":1223},{"type":562,"tag":589,"props":1416,"children":1417},{"style":893},[1418],{"type":567,"value":983},{"type":562,"tag":589,"props":1420,"children":1421},{"style":921},[1422],{"type":567,"value":1232},{"type":562,"tag":589,"props":1424,"children":1425},{"style":969},[1426],{"type":567,"value":1427}," ||",{"type":562,"tag":589,"props":1429,"children":1430},{"style":921},[1431],{"type":567,"value":1051},{"type":562,"tag":589,"props":1433,"children":1434},{"style":893},[1435],{"type":567,"value":1119},{"type":562,"tag":589,"props":1437,"children":1439},{"class":591,"line":1438},29,[1440],{"type":562,"tag":589,"props":1441,"children":1442},{"emptyLinePlaceholder":1394},[1443],{"type":567,"value":1397},{"type":562,"tag":589,"props":1445,"children":1447},{"class":591,"line":1446},30,[1448,1453,1457,1461,1465],{"type":562,"tag":589,"props":1449,"children":1450},{"style":899},[1451],{"type":567,"value":1452},"    return",{"type":562,"tag":589,"props":1454,"children":1455},{"style":921},[1456],{"type":567,"value":1073},{"type":562,"tag":589,"props":1458,"children":1459},{"style":893},[1460],{"type":567,"value":1175},{"type":562,"tag":589,"props":1462,"children":1463},{"style":921},[1464],{"type":567,"value":1223},{"type":562,"tag":589,"props":1466,"children":1467},{"style":893},[1468],{"type":567,"value":1119},{"type":562,"tag":589,"props":1470,"children":1472},{"class":591,"line":1471},31,[1473],{"type":562,"tag":589,"props":1474,"children":1475},{"style":893},[1476],{"type":567,"value":1477},"  }\n",{"type":562,"tag":589,"props":1479,"children":1481},{"class":591,"line":1480},32,[1482],{"type":562,"tag":589,"props":1483,"children":1484},{"emptyLinePlaceholder":1394},[1485],{"type":567,"value":1397},{"type":562,"tag":589,"props":1487,"children":1489},{"class":591,"line":1488},33,[1490],{"type":562,"tag":589,"props":1491,"children":1492},{"style":824},[1493],{"type":567,"value":1494},"  // 分冶，归并排序\n",{"type":562,"tag":589,"props":1496,"children":1498},{"class":591,"line":1497},34,[1499,1503,1508,1512,1517,1521,1526,1530],{"type":562,"tag":589,"props":1500,"children":1501},{"style":969},[1502],{"type":567,"value":1026},{"type":562,"tag":589,"props":1504,"children":1505},{"style":975},[1506],{"type":567,"value":1507}," dfs",{"type":562,"tag":589,"props":1509,"children":1510},{"style":893},[1511],{"type":567,"value":1036},{"type":562,"tag":589,"props":1513,"children":1514},{"style":921},[1515],{"type":567,"value":1516},"i",{"type":562,"tag":589,"props":1518,"children":1519},{"style":893},[1520],{"type":567,"value":1046},{"type":562,"tag":589,"props":1522,"children":1523},{"style":921},[1524],{"type":567,"value":1525}," j",{"type":562,"tag":589,"props":1527,"children":1528},{"style":893},[1529],{"type":567,"value":1003},{"type":562,"tag":589,"props":1531,"children":1532},{"style":893},[1533],{"type":567,"value":1008},{"type":562,"tag":589,"props":1535,"children":1537},{"class":591,"line":1536},35,[1538,1542,1547,1551,1555,1560,1565],{"type":562,"tag":589,"props":1539,"children":1540},{"style":969},[1541],{"type":567,"value":1068},{"type":562,"tag":589,"props":1543,"children":1544},{"style":921},[1545],{"type":567,"value":1546}," len",{"type":562,"tag":589,"props":1548,"children":1549},{"style":893},[1550],{"type":567,"value":983},{"type":562,"tag":589,"props":1552,"children":1553},{"style":921},[1554],{"type":567,"value":1525},{"type":562,"tag":589,"props":1556,"children":1557},{"style":969},[1558],{"type":567,"value":1559}," -",{"type":562,"tag":589,"props":1561,"children":1562},{"style":921},[1563],{"type":567,"value":1564}," i",{"type":562,"tag":589,"props":1566,"children":1567},{"style":893},[1568],{"type":567,"value":1119},{"type":562,"tag":589,"props":1570,"children":1572},{"class":591,"line":1571},36,[1573,1578,1582,1587,1592,1596,1601,1606],{"type":562,"tag":589,"props":1574,"children":1575},{"style":899},[1576],{"type":567,"value":1577},"    if",{"type":562,"tag":589,"props":1579,"children":1580},{"style":893},[1581],{"type":567,"value":993},{"type":562,"tag":589,"props":1583,"children":1584},{"style":969},[1585],{"type":567,"value":1586},"!",{"type":562,"tag":589,"props":1588,"children":1589},{"style":921},[1590],{"type":567,"value":1591},"len",{"type":562,"tag":589,"props":1593,"children":1594},{"style":893},[1595],{"type":567,"value":1003},{"type":562,"tag":589,"props":1597,"children":1598},{"style":899},[1599],{"type":567,"value":1600}," return",{"type":562,"tag":589,"props":1602,"children":1603},{"style":969},[1604],{"type":567,"value":1605}," null",{"type":562,"tag":589,"props":1607,"children":1608},{"style":893},[1609],{"type":567,"value":1119},{"type":562,"tag":589,"props":1611,"children":1613},{"class":591,"line":1612},37,[1614,1618,1622,1626,1631,1637,1641,1645,1650,1655,1659],{"type":562,"tag":589,"props":1615,"children":1616},{"style":899},[1617],{"type":567,"value":1577},{"type":562,"tag":589,"props":1619,"children":1620},{"style":893},[1621],{"type":567,"value":993},{"type":562,"tag":589,"props":1623,"children":1624},{"style":921},[1625],{"type":567,"value":1591},{"type":562,"tag":589,"props":1627,"children":1628},{"style":969},[1629],{"type":567,"value":1630}," ===",{"type":562,"tag":589,"props":1632,"children":1634},{"style":1633},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[1635],{"type":567,"value":1636}," 1",{"type":562,"tag":589,"props":1638,"children":1639},{"style":893},[1640],{"type":567,"value":1003},{"type":562,"tag":589,"props":1642,"children":1643},{"style":899},[1644],{"type":567,"value":1600},{"type":562,"tag":589,"props":1646,"children":1647},{"style":921},[1648],{"type":567,"value":1649}," list",{"type":562,"tag":589,"props":1651,"children":1652},{"style":893},[1653],{"type":567,"value":1654},"[",{"type":562,"tag":589,"props":1656,"children":1657},{"style":921},[1658],{"type":567,"value":1516},{"type":562,"tag":589,"props":1660,"children":1661},{"style":893},[1662],{"type":567,"value":1663},"];\n",{"type":562,"tag":589,"props":1665,"children":1667},{"class":591,"line":1666},38,[1668],{"type":562,"tag":589,"props":1669,"children":1670},{"emptyLinePlaceholder":1394},[1671],{"type":567,"value":1397},{"type":562,"tag":589,"props":1673,"children":1675},{"class":591,"line":1674},39,[1676,1680,1685,1689,1693,1698,1702],{"type":562,"tag":589,"props":1677,"children":1678},{"style":969},[1679],{"type":567,"value":1068},{"type":562,"tag":589,"props":1681,"children":1682},{"style":921},[1683],{"type":567,"value":1684}," mid",{"type":562,"tag":589,"props":1686,"children":1687},{"style":893},[1688],{"type":567,"value":983},{"type":562,"tag":589,"props":1690,"children":1691},{"style":921},[1692],{"type":567,"value":1546},{"type":562,"tag":589,"props":1694,"children":1695},{"style":969},[1696],{"type":567,"value":1697}," >>",{"type":562,"tag":589,"props":1699,"children":1700},{"style":1633},[1701],{"type":567,"value":1636},{"type":562,"tag":589,"props":1703,"children":1704},{"style":893},[1705],{"type":567,"value":1119},{"type":562,"tag":589,"props":1707,"children":1709},{"class":591,"line":1708},40,[1710,1714,1718,1722,1726,1730,1734,1738,1742,1747,1751,1756],{"type":562,"tag":589,"props":1711,"children":1712},{"style":969},[1713],{"type":567,"value":1068},{"type":562,"tag":589,"props":1715,"children":1716},{"style":921},[1717],{"type":567,"value":1232},{"type":562,"tag":589,"props":1719,"children":1720},{"style":893},[1721],{"type":567,"value":983},{"type":562,"tag":589,"props":1723,"children":1724},{"style":975},[1725],{"type":567,"value":1507},{"type":562,"tag":589,"props":1727,"children":1728},{"style":893},[1729],{"type":567,"value":1036},{"type":562,"tag":589,"props":1731,"children":1732},{"style":921},[1733],{"type":567,"value":1516},{"type":562,"tag":589,"props":1735,"children":1736},{"style":893},[1737],{"type":567,"value":1046},{"type":562,"tag":589,"props":1739,"children":1740},{"style":921},[1741],{"type":567,"value":1564},{"type":562,"tag":589,"props":1743,"children":1744},{"style":969},[1745],{"type":567,"value":1746}," +",{"type":562,"tag":589,"props":1748,"children":1749},{"style":921},[1750],{"type":567,"value":1684},{"type":562,"tag":589,"props":1752,"children":1753},{"style":893},[1754],{"type":567,"value":1755},");",{"type":562,"tag":589,"props":1757,"children":1758},{"style":824},[1759],{"type":567,"value":1760}," // 合并左半部分\n",{"type":562,"tag":589,"props":1762,"children":1764},{"class":591,"line":1763},41,[1765,1769,1773,1777,1781,1785,1789,1793,1797,1801,1805,1809],{"type":562,"tag":589,"props":1766,"children":1767},{"style":969},[1768],{"type":567,"value":1068},{"type":562,"tag":589,"props":1770,"children":1771},{"style":921},[1772],{"type":567,"value":1051},{"type":562,"tag":589,"props":1774,"children":1775},{"style":893},[1776],{"type":567,"value":983},{"type":562,"tag":589,"props":1778,"children":1779},{"style":975},[1780],{"type":567,"value":1507},{"type":562,"tag":589,"props":1782,"children":1783},{"style":893},[1784],{"type":567,"value":1036},{"type":562,"tag":589,"props":1786,"children":1787},{"style":921},[1788],{"type":567,"value":1516},{"type":562,"tag":589,"props":1790,"children":1791},{"style":969},[1792],{"type":567,"value":1746},{"type":562,"tag":589,"props":1794,"children":1795},{"style":921},[1796],{"type":567,"value":1684},{"type":562,"tag":589,"props":1798,"children":1799},{"style":893},[1800],{"type":567,"value":1046},{"type":562,"tag":589,"props":1802,"children":1803},{"style":921},[1804],{"type":567,"value":1525},{"type":562,"tag":589,"props":1806,"children":1807},{"style":893},[1808],{"type":567,"value":1755},{"type":562,"tag":589,"props":1810,"children":1811},{"style":824},[1812],{"type":567,"value":1813}," // 合并右半部分\n",{"type":562,"tag":589,"props":1815,"children":1817},{"class":591,"line":1816},42,[1818,1822,1826,1830,1834,1838,1842],{"type":562,"tag":589,"props":1819,"children":1820},{"style":899},[1821],{"type":567,"value":1452},{"type":562,"tag":589,"props":1823,"children":1824},{"style":975},[1825],{"type":567,"value":1031},{"type":562,"tag":589,"props":1827,"children":1828},{"style":893},[1829],{"type":567,"value":1036},{"type":562,"tag":589,"props":1831,"children":1832},{"style":921},[1833],{"type":567,"value":1041},{"type":562,"tag":589,"props":1835,"children":1836},{"style":893},[1837],{"type":567,"value":1046},{"type":562,"tag":589,"props":1839,"children":1840},{"style":921},[1841],{"type":567,"value":1051},{"type":562,"tag":589,"props":1843,"children":1844},{"style":893},[1845],{"type":567,"value":1846},");\n",{"type":562,"tag":589,"props":1848,"children":1850},{"class":591,"line":1849},43,[1851],{"type":562,"tag":589,"props":1852,"children":1853},{"style":893},[1854],{"type":567,"value":1477},{"type":562,"tag":589,"props":1856,"children":1858},{"class":591,"line":1857},44,[1859],{"type":562,"tag":589,"props":1860,"children":1861},{"emptyLinePlaceholder":1394},[1862],{"type":567,"value":1397},{"type":562,"tag":589,"props":1864,"children":1866},{"class":591,"line":1865},45,[1867],{"type":562,"tag":589,"props":1868,"children":1869},{"style":824},[1870],{"type":567,"value":1871},"  // 合并\n",{"type":562,"tag":589,"props":1873,"children":1875},{"class":591,"line":1874},46,[1876,1881,1885,1889,1894,1898,1903,1907,1913],{"type":562,"tag":589,"props":1877,"children":1878},{"style":899},[1879],{"type":567,"value":1880},"  return",{"type":562,"tag":589,"props":1882,"children":1883},{"style":975},[1884],{"type":567,"value":1507},{"type":562,"tag":589,"props":1886,"children":1887},{"style":893},[1888],{"type":567,"value":1036},{"type":562,"tag":589,"props":1890,"children":1891},{"style":1633},[1892],{"type":567,"value":1893},"0",{"type":562,"tag":589,"props":1895,"children":1896},{"style":893},[1897],{"type":567,"value":1046},{"type":562,"tag":589,"props":1899,"children":1900},{"style":921},[1901],{"type":567,"value":1902}," lists",{"type":562,"tag":589,"props":1904,"children":1905},{"style":893},[1906],{"type":567,"value":1175},{"type":562,"tag":589,"props":1908,"children":1910},{"style":1909},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1911],{"type":567,"value":1912},"length",{"type":562,"tag":589,"props":1914,"children":1915},{"style":893},[1916],{"type":567,"value":1846},{"type":562,"tag":589,"props":1918,"children":1920},{"class":591,"line":1919},47,[1921],{"type":562,"tag":589,"props":1922,"children":1923},{"style":893},[1924],{"type":567,"value":1925},"};\n",{"type":562,"tag":1927,"props":1928,"children":1929},"style",{},[1930],{"type":567,"value":1931},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":628,"depth":628,"links":1933},[1934,1935],{"id":778,"depth":601,"text":778},{"id":801,"depth":601,"text":801,"children":1936},[1937],{"id":807,"depth":610,"text":807},"markdown","content:1.algorithm:3.leetcode:3.major:23.merge-k-sorted-lists.md","content","1.algorithm/3.leetcode/3.major/23.merge-k-sorted-lists.md","md",[1944,1946],{"_path":93,"title":92,"description":1945},"数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。",{"_path":99,"title":98,"description":1947},"给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。",1715137597535]