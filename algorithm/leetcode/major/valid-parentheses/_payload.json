[{"data":1,"prerenderedAt":1227},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/valid-parentheses":460,"/algorithm/leetcode/major/valid-parentheses-surround":1222},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":81,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":80,"description":464,"url":465,"body":466,"_type":1217,"_id":1218,"_source":1219,"_file":1220,"_extension":1221},"major",false,"","给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","https://leetcode.cn/problems/valid-parentheses",{"type":467,"children":468,"toc":1211},"root",[469,476,481,501,506,536,541,563,568,591,596,610,616,621,627,1205],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"有效字符串需满足：",{"type":470,"tag":482,"props":483,"children":484},"ol",{},[485,491,496],{"type":470,"tag":486,"props":487,"children":488},"li",{},[489],{"type":475,"value":490},"左括号必须用相同类型的右括号闭合。",{"type":470,"tag":486,"props":492,"children":493},{},[494],{"type":475,"value":495},"左括号必须以正确的顺序闭合。",{"type":470,"tag":486,"props":497,"children":498},{},[499],{"type":475,"value":500},"每个右括号都有一个对应的相同类型的左括号。",{"type":470,"tag":471,"props":502,"children":503},{},[504],{"type":475,"value":505},"示例 1：",{"type":470,"tag":507,"props":508,"children":511},"pre",{"className":509,"code":510,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"()\"\n输出：true\n",[512],{"type":470,"tag":513,"props":514,"children":515},"code",{"__ignoreMap":463},[516,527],{"type":470,"tag":517,"props":518,"children":521},"span",{"class":519,"line":520},"line",1,[522],{"type":470,"tag":517,"props":523,"children":524},{},[525],{"type":475,"value":526},"输入：s = \"()\"\n",{"type":470,"tag":517,"props":528,"children":530},{"class":519,"line":529},2,[531],{"type":470,"tag":517,"props":532,"children":533},{},[534],{"type":475,"value":535},"输出：true\n",{"type":470,"tag":471,"props":537,"children":538},{},[539],{"type":475,"value":540},"示例 2：",{"type":470,"tag":507,"props":542,"children":544},{"className":509,"code":543,"language":475,"meta":463,"style":463},"输入：s = \"()[]{}\"\n输出：true\n",[545],{"type":470,"tag":513,"props":546,"children":547},{"__ignoreMap":463},[548,556],{"type":470,"tag":517,"props":549,"children":550},{"class":519,"line":520},[551],{"type":470,"tag":517,"props":552,"children":553},{},[554],{"type":475,"value":555},"输入：s = \"()[]{}\"\n",{"type":470,"tag":517,"props":557,"children":558},{"class":519,"line":529},[559],{"type":470,"tag":517,"props":560,"children":561},{},[562],{"type":475,"value":535},{"type":470,"tag":471,"props":564,"children":565},{},[566],{"type":475,"value":567},"示例 3：",{"type":470,"tag":507,"props":569,"children":571},{"className":509,"code":570,"language":475,"meta":463,"style":463},"输入：s = \"(]\"\n输出：false\n",[572],{"type":470,"tag":513,"props":573,"children":574},{"__ignoreMap":463},[575,583],{"type":470,"tag":517,"props":576,"children":577},{"class":519,"line":520},[578],{"type":470,"tag":517,"props":579,"children":580},{},[581],{"type":475,"value":582},"输入：s = \"(]\"\n",{"type":470,"tag":517,"props":584,"children":585},{"class":519,"line":529},[586],{"type":470,"tag":517,"props":587,"children":588},{},[589],{"type":475,"value":590},"输出：false\n",{"type":470,"tag":471,"props":592,"children":593},{},[594],{"type":475,"value":595},"提示：",{"type":470,"tag":597,"props":598,"children":599},"ul",{},[600,605],{"type":470,"tag":486,"props":601,"children":602},{},[603],{"type":475,"value":604},"1 \u003C= s.length \u003C= 104",{"type":470,"tag":486,"props":606,"children":607},{},[608],{"type":475,"value":609},"s 仅由括号 '()[]{}' 组成",{"type":470,"tag":611,"props":612,"children":614},"h2",{"id":613},"解题思路",[615],{"type":475,"value":613},{"type":470,"tag":611,"props":617,"children":619},{"id":618},"实现",[620],{"type":475,"value":618},{"type":470,"tag":622,"props":623,"children":625},"h3",{"id":624},"栈",[626],{"type":475,"value":624},{"type":470,"tag":507,"props":628,"children":632},{"className":629,"code":630,"language":631,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function (s) {\n  let map = new Map([\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n  ]);\n  let stack = [];\n  for (let char of s) {\n    if (map.has(char)) {\n      stack.push(char);\n    } else if (!stack.length || map.get(stack.pop()) !== char) {\n      return false;\n    }\n  }\n  return !stack.length;\n};\n","js",[633],{"type":470,"tag":513,"props":634,"children":635},{"__ignoreMap":463},[636,645,671,689,698,742,776,812,842,872,886,912,950,994,1029,1124,1143,1152,1161,1192],{"type":470,"tag":517,"props":637,"children":638},{"class":519,"line":520},[639],{"type":470,"tag":517,"props":640,"children":642},{"style":641},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[643],{"type":475,"value":644},"/**\n",{"type":470,"tag":517,"props":646,"children":647},{"class":519,"line":529},[648,653,659,665],{"type":470,"tag":517,"props":649,"children":650},{"style":641},[651],{"type":475,"value":652}," * ",{"type":470,"tag":517,"props":654,"children":656},{"style":655},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[657],{"type":475,"value":658},"@param",{"type":470,"tag":517,"props":660,"children":662},{"style":661},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[663],{"type":475,"value":664}," {string}",{"type":470,"tag":517,"props":666,"children":668},{"style":667},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[669],{"type":475,"value":670}," s\n",{"type":470,"tag":517,"props":672,"children":674},{"class":519,"line":673},3,[675,679,684],{"type":470,"tag":517,"props":676,"children":677},{"style":641},[678],{"type":475,"value":652},{"type":470,"tag":517,"props":680,"children":681},{"style":655},[682],{"type":475,"value":683},"@return",{"type":470,"tag":517,"props":685,"children":686},{"style":661},[687],{"type":475,"value":688}," {boolean}\n",{"type":470,"tag":517,"props":690,"children":692},{"class":519,"line":691},4,[693],{"type":470,"tag":517,"props":694,"children":695},{"style":641},[696],{"type":475,"value":697}," */\n",{"type":470,"tag":517,"props":699,"children":701},{"class":519,"line":700},5,[702,708,714,720,725,731,737],{"type":470,"tag":517,"props":703,"children":705},{"style":704},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[706],{"type":475,"value":707},"var",{"type":470,"tag":517,"props":709,"children":711},{"style":710},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[712],{"type":475,"value":713}," isValid",{"type":470,"tag":517,"props":715,"children":717},{"style":716},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[718],{"type":475,"value":719}," =",{"type":470,"tag":517,"props":721,"children":722},{"style":704},[723],{"type":475,"value":724}," function",{"type":470,"tag":517,"props":726,"children":728},{"style":727},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[729],{"type":475,"value":730}," (",{"type":470,"tag":517,"props":732,"children":734},{"style":733},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[735],{"type":475,"value":736},"s",{"type":470,"tag":517,"props":738,"children":739},{"style":727},[740],{"type":475,"value":741},") {\n",{"type":470,"tag":517,"props":743,"children":745},{"class":519,"line":744},6,[746,751,757,761,766,771],{"type":470,"tag":517,"props":747,"children":748},{"style":704},[749],{"type":475,"value":750},"  let",{"type":470,"tag":517,"props":752,"children":754},{"style":753},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[755],{"type":475,"value":756}," map",{"type":470,"tag":517,"props":758,"children":759},{"style":716},[760],{"type":475,"value":719},{"type":470,"tag":517,"props":762,"children":763},{"style":716},[764],{"type":475,"value":765}," new",{"type":470,"tag":517,"props":767,"children":768},{"style":710},[769],{"type":475,"value":770}," Map",{"type":470,"tag":517,"props":772,"children":773},{"style":727},[774],{"type":475,"value":775},"([\n",{"type":470,"tag":517,"props":777,"children":779},{"class":519,"line":778},7,[780,785,791,797,802,807],{"type":470,"tag":517,"props":781,"children":782},{"style":727},[783],{"type":475,"value":784},"    [",{"type":470,"tag":517,"props":786,"children":788},{"style":787},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[789],{"type":475,"value":790},"\"(\"",{"type":470,"tag":517,"props":792,"children":794},{"style":793},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[795],{"type":475,"value":796},",",{"type":470,"tag":517,"props":798,"children":799},{"style":787},[800],{"type":475,"value":801}," \")\"",{"type":470,"tag":517,"props":803,"children":804},{"style":727},[805],{"type":475,"value":806},"]",{"type":470,"tag":517,"props":808,"children":809},{"style":793},[810],{"type":475,"value":811},",\n",{"type":470,"tag":517,"props":813,"children":815},{"class":519,"line":814},8,[816,820,825,829,834,838],{"type":470,"tag":517,"props":817,"children":818},{"style":727},[819],{"type":475,"value":784},{"type":470,"tag":517,"props":821,"children":822},{"style":787},[823],{"type":475,"value":824},"\"{\"",{"type":470,"tag":517,"props":826,"children":827},{"style":793},[828],{"type":475,"value":796},{"type":470,"tag":517,"props":830,"children":831},{"style":787},[832],{"type":475,"value":833}," \"}\"",{"type":470,"tag":517,"props":835,"children":836},{"style":727},[837],{"type":475,"value":806},{"type":470,"tag":517,"props":839,"children":840},{"style":793},[841],{"type":475,"value":811},{"type":470,"tag":517,"props":843,"children":845},{"class":519,"line":844},9,[846,850,855,859,864,868],{"type":470,"tag":517,"props":847,"children":848},{"style":727},[849],{"type":475,"value":784},{"type":470,"tag":517,"props":851,"children":852},{"style":787},[853],{"type":475,"value":854},"\"[\"",{"type":470,"tag":517,"props":856,"children":857},{"style":793},[858],{"type":475,"value":796},{"type":470,"tag":517,"props":860,"children":861},{"style":787},[862],{"type":475,"value":863}," \"]\"",{"type":470,"tag":517,"props":865,"children":866},{"style":727},[867],{"type":475,"value":806},{"type":470,"tag":517,"props":869,"children":870},{"style":793},[871],{"type":475,"value":811},{"type":470,"tag":517,"props":873,"children":875},{"class":519,"line":874},10,[876,881],{"type":470,"tag":517,"props":877,"children":878},{"style":727},[879],{"type":475,"value":880},"  ])",{"type":470,"tag":517,"props":882,"children":883},{"style":793},[884],{"type":475,"value":885},";\n",{"type":470,"tag":517,"props":887,"children":889},{"class":519,"line":888},11,[890,894,899,903,908],{"type":470,"tag":517,"props":891,"children":892},{"style":704},[893],{"type":475,"value":750},{"type":470,"tag":517,"props":895,"children":896},{"style":753},[897],{"type":475,"value":898}," stack",{"type":470,"tag":517,"props":900,"children":901},{"style":716},[902],{"type":475,"value":719},{"type":470,"tag":517,"props":904,"children":905},{"style":727},[906],{"type":475,"value":907}," []",{"type":470,"tag":517,"props":909,"children":910},{"style":793},[911],{"type":475,"value":885},{"type":470,"tag":517,"props":913,"children":915},{"class":519,"line":914},12,[916,922,926,931,936,941,946],{"type":470,"tag":517,"props":917,"children":919},{"style":918},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[920],{"type":475,"value":921},"  for",{"type":470,"tag":517,"props":923,"children":924},{"style":727},[925],{"type":475,"value":730},{"type":470,"tag":517,"props":927,"children":928},{"style":704},[929],{"type":475,"value":930},"let",{"type":470,"tag":517,"props":932,"children":933},{"style":753},[934],{"type":475,"value":935}," char",{"type":470,"tag":517,"props":937,"children":938},{"style":716},[939],{"type":475,"value":940}," of",{"type":470,"tag":517,"props":942,"children":943},{"style":753},[944],{"type":475,"value":945}," s",{"type":470,"tag":517,"props":947,"children":948},{"style":727},[949],{"type":475,"value":741},{"type":470,"tag":517,"props":951,"children":953},{"class":519,"line":952},13,[954,959,963,968,974,979,984,989],{"type":470,"tag":517,"props":955,"children":956},{"style":918},[957],{"type":475,"value":958},"    if",{"type":470,"tag":517,"props":960,"children":961},{"style":727},[962],{"type":475,"value":730},{"type":470,"tag":517,"props":964,"children":965},{"style":753},[966],{"type":475,"value":967},"map",{"type":470,"tag":517,"props":969,"children":971},{"style":970},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[972],{"type":475,"value":973},".",{"type":470,"tag":517,"props":975,"children":976},{"style":710},[977],{"type":475,"value":978},"has",{"type":470,"tag":517,"props":980,"children":981},{"style":727},[982],{"type":475,"value":983},"(",{"type":470,"tag":517,"props":985,"children":986},{"style":753},[987],{"type":475,"value":988},"char",{"type":470,"tag":517,"props":990,"children":991},{"style":727},[992],{"type":475,"value":993},")) {\n",{"type":470,"tag":517,"props":995,"children":997},{"class":519,"line":996},14,[998,1003,1007,1012,1016,1020,1025],{"type":470,"tag":517,"props":999,"children":1000},{"style":753},[1001],{"type":475,"value":1002},"      stack",{"type":470,"tag":517,"props":1004,"children":1005},{"style":970},[1006],{"type":475,"value":973},{"type":470,"tag":517,"props":1008,"children":1009},{"style":710},[1010],{"type":475,"value":1011},"push",{"type":470,"tag":517,"props":1013,"children":1014},{"style":727},[1015],{"type":475,"value":983},{"type":470,"tag":517,"props":1017,"children":1018},{"style":753},[1019],{"type":475,"value":988},{"type":470,"tag":517,"props":1021,"children":1022},{"style":727},[1023],{"type":475,"value":1024},")",{"type":470,"tag":517,"props":1026,"children":1027},{"style":793},[1028],{"type":475,"value":885},{"type":470,"tag":517,"props":1030,"children":1032},{"class":519,"line":1031},15,[1033,1038,1043,1048,1052,1057,1062,1066,1071,1076,1080,1084,1089,1093,1097,1101,1106,1111,1116,1120],{"type":470,"tag":517,"props":1034,"children":1035},{"style":727},[1036],{"type":475,"value":1037},"    } ",{"type":470,"tag":517,"props":1039,"children":1040},{"style":918},[1041],{"type":475,"value":1042},"else",{"type":470,"tag":517,"props":1044,"children":1045},{"style":918},[1046],{"type":475,"value":1047}," if",{"type":470,"tag":517,"props":1049,"children":1050},{"style":727},[1051],{"type":475,"value":730},{"type":470,"tag":517,"props":1053,"children":1054},{"style":716},[1055],{"type":475,"value":1056},"!",{"type":470,"tag":517,"props":1058,"children":1059},{"style":753},[1060],{"type":475,"value":1061},"stack",{"type":470,"tag":517,"props":1063,"children":1064},{"style":970},[1065],{"type":475,"value":973},{"type":470,"tag":517,"props":1067,"children":1068},{"style":727},[1069],{"type":475,"value":1070},"length ",{"type":470,"tag":517,"props":1072,"children":1073},{"style":716},[1074],{"type":475,"value":1075},"||",{"type":470,"tag":517,"props":1077,"children":1078},{"style":753},[1079],{"type":475,"value":756},{"type":470,"tag":517,"props":1081,"children":1082},{"style":970},[1083],{"type":475,"value":973},{"type":470,"tag":517,"props":1085,"children":1086},{"style":710},[1087],{"type":475,"value":1088},"get",{"type":470,"tag":517,"props":1090,"children":1091},{"style":727},[1092],{"type":475,"value":983},{"type":470,"tag":517,"props":1094,"children":1095},{"style":753},[1096],{"type":475,"value":1061},{"type":470,"tag":517,"props":1098,"children":1099},{"style":970},[1100],{"type":475,"value":973},{"type":470,"tag":517,"props":1102,"children":1103},{"style":710},[1104],{"type":475,"value":1105},"pop",{"type":470,"tag":517,"props":1107,"children":1108},{"style":727},[1109],{"type":475,"value":1110},"()) ",{"type":470,"tag":517,"props":1112,"children":1113},{"style":716},[1114],{"type":475,"value":1115},"!==",{"type":470,"tag":517,"props":1117,"children":1118},{"style":753},[1119],{"type":475,"value":935},{"type":470,"tag":517,"props":1121,"children":1122},{"style":727},[1123],{"type":475,"value":741},{"type":470,"tag":517,"props":1125,"children":1127},{"class":519,"line":1126},16,[1128,1133,1139],{"type":470,"tag":517,"props":1129,"children":1130},{"style":918},[1131],{"type":475,"value":1132},"      return",{"type":470,"tag":517,"props":1134,"children":1136},{"style":1135},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1137],{"type":475,"value":1138}," false",{"type":470,"tag":517,"props":1140,"children":1141},{"style":793},[1142],{"type":475,"value":885},{"type":470,"tag":517,"props":1144,"children":1146},{"class":519,"line":1145},17,[1147],{"type":470,"tag":517,"props":1148,"children":1149},{"style":727},[1150],{"type":475,"value":1151},"    }\n",{"type":470,"tag":517,"props":1153,"children":1155},{"class":519,"line":1154},18,[1156],{"type":470,"tag":517,"props":1157,"children":1158},{"style":727},[1159],{"type":475,"value":1160},"  }\n",{"type":470,"tag":517,"props":1162,"children":1164},{"class":519,"line":1163},19,[1165,1170,1175,1179,1183,1188],{"type":470,"tag":517,"props":1166,"children":1167},{"style":918},[1168],{"type":475,"value":1169},"  return",{"type":470,"tag":517,"props":1171,"children":1172},{"style":716},[1173],{"type":475,"value":1174}," !",{"type":470,"tag":517,"props":1176,"children":1177},{"style":753},[1178],{"type":475,"value":1061},{"type":470,"tag":517,"props":1180,"children":1181},{"style":970},[1182],{"type":475,"value":973},{"type":470,"tag":517,"props":1184,"children":1185},{"style":727},[1186],{"type":475,"value":1187},"length",{"type":470,"tag":517,"props":1189,"children":1190},{"style":793},[1191],{"type":475,"value":885},{"type":470,"tag":517,"props":1193,"children":1195},{"class":519,"line":1194},20,[1196,1201],{"type":470,"tag":517,"props":1197,"children":1198},{"style":727},[1199],{"type":475,"value":1200},"}",{"type":470,"tag":517,"props":1202,"children":1203},{"style":793},[1204],{"type":475,"value":885},{"type":470,"tag":1206,"props":1207,"children":1208},"style",{},[1209],{"type":475,"value":1210},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":700,"depth":700,"links":1212},[1213,1214],{"id":613,"depth":529,"text":613},{"id":618,"depth":529,"text":618,"children":1215},[1216],{"id":624,"depth":673,"text":624},"markdown","content:1.algorithm:3.leetcode:3.major:20.valid-parentheses.md","content","1.algorithm/3.leetcode/3.major/20.valid-parentheses.md","md",[1223,1225],{"_path":78,"title":77,"description":1224},"给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请",{"_path":84,"title":83,"description":1226},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",1713626402346]