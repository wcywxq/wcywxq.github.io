[{"data":1,"prerenderedAt":1370},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/valid-parentheses":546,"/algorithm/leetcode/major/valid-parentheses-surround":1365},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":87,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":86,"description":550,"url":551,"body":552,"_type":1360,"_id":1361,"_source":1362,"_file":1363,"_extension":1364},"major",false,"","给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","https://leetcode.cn/problems/valid-parentheses",{"type":553,"children":554,"toc":1354},"root",[555,562,567,587,592,622,627,649,654,677,682,696,702,707,713,1348],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"有效字符串需满足：",{"type":556,"tag":568,"props":569,"children":570},"ol",{},[571,577,582],{"type":556,"tag":572,"props":573,"children":574},"li",{},[575],{"type":561,"value":576},"左括号必须用相同类型的右括号闭合。",{"type":556,"tag":572,"props":578,"children":579},{},[580],{"type":561,"value":581},"左括号必须以正确的顺序闭合。",{"type":556,"tag":572,"props":583,"children":584},{},[585],{"type":561,"value":586},"每个右括号都有一个对应的相同类型的左括号。",{"type":556,"tag":557,"props":588,"children":589},{},[590],{"type":561,"value":591},"示例 1：",{"type":556,"tag":593,"props":594,"children":597},"pre",{"className":595,"code":596,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"()\"\n输出：true\n",[598],{"type":556,"tag":599,"props":600,"children":601},"code",{"__ignoreMap":549},[602,613],{"type":556,"tag":603,"props":604,"children":607},"span",{"class":605,"line":606},"line",1,[608],{"type":556,"tag":603,"props":609,"children":610},{},[611],{"type":561,"value":612},"输入：s = \"()\"\n",{"type":556,"tag":603,"props":614,"children":616},{"class":605,"line":615},2,[617],{"type":556,"tag":603,"props":618,"children":619},{},[620],{"type":561,"value":621},"输出：true\n",{"type":556,"tag":557,"props":623,"children":624},{},[625],{"type":561,"value":626},"示例 2：",{"type":556,"tag":593,"props":628,"children":630},{"className":595,"code":629,"language":561,"meta":549,"style":549},"输入：s = \"()[]{}\"\n输出：true\n",[631],{"type":556,"tag":599,"props":632,"children":633},{"__ignoreMap":549},[634,642],{"type":556,"tag":603,"props":635,"children":636},{"class":605,"line":606},[637],{"type":556,"tag":603,"props":638,"children":639},{},[640],{"type":561,"value":641},"输入：s = \"()[]{}\"\n",{"type":556,"tag":603,"props":643,"children":644},{"class":605,"line":615},[645],{"type":556,"tag":603,"props":646,"children":647},{},[648],{"type":561,"value":621},{"type":556,"tag":557,"props":650,"children":651},{},[652],{"type":561,"value":653},"示例 3：",{"type":556,"tag":593,"props":655,"children":657},{"className":595,"code":656,"language":561,"meta":549,"style":549},"输入：s = \"(]\"\n输出：false\n",[658],{"type":556,"tag":599,"props":659,"children":660},{"__ignoreMap":549},[661,669],{"type":556,"tag":603,"props":662,"children":663},{"class":605,"line":606},[664],{"type":556,"tag":603,"props":665,"children":666},{},[667],{"type":561,"value":668},"输入：s = \"(]\"\n",{"type":556,"tag":603,"props":670,"children":671},{"class":605,"line":615},[672],{"type":556,"tag":603,"props":673,"children":674},{},[675],{"type":561,"value":676},"输出：false\n",{"type":556,"tag":557,"props":678,"children":679},{},[680],{"type":561,"value":681},"提示：",{"type":556,"tag":683,"props":684,"children":685},"ul",{},[686,691],{"type":556,"tag":572,"props":687,"children":688},{},[689],{"type":561,"value":690},"1 \u003C= s.length \u003C= 104",{"type":556,"tag":572,"props":692,"children":693},{},[694],{"type":561,"value":695},"s 仅由括号 '()[]{}' 组成",{"type":556,"tag":697,"props":698,"children":700},"h2",{"id":699},"解题思路",[701],{"type":561,"value":699},{"type":556,"tag":697,"props":703,"children":705},{"id":704},"实现",[706],{"type":561,"value":704},{"type":556,"tag":708,"props":709,"children":711},"h3",{"id":710},"栈",[712],{"type":561,"value":710},{"type":556,"tag":593,"props":714,"children":718},{"className":715,"code":716,"language":717,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function (s) {\n  let map = new Map([\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n  ]);\n  let stack = [];\n  for (let char of s) {\n    if (map.has(char)) {\n      stack.push(char);\n    } else if (!stack.length || map.get(stack.pop()) !== char) {\n      return false;\n    }\n  }\n  return !stack.length;\n};\n","js",[719],{"type":556,"tag":599,"props":720,"children":721},{"__ignoreMap":549},[722,731,773,804,813,859,892,940,981,1023,1032,1054,1095,1141,1172,1272,1291,1300,1309,1339],{"type":556,"tag":603,"props":723,"children":724},{"class":605,"line":606},[725],{"type":556,"tag":603,"props":726,"children":728},{"style":727},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[729],{"type":561,"value":730},"/**\n",{"type":556,"tag":603,"props":732,"children":733},{"class":605,"line":615},[734,739,745,751,756,762,767],{"type":556,"tag":603,"props":735,"children":736},{"style":727},[737],{"type":561,"value":738}," * ",{"type":556,"tag":603,"props":740,"children":742},{"style":741},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[743],{"type":561,"value":744},"@",{"type":556,"tag":603,"props":746,"children":748},{"style":747},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[749],{"type":561,"value":750},"param",{"type":556,"tag":603,"props":752,"children":753},{"style":741},[754],{"type":561,"value":755}," {",{"type":556,"tag":603,"props":757,"children":759},{"style":758},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[760],{"type":561,"value":761},"string",{"type":556,"tag":603,"props":763,"children":764},{"style":741},[765],{"type":561,"value":766},"}",{"type":556,"tag":603,"props":768,"children":770},{"style":769},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[771],{"type":561,"value":772}," s\n",{"type":556,"tag":603,"props":774,"children":776},{"class":605,"line":775},3,[777,781,785,790,794,799],{"type":556,"tag":603,"props":778,"children":779},{"style":727},[780],{"type":561,"value":738},{"type":556,"tag":603,"props":782,"children":783},{"style":741},[784],{"type":561,"value":744},{"type":556,"tag":603,"props":786,"children":787},{"style":747},[788],{"type":561,"value":789},"return",{"type":556,"tag":603,"props":791,"children":792},{"style":741},[793],{"type":561,"value":755},{"type":556,"tag":603,"props":795,"children":796},{"style":758},[797],{"type":561,"value":798},"boolean",{"type":556,"tag":603,"props":800,"children":801},{"style":741},[802],{"type":561,"value":803},"}\n",{"type":556,"tag":603,"props":805,"children":807},{"class":605,"line":806},4,[808],{"type":556,"tag":603,"props":809,"children":810},{"style":727},[811],{"type":561,"value":812}," */\n",{"type":556,"tag":603,"props":814,"children":816},{"class":605,"line":815},5,[817,823,829,834,839,844,849,854],{"type":556,"tag":603,"props":818,"children":820},{"style":819},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[821],{"type":561,"value":822},"var",{"type":556,"tag":603,"props":824,"children":826},{"style":825},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[827],{"type":561,"value":828}," isValid",{"type":556,"tag":603,"props":830,"children":831},{"style":741},[832],{"type":561,"value":833}," =",{"type":556,"tag":603,"props":835,"children":836},{"style":819},[837],{"type":561,"value":838}," function",{"type":556,"tag":603,"props":840,"children":841},{"style":741},[842],{"type":561,"value":843}," (",{"type":556,"tag":603,"props":845,"children":846},{"style":769},[847],{"type":561,"value":848},"s",{"type":556,"tag":603,"props":850,"children":851},{"style":741},[852],{"type":561,"value":853},")",{"type":556,"tag":603,"props":855,"children":856},{"style":741},[857],{"type":561,"value":858}," {\n",{"type":556,"tag":603,"props":860,"children":862},{"class":605,"line":861},6,[863,868,873,877,882,887],{"type":556,"tag":603,"props":864,"children":865},{"style":819},[866],{"type":561,"value":867},"  let",{"type":556,"tag":603,"props":869,"children":870},{"style":769},[871],{"type":561,"value":872}," map",{"type":556,"tag":603,"props":874,"children":875},{"style":741},[876],{"type":561,"value":833},{"type":556,"tag":603,"props":878,"children":879},{"style":819},[880],{"type":561,"value":881}," new",{"type":556,"tag":603,"props":883,"children":884},{"style":825},[885],{"type":561,"value":886}," Map",{"type":556,"tag":603,"props":888,"children":889},{"style":741},[890],{"type":561,"value":891},"([\n",{"type":556,"tag":603,"props":893,"children":895},{"class":605,"line":894},7,[896,901,907,913,917,922,927,931,935],{"type":556,"tag":603,"props":897,"children":898},{"style":741},[899],{"type":561,"value":900},"    [",{"type":556,"tag":603,"props":902,"children":904},{"style":903},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[905],{"type":561,"value":906},"\"",{"type":556,"tag":603,"props":908,"children":910},{"style":909},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[911],{"type":561,"value":912},"(",{"type":556,"tag":603,"props":914,"children":915},{"style":903},[916],{"type":561,"value":906},{"type":556,"tag":603,"props":918,"children":919},{"style":741},[920],{"type":561,"value":921},",",{"type":556,"tag":603,"props":923,"children":924},{"style":903},[925],{"type":561,"value":926}," \"",{"type":556,"tag":603,"props":928,"children":929},{"style":909},[930],{"type":561,"value":853},{"type":556,"tag":603,"props":932,"children":933},{"style":903},[934],{"type":561,"value":906},{"type":556,"tag":603,"props":936,"children":937},{"style":741},[938],{"type":561,"value":939},"],\n",{"type":556,"tag":603,"props":941,"children":943},{"class":605,"line":942},8,[944,948,952,957,961,965,969,973,977],{"type":556,"tag":603,"props":945,"children":946},{"style":741},[947],{"type":561,"value":900},{"type":556,"tag":603,"props":949,"children":950},{"style":903},[951],{"type":561,"value":906},{"type":556,"tag":603,"props":953,"children":954},{"style":909},[955],{"type":561,"value":956},"{",{"type":556,"tag":603,"props":958,"children":959},{"style":903},[960],{"type":561,"value":906},{"type":556,"tag":603,"props":962,"children":963},{"style":741},[964],{"type":561,"value":921},{"type":556,"tag":603,"props":966,"children":967},{"style":903},[968],{"type":561,"value":926},{"type":556,"tag":603,"props":970,"children":971},{"style":909},[972],{"type":561,"value":766},{"type":556,"tag":603,"props":974,"children":975},{"style":903},[976],{"type":561,"value":906},{"type":556,"tag":603,"props":978,"children":979},{"style":741},[980],{"type":561,"value":939},{"type":556,"tag":603,"props":982,"children":984},{"class":605,"line":983},9,[985,989,993,998,1002,1006,1010,1015,1019],{"type":556,"tag":603,"props":986,"children":987},{"style":741},[988],{"type":561,"value":900},{"type":556,"tag":603,"props":990,"children":991},{"style":903},[992],{"type":561,"value":906},{"type":556,"tag":603,"props":994,"children":995},{"style":909},[996],{"type":561,"value":997},"[",{"type":556,"tag":603,"props":999,"children":1000},{"style":903},[1001],{"type":561,"value":906},{"type":556,"tag":603,"props":1003,"children":1004},{"style":741},[1005],{"type":561,"value":921},{"type":556,"tag":603,"props":1007,"children":1008},{"style":903},[1009],{"type":561,"value":926},{"type":556,"tag":603,"props":1011,"children":1012},{"style":909},[1013],{"type":561,"value":1014},"]",{"type":556,"tag":603,"props":1016,"children":1017},{"style":903},[1018],{"type":561,"value":906},{"type":556,"tag":603,"props":1020,"children":1021},{"style":741},[1022],{"type":561,"value":939},{"type":556,"tag":603,"props":1024,"children":1026},{"class":605,"line":1025},10,[1027],{"type":556,"tag":603,"props":1028,"children":1029},{"style":741},[1030],{"type":561,"value":1031},"  ]);\n",{"type":556,"tag":603,"props":1033,"children":1035},{"class":605,"line":1034},11,[1036,1040,1045,1049],{"type":556,"tag":603,"props":1037,"children":1038},{"style":819},[1039],{"type":561,"value":867},{"type":556,"tag":603,"props":1041,"children":1042},{"style":769},[1043],{"type":561,"value":1044}," stack",{"type":556,"tag":603,"props":1046,"children":1047},{"style":741},[1048],{"type":561,"value":833},{"type":556,"tag":603,"props":1050,"children":1051},{"style":741},[1052],{"type":561,"value":1053}," [];\n",{"type":556,"tag":603,"props":1055,"children":1057},{"class":605,"line":1056},12,[1058,1063,1067,1072,1077,1082,1087,1091],{"type":556,"tag":603,"props":1059,"children":1060},{"style":747},[1061],{"type":561,"value":1062},"  for",{"type":556,"tag":603,"props":1064,"children":1065},{"style":741},[1066],{"type":561,"value":843},{"type":556,"tag":603,"props":1068,"children":1069},{"style":819},[1070],{"type":561,"value":1071},"let",{"type":556,"tag":603,"props":1073,"children":1074},{"style":769},[1075],{"type":561,"value":1076}," char",{"type":556,"tag":603,"props":1078,"children":1079},{"style":819},[1080],{"type":561,"value":1081}," of",{"type":556,"tag":603,"props":1083,"children":1084},{"style":769},[1085],{"type":561,"value":1086}," s",{"type":556,"tag":603,"props":1088,"children":1089},{"style":741},[1090],{"type":561,"value":853},{"type":556,"tag":603,"props":1092,"children":1093},{"style":741},[1094],{"type":561,"value":858},{"type":556,"tag":603,"props":1096,"children":1098},{"class":605,"line":1097},13,[1099,1104,1108,1113,1118,1123,1127,1132,1137],{"type":556,"tag":603,"props":1100,"children":1101},{"style":747},[1102],{"type":561,"value":1103},"    if",{"type":556,"tag":603,"props":1105,"children":1106},{"style":741},[1107],{"type":561,"value":843},{"type":556,"tag":603,"props":1109,"children":1110},{"style":769},[1111],{"type":561,"value":1112},"map",{"type":556,"tag":603,"props":1114,"children":1115},{"style":741},[1116],{"type":561,"value":1117},".",{"type":556,"tag":603,"props":1119,"children":1120},{"style":825},[1121],{"type":561,"value":1122},"has",{"type":556,"tag":603,"props":1124,"children":1125},{"style":741},[1126],{"type":561,"value":912},{"type":556,"tag":603,"props":1128,"children":1129},{"style":769},[1130],{"type":561,"value":1131},"char",{"type":556,"tag":603,"props":1133,"children":1134},{"style":741},[1135],{"type":561,"value":1136},"))",{"type":556,"tag":603,"props":1138,"children":1139},{"style":741},[1140],{"type":561,"value":858},{"type":556,"tag":603,"props":1142,"children":1144},{"class":605,"line":1143},14,[1145,1150,1154,1159,1163,1167],{"type":556,"tag":603,"props":1146,"children":1147},{"style":769},[1148],{"type":561,"value":1149},"      stack",{"type":556,"tag":603,"props":1151,"children":1152},{"style":741},[1153],{"type":561,"value":1117},{"type":556,"tag":603,"props":1155,"children":1156},{"style":825},[1157],{"type":561,"value":1158},"push",{"type":556,"tag":603,"props":1160,"children":1161},{"style":741},[1162],{"type":561,"value":912},{"type":556,"tag":603,"props":1164,"children":1165},{"style":769},[1166],{"type":561,"value":1131},{"type":556,"tag":603,"props":1168,"children":1169},{"style":741},[1170],{"type":561,"value":1171},");\n",{"type":556,"tag":603,"props":1173,"children":1175},{"class":605,"line":1174},15,[1176,1181,1186,1191,1195,1200,1205,1209,1215,1220,1224,1228,1233,1237,1241,1245,1250,1255,1260,1264,1268],{"type":556,"tag":603,"props":1177,"children":1178},{"style":741},[1179],{"type":561,"value":1180},"    }",{"type":556,"tag":603,"props":1182,"children":1183},{"style":747},[1184],{"type":561,"value":1185}," else",{"type":556,"tag":603,"props":1187,"children":1188},{"style":747},[1189],{"type":561,"value":1190}," if",{"type":556,"tag":603,"props":1192,"children":1193},{"style":741},[1194],{"type":561,"value":843},{"type":556,"tag":603,"props":1196,"children":1197},{"style":819},[1198],{"type":561,"value":1199},"!",{"type":556,"tag":603,"props":1201,"children":1202},{"style":769},[1203],{"type":561,"value":1204},"stack",{"type":556,"tag":603,"props":1206,"children":1207},{"style":741},[1208],{"type":561,"value":1117},{"type":556,"tag":603,"props":1210,"children":1212},{"style":1211},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1213],{"type":561,"value":1214},"length",{"type":556,"tag":603,"props":1216,"children":1217},{"style":819},[1218],{"type":561,"value":1219}," ||",{"type":556,"tag":603,"props":1221,"children":1222},{"style":769},[1223],{"type":561,"value":872},{"type":556,"tag":603,"props":1225,"children":1226},{"style":741},[1227],{"type":561,"value":1117},{"type":556,"tag":603,"props":1229,"children":1230},{"style":825},[1231],{"type":561,"value":1232},"get",{"type":556,"tag":603,"props":1234,"children":1235},{"style":741},[1236],{"type":561,"value":912},{"type":556,"tag":603,"props":1238,"children":1239},{"style":769},[1240],{"type":561,"value":1204},{"type":556,"tag":603,"props":1242,"children":1243},{"style":741},[1244],{"type":561,"value":1117},{"type":556,"tag":603,"props":1246,"children":1247},{"style":825},[1248],{"type":561,"value":1249},"pop",{"type":556,"tag":603,"props":1251,"children":1252},{"style":741},[1253],{"type":561,"value":1254},"())",{"type":556,"tag":603,"props":1256,"children":1257},{"style":819},[1258],{"type":561,"value":1259}," !==",{"type":556,"tag":603,"props":1261,"children":1262},{"style":769},[1263],{"type":561,"value":1076},{"type":556,"tag":603,"props":1265,"children":1266},{"style":741},[1267],{"type":561,"value":853},{"type":556,"tag":603,"props":1269,"children":1270},{"style":741},[1271],{"type":561,"value":858},{"type":556,"tag":603,"props":1273,"children":1275},{"class":605,"line":1274},16,[1276,1281,1286],{"type":556,"tag":603,"props":1277,"children":1278},{"style":747},[1279],{"type":561,"value":1280},"      return",{"type":556,"tag":603,"props":1282,"children":1283},{"style":747},[1284],{"type":561,"value":1285}," false",{"type":556,"tag":603,"props":1287,"children":1288},{"style":741},[1289],{"type":561,"value":1290},";\n",{"type":556,"tag":603,"props":1292,"children":1294},{"class":605,"line":1293},17,[1295],{"type":556,"tag":603,"props":1296,"children":1297},{"style":741},[1298],{"type":561,"value":1299},"    }\n",{"type":556,"tag":603,"props":1301,"children":1303},{"class":605,"line":1302},18,[1304],{"type":556,"tag":603,"props":1305,"children":1306},{"style":741},[1307],{"type":561,"value":1308},"  }\n",{"type":556,"tag":603,"props":1310,"children":1312},{"class":605,"line":1311},19,[1313,1318,1323,1327,1331,1335],{"type":556,"tag":603,"props":1314,"children":1315},{"style":747},[1316],{"type":561,"value":1317},"  return",{"type":556,"tag":603,"props":1319,"children":1320},{"style":819},[1321],{"type":561,"value":1322}," !",{"type":556,"tag":603,"props":1324,"children":1325},{"style":769},[1326],{"type":561,"value":1204},{"type":556,"tag":603,"props":1328,"children":1329},{"style":741},[1330],{"type":561,"value":1117},{"type":556,"tag":603,"props":1332,"children":1333},{"style":1211},[1334],{"type":561,"value":1214},{"type":556,"tag":603,"props":1336,"children":1337},{"style":741},[1338],{"type":561,"value":1290},{"type":556,"tag":603,"props":1340,"children":1342},{"class":605,"line":1341},20,[1343],{"type":556,"tag":603,"props":1344,"children":1345},{"style":741},[1346],{"type":561,"value":1347},"};\n",{"type":556,"tag":1349,"props":1350,"children":1351},"style",{},[1352],{"type":561,"value":1353},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":815,"depth":815,"links":1355},[1356,1357],{"id":699,"depth":615,"text":699},{"id":704,"depth":615,"text":704,"children":1358},[1359],{"id":710,"depth":775,"text":710},"markdown","content:1.algorithm:3.leetcode:3.major:20.valid-parentheses.md","content","1.algorithm/3.leetcode/3.major/20.valid-parentheses.md","md",[1366,1368],{"_path":84,"title":83,"description":1367},"给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请",{"_path":90,"title":89,"description":1369},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",1714279832124]