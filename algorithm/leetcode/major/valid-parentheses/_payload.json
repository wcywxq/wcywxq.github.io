[{"data":1,"prerenderedAt":1302},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/valid-parentheses":478,"/algorithm/leetcode/major/valid-parentheses-surround":1297},[4,269,298,446,454,463],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":445},"代码考核","/code-assessment",[302,351,438],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,344],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"数组 Array","/code-assessment/source/array",[335,338,341],{"title":336,"_path":337},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":339,"_path":340},"数组扁平化","/code-assessment/source/array/flat",{"title":342,"_path":343},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":345,"_path":346,"children":347},"字符串 String","/code-assessment/source/string",[348],{"title":349,"_path":350},"repeat()","/code-assessment/source/string/repeat",{"title":352,"_path":353,"children":354},"业务场景","/code-assessment/scene",[355,377,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435],{"title":356,"_path":357,"children":358},"Promise","/code-assessment/scene/promise",[359,362,365,368,371,374],{"title":360,"_path":361},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":363,"_path":364},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":366,"_path":367},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":369,"_path":370},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":372,"_path":373},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":375,"_path":376},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":378,"_path":379,"children":380},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[381,384],{"title":382,"_path":383},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":385,"_path":386},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":388,"_path":389},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":391,"_path":392},"倒计时","/code-assessment/scene/countdown",{"title":394,"_path":395},"日期格式化","/code-assessment/scene/date-format",{"title":397,"_path":398},"实现前端路由","/code-assessment/scene/frontend-route",{"title":400,"_path":401},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":403,"_path":404},"lodash.get","/code-assessment/scene/lodash-get",{"title":406,"_path":407},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":409,"_path":410},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":412,"_path":413},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":415,"_path":416},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":418,"_path":419},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":421,"_path":422},"随机数","/code-assessment/scene/random-number",{"title":424,"_path":425},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":427,"_path":428},"sku 算法实现","/code-assessment/scene/sku",{"title":430,"_path":431},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":433,"_path":434},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":436,"_path":437},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":439,"_path":440,"children":441},"Ts 类型挑战","/code-assessment/type-challeges",[442],{"title":443,"_path":444},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":447,"_path":448,"children":449,"icon":453},"项目","/project",[450],{"title":451,"_path":452},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":455,"_path":456,"children":457,"icon":462},"设计模式","/design-mode",[458,459],{"title":455,"_path":456},{"title":460,"_path":461},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":464,"_path":465,"children":466,"icon":477},"后端语言","/backend-languages",[467],{"title":468,"_path":469,"children":470},"Python","/backend-languages/python",[471,474],{"title":472,"_path":473},"基础","/backend-languages/python/base",{"title":475,"_path":476},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":87,"_dir":479,"_draft":480,"_partial":480,"_locale":481,"title":86,"description":482,"url":483,"body":484,"_type":1292,"_id":1293,"_source":1294,"_file":1295,"_extension":1296},"major",false,"","给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","https://leetcode.cn/problems/valid-parentheses",{"type":485,"children":486,"toc":1286},"root",[487,494,499,519,524,554,559,581,586,609,614,628,634,639,645,1280],{"type":488,"tag":489,"props":490,"children":491},"element","p",{},[492],{"type":493,"value":482},"text",{"type":488,"tag":489,"props":495,"children":496},{},[497],{"type":493,"value":498},"有效字符串需满足：",{"type":488,"tag":500,"props":501,"children":502},"ol",{},[503,509,514],{"type":488,"tag":504,"props":505,"children":506},"li",{},[507],{"type":493,"value":508},"左括号必须用相同类型的右括号闭合。",{"type":488,"tag":504,"props":510,"children":511},{},[512],{"type":493,"value":513},"左括号必须以正确的顺序闭合。",{"type":488,"tag":504,"props":515,"children":516},{},[517],{"type":493,"value":518},"每个右括号都有一个对应的相同类型的左括号。",{"type":488,"tag":489,"props":520,"children":521},{},[522],{"type":493,"value":523},"示例 1：",{"type":488,"tag":525,"props":526,"children":529},"pre",{"className":527,"code":528,"language":493,"meta":481,"style":481},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"()\"\n输出：true\n",[530],{"type":488,"tag":531,"props":532,"children":533},"code",{"__ignoreMap":481},[534,545],{"type":488,"tag":535,"props":536,"children":539},"span",{"class":537,"line":538},"line",1,[540],{"type":488,"tag":535,"props":541,"children":542},{},[543],{"type":493,"value":544},"输入：s = \"()\"\n",{"type":488,"tag":535,"props":546,"children":548},{"class":537,"line":547},2,[549],{"type":488,"tag":535,"props":550,"children":551},{},[552],{"type":493,"value":553},"输出：true\n",{"type":488,"tag":489,"props":555,"children":556},{},[557],{"type":493,"value":558},"示例 2：",{"type":488,"tag":525,"props":560,"children":562},{"className":527,"code":561,"language":493,"meta":481,"style":481},"输入：s = \"()[]{}\"\n输出：true\n",[563],{"type":488,"tag":531,"props":564,"children":565},{"__ignoreMap":481},[566,574],{"type":488,"tag":535,"props":567,"children":568},{"class":537,"line":538},[569],{"type":488,"tag":535,"props":570,"children":571},{},[572],{"type":493,"value":573},"输入：s = \"()[]{}\"\n",{"type":488,"tag":535,"props":575,"children":576},{"class":537,"line":547},[577],{"type":488,"tag":535,"props":578,"children":579},{},[580],{"type":493,"value":553},{"type":488,"tag":489,"props":582,"children":583},{},[584],{"type":493,"value":585},"示例 3：",{"type":488,"tag":525,"props":587,"children":589},{"className":527,"code":588,"language":493,"meta":481,"style":481},"输入：s = \"(]\"\n输出：false\n",[590],{"type":488,"tag":531,"props":591,"children":592},{"__ignoreMap":481},[593,601],{"type":488,"tag":535,"props":594,"children":595},{"class":537,"line":538},[596],{"type":488,"tag":535,"props":597,"children":598},{},[599],{"type":493,"value":600},"输入：s = \"(]\"\n",{"type":488,"tag":535,"props":602,"children":603},{"class":537,"line":547},[604],{"type":488,"tag":535,"props":605,"children":606},{},[607],{"type":493,"value":608},"输出：false\n",{"type":488,"tag":489,"props":610,"children":611},{},[612],{"type":493,"value":613},"提示：",{"type":488,"tag":615,"props":616,"children":617},"ul",{},[618,623],{"type":488,"tag":504,"props":619,"children":620},{},[621],{"type":493,"value":622},"1 \u003C= s.length \u003C= 104",{"type":488,"tag":504,"props":624,"children":625},{},[626],{"type":493,"value":627},"s 仅由括号 '()[]{}' 组成",{"type":488,"tag":629,"props":630,"children":632},"h2",{"id":631},"解题思路",[633],{"type":493,"value":631},{"type":488,"tag":629,"props":635,"children":637},{"id":636},"实现",[638],{"type":493,"value":636},{"type":488,"tag":640,"props":641,"children":643},"h3",{"id":642},"栈",[644],{"type":493,"value":642},{"type":488,"tag":525,"props":646,"children":650},{"className":647,"code":648,"language":649,"meta":481,"style":481},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function (s) {\n  let map = new Map([\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n  ]);\n  let stack = [];\n  for (let char of s) {\n    if (map.has(char)) {\n      stack.push(char);\n    } else if (!stack.length || map.get(stack.pop()) !== char) {\n      return false;\n    }\n  }\n  return !stack.length;\n};\n","js",[651],{"type":488,"tag":531,"props":652,"children":653},{"__ignoreMap":481},[654,663,705,736,745,791,824,872,913,955,964,986,1027,1073,1104,1204,1223,1232,1241,1271],{"type":488,"tag":535,"props":655,"children":656},{"class":537,"line":538},[657],{"type":488,"tag":535,"props":658,"children":660},{"style":659},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[661],{"type":493,"value":662},"/**\n",{"type":488,"tag":535,"props":664,"children":665},{"class":537,"line":547},[666,671,677,683,688,694,699],{"type":488,"tag":535,"props":667,"children":668},{"style":659},[669],{"type":493,"value":670}," * ",{"type":488,"tag":535,"props":672,"children":674},{"style":673},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[675],{"type":493,"value":676},"@",{"type":488,"tag":535,"props":678,"children":680},{"style":679},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[681],{"type":493,"value":682},"param",{"type":488,"tag":535,"props":684,"children":685},{"style":673},[686],{"type":493,"value":687}," {",{"type":488,"tag":535,"props":689,"children":691},{"style":690},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[692],{"type":493,"value":693},"string",{"type":488,"tag":535,"props":695,"children":696},{"style":673},[697],{"type":493,"value":698},"}",{"type":488,"tag":535,"props":700,"children":702},{"style":701},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[703],{"type":493,"value":704}," s\n",{"type":488,"tag":535,"props":706,"children":708},{"class":537,"line":707},3,[709,713,717,722,726,731],{"type":488,"tag":535,"props":710,"children":711},{"style":659},[712],{"type":493,"value":670},{"type":488,"tag":535,"props":714,"children":715},{"style":673},[716],{"type":493,"value":676},{"type":488,"tag":535,"props":718,"children":719},{"style":679},[720],{"type":493,"value":721},"return",{"type":488,"tag":535,"props":723,"children":724},{"style":673},[725],{"type":493,"value":687},{"type":488,"tag":535,"props":727,"children":728},{"style":690},[729],{"type":493,"value":730},"boolean",{"type":488,"tag":535,"props":732,"children":733},{"style":673},[734],{"type":493,"value":735},"}\n",{"type":488,"tag":535,"props":737,"children":739},{"class":537,"line":738},4,[740],{"type":488,"tag":535,"props":741,"children":742},{"style":659},[743],{"type":493,"value":744}," */\n",{"type":488,"tag":535,"props":746,"children":748},{"class":537,"line":747},5,[749,755,761,766,771,776,781,786],{"type":488,"tag":535,"props":750,"children":752},{"style":751},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[753],{"type":493,"value":754},"var",{"type":488,"tag":535,"props":756,"children":758},{"style":757},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[759],{"type":493,"value":760}," isValid",{"type":488,"tag":535,"props":762,"children":763},{"style":673},[764],{"type":493,"value":765}," =",{"type":488,"tag":535,"props":767,"children":768},{"style":751},[769],{"type":493,"value":770}," function",{"type":488,"tag":535,"props":772,"children":773},{"style":673},[774],{"type":493,"value":775}," (",{"type":488,"tag":535,"props":777,"children":778},{"style":701},[779],{"type":493,"value":780},"s",{"type":488,"tag":535,"props":782,"children":783},{"style":673},[784],{"type":493,"value":785},")",{"type":488,"tag":535,"props":787,"children":788},{"style":673},[789],{"type":493,"value":790}," {\n",{"type":488,"tag":535,"props":792,"children":794},{"class":537,"line":793},6,[795,800,805,809,814,819],{"type":488,"tag":535,"props":796,"children":797},{"style":751},[798],{"type":493,"value":799},"  let",{"type":488,"tag":535,"props":801,"children":802},{"style":701},[803],{"type":493,"value":804}," map",{"type":488,"tag":535,"props":806,"children":807},{"style":673},[808],{"type":493,"value":765},{"type":488,"tag":535,"props":810,"children":811},{"style":751},[812],{"type":493,"value":813}," new",{"type":488,"tag":535,"props":815,"children":816},{"style":757},[817],{"type":493,"value":818}," Map",{"type":488,"tag":535,"props":820,"children":821},{"style":673},[822],{"type":493,"value":823},"([\n",{"type":488,"tag":535,"props":825,"children":827},{"class":537,"line":826},7,[828,833,839,845,849,854,859,863,867],{"type":488,"tag":535,"props":829,"children":830},{"style":673},[831],{"type":493,"value":832},"    [",{"type":488,"tag":535,"props":834,"children":836},{"style":835},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[837],{"type":493,"value":838},"\"",{"type":488,"tag":535,"props":840,"children":842},{"style":841},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[843],{"type":493,"value":844},"(",{"type":488,"tag":535,"props":846,"children":847},{"style":835},[848],{"type":493,"value":838},{"type":488,"tag":535,"props":850,"children":851},{"style":673},[852],{"type":493,"value":853},",",{"type":488,"tag":535,"props":855,"children":856},{"style":835},[857],{"type":493,"value":858}," \"",{"type":488,"tag":535,"props":860,"children":861},{"style":841},[862],{"type":493,"value":785},{"type":488,"tag":535,"props":864,"children":865},{"style":835},[866],{"type":493,"value":838},{"type":488,"tag":535,"props":868,"children":869},{"style":673},[870],{"type":493,"value":871},"],\n",{"type":488,"tag":535,"props":873,"children":875},{"class":537,"line":874},8,[876,880,884,889,893,897,901,905,909],{"type":488,"tag":535,"props":877,"children":878},{"style":673},[879],{"type":493,"value":832},{"type":488,"tag":535,"props":881,"children":882},{"style":835},[883],{"type":493,"value":838},{"type":488,"tag":535,"props":885,"children":886},{"style":841},[887],{"type":493,"value":888},"{",{"type":488,"tag":535,"props":890,"children":891},{"style":835},[892],{"type":493,"value":838},{"type":488,"tag":535,"props":894,"children":895},{"style":673},[896],{"type":493,"value":853},{"type":488,"tag":535,"props":898,"children":899},{"style":835},[900],{"type":493,"value":858},{"type":488,"tag":535,"props":902,"children":903},{"style":841},[904],{"type":493,"value":698},{"type":488,"tag":535,"props":906,"children":907},{"style":835},[908],{"type":493,"value":838},{"type":488,"tag":535,"props":910,"children":911},{"style":673},[912],{"type":493,"value":871},{"type":488,"tag":535,"props":914,"children":916},{"class":537,"line":915},9,[917,921,925,930,934,938,942,947,951],{"type":488,"tag":535,"props":918,"children":919},{"style":673},[920],{"type":493,"value":832},{"type":488,"tag":535,"props":922,"children":923},{"style":835},[924],{"type":493,"value":838},{"type":488,"tag":535,"props":926,"children":927},{"style":841},[928],{"type":493,"value":929},"[",{"type":488,"tag":535,"props":931,"children":932},{"style":835},[933],{"type":493,"value":838},{"type":488,"tag":535,"props":935,"children":936},{"style":673},[937],{"type":493,"value":853},{"type":488,"tag":535,"props":939,"children":940},{"style":835},[941],{"type":493,"value":858},{"type":488,"tag":535,"props":943,"children":944},{"style":841},[945],{"type":493,"value":946},"]",{"type":488,"tag":535,"props":948,"children":949},{"style":835},[950],{"type":493,"value":838},{"type":488,"tag":535,"props":952,"children":953},{"style":673},[954],{"type":493,"value":871},{"type":488,"tag":535,"props":956,"children":958},{"class":537,"line":957},10,[959],{"type":488,"tag":535,"props":960,"children":961},{"style":673},[962],{"type":493,"value":963},"  ]);\n",{"type":488,"tag":535,"props":965,"children":967},{"class":537,"line":966},11,[968,972,977,981],{"type":488,"tag":535,"props":969,"children":970},{"style":751},[971],{"type":493,"value":799},{"type":488,"tag":535,"props":973,"children":974},{"style":701},[975],{"type":493,"value":976}," stack",{"type":488,"tag":535,"props":978,"children":979},{"style":673},[980],{"type":493,"value":765},{"type":488,"tag":535,"props":982,"children":983},{"style":673},[984],{"type":493,"value":985}," [];\n",{"type":488,"tag":535,"props":987,"children":989},{"class":537,"line":988},12,[990,995,999,1004,1009,1014,1019,1023],{"type":488,"tag":535,"props":991,"children":992},{"style":679},[993],{"type":493,"value":994},"  for",{"type":488,"tag":535,"props":996,"children":997},{"style":673},[998],{"type":493,"value":775},{"type":488,"tag":535,"props":1000,"children":1001},{"style":751},[1002],{"type":493,"value":1003},"let",{"type":488,"tag":535,"props":1005,"children":1006},{"style":701},[1007],{"type":493,"value":1008}," char",{"type":488,"tag":535,"props":1010,"children":1011},{"style":751},[1012],{"type":493,"value":1013}," of",{"type":488,"tag":535,"props":1015,"children":1016},{"style":701},[1017],{"type":493,"value":1018}," s",{"type":488,"tag":535,"props":1020,"children":1021},{"style":673},[1022],{"type":493,"value":785},{"type":488,"tag":535,"props":1024,"children":1025},{"style":673},[1026],{"type":493,"value":790},{"type":488,"tag":535,"props":1028,"children":1030},{"class":537,"line":1029},13,[1031,1036,1040,1045,1050,1055,1059,1064,1069],{"type":488,"tag":535,"props":1032,"children":1033},{"style":679},[1034],{"type":493,"value":1035},"    if",{"type":488,"tag":535,"props":1037,"children":1038},{"style":673},[1039],{"type":493,"value":775},{"type":488,"tag":535,"props":1041,"children":1042},{"style":701},[1043],{"type":493,"value":1044},"map",{"type":488,"tag":535,"props":1046,"children":1047},{"style":673},[1048],{"type":493,"value":1049},".",{"type":488,"tag":535,"props":1051,"children":1052},{"style":757},[1053],{"type":493,"value":1054},"has",{"type":488,"tag":535,"props":1056,"children":1057},{"style":673},[1058],{"type":493,"value":844},{"type":488,"tag":535,"props":1060,"children":1061},{"style":701},[1062],{"type":493,"value":1063},"char",{"type":488,"tag":535,"props":1065,"children":1066},{"style":673},[1067],{"type":493,"value":1068},"))",{"type":488,"tag":535,"props":1070,"children":1071},{"style":673},[1072],{"type":493,"value":790},{"type":488,"tag":535,"props":1074,"children":1076},{"class":537,"line":1075},14,[1077,1082,1086,1091,1095,1099],{"type":488,"tag":535,"props":1078,"children":1079},{"style":701},[1080],{"type":493,"value":1081},"      stack",{"type":488,"tag":535,"props":1083,"children":1084},{"style":673},[1085],{"type":493,"value":1049},{"type":488,"tag":535,"props":1087,"children":1088},{"style":757},[1089],{"type":493,"value":1090},"push",{"type":488,"tag":535,"props":1092,"children":1093},{"style":673},[1094],{"type":493,"value":844},{"type":488,"tag":535,"props":1096,"children":1097},{"style":701},[1098],{"type":493,"value":1063},{"type":488,"tag":535,"props":1100,"children":1101},{"style":673},[1102],{"type":493,"value":1103},");\n",{"type":488,"tag":535,"props":1105,"children":1107},{"class":537,"line":1106},15,[1108,1113,1118,1123,1127,1132,1137,1141,1147,1152,1156,1160,1165,1169,1173,1177,1182,1187,1192,1196,1200],{"type":488,"tag":535,"props":1109,"children":1110},{"style":673},[1111],{"type":493,"value":1112},"    }",{"type":488,"tag":535,"props":1114,"children":1115},{"style":679},[1116],{"type":493,"value":1117}," else",{"type":488,"tag":535,"props":1119,"children":1120},{"style":679},[1121],{"type":493,"value":1122}," if",{"type":488,"tag":535,"props":1124,"children":1125},{"style":673},[1126],{"type":493,"value":775},{"type":488,"tag":535,"props":1128,"children":1129},{"style":751},[1130],{"type":493,"value":1131},"!",{"type":488,"tag":535,"props":1133,"children":1134},{"style":701},[1135],{"type":493,"value":1136},"stack",{"type":488,"tag":535,"props":1138,"children":1139},{"style":673},[1140],{"type":493,"value":1049},{"type":488,"tag":535,"props":1142,"children":1144},{"style":1143},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1145],{"type":493,"value":1146},"length",{"type":488,"tag":535,"props":1148,"children":1149},{"style":751},[1150],{"type":493,"value":1151}," ||",{"type":488,"tag":535,"props":1153,"children":1154},{"style":701},[1155],{"type":493,"value":804},{"type":488,"tag":535,"props":1157,"children":1158},{"style":673},[1159],{"type":493,"value":1049},{"type":488,"tag":535,"props":1161,"children":1162},{"style":757},[1163],{"type":493,"value":1164},"get",{"type":488,"tag":535,"props":1166,"children":1167},{"style":673},[1168],{"type":493,"value":844},{"type":488,"tag":535,"props":1170,"children":1171},{"style":701},[1172],{"type":493,"value":1136},{"type":488,"tag":535,"props":1174,"children":1175},{"style":673},[1176],{"type":493,"value":1049},{"type":488,"tag":535,"props":1178,"children":1179},{"style":757},[1180],{"type":493,"value":1181},"pop",{"type":488,"tag":535,"props":1183,"children":1184},{"style":673},[1185],{"type":493,"value":1186},"())",{"type":488,"tag":535,"props":1188,"children":1189},{"style":751},[1190],{"type":493,"value":1191}," !==",{"type":488,"tag":535,"props":1193,"children":1194},{"style":701},[1195],{"type":493,"value":1008},{"type":488,"tag":535,"props":1197,"children":1198},{"style":673},[1199],{"type":493,"value":785},{"type":488,"tag":535,"props":1201,"children":1202},{"style":673},[1203],{"type":493,"value":790},{"type":488,"tag":535,"props":1205,"children":1207},{"class":537,"line":1206},16,[1208,1213,1218],{"type":488,"tag":535,"props":1209,"children":1210},{"style":679},[1211],{"type":493,"value":1212},"      return",{"type":488,"tag":535,"props":1214,"children":1215},{"style":679},[1216],{"type":493,"value":1217}," false",{"type":488,"tag":535,"props":1219,"children":1220},{"style":673},[1221],{"type":493,"value":1222},";\n",{"type":488,"tag":535,"props":1224,"children":1226},{"class":537,"line":1225},17,[1227],{"type":488,"tag":535,"props":1228,"children":1229},{"style":673},[1230],{"type":493,"value":1231},"    }\n",{"type":488,"tag":535,"props":1233,"children":1235},{"class":537,"line":1234},18,[1236],{"type":488,"tag":535,"props":1237,"children":1238},{"style":673},[1239],{"type":493,"value":1240},"  }\n",{"type":488,"tag":535,"props":1242,"children":1244},{"class":537,"line":1243},19,[1245,1250,1255,1259,1263,1267],{"type":488,"tag":535,"props":1246,"children":1247},{"style":679},[1248],{"type":493,"value":1249},"  return",{"type":488,"tag":535,"props":1251,"children":1252},{"style":751},[1253],{"type":493,"value":1254}," !",{"type":488,"tag":535,"props":1256,"children":1257},{"style":701},[1258],{"type":493,"value":1136},{"type":488,"tag":535,"props":1260,"children":1261},{"style":673},[1262],{"type":493,"value":1049},{"type":488,"tag":535,"props":1264,"children":1265},{"style":1143},[1266],{"type":493,"value":1146},{"type":488,"tag":535,"props":1268,"children":1269},{"style":673},[1270],{"type":493,"value":1222},{"type":488,"tag":535,"props":1272,"children":1274},{"class":537,"line":1273},20,[1275],{"type":488,"tag":535,"props":1276,"children":1277},{"style":673},[1278],{"type":493,"value":1279},"};\n",{"type":488,"tag":1281,"props":1282,"children":1283},"style",{},[1284],{"type":493,"value":1285},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":481,"searchDepth":747,"depth":747,"links":1287},[1288,1289],{"id":631,"depth":547,"text":631},{"id":636,"depth":547,"text":636,"children":1290},[1291],{"id":642,"depth":707,"text":642},"markdown","content:1.algorithm:3.leetcode:3.major:20.valid-parentheses.md","content","1.algorithm/3.leetcode/3.major/20.valid-parentheses.md","md",[1298,1300],{"_path":84,"title":83,"description":1299},"给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请",{"_path":90,"title":89,"description":1301},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",1714046223816]