[{"data":1,"prerenderedAt":1364},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/valid-parentheses":540,"/algorithm/leetcode/major/valid-parentheses-surround":1359},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":87,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":86,"description":544,"url":545,"body":546,"_type":1354,"_id":1355,"_source":1356,"_file":1357,"_extension":1358},"major",false,"","给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","https://leetcode.cn/problems/valid-parentheses",{"type":547,"children":548,"toc":1348},"root",[549,556,561,581,586,616,621,643,648,671,676,690,696,701,707,1342],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"有效字符串需满足：",{"type":550,"tag":562,"props":563,"children":564},"ol",{},[565,571,576],{"type":550,"tag":566,"props":567,"children":568},"li",{},[569],{"type":555,"value":570},"左括号必须用相同类型的右括号闭合。",{"type":550,"tag":566,"props":572,"children":573},{},[574],{"type":555,"value":575},"左括号必须以正确的顺序闭合。",{"type":550,"tag":566,"props":577,"children":578},{},[579],{"type":555,"value":580},"每个右括号都有一个对应的相同类型的左括号。",{"type":550,"tag":551,"props":582,"children":583},{},[584],{"type":555,"value":585},"示例 1：",{"type":550,"tag":587,"props":588,"children":591},"pre",{"className":589,"code":590,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"()\"\n输出：true\n",[592],{"type":550,"tag":593,"props":594,"children":595},"code",{"__ignoreMap":543},[596,607],{"type":550,"tag":597,"props":598,"children":601},"span",{"class":599,"line":600},"line",1,[602],{"type":550,"tag":597,"props":603,"children":604},{},[605],{"type":555,"value":606},"输入：s = \"()\"\n",{"type":550,"tag":597,"props":608,"children":610},{"class":599,"line":609},2,[611],{"type":550,"tag":597,"props":612,"children":613},{},[614],{"type":555,"value":615},"输出：true\n",{"type":550,"tag":551,"props":617,"children":618},{},[619],{"type":555,"value":620},"示例 2：",{"type":550,"tag":587,"props":622,"children":624},{"className":589,"code":623,"language":555,"meta":543,"style":543},"输入：s = \"()[]{}\"\n输出：true\n",[625],{"type":550,"tag":593,"props":626,"children":627},{"__ignoreMap":543},[628,636],{"type":550,"tag":597,"props":629,"children":630},{"class":599,"line":600},[631],{"type":550,"tag":597,"props":632,"children":633},{},[634],{"type":555,"value":635},"输入：s = \"()[]{}\"\n",{"type":550,"tag":597,"props":637,"children":638},{"class":599,"line":609},[639],{"type":550,"tag":597,"props":640,"children":641},{},[642],{"type":555,"value":615},{"type":550,"tag":551,"props":644,"children":645},{},[646],{"type":555,"value":647},"示例 3：",{"type":550,"tag":587,"props":649,"children":651},{"className":589,"code":650,"language":555,"meta":543,"style":543},"输入：s = \"(]\"\n输出：false\n",[652],{"type":550,"tag":593,"props":653,"children":654},{"__ignoreMap":543},[655,663],{"type":550,"tag":597,"props":656,"children":657},{"class":599,"line":600},[658],{"type":550,"tag":597,"props":659,"children":660},{},[661],{"type":555,"value":662},"输入：s = \"(]\"\n",{"type":550,"tag":597,"props":664,"children":665},{"class":599,"line":609},[666],{"type":550,"tag":597,"props":667,"children":668},{},[669],{"type":555,"value":670},"输出：false\n",{"type":550,"tag":551,"props":672,"children":673},{},[674],{"type":555,"value":675},"提示：",{"type":550,"tag":677,"props":678,"children":679},"ul",{},[680,685],{"type":550,"tag":566,"props":681,"children":682},{},[683],{"type":555,"value":684},"1 \u003C= s.length \u003C= 104",{"type":550,"tag":566,"props":686,"children":687},{},[688],{"type":555,"value":689},"s 仅由括号 '()[]{}' 组成",{"type":550,"tag":691,"props":692,"children":694},"h2",{"id":693},"解题思路",[695],{"type":555,"value":693},{"type":550,"tag":691,"props":697,"children":699},{"id":698},"实现",[700],{"type":555,"value":698},{"type":550,"tag":702,"props":703,"children":705},"h3",{"id":704},"栈",[706],{"type":555,"value":704},{"type":550,"tag":587,"props":708,"children":712},{"className":709,"code":710,"language":711,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function (s) {\n  let map = new Map([\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n  ]);\n  let stack = [];\n  for (let char of s) {\n    if (map.has(char)) {\n      stack.push(char);\n    } else if (!stack.length || map.get(stack.pop()) !== char) {\n      return false;\n    }\n  }\n  return !stack.length;\n};\n","js",[713],{"type":550,"tag":593,"props":714,"children":715},{"__ignoreMap":543},[716,725,767,798,807,853,886,934,975,1017,1026,1048,1089,1135,1166,1266,1285,1294,1303,1333],{"type":550,"tag":597,"props":717,"children":718},{"class":599,"line":600},[719],{"type":550,"tag":597,"props":720,"children":722},{"style":721},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[723],{"type":555,"value":724},"/**\n",{"type":550,"tag":597,"props":726,"children":727},{"class":599,"line":609},[728,733,739,745,750,756,761],{"type":550,"tag":597,"props":729,"children":730},{"style":721},[731],{"type":555,"value":732}," * ",{"type":550,"tag":597,"props":734,"children":736},{"style":735},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[737],{"type":555,"value":738},"@",{"type":550,"tag":597,"props":740,"children":742},{"style":741},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[743],{"type":555,"value":744},"param",{"type":550,"tag":597,"props":746,"children":747},{"style":735},[748],{"type":555,"value":749}," {",{"type":550,"tag":597,"props":751,"children":753},{"style":752},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[754],{"type":555,"value":755},"string",{"type":550,"tag":597,"props":757,"children":758},{"style":735},[759],{"type":555,"value":760},"}",{"type":550,"tag":597,"props":762,"children":764},{"style":763},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[765],{"type":555,"value":766}," s\n",{"type":550,"tag":597,"props":768,"children":770},{"class":599,"line":769},3,[771,775,779,784,788,793],{"type":550,"tag":597,"props":772,"children":773},{"style":721},[774],{"type":555,"value":732},{"type":550,"tag":597,"props":776,"children":777},{"style":735},[778],{"type":555,"value":738},{"type":550,"tag":597,"props":780,"children":781},{"style":741},[782],{"type":555,"value":783},"return",{"type":550,"tag":597,"props":785,"children":786},{"style":735},[787],{"type":555,"value":749},{"type":550,"tag":597,"props":789,"children":790},{"style":752},[791],{"type":555,"value":792},"boolean",{"type":550,"tag":597,"props":794,"children":795},{"style":735},[796],{"type":555,"value":797},"}\n",{"type":550,"tag":597,"props":799,"children":801},{"class":599,"line":800},4,[802],{"type":550,"tag":597,"props":803,"children":804},{"style":721},[805],{"type":555,"value":806}," */\n",{"type":550,"tag":597,"props":808,"children":810},{"class":599,"line":809},5,[811,817,823,828,833,838,843,848],{"type":550,"tag":597,"props":812,"children":814},{"style":813},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[815],{"type":555,"value":816},"var",{"type":550,"tag":597,"props":818,"children":820},{"style":819},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[821],{"type":555,"value":822}," isValid",{"type":550,"tag":597,"props":824,"children":825},{"style":735},[826],{"type":555,"value":827}," =",{"type":550,"tag":597,"props":829,"children":830},{"style":813},[831],{"type":555,"value":832}," function",{"type":550,"tag":597,"props":834,"children":835},{"style":735},[836],{"type":555,"value":837}," (",{"type":550,"tag":597,"props":839,"children":840},{"style":763},[841],{"type":555,"value":842},"s",{"type":550,"tag":597,"props":844,"children":845},{"style":735},[846],{"type":555,"value":847},")",{"type":550,"tag":597,"props":849,"children":850},{"style":735},[851],{"type":555,"value":852}," {\n",{"type":550,"tag":597,"props":854,"children":856},{"class":599,"line":855},6,[857,862,867,871,876,881],{"type":550,"tag":597,"props":858,"children":859},{"style":813},[860],{"type":555,"value":861},"  let",{"type":550,"tag":597,"props":863,"children":864},{"style":763},[865],{"type":555,"value":866}," map",{"type":550,"tag":597,"props":868,"children":869},{"style":735},[870],{"type":555,"value":827},{"type":550,"tag":597,"props":872,"children":873},{"style":813},[874],{"type":555,"value":875}," new",{"type":550,"tag":597,"props":877,"children":878},{"style":819},[879],{"type":555,"value":880}," Map",{"type":550,"tag":597,"props":882,"children":883},{"style":735},[884],{"type":555,"value":885},"([\n",{"type":550,"tag":597,"props":887,"children":889},{"class":599,"line":888},7,[890,895,901,907,911,916,921,925,929],{"type":550,"tag":597,"props":891,"children":892},{"style":735},[893],{"type":555,"value":894},"    [",{"type":550,"tag":597,"props":896,"children":898},{"style":897},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[899],{"type":555,"value":900},"\"",{"type":550,"tag":597,"props":902,"children":904},{"style":903},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[905],{"type":555,"value":906},"(",{"type":550,"tag":597,"props":908,"children":909},{"style":897},[910],{"type":555,"value":900},{"type":550,"tag":597,"props":912,"children":913},{"style":735},[914],{"type":555,"value":915},",",{"type":550,"tag":597,"props":917,"children":918},{"style":897},[919],{"type":555,"value":920}," \"",{"type":550,"tag":597,"props":922,"children":923},{"style":903},[924],{"type":555,"value":847},{"type":550,"tag":597,"props":926,"children":927},{"style":897},[928],{"type":555,"value":900},{"type":550,"tag":597,"props":930,"children":931},{"style":735},[932],{"type":555,"value":933},"],\n",{"type":550,"tag":597,"props":935,"children":937},{"class":599,"line":936},8,[938,942,946,951,955,959,963,967,971],{"type":550,"tag":597,"props":939,"children":940},{"style":735},[941],{"type":555,"value":894},{"type":550,"tag":597,"props":943,"children":944},{"style":897},[945],{"type":555,"value":900},{"type":550,"tag":597,"props":947,"children":948},{"style":903},[949],{"type":555,"value":950},"{",{"type":550,"tag":597,"props":952,"children":953},{"style":897},[954],{"type":555,"value":900},{"type":550,"tag":597,"props":956,"children":957},{"style":735},[958],{"type":555,"value":915},{"type":550,"tag":597,"props":960,"children":961},{"style":897},[962],{"type":555,"value":920},{"type":550,"tag":597,"props":964,"children":965},{"style":903},[966],{"type":555,"value":760},{"type":550,"tag":597,"props":968,"children":969},{"style":897},[970],{"type":555,"value":900},{"type":550,"tag":597,"props":972,"children":973},{"style":735},[974],{"type":555,"value":933},{"type":550,"tag":597,"props":976,"children":978},{"class":599,"line":977},9,[979,983,987,992,996,1000,1004,1009,1013],{"type":550,"tag":597,"props":980,"children":981},{"style":735},[982],{"type":555,"value":894},{"type":550,"tag":597,"props":984,"children":985},{"style":897},[986],{"type":555,"value":900},{"type":550,"tag":597,"props":988,"children":989},{"style":903},[990],{"type":555,"value":991},"[",{"type":550,"tag":597,"props":993,"children":994},{"style":897},[995],{"type":555,"value":900},{"type":550,"tag":597,"props":997,"children":998},{"style":735},[999],{"type":555,"value":915},{"type":550,"tag":597,"props":1001,"children":1002},{"style":897},[1003],{"type":555,"value":920},{"type":550,"tag":597,"props":1005,"children":1006},{"style":903},[1007],{"type":555,"value":1008},"]",{"type":550,"tag":597,"props":1010,"children":1011},{"style":897},[1012],{"type":555,"value":900},{"type":550,"tag":597,"props":1014,"children":1015},{"style":735},[1016],{"type":555,"value":933},{"type":550,"tag":597,"props":1018,"children":1020},{"class":599,"line":1019},10,[1021],{"type":550,"tag":597,"props":1022,"children":1023},{"style":735},[1024],{"type":555,"value":1025},"  ]);\n",{"type":550,"tag":597,"props":1027,"children":1029},{"class":599,"line":1028},11,[1030,1034,1039,1043],{"type":550,"tag":597,"props":1031,"children":1032},{"style":813},[1033],{"type":555,"value":861},{"type":550,"tag":597,"props":1035,"children":1036},{"style":763},[1037],{"type":555,"value":1038}," stack",{"type":550,"tag":597,"props":1040,"children":1041},{"style":735},[1042],{"type":555,"value":827},{"type":550,"tag":597,"props":1044,"children":1045},{"style":735},[1046],{"type":555,"value":1047}," [];\n",{"type":550,"tag":597,"props":1049,"children":1051},{"class":599,"line":1050},12,[1052,1057,1061,1066,1071,1076,1081,1085],{"type":550,"tag":597,"props":1053,"children":1054},{"style":741},[1055],{"type":555,"value":1056},"  for",{"type":550,"tag":597,"props":1058,"children":1059},{"style":735},[1060],{"type":555,"value":837},{"type":550,"tag":597,"props":1062,"children":1063},{"style":813},[1064],{"type":555,"value":1065},"let",{"type":550,"tag":597,"props":1067,"children":1068},{"style":763},[1069],{"type":555,"value":1070}," char",{"type":550,"tag":597,"props":1072,"children":1073},{"style":813},[1074],{"type":555,"value":1075}," of",{"type":550,"tag":597,"props":1077,"children":1078},{"style":763},[1079],{"type":555,"value":1080}," s",{"type":550,"tag":597,"props":1082,"children":1083},{"style":735},[1084],{"type":555,"value":847},{"type":550,"tag":597,"props":1086,"children":1087},{"style":735},[1088],{"type":555,"value":852},{"type":550,"tag":597,"props":1090,"children":1092},{"class":599,"line":1091},13,[1093,1098,1102,1107,1112,1117,1121,1126,1131],{"type":550,"tag":597,"props":1094,"children":1095},{"style":741},[1096],{"type":555,"value":1097},"    if",{"type":550,"tag":597,"props":1099,"children":1100},{"style":735},[1101],{"type":555,"value":837},{"type":550,"tag":597,"props":1103,"children":1104},{"style":763},[1105],{"type":555,"value":1106},"map",{"type":550,"tag":597,"props":1108,"children":1109},{"style":735},[1110],{"type":555,"value":1111},".",{"type":550,"tag":597,"props":1113,"children":1114},{"style":819},[1115],{"type":555,"value":1116},"has",{"type":550,"tag":597,"props":1118,"children":1119},{"style":735},[1120],{"type":555,"value":906},{"type":550,"tag":597,"props":1122,"children":1123},{"style":763},[1124],{"type":555,"value":1125},"char",{"type":550,"tag":597,"props":1127,"children":1128},{"style":735},[1129],{"type":555,"value":1130},"))",{"type":550,"tag":597,"props":1132,"children":1133},{"style":735},[1134],{"type":555,"value":852},{"type":550,"tag":597,"props":1136,"children":1138},{"class":599,"line":1137},14,[1139,1144,1148,1153,1157,1161],{"type":550,"tag":597,"props":1140,"children":1141},{"style":763},[1142],{"type":555,"value":1143},"      stack",{"type":550,"tag":597,"props":1145,"children":1146},{"style":735},[1147],{"type":555,"value":1111},{"type":550,"tag":597,"props":1149,"children":1150},{"style":819},[1151],{"type":555,"value":1152},"push",{"type":550,"tag":597,"props":1154,"children":1155},{"style":735},[1156],{"type":555,"value":906},{"type":550,"tag":597,"props":1158,"children":1159},{"style":763},[1160],{"type":555,"value":1125},{"type":550,"tag":597,"props":1162,"children":1163},{"style":735},[1164],{"type":555,"value":1165},");\n",{"type":550,"tag":597,"props":1167,"children":1169},{"class":599,"line":1168},15,[1170,1175,1180,1185,1189,1194,1199,1203,1209,1214,1218,1222,1227,1231,1235,1239,1244,1249,1254,1258,1262],{"type":550,"tag":597,"props":1171,"children":1172},{"style":735},[1173],{"type":555,"value":1174},"    }",{"type":550,"tag":597,"props":1176,"children":1177},{"style":741},[1178],{"type":555,"value":1179}," else",{"type":550,"tag":597,"props":1181,"children":1182},{"style":741},[1183],{"type":555,"value":1184}," if",{"type":550,"tag":597,"props":1186,"children":1187},{"style":735},[1188],{"type":555,"value":837},{"type":550,"tag":597,"props":1190,"children":1191},{"style":813},[1192],{"type":555,"value":1193},"!",{"type":550,"tag":597,"props":1195,"children":1196},{"style":763},[1197],{"type":555,"value":1198},"stack",{"type":550,"tag":597,"props":1200,"children":1201},{"style":735},[1202],{"type":555,"value":1111},{"type":550,"tag":597,"props":1204,"children":1206},{"style":1205},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1207],{"type":555,"value":1208},"length",{"type":550,"tag":597,"props":1210,"children":1211},{"style":813},[1212],{"type":555,"value":1213}," ||",{"type":550,"tag":597,"props":1215,"children":1216},{"style":763},[1217],{"type":555,"value":866},{"type":550,"tag":597,"props":1219,"children":1220},{"style":735},[1221],{"type":555,"value":1111},{"type":550,"tag":597,"props":1223,"children":1224},{"style":819},[1225],{"type":555,"value":1226},"get",{"type":550,"tag":597,"props":1228,"children":1229},{"style":735},[1230],{"type":555,"value":906},{"type":550,"tag":597,"props":1232,"children":1233},{"style":763},[1234],{"type":555,"value":1198},{"type":550,"tag":597,"props":1236,"children":1237},{"style":735},[1238],{"type":555,"value":1111},{"type":550,"tag":597,"props":1240,"children":1241},{"style":819},[1242],{"type":555,"value":1243},"pop",{"type":550,"tag":597,"props":1245,"children":1246},{"style":735},[1247],{"type":555,"value":1248},"())",{"type":550,"tag":597,"props":1250,"children":1251},{"style":813},[1252],{"type":555,"value":1253}," !==",{"type":550,"tag":597,"props":1255,"children":1256},{"style":763},[1257],{"type":555,"value":1070},{"type":550,"tag":597,"props":1259,"children":1260},{"style":735},[1261],{"type":555,"value":847},{"type":550,"tag":597,"props":1263,"children":1264},{"style":735},[1265],{"type":555,"value":852},{"type":550,"tag":597,"props":1267,"children":1269},{"class":599,"line":1268},16,[1270,1275,1280],{"type":550,"tag":597,"props":1271,"children":1272},{"style":741},[1273],{"type":555,"value":1274},"      return",{"type":550,"tag":597,"props":1276,"children":1277},{"style":741},[1278],{"type":555,"value":1279}," false",{"type":550,"tag":597,"props":1281,"children":1282},{"style":735},[1283],{"type":555,"value":1284},";\n",{"type":550,"tag":597,"props":1286,"children":1288},{"class":599,"line":1287},17,[1289],{"type":550,"tag":597,"props":1290,"children":1291},{"style":735},[1292],{"type":555,"value":1293},"    }\n",{"type":550,"tag":597,"props":1295,"children":1297},{"class":599,"line":1296},18,[1298],{"type":550,"tag":597,"props":1299,"children":1300},{"style":735},[1301],{"type":555,"value":1302},"  }\n",{"type":550,"tag":597,"props":1304,"children":1306},{"class":599,"line":1305},19,[1307,1312,1317,1321,1325,1329],{"type":550,"tag":597,"props":1308,"children":1309},{"style":741},[1310],{"type":555,"value":1311},"  return",{"type":550,"tag":597,"props":1313,"children":1314},{"style":813},[1315],{"type":555,"value":1316}," !",{"type":550,"tag":597,"props":1318,"children":1319},{"style":763},[1320],{"type":555,"value":1198},{"type":550,"tag":597,"props":1322,"children":1323},{"style":735},[1324],{"type":555,"value":1111},{"type":550,"tag":597,"props":1326,"children":1327},{"style":1205},[1328],{"type":555,"value":1208},{"type":550,"tag":597,"props":1330,"children":1331},{"style":735},[1332],{"type":555,"value":1284},{"type":550,"tag":597,"props":1334,"children":1336},{"class":599,"line":1335},20,[1337],{"type":550,"tag":597,"props":1338,"children":1339},{"style":735},[1340],{"type":555,"value":1341},"};\n",{"type":550,"tag":1343,"props":1344,"children":1345},"style",{},[1346],{"type":555,"value":1347},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":809,"depth":809,"links":1349},[1350,1351],{"id":693,"depth":609,"text":693},{"id":698,"depth":609,"text":698,"children":1352},[1353],{"id":704,"depth":769,"text":704},"markdown","content:1.algorithm:3.leetcode:3.major:20.valid-parentheses.md","content","1.algorithm/3.leetcode/3.major/20.valid-parentheses.md","md",[1360,1362],{"_path":84,"title":83,"description":1361},"给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请",{"_path":90,"title":89,"description":1363},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",1714099273562]