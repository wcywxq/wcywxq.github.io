[{"data":1,"prerenderedAt":1373},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/valid-parentheses":549,"/algorithm/leetcode/major/valid-parentheses-surround":1368},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":87,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":86,"description":553,"url":554,"body":555,"_type":1363,"_id":1364,"_source":1365,"_file":1366,"_extension":1367},"major",false,"","给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","https://leetcode.cn/problems/valid-parentheses",{"type":556,"children":557,"toc":1357},"root",[558,565,570,590,595,625,630,652,657,680,685,699,705,710,716,1351],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"有效字符串需满足：",{"type":559,"tag":571,"props":572,"children":573},"ol",{},[574,580,585],{"type":559,"tag":575,"props":576,"children":577},"li",{},[578],{"type":564,"value":579},"左括号必须用相同类型的右括号闭合。",{"type":559,"tag":575,"props":581,"children":582},{},[583],{"type":564,"value":584},"左括号必须以正确的顺序闭合。",{"type":559,"tag":575,"props":586,"children":587},{},[588],{"type":564,"value":589},"每个右括号都有一个对应的相同类型的左括号。",{"type":559,"tag":560,"props":591,"children":592},{},[593],{"type":564,"value":594},"示例 1：",{"type":559,"tag":596,"props":597,"children":600},"pre",{"className":598,"code":599,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"()\"\n输出：true\n",[601],{"type":559,"tag":602,"props":603,"children":604},"code",{"__ignoreMap":552},[605,616],{"type":559,"tag":606,"props":607,"children":610},"span",{"class":608,"line":609},"line",1,[611],{"type":559,"tag":606,"props":612,"children":613},{},[614],{"type":564,"value":615},"输入：s = \"()\"\n",{"type":559,"tag":606,"props":617,"children":619},{"class":608,"line":618},2,[620],{"type":559,"tag":606,"props":621,"children":622},{},[623],{"type":564,"value":624},"输出：true\n",{"type":559,"tag":560,"props":626,"children":627},{},[628],{"type":564,"value":629},"示例 2：",{"type":559,"tag":596,"props":631,"children":633},{"className":598,"code":632,"language":564,"meta":552,"style":552},"输入：s = \"()[]{}\"\n输出：true\n",[634],{"type":559,"tag":602,"props":635,"children":636},{"__ignoreMap":552},[637,645],{"type":559,"tag":606,"props":638,"children":639},{"class":608,"line":609},[640],{"type":559,"tag":606,"props":641,"children":642},{},[643],{"type":564,"value":644},"输入：s = \"()[]{}\"\n",{"type":559,"tag":606,"props":646,"children":647},{"class":608,"line":618},[648],{"type":559,"tag":606,"props":649,"children":650},{},[651],{"type":564,"value":624},{"type":559,"tag":560,"props":653,"children":654},{},[655],{"type":564,"value":656},"示例 3：",{"type":559,"tag":596,"props":658,"children":660},{"className":598,"code":659,"language":564,"meta":552,"style":552},"输入：s = \"(]\"\n输出：false\n",[661],{"type":559,"tag":602,"props":662,"children":663},{"__ignoreMap":552},[664,672],{"type":559,"tag":606,"props":665,"children":666},{"class":608,"line":609},[667],{"type":559,"tag":606,"props":668,"children":669},{},[670],{"type":564,"value":671},"输入：s = \"(]\"\n",{"type":559,"tag":606,"props":673,"children":674},{"class":608,"line":618},[675],{"type":559,"tag":606,"props":676,"children":677},{},[678],{"type":564,"value":679},"输出：false\n",{"type":559,"tag":560,"props":681,"children":682},{},[683],{"type":564,"value":684},"提示：",{"type":559,"tag":686,"props":687,"children":688},"ul",{},[689,694],{"type":559,"tag":575,"props":690,"children":691},{},[692],{"type":564,"value":693},"1 \u003C= s.length \u003C= 104",{"type":559,"tag":575,"props":695,"children":696},{},[697],{"type":564,"value":698},"s 仅由括号 '()[]{}' 组成",{"type":559,"tag":700,"props":701,"children":703},"h2",{"id":702},"解题思路",[704],{"type":564,"value":702},{"type":559,"tag":700,"props":706,"children":708},{"id":707},"实现",[709],{"type":564,"value":707},{"type":559,"tag":711,"props":712,"children":714},"h3",{"id":713},"栈",[715],{"type":564,"value":713},{"type":559,"tag":596,"props":717,"children":721},{"className":718,"code":719,"language":720,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function (s) {\n  let map = new Map([\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n  ]);\n  let stack = [];\n  for (let char of s) {\n    if (map.has(char)) {\n      stack.push(char);\n    } else if (!stack.length || map.get(stack.pop()) !== char) {\n      return false;\n    }\n  }\n  return !stack.length;\n};\n","js",[722],{"type":559,"tag":602,"props":723,"children":724},{"__ignoreMap":552},[725,734,776,807,816,862,895,943,984,1026,1035,1057,1098,1144,1175,1275,1294,1303,1312,1342],{"type":559,"tag":606,"props":726,"children":727},{"class":608,"line":609},[728],{"type":559,"tag":606,"props":729,"children":731},{"style":730},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[732],{"type":564,"value":733},"/**\n",{"type":559,"tag":606,"props":735,"children":736},{"class":608,"line":618},[737,742,748,754,759,765,770],{"type":559,"tag":606,"props":738,"children":739},{"style":730},[740],{"type":564,"value":741}," * ",{"type":559,"tag":606,"props":743,"children":745},{"style":744},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[746],{"type":564,"value":747},"@",{"type":559,"tag":606,"props":749,"children":751},{"style":750},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[752],{"type":564,"value":753},"param",{"type":559,"tag":606,"props":755,"children":756},{"style":744},[757],{"type":564,"value":758}," {",{"type":559,"tag":606,"props":760,"children":762},{"style":761},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[763],{"type":564,"value":764},"string",{"type":559,"tag":606,"props":766,"children":767},{"style":744},[768],{"type":564,"value":769},"}",{"type":559,"tag":606,"props":771,"children":773},{"style":772},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[774],{"type":564,"value":775}," s\n",{"type":559,"tag":606,"props":777,"children":779},{"class":608,"line":778},3,[780,784,788,793,797,802],{"type":559,"tag":606,"props":781,"children":782},{"style":730},[783],{"type":564,"value":741},{"type":559,"tag":606,"props":785,"children":786},{"style":744},[787],{"type":564,"value":747},{"type":559,"tag":606,"props":789,"children":790},{"style":750},[791],{"type":564,"value":792},"return",{"type":559,"tag":606,"props":794,"children":795},{"style":744},[796],{"type":564,"value":758},{"type":559,"tag":606,"props":798,"children":799},{"style":761},[800],{"type":564,"value":801},"boolean",{"type":559,"tag":606,"props":803,"children":804},{"style":744},[805],{"type":564,"value":806},"}\n",{"type":559,"tag":606,"props":808,"children":810},{"class":608,"line":809},4,[811],{"type":559,"tag":606,"props":812,"children":813},{"style":730},[814],{"type":564,"value":815}," */\n",{"type":559,"tag":606,"props":817,"children":819},{"class":608,"line":818},5,[820,826,832,837,842,847,852,857],{"type":559,"tag":606,"props":821,"children":823},{"style":822},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[824],{"type":564,"value":825},"var",{"type":559,"tag":606,"props":827,"children":829},{"style":828},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[830],{"type":564,"value":831}," isValid",{"type":559,"tag":606,"props":833,"children":834},{"style":744},[835],{"type":564,"value":836}," =",{"type":559,"tag":606,"props":838,"children":839},{"style":822},[840],{"type":564,"value":841}," function",{"type":559,"tag":606,"props":843,"children":844},{"style":744},[845],{"type":564,"value":846}," (",{"type":559,"tag":606,"props":848,"children":849},{"style":772},[850],{"type":564,"value":851},"s",{"type":559,"tag":606,"props":853,"children":854},{"style":744},[855],{"type":564,"value":856},")",{"type":559,"tag":606,"props":858,"children":859},{"style":744},[860],{"type":564,"value":861}," {\n",{"type":559,"tag":606,"props":863,"children":865},{"class":608,"line":864},6,[866,871,876,880,885,890],{"type":559,"tag":606,"props":867,"children":868},{"style":822},[869],{"type":564,"value":870},"  let",{"type":559,"tag":606,"props":872,"children":873},{"style":772},[874],{"type":564,"value":875}," map",{"type":559,"tag":606,"props":877,"children":878},{"style":744},[879],{"type":564,"value":836},{"type":559,"tag":606,"props":881,"children":882},{"style":822},[883],{"type":564,"value":884}," new",{"type":559,"tag":606,"props":886,"children":887},{"style":828},[888],{"type":564,"value":889}," Map",{"type":559,"tag":606,"props":891,"children":892},{"style":744},[893],{"type":564,"value":894},"([\n",{"type":559,"tag":606,"props":896,"children":898},{"class":608,"line":897},7,[899,904,910,916,920,925,930,934,938],{"type":559,"tag":606,"props":900,"children":901},{"style":744},[902],{"type":564,"value":903},"    [",{"type":559,"tag":606,"props":905,"children":907},{"style":906},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[908],{"type":564,"value":909},"\"",{"type":559,"tag":606,"props":911,"children":913},{"style":912},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[914],{"type":564,"value":915},"(",{"type":559,"tag":606,"props":917,"children":918},{"style":906},[919],{"type":564,"value":909},{"type":559,"tag":606,"props":921,"children":922},{"style":744},[923],{"type":564,"value":924},",",{"type":559,"tag":606,"props":926,"children":927},{"style":906},[928],{"type":564,"value":929}," \"",{"type":559,"tag":606,"props":931,"children":932},{"style":912},[933],{"type":564,"value":856},{"type":559,"tag":606,"props":935,"children":936},{"style":906},[937],{"type":564,"value":909},{"type":559,"tag":606,"props":939,"children":940},{"style":744},[941],{"type":564,"value":942},"],\n",{"type":559,"tag":606,"props":944,"children":946},{"class":608,"line":945},8,[947,951,955,960,964,968,972,976,980],{"type":559,"tag":606,"props":948,"children":949},{"style":744},[950],{"type":564,"value":903},{"type":559,"tag":606,"props":952,"children":953},{"style":906},[954],{"type":564,"value":909},{"type":559,"tag":606,"props":956,"children":957},{"style":912},[958],{"type":564,"value":959},"{",{"type":559,"tag":606,"props":961,"children":962},{"style":906},[963],{"type":564,"value":909},{"type":559,"tag":606,"props":965,"children":966},{"style":744},[967],{"type":564,"value":924},{"type":559,"tag":606,"props":969,"children":970},{"style":906},[971],{"type":564,"value":929},{"type":559,"tag":606,"props":973,"children":974},{"style":912},[975],{"type":564,"value":769},{"type":559,"tag":606,"props":977,"children":978},{"style":906},[979],{"type":564,"value":909},{"type":559,"tag":606,"props":981,"children":982},{"style":744},[983],{"type":564,"value":942},{"type":559,"tag":606,"props":985,"children":987},{"class":608,"line":986},9,[988,992,996,1001,1005,1009,1013,1018,1022],{"type":559,"tag":606,"props":989,"children":990},{"style":744},[991],{"type":564,"value":903},{"type":559,"tag":606,"props":993,"children":994},{"style":906},[995],{"type":564,"value":909},{"type":559,"tag":606,"props":997,"children":998},{"style":912},[999],{"type":564,"value":1000},"[",{"type":559,"tag":606,"props":1002,"children":1003},{"style":906},[1004],{"type":564,"value":909},{"type":559,"tag":606,"props":1006,"children":1007},{"style":744},[1008],{"type":564,"value":924},{"type":559,"tag":606,"props":1010,"children":1011},{"style":906},[1012],{"type":564,"value":929},{"type":559,"tag":606,"props":1014,"children":1015},{"style":912},[1016],{"type":564,"value":1017},"]",{"type":559,"tag":606,"props":1019,"children":1020},{"style":906},[1021],{"type":564,"value":909},{"type":559,"tag":606,"props":1023,"children":1024},{"style":744},[1025],{"type":564,"value":942},{"type":559,"tag":606,"props":1027,"children":1029},{"class":608,"line":1028},10,[1030],{"type":559,"tag":606,"props":1031,"children":1032},{"style":744},[1033],{"type":564,"value":1034},"  ]);\n",{"type":559,"tag":606,"props":1036,"children":1038},{"class":608,"line":1037},11,[1039,1043,1048,1052],{"type":559,"tag":606,"props":1040,"children":1041},{"style":822},[1042],{"type":564,"value":870},{"type":559,"tag":606,"props":1044,"children":1045},{"style":772},[1046],{"type":564,"value":1047}," stack",{"type":559,"tag":606,"props":1049,"children":1050},{"style":744},[1051],{"type":564,"value":836},{"type":559,"tag":606,"props":1053,"children":1054},{"style":744},[1055],{"type":564,"value":1056}," [];\n",{"type":559,"tag":606,"props":1058,"children":1060},{"class":608,"line":1059},12,[1061,1066,1070,1075,1080,1085,1090,1094],{"type":559,"tag":606,"props":1062,"children":1063},{"style":750},[1064],{"type":564,"value":1065},"  for",{"type":559,"tag":606,"props":1067,"children":1068},{"style":744},[1069],{"type":564,"value":846},{"type":559,"tag":606,"props":1071,"children":1072},{"style":822},[1073],{"type":564,"value":1074},"let",{"type":559,"tag":606,"props":1076,"children":1077},{"style":772},[1078],{"type":564,"value":1079}," char",{"type":559,"tag":606,"props":1081,"children":1082},{"style":822},[1083],{"type":564,"value":1084}," of",{"type":559,"tag":606,"props":1086,"children":1087},{"style":772},[1088],{"type":564,"value":1089}," s",{"type":559,"tag":606,"props":1091,"children":1092},{"style":744},[1093],{"type":564,"value":856},{"type":559,"tag":606,"props":1095,"children":1096},{"style":744},[1097],{"type":564,"value":861},{"type":559,"tag":606,"props":1099,"children":1101},{"class":608,"line":1100},13,[1102,1107,1111,1116,1121,1126,1130,1135,1140],{"type":559,"tag":606,"props":1103,"children":1104},{"style":750},[1105],{"type":564,"value":1106},"    if",{"type":559,"tag":606,"props":1108,"children":1109},{"style":744},[1110],{"type":564,"value":846},{"type":559,"tag":606,"props":1112,"children":1113},{"style":772},[1114],{"type":564,"value":1115},"map",{"type":559,"tag":606,"props":1117,"children":1118},{"style":744},[1119],{"type":564,"value":1120},".",{"type":559,"tag":606,"props":1122,"children":1123},{"style":828},[1124],{"type":564,"value":1125},"has",{"type":559,"tag":606,"props":1127,"children":1128},{"style":744},[1129],{"type":564,"value":915},{"type":559,"tag":606,"props":1131,"children":1132},{"style":772},[1133],{"type":564,"value":1134},"char",{"type":559,"tag":606,"props":1136,"children":1137},{"style":744},[1138],{"type":564,"value":1139},"))",{"type":559,"tag":606,"props":1141,"children":1142},{"style":744},[1143],{"type":564,"value":861},{"type":559,"tag":606,"props":1145,"children":1147},{"class":608,"line":1146},14,[1148,1153,1157,1162,1166,1170],{"type":559,"tag":606,"props":1149,"children":1150},{"style":772},[1151],{"type":564,"value":1152},"      stack",{"type":559,"tag":606,"props":1154,"children":1155},{"style":744},[1156],{"type":564,"value":1120},{"type":559,"tag":606,"props":1158,"children":1159},{"style":828},[1160],{"type":564,"value":1161},"push",{"type":559,"tag":606,"props":1163,"children":1164},{"style":744},[1165],{"type":564,"value":915},{"type":559,"tag":606,"props":1167,"children":1168},{"style":772},[1169],{"type":564,"value":1134},{"type":559,"tag":606,"props":1171,"children":1172},{"style":744},[1173],{"type":564,"value":1174},");\n",{"type":559,"tag":606,"props":1176,"children":1178},{"class":608,"line":1177},15,[1179,1184,1189,1194,1198,1203,1208,1212,1218,1223,1227,1231,1236,1240,1244,1248,1253,1258,1263,1267,1271],{"type":559,"tag":606,"props":1180,"children":1181},{"style":744},[1182],{"type":564,"value":1183},"    }",{"type":559,"tag":606,"props":1185,"children":1186},{"style":750},[1187],{"type":564,"value":1188}," else",{"type":559,"tag":606,"props":1190,"children":1191},{"style":750},[1192],{"type":564,"value":1193}," if",{"type":559,"tag":606,"props":1195,"children":1196},{"style":744},[1197],{"type":564,"value":846},{"type":559,"tag":606,"props":1199,"children":1200},{"style":822},[1201],{"type":564,"value":1202},"!",{"type":559,"tag":606,"props":1204,"children":1205},{"style":772},[1206],{"type":564,"value":1207},"stack",{"type":559,"tag":606,"props":1209,"children":1210},{"style":744},[1211],{"type":564,"value":1120},{"type":559,"tag":606,"props":1213,"children":1215},{"style":1214},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1216],{"type":564,"value":1217},"length",{"type":559,"tag":606,"props":1219,"children":1220},{"style":822},[1221],{"type":564,"value":1222}," ||",{"type":559,"tag":606,"props":1224,"children":1225},{"style":772},[1226],{"type":564,"value":875},{"type":559,"tag":606,"props":1228,"children":1229},{"style":744},[1230],{"type":564,"value":1120},{"type":559,"tag":606,"props":1232,"children":1233},{"style":828},[1234],{"type":564,"value":1235},"get",{"type":559,"tag":606,"props":1237,"children":1238},{"style":744},[1239],{"type":564,"value":915},{"type":559,"tag":606,"props":1241,"children":1242},{"style":772},[1243],{"type":564,"value":1207},{"type":559,"tag":606,"props":1245,"children":1246},{"style":744},[1247],{"type":564,"value":1120},{"type":559,"tag":606,"props":1249,"children":1250},{"style":828},[1251],{"type":564,"value":1252},"pop",{"type":559,"tag":606,"props":1254,"children":1255},{"style":744},[1256],{"type":564,"value":1257},"())",{"type":559,"tag":606,"props":1259,"children":1260},{"style":822},[1261],{"type":564,"value":1262}," !==",{"type":559,"tag":606,"props":1264,"children":1265},{"style":772},[1266],{"type":564,"value":1079},{"type":559,"tag":606,"props":1268,"children":1269},{"style":744},[1270],{"type":564,"value":856},{"type":559,"tag":606,"props":1272,"children":1273},{"style":744},[1274],{"type":564,"value":861},{"type":559,"tag":606,"props":1276,"children":1278},{"class":608,"line":1277},16,[1279,1284,1289],{"type":559,"tag":606,"props":1280,"children":1281},{"style":750},[1282],{"type":564,"value":1283},"      return",{"type":559,"tag":606,"props":1285,"children":1286},{"style":750},[1287],{"type":564,"value":1288}," false",{"type":559,"tag":606,"props":1290,"children":1291},{"style":744},[1292],{"type":564,"value":1293},";\n",{"type":559,"tag":606,"props":1295,"children":1297},{"class":608,"line":1296},17,[1298],{"type":559,"tag":606,"props":1299,"children":1300},{"style":744},[1301],{"type":564,"value":1302},"    }\n",{"type":559,"tag":606,"props":1304,"children":1306},{"class":608,"line":1305},18,[1307],{"type":559,"tag":606,"props":1308,"children":1309},{"style":744},[1310],{"type":564,"value":1311},"  }\n",{"type":559,"tag":606,"props":1313,"children":1315},{"class":608,"line":1314},19,[1316,1321,1326,1330,1334,1338],{"type":559,"tag":606,"props":1317,"children":1318},{"style":750},[1319],{"type":564,"value":1320},"  return",{"type":559,"tag":606,"props":1322,"children":1323},{"style":822},[1324],{"type":564,"value":1325}," !",{"type":559,"tag":606,"props":1327,"children":1328},{"style":772},[1329],{"type":564,"value":1207},{"type":559,"tag":606,"props":1331,"children":1332},{"style":744},[1333],{"type":564,"value":1120},{"type":559,"tag":606,"props":1335,"children":1336},{"style":1214},[1337],{"type":564,"value":1217},{"type":559,"tag":606,"props":1339,"children":1340},{"style":744},[1341],{"type":564,"value":1293},{"type":559,"tag":606,"props":1343,"children":1345},{"class":608,"line":1344},20,[1346],{"type":559,"tag":606,"props":1347,"children":1348},{"style":744},[1349],{"type":564,"value":1350},"};\n",{"type":559,"tag":1352,"props":1353,"children":1354},"style",{},[1355],{"type":564,"value":1356},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":818,"depth":818,"links":1358},[1359,1360],{"id":702,"depth":618,"text":702},{"id":707,"depth":618,"text":707,"children":1361},[1362],{"id":713,"depth":778,"text":713},"markdown","content:1.algorithm:3.leetcode:3.major:20.valid-parentheses.md","content","1.algorithm/3.leetcode/3.major/20.valid-parentheses.md","md",[1369,1371],{"_path":84,"title":83,"description":1370},"给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请",{"_path":90,"title":89,"description":1372},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",1715007650740]