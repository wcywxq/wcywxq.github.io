[{"data":1,"prerenderedAt":1219},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/valid-parentheses":452,"/algorithm/leetcode/major/valid-parentheses-surround":1214},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":78,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":77,"description":456,"url":457,"body":458,"_type":1209,"_id":1210,"_source":1211,"_file":1212,"_extension":1213},"major",false,"","给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","https://leetcode.cn/problems/valid-parentheses",{"type":459,"children":460,"toc":1203},"root",[461,468,473,493,498,528,533,555,560,583,588,602,608,613,619,1197],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"有效字符串需满足：",{"type":462,"tag":474,"props":475,"children":476},"ol",{},[477,483,488],{"type":462,"tag":478,"props":479,"children":480},"li",{},[481],{"type":467,"value":482},"左括号必须用相同类型的右括号闭合。",{"type":462,"tag":478,"props":484,"children":485},{},[486],{"type":467,"value":487},"左括号必须以正确的顺序闭合。",{"type":462,"tag":478,"props":489,"children":490},{},[491],{"type":467,"value":492},"每个右括号都有一个对应的相同类型的左括号。",{"type":462,"tag":463,"props":494,"children":495},{},[496],{"type":467,"value":497},"示例 1：",{"type":462,"tag":499,"props":500,"children":503},"pre",{"className":501,"code":502,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"()\"\n输出：true\n",[504],{"type":462,"tag":505,"props":506,"children":507},"code",{"__ignoreMap":455},[508,519],{"type":462,"tag":509,"props":510,"children":513},"span",{"class":511,"line":512},"line",1,[514],{"type":462,"tag":509,"props":515,"children":516},{},[517],{"type":467,"value":518},"输入：s = \"()\"\n",{"type":462,"tag":509,"props":520,"children":522},{"class":511,"line":521},2,[523],{"type":462,"tag":509,"props":524,"children":525},{},[526],{"type":467,"value":527},"输出：true\n",{"type":462,"tag":463,"props":529,"children":530},{},[531],{"type":467,"value":532},"示例 2：",{"type":462,"tag":499,"props":534,"children":536},{"className":501,"code":535,"language":467,"meta":455,"style":455},"输入：s = \"()[]{}\"\n输出：true\n",[537],{"type":462,"tag":505,"props":538,"children":539},{"__ignoreMap":455},[540,548],{"type":462,"tag":509,"props":541,"children":542},{"class":511,"line":512},[543],{"type":462,"tag":509,"props":544,"children":545},{},[546],{"type":467,"value":547},"输入：s = \"()[]{}\"\n",{"type":462,"tag":509,"props":549,"children":550},{"class":511,"line":521},[551],{"type":462,"tag":509,"props":552,"children":553},{},[554],{"type":467,"value":527},{"type":462,"tag":463,"props":556,"children":557},{},[558],{"type":467,"value":559},"示例 3：",{"type":462,"tag":499,"props":561,"children":563},{"className":501,"code":562,"language":467,"meta":455,"style":455},"输入：s = \"(]\"\n输出：false\n",[564],{"type":462,"tag":505,"props":565,"children":566},{"__ignoreMap":455},[567,575],{"type":462,"tag":509,"props":568,"children":569},{"class":511,"line":512},[570],{"type":462,"tag":509,"props":571,"children":572},{},[573],{"type":467,"value":574},"输入：s = \"(]\"\n",{"type":462,"tag":509,"props":576,"children":577},{"class":511,"line":521},[578],{"type":462,"tag":509,"props":579,"children":580},{},[581],{"type":467,"value":582},"输出：false\n",{"type":462,"tag":463,"props":584,"children":585},{},[586],{"type":467,"value":587},"提示：",{"type":462,"tag":589,"props":590,"children":591},"ul",{},[592,597],{"type":462,"tag":478,"props":593,"children":594},{},[595],{"type":467,"value":596},"1 \u003C= s.length \u003C= 104",{"type":462,"tag":478,"props":598,"children":599},{},[600],{"type":467,"value":601},"s 仅由括号 '()[]{}' 组成",{"type":462,"tag":603,"props":604,"children":606},"h2",{"id":605},"解题思路",[607],{"type":467,"value":605},{"type":462,"tag":603,"props":609,"children":611},{"id":610},"实现",[612],{"type":467,"value":610},{"type":462,"tag":614,"props":615,"children":617},"h3",{"id":616},"栈",[618],{"type":467,"value":616},{"type":462,"tag":499,"props":620,"children":624},{"className":621,"code":622,"language":623,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function (s) {\n  let map = new Map([\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n  ]);\n  let stack = [];\n  for (let char of s) {\n    if (map.has(char)) {\n      stack.push(char);\n    } else if (!stack.length || map.get(stack.pop()) !== char) {\n      return false;\n    }\n  }\n  return !stack.length;\n};\n","js",[625],{"type":462,"tag":505,"props":626,"children":627},{"__ignoreMap":455},[628,637,663,681,690,734,768,804,834,864,878,904,942,986,1021,1116,1135,1144,1153,1184],{"type":462,"tag":509,"props":629,"children":630},{"class":511,"line":512},[631],{"type":462,"tag":509,"props":632,"children":634},{"style":633},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[635],{"type":467,"value":636},"/**\n",{"type":462,"tag":509,"props":638,"children":639},{"class":511,"line":521},[640,645,651,657],{"type":462,"tag":509,"props":641,"children":642},{"style":633},[643],{"type":467,"value":644}," * ",{"type":462,"tag":509,"props":646,"children":648},{"style":647},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[649],{"type":467,"value":650},"@param",{"type":462,"tag":509,"props":652,"children":654},{"style":653},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[655],{"type":467,"value":656}," {string}",{"type":462,"tag":509,"props":658,"children":660},{"style":659},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[661],{"type":467,"value":662}," s\n",{"type":462,"tag":509,"props":664,"children":666},{"class":511,"line":665},3,[667,671,676],{"type":462,"tag":509,"props":668,"children":669},{"style":633},[670],{"type":467,"value":644},{"type":462,"tag":509,"props":672,"children":673},{"style":647},[674],{"type":467,"value":675},"@return",{"type":462,"tag":509,"props":677,"children":678},{"style":653},[679],{"type":467,"value":680}," {boolean}\n",{"type":462,"tag":509,"props":682,"children":684},{"class":511,"line":683},4,[685],{"type":462,"tag":509,"props":686,"children":687},{"style":633},[688],{"type":467,"value":689}," */\n",{"type":462,"tag":509,"props":691,"children":693},{"class":511,"line":692},5,[694,700,706,712,717,723,729],{"type":462,"tag":509,"props":695,"children":697},{"style":696},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[698],{"type":467,"value":699},"var",{"type":462,"tag":509,"props":701,"children":703},{"style":702},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[704],{"type":467,"value":705}," isValid",{"type":462,"tag":509,"props":707,"children":709},{"style":708},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[710],{"type":467,"value":711}," =",{"type":462,"tag":509,"props":713,"children":714},{"style":696},[715],{"type":467,"value":716}," function",{"type":462,"tag":509,"props":718,"children":720},{"style":719},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[721],{"type":467,"value":722}," (",{"type":462,"tag":509,"props":724,"children":726},{"style":725},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[727],{"type":467,"value":728},"s",{"type":462,"tag":509,"props":730,"children":731},{"style":719},[732],{"type":467,"value":733},") {\n",{"type":462,"tag":509,"props":735,"children":737},{"class":511,"line":736},6,[738,743,749,753,758,763],{"type":462,"tag":509,"props":739,"children":740},{"style":696},[741],{"type":467,"value":742},"  let",{"type":462,"tag":509,"props":744,"children":746},{"style":745},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[747],{"type":467,"value":748}," map",{"type":462,"tag":509,"props":750,"children":751},{"style":708},[752],{"type":467,"value":711},{"type":462,"tag":509,"props":754,"children":755},{"style":708},[756],{"type":467,"value":757}," new",{"type":462,"tag":509,"props":759,"children":760},{"style":702},[761],{"type":467,"value":762}," Map",{"type":462,"tag":509,"props":764,"children":765},{"style":719},[766],{"type":467,"value":767},"([\n",{"type":462,"tag":509,"props":769,"children":771},{"class":511,"line":770},7,[772,777,783,789,794,799],{"type":462,"tag":509,"props":773,"children":774},{"style":719},[775],{"type":467,"value":776},"    [",{"type":462,"tag":509,"props":778,"children":780},{"style":779},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[781],{"type":467,"value":782},"\"(\"",{"type":462,"tag":509,"props":784,"children":786},{"style":785},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[787],{"type":467,"value":788},",",{"type":462,"tag":509,"props":790,"children":791},{"style":779},[792],{"type":467,"value":793}," \")\"",{"type":462,"tag":509,"props":795,"children":796},{"style":719},[797],{"type":467,"value":798},"]",{"type":462,"tag":509,"props":800,"children":801},{"style":785},[802],{"type":467,"value":803},",\n",{"type":462,"tag":509,"props":805,"children":807},{"class":511,"line":806},8,[808,812,817,821,826,830],{"type":462,"tag":509,"props":809,"children":810},{"style":719},[811],{"type":467,"value":776},{"type":462,"tag":509,"props":813,"children":814},{"style":779},[815],{"type":467,"value":816},"\"{\"",{"type":462,"tag":509,"props":818,"children":819},{"style":785},[820],{"type":467,"value":788},{"type":462,"tag":509,"props":822,"children":823},{"style":779},[824],{"type":467,"value":825}," \"}\"",{"type":462,"tag":509,"props":827,"children":828},{"style":719},[829],{"type":467,"value":798},{"type":462,"tag":509,"props":831,"children":832},{"style":785},[833],{"type":467,"value":803},{"type":462,"tag":509,"props":835,"children":837},{"class":511,"line":836},9,[838,842,847,851,856,860],{"type":462,"tag":509,"props":839,"children":840},{"style":719},[841],{"type":467,"value":776},{"type":462,"tag":509,"props":843,"children":844},{"style":779},[845],{"type":467,"value":846},"\"[\"",{"type":462,"tag":509,"props":848,"children":849},{"style":785},[850],{"type":467,"value":788},{"type":462,"tag":509,"props":852,"children":853},{"style":779},[854],{"type":467,"value":855}," \"]\"",{"type":462,"tag":509,"props":857,"children":858},{"style":719},[859],{"type":467,"value":798},{"type":462,"tag":509,"props":861,"children":862},{"style":785},[863],{"type":467,"value":803},{"type":462,"tag":509,"props":865,"children":867},{"class":511,"line":866},10,[868,873],{"type":462,"tag":509,"props":869,"children":870},{"style":719},[871],{"type":467,"value":872},"  ])",{"type":462,"tag":509,"props":874,"children":875},{"style":785},[876],{"type":467,"value":877},";\n",{"type":462,"tag":509,"props":879,"children":881},{"class":511,"line":880},11,[882,886,891,895,900],{"type":462,"tag":509,"props":883,"children":884},{"style":696},[885],{"type":467,"value":742},{"type":462,"tag":509,"props":887,"children":888},{"style":745},[889],{"type":467,"value":890}," stack",{"type":462,"tag":509,"props":892,"children":893},{"style":708},[894],{"type":467,"value":711},{"type":462,"tag":509,"props":896,"children":897},{"style":719},[898],{"type":467,"value":899}," []",{"type":462,"tag":509,"props":901,"children":902},{"style":785},[903],{"type":467,"value":877},{"type":462,"tag":509,"props":905,"children":907},{"class":511,"line":906},12,[908,914,918,923,928,933,938],{"type":462,"tag":509,"props":909,"children":911},{"style":910},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[912],{"type":467,"value":913},"  for",{"type":462,"tag":509,"props":915,"children":916},{"style":719},[917],{"type":467,"value":722},{"type":462,"tag":509,"props":919,"children":920},{"style":696},[921],{"type":467,"value":922},"let",{"type":462,"tag":509,"props":924,"children":925},{"style":745},[926],{"type":467,"value":927}," char",{"type":462,"tag":509,"props":929,"children":930},{"style":708},[931],{"type":467,"value":932}," of",{"type":462,"tag":509,"props":934,"children":935},{"style":745},[936],{"type":467,"value":937}," s",{"type":462,"tag":509,"props":939,"children":940},{"style":719},[941],{"type":467,"value":733},{"type":462,"tag":509,"props":943,"children":945},{"class":511,"line":944},13,[946,951,955,960,966,971,976,981],{"type":462,"tag":509,"props":947,"children":948},{"style":910},[949],{"type":467,"value":950},"    if",{"type":462,"tag":509,"props":952,"children":953},{"style":719},[954],{"type":467,"value":722},{"type":462,"tag":509,"props":956,"children":957},{"style":745},[958],{"type":467,"value":959},"map",{"type":462,"tag":509,"props":961,"children":963},{"style":962},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[964],{"type":467,"value":965},".",{"type":462,"tag":509,"props":967,"children":968},{"style":702},[969],{"type":467,"value":970},"has",{"type":462,"tag":509,"props":972,"children":973},{"style":719},[974],{"type":467,"value":975},"(",{"type":462,"tag":509,"props":977,"children":978},{"style":745},[979],{"type":467,"value":980},"char",{"type":462,"tag":509,"props":982,"children":983},{"style":719},[984],{"type":467,"value":985},")) {\n",{"type":462,"tag":509,"props":987,"children":989},{"class":511,"line":988},14,[990,995,999,1004,1008,1012,1017],{"type":462,"tag":509,"props":991,"children":992},{"style":745},[993],{"type":467,"value":994},"      stack",{"type":462,"tag":509,"props":996,"children":997},{"style":962},[998],{"type":467,"value":965},{"type":462,"tag":509,"props":1000,"children":1001},{"style":702},[1002],{"type":467,"value":1003},"push",{"type":462,"tag":509,"props":1005,"children":1006},{"style":719},[1007],{"type":467,"value":975},{"type":462,"tag":509,"props":1009,"children":1010},{"style":745},[1011],{"type":467,"value":980},{"type":462,"tag":509,"props":1013,"children":1014},{"style":719},[1015],{"type":467,"value":1016},")",{"type":462,"tag":509,"props":1018,"children":1019},{"style":785},[1020],{"type":467,"value":877},{"type":462,"tag":509,"props":1022,"children":1024},{"class":511,"line":1023},15,[1025,1030,1035,1040,1044,1049,1054,1058,1063,1068,1072,1076,1081,1085,1089,1093,1098,1103,1108,1112],{"type":462,"tag":509,"props":1026,"children":1027},{"style":719},[1028],{"type":467,"value":1029},"    } ",{"type":462,"tag":509,"props":1031,"children":1032},{"style":910},[1033],{"type":467,"value":1034},"else",{"type":462,"tag":509,"props":1036,"children":1037},{"style":910},[1038],{"type":467,"value":1039}," if",{"type":462,"tag":509,"props":1041,"children":1042},{"style":719},[1043],{"type":467,"value":722},{"type":462,"tag":509,"props":1045,"children":1046},{"style":708},[1047],{"type":467,"value":1048},"!",{"type":462,"tag":509,"props":1050,"children":1051},{"style":745},[1052],{"type":467,"value":1053},"stack",{"type":462,"tag":509,"props":1055,"children":1056},{"style":962},[1057],{"type":467,"value":965},{"type":462,"tag":509,"props":1059,"children":1060},{"style":719},[1061],{"type":467,"value":1062},"length ",{"type":462,"tag":509,"props":1064,"children":1065},{"style":708},[1066],{"type":467,"value":1067},"||",{"type":462,"tag":509,"props":1069,"children":1070},{"style":745},[1071],{"type":467,"value":748},{"type":462,"tag":509,"props":1073,"children":1074},{"style":962},[1075],{"type":467,"value":965},{"type":462,"tag":509,"props":1077,"children":1078},{"style":702},[1079],{"type":467,"value":1080},"get",{"type":462,"tag":509,"props":1082,"children":1083},{"style":719},[1084],{"type":467,"value":975},{"type":462,"tag":509,"props":1086,"children":1087},{"style":745},[1088],{"type":467,"value":1053},{"type":462,"tag":509,"props":1090,"children":1091},{"style":962},[1092],{"type":467,"value":965},{"type":462,"tag":509,"props":1094,"children":1095},{"style":702},[1096],{"type":467,"value":1097},"pop",{"type":462,"tag":509,"props":1099,"children":1100},{"style":719},[1101],{"type":467,"value":1102},"()) ",{"type":462,"tag":509,"props":1104,"children":1105},{"style":708},[1106],{"type":467,"value":1107},"!==",{"type":462,"tag":509,"props":1109,"children":1110},{"style":745},[1111],{"type":467,"value":927},{"type":462,"tag":509,"props":1113,"children":1114},{"style":719},[1115],{"type":467,"value":733},{"type":462,"tag":509,"props":1117,"children":1119},{"class":511,"line":1118},16,[1120,1125,1131],{"type":462,"tag":509,"props":1121,"children":1122},{"style":910},[1123],{"type":467,"value":1124},"      return",{"type":462,"tag":509,"props":1126,"children":1128},{"style":1127},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1129],{"type":467,"value":1130}," false",{"type":462,"tag":509,"props":1132,"children":1133},{"style":785},[1134],{"type":467,"value":877},{"type":462,"tag":509,"props":1136,"children":1138},{"class":511,"line":1137},17,[1139],{"type":462,"tag":509,"props":1140,"children":1141},{"style":719},[1142],{"type":467,"value":1143},"    }\n",{"type":462,"tag":509,"props":1145,"children":1147},{"class":511,"line":1146},18,[1148],{"type":462,"tag":509,"props":1149,"children":1150},{"style":719},[1151],{"type":467,"value":1152},"  }\n",{"type":462,"tag":509,"props":1154,"children":1156},{"class":511,"line":1155},19,[1157,1162,1167,1171,1175,1180],{"type":462,"tag":509,"props":1158,"children":1159},{"style":910},[1160],{"type":467,"value":1161},"  return",{"type":462,"tag":509,"props":1163,"children":1164},{"style":708},[1165],{"type":467,"value":1166}," !",{"type":462,"tag":509,"props":1168,"children":1169},{"style":745},[1170],{"type":467,"value":1053},{"type":462,"tag":509,"props":1172,"children":1173},{"style":962},[1174],{"type":467,"value":965},{"type":462,"tag":509,"props":1176,"children":1177},{"style":719},[1178],{"type":467,"value":1179},"length",{"type":462,"tag":509,"props":1181,"children":1182},{"style":785},[1183],{"type":467,"value":877},{"type":462,"tag":509,"props":1185,"children":1187},{"class":511,"line":1186},20,[1188,1193],{"type":462,"tag":509,"props":1189,"children":1190},{"style":719},[1191],{"type":467,"value":1192},"}",{"type":462,"tag":509,"props":1194,"children":1195},{"style":785},[1196],{"type":467,"value":877},{"type":462,"tag":1198,"props":1199,"children":1200},"style",{},[1201],{"type":467,"value":1202},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":692,"depth":692,"links":1204},[1205,1206],{"id":605,"depth":521,"text":605},{"id":610,"depth":521,"text":610,"children":1207},[1208],{"id":616,"depth":665,"text":616},"markdown","content:1.algorithm:3.leetcode:3.major:20.valid-parentheses.md","content","1.algorithm/3.leetcode/3.major/20.valid-parentheses.md","md",[1215,1217],{"_path":75,"title":74,"description":1216},"给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请",{"_path":81,"title":80,"description":1218},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",1713457418190]