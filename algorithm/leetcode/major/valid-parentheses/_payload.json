[{"data":1,"prerenderedAt":1376},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/valid-parentheses":552,"/algorithm/leetcode/major/valid-parentheses-surround":1371},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":87,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":86,"description":556,"url":557,"body":558,"_type":1366,"_id":1367,"_source":1368,"_file":1369,"_extension":1370},"major",false,"","给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","https://leetcode.cn/problems/valid-parentheses",{"type":559,"children":560,"toc":1360},"root",[561,568,573,593,598,628,633,655,660,683,688,702,708,713,719,1354],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"有效字符串需满足：",{"type":562,"tag":574,"props":575,"children":576},"ol",{},[577,583,588],{"type":562,"tag":578,"props":579,"children":580},"li",{},[581],{"type":567,"value":582},"左括号必须用相同类型的右括号闭合。",{"type":562,"tag":578,"props":584,"children":585},{},[586],{"type":567,"value":587},"左括号必须以正确的顺序闭合。",{"type":562,"tag":578,"props":589,"children":590},{},[591],{"type":567,"value":592},"每个右括号都有一个对应的相同类型的左括号。",{"type":562,"tag":563,"props":594,"children":595},{},[596],{"type":567,"value":597},"示例 1：",{"type":562,"tag":599,"props":600,"children":603},"pre",{"className":601,"code":602,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"()\"\n输出：true\n",[604],{"type":562,"tag":605,"props":606,"children":607},"code",{"__ignoreMap":555},[608,619],{"type":562,"tag":609,"props":610,"children":613},"span",{"class":611,"line":612},"line",1,[614],{"type":562,"tag":609,"props":615,"children":616},{},[617],{"type":567,"value":618},"输入：s = \"()\"\n",{"type":562,"tag":609,"props":620,"children":622},{"class":611,"line":621},2,[623],{"type":562,"tag":609,"props":624,"children":625},{},[626],{"type":567,"value":627},"输出：true\n",{"type":562,"tag":563,"props":629,"children":630},{},[631],{"type":567,"value":632},"示例 2：",{"type":562,"tag":599,"props":634,"children":636},{"className":601,"code":635,"language":567,"meta":555,"style":555},"输入：s = \"()[]{}\"\n输出：true\n",[637],{"type":562,"tag":605,"props":638,"children":639},{"__ignoreMap":555},[640,648],{"type":562,"tag":609,"props":641,"children":642},{"class":611,"line":612},[643],{"type":562,"tag":609,"props":644,"children":645},{},[646],{"type":567,"value":647},"输入：s = \"()[]{}\"\n",{"type":562,"tag":609,"props":649,"children":650},{"class":611,"line":621},[651],{"type":562,"tag":609,"props":652,"children":653},{},[654],{"type":567,"value":627},{"type":562,"tag":563,"props":656,"children":657},{},[658],{"type":567,"value":659},"示例 3：",{"type":562,"tag":599,"props":661,"children":663},{"className":601,"code":662,"language":567,"meta":555,"style":555},"输入：s = \"(]\"\n输出：false\n",[664],{"type":562,"tag":605,"props":665,"children":666},{"__ignoreMap":555},[667,675],{"type":562,"tag":609,"props":668,"children":669},{"class":611,"line":612},[670],{"type":562,"tag":609,"props":671,"children":672},{},[673],{"type":567,"value":674},"输入：s = \"(]\"\n",{"type":562,"tag":609,"props":676,"children":677},{"class":611,"line":621},[678],{"type":562,"tag":609,"props":679,"children":680},{},[681],{"type":567,"value":682},"输出：false\n",{"type":562,"tag":563,"props":684,"children":685},{},[686],{"type":567,"value":687},"提示：",{"type":562,"tag":689,"props":690,"children":691},"ul",{},[692,697],{"type":562,"tag":578,"props":693,"children":694},{},[695],{"type":567,"value":696},"1 \u003C= s.length \u003C= 104",{"type":562,"tag":578,"props":698,"children":699},{},[700],{"type":567,"value":701},"s 仅由括号 '()[]{}' 组成",{"type":562,"tag":703,"props":704,"children":706},"h2",{"id":705},"解题思路",[707],{"type":567,"value":705},{"type":562,"tag":703,"props":709,"children":711},{"id":710},"实现",[712],{"type":567,"value":710},{"type":562,"tag":714,"props":715,"children":717},"h3",{"id":716},"栈",[718],{"type":567,"value":716},{"type":562,"tag":599,"props":720,"children":724},{"className":721,"code":722,"language":723,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function (s) {\n  let map = new Map([\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n  ]);\n  let stack = [];\n  for (let char of s) {\n    if (map.has(char)) {\n      stack.push(char);\n    } else if (!stack.length || map.get(stack.pop()) !== char) {\n      return false;\n    }\n  }\n  return !stack.length;\n};\n","js",[725],{"type":562,"tag":605,"props":726,"children":727},{"__ignoreMap":555},[728,737,779,810,819,865,898,946,987,1029,1038,1060,1101,1147,1178,1278,1297,1306,1315,1345],{"type":562,"tag":609,"props":729,"children":730},{"class":611,"line":612},[731],{"type":562,"tag":609,"props":732,"children":734},{"style":733},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[735],{"type":567,"value":736},"/**\n",{"type":562,"tag":609,"props":738,"children":739},{"class":611,"line":621},[740,745,751,757,762,768,773],{"type":562,"tag":609,"props":741,"children":742},{"style":733},[743],{"type":567,"value":744}," * ",{"type":562,"tag":609,"props":746,"children":748},{"style":747},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[749],{"type":567,"value":750},"@",{"type":562,"tag":609,"props":752,"children":754},{"style":753},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[755],{"type":567,"value":756},"param",{"type":562,"tag":609,"props":758,"children":759},{"style":747},[760],{"type":567,"value":761}," {",{"type":562,"tag":609,"props":763,"children":765},{"style":764},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[766],{"type":567,"value":767},"string",{"type":562,"tag":609,"props":769,"children":770},{"style":747},[771],{"type":567,"value":772},"}",{"type":562,"tag":609,"props":774,"children":776},{"style":775},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[777],{"type":567,"value":778}," s\n",{"type":562,"tag":609,"props":780,"children":782},{"class":611,"line":781},3,[783,787,791,796,800,805],{"type":562,"tag":609,"props":784,"children":785},{"style":733},[786],{"type":567,"value":744},{"type":562,"tag":609,"props":788,"children":789},{"style":747},[790],{"type":567,"value":750},{"type":562,"tag":609,"props":792,"children":793},{"style":753},[794],{"type":567,"value":795},"return",{"type":562,"tag":609,"props":797,"children":798},{"style":747},[799],{"type":567,"value":761},{"type":562,"tag":609,"props":801,"children":802},{"style":764},[803],{"type":567,"value":804},"boolean",{"type":562,"tag":609,"props":806,"children":807},{"style":747},[808],{"type":567,"value":809},"}\n",{"type":562,"tag":609,"props":811,"children":813},{"class":611,"line":812},4,[814],{"type":562,"tag":609,"props":815,"children":816},{"style":733},[817],{"type":567,"value":818}," */\n",{"type":562,"tag":609,"props":820,"children":822},{"class":611,"line":821},5,[823,829,835,840,845,850,855,860],{"type":562,"tag":609,"props":824,"children":826},{"style":825},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[827],{"type":567,"value":828},"var",{"type":562,"tag":609,"props":830,"children":832},{"style":831},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[833],{"type":567,"value":834}," isValid",{"type":562,"tag":609,"props":836,"children":837},{"style":747},[838],{"type":567,"value":839}," =",{"type":562,"tag":609,"props":841,"children":842},{"style":825},[843],{"type":567,"value":844}," function",{"type":562,"tag":609,"props":846,"children":847},{"style":747},[848],{"type":567,"value":849}," (",{"type":562,"tag":609,"props":851,"children":852},{"style":775},[853],{"type":567,"value":854},"s",{"type":562,"tag":609,"props":856,"children":857},{"style":747},[858],{"type":567,"value":859},")",{"type":562,"tag":609,"props":861,"children":862},{"style":747},[863],{"type":567,"value":864}," {\n",{"type":562,"tag":609,"props":866,"children":868},{"class":611,"line":867},6,[869,874,879,883,888,893],{"type":562,"tag":609,"props":870,"children":871},{"style":825},[872],{"type":567,"value":873},"  let",{"type":562,"tag":609,"props":875,"children":876},{"style":775},[877],{"type":567,"value":878}," map",{"type":562,"tag":609,"props":880,"children":881},{"style":747},[882],{"type":567,"value":839},{"type":562,"tag":609,"props":884,"children":885},{"style":825},[886],{"type":567,"value":887}," new",{"type":562,"tag":609,"props":889,"children":890},{"style":831},[891],{"type":567,"value":892}," Map",{"type":562,"tag":609,"props":894,"children":895},{"style":747},[896],{"type":567,"value":897},"([\n",{"type":562,"tag":609,"props":899,"children":901},{"class":611,"line":900},7,[902,907,913,919,923,928,933,937,941],{"type":562,"tag":609,"props":903,"children":904},{"style":747},[905],{"type":567,"value":906},"    [",{"type":562,"tag":609,"props":908,"children":910},{"style":909},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[911],{"type":567,"value":912},"\"",{"type":562,"tag":609,"props":914,"children":916},{"style":915},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[917],{"type":567,"value":918},"(",{"type":562,"tag":609,"props":920,"children":921},{"style":909},[922],{"type":567,"value":912},{"type":562,"tag":609,"props":924,"children":925},{"style":747},[926],{"type":567,"value":927},",",{"type":562,"tag":609,"props":929,"children":930},{"style":909},[931],{"type":567,"value":932}," \"",{"type":562,"tag":609,"props":934,"children":935},{"style":915},[936],{"type":567,"value":859},{"type":562,"tag":609,"props":938,"children":939},{"style":909},[940],{"type":567,"value":912},{"type":562,"tag":609,"props":942,"children":943},{"style":747},[944],{"type":567,"value":945},"],\n",{"type":562,"tag":609,"props":947,"children":949},{"class":611,"line":948},8,[950,954,958,963,967,971,975,979,983],{"type":562,"tag":609,"props":951,"children":952},{"style":747},[953],{"type":567,"value":906},{"type":562,"tag":609,"props":955,"children":956},{"style":909},[957],{"type":567,"value":912},{"type":562,"tag":609,"props":959,"children":960},{"style":915},[961],{"type":567,"value":962},"{",{"type":562,"tag":609,"props":964,"children":965},{"style":909},[966],{"type":567,"value":912},{"type":562,"tag":609,"props":968,"children":969},{"style":747},[970],{"type":567,"value":927},{"type":562,"tag":609,"props":972,"children":973},{"style":909},[974],{"type":567,"value":932},{"type":562,"tag":609,"props":976,"children":977},{"style":915},[978],{"type":567,"value":772},{"type":562,"tag":609,"props":980,"children":981},{"style":909},[982],{"type":567,"value":912},{"type":562,"tag":609,"props":984,"children":985},{"style":747},[986],{"type":567,"value":945},{"type":562,"tag":609,"props":988,"children":990},{"class":611,"line":989},9,[991,995,999,1004,1008,1012,1016,1021,1025],{"type":562,"tag":609,"props":992,"children":993},{"style":747},[994],{"type":567,"value":906},{"type":562,"tag":609,"props":996,"children":997},{"style":909},[998],{"type":567,"value":912},{"type":562,"tag":609,"props":1000,"children":1001},{"style":915},[1002],{"type":567,"value":1003},"[",{"type":562,"tag":609,"props":1005,"children":1006},{"style":909},[1007],{"type":567,"value":912},{"type":562,"tag":609,"props":1009,"children":1010},{"style":747},[1011],{"type":567,"value":927},{"type":562,"tag":609,"props":1013,"children":1014},{"style":909},[1015],{"type":567,"value":932},{"type":562,"tag":609,"props":1017,"children":1018},{"style":915},[1019],{"type":567,"value":1020},"]",{"type":562,"tag":609,"props":1022,"children":1023},{"style":909},[1024],{"type":567,"value":912},{"type":562,"tag":609,"props":1026,"children":1027},{"style":747},[1028],{"type":567,"value":945},{"type":562,"tag":609,"props":1030,"children":1032},{"class":611,"line":1031},10,[1033],{"type":562,"tag":609,"props":1034,"children":1035},{"style":747},[1036],{"type":567,"value":1037},"  ]);\n",{"type":562,"tag":609,"props":1039,"children":1041},{"class":611,"line":1040},11,[1042,1046,1051,1055],{"type":562,"tag":609,"props":1043,"children":1044},{"style":825},[1045],{"type":567,"value":873},{"type":562,"tag":609,"props":1047,"children":1048},{"style":775},[1049],{"type":567,"value":1050}," stack",{"type":562,"tag":609,"props":1052,"children":1053},{"style":747},[1054],{"type":567,"value":839},{"type":562,"tag":609,"props":1056,"children":1057},{"style":747},[1058],{"type":567,"value":1059}," [];\n",{"type":562,"tag":609,"props":1061,"children":1063},{"class":611,"line":1062},12,[1064,1069,1073,1078,1083,1088,1093,1097],{"type":562,"tag":609,"props":1065,"children":1066},{"style":753},[1067],{"type":567,"value":1068},"  for",{"type":562,"tag":609,"props":1070,"children":1071},{"style":747},[1072],{"type":567,"value":849},{"type":562,"tag":609,"props":1074,"children":1075},{"style":825},[1076],{"type":567,"value":1077},"let",{"type":562,"tag":609,"props":1079,"children":1080},{"style":775},[1081],{"type":567,"value":1082}," char",{"type":562,"tag":609,"props":1084,"children":1085},{"style":825},[1086],{"type":567,"value":1087}," of",{"type":562,"tag":609,"props":1089,"children":1090},{"style":775},[1091],{"type":567,"value":1092}," s",{"type":562,"tag":609,"props":1094,"children":1095},{"style":747},[1096],{"type":567,"value":859},{"type":562,"tag":609,"props":1098,"children":1099},{"style":747},[1100],{"type":567,"value":864},{"type":562,"tag":609,"props":1102,"children":1104},{"class":611,"line":1103},13,[1105,1110,1114,1119,1124,1129,1133,1138,1143],{"type":562,"tag":609,"props":1106,"children":1107},{"style":753},[1108],{"type":567,"value":1109},"    if",{"type":562,"tag":609,"props":1111,"children":1112},{"style":747},[1113],{"type":567,"value":849},{"type":562,"tag":609,"props":1115,"children":1116},{"style":775},[1117],{"type":567,"value":1118},"map",{"type":562,"tag":609,"props":1120,"children":1121},{"style":747},[1122],{"type":567,"value":1123},".",{"type":562,"tag":609,"props":1125,"children":1126},{"style":831},[1127],{"type":567,"value":1128},"has",{"type":562,"tag":609,"props":1130,"children":1131},{"style":747},[1132],{"type":567,"value":918},{"type":562,"tag":609,"props":1134,"children":1135},{"style":775},[1136],{"type":567,"value":1137},"char",{"type":562,"tag":609,"props":1139,"children":1140},{"style":747},[1141],{"type":567,"value":1142},"))",{"type":562,"tag":609,"props":1144,"children":1145},{"style":747},[1146],{"type":567,"value":864},{"type":562,"tag":609,"props":1148,"children":1150},{"class":611,"line":1149},14,[1151,1156,1160,1165,1169,1173],{"type":562,"tag":609,"props":1152,"children":1153},{"style":775},[1154],{"type":567,"value":1155},"      stack",{"type":562,"tag":609,"props":1157,"children":1158},{"style":747},[1159],{"type":567,"value":1123},{"type":562,"tag":609,"props":1161,"children":1162},{"style":831},[1163],{"type":567,"value":1164},"push",{"type":562,"tag":609,"props":1166,"children":1167},{"style":747},[1168],{"type":567,"value":918},{"type":562,"tag":609,"props":1170,"children":1171},{"style":775},[1172],{"type":567,"value":1137},{"type":562,"tag":609,"props":1174,"children":1175},{"style":747},[1176],{"type":567,"value":1177},");\n",{"type":562,"tag":609,"props":1179,"children":1181},{"class":611,"line":1180},15,[1182,1187,1192,1197,1201,1206,1211,1215,1221,1226,1230,1234,1239,1243,1247,1251,1256,1261,1266,1270,1274],{"type":562,"tag":609,"props":1183,"children":1184},{"style":747},[1185],{"type":567,"value":1186},"    }",{"type":562,"tag":609,"props":1188,"children":1189},{"style":753},[1190],{"type":567,"value":1191}," else",{"type":562,"tag":609,"props":1193,"children":1194},{"style":753},[1195],{"type":567,"value":1196}," if",{"type":562,"tag":609,"props":1198,"children":1199},{"style":747},[1200],{"type":567,"value":849},{"type":562,"tag":609,"props":1202,"children":1203},{"style":825},[1204],{"type":567,"value":1205},"!",{"type":562,"tag":609,"props":1207,"children":1208},{"style":775},[1209],{"type":567,"value":1210},"stack",{"type":562,"tag":609,"props":1212,"children":1213},{"style":747},[1214],{"type":567,"value":1123},{"type":562,"tag":609,"props":1216,"children":1218},{"style":1217},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1219],{"type":567,"value":1220},"length",{"type":562,"tag":609,"props":1222,"children":1223},{"style":825},[1224],{"type":567,"value":1225}," ||",{"type":562,"tag":609,"props":1227,"children":1228},{"style":775},[1229],{"type":567,"value":878},{"type":562,"tag":609,"props":1231,"children":1232},{"style":747},[1233],{"type":567,"value":1123},{"type":562,"tag":609,"props":1235,"children":1236},{"style":831},[1237],{"type":567,"value":1238},"get",{"type":562,"tag":609,"props":1240,"children":1241},{"style":747},[1242],{"type":567,"value":918},{"type":562,"tag":609,"props":1244,"children":1245},{"style":775},[1246],{"type":567,"value":1210},{"type":562,"tag":609,"props":1248,"children":1249},{"style":747},[1250],{"type":567,"value":1123},{"type":562,"tag":609,"props":1252,"children":1253},{"style":831},[1254],{"type":567,"value":1255},"pop",{"type":562,"tag":609,"props":1257,"children":1258},{"style":747},[1259],{"type":567,"value":1260},"())",{"type":562,"tag":609,"props":1262,"children":1263},{"style":825},[1264],{"type":567,"value":1265}," !==",{"type":562,"tag":609,"props":1267,"children":1268},{"style":775},[1269],{"type":567,"value":1082},{"type":562,"tag":609,"props":1271,"children":1272},{"style":747},[1273],{"type":567,"value":859},{"type":562,"tag":609,"props":1275,"children":1276},{"style":747},[1277],{"type":567,"value":864},{"type":562,"tag":609,"props":1279,"children":1281},{"class":611,"line":1280},16,[1282,1287,1292],{"type":562,"tag":609,"props":1283,"children":1284},{"style":753},[1285],{"type":567,"value":1286},"      return",{"type":562,"tag":609,"props":1288,"children":1289},{"style":753},[1290],{"type":567,"value":1291}," false",{"type":562,"tag":609,"props":1293,"children":1294},{"style":747},[1295],{"type":567,"value":1296},";\n",{"type":562,"tag":609,"props":1298,"children":1300},{"class":611,"line":1299},17,[1301],{"type":562,"tag":609,"props":1302,"children":1303},{"style":747},[1304],{"type":567,"value":1305},"    }\n",{"type":562,"tag":609,"props":1307,"children":1309},{"class":611,"line":1308},18,[1310],{"type":562,"tag":609,"props":1311,"children":1312},{"style":747},[1313],{"type":567,"value":1314},"  }\n",{"type":562,"tag":609,"props":1316,"children":1318},{"class":611,"line":1317},19,[1319,1324,1329,1333,1337,1341],{"type":562,"tag":609,"props":1320,"children":1321},{"style":753},[1322],{"type":567,"value":1323},"  return",{"type":562,"tag":609,"props":1325,"children":1326},{"style":825},[1327],{"type":567,"value":1328}," !",{"type":562,"tag":609,"props":1330,"children":1331},{"style":775},[1332],{"type":567,"value":1210},{"type":562,"tag":609,"props":1334,"children":1335},{"style":747},[1336],{"type":567,"value":1123},{"type":562,"tag":609,"props":1338,"children":1339},{"style":1217},[1340],{"type":567,"value":1220},{"type":562,"tag":609,"props":1342,"children":1343},{"style":747},[1344],{"type":567,"value":1296},{"type":562,"tag":609,"props":1346,"children":1348},{"class":611,"line":1347},20,[1349],{"type":562,"tag":609,"props":1350,"children":1351},{"style":747},[1352],{"type":567,"value":1353},"};\n",{"type":562,"tag":1355,"props":1356,"children":1357},"style",{},[1358],{"type":567,"value":1359},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":821,"depth":821,"links":1361},[1362,1363],{"id":705,"depth":621,"text":705},{"id":710,"depth":621,"text":710,"children":1364},[1365],{"id":716,"depth":781,"text":716},"markdown","content:1.algorithm:3.leetcode:3.major:20.valid-parentheses.md","content","1.algorithm/3.leetcode/3.major/20.valid-parentheses.md","md",[1372,1374],{"_path":84,"title":83,"description":1373},"给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请",{"_path":90,"title":89,"description":1375},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",1715137597512]