[{"data":1,"prerenderedAt":1230},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/valid-parentheses":463,"/algorithm/leetcode/major/valid-parentheses-surround":1225},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":84,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":83,"description":467,"url":468,"body":469,"_type":1220,"_id":1221,"_source":1222,"_file":1223,"_extension":1224},"major",false,"","给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","https://leetcode.cn/problems/valid-parentheses",{"type":470,"children":471,"toc":1214},"root",[472,479,484,504,509,539,544,566,571,594,599,613,619,624,630,1208],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"有效字符串需满足：",{"type":473,"tag":485,"props":486,"children":487},"ol",{},[488,494,499],{"type":473,"tag":489,"props":490,"children":491},"li",{},[492],{"type":478,"value":493},"左括号必须用相同类型的右括号闭合。",{"type":473,"tag":489,"props":495,"children":496},{},[497],{"type":478,"value":498},"左括号必须以正确的顺序闭合。",{"type":473,"tag":489,"props":500,"children":501},{},[502],{"type":478,"value":503},"每个右括号都有一个对应的相同类型的左括号。",{"type":473,"tag":474,"props":505,"children":506},{},[507],{"type":478,"value":508},"示例 1：",{"type":473,"tag":510,"props":511,"children":514},"pre",{"className":512,"code":513,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：s = \"()\"\n输出：true\n",[515],{"type":473,"tag":516,"props":517,"children":518},"code",{"__ignoreMap":466},[519,530],{"type":473,"tag":520,"props":521,"children":524},"span",{"class":522,"line":523},"line",1,[525],{"type":473,"tag":520,"props":526,"children":527},{},[528],{"type":478,"value":529},"输入：s = \"()\"\n",{"type":473,"tag":520,"props":531,"children":533},{"class":522,"line":532},2,[534],{"type":473,"tag":520,"props":535,"children":536},{},[537],{"type":478,"value":538},"输出：true\n",{"type":473,"tag":474,"props":540,"children":541},{},[542],{"type":478,"value":543},"示例 2：",{"type":473,"tag":510,"props":545,"children":547},{"className":512,"code":546,"language":478,"meta":466,"style":466},"输入：s = \"()[]{}\"\n输出：true\n",[548],{"type":473,"tag":516,"props":549,"children":550},{"__ignoreMap":466},[551,559],{"type":473,"tag":520,"props":552,"children":553},{"class":522,"line":523},[554],{"type":473,"tag":520,"props":555,"children":556},{},[557],{"type":478,"value":558},"输入：s = \"()[]{}\"\n",{"type":473,"tag":520,"props":560,"children":561},{"class":522,"line":532},[562],{"type":473,"tag":520,"props":563,"children":564},{},[565],{"type":478,"value":538},{"type":473,"tag":474,"props":567,"children":568},{},[569],{"type":478,"value":570},"示例 3：",{"type":473,"tag":510,"props":572,"children":574},{"className":512,"code":573,"language":478,"meta":466,"style":466},"输入：s = \"(]\"\n输出：false\n",[575],{"type":473,"tag":516,"props":576,"children":577},{"__ignoreMap":466},[578,586],{"type":473,"tag":520,"props":579,"children":580},{"class":522,"line":523},[581],{"type":473,"tag":520,"props":582,"children":583},{},[584],{"type":478,"value":585},"输入：s = \"(]\"\n",{"type":473,"tag":520,"props":587,"children":588},{"class":522,"line":532},[589],{"type":473,"tag":520,"props":590,"children":591},{},[592],{"type":478,"value":593},"输出：false\n",{"type":473,"tag":474,"props":595,"children":596},{},[597],{"type":478,"value":598},"提示：",{"type":473,"tag":600,"props":601,"children":602},"ul",{},[603,608],{"type":473,"tag":489,"props":604,"children":605},{},[606],{"type":478,"value":607},"1 \u003C= s.length \u003C= 104",{"type":473,"tag":489,"props":609,"children":610},{},[611],{"type":478,"value":612},"s 仅由括号 '()[]{}' 组成",{"type":473,"tag":614,"props":615,"children":617},"h2",{"id":616},"解题思路",[618],{"type":478,"value":616},{"type":473,"tag":614,"props":620,"children":622},{"id":621},"实现",[623],{"type":478,"value":621},{"type":473,"tag":625,"props":626,"children":628},"h3",{"id":627},"栈",[629],{"type":478,"value":627},{"type":473,"tag":510,"props":631,"children":635},{"className":632,"code":633,"language":634,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function (s) {\n  let map = new Map([\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n  ]);\n  let stack = [];\n  for (let char of s) {\n    if (map.has(char)) {\n      stack.push(char);\n    } else if (!stack.length || map.get(stack.pop()) !== char) {\n      return false;\n    }\n  }\n  return !stack.length;\n};\n","js",[636],{"type":473,"tag":516,"props":637,"children":638},{"__ignoreMap":466},[639,648,674,692,701,745,779,815,845,875,889,915,953,997,1032,1127,1146,1155,1164,1195],{"type":473,"tag":520,"props":640,"children":641},{"class":522,"line":523},[642],{"type":473,"tag":520,"props":643,"children":645},{"style":644},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[646],{"type":478,"value":647},"/**\n",{"type":473,"tag":520,"props":649,"children":650},{"class":522,"line":532},[651,656,662,668],{"type":473,"tag":520,"props":652,"children":653},{"style":644},[654],{"type":478,"value":655}," * ",{"type":473,"tag":520,"props":657,"children":659},{"style":658},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[660],{"type":478,"value":661},"@param",{"type":473,"tag":520,"props":663,"children":665},{"style":664},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[666],{"type":478,"value":667}," {string}",{"type":473,"tag":520,"props":669,"children":671},{"style":670},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[672],{"type":478,"value":673}," s\n",{"type":473,"tag":520,"props":675,"children":677},{"class":522,"line":676},3,[678,682,687],{"type":473,"tag":520,"props":679,"children":680},{"style":644},[681],{"type":478,"value":655},{"type":473,"tag":520,"props":683,"children":684},{"style":658},[685],{"type":478,"value":686},"@return",{"type":473,"tag":520,"props":688,"children":689},{"style":664},[690],{"type":478,"value":691}," {boolean}\n",{"type":473,"tag":520,"props":693,"children":695},{"class":522,"line":694},4,[696],{"type":473,"tag":520,"props":697,"children":698},{"style":644},[699],{"type":478,"value":700}," */\n",{"type":473,"tag":520,"props":702,"children":704},{"class":522,"line":703},5,[705,711,717,723,728,734,740],{"type":473,"tag":520,"props":706,"children":708},{"style":707},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[709],{"type":478,"value":710},"var",{"type":473,"tag":520,"props":712,"children":714},{"style":713},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[715],{"type":478,"value":716}," isValid",{"type":473,"tag":520,"props":718,"children":720},{"style":719},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[721],{"type":478,"value":722}," =",{"type":473,"tag":520,"props":724,"children":725},{"style":707},[726],{"type":478,"value":727}," function",{"type":473,"tag":520,"props":729,"children":731},{"style":730},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[732],{"type":478,"value":733}," (",{"type":473,"tag":520,"props":735,"children":737},{"style":736},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[738],{"type":478,"value":739},"s",{"type":473,"tag":520,"props":741,"children":742},{"style":730},[743],{"type":478,"value":744},") {\n",{"type":473,"tag":520,"props":746,"children":748},{"class":522,"line":747},6,[749,754,760,764,769,774],{"type":473,"tag":520,"props":750,"children":751},{"style":707},[752],{"type":478,"value":753},"  let",{"type":473,"tag":520,"props":755,"children":757},{"style":756},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[758],{"type":478,"value":759}," map",{"type":473,"tag":520,"props":761,"children":762},{"style":719},[763],{"type":478,"value":722},{"type":473,"tag":520,"props":765,"children":766},{"style":719},[767],{"type":478,"value":768}," new",{"type":473,"tag":520,"props":770,"children":771},{"style":713},[772],{"type":478,"value":773}," Map",{"type":473,"tag":520,"props":775,"children":776},{"style":730},[777],{"type":478,"value":778},"([\n",{"type":473,"tag":520,"props":780,"children":782},{"class":522,"line":781},7,[783,788,794,800,805,810],{"type":473,"tag":520,"props":784,"children":785},{"style":730},[786],{"type":478,"value":787},"    [",{"type":473,"tag":520,"props":789,"children":791},{"style":790},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[792],{"type":478,"value":793},"\"(\"",{"type":473,"tag":520,"props":795,"children":797},{"style":796},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[798],{"type":478,"value":799},",",{"type":473,"tag":520,"props":801,"children":802},{"style":790},[803],{"type":478,"value":804}," \")\"",{"type":473,"tag":520,"props":806,"children":807},{"style":730},[808],{"type":478,"value":809},"]",{"type":473,"tag":520,"props":811,"children":812},{"style":796},[813],{"type":478,"value":814},",\n",{"type":473,"tag":520,"props":816,"children":818},{"class":522,"line":817},8,[819,823,828,832,837,841],{"type":473,"tag":520,"props":820,"children":821},{"style":730},[822],{"type":478,"value":787},{"type":473,"tag":520,"props":824,"children":825},{"style":790},[826],{"type":478,"value":827},"\"{\"",{"type":473,"tag":520,"props":829,"children":830},{"style":796},[831],{"type":478,"value":799},{"type":473,"tag":520,"props":833,"children":834},{"style":790},[835],{"type":478,"value":836}," \"}\"",{"type":473,"tag":520,"props":838,"children":839},{"style":730},[840],{"type":478,"value":809},{"type":473,"tag":520,"props":842,"children":843},{"style":796},[844],{"type":478,"value":814},{"type":473,"tag":520,"props":846,"children":848},{"class":522,"line":847},9,[849,853,858,862,867,871],{"type":473,"tag":520,"props":850,"children":851},{"style":730},[852],{"type":478,"value":787},{"type":473,"tag":520,"props":854,"children":855},{"style":790},[856],{"type":478,"value":857},"\"[\"",{"type":473,"tag":520,"props":859,"children":860},{"style":796},[861],{"type":478,"value":799},{"type":473,"tag":520,"props":863,"children":864},{"style":790},[865],{"type":478,"value":866}," \"]\"",{"type":473,"tag":520,"props":868,"children":869},{"style":730},[870],{"type":478,"value":809},{"type":473,"tag":520,"props":872,"children":873},{"style":796},[874],{"type":478,"value":814},{"type":473,"tag":520,"props":876,"children":878},{"class":522,"line":877},10,[879,884],{"type":473,"tag":520,"props":880,"children":881},{"style":730},[882],{"type":478,"value":883},"  ])",{"type":473,"tag":520,"props":885,"children":886},{"style":796},[887],{"type":478,"value":888},";\n",{"type":473,"tag":520,"props":890,"children":892},{"class":522,"line":891},11,[893,897,902,906,911],{"type":473,"tag":520,"props":894,"children":895},{"style":707},[896],{"type":478,"value":753},{"type":473,"tag":520,"props":898,"children":899},{"style":756},[900],{"type":478,"value":901}," stack",{"type":473,"tag":520,"props":903,"children":904},{"style":719},[905],{"type":478,"value":722},{"type":473,"tag":520,"props":907,"children":908},{"style":730},[909],{"type":478,"value":910}," []",{"type":473,"tag":520,"props":912,"children":913},{"style":796},[914],{"type":478,"value":888},{"type":473,"tag":520,"props":916,"children":918},{"class":522,"line":917},12,[919,925,929,934,939,944,949],{"type":473,"tag":520,"props":920,"children":922},{"style":921},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[923],{"type":478,"value":924},"  for",{"type":473,"tag":520,"props":926,"children":927},{"style":730},[928],{"type":478,"value":733},{"type":473,"tag":520,"props":930,"children":931},{"style":707},[932],{"type":478,"value":933},"let",{"type":473,"tag":520,"props":935,"children":936},{"style":756},[937],{"type":478,"value":938}," char",{"type":473,"tag":520,"props":940,"children":941},{"style":719},[942],{"type":478,"value":943}," of",{"type":473,"tag":520,"props":945,"children":946},{"style":756},[947],{"type":478,"value":948}," s",{"type":473,"tag":520,"props":950,"children":951},{"style":730},[952],{"type":478,"value":744},{"type":473,"tag":520,"props":954,"children":956},{"class":522,"line":955},13,[957,962,966,971,977,982,987,992],{"type":473,"tag":520,"props":958,"children":959},{"style":921},[960],{"type":478,"value":961},"    if",{"type":473,"tag":520,"props":963,"children":964},{"style":730},[965],{"type":478,"value":733},{"type":473,"tag":520,"props":967,"children":968},{"style":756},[969],{"type":478,"value":970},"map",{"type":473,"tag":520,"props":972,"children":974},{"style":973},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[975],{"type":478,"value":976},".",{"type":473,"tag":520,"props":978,"children":979},{"style":713},[980],{"type":478,"value":981},"has",{"type":473,"tag":520,"props":983,"children":984},{"style":730},[985],{"type":478,"value":986},"(",{"type":473,"tag":520,"props":988,"children":989},{"style":756},[990],{"type":478,"value":991},"char",{"type":473,"tag":520,"props":993,"children":994},{"style":730},[995],{"type":478,"value":996},")) {\n",{"type":473,"tag":520,"props":998,"children":1000},{"class":522,"line":999},14,[1001,1006,1010,1015,1019,1023,1028],{"type":473,"tag":520,"props":1002,"children":1003},{"style":756},[1004],{"type":478,"value":1005},"      stack",{"type":473,"tag":520,"props":1007,"children":1008},{"style":973},[1009],{"type":478,"value":976},{"type":473,"tag":520,"props":1011,"children":1012},{"style":713},[1013],{"type":478,"value":1014},"push",{"type":473,"tag":520,"props":1016,"children":1017},{"style":730},[1018],{"type":478,"value":986},{"type":473,"tag":520,"props":1020,"children":1021},{"style":756},[1022],{"type":478,"value":991},{"type":473,"tag":520,"props":1024,"children":1025},{"style":730},[1026],{"type":478,"value":1027},")",{"type":473,"tag":520,"props":1029,"children":1030},{"style":796},[1031],{"type":478,"value":888},{"type":473,"tag":520,"props":1033,"children":1035},{"class":522,"line":1034},15,[1036,1041,1046,1051,1055,1060,1065,1069,1074,1079,1083,1087,1092,1096,1100,1104,1109,1114,1119,1123],{"type":473,"tag":520,"props":1037,"children":1038},{"style":730},[1039],{"type":478,"value":1040},"    } ",{"type":473,"tag":520,"props":1042,"children":1043},{"style":921},[1044],{"type":478,"value":1045},"else",{"type":473,"tag":520,"props":1047,"children":1048},{"style":921},[1049],{"type":478,"value":1050}," if",{"type":473,"tag":520,"props":1052,"children":1053},{"style":730},[1054],{"type":478,"value":733},{"type":473,"tag":520,"props":1056,"children":1057},{"style":719},[1058],{"type":478,"value":1059},"!",{"type":473,"tag":520,"props":1061,"children":1062},{"style":756},[1063],{"type":478,"value":1064},"stack",{"type":473,"tag":520,"props":1066,"children":1067},{"style":973},[1068],{"type":478,"value":976},{"type":473,"tag":520,"props":1070,"children":1071},{"style":730},[1072],{"type":478,"value":1073},"length ",{"type":473,"tag":520,"props":1075,"children":1076},{"style":719},[1077],{"type":478,"value":1078},"||",{"type":473,"tag":520,"props":1080,"children":1081},{"style":756},[1082],{"type":478,"value":759},{"type":473,"tag":520,"props":1084,"children":1085},{"style":973},[1086],{"type":478,"value":976},{"type":473,"tag":520,"props":1088,"children":1089},{"style":713},[1090],{"type":478,"value":1091},"get",{"type":473,"tag":520,"props":1093,"children":1094},{"style":730},[1095],{"type":478,"value":986},{"type":473,"tag":520,"props":1097,"children":1098},{"style":756},[1099],{"type":478,"value":1064},{"type":473,"tag":520,"props":1101,"children":1102},{"style":973},[1103],{"type":478,"value":976},{"type":473,"tag":520,"props":1105,"children":1106},{"style":713},[1107],{"type":478,"value":1108},"pop",{"type":473,"tag":520,"props":1110,"children":1111},{"style":730},[1112],{"type":478,"value":1113},"()) ",{"type":473,"tag":520,"props":1115,"children":1116},{"style":719},[1117],{"type":478,"value":1118},"!==",{"type":473,"tag":520,"props":1120,"children":1121},{"style":756},[1122],{"type":478,"value":938},{"type":473,"tag":520,"props":1124,"children":1125},{"style":730},[1126],{"type":478,"value":744},{"type":473,"tag":520,"props":1128,"children":1130},{"class":522,"line":1129},16,[1131,1136,1142],{"type":473,"tag":520,"props":1132,"children":1133},{"style":921},[1134],{"type":478,"value":1135},"      return",{"type":473,"tag":520,"props":1137,"children":1139},{"style":1138},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[1140],{"type":478,"value":1141}," false",{"type":473,"tag":520,"props":1143,"children":1144},{"style":796},[1145],{"type":478,"value":888},{"type":473,"tag":520,"props":1147,"children":1149},{"class":522,"line":1148},17,[1150],{"type":473,"tag":520,"props":1151,"children":1152},{"style":730},[1153],{"type":478,"value":1154},"    }\n",{"type":473,"tag":520,"props":1156,"children":1158},{"class":522,"line":1157},18,[1159],{"type":473,"tag":520,"props":1160,"children":1161},{"style":730},[1162],{"type":478,"value":1163},"  }\n",{"type":473,"tag":520,"props":1165,"children":1167},{"class":522,"line":1166},19,[1168,1173,1178,1182,1186,1191],{"type":473,"tag":520,"props":1169,"children":1170},{"style":921},[1171],{"type":478,"value":1172},"  return",{"type":473,"tag":520,"props":1174,"children":1175},{"style":719},[1176],{"type":478,"value":1177}," !",{"type":473,"tag":520,"props":1179,"children":1180},{"style":756},[1181],{"type":478,"value":1064},{"type":473,"tag":520,"props":1183,"children":1184},{"style":973},[1185],{"type":478,"value":976},{"type":473,"tag":520,"props":1187,"children":1188},{"style":730},[1189],{"type":478,"value":1190},"length",{"type":473,"tag":520,"props":1192,"children":1193},{"style":796},[1194],{"type":478,"value":888},{"type":473,"tag":520,"props":1196,"children":1198},{"class":522,"line":1197},20,[1199,1204],{"type":473,"tag":520,"props":1200,"children":1201},{"style":730},[1202],{"type":478,"value":1203},"}",{"type":473,"tag":520,"props":1205,"children":1206},{"style":796},[1207],{"type":478,"value":888},{"type":473,"tag":1209,"props":1210,"children":1211},"style",{},[1212],{"type":478,"value":1213},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":703,"depth":703,"links":1215},[1216,1217],{"id":616,"depth":532,"text":616},{"id":621,"depth":532,"text":621,"children":1218},[1219],{"id":627,"depth":676,"text":627},"markdown","content:1.algorithm:3.leetcode:3.major:20.valid-parentheses.md","content","1.algorithm/3.leetcode/3.major/20.valid-parentheses.md","md",[1226,1228],{"_path":81,"title":80,"description":1227},"给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请",{"_path":87,"title":86,"description":1229},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",1713695845817]