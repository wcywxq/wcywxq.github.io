[{"data":1,"prerenderedAt":1383},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/valid-parentheses":559,"/algorithm/leetcode/major/valid-parentheses-surround":1378},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":87,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":86,"description":563,"url":564,"body":565,"_type":1373,"_id":1374,"_source":1375,"_file":1376,"_extension":1377},"major",false,"","给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","https://leetcode.cn/problems/valid-parentheses",{"type":566,"children":567,"toc":1367},"root",[568,575,580,600,605,635,640,662,667,690,695,709,715,720,726,1361],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"有效字符串需满足：",{"type":569,"tag":581,"props":582,"children":583},"ol",{},[584,590,595],{"type":569,"tag":585,"props":586,"children":587},"li",{},[588],{"type":574,"value":589},"左括号必须用相同类型的右括号闭合。",{"type":569,"tag":585,"props":591,"children":592},{},[593],{"type":574,"value":594},"左括号必须以正确的顺序闭合。",{"type":569,"tag":585,"props":596,"children":597},{},[598],{"type":574,"value":599},"每个右括号都有一个对应的相同类型的左括号。",{"type":569,"tag":570,"props":601,"children":602},{},[603],{"type":574,"value":604},"示例 1：",{"type":569,"tag":606,"props":607,"children":610},"pre",{"className":608,"code":609,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"()\"\n输出：true\n",[611],{"type":569,"tag":612,"props":613,"children":614},"code",{"__ignoreMap":562},[615,626],{"type":569,"tag":616,"props":617,"children":620},"span",{"class":618,"line":619},"line",1,[621],{"type":569,"tag":616,"props":622,"children":623},{},[624],{"type":574,"value":625},"输入：s = \"()\"\n",{"type":569,"tag":616,"props":627,"children":629},{"class":618,"line":628},2,[630],{"type":569,"tag":616,"props":631,"children":632},{},[633],{"type":574,"value":634},"输出：true\n",{"type":569,"tag":570,"props":636,"children":637},{},[638],{"type":574,"value":639},"示例 2：",{"type":569,"tag":606,"props":641,"children":643},{"className":608,"code":642,"language":574,"meta":562,"style":562},"输入：s = \"()[]{}\"\n输出：true\n",[644],{"type":569,"tag":612,"props":645,"children":646},{"__ignoreMap":562},[647,655],{"type":569,"tag":616,"props":648,"children":649},{"class":618,"line":619},[650],{"type":569,"tag":616,"props":651,"children":652},{},[653],{"type":574,"value":654},"输入：s = \"()[]{}\"\n",{"type":569,"tag":616,"props":656,"children":657},{"class":618,"line":628},[658],{"type":569,"tag":616,"props":659,"children":660},{},[661],{"type":574,"value":634},{"type":569,"tag":570,"props":663,"children":664},{},[665],{"type":574,"value":666},"示例 3：",{"type":569,"tag":606,"props":668,"children":670},{"className":608,"code":669,"language":574,"meta":562,"style":562},"输入：s = \"(]\"\n输出：false\n",[671],{"type":569,"tag":612,"props":672,"children":673},{"__ignoreMap":562},[674,682],{"type":569,"tag":616,"props":675,"children":676},{"class":618,"line":619},[677],{"type":569,"tag":616,"props":678,"children":679},{},[680],{"type":574,"value":681},"输入：s = \"(]\"\n",{"type":569,"tag":616,"props":683,"children":684},{"class":618,"line":628},[685],{"type":569,"tag":616,"props":686,"children":687},{},[688],{"type":574,"value":689},"输出：false\n",{"type":569,"tag":570,"props":691,"children":692},{},[693],{"type":574,"value":694},"提示：",{"type":569,"tag":696,"props":697,"children":698},"ul",{},[699,704],{"type":569,"tag":585,"props":700,"children":701},{},[702],{"type":574,"value":703},"1 \u003C= s.length \u003C= 104",{"type":569,"tag":585,"props":705,"children":706},{},[707],{"type":574,"value":708},"s 仅由括号 '()[]{}' 组成",{"type":569,"tag":710,"props":711,"children":713},"h2",{"id":712},"解题思路",[714],{"type":574,"value":712},{"type":569,"tag":710,"props":716,"children":718},{"id":717},"实现",[719],{"type":574,"value":717},{"type":569,"tag":721,"props":722,"children":724},"h3",{"id":723},"栈",[725],{"type":574,"value":723},{"type":569,"tag":606,"props":727,"children":731},{"className":728,"code":729,"language":730,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function (s) {\n  let map = new Map([\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n  ]);\n  let stack = [];\n  for (let char of s) {\n    if (map.has(char)) {\n      stack.push(char);\n    } else if (!stack.length || map.get(stack.pop()) !== char) {\n      return false;\n    }\n  }\n  return !stack.length;\n};\n","js",[732],{"type":569,"tag":612,"props":733,"children":734},{"__ignoreMap":562},[735,744,786,817,826,872,905,953,994,1036,1045,1067,1108,1154,1185,1285,1304,1313,1322,1352],{"type":569,"tag":616,"props":736,"children":737},{"class":618,"line":619},[738],{"type":569,"tag":616,"props":739,"children":741},{"style":740},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[742],{"type":574,"value":743},"/**\n",{"type":569,"tag":616,"props":745,"children":746},{"class":618,"line":628},[747,752,758,764,769,775,780],{"type":569,"tag":616,"props":748,"children":749},{"style":740},[750],{"type":574,"value":751}," * ",{"type":569,"tag":616,"props":753,"children":755},{"style":754},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[756],{"type":574,"value":757},"@",{"type":569,"tag":616,"props":759,"children":761},{"style":760},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[762],{"type":574,"value":763},"param",{"type":569,"tag":616,"props":765,"children":766},{"style":754},[767],{"type":574,"value":768}," {",{"type":569,"tag":616,"props":770,"children":772},{"style":771},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[773],{"type":574,"value":774},"string",{"type":569,"tag":616,"props":776,"children":777},{"style":754},[778],{"type":574,"value":779},"}",{"type":569,"tag":616,"props":781,"children":783},{"style":782},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[784],{"type":574,"value":785}," s\n",{"type":569,"tag":616,"props":787,"children":789},{"class":618,"line":788},3,[790,794,798,803,807,812],{"type":569,"tag":616,"props":791,"children":792},{"style":740},[793],{"type":574,"value":751},{"type":569,"tag":616,"props":795,"children":796},{"style":754},[797],{"type":574,"value":757},{"type":569,"tag":616,"props":799,"children":800},{"style":760},[801],{"type":574,"value":802},"return",{"type":569,"tag":616,"props":804,"children":805},{"style":754},[806],{"type":574,"value":768},{"type":569,"tag":616,"props":808,"children":809},{"style":771},[810],{"type":574,"value":811},"boolean",{"type":569,"tag":616,"props":813,"children":814},{"style":754},[815],{"type":574,"value":816},"}\n",{"type":569,"tag":616,"props":818,"children":820},{"class":618,"line":819},4,[821],{"type":569,"tag":616,"props":822,"children":823},{"style":740},[824],{"type":574,"value":825}," */\n",{"type":569,"tag":616,"props":827,"children":829},{"class":618,"line":828},5,[830,836,842,847,852,857,862,867],{"type":569,"tag":616,"props":831,"children":833},{"style":832},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[834],{"type":574,"value":835},"var",{"type":569,"tag":616,"props":837,"children":839},{"style":838},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[840],{"type":574,"value":841}," isValid",{"type":569,"tag":616,"props":843,"children":844},{"style":754},[845],{"type":574,"value":846}," =",{"type":569,"tag":616,"props":848,"children":849},{"style":832},[850],{"type":574,"value":851}," function",{"type":569,"tag":616,"props":853,"children":854},{"style":754},[855],{"type":574,"value":856}," (",{"type":569,"tag":616,"props":858,"children":859},{"style":782},[860],{"type":574,"value":861},"s",{"type":569,"tag":616,"props":863,"children":864},{"style":754},[865],{"type":574,"value":866},")",{"type":569,"tag":616,"props":868,"children":869},{"style":754},[870],{"type":574,"value":871}," {\n",{"type":569,"tag":616,"props":873,"children":875},{"class":618,"line":874},6,[876,881,886,890,895,900],{"type":569,"tag":616,"props":877,"children":878},{"style":832},[879],{"type":574,"value":880},"  let",{"type":569,"tag":616,"props":882,"children":883},{"style":782},[884],{"type":574,"value":885}," map",{"type":569,"tag":616,"props":887,"children":888},{"style":754},[889],{"type":574,"value":846},{"type":569,"tag":616,"props":891,"children":892},{"style":832},[893],{"type":574,"value":894}," new",{"type":569,"tag":616,"props":896,"children":897},{"style":838},[898],{"type":574,"value":899}," Map",{"type":569,"tag":616,"props":901,"children":902},{"style":754},[903],{"type":574,"value":904},"([\n",{"type":569,"tag":616,"props":906,"children":908},{"class":618,"line":907},7,[909,914,920,926,930,935,940,944,948],{"type":569,"tag":616,"props":910,"children":911},{"style":754},[912],{"type":574,"value":913},"    [",{"type":569,"tag":616,"props":915,"children":917},{"style":916},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[918],{"type":574,"value":919},"\"",{"type":569,"tag":616,"props":921,"children":923},{"style":922},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[924],{"type":574,"value":925},"(",{"type":569,"tag":616,"props":927,"children":928},{"style":916},[929],{"type":574,"value":919},{"type":569,"tag":616,"props":931,"children":932},{"style":754},[933],{"type":574,"value":934},",",{"type":569,"tag":616,"props":936,"children":937},{"style":916},[938],{"type":574,"value":939}," \"",{"type":569,"tag":616,"props":941,"children":942},{"style":922},[943],{"type":574,"value":866},{"type":569,"tag":616,"props":945,"children":946},{"style":916},[947],{"type":574,"value":919},{"type":569,"tag":616,"props":949,"children":950},{"style":754},[951],{"type":574,"value":952},"],\n",{"type":569,"tag":616,"props":954,"children":956},{"class":618,"line":955},8,[957,961,965,970,974,978,982,986,990],{"type":569,"tag":616,"props":958,"children":959},{"style":754},[960],{"type":574,"value":913},{"type":569,"tag":616,"props":962,"children":963},{"style":916},[964],{"type":574,"value":919},{"type":569,"tag":616,"props":966,"children":967},{"style":922},[968],{"type":574,"value":969},"{",{"type":569,"tag":616,"props":971,"children":972},{"style":916},[973],{"type":574,"value":919},{"type":569,"tag":616,"props":975,"children":976},{"style":754},[977],{"type":574,"value":934},{"type":569,"tag":616,"props":979,"children":980},{"style":916},[981],{"type":574,"value":939},{"type":569,"tag":616,"props":983,"children":984},{"style":922},[985],{"type":574,"value":779},{"type":569,"tag":616,"props":987,"children":988},{"style":916},[989],{"type":574,"value":919},{"type":569,"tag":616,"props":991,"children":992},{"style":754},[993],{"type":574,"value":952},{"type":569,"tag":616,"props":995,"children":997},{"class":618,"line":996},9,[998,1002,1006,1011,1015,1019,1023,1028,1032],{"type":569,"tag":616,"props":999,"children":1000},{"style":754},[1001],{"type":574,"value":913},{"type":569,"tag":616,"props":1003,"children":1004},{"style":916},[1005],{"type":574,"value":919},{"type":569,"tag":616,"props":1007,"children":1008},{"style":922},[1009],{"type":574,"value":1010},"[",{"type":569,"tag":616,"props":1012,"children":1013},{"style":916},[1014],{"type":574,"value":919},{"type":569,"tag":616,"props":1016,"children":1017},{"style":754},[1018],{"type":574,"value":934},{"type":569,"tag":616,"props":1020,"children":1021},{"style":916},[1022],{"type":574,"value":939},{"type":569,"tag":616,"props":1024,"children":1025},{"style":922},[1026],{"type":574,"value":1027},"]",{"type":569,"tag":616,"props":1029,"children":1030},{"style":916},[1031],{"type":574,"value":919},{"type":569,"tag":616,"props":1033,"children":1034},{"style":754},[1035],{"type":574,"value":952},{"type":569,"tag":616,"props":1037,"children":1039},{"class":618,"line":1038},10,[1040],{"type":569,"tag":616,"props":1041,"children":1042},{"style":754},[1043],{"type":574,"value":1044},"  ]);\n",{"type":569,"tag":616,"props":1046,"children":1048},{"class":618,"line":1047},11,[1049,1053,1058,1062],{"type":569,"tag":616,"props":1050,"children":1051},{"style":832},[1052],{"type":574,"value":880},{"type":569,"tag":616,"props":1054,"children":1055},{"style":782},[1056],{"type":574,"value":1057}," stack",{"type":569,"tag":616,"props":1059,"children":1060},{"style":754},[1061],{"type":574,"value":846},{"type":569,"tag":616,"props":1063,"children":1064},{"style":754},[1065],{"type":574,"value":1066}," [];\n",{"type":569,"tag":616,"props":1068,"children":1070},{"class":618,"line":1069},12,[1071,1076,1080,1085,1090,1095,1100,1104],{"type":569,"tag":616,"props":1072,"children":1073},{"style":760},[1074],{"type":574,"value":1075},"  for",{"type":569,"tag":616,"props":1077,"children":1078},{"style":754},[1079],{"type":574,"value":856},{"type":569,"tag":616,"props":1081,"children":1082},{"style":832},[1083],{"type":574,"value":1084},"let",{"type":569,"tag":616,"props":1086,"children":1087},{"style":782},[1088],{"type":574,"value":1089}," char",{"type":569,"tag":616,"props":1091,"children":1092},{"style":832},[1093],{"type":574,"value":1094}," of",{"type":569,"tag":616,"props":1096,"children":1097},{"style":782},[1098],{"type":574,"value":1099}," s",{"type":569,"tag":616,"props":1101,"children":1102},{"style":754},[1103],{"type":574,"value":866},{"type":569,"tag":616,"props":1105,"children":1106},{"style":754},[1107],{"type":574,"value":871},{"type":569,"tag":616,"props":1109,"children":1111},{"class":618,"line":1110},13,[1112,1117,1121,1126,1131,1136,1140,1145,1150],{"type":569,"tag":616,"props":1113,"children":1114},{"style":760},[1115],{"type":574,"value":1116},"    if",{"type":569,"tag":616,"props":1118,"children":1119},{"style":754},[1120],{"type":574,"value":856},{"type":569,"tag":616,"props":1122,"children":1123},{"style":782},[1124],{"type":574,"value":1125},"map",{"type":569,"tag":616,"props":1127,"children":1128},{"style":754},[1129],{"type":574,"value":1130},".",{"type":569,"tag":616,"props":1132,"children":1133},{"style":838},[1134],{"type":574,"value":1135},"has",{"type":569,"tag":616,"props":1137,"children":1138},{"style":754},[1139],{"type":574,"value":925},{"type":569,"tag":616,"props":1141,"children":1142},{"style":782},[1143],{"type":574,"value":1144},"char",{"type":569,"tag":616,"props":1146,"children":1147},{"style":754},[1148],{"type":574,"value":1149},"))",{"type":569,"tag":616,"props":1151,"children":1152},{"style":754},[1153],{"type":574,"value":871},{"type":569,"tag":616,"props":1155,"children":1157},{"class":618,"line":1156},14,[1158,1163,1167,1172,1176,1180],{"type":569,"tag":616,"props":1159,"children":1160},{"style":782},[1161],{"type":574,"value":1162},"      stack",{"type":569,"tag":616,"props":1164,"children":1165},{"style":754},[1166],{"type":574,"value":1130},{"type":569,"tag":616,"props":1168,"children":1169},{"style":838},[1170],{"type":574,"value":1171},"push",{"type":569,"tag":616,"props":1173,"children":1174},{"style":754},[1175],{"type":574,"value":925},{"type":569,"tag":616,"props":1177,"children":1178},{"style":782},[1179],{"type":574,"value":1144},{"type":569,"tag":616,"props":1181,"children":1182},{"style":754},[1183],{"type":574,"value":1184},");\n",{"type":569,"tag":616,"props":1186,"children":1188},{"class":618,"line":1187},15,[1189,1194,1199,1204,1208,1213,1218,1222,1228,1233,1237,1241,1246,1250,1254,1258,1263,1268,1273,1277,1281],{"type":569,"tag":616,"props":1190,"children":1191},{"style":754},[1192],{"type":574,"value":1193},"    }",{"type":569,"tag":616,"props":1195,"children":1196},{"style":760},[1197],{"type":574,"value":1198}," else",{"type":569,"tag":616,"props":1200,"children":1201},{"style":760},[1202],{"type":574,"value":1203}," if",{"type":569,"tag":616,"props":1205,"children":1206},{"style":754},[1207],{"type":574,"value":856},{"type":569,"tag":616,"props":1209,"children":1210},{"style":832},[1211],{"type":574,"value":1212},"!",{"type":569,"tag":616,"props":1214,"children":1215},{"style":782},[1216],{"type":574,"value":1217},"stack",{"type":569,"tag":616,"props":1219,"children":1220},{"style":754},[1221],{"type":574,"value":1130},{"type":569,"tag":616,"props":1223,"children":1225},{"style":1224},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1226],{"type":574,"value":1227},"length",{"type":569,"tag":616,"props":1229,"children":1230},{"style":832},[1231],{"type":574,"value":1232}," ||",{"type":569,"tag":616,"props":1234,"children":1235},{"style":782},[1236],{"type":574,"value":885},{"type":569,"tag":616,"props":1238,"children":1239},{"style":754},[1240],{"type":574,"value":1130},{"type":569,"tag":616,"props":1242,"children":1243},{"style":838},[1244],{"type":574,"value":1245},"get",{"type":569,"tag":616,"props":1247,"children":1248},{"style":754},[1249],{"type":574,"value":925},{"type":569,"tag":616,"props":1251,"children":1252},{"style":782},[1253],{"type":574,"value":1217},{"type":569,"tag":616,"props":1255,"children":1256},{"style":754},[1257],{"type":574,"value":1130},{"type":569,"tag":616,"props":1259,"children":1260},{"style":838},[1261],{"type":574,"value":1262},"pop",{"type":569,"tag":616,"props":1264,"children":1265},{"style":754},[1266],{"type":574,"value":1267},"())",{"type":569,"tag":616,"props":1269,"children":1270},{"style":832},[1271],{"type":574,"value":1272}," !==",{"type":569,"tag":616,"props":1274,"children":1275},{"style":782},[1276],{"type":574,"value":1089},{"type":569,"tag":616,"props":1278,"children":1279},{"style":754},[1280],{"type":574,"value":866},{"type":569,"tag":616,"props":1282,"children":1283},{"style":754},[1284],{"type":574,"value":871},{"type":569,"tag":616,"props":1286,"children":1288},{"class":618,"line":1287},16,[1289,1294,1299],{"type":569,"tag":616,"props":1290,"children":1291},{"style":760},[1292],{"type":574,"value":1293},"      return",{"type":569,"tag":616,"props":1295,"children":1296},{"style":760},[1297],{"type":574,"value":1298}," false",{"type":569,"tag":616,"props":1300,"children":1301},{"style":754},[1302],{"type":574,"value":1303},";\n",{"type":569,"tag":616,"props":1305,"children":1307},{"class":618,"line":1306},17,[1308],{"type":569,"tag":616,"props":1309,"children":1310},{"style":754},[1311],{"type":574,"value":1312},"    }\n",{"type":569,"tag":616,"props":1314,"children":1316},{"class":618,"line":1315},18,[1317],{"type":569,"tag":616,"props":1318,"children":1319},{"style":754},[1320],{"type":574,"value":1321},"  }\n",{"type":569,"tag":616,"props":1323,"children":1325},{"class":618,"line":1324},19,[1326,1331,1336,1340,1344,1348],{"type":569,"tag":616,"props":1327,"children":1328},{"style":760},[1329],{"type":574,"value":1330},"  return",{"type":569,"tag":616,"props":1332,"children":1333},{"style":832},[1334],{"type":574,"value":1335}," !",{"type":569,"tag":616,"props":1337,"children":1338},{"style":782},[1339],{"type":574,"value":1217},{"type":569,"tag":616,"props":1341,"children":1342},{"style":754},[1343],{"type":574,"value":1130},{"type":569,"tag":616,"props":1345,"children":1346},{"style":1224},[1347],{"type":574,"value":1227},{"type":569,"tag":616,"props":1349,"children":1350},{"style":754},[1351],{"type":574,"value":1303},{"type":569,"tag":616,"props":1353,"children":1355},{"class":618,"line":1354},20,[1356],{"type":569,"tag":616,"props":1357,"children":1358},{"style":754},[1359],{"type":574,"value":1360},"};\n",{"type":569,"tag":1362,"props":1363,"children":1364},"style",{},[1365],{"type":574,"value":1366},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":828,"depth":828,"links":1368},[1369,1370],{"id":712,"depth":628,"text":712},{"id":717,"depth":628,"text":717,"children":1371},[1372],{"id":723,"depth":788,"text":723},"markdown","content:1.algorithm:3.leetcode:3.major:20.valid-parentheses.md","content","1.algorithm/3.leetcode/3.major/20.valid-parentheses.md","md",[1379,1381],{"_path":84,"title":83,"description":1380},"给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请",{"_path":90,"title":89,"description":1382},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",1717735568365]