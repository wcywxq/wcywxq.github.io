[{"data":1,"prerenderedAt":1375},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/valid-parentheses":551,"/algorithm/leetcode/major/valid-parentheses-surround":1370},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":87,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":86,"description":555,"url":556,"body":557,"_type":1365,"_id":1366,"_source":1367,"_file":1368,"_extension":1369},"major",false,"","给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","https://leetcode.cn/problems/valid-parentheses",{"type":558,"children":559,"toc":1359},"root",[560,567,572,592,597,627,632,654,659,682,687,701,707,712,718,1353],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"有效字符串需满足：",{"type":561,"tag":573,"props":574,"children":575},"ol",{},[576,582,587],{"type":561,"tag":577,"props":578,"children":579},"li",{},[580],{"type":566,"value":581},"左括号必须用相同类型的右括号闭合。",{"type":561,"tag":577,"props":583,"children":584},{},[585],{"type":566,"value":586},"左括号必须以正确的顺序闭合。",{"type":561,"tag":577,"props":588,"children":589},{},[590],{"type":566,"value":591},"每个右括号都有一个对应的相同类型的左括号。",{"type":561,"tag":562,"props":593,"children":594},{},[595],{"type":566,"value":596},"示例 1：",{"type":561,"tag":598,"props":599,"children":602},"pre",{"className":600,"code":601,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：s = \"()\"\n输出：true\n",[603],{"type":561,"tag":604,"props":605,"children":606},"code",{"__ignoreMap":554},[607,618],{"type":561,"tag":608,"props":609,"children":612},"span",{"class":610,"line":611},"line",1,[613],{"type":561,"tag":608,"props":614,"children":615},{},[616],{"type":566,"value":617},"输入：s = \"()\"\n",{"type":561,"tag":608,"props":619,"children":621},{"class":610,"line":620},2,[622],{"type":561,"tag":608,"props":623,"children":624},{},[625],{"type":566,"value":626},"输出：true\n",{"type":561,"tag":562,"props":628,"children":629},{},[630],{"type":566,"value":631},"示例 2：",{"type":561,"tag":598,"props":633,"children":635},{"className":600,"code":634,"language":566,"meta":554,"style":554},"输入：s = \"()[]{}\"\n输出：true\n",[636],{"type":561,"tag":604,"props":637,"children":638},{"__ignoreMap":554},[639,647],{"type":561,"tag":608,"props":640,"children":641},{"class":610,"line":611},[642],{"type":561,"tag":608,"props":643,"children":644},{},[645],{"type":566,"value":646},"输入：s = \"()[]{}\"\n",{"type":561,"tag":608,"props":648,"children":649},{"class":610,"line":620},[650],{"type":561,"tag":608,"props":651,"children":652},{},[653],{"type":566,"value":626},{"type":561,"tag":562,"props":655,"children":656},{},[657],{"type":566,"value":658},"示例 3：",{"type":561,"tag":598,"props":660,"children":662},{"className":600,"code":661,"language":566,"meta":554,"style":554},"输入：s = \"(]\"\n输出：false\n",[663],{"type":561,"tag":604,"props":664,"children":665},{"__ignoreMap":554},[666,674],{"type":561,"tag":608,"props":667,"children":668},{"class":610,"line":611},[669],{"type":561,"tag":608,"props":670,"children":671},{},[672],{"type":566,"value":673},"输入：s = \"(]\"\n",{"type":561,"tag":608,"props":675,"children":676},{"class":610,"line":620},[677],{"type":561,"tag":608,"props":678,"children":679},{},[680],{"type":566,"value":681},"输出：false\n",{"type":561,"tag":562,"props":683,"children":684},{},[685],{"type":566,"value":686},"提示：",{"type":561,"tag":688,"props":689,"children":690},"ul",{},[691,696],{"type":561,"tag":577,"props":692,"children":693},{},[694],{"type":566,"value":695},"1 \u003C= s.length \u003C= 104",{"type":561,"tag":577,"props":697,"children":698},{},[699],{"type":566,"value":700},"s 仅由括号 '()[]{}' 组成",{"type":561,"tag":702,"props":703,"children":705},"h2",{"id":704},"解题思路",[706],{"type":566,"value":704},{"type":561,"tag":702,"props":708,"children":710},{"id":709},"实现",[711],{"type":566,"value":709},{"type":561,"tag":713,"props":714,"children":716},"h3",{"id":715},"栈",[717],{"type":566,"value":715},{"type":561,"tag":598,"props":719,"children":723},{"className":720,"code":721,"language":722,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function (s) {\n  let map = new Map([\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n  ]);\n  let stack = [];\n  for (let char of s) {\n    if (map.has(char)) {\n      stack.push(char);\n    } else if (!stack.length || map.get(stack.pop()) !== char) {\n      return false;\n    }\n  }\n  return !stack.length;\n};\n","js",[724],{"type":561,"tag":604,"props":725,"children":726},{"__ignoreMap":554},[727,736,778,809,818,864,897,945,986,1028,1037,1059,1100,1146,1177,1277,1296,1305,1314,1344],{"type":561,"tag":608,"props":728,"children":729},{"class":610,"line":611},[730],{"type":561,"tag":608,"props":731,"children":733},{"style":732},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[734],{"type":566,"value":735},"/**\n",{"type":561,"tag":608,"props":737,"children":738},{"class":610,"line":620},[739,744,750,756,761,767,772],{"type":561,"tag":608,"props":740,"children":741},{"style":732},[742],{"type":566,"value":743}," * ",{"type":561,"tag":608,"props":745,"children":747},{"style":746},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[748],{"type":566,"value":749},"@",{"type":561,"tag":608,"props":751,"children":753},{"style":752},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[754],{"type":566,"value":755},"param",{"type":561,"tag":608,"props":757,"children":758},{"style":746},[759],{"type":566,"value":760}," {",{"type":561,"tag":608,"props":762,"children":764},{"style":763},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[765],{"type":566,"value":766},"string",{"type":561,"tag":608,"props":768,"children":769},{"style":746},[770],{"type":566,"value":771},"}",{"type":561,"tag":608,"props":773,"children":775},{"style":774},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[776],{"type":566,"value":777}," s\n",{"type":561,"tag":608,"props":779,"children":781},{"class":610,"line":780},3,[782,786,790,795,799,804],{"type":561,"tag":608,"props":783,"children":784},{"style":732},[785],{"type":566,"value":743},{"type":561,"tag":608,"props":787,"children":788},{"style":746},[789],{"type":566,"value":749},{"type":561,"tag":608,"props":791,"children":792},{"style":752},[793],{"type":566,"value":794},"return",{"type":561,"tag":608,"props":796,"children":797},{"style":746},[798],{"type":566,"value":760},{"type":561,"tag":608,"props":800,"children":801},{"style":763},[802],{"type":566,"value":803},"boolean",{"type":561,"tag":608,"props":805,"children":806},{"style":746},[807],{"type":566,"value":808},"}\n",{"type":561,"tag":608,"props":810,"children":812},{"class":610,"line":811},4,[813],{"type":561,"tag":608,"props":814,"children":815},{"style":732},[816],{"type":566,"value":817}," */\n",{"type":561,"tag":608,"props":819,"children":821},{"class":610,"line":820},5,[822,828,834,839,844,849,854,859],{"type":561,"tag":608,"props":823,"children":825},{"style":824},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[826],{"type":566,"value":827},"var",{"type":561,"tag":608,"props":829,"children":831},{"style":830},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[832],{"type":566,"value":833}," isValid",{"type":561,"tag":608,"props":835,"children":836},{"style":746},[837],{"type":566,"value":838}," =",{"type":561,"tag":608,"props":840,"children":841},{"style":824},[842],{"type":566,"value":843}," function",{"type":561,"tag":608,"props":845,"children":846},{"style":746},[847],{"type":566,"value":848}," (",{"type":561,"tag":608,"props":850,"children":851},{"style":774},[852],{"type":566,"value":853},"s",{"type":561,"tag":608,"props":855,"children":856},{"style":746},[857],{"type":566,"value":858},")",{"type":561,"tag":608,"props":860,"children":861},{"style":746},[862],{"type":566,"value":863}," {\n",{"type":561,"tag":608,"props":865,"children":867},{"class":610,"line":866},6,[868,873,878,882,887,892],{"type":561,"tag":608,"props":869,"children":870},{"style":824},[871],{"type":566,"value":872},"  let",{"type":561,"tag":608,"props":874,"children":875},{"style":774},[876],{"type":566,"value":877}," map",{"type":561,"tag":608,"props":879,"children":880},{"style":746},[881],{"type":566,"value":838},{"type":561,"tag":608,"props":883,"children":884},{"style":824},[885],{"type":566,"value":886}," new",{"type":561,"tag":608,"props":888,"children":889},{"style":830},[890],{"type":566,"value":891}," Map",{"type":561,"tag":608,"props":893,"children":894},{"style":746},[895],{"type":566,"value":896},"([\n",{"type":561,"tag":608,"props":898,"children":900},{"class":610,"line":899},7,[901,906,912,918,922,927,932,936,940],{"type":561,"tag":608,"props":902,"children":903},{"style":746},[904],{"type":566,"value":905},"    [",{"type":561,"tag":608,"props":907,"children":909},{"style":908},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[910],{"type":566,"value":911},"\"",{"type":561,"tag":608,"props":913,"children":915},{"style":914},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[916],{"type":566,"value":917},"(",{"type":561,"tag":608,"props":919,"children":920},{"style":908},[921],{"type":566,"value":911},{"type":561,"tag":608,"props":923,"children":924},{"style":746},[925],{"type":566,"value":926},",",{"type":561,"tag":608,"props":928,"children":929},{"style":908},[930],{"type":566,"value":931}," \"",{"type":561,"tag":608,"props":933,"children":934},{"style":914},[935],{"type":566,"value":858},{"type":561,"tag":608,"props":937,"children":938},{"style":908},[939],{"type":566,"value":911},{"type":561,"tag":608,"props":941,"children":942},{"style":746},[943],{"type":566,"value":944},"],\n",{"type":561,"tag":608,"props":946,"children":948},{"class":610,"line":947},8,[949,953,957,962,966,970,974,978,982],{"type":561,"tag":608,"props":950,"children":951},{"style":746},[952],{"type":566,"value":905},{"type":561,"tag":608,"props":954,"children":955},{"style":908},[956],{"type":566,"value":911},{"type":561,"tag":608,"props":958,"children":959},{"style":914},[960],{"type":566,"value":961},"{",{"type":561,"tag":608,"props":963,"children":964},{"style":908},[965],{"type":566,"value":911},{"type":561,"tag":608,"props":967,"children":968},{"style":746},[969],{"type":566,"value":926},{"type":561,"tag":608,"props":971,"children":972},{"style":908},[973],{"type":566,"value":931},{"type":561,"tag":608,"props":975,"children":976},{"style":914},[977],{"type":566,"value":771},{"type":561,"tag":608,"props":979,"children":980},{"style":908},[981],{"type":566,"value":911},{"type":561,"tag":608,"props":983,"children":984},{"style":746},[985],{"type":566,"value":944},{"type":561,"tag":608,"props":987,"children":989},{"class":610,"line":988},9,[990,994,998,1003,1007,1011,1015,1020,1024],{"type":561,"tag":608,"props":991,"children":992},{"style":746},[993],{"type":566,"value":905},{"type":561,"tag":608,"props":995,"children":996},{"style":908},[997],{"type":566,"value":911},{"type":561,"tag":608,"props":999,"children":1000},{"style":914},[1001],{"type":566,"value":1002},"[",{"type":561,"tag":608,"props":1004,"children":1005},{"style":908},[1006],{"type":566,"value":911},{"type":561,"tag":608,"props":1008,"children":1009},{"style":746},[1010],{"type":566,"value":926},{"type":561,"tag":608,"props":1012,"children":1013},{"style":908},[1014],{"type":566,"value":931},{"type":561,"tag":608,"props":1016,"children":1017},{"style":914},[1018],{"type":566,"value":1019},"]",{"type":561,"tag":608,"props":1021,"children":1022},{"style":908},[1023],{"type":566,"value":911},{"type":561,"tag":608,"props":1025,"children":1026},{"style":746},[1027],{"type":566,"value":944},{"type":561,"tag":608,"props":1029,"children":1031},{"class":610,"line":1030},10,[1032],{"type":561,"tag":608,"props":1033,"children":1034},{"style":746},[1035],{"type":566,"value":1036},"  ]);\n",{"type":561,"tag":608,"props":1038,"children":1040},{"class":610,"line":1039},11,[1041,1045,1050,1054],{"type":561,"tag":608,"props":1042,"children":1043},{"style":824},[1044],{"type":566,"value":872},{"type":561,"tag":608,"props":1046,"children":1047},{"style":774},[1048],{"type":566,"value":1049}," stack",{"type":561,"tag":608,"props":1051,"children":1052},{"style":746},[1053],{"type":566,"value":838},{"type":561,"tag":608,"props":1055,"children":1056},{"style":746},[1057],{"type":566,"value":1058}," [];\n",{"type":561,"tag":608,"props":1060,"children":1062},{"class":610,"line":1061},12,[1063,1068,1072,1077,1082,1087,1092,1096],{"type":561,"tag":608,"props":1064,"children":1065},{"style":752},[1066],{"type":566,"value":1067},"  for",{"type":561,"tag":608,"props":1069,"children":1070},{"style":746},[1071],{"type":566,"value":848},{"type":561,"tag":608,"props":1073,"children":1074},{"style":824},[1075],{"type":566,"value":1076},"let",{"type":561,"tag":608,"props":1078,"children":1079},{"style":774},[1080],{"type":566,"value":1081}," char",{"type":561,"tag":608,"props":1083,"children":1084},{"style":824},[1085],{"type":566,"value":1086}," of",{"type":561,"tag":608,"props":1088,"children":1089},{"style":774},[1090],{"type":566,"value":1091}," s",{"type":561,"tag":608,"props":1093,"children":1094},{"style":746},[1095],{"type":566,"value":858},{"type":561,"tag":608,"props":1097,"children":1098},{"style":746},[1099],{"type":566,"value":863},{"type":561,"tag":608,"props":1101,"children":1103},{"class":610,"line":1102},13,[1104,1109,1113,1118,1123,1128,1132,1137,1142],{"type":561,"tag":608,"props":1105,"children":1106},{"style":752},[1107],{"type":566,"value":1108},"    if",{"type":561,"tag":608,"props":1110,"children":1111},{"style":746},[1112],{"type":566,"value":848},{"type":561,"tag":608,"props":1114,"children":1115},{"style":774},[1116],{"type":566,"value":1117},"map",{"type":561,"tag":608,"props":1119,"children":1120},{"style":746},[1121],{"type":566,"value":1122},".",{"type":561,"tag":608,"props":1124,"children":1125},{"style":830},[1126],{"type":566,"value":1127},"has",{"type":561,"tag":608,"props":1129,"children":1130},{"style":746},[1131],{"type":566,"value":917},{"type":561,"tag":608,"props":1133,"children":1134},{"style":774},[1135],{"type":566,"value":1136},"char",{"type":561,"tag":608,"props":1138,"children":1139},{"style":746},[1140],{"type":566,"value":1141},"))",{"type":561,"tag":608,"props":1143,"children":1144},{"style":746},[1145],{"type":566,"value":863},{"type":561,"tag":608,"props":1147,"children":1149},{"class":610,"line":1148},14,[1150,1155,1159,1164,1168,1172],{"type":561,"tag":608,"props":1151,"children":1152},{"style":774},[1153],{"type":566,"value":1154},"      stack",{"type":561,"tag":608,"props":1156,"children":1157},{"style":746},[1158],{"type":566,"value":1122},{"type":561,"tag":608,"props":1160,"children":1161},{"style":830},[1162],{"type":566,"value":1163},"push",{"type":561,"tag":608,"props":1165,"children":1166},{"style":746},[1167],{"type":566,"value":917},{"type":561,"tag":608,"props":1169,"children":1170},{"style":774},[1171],{"type":566,"value":1136},{"type":561,"tag":608,"props":1173,"children":1174},{"style":746},[1175],{"type":566,"value":1176},");\n",{"type":561,"tag":608,"props":1178,"children":1180},{"class":610,"line":1179},15,[1181,1186,1191,1196,1200,1205,1210,1214,1220,1225,1229,1233,1238,1242,1246,1250,1255,1260,1265,1269,1273],{"type":561,"tag":608,"props":1182,"children":1183},{"style":746},[1184],{"type":566,"value":1185},"    }",{"type":561,"tag":608,"props":1187,"children":1188},{"style":752},[1189],{"type":566,"value":1190}," else",{"type":561,"tag":608,"props":1192,"children":1193},{"style":752},[1194],{"type":566,"value":1195}," if",{"type":561,"tag":608,"props":1197,"children":1198},{"style":746},[1199],{"type":566,"value":848},{"type":561,"tag":608,"props":1201,"children":1202},{"style":824},[1203],{"type":566,"value":1204},"!",{"type":561,"tag":608,"props":1206,"children":1207},{"style":774},[1208],{"type":566,"value":1209},"stack",{"type":561,"tag":608,"props":1211,"children":1212},{"style":746},[1213],{"type":566,"value":1122},{"type":561,"tag":608,"props":1215,"children":1217},{"style":1216},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[1218],{"type":566,"value":1219},"length",{"type":561,"tag":608,"props":1221,"children":1222},{"style":824},[1223],{"type":566,"value":1224}," ||",{"type":561,"tag":608,"props":1226,"children":1227},{"style":774},[1228],{"type":566,"value":877},{"type":561,"tag":608,"props":1230,"children":1231},{"style":746},[1232],{"type":566,"value":1122},{"type":561,"tag":608,"props":1234,"children":1235},{"style":830},[1236],{"type":566,"value":1237},"get",{"type":561,"tag":608,"props":1239,"children":1240},{"style":746},[1241],{"type":566,"value":917},{"type":561,"tag":608,"props":1243,"children":1244},{"style":774},[1245],{"type":566,"value":1209},{"type":561,"tag":608,"props":1247,"children":1248},{"style":746},[1249],{"type":566,"value":1122},{"type":561,"tag":608,"props":1251,"children":1252},{"style":830},[1253],{"type":566,"value":1254},"pop",{"type":561,"tag":608,"props":1256,"children":1257},{"style":746},[1258],{"type":566,"value":1259},"())",{"type":561,"tag":608,"props":1261,"children":1262},{"style":824},[1263],{"type":566,"value":1264}," !==",{"type":561,"tag":608,"props":1266,"children":1267},{"style":774},[1268],{"type":566,"value":1081},{"type":561,"tag":608,"props":1270,"children":1271},{"style":746},[1272],{"type":566,"value":858},{"type":561,"tag":608,"props":1274,"children":1275},{"style":746},[1276],{"type":566,"value":863},{"type":561,"tag":608,"props":1278,"children":1280},{"class":610,"line":1279},16,[1281,1286,1291],{"type":561,"tag":608,"props":1282,"children":1283},{"style":752},[1284],{"type":566,"value":1285},"      return",{"type":561,"tag":608,"props":1287,"children":1288},{"style":752},[1289],{"type":566,"value":1290}," false",{"type":561,"tag":608,"props":1292,"children":1293},{"style":746},[1294],{"type":566,"value":1295},";\n",{"type":561,"tag":608,"props":1297,"children":1299},{"class":610,"line":1298},17,[1300],{"type":561,"tag":608,"props":1301,"children":1302},{"style":746},[1303],{"type":566,"value":1304},"    }\n",{"type":561,"tag":608,"props":1306,"children":1308},{"class":610,"line":1307},18,[1309],{"type":561,"tag":608,"props":1310,"children":1311},{"style":746},[1312],{"type":566,"value":1313},"  }\n",{"type":561,"tag":608,"props":1315,"children":1317},{"class":610,"line":1316},19,[1318,1323,1328,1332,1336,1340],{"type":561,"tag":608,"props":1319,"children":1320},{"style":752},[1321],{"type":566,"value":1322},"  return",{"type":561,"tag":608,"props":1324,"children":1325},{"style":824},[1326],{"type":566,"value":1327}," !",{"type":561,"tag":608,"props":1329,"children":1330},{"style":774},[1331],{"type":566,"value":1209},{"type":561,"tag":608,"props":1333,"children":1334},{"style":746},[1335],{"type":566,"value":1122},{"type":561,"tag":608,"props":1337,"children":1338},{"style":1216},[1339],{"type":566,"value":1219},{"type":561,"tag":608,"props":1341,"children":1342},{"style":746},[1343],{"type":566,"value":1295},{"type":561,"tag":608,"props":1345,"children":1347},{"class":610,"line":1346},20,[1348],{"type":561,"tag":608,"props":1349,"children":1350},{"style":746},[1351],{"type":566,"value":1352},"};\n",{"type":561,"tag":1354,"props":1355,"children":1356},"style",{},[1357],{"type":566,"value":1358},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":820,"depth":820,"links":1360},[1361,1362],{"id":704,"depth":620,"text":704},{"id":709,"depth":620,"text":709,"children":1363},[1364],{"id":715,"depth":780,"text":715},"markdown","content:1.algorithm:3.leetcode:3.major:20.valid-parentheses.md","content","1.algorithm/3.leetcode/3.major/20.valid-parentheses.md","md",[1371,1373],{"_path":84,"title":83,"description":1372},"给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请",{"_path":90,"title":89,"description":1374},"将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。",1715135010562]