[{"data":1,"prerenderedAt":1490},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":552,"/algorithm/leetcode/major/string-compression-surround":1485},[4,272,311,529,537],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":310},"八股文","/endorsement",[276,286,297],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"构建工具","/endorsement/build-tools",[290],{"title":291,"_path":292,"children":293},"Webpack","/endorsement/build-tools/webpack",[294],{"title":295,"_path":296},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":298,"_path":299,"children":300},"Html","/endorsement/html",[301,304,307],{"title":302,"_path":303},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":305,"_path":306},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":308,"_path":309},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":312,"_path":313,"children":314,"icon":528},"代码考核","/code-assessment",[315,420,521],{"title":316,"_path":317,"children":318},"源码实现","/code-assessment/source",[319,353,369,397,404,411,414,417],{"title":320,"_path":321,"children":322},"原生 api","/code-assessment/source/native-api",[323,326,329,332,335,338,341,344,347,350],{"title":324,"_path":325},"polyfill","/code-assessment/source/native-api/polyfill",{"title":327,"_path":328},"ajax","/code-assessment/source/native-api/ajax",{"title":330,"_path":331},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":333,"_path":334},"new 操作符","/code-assessment/source/native-api/new",{"title":336,"_path":337},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":339,"_path":340},"定时器","/code-assessment/source/native-api/timer",{"title":342,"_path":343},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":345,"_path":346},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":348,"_path":349},"extends","/code-assessment/source/native-api/extends",{"title":351,"_path":352},"Promise","/code-assessment/source/native-api/promise",{"title":354,"_path":355,"children":356},"函数 Function","/code-assessment/source/function",[357,360,363,366],{"title":358,"_path":359},"函数防抖","/code-assessment/source/function/debounce",{"title":361,"_path":362},"函数节流","/code-assessment/source/function/throttle",{"title":364,"_path":365},"函数柯理化","/code-assessment/source/function/curry",{"title":367,"_path":368},"函数睡眠","/code-assessment/source/function/sleep",{"title":370,"_path":371,"children":372},"数组 Array","/code-assessment/source/array",[373,376,379,382,385,388,391,394],{"title":374,"_path":375},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":377,"_path":378},"数组扁平化","/code-assessment/source/array/flat",{"title":380,"_path":381},"原型方法","/code-assessment/source/array/prototype-method",{"title":383,"_path":384},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":386,"_path":387},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":389,"_path":390},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":392,"_path":393},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":395,"_path":396},"二维数组","/code-assessment/source/array/2d-array",{"title":398,"_path":399,"children":400},"字符串 String","/code-assessment/source/string",[401],{"title":402,"_path":403},"repeat()","/code-assessment/source/string/repeat",{"title":405,"_path":406,"children":407},"集合 Set","/code-assessment/source/set",[408],{"title":409,"_path":410},"遍历集合","/code-assessment/source/set/traverse",{"title":412,"_path":413},"获取通用类型","/code-assessment/source/get-generic-type",{"title":415,"_path":416},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":418,"_path":419},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":421,"_path":422,"children":423},"业务场景","/code-assessment/scene",[424,454,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518],{"title":351,"_path":425,"children":426},"/code-assessment/scene/promise",[427,430,433,436,439,442,445,448,451],{"title":428,"_path":429},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":431,"_path":432},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":434,"_path":435},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":437,"_path":438},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":440,"_path":441},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":443,"_path":444},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":446,"_path":447},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":449,"_path":450},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":452,"_path":453},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":455,"_path":456,"children":457},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[458,461],{"title":459,"_path":460},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":462,"_path":463},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":465,"_path":466},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":468,"_path":469},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":471,"_path":472},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":474,"_path":475},"倒计时","/code-assessment/scene/countdown",{"title":477,"_path":478},"日期格式化","/code-assessment/scene/date-format",{"title":480,"_path":481},"实现前端路由","/code-assessment/scene/frontend-route",{"title":483,"_path":484},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":486,"_path":487},"lodash.get","/code-assessment/scene/lodash-get",{"title":489,"_path":490},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":492,"_path":493},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":495,"_path":496},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":498,"_path":499},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":501,"_path":502},"随机数","/code-assessment/scene/random-number",{"title":504,"_path":505},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":507,"_path":508},"sku 算法实现","/code-assessment/scene/sku",{"title":510,"_path":511},"整数分割","/code-assessment/scene/split-number",{"title":513,"_path":514},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":516,"_path":517},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":519,"_path":520},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":522,"_path":523,"children":524},"Ts 类型挑战","/code-assessment/type-challeges",[525],{"title":526,"_path":527},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":530,"_path":531,"children":532,"icon":536},"项目","/project",[533],{"title":534,"_path":535},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":538,"_path":539,"children":540,"icon":551},"后端语言","/backend-languages",[541],{"title":542,"_path":543,"children":544},"Python","/backend-languages/python",[545,548],{"title":546,"_path":547},"基础","/backend-languages/python/base",{"title":549,"_path":550},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":240,"_dir":553,"_draft":554,"_partial":554,"_locale":555,"title":239,"description":556,"url":557,"body":558,"_type":1480,"_id":1481,"_source":1482,"_file":1483,"_extension":1484},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":559,"children":560,"toc":1474},"root",[561,568,573,578,583,588,593,632,637,668,673,704,709,724,730,735,741,1468],{"type":562,"tag":563,"props":564,"children":565},"element","p",{},[566],{"type":567,"value":556},"text",{"type":562,"tag":563,"props":569,"children":570},{},[571],{"type":567,"value":572},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":562,"tag":563,"props":574,"children":575},{},[576],{"type":567,"value":577},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":562,"tag":563,"props":579,"children":580},{},[581],{"type":567,"value":582},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":562,"tag":563,"props":584,"children":585},{},[586],{"type":567,"value":587},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":562,"tag":563,"props":589,"children":590},{},[591],{"type":567,"value":592},"示例 1：",{"type":562,"tag":594,"props":595,"children":598},"pre",{"className":596,"code":597,"language":567,"meta":555,"style":555},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[599],{"type":562,"tag":600,"props":601,"children":602},"code",{"__ignoreMap":555},[603,614,623],{"type":562,"tag":604,"props":605,"children":608},"span",{"class":606,"line":607},"line",1,[609],{"type":562,"tag":604,"props":610,"children":611},{},[612],{"type":567,"value":613},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":562,"tag":604,"props":615,"children":617},{"class":606,"line":616},2,[618],{"type":562,"tag":604,"props":619,"children":620},{},[621],{"type":567,"value":622},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":562,"tag":604,"props":624,"children":626},{"class":606,"line":625},3,[627],{"type":562,"tag":604,"props":628,"children":629},{},[630],{"type":567,"value":631},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":562,"tag":563,"props":633,"children":634},{},[635],{"type":567,"value":636},"示例 2：",{"type":562,"tag":594,"props":638,"children":640},{"className":596,"code":639,"language":567,"meta":555,"style":555},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[641],{"type":562,"tag":600,"props":642,"children":643},{"__ignoreMap":555},[644,652,660],{"type":562,"tag":604,"props":645,"children":646},{"class":606,"line":607},[647],{"type":562,"tag":604,"props":648,"children":649},{},[650],{"type":567,"value":651},"输入：chars = [\"a\"]\n",{"type":562,"tag":604,"props":653,"children":654},{"class":606,"line":616},[655],{"type":562,"tag":604,"props":656,"children":657},{},[658],{"type":567,"value":659},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":562,"tag":604,"props":661,"children":662},{"class":606,"line":625},[663],{"type":562,"tag":604,"props":664,"children":665},{},[666],{"type":567,"value":667},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":562,"tag":563,"props":669,"children":670},{},[671],{"type":567,"value":672},"示例 3：",{"type":562,"tag":594,"props":674,"children":676},{"className":596,"code":675,"language":567,"meta":555,"style":555},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[677],{"type":562,"tag":600,"props":678,"children":679},{"__ignoreMap":555},[680,688,696],{"type":562,"tag":604,"props":681,"children":682},{"class":606,"line":607},[683],{"type":562,"tag":604,"props":684,"children":685},{},[686],{"type":567,"value":687},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":562,"tag":604,"props":689,"children":690},{"class":606,"line":616},[691],{"type":562,"tag":604,"props":692,"children":693},{},[694],{"type":567,"value":695},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":562,"tag":604,"props":697,"children":698},{"class":606,"line":625},[699],{"type":562,"tag":604,"props":700,"children":701},{},[702],{"type":567,"value":703},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":562,"tag":563,"props":705,"children":706},{},[707],{"type":567,"value":708},"提示：",{"type":562,"tag":710,"props":711,"children":712},"ul",{},[713,719],{"type":562,"tag":714,"props":715,"children":716},"li",{},[717],{"type":567,"value":718},"1 \u003C= chars.length \u003C= 2000",{"type":562,"tag":714,"props":720,"children":721},{},[722],{"type":567,"value":723},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":562,"tag":725,"props":726,"children":728},"h2",{"id":727},"解题思路",[729],{"type":567,"value":727},{"type":562,"tag":725,"props":731,"children":733},{"id":732},"实现",[734],{"type":567,"value":732},{"type":562,"tag":736,"props":737,"children":739},"h3",{"id":738},"双指针",[740],{"type":567,"value":738},{"type":562,"tag":594,"props":742,"children":746},{"className":743,"code":744,"language":745,"meta":555,"style":555},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[747],{"type":562,"tag":600,"props":748,"children":749},{"__ignoreMap":555},[750,759,801,831,840,886,925,953,988,1015,1025,1060,1118,1236,1257,1266,1284,1293,1301,1377,1418,1426,1434,1459],{"type":562,"tag":604,"props":751,"children":752},{"class":606,"line":607},[753],{"type":562,"tag":604,"props":754,"children":756},{"style":755},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[757],{"type":567,"value":758},"/**\n",{"type":562,"tag":604,"props":760,"children":761},{"class":606,"line":616},[762,767,773,779,784,790,795],{"type":562,"tag":604,"props":763,"children":764},{"style":755},[765],{"type":567,"value":766}," * ",{"type":562,"tag":604,"props":768,"children":770},{"style":769},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[771],{"type":567,"value":772},"@",{"type":562,"tag":604,"props":774,"children":776},{"style":775},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[777],{"type":567,"value":778},"param",{"type":562,"tag":604,"props":780,"children":781},{"style":769},[782],{"type":567,"value":783}," {",{"type":562,"tag":604,"props":785,"children":787},{"style":786},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[788],{"type":567,"value":789},"character[]",{"type":562,"tag":604,"props":791,"children":792},{"style":769},[793],{"type":567,"value":794},"}",{"type":562,"tag":604,"props":796,"children":798},{"style":797},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[799],{"type":567,"value":800}," chars\n",{"type":562,"tag":604,"props":802,"children":803},{"class":606,"line":625},[804,808,812,817,821,826],{"type":562,"tag":604,"props":805,"children":806},{"style":755},[807],{"type":567,"value":766},{"type":562,"tag":604,"props":809,"children":810},{"style":769},[811],{"type":567,"value":772},{"type":562,"tag":604,"props":813,"children":814},{"style":775},[815],{"type":567,"value":816},"return",{"type":562,"tag":604,"props":818,"children":819},{"style":769},[820],{"type":567,"value":783},{"type":562,"tag":604,"props":822,"children":823},{"style":786},[824],{"type":567,"value":825},"number",{"type":562,"tag":604,"props":827,"children":828},{"style":769},[829],{"type":567,"value":830},"}\n",{"type":562,"tag":604,"props":832,"children":834},{"class":606,"line":833},4,[835],{"type":562,"tag":604,"props":836,"children":837},{"style":755},[838],{"type":567,"value":839}," */\n",{"type":562,"tag":604,"props":841,"children":843},{"class":606,"line":842},5,[844,850,856,861,866,871,876,881],{"type":562,"tag":604,"props":845,"children":847},{"style":846},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[848],{"type":567,"value":849},"var",{"type":562,"tag":604,"props":851,"children":853},{"style":852},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[854],{"type":567,"value":855}," compress",{"type":562,"tag":604,"props":857,"children":858},{"style":769},[859],{"type":567,"value":860}," =",{"type":562,"tag":604,"props":862,"children":863},{"style":846},[864],{"type":567,"value":865}," function",{"type":562,"tag":604,"props":867,"children":868},{"style":769},[869],{"type":567,"value":870}," (",{"type":562,"tag":604,"props":872,"children":873},{"style":797},[874],{"type":567,"value":875},"chars",{"type":562,"tag":604,"props":877,"children":878},{"style":769},[879],{"type":567,"value":880},")",{"type":562,"tag":604,"props":882,"children":883},{"style":769},[884],{"type":567,"value":885}," {\n",{"type":562,"tag":604,"props":887,"children":889},{"class":606,"line":888},6,[890,895,900,904,909,914,920],{"type":562,"tag":604,"props":891,"children":892},{"style":846},[893],{"type":567,"value":894},"  const",{"type":562,"tag":604,"props":896,"children":897},{"style":797},[898],{"type":567,"value":899}," len",{"type":562,"tag":604,"props":901,"children":902},{"style":769},[903],{"type":567,"value":860},{"type":562,"tag":604,"props":905,"children":906},{"style":797},[907],{"type":567,"value":908}," chars",{"type":562,"tag":604,"props":910,"children":911},{"style":769},[912],{"type":567,"value":913},".",{"type":562,"tag":604,"props":915,"children":917},{"style":916},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[918],{"type":567,"value":919},"length",{"type":562,"tag":604,"props":921,"children":922},{"style":769},[923],{"type":567,"value":924},";\n",{"type":562,"tag":604,"props":926,"children":928},{"class":606,"line":927},7,[929,934,939,943,949],{"type":562,"tag":604,"props":930,"children":931},{"style":846},[932],{"type":567,"value":933},"  let",{"type":562,"tag":604,"props":935,"children":936},{"style":797},[937],{"type":567,"value":938}," i",{"type":562,"tag":604,"props":940,"children":941},{"style":769},[942],{"type":567,"value":860},{"type":562,"tag":604,"props":944,"children":946},{"style":945},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[947],{"type":567,"value":948}," 0",{"type":562,"tag":604,"props":950,"children":951},{"style":769},[952],{"type":567,"value":924},{"type":562,"tag":604,"props":954,"children":956},{"class":606,"line":955},8,[957,961,966,970,974,979,984],{"type":562,"tag":604,"props":958,"children":959},{"style":846},[960],{"type":567,"value":933},{"type":562,"tag":604,"props":962,"children":963},{"style":797},[964],{"type":567,"value":965}," j",{"type":562,"tag":604,"props":967,"children":968},{"style":769},[969],{"type":567,"value":860},{"type":562,"tag":604,"props":971,"children":972},{"style":797},[973],{"type":567,"value":938},{"type":562,"tag":604,"props":975,"children":976},{"style":846},[977],{"type":567,"value":978}," +",{"type":562,"tag":604,"props":980,"children":981},{"style":945},[982],{"type":567,"value":983}," 1",{"type":562,"tag":604,"props":985,"children":986},{"style":769},[987],{"type":567,"value":924},{"type":562,"tag":604,"props":989,"children":991},{"class":606,"line":990},9,[992,996,1001,1005,1011],{"type":562,"tag":604,"props":993,"children":994},{"style":846},[995],{"type":567,"value":933},{"type":562,"tag":604,"props":997,"children":998},{"style":797},[999],{"type":567,"value":1000}," s",{"type":562,"tag":604,"props":1002,"children":1003},{"style":769},[1004],{"type":567,"value":860},{"type":562,"tag":604,"props":1006,"children":1008},{"style":1007},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1009],{"type":567,"value":1010}," \"\"",{"type":562,"tag":604,"props":1012,"children":1013},{"style":769},[1014],{"type":567,"value":924},{"type":562,"tag":604,"props":1016,"children":1018},{"class":606,"line":1017},10,[1019],{"type":562,"tag":604,"props":1020,"children":1022},{"emptyLinePlaceholder":1021},true,[1023],{"type":567,"value":1024},"\n",{"type":562,"tag":604,"props":1026,"children":1028},{"class":606,"line":1027},11,[1029,1034,1038,1043,1048,1052,1056],{"type":562,"tag":604,"props":1030,"children":1031},{"style":775},[1032],{"type":567,"value":1033},"  while",{"type":562,"tag":604,"props":1035,"children":1036},{"style":769},[1037],{"type":567,"value":870},{"type":562,"tag":604,"props":1039,"children":1040},{"style":797},[1041],{"type":567,"value":1042},"j",{"type":562,"tag":604,"props":1044,"children":1045},{"style":769},[1046],{"type":567,"value":1047}," \u003C=",{"type":562,"tag":604,"props":1049,"children":1050},{"style":797},[1051],{"type":567,"value":899},{"type":562,"tag":604,"props":1053,"children":1054},{"style":769},[1055],{"type":567,"value":880},{"type":562,"tag":604,"props":1057,"children":1058},{"style":769},[1059],{"type":567,"value":885},{"type":562,"tag":604,"props":1061,"children":1063},{"class":606,"line":1062},12,[1064,1069,1073,1077,1082,1087,1092,1097,1101,1105,1109,1114],{"type":562,"tag":604,"props":1065,"children":1066},{"style":775},[1067],{"type":567,"value":1068},"    if",{"type":562,"tag":604,"props":1070,"children":1071},{"style":769},[1072],{"type":567,"value":870},{"type":562,"tag":604,"props":1074,"children":1075},{"style":797},[1076],{"type":567,"value":875},{"type":562,"tag":604,"props":1078,"children":1079},{"style":769},[1080],{"type":567,"value":1081},"[",{"type":562,"tag":604,"props":1083,"children":1084},{"style":797},[1085],{"type":567,"value":1086},"i",{"type":562,"tag":604,"props":1088,"children":1089},{"style":769},[1090],{"type":567,"value":1091},"]",{"type":562,"tag":604,"props":1093,"children":1094},{"style":846},[1095],{"type":567,"value":1096}," !==",{"type":562,"tag":604,"props":1098,"children":1099},{"style":797},[1100],{"type":567,"value":908},{"type":562,"tag":604,"props":1102,"children":1103},{"style":769},[1104],{"type":567,"value":1081},{"type":562,"tag":604,"props":1106,"children":1107},{"style":797},[1108],{"type":567,"value":1042},{"type":562,"tag":604,"props":1110,"children":1111},{"style":769},[1112],{"type":567,"value":1113},"])",{"type":562,"tag":604,"props":1115,"children":1116},{"style":769},[1117],{"type":567,"value":885},{"type":562,"tag":604,"props":1119,"children":1121},{"class":606,"line":1120},13,[1122,1127,1132,1136,1141,1145,1150,1154,1159,1164,1169,1174,1178,1182,1186,1191,1196,1201,1205,1209,1214,1219,1223,1227,1231],{"type":562,"tag":604,"props":1123,"children":1124},{"style":797},[1125],{"type":567,"value":1126},"      s",{"type":562,"tag":604,"props":1128,"children":1129},{"style":846},[1130],{"type":567,"value":1131}," +=",{"type":562,"tag":604,"props":1133,"children":1134},{"style":797},[1135],{"type":567,"value":965},{"type":562,"tag":604,"props":1137,"children":1138},{"style":846},[1139],{"type":567,"value":1140}," -",{"type":562,"tag":604,"props":1142,"children":1143},{"style":797},[1144],{"type":567,"value":938},{"type":562,"tag":604,"props":1146,"children":1147},{"style":769},[1148],{"type":567,"value":1149}," >",{"type":562,"tag":604,"props":1151,"children":1152},{"style":945},[1153],{"type":567,"value":983},{"type":562,"tag":604,"props":1155,"children":1156},{"style":846},[1157],{"type":567,"value":1158}," ?",{"type":562,"tag":604,"props":1160,"children":1161},{"style":1007},[1162],{"type":567,"value":1163}," `",{"type":562,"tag":604,"props":1165,"children":1166},{"style":769},[1167],{"type":567,"value":1168},"${",{"type":562,"tag":604,"props":1170,"children":1172},{"style":1171},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1173],{"type":567,"value":875},{"type":562,"tag":604,"props":1175,"children":1176},{"style":769},[1177],{"type":567,"value":1081},{"type":562,"tag":604,"props":1179,"children":1180},{"style":1171},[1181],{"type":567,"value":1086},{"type":562,"tag":604,"props":1183,"children":1184},{"style":769},[1185],{"type":567,"value":1091},{"type":562,"tag":604,"props":1187,"children":1188},{"style":769},[1189],{"type":567,"value":1190},"}${",{"type":562,"tag":604,"props":1192,"children":1193},{"style":1171},[1194],{"type":567,"value":1195},"j ",{"type":562,"tag":604,"props":1197,"children":1198},{"style":846},[1199],{"type":567,"value":1200},"-",{"type":562,"tag":604,"props":1202,"children":1203},{"style":1171},[1204],{"type":567,"value":938},{"type":562,"tag":604,"props":1206,"children":1207},{"style":769},[1208],{"type":567,"value":794},{"type":562,"tag":604,"props":1210,"children":1211},{"style":1007},[1212],{"type":567,"value":1213},"`",{"type":562,"tag":604,"props":1215,"children":1216},{"style":846},[1217],{"type":567,"value":1218}," :",{"type":562,"tag":604,"props":1220,"children":1221},{"style":797},[1222],{"type":567,"value":908},{"type":562,"tag":604,"props":1224,"children":1225},{"style":769},[1226],{"type":567,"value":1081},{"type":562,"tag":604,"props":1228,"children":1229},{"style":797},[1230],{"type":567,"value":1086},{"type":562,"tag":604,"props":1232,"children":1233},{"style":769},[1234],{"type":567,"value":1235},"];\n",{"type":562,"tag":604,"props":1237,"children":1239},{"class":606,"line":1238},14,[1240,1245,1249,1253],{"type":562,"tag":604,"props":1241,"children":1242},{"style":797},[1243],{"type":567,"value":1244},"      i",{"type":562,"tag":604,"props":1246,"children":1247},{"style":769},[1248],{"type":567,"value":860},{"type":562,"tag":604,"props":1250,"children":1251},{"style":797},[1252],{"type":567,"value":965},{"type":562,"tag":604,"props":1254,"children":1255},{"style":769},[1256],{"type":567,"value":924},{"type":562,"tag":604,"props":1258,"children":1260},{"class":606,"line":1259},15,[1261],{"type":562,"tag":604,"props":1262,"children":1263},{"style":769},[1264],{"type":567,"value":1265},"    }\n",{"type":562,"tag":604,"props":1267,"children":1269},{"class":606,"line":1268},16,[1270,1275,1280],{"type":562,"tag":604,"props":1271,"children":1272},{"style":797},[1273],{"type":567,"value":1274},"    j",{"type":562,"tag":604,"props":1276,"children":1277},{"style":846},[1278],{"type":567,"value":1279},"++",{"type":562,"tag":604,"props":1281,"children":1282},{"style":769},[1283],{"type":567,"value":924},{"type":562,"tag":604,"props":1285,"children":1287},{"class":606,"line":1286},17,[1288],{"type":562,"tag":604,"props":1289,"children":1290},{"style":769},[1291],{"type":567,"value":1292},"  }\n",{"type":562,"tag":604,"props":1294,"children":1296},{"class":606,"line":1295},18,[1297],{"type":562,"tag":604,"props":1298,"children":1299},{"emptyLinePlaceholder":1021},[1300],{"type":567,"value":1024},{"type":562,"tag":604,"props":1302,"children":1304},{"class":606,"line":1303},19,[1305,1310,1314,1319,1323,1327,1331,1336,1340,1345,1349,1353,1357,1361,1365,1369,1373],{"type":562,"tag":604,"props":1306,"children":1307},{"style":775},[1308],{"type":567,"value":1309},"  for",{"type":562,"tag":604,"props":1311,"children":1312},{"style":769},[1313],{"type":567,"value":870},{"type":562,"tag":604,"props":1315,"children":1316},{"style":846},[1317],{"type":567,"value":1318},"let",{"type":562,"tag":604,"props":1320,"children":1321},{"style":797},[1322],{"type":567,"value":938},{"type":562,"tag":604,"props":1324,"children":1325},{"style":769},[1326],{"type":567,"value":860},{"type":562,"tag":604,"props":1328,"children":1329},{"style":945},[1330],{"type":567,"value":948},{"type":562,"tag":604,"props":1332,"children":1333},{"style":769},[1334],{"type":567,"value":1335},";",{"type":562,"tag":604,"props":1337,"children":1338},{"style":797},[1339],{"type":567,"value":938},{"type":562,"tag":604,"props":1341,"children":1342},{"style":769},[1343],{"type":567,"value":1344}," \u003C",{"type":562,"tag":604,"props":1346,"children":1347},{"style":797},[1348],{"type":567,"value":1000},{"type":562,"tag":604,"props":1350,"children":1351},{"style":769},[1352],{"type":567,"value":913},{"type":562,"tag":604,"props":1354,"children":1355},{"style":916},[1356],{"type":567,"value":919},{"type":562,"tag":604,"props":1358,"children":1359},{"style":769},[1360],{"type":567,"value":1335},{"type":562,"tag":604,"props":1362,"children":1363},{"style":797},[1364],{"type":567,"value":938},{"type":562,"tag":604,"props":1366,"children":1367},{"style":846},[1368],{"type":567,"value":1279},{"type":562,"tag":604,"props":1370,"children":1371},{"style":769},[1372],{"type":567,"value":880},{"type":562,"tag":604,"props":1374,"children":1375},{"style":769},[1376],{"type":567,"value":885},{"type":562,"tag":604,"props":1378,"children":1380},{"class":606,"line":1379},20,[1381,1386,1390,1394,1398,1402,1406,1410,1414],{"type":562,"tag":604,"props":1382,"children":1383},{"style":797},[1384],{"type":567,"value":1385},"    chars",{"type":562,"tag":604,"props":1387,"children":1388},{"style":769},[1389],{"type":567,"value":1081},{"type":562,"tag":604,"props":1391,"children":1392},{"style":797},[1393],{"type":567,"value":1086},{"type":562,"tag":604,"props":1395,"children":1396},{"style":769},[1397],{"type":567,"value":1091},{"type":562,"tag":604,"props":1399,"children":1400},{"style":769},[1401],{"type":567,"value":860},{"type":562,"tag":604,"props":1403,"children":1404},{"style":797},[1405],{"type":567,"value":1000},{"type":562,"tag":604,"props":1407,"children":1408},{"style":769},[1409],{"type":567,"value":1081},{"type":562,"tag":604,"props":1411,"children":1412},{"style":797},[1413],{"type":567,"value":1086},{"type":562,"tag":604,"props":1415,"children":1416},{"style":769},[1417],{"type":567,"value":1235},{"type":562,"tag":604,"props":1419,"children":1421},{"class":606,"line":1420},21,[1422],{"type":562,"tag":604,"props":1423,"children":1424},{"style":769},[1425],{"type":567,"value":1292},{"type":562,"tag":604,"props":1427,"children":1429},{"class":606,"line":1428},22,[1430],{"type":562,"tag":604,"props":1431,"children":1432},{"emptyLinePlaceholder":1021},[1433],{"type":567,"value":1024},{"type":562,"tag":604,"props":1435,"children":1437},{"class":606,"line":1436},23,[1438,1443,1447,1451,1455],{"type":562,"tag":604,"props":1439,"children":1440},{"style":775},[1441],{"type":567,"value":1442},"  return",{"type":562,"tag":604,"props":1444,"children":1445},{"style":797},[1446],{"type":567,"value":1000},{"type":562,"tag":604,"props":1448,"children":1449},{"style":769},[1450],{"type":567,"value":913},{"type":562,"tag":604,"props":1452,"children":1453},{"style":916},[1454],{"type":567,"value":919},{"type":562,"tag":604,"props":1456,"children":1457},{"style":769},[1458],{"type":567,"value":924},{"type":562,"tag":604,"props":1460,"children":1462},{"class":606,"line":1461},24,[1463],{"type":562,"tag":604,"props":1464,"children":1465},{"style":769},[1466],{"type":567,"value":1467},"};\n",{"type":562,"tag":1469,"props":1470,"children":1471},"style",{},[1472],{"type":567,"value":1473},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":555,"searchDepth":842,"depth":842,"links":1475},[1476,1477],{"id":727,"depth":616,"text":727},{"id":732,"depth":616,"text":732,"children":1478},[1479],{"id":738,"depth":625,"text":738},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1486,1488],{"_path":237,"title":236,"description":1487},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":243,"title":242,"description":1489},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1715137601320]