[{"data":1,"prerenderedAt":1438},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":500,"/algorithm/leetcode/major/string-compression-surround":1433},[4,269,298,468,476,485],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":467},"代码考核","/code-assessment",[302,367,460],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369,"children":370},"业务场景","/code-assessment/scene",[371,396,406,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457],{"title":372,"_path":373,"children":374},"Promise","/code-assessment/scene/promise",[375,378,381,384,387,390,393],{"title":376,"_path":377},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":379,"_path":380},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":382,"_path":383},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":385,"_path":386},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":388,"_path":389},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":391,"_path":392},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":394,"_path":395},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":397,"_path":398,"children":399},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[400,403],{"title":401,"_path":402},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":404,"_path":405},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":407,"_path":408},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":410,"_path":411},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":413,"_path":414},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":416,"_path":417},"倒计时","/code-assessment/scene/countdown",{"title":419,"_path":420},"日期格式化","/code-assessment/scene/date-format",{"title":422,"_path":423},"实现前端路由","/code-assessment/scene/frontend-route",{"title":425,"_path":426},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":428,"_path":429},"lodash.get","/code-assessment/scene/lodash-get",{"title":431,"_path":432},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":434,"_path":435},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":437,"_path":438},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":440,"_path":441},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":443,"_path":444},"随机数","/code-assessment/scene/random-number",{"title":446,"_path":447},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":449,"_path":450},"sku 算法实现","/code-assessment/scene/sku",{"title":452,"_path":453},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":455,"_path":456},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":458,"_path":459},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":461,"_path":462,"children":463},"Ts 类型挑战","/code-assessment/type-challeges",[464],{"title":465,"_path":466},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":469,"_path":470,"children":471,"icon":475},"项目","/project",[472],{"title":473,"_path":474},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":477,"_path":478,"children":479,"icon":484},"设计模式","/design-mode",[480,481],{"title":477,"_path":478},{"title":482,"_path":483},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":486,"_path":487,"children":488,"icon":499},"后端语言","/backend-languages",[489],{"title":490,"_path":491,"children":492},"Python","/backend-languages/python",[493,496],{"title":494,"_path":495},"基础","/backend-languages/python/base",{"title":497,"_path":498},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":237,"_dir":501,"_draft":502,"_partial":502,"_locale":503,"title":236,"description":504,"url":505,"body":506,"_type":1428,"_id":1429,"_source":1430,"_file":1431,"_extension":1432},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":507,"children":508,"toc":1422},"root",[509,516,521,526,531,536,541,580,585,616,621,652,657,672,678,683,689,1416],{"type":510,"tag":511,"props":512,"children":513},"element","p",{},[514],{"type":515,"value":504},"text",{"type":510,"tag":511,"props":517,"children":518},{},[519],{"type":515,"value":520},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":510,"tag":511,"props":522,"children":523},{},[524],{"type":515,"value":525},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":510,"tag":511,"props":527,"children":528},{},[529],{"type":515,"value":530},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":510,"tag":511,"props":532,"children":533},{},[534],{"type":515,"value":535},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":510,"tag":511,"props":537,"children":538},{},[539],{"type":515,"value":540},"示例 1：",{"type":510,"tag":542,"props":543,"children":546},"pre",{"className":544,"code":545,"language":515,"meta":503,"style":503},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[547],{"type":510,"tag":548,"props":549,"children":550},"code",{"__ignoreMap":503},[551,562,571],{"type":510,"tag":552,"props":553,"children":556},"span",{"class":554,"line":555},"line",1,[557],{"type":510,"tag":552,"props":558,"children":559},{},[560],{"type":515,"value":561},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":510,"tag":552,"props":563,"children":565},{"class":554,"line":564},2,[566],{"type":510,"tag":552,"props":567,"children":568},{},[569],{"type":515,"value":570},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":510,"tag":552,"props":572,"children":574},{"class":554,"line":573},3,[575],{"type":510,"tag":552,"props":576,"children":577},{},[578],{"type":515,"value":579},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":510,"tag":511,"props":581,"children":582},{},[583],{"type":515,"value":584},"示例 2：",{"type":510,"tag":542,"props":586,"children":588},{"className":544,"code":587,"language":515,"meta":503,"style":503},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[589],{"type":510,"tag":548,"props":590,"children":591},{"__ignoreMap":503},[592,600,608],{"type":510,"tag":552,"props":593,"children":594},{"class":554,"line":555},[595],{"type":510,"tag":552,"props":596,"children":597},{},[598],{"type":515,"value":599},"输入：chars = [\"a\"]\n",{"type":510,"tag":552,"props":601,"children":602},{"class":554,"line":564},[603],{"type":510,"tag":552,"props":604,"children":605},{},[606],{"type":515,"value":607},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":510,"tag":552,"props":609,"children":610},{"class":554,"line":573},[611],{"type":510,"tag":552,"props":612,"children":613},{},[614],{"type":515,"value":615},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":510,"tag":511,"props":617,"children":618},{},[619],{"type":515,"value":620},"示例 3：",{"type":510,"tag":542,"props":622,"children":624},{"className":544,"code":623,"language":515,"meta":503,"style":503},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[625],{"type":510,"tag":548,"props":626,"children":627},{"__ignoreMap":503},[628,636,644],{"type":510,"tag":552,"props":629,"children":630},{"class":554,"line":555},[631],{"type":510,"tag":552,"props":632,"children":633},{},[634],{"type":515,"value":635},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":510,"tag":552,"props":637,"children":638},{"class":554,"line":564},[639],{"type":510,"tag":552,"props":640,"children":641},{},[642],{"type":515,"value":643},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":510,"tag":552,"props":645,"children":646},{"class":554,"line":573},[647],{"type":510,"tag":552,"props":648,"children":649},{},[650],{"type":515,"value":651},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":510,"tag":511,"props":653,"children":654},{},[655],{"type":515,"value":656},"提示：",{"type":510,"tag":658,"props":659,"children":660},"ul",{},[661,667],{"type":510,"tag":662,"props":663,"children":664},"li",{},[665],{"type":515,"value":666},"1 \u003C= chars.length \u003C= 2000",{"type":510,"tag":662,"props":668,"children":669},{},[670],{"type":515,"value":671},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":510,"tag":673,"props":674,"children":676},"h2",{"id":675},"解题思路",[677],{"type":515,"value":675},{"type":510,"tag":673,"props":679,"children":681},{"id":680},"实现",[682],{"type":515,"value":680},{"type":510,"tag":684,"props":685,"children":687},"h3",{"id":686},"双指针",[688],{"type":515,"value":686},{"type":510,"tag":542,"props":690,"children":694},{"className":691,"code":692,"language":693,"meta":503,"style":503},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[695],{"type":510,"tag":548,"props":696,"children":697},{"__ignoreMap":503},[698,707,749,779,788,834,873,901,936,963,973,1008,1066,1184,1205,1214,1232,1241,1249,1325,1366,1374,1382,1407],{"type":510,"tag":552,"props":699,"children":700},{"class":554,"line":555},[701],{"type":510,"tag":552,"props":702,"children":704},{"style":703},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[705],{"type":515,"value":706},"/**\n",{"type":510,"tag":552,"props":708,"children":709},{"class":554,"line":564},[710,715,721,727,732,738,743],{"type":510,"tag":552,"props":711,"children":712},{"style":703},[713],{"type":515,"value":714}," * ",{"type":510,"tag":552,"props":716,"children":718},{"style":717},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[719],{"type":515,"value":720},"@",{"type":510,"tag":552,"props":722,"children":724},{"style":723},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[725],{"type":515,"value":726},"param",{"type":510,"tag":552,"props":728,"children":729},{"style":717},[730],{"type":515,"value":731}," {",{"type":510,"tag":552,"props":733,"children":735},{"style":734},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[736],{"type":515,"value":737},"character[]",{"type":510,"tag":552,"props":739,"children":740},{"style":717},[741],{"type":515,"value":742},"}",{"type":510,"tag":552,"props":744,"children":746},{"style":745},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[747],{"type":515,"value":748}," chars\n",{"type":510,"tag":552,"props":750,"children":751},{"class":554,"line":573},[752,756,760,765,769,774],{"type":510,"tag":552,"props":753,"children":754},{"style":703},[755],{"type":515,"value":714},{"type":510,"tag":552,"props":757,"children":758},{"style":717},[759],{"type":515,"value":720},{"type":510,"tag":552,"props":761,"children":762},{"style":723},[763],{"type":515,"value":764},"return",{"type":510,"tag":552,"props":766,"children":767},{"style":717},[768],{"type":515,"value":731},{"type":510,"tag":552,"props":770,"children":771},{"style":734},[772],{"type":515,"value":773},"number",{"type":510,"tag":552,"props":775,"children":776},{"style":717},[777],{"type":515,"value":778},"}\n",{"type":510,"tag":552,"props":780,"children":782},{"class":554,"line":781},4,[783],{"type":510,"tag":552,"props":784,"children":785},{"style":703},[786],{"type":515,"value":787}," */\n",{"type":510,"tag":552,"props":789,"children":791},{"class":554,"line":790},5,[792,798,804,809,814,819,824,829],{"type":510,"tag":552,"props":793,"children":795},{"style":794},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[796],{"type":515,"value":797},"var",{"type":510,"tag":552,"props":799,"children":801},{"style":800},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[802],{"type":515,"value":803}," compress",{"type":510,"tag":552,"props":805,"children":806},{"style":717},[807],{"type":515,"value":808}," =",{"type":510,"tag":552,"props":810,"children":811},{"style":794},[812],{"type":515,"value":813}," function",{"type":510,"tag":552,"props":815,"children":816},{"style":717},[817],{"type":515,"value":818}," (",{"type":510,"tag":552,"props":820,"children":821},{"style":745},[822],{"type":515,"value":823},"chars",{"type":510,"tag":552,"props":825,"children":826},{"style":717},[827],{"type":515,"value":828},")",{"type":510,"tag":552,"props":830,"children":831},{"style":717},[832],{"type":515,"value":833}," {\n",{"type":510,"tag":552,"props":835,"children":837},{"class":554,"line":836},6,[838,843,848,852,857,862,868],{"type":510,"tag":552,"props":839,"children":840},{"style":794},[841],{"type":515,"value":842},"  const",{"type":510,"tag":552,"props":844,"children":845},{"style":745},[846],{"type":515,"value":847}," len",{"type":510,"tag":552,"props":849,"children":850},{"style":717},[851],{"type":515,"value":808},{"type":510,"tag":552,"props":853,"children":854},{"style":745},[855],{"type":515,"value":856}," chars",{"type":510,"tag":552,"props":858,"children":859},{"style":717},[860],{"type":515,"value":861},".",{"type":510,"tag":552,"props":863,"children":865},{"style":864},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[866],{"type":515,"value":867},"length",{"type":510,"tag":552,"props":869,"children":870},{"style":717},[871],{"type":515,"value":872},";\n",{"type":510,"tag":552,"props":874,"children":876},{"class":554,"line":875},7,[877,882,887,891,897],{"type":510,"tag":552,"props":878,"children":879},{"style":794},[880],{"type":515,"value":881},"  let",{"type":510,"tag":552,"props":883,"children":884},{"style":745},[885],{"type":515,"value":886}," i",{"type":510,"tag":552,"props":888,"children":889},{"style":717},[890],{"type":515,"value":808},{"type":510,"tag":552,"props":892,"children":894},{"style":893},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[895],{"type":515,"value":896}," 0",{"type":510,"tag":552,"props":898,"children":899},{"style":717},[900],{"type":515,"value":872},{"type":510,"tag":552,"props":902,"children":904},{"class":554,"line":903},8,[905,909,914,918,922,927,932],{"type":510,"tag":552,"props":906,"children":907},{"style":794},[908],{"type":515,"value":881},{"type":510,"tag":552,"props":910,"children":911},{"style":745},[912],{"type":515,"value":913}," j",{"type":510,"tag":552,"props":915,"children":916},{"style":717},[917],{"type":515,"value":808},{"type":510,"tag":552,"props":919,"children":920},{"style":745},[921],{"type":515,"value":886},{"type":510,"tag":552,"props":923,"children":924},{"style":794},[925],{"type":515,"value":926}," +",{"type":510,"tag":552,"props":928,"children":929},{"style":893},[930],{"type":515,"value":931}," 1",{"type":510,"tag":552,"props":933,"children":934},{"style":717},[935],{"type":515,"value":872},{"type":510,"tag":552,"props":937,"children":939},{"class":554,"line":938},9,[940,944,949,953,959],{"type":510,"tag":552,"props":941,"children":942},{"style":794},[943],{"type":515,"value":881},{"type":510,"tag":552,"props":945,"children":946},{"style":745},[947],{"type":515,"value":948}," s",{"type":510,"tag":552,"props":950,"children":951},{"style":717},[952],{"type":515,"value":808},{"type":510,"tag":552,"props":954,"children":956},{"style":955},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[957],{"type":515,"value":958}," \"\"",{"type":510,"tag":552,"props":960,"children":961},{"style":717},[962],{"type":515,"value":872},{"type":510,"tag":552,"props":964,"children":966},{"class":554,"line":965},10,[967],{"type":510,"tag":552,"props":968,"children":970},{"emptyLinePlaceholder":969},true,[971],{"type":515,"value":972},"\n",{"type":510,"tag":552,"props":974,"children":976},{"class":554,"line":975},11,[977,982,986,991,996,1000,1004],{"type":510,"tag":552,"props":978,"children":979},{"style":723},[980],{"type":515,"value":981},"  while",{"type":510,"tag":552,"props":983,"children":984},{"style":717},[985],{"type":515,"value":818},{"type":510,"tag":552,"props":987,"children":988},{"style":745},[989],{"type":515,"value":990},"j",{"type":510,"tag":552,"props":992,"children":993},{"style":717},[994],{"type":515,"value":995}," \u003C=",{"type":510,"tag":552,"props":997,"children":998},{"style":745},[999],{"type":515,"value":847},{"type":510,"tag":552,"props":1001,"children":1002},{"style":717},[1003],{"type":515,"value":828},{"type":510,"tag":552,"props":1005,"children":1006},{"style":717},[1007],{"type":515,"value":833},{"type":510,"tag":552,"props":1009,"children":1011},{"class":554,"line":1010},12,[1012,1017,1021,1025,1030,1035,1040,1045,1049,1053,1057,1062],{"type":510,"tag":552,"props":1013,"children":1014},{"style":723},[1015],{"type":515,"value":1016},"    if",{"type":510,"tag":552,"props":1018,"children":1019},{"style":717},[1020],{"type":515,"value":818},{"type":510,"tag":552,"props":1022,"children":1023},{"style":745},[1024],{"type":515,"value":823},{"type":510,"tag":552,"props":1026,"children":1027},{"style":717},[1028],{"type":515,"value":1029},"[",{"type":510,"tag":552,"props":1031,"children":1032},{"style":745},[1033],{"type":515,"value":1034},"i",{"type":510,"tag":552,"props":1036,"children":1037},{"style":717},[1038],{"type":515,"value":1039},"]",{"type":510,"tag":552,"props":1041,"children":1042},{"style":794},[1043],{"type":515,"value":1044}," !==",{"type":510,"tag":552,"props":1046,"children":1047},{"style":745},[1048],{"type":515,"value":856},{"type":510,"tag":552,"props":1050,"children":1051},{"style":717},[1052],{"type":515,"value":1029},{"type":510,"tag":552,"props":1054,"children":1055},{"style":745},[1056],{"type":515,"value":990},{"type":510,"tag":552,"props":1058,"children":1059},{"style":717},[1060],{"type":515,"value":1061},"])",{"type":510,"tag":552,"props":1063,"children":1064},{"style":717},[1065],{"type":515,"value":833},{"type":510,"tag":552,"props":1067,"children":1069},{"class":554,"line":1068},13,[1070,1075,1080,1084,1089,1093,1098,1102,1107,1112,1117,1122,1126,1130,1134,1139,1144,1149,1153,1157,1162,1167,1171,1175,1179],{"type":510,"tag":552,"props":1071,"children":1072},{"style":745},[1073],{"type":515,"value":1074},"      s",{"type":510,"tag":552,"props":1076,"children":1077},{"style":794},[1078],{"type":515,"value":1079}," +=",{"type":510,"tag":552,"props":1081,"children":1082},{"style":745},[1083],{"type":515,"value":913},{"type":510,"tag":552,"props":1085,"children":1086},{"style":794},[1087],{"type":515,"value":1088}," -",{"type":510,"tag":552,"props":1090,"children":1091},{"style":745},[1092],{"type":515,"value":886},{"type":510,"tag":552,"props":1094,"children":1095},{"style":717},[1096],{"type":515,"value":1097}," >",{"type":510,"tag":552,"props":1099,"children":1100},{"style":893},[1101],{"type":515,"value":931},{"type":510,"tag":552,"props":1103,"children":1104},{"style":794},[1105],{"type":515,"value":1106}," ?",{"type":510,"tag":552,"props":1108,"children":1109},{"style":955},[1110],{"type":515,"value":1111}," `",{"type":510,"tag":552,"props":1113,"children":1114},{"style":717},[1115],{"type":515,"value":1116},"${",{"type":510,"tag":552,"props":1118,"children":1120},{"style":1119},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1121],{"type":515,"value":823},{"type":510,"tag":552,"props":1123,"children":1124},{"style":717},[1125],{"type":515,"value":1029},{"type":510,"tag":552,"props":1127,"children":1128},{"style":1119},[1129],{"type":515,"value":1034},{"type":510,"tag":552,"props":1131,"children":1132},{"style":717},[1133],{"type":515,"value":1039},{"type":510,"tag":552,"props":1135,"children":1136},{"style":717},[1137],{"type":515,"value":1138},"}${",{"type":510,"tag":552,"props":1140,"children":1141},{"style":1119},[1142],{"type":515,"value":1143},"j ",{"type":510,"tag":552,"props":1145,"children":1146},{"style":794},[1147],{"type":515,"value":1148},"-",{"type":510,"tag":552,"props":1150,"children":1151},{"style":1119},[1152],{"type":515,"value":886},{"type":510,"tag":552,"props":1154,"children":1155},{"style":717},[1156],{"type":515,"value":742},{"type":510,"tag":552,"props":1158,"children":1159},{"style":955},[1160],{"type":515,"value":1161},"`",{"type":510,"tag":552,"props":1163,"children":1164},{"style":794},[1165],{"type":515,"value":1166}," :",{"type":510,"tag":552,"props":1168,"children":1169},{"style":745},[1170],{"type":515,"value":856},{"type":510,"tag":552,"props":1172,"children":1173},{"style":717},[1174],{"type":515,"value":1029},{"type":510,"tag":552,"props":1176,"children":1177},{"style":745},[1178],{"type":515,"value":1034},{"type":510,"tag":552,"props":1180,"children":1181},{"style":717},[1182],{"type":515,"value":1183},"];\n",{"type":510,"tag":552,"props":1185,"children":1187},{"class":554,"line":1186},14,[1188,1193,1197,1201],{"type":510,"tag":552,"props":1189,"children":1190},{"style":745},[1191],{"type":515,"value":1192},"      i",{"type":510,"tag":552,"props":1194,"children":1195},{"style":717},[1196],{"type":515,"value":808},{"type":510,"tag":552,"props":1198,"children":1199},{"style":745},[1200],{"type":515,"value":913},{"type":510,"tag":552,"props":1202,"children":1203},{"style":717},[1204],{"type":515,"value":872},{"type":510,"tag":552,"props":1206,"children":1208},{"class":554,"line":1207},15,[1209],{"type":510,"tag":552,"props":1210,"children":1211},{"style":717},[1212],{"type":515,"value":1213},"    }\n",{"type":510,"tag":552,"props":1215,"children":1217},{"class":554,"line":1216},16,[1218,1223,1228],{"type":510,"tag":552,"props":1219,"children":1220},{"style":745},[1221],{"type":515,"value":1222},"    j",{"type":510,"tag":552,"props":1224,"children":1225},{"style":794},[1226],{"type":515,"value":1227},"++",{"type":510,"tag":552,"props":1229,"children":1230},{"style":717},[1231],{"type":515,"value":872},{"type":510,"tag":552,"props":1233,"children":1235},{"class":554,"line":1234},17,[1236],{"type":510,"tag":552,"props":1237,"children":1238},{"style":717},[1239],{"type":515,"value":1240},"  }\n",{"type":510,"tag":552,"props":1242,"children":1244},{"class":554,"line":1243},18,[1245],{"type":510,"tag":552,"props":1246,"children":1247},{"emptyLinePlaceholder":969},[1248],{"type":515,"value":972},{"type":510,"tag":552,"props":1250,"children":1252},{"class":554,"line":1251},19,[1253,1258,1262,1267,1271,1275,1279,1284,1288,1293,1297,1301,1305,1309,1313,1317,1321],{"type":510,"tag":552,"props":1254,"children":1255},{"style":723},[1256],{"type":515,"value":1257},"  for",{"type":510,"tag":552,"props":1259,"children":1260},{"style":717},[1261],{"type":515,"value":818},{"type":510,"tag":552,"props":1263,"children":1264},{"style":794},[1265],{"type":515,"value":1266},"let",{"type":510,"tag":552,"props":1268,"children":1269},{"style":745},[1270],{"type":515,"value":886},{"type":510,"tag":552,"props":1272,"children":1273},{"style":717},[1274],{"type":515,"value":808},{"type":510,"tag":552,"props":1276,"children":1277},{"style":893},[1278],{"type":515,"value":896},{"type":510,"tag":552,"props":1280,"children":1281},{"style":717},[1282],{"type":515,"value":1283},";",{"type":510,"tag":552,"props":1285,"children":1286},{"style":745},[1287],{"type":515,"value":886},{"type":510,"tag":552,"props":1289,"children":1290},{"style":717},[1291],{"type":515,"value":1292}," \u003C",{"type":510,"tag":552,"props":1294,"children":1295},{"style":745},[1296],{"type":515,"value":948},{"type":510,"tag":552,"props":1298,"children":1299},{"style":717},[1300],{"type":515,"value":861},{"type":510,"tag":552,"props":1302,"children":1303},{"style":864},[1304],{"type":515,"value":867},{"type":510,"tag":552,"props":1306,"children":1307},{"style":717},[1308],{"type":515,"value":1283},{"type":510,"tag":552,"props":1310,"children":1311},{"style":745},[1312],{"type":515,"value":886},{"type":510,"tag":552,"props":1314,"children":1315},{"style":794},[1316],{"type":515,"value":1227},{"type":510,"tag":552,"props":1318,"children":1319},{"style":717},[1320],{"type":515,"value":828},{"type":510,"tag":552,"props":1322,"children":1323},{"style":717},[1324],{"type":515,"value":833},{"type":510,"tag":552,"props":1326,"children":1328},{"class":554,"line":1327},20,[1329,1334,1338,1342,1346,1350,1354,1358,1362],{"type":510,"tag":552,"props":1330,"children":1331},{"style":745},[1332],{"type":515,"value":1333},"    chars",{"type":510,"tag":552,"props":1335,"children":1336},{"style":717},[1337],{"type":515,"value":1029},{"type":510,"tag":552,"props":1339,"children":1340},{"style":745},[1341],{"type":515,"value":1034},{"type":510,"tag":552,"props":1343,"children":1344},{"style":717},[1345],{"type":515,"value":1039},{"type":510,"tag":552,"props":1347,"children":1348},{"style":717},[1349],{"type":515,"value":808},{"type":510,"tag":552,"props":1351,"children":1352},{"style":745},[1353],{"type":515,"value":948},{"type":510,"tag":552,"props":1355,"children":1356},{"style":717},[1357],{"type":515,"value":1029},{"type":510,"tag":552,"props":1359,"children":1360},{"style":745},[1361],{"type":515,"value":1034},{"type":510,"tag":552,"props":1363,"children":1364},{"style":717},[1365],{"type":515,"value":1183},{"type":510,"tag":552,"props":1367,"children":1369},{"class":554,"line":1368},21,[1370],{"type":510,"tag":552,"props":1371,"children":1372},{"style":717},[1373],{"type":515,"value":1240},{"type":510,"tag":552,"props":1375,"children":1377},{"class":554,"line":1376},22,[1378],{"type":510,"tag":552,"props":1379,"children":1380},{"emptyLinePlaceholder":969},[1381],{"type":515,"value":972},{"type":510,"tag":552,"props":1383,"children":1385},{"class":554,"line":1384},23,[1386,1391,1395,1399,1403],{"type":510,"tag":552,"props":1387,"children":1388},{"style":723},[1389],{"type":515,"value":1390},"  return",{"type":510,"tag":552,"props":1392,"children":1393},{"style":745},[1394],{"type":515,"value":948},{"type":510,"tag":552,"props":1396,"children":1397},{"style":717},[1398],{"type":515,"value":861},{"type":510,"tag":552,"props":1400,"children":1401},{"style":864},[1402],{"type":515,"value":867},{"type":510,"tag":552,"props":1404,"children":1405},{"style":717},[1406],{"type":515,"value":872},{"type":510,"tag":552,"props":1408,"children":1410},{"class":554,"line":1409},24,[1411],{"type":510,"tag":552,"props":1412,"children":1413},{"style":717},[1414],{"type":515,"value":1415},"};\n",{"type":510,"tag":1417,"props":1418,"children":1419},"style",{},[1420],{"type":515,"value":1421},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":503,"searchDepth":790,"depth":790,"links":1423},[1424,1425],{"id":675,"depth":564,"text":675},{"id":680,"depth":564,"text":680,"children":1426},[1427],{"id":686,"depth":573,"text":686},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1434,1436],{"_path":234,"title":233,"description":1435},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":240,"title":239,"description":1437},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1714054339495]