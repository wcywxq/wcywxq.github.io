[{"data":1,"prerenderedAt":1370},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":460,"/algorithm/leetcode/major/string-compression-surround":1365},[4,263,292,437,445],{"title":5,"_path":6,"children":7,"icon":262},"算法","/algorithm",[8,25],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27,"children":28},"Leetcode 力扣","/algorithm/leetcode",[29,35,48],{"title":30,"_path":31,"children":32},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[33],{"title":34,"_path":31},"刷题索引",{"title":36,"_path":37,"children":38},"剑指 offer","/algorithm/leetcode/sword-ofter",[39,42,45],{"title":40,"_path":41},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":43,"_path":44},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":46,"_path":47},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":49,"_path":50,"children":51},"主题单","/algorithm/leetcode/major",[52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259],{"title":53,"_path":54},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":56,"_path":57},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":59,"_path":60},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":62,"_path":63},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":65,"_path":66},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":68,"_path":69},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":71,"_path":72},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":74,"_path":75},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":77,"_path":78},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":80,"_path":81},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":83,"_path":84},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":86,"_path":87},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":89,"_path":90},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":92,"_path":93},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":95,"_path":96},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":98,"_path":99},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":101,"_path":102},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":104,"_path":105},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":107,"_path":108},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":110,"_path":111},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":113,"_path":114},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":116,"_path":117},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":119,"_path":120},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":122,"_path":123},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":125,"_path":126},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":128,"_path":129},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":131,"_path":132},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":134,"_path":135},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":137,"_path":138},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":140,"_path":141},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":143,"_path":144},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":146,"_path":147},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":149,"_path":150},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":152,"_path":153},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":155,"_path":156},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":158,"_path":159},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":161,"_path":162},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":164,"_path":165},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":167,"_path":168},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":170,"_path":171},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":173,"_path":174},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":176,"_path":177},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":179,"_path":180},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":182,"_path":183},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":185,"_path":186},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":188,"_path":189},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":191,"_path":192},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":194,"_path":195},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":197,"_path":198},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":200,"_path":201},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":203,"_path":204},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":206,"_path":207},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":209,"_path":210},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":212,"_path":213},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":215,"_path":216},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":218,"_path":219},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":221,"_path":222},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":224,"_path":225},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":227,"_path":228},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":230,"_path":231},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":233,"_path":234},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":236,"_path":237},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":239,"_path":240},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":242,"_path":243},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":245,"_path":246},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":248,"_path":249},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":251,"_path":252},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":254,"_path":255},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":257,"_path":258},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":260,"_path":261},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":264,"_path":265,"children":266,"icon":291},"前端八股文","/frontend-endorsement",[267,278],{"title":268,"_path":269,"children":270},"构建工具","/frontend-endorsement/build-tools",[271],{"title":272,"_path":273,"children":274},"Webpack","/frontend-endorsement/build-tools/webpack",[275],{"title":276,"_path":277},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":279,"_path":280,"children":281},"Html","/frontend-endorsement/html",[282,285,288],{"title":283,"_path":284},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":286,"_path":287},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":289,"_path":290},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":293,"_path":294,"children":295,"icon":436},"前端代码考核","/frontend-code-assessment",[296,345,429],{"title":297,"_path":298,"children":299},"源码实现","/frontend-code-assessment/source",[300,325,338],{"title":301,"_path":302,"children":303},"原生 api","/frontend-code-assessment/source/native-api",[304,307,310,313,316,319,322],{"title":305,"_path":306},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":308,"_path":309},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":311,"_path":312},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":314,"_path":315},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":317,"_path":318},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":320,"_path":321},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":323,"_path":324},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":326,"_path":327,"children":328},"数组 Array","/frontend-code-assessment/source/array",[329,332,335],{"title":330,"_path":331},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":333,"_path":334},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":336,"_path":337},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":339,"_path":340,"children":341},"字符串 String","/frontend-code-assessment/source/string",[342],{"title":343,"_path":344},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":346,"_path":347,"children":348},"业务场景","/frontend-code-assessment/scene",[349,371,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426],{"title":350,"_path":351,"children":352},"Promise","/frontend-code-assessment/scene/promise",[353,356,359,362,365,368],{"title":354,"_path":355},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":357,"_path":358},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":360,"_path":361},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":363,"_path":364},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":366,"_path":367},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":369,"_path":370},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":372,"_path":373,"children":374},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[375],{"title":376,"_path":377},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":379,"_path":380},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":382,"_path":383},"倒计时","/frontend-code-assessment/scene/countdown",{"title":385,"_path":386},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":388,"_path":389},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":391,"_path":392},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":394,"_path":395},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":397,"_path":398},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":400,"_path":401},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":403,"_path":404},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":406,"_path":407},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":409,"_path":410},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":412,"_path":413},"随机数","/frontend-code-assessment/scene/random-number",{"title":415,"_path":416},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":418,"_path":419},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":421,"_path":422},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":424,"_path":425},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":427,"_path":428},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":430,"_path":431,"children":432},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[433],{"title":434,"_path":435},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":438,"_path":439,"children":440,"icon":444},"项目","/pro",[441],{"title":442,"_path":443},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":446,"_path":447,"children":448,"icon":459},"后端语言","/backend-languages",[449],{"title":450,"_path":451,"children":452},"Python","/backend-languages/python",[453,456],{"title":454,"_path":455},"基础","/backend-languages/python/base",{"title":457,"_path":458},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":231,"_dir":461,"_draft":462,"_partial":462,"_locale":463,"title":230,"description":464,"url":465,"body":466,"_type":1360,"_id":1361,"_source":1362,"_file":1363,"_extension":1364},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":467,"children":468,"toc":1354},"root",[469,476,481,486,491,496,501,540,545,576,581,612,617,632,638,643,649,1348],{"type":470,"tag":471,"props":472,"children":473},"element","p",{},[474],{"type":475,"value":464},"text",{"type":470,"tag":471,"props":477,"children":478},{},[479],{"type":475,"value":480},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":470,"tag":471,"props":482,"children":483},{},[484],{"type":475,"value":485},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":470,"tag":471,"props":487,"children":488},{},[489],{"type":475,"value":490},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":470,"tag":471,"props":492,"children":493},{},[494],{"type":475,"value":495},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":470,"tag":471,"props":497,"children":498},{},[499],{"type":475,"value":500},"示例 1：",{"type":470,"tag":502,"props":503,"children":506},"pre",{"className":504,"code":505,"language":475,"meta":463,"style":463},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[507],{"type":470,"tag":508,"props":509,"children":510},"code",{"__ignoreMap":463},[511,522,531],{"type":470,"tag":512,"props":513,"children":516},"span",{"class":514,"line":515},"line",1,[517],{"type":470,"tag":512,"props":518,"children":519},{},[520],{"type":475,"value":521},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":470,"tag":512,"props":523,"children":525},{"class":514,"line":524},2,[526],{"type":470,"tag":512,"props":527,"children":528},{},[529],{"type":475,"value":530},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":470,"tag":512,"props":532,"children":534},{"class":514,"line":533},3,[535],{"type":470,"tag":512,"props":536,"children":537},{},[538],{"type":475,"value":539},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":470,"tag":471,"props":541,"children":542},{},[543],{"type":475,"value":544},"示例 2：",{"type":470,"tag":502,"props":546,"children":548},{"className":504,"code":547,"language":475,"meta":463,"style":463},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[549],{"type":470,"tag":508,"props":550,"children":551},{"__ignoreMap":463},[552,560,568],{"type":470,"tag":512,"props":553,"children":554},{"class":514,"line":515},[555],{"type":470,"tag":512,"props":556,"children":557},{},[558],{"type":475,"value":559},"输入：chars = [\"a\"]\n",{"type":470,"tag":512,"props":561,"children":562},{"class":514,"line":524},[563],{"type":470,"tag":512,"props":564,"children":565},{},[566],{"type":475,"value":567},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":470,"tag":512,"props":569,"children":570},{"class":514,"line":533},[571],{"type":470,"tag":512,"props":572,"children":573},{},[574],{"type":475,"value":575},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":470,"tag":471,"props":577,"children":578},{},[579],{"type":475,"value":580},"示例 3：",{"type":470,"tag":502,"props":582,"children":584},{"className":504,"code":583,"language":475,"meta":463,"style":463},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[585],{"type":470,"tag":508,"props":586,"children":587},{"__ignoreMap":463},[588,596,604],{"type":470,"tag":512,"props":589,"children":590},{"class":514,"line":515},[591],{"type":470,"tag":512,"props":592,"children":593},{},[594],{"type":475,"value":595},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":470,"tag":512,"props":597,"children":598},{"class":514,"line":524},[599],{"type":470,"tag":512,"props":600,"children":601},{},[602],{"type":475,"value":603},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":470,"tag":512,"props":605,"children":606},{"class":514,"line":533},[607],{"type":470,"tag":512,"props":608,"children":609},{},[610],{"type":475,"value":611},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":470,"tag":471,"props":613,"children":614},{},[615],{"type":475,"value":616},"提示：",{"type":470,"tag":618,"props":619,"children":620},"ul",{},[621,627],{"type":470,"tag":622,"props":623,"children":624},"li",{},[625],{"type":475,"value":626},"1 \u003C= chars.length \u003C= 2000",{"type":470,"tag":622,"props":628,"children":629},{},[630],{"type":475,"value":631},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":470,"tag":633,"props":634,"children":636},"h2",{"id":635},"解题思路",[637],{"type":475,"value":635},{"type":470,"tag":633,"props":639,"children":641},{"id":640},"实现",[642],{"type":475,"value":640},{"type":470,"tag":644,"props":645,"children":647},"h3",{"id":646},"双指针",[648],{"type":475,"value":646},{"type":470,"tag":502,"props":650,"children":654},{"className":651,"code":652,"language":653,"meta":463,"style":463},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[655],{"type":470,"tag":508,"props":656,"children":657},{"__ignoreMap":463},[658,667,693,710,719,763,804,832,867,894,904,936,990,1112,1133,1142,1160,1169,1177,1249,1295,1303,1311,1336],{"type":470,"tag":512,"props":659,"children":660},{"class":514,"line":515},[661],{"type":470,"tag":512,"props":662,"children":664},{"style":663},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[665],{"type":475,"value":666},"/**\n",{"type":470,"tag":512,"props":668,"children":669},{"class":514,"line":524},[670,675,681,687],{"type":470,"tag":512,"props":671,"children":672},{"style":663},[673],{"type":475,"value":674}," * ",{"type":470,"tag":512,"props":676,"children":678},{"style":677},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[679],{"type":475,"value":680},"@param",{"type":470,"tag":512,"props":682,"children":684},{"style":683},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[685],{"type":475,"value":686}," {character[]}",{"type":470,"tag":512,"props":688,"children":690},{"style":689},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[691],{"type":475,"value":692}," chars\n",{"type":470,"tag":512,"props":694,"children":695},{"class":514,"line":533},[696,700,705],{"type":470,"tag":512,"props":697,"children":698},{"style":663},[699],{"type":475,"value":674},{"type":470,"tag":512,"props":701,"children":702},{"style":677},[703],{"type":475,"value":704},"@return",{"type":470,"tag":512,"props":706,"children":707},{"style":683},[708],{"type":475,"value":709}," {number}\n",{"type":470,"tag":512,"props":711,"children":713},{"class":514,"line":712},4,[714],{"type":470,"tag":512,"props":715,"children":716},{"style":663},[717],{"type":475,"value":718}," */\n",{"type":470,"tag":512,"props":720,"children":722},{"class":514,"line":721},5,[723,729,735,741,746,752,758],{"type":470,"tag":512,"props":724,"children":726},{"style":725},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[727],{"type":475,"value":728},"var",{"type":470,"tag":512,"props":730,"children":732},{"style":731},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[733],{"type":475,"value":734}," compress",{"type":470,"tag":512,"props":736,"children":738},{"style":737},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[739],{"type":475,"value":740}," =",{"type":470,"tag":512,"props":742,"children":743},{"style":725},[744],{"type":475,"value":745}," function",{"type":470,"tag":512,"props":747,"children":749},{"style":748},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[750],{"type":475,"value":751}," (",{"type":470,"tag":512,"props":753,"children":755},{"style":754},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[756],{"type":475,"value":757},"chars",{"type":470,"tag":512,"props":759,"children":760},{"style":748},[761],{"type":475,"value":762},") {\n",{"type":470,"tag":512,"props":764,"children":766},{"class":514,"line":765},6,[767,772,778,782,787,793,798],{"type":470,"tag":512,"props":768,"children":769},{"style":725},[770],{"type":475,"value":771},"  const",{"type":470,"tag":512,"props":773,"children":775},{"style":774},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[776],{"type":475,"value":777}," len",{"type":470,"tag":512,"props":779,"children":780},{"style":737},[781],{"type":475,"value":740},{"type":470,"tag":512,"props":783,"children":784},{"style":774},[785],{"type":475,"value":786}," chars",{"type":470,"tag":512,"props":788,"children":790},{"style":789},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[791],{"type":475,"value":792},".",{"type":470,"tag":512,"props":794,"children":795},{"style":748},[796],{"type":475,"value":797},"length",{"type":470,"tag":512,"props":799,"children":801},{"style":800},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[802],{"type":475,"value":803},";\n",{"type":470,"tag":512,"props":805,"children":807},{"class":514,"line":806},7,[808,813,818,822,828],{"type":470,"tag":512,"props":809,"children":810},{"style":725},[811],{"type":475,"value":812},"  let",{"type":470,"tag":512,"props":814,"children":815},{"style":774},[816],{"type":475,"value":817}," i",{"type":470,"tag":512,"props":819,"children":820},{"style":737},[821],{"type":475,"value":740},{"type":470,"tag":512,"props":823,"children":825},{"style":824},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[826],{"type":475,"value":827}," 0",{"type":470,"tag":512,"props":829,"children":830},{"style":800},[831],{"type":475,"value":803},{"type":470,"tag":512,"props":833,"children":835},{"class":514,"line":834},8,[836,840,845,849,853,858,863],{"type":470,"tag":512,"props":837,"children":838},{"style":725},[839],{"type":475,"value":812},{"type":470,"tag":512,"props":841,"children":842},{"style":774},[843],{"type":475,"value":844}," j",{"type":470,"tag":512,"props":846,"children":847},{"style":737},[848],{"type":475,"value":740},{"type":470,"tag":512,"props":850,"children":851},{"style":774},[852],{"type":475,"value":817},{"type":470,"tag":512,"props":854,"children":855},{"style":737},[856],{"type":475,"value":857}," +",{"type":470,"tag":512,"props":859,"children":860},{"style":824},[861],{"type":475,"value":862}," 1",{"type":470,"tag":512,"props":864,"children":865},{"style":800},[866],{"type":475,"value":803},{"type":470,"tag":512,"props":868,"children":870},{"class":514,"line":869},9,[871,875,880,884,890],{"type":470,"tag":512,"props":872,"children":873},{"style":725},[874],{"type":475,"value":812},{"type":470,"tag":512,"props":876,"children":877},{"style":774},[878],{"type":475,"value":879}," s",{"type":470,"tag":512,"props":881,"children":882},{"style":737},[883],{"type":475,"value":740},{"type":470,"tag":512,"props":885,"children":887},{"style":886},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[888],{"type":475,"value":889}," \"\"",{"type":470,"tag":512,"props":891,"children":892},{"style":800},[893],{"type":475,"value":803},{"type":470,"tag":512,"props":895,"children":897},{"class":514,"line":896},10,[898],{"type":470,"tag":512,"props":899,"children":901},{"emptyLinePlaceholder":900},true,[902],{"type":475,"value":903},"\n",{"type":470,"tag":512,"props":905,"children":907},{"class":514,"line":906},11,[908,914,918,923,928,932],{"type":470,"tag":512,"props":909,"children":911},{"style":910},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[912],{"type":475,"value":913},"  while",{"type":470,"tag":512,"props":915,"children":916},{"style":748},[917],{"type":475,"value":751},{"type":470,"tag":512,"props":919,"children":920},{"style":774},[921],{"type":475,"value":922},"j",{"type":470,"tag":512,"props":924,"children":925},{"style":737},[926],{"type":475,"value":927}," \u003C=",{"type":470,"tag":512,"props":929,"children":930},{"style":774},[931],{"type":475,"value":777},{"type":470,"tag":512,"props":933,"children":934},{"style":748},[935],{"type":475,"value":762},{"type":470,"tag":512,"props":937,"children":939},{"class":514,"line":938},12,[940,945,949,953,958,963,968,973,977,981,985],{"type":470,"tag":512,"props":941,"children":942},{"style":910},[943],{"type":475,"value":944},"    if",{"type":470,"tag":512,"props":946,"children":947},{"style":748},[948],{"type":475,"value":751},{"type":470,"tag":512,"props":950,"children":951},{"style":774},[952],{"type":475,"value":757},{"type":470,"tag":512,"props":954,"children":955},{"style":748},[956],{"type":475,"value":957},"[",{"type":470,"tag":512,"props":959,"children":960},{"style":774},[961],{"type":475,"value":962},"i",{"type":470,"tag":512,"props":964,"children":965},{"style":748},[966],{"type":475,"value":967},"] ",{"type":470,"tag":512,"props":969,"children":970},{"style":737},[971],{"type":475,"value":972},"!==",{"type":470,"tag":512,"props":974,"children":975},{"style":774},[976],{"type":475,"value":786},{"type":470,"tag":512,"props":978,"children":979},{"style":748},[980],{"type":475,"value":957},{"type":470,"tag":512,"props":982,"children":983},{"style":774},[984],{"type":475,"value":922},{"type":470,"tag":512,"props":986,"children":987},{"style":748},[988],{"type":475,"value":989},"]) {\n",{"type":470,"tag":512,"props":991,"children":993},{"class":514,"line":992},13,[994,999,1004,1008,1013,1017,1022,1026,1031,1036,1042,1046,1051,1055,1060,1065,1069,1073,1077,1082,1087,1092,1096,1100,1104,1108],{"type":470,"tag":512,"props":995,"children":996},{"style":774},[997],{"type":475,"value":998},"      s",{"type":470,"tag":512,"props":1000,"children":1001},{"style":737},[1002],{"type":475,"value":1003}," +=",{"type":470,"tag":512,"props":1005,"children":1006},{"style":774},[1007],{"type":475,"value":844},{"type":470,"tag":512,"props":1009,"children":1010},{"style":737},[1011],{"type":475,"value":1012}," -",{"type":470,"tag":512,"props":1014,"children":1015},{"style":774},[1016],{"type":475,"value":817},{"type":470,"tag":512,"props":1018,"children":1019},{"style":737},[1020],{"type":475,"value":1021}," >",{"type":470,"tag":512,"props":1023,"children":1024},{"style":824},[1025],{"type":475,"value":862},{"type":470,"tag":512,"props":1027,"children":1028},{"style":737},[1029],{"type":475,"value":1030}," ?",{"type":470,"tag":512,"props":1032,"children":1033},{"style":886},[1034],{"type":475,"value":1035}," `",{"type":470,"tag":512,"props":1037,"children":1039},{"style":1038},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#FF8F40",[1040],{"type":475,"value":1041},"${",{"type":470,"tag":512,"props":1043,"children":1044},{"style":774},[1045],{"type":475,"value":757},{"type":470,"tag":512,"props":1047,"children":1049},{"style":1048},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#BFBDB6",[1050],{"type":475,"value":957},{"type":470,"tag":512,"props":1052,"children":1053},{"style":774},[1054],{"type":475,"value":962},{"type":470,"tag":512,"props":1056,"children":1057},{"style":1048},[1058],{"type":475,"value":1059},"]",{"type":470,"tag":512,"props":1061,"children":1062},{"style":1038},[1063],{"type":475,"value":1064},"}${",{"type":470,"tag":512,"props":1066,"children":1067},{"style":774},[1068],{"type":475,"value":922},{"type":470,"tag":512,"props":1070,"children":1071},{"style":737},[1072],{"type":475,"value":1012},{"type":470,"tag":512,"props":1074,"children":1075},{"style":774},[1076],{"type":475,"value":817},{"type":470,"tag":512,"props":1078,"children":1079},{"style":1038},[1080],{"type":475,"value":1081},"}",{"type":470,"tag":512,"props":1083,"children":1084},{"style":886},[1085],{"type":475,"value":1086},"`",{"type":470,"tag":512,"props":1088,"children":1089},{"style":737},[1090],{"type":475,"value":1091}," :",{"type":470,"tag":512,"props":1093,"children":1094},{"style":774},[1095],{"type":475,"value":786},{"type":470,"tag":512,"props":1097,"children":1098},{"style":748},[1099],{"type":475,"value":957},{"type":470,"tag":512,"props":1101,"children":1102},{"style":774},[1103],{"type":475,"value":962},{"type":470,"tag":512,"props":1105,"children":1106},{"style":748},[1107],{"type":475,"value":1059},{"type":470,"tag":512,"props":1109,"children":1110},{"style":800},[1111],{"type":475,"value":803},{"type":470,"tag":512,"props":1113,"children":1115},{"class":514,"line":1114},14,[1116,1121,1125,1129],{"type":470,"tag":512,"props":1117,"children":1118},{"style":774},[1119],{"type":475,"value":1120},"      i",{"type":470,"tag":512,"props":1122,"children":1123},{"style":737},[1124],{"type":475,"value":740},{"type":470,"tag":512,"props":1126,"children":1127},{"style":774},[1128],{"type":475,"value":844},{"type":470,"tag":512,"props":1130,"children":1131},{"style":800},[1132],{"type":475,"value":803},{"type":470,"tag":512,"props":1134,"children":1136},{"class":514,"line":1135},15,[1137],{"type":470,"tag":512,"props":1138,"children":1139},{"style":748},[1140],{"type":475,"value":1141},"    }\n",{"type":470,"tag":512,"props":1143,"children":1145},{"class":514,"line":1144},16,[1146,1151,1156],{"type":470,"tag":512,"props":1147,"children":1148},{"style":774},[1149],{"type":475,"value":1150},"    j",{"type":470,"tag":512,"props":1152,"children":1153},{"style":737},[1154],{"type":475,"value":1155},"++",{"type":470,"tag":512,"props":1157,"children":1158},{"style":800},[1159],{"type":475,"value":803},{"type":470,"tag":512,"props":1161,"children":1163},{"class":514,"line":1162},17,[1164],{"type":470,"tag":512,"props":1165,"children":1166},{"style":748},[1167],{"type":475,"value":1168},"  }\n",{"type":470,"tag":512,"props":1170,"children":1172},{"class":514,"line":1171},18,[1173],{"type":470,"tag":512,"props":1174,"children":1175},{"emptyLinePlaceholder":900},[1176],{"type":475,"value":903},{"type":470,"tag":512,"props":1178,"children":1180},{"class":514,"line":1179},19,[1181,1186,1190,1195,1199,1203,1207,1212,1216,1221,1225,1229,1233,1237,1241,1245],{"type":470,"tag":512,"props":1182,"children":1183},{"style":910},[1184],{"type":475,"value":1185},"  for",{"type":470,"tag":512,"props":1187,"children":1188},{"style":748},[1189],{"type":475,"value":751},{"type":470,"tag":512,"props":1191,"children":1192},{"style":725},[1193],{"type":475,"value":1194},"let",{"type":470,"tag":512,"props":1196,"children":1197},{"style":774},[1198],{"type":475,"value":817},{"type":470,"tag":512,"props":1200,"children":1201},{"style":737},[1202],{"type":475,"value":740},{"type":470,"tag":512,"props":1204,"children":1205},{"style":824},[1206],{"type":475,"value":827},{"type":470,"tag":512,"props":1208,"children":1209},{"style":800},[1210],{"type":475,"value":1211},";",{"type":470,"tag":512,"props":1213,"children":1214},{"style":774},[1215],{"type":475,"value":817},{"type":470,"tag":512,"props":1217,"children":1218},{"style":737},[1219],{"type":475,"value":1220}," \u003C",{"type":470,"tag":512,"props":1222,"children":1223},{"style":774},[1224],{"type":475,"value":879},{"type":470,"tag":512,"props":1226,"children":1227},{"style":789},[1228],{"type":475,"value":792},{"type":470,"tag":512,"props":1230,"children":1231},{"style":748},[1232],{"type":475,"value":797},{"type":470,"tag":512,"props":1234,"children":1235},{"style":800},[1236],{"type":475,"value":1211},{"type":470,"tag":512,"props":1238,"children":1239},{"style":774},[1240],{"type":475,"value":817},{"type":470,"tag":512,"props":1242,"children":1243},{"style":737},[1244],{"type":475,"value":1155},{"type":470,"tag":512,"props":1246,"children":1247},{"style":748},[1248],{"type":475,"value":762},{"type":470,"tag":512,"props":1250,"children":1252},{"class":514,"line":1251},20,[1253,1258,1262,1266,1270,1275,1279,1283,1287,1291],{"type":470,"tag":512,"props":1254,"children":1255},{"style":774},[1256],{"type":475,"value":1257},"    chars",{"type":470,"tag":512,"props":1259,"children":1260},{"style":748},[1261],{"type":475,"value":957},{"type":470,"tag":512,"props":1263,"children":1264},{"style":774},[1265],{"type":475,"value":962},{"type":470,"tag":512,"props":1267,"children":1268},{"style":748},[1269],{"type":475,"value":967},{"type":470,"tag":512,"props":1271,"children":1272},{"style":737},[1273],{"type":475,"value":1274},"=",{"type":470,"tag":512,"props":1276,"children":1277},{"style":774},[1278],{"type":475,"value":879},{"type":470,"tag":512,"props":1280,"children":1281},{"style":748},[1282],{"type":475,"value":957},{"type":470,"tag":512,"props":1284,"children":1285},{"style":774},[1286],{"type":475,"value":962},{"type":470,"tag":512,"props":1288,"children":1289},{"style":748},[1290],{"type":475,"value":1059},{"type":470,"tag":512,"props":1292,"children":1293},{"style":800},[1294],{"type":475,"value":803},{"type":470,"tag":512,"props":1296,"children":1298},{"class":514,"line":1297},21,[1299],{"type":470,"tag":512,"props":1300,"children":1301},{"style":748},[1302],{"type":475,"value":1168},{"type":470,"tag":512,"props":1304,"children":1306},{"class":514,"line":1305},22,[1307],{"type":470,"tag":512,"props":1308,"children":1309},{"emptyLinePlaceholder":900},[1310],{"type":475,"value":903},{"type":470,"tag":512,"props":1312,"children":1314},{"class":514,"line":1313},23,[1315,1320,1324,1328,1332],{"type":470,"tag":512,"props":1316,"children":1317},{"style":910},[1318],{"type":475,"value":1319},"  return",{"type":470,"tag":512,"props":1321,"children":1322},{"style":774},[1323],{"type":475,"value":879},{"type":470,"tag":512,"props":1325,"children":1326},{"style":789},[1327],{"type":475,"value":792},{"type":470,"tag":512,"props":1329,"children":1330},{"style":748},[1331],{"type":475,"value":797},{"type":470,"tag":512,"props":1333,"children":1334},{"style":800},[1335],{"type":475,"value":803},{"type":470,"tag":512,"props":1337,"children":1339},{"class":514,"line":1338},24,[1340,1344],{"type":470,"tag":512,"props":1341,"children":1342},{"style":748},[1343],{"type":475,"value":1081},{"type":470,"tag":512,"props":1345,"children":1346},{"style":800},[1347],{"type":475,"value":803},{"type":470,"tag":1349,"props":1350,"children":1351},"style",{},[1352],{"type":475,"value":1353},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":463,"searchDepth":721,"depth":721,"links":1355},[1356,1357],{"id":635,"depth":524,"text":635},{"id":640,"depth":524,"text":640,"children":1358},[1359],{"id":646,"depth":533,"text":646},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1366,1368],{"_path":228,"title":227,"description":1367},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":234,"title":233,"description":1369},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1713626405187]