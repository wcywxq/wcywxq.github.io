[{"data":1,"prerenderedAt":1478},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":540,"/algorithm/leetcode/major/string-compression-surround":1473},[4,269,298,508,516,525],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":507},"代码考核","/code-assessment",[302,401,500],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,334,350,378,385,392,395,398],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333},"extends","/code-assessment/source/native-api/extends",{"title":335,"_path":336,"children":337},"函数 Function","/code-assessment/source/function",[338,341,344,347],{"title":339,"_path":340},"函数防抖","/code-assessment/source/function/debounce",{"title":342,"_path":343},"函数节流","/code-assessment/source/function/throttle",{"title":345,"_path":346},"函数柯理化","/code-assessment/source/function/curry",{"title":348,"_path":349},"函数睡眠","/code-assessment/source/function/sleep",{"title":351,"_path":352,"children":353},"数组 Array","/code-assessment/source/array",[354,357,360,363,366,369,372,375],{"title":355,"_path":356},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":358,"_path":359},"数组扁平化","/code-assessment/source/array/flat",{"title":361,"_path":362},"原型方法","/code-assessment/source/array/prototype-method",{"title":364,"_path":365},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":367,"_path":368},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":370,"_path":371},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":373,"_path":374},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":376,"_path":377},"二维数组","/code-assessment/source/array/2d-array",{"title":379,"_path":380,"children":381},"字符串 String","/code-assessment/source/string",[382],{"title":383,"_path":384},"repeat()","/code-assessment/source/string/repeat",{"title":386,"_path":387,"children":388},"集合 Set","/code-assessment/source/set",[389],{"title":390,"_path":391},"遍历集合","/code-assessment/source/set/traverse",{"title":393,"_path":394},"获取通用类型","/code-assessment/source/get-generic-type",{"title":396,"_path":397},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":399,"_path":400},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":402,"_path":403,"children":404},"业务场景","/code-assessment/scene",[405,436,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497],{"title":406,"_path":407,"children":408},"Promise","/code-assessment/scene/promise",[409,412,415,418,421,424,427,430,433],{"title":410,"_path":411},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":413,"_path":414},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":416,"_path":417},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":419,"_path":420},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":422,"_path":423},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":425,"_path":426},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":428,"_path":429},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":431,"_path":432},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":434,"_path":435},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":437,"_path":438,"children":439},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[440,443],{"title":441,"_path":442},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":444,"_path":445},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":447,"_path":448},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":450,"_path":451},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":453,"_path":454},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":456,"_path":457},"倒计时","/code-assessment/scene/countdown",{"title":459,"_path":460},"日期格式化","/code-assessment/scene/date-format",{"title":462,"_path":463},"实现前端路由","/code-assessment/scene/frontend-route",{"title":465,"_path":466},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":468,"_path":469},"lodash.get","/code-assessment/scene/lodash-get",{"title":471,"_path":472},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":474,"_path":475},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":477,"_path":478},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":480,"_path":481},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":483,"_path":484},"随机数","/code-assessment/scene/random-number",{"title":486,"_path":487},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":489,"_path":490},"sku 算法实现","/code-assessment/scene/sku",{"title":492,"_path":493},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":495,"_path":496},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":498,"_path":499},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":501,"_path":502,"children":503},"Ts 类型挑战","/code-assessment/type-challeges",[504],{"title":505,"_path":506},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":509,"_path":510,"children":511,"icon":515},"项目","/project",[512],{"title":513,"_path":514},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":517,"_path":518,"children":519,"icon":524},"设计模式","/design-mode",[520,521],{"title":517,"_path":518},{"title":522,"_path":523},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":526,"_path":527,"children":528,"icon":539},"后端语言","/backend-languages",[529],{"title":530,"_path":531,"children":532},"Python","/backend-languages/python",[533,536],{"title":534,"_path":535},"基础","/backend-languages/python/base",{"title":537,"_path":538},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":237,"_dir":541,"_draft":542,"_partial":542,"_locale":543,"title":236,"description":544,"url":545,"body":546,"_type":1468,"_id":1469,"_source":1470,"_file":1471,"_extension":1472},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":547,"children":548,"toc":1462},"root",[549,556,561,566,571,576,581,620,625,656,661,692,697,712,718,723,729,1456],{"type":550,"tag":551,"props":552,"children":553},"element","p",{},[554],{"type":555,"value":544},"text",{"type":550,"tag":551,"props":557,"children":558},{},[559],{"type":555,"value":560},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":550,"tag":551,"props":562,"children":563},{},[564],{"type":555,"value":565},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":550,"tag":551,"props":567,"children":568},{},[569],{"type":555,"value":570},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":550,"tag":551,"props":572,"children":573},{},[574],{"type":555,"value":575},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":550,"tag":551,"props":577,"children":578},{},[579],{"type":555,"value":580},"示例 1：",{"type":550,"tag":582,"props":583,"children":586},"pre",{"className":584,"code":585,"language":555,"meta":543,"style":543},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[587],{"type":550,"tag":588,"props":589,"children":590},"code",{"__ignoreMap":543},[591,602,611],{"type":550,"tag":592,"props":593,"children":596},"span",{"class":594,"line":595},"line",1,[597],{"type":550,"tag":592,"props":598,"children":599},{},[600],{"type":555,"value":601},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":550,"tag":592,"props":603,"children":605},{"class":594,"line":604},2,[606],{"type":550,"tag":592,"props":607,"children":608},{},[609],{"type":555,"value":610},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":550,"tag":592,"props":612,"children":614},{"class":594,"line":613},3,[615],{"type":550,"tag":592,"props":616,"children":617},{},[618],{"type":555,"value":619},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":550,"tag":551,"props":621,"children":622},{},[623],{"type":555,"value":624},"示例 2：",{"type":550,"tag":582,"props":626,"children":628},{"className":584,"code":627,"language":555,"meta":543,"style":543},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[629],{"type":550,"tag":588,"props":630,"children":631},{"__ignoreMap":543},[632,640,648],{"type":550,"tag":592,"props":633,"children":634},{"class":594,"line":595},[635],{"type":550,"tag":592,"props":636,"children":637},{},[638],{"type":555,"value":639},"输入：chars = [\"a\"]\n",{"type":550,"tag":592,"props":641,"children":642},{"class":594,"line":604},[643],{"type":550,"tag":592,"props":644,"children":645},{},[646],{"type":555,"value":647},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":550,"tag":592,"props":649,"children":650},{"class":594,"line":613},[651],{"type":550,"tag":592,"props":652,"children":653},{},[654],{"type":555,"value":655},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":550,"tag":551,"props":657,"children":658},{},[659],{"type":555,"value":660},"示例 3：",{"type":550,"tag":582,"props":662,"children":664},{"className":584,"code":663,"language":555,"meta":543,"style":543},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[665],{"type":550,"tag":588,"props":666,"children":667},{"__ignoreMap":543},[668,676,684],{"type":550,"tag":592,"props":669,"children":670},{"class":594,"line":595},[671],{"type":550,"tag":592,"props":672,"children":673},{},[674],{"type":555,"value":675},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":550,"tag":592,"props":677,"children":678},{"class":594,"line":604},[679],{"type":550,"tag":592,"props":680,"children":681},{},[682],{"type":555,"value":683},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":550,"tag":592,"props":685,"children":686},{"class":594,"line":613},[687],{"type":550,"tag":592,"props":688,"children":689},{},[690],{"type":555,"value":691},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":550,"tag":551,"props":693,"children":694},{},[695],{"type":555,"value":696},"提示：",{"type":550,"tag":698,"props":699,"children":700},"ul",{},[701,707],{"type":550,"tag":702,"props":703,"children":704},"li",{},[705],{"type":555,"value":706},"1 \u003C= chars.length \u003C= 2000",{"type":550,"tag":702,"props":708,"children":709},{},[710],{"type":555,"value":711},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":550,"tag":713,"props":714,"children":716},"h2",{"id":715},"解题思路",[717],{"type":555,"value":715},{"type":550,"tag":713,"props":719,"children":721},{"id":720},"实现",[722],{"type":555,"value":720},{"type":550,"tag":724,"props":725,"children":727},"h3",{"id":726},"双指针",[728],{"type":555,"value":726},{"type":550,"tag":582,"props":730,"children":734},{"className":731,"code":732,"language":733,"meta":543,"style":543},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[735],{"type":550,"tag":588,"props":736,"children":737},{"__ignoreMap":543},[738,747,789,819,828,874,913,941,976,1003,1013,1048,1106,1224,1245,1254,1272,1281,1289,1365,1406,1414,1422,1447],{"type":550,"tag":592,"props":739,"children":740},{"class":594,"line":595},[741],{"type":550,"tag":592,"props":742,"children":744},{"style":743},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[745],{"type":555,"value":746},"/**\n",{"type":550,"tag":592,"props":748,"children":749},{"class":594,"line":604},[750,755,761,767,772,778,783],{"type":550,"tag":592,"props":751,"children":752},{"style":743},[753],{"type":555,"value":754}," * ",{"type":550,"tag":592,"props":756,"children":758},{"style":757},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[759],{"type":555,"value":760},"@",{"type":550,"tag":592,"props":762,"children":764},{"style":763},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[765],{"type":555,"value":766},"param",{"type":550,"tag":592,"props":768,"children":769},{"style":757},[770],{"type":555,"value":771}," {",{"type":550,"tag":592,"props":773,"children":775},{"style":774},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[776],{"type":555,"value":777},"character[]",{"type":550,"tag":592,"props":779,"children":780},{"style":757},[781],{"type":555,"value":782},"}",{"type":550,"tag":592,"props":784,"children":786},{"style":785},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[787],{"type":555,"value":788}," chars\n",{"type":550,"tag":592,"props":790,"children":791},{"class":594,"line":613},[792,796,800,805,809,814],{"type":550,"tag":592,"props":793,"children":794},{"style":743},[795],{"type":555,"value":754},{"type":550,"tag":592,"props":797,"children":798},{"style":757},[799],{"type":555,"value":760},{"type":550,"tag":592,"props":801,"children":802},{"style":763},[803],{"type":555,"value":804},"return",{"type":550,"tag":592,"props":806,"children":807},{"style":757},[808],{"type":555,"value":771},{"type":550,"tag":592,"props":810,"children":811},{"style":774},[812],{"type":555,"value":813},"number",{"type":550,"tag":592,"props":815,"children":816},{"style":757},[817],{"type":555,"value":818},"}\n",{"type":550,"tag":592,"props":820,"children":822},{"class":594,"line":821},4,[823],{"type":550,"tag":592,"props":824,"children":825},{"style":743},[826],{"type":555,"value":827}," */\n",{"type":550,"tag":592,"props":829,"children":831},{"class":594,"line":830},5,[832,838,844,849,854,859,864,869],{"type":550,"tag":592,"props":833,"children":835},{"style":834},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[836],{"type":555,"value":837},"var",{"type":550,"tag":592,"props":839,"children":841},{"style":840},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[842],{"type":555,"value":843}," compress",{"type":550,"tag":592,"props":845,"children":846},{"style":757},[847],{"type":555,"value":848}," =",{"type":550,"tag":592,"props":850,"children":851},{"style":834},[852],{"type":555,"value":853}," function",{"type":550,"tag":592,"props":855,"children":856},{"style":757},[857],{"type":555,"value":858}," (",{"type":550,"tag":592,"props":860,"children":861},{"style":785},[862],{"type":555,"value":863},"chars",{"type":550,"tag":592,"props":865,"children":866},{"style":757},[867],{"type":555,"value":868},")",{"type":550,"tag":592,"props":870,"children":871},{"style":757},[872],{"type":555,"value":873}," {\n",{"type":550,"tag":592,"props":875,"children":877},{"class":594,"line":876},6,[878,883,888,892,897,902,908],{"type":550,"tag":592,"props":879,"children":880},{"style":834},[881],{"type":555,"value":882},"  const",{"type":550,"tag":592,"props":884,"children":885},{"style":785},[886],{"type":555,"value":887}," len",{"type":550,"tag":592,"props":889,"children":890},{"style":757},[891],{"type":555,"value":848},{"type":550,"tag":592,"props":893,"children":894},{"style":785},[895],{"type":555,"value":896}," chars",{"type":550,"tag":592,"props":898,"children":899},{"style":757},[900],{"type":555,"value":901},".",{"type":550,"tag":592,"props":903,"children":905},{"style":904},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[906],{"type":555,"value":907},"length",{"type":550,"tag":592,"props":909,"children":910},{"style":757},[911],{"type":555,"value":912},";\n",{"type":550,"tag":592,"props":914,"children":916},{"class":594,"line":915},7,[917,922,927,931,937],{"type":550,"tag":592,"props":918,"children":919},{"style":834},[920],{"type":555,"value":921},"  let",{"type":550,"tag":592,"props":923,"children":924},{"style":785},[925],{"type":555,"value":926}," i",{"type":550,"tag":592,"props":928,"children":929},{"style":757},[930],{"type":555,"value":848},{"type":550,"tag":592,"props":932,"children":934},{"style":933},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[935],{"type":555,"value":936}," 0",{"type":550,"tag":592,"props":938,"children":939},{"style":757},[940],{"type":555,"value":912},{"type":550,"tag":592,"props":942,"children":944},{"class":594,"line":943},8,[945,949,954,958,962,967,972],{"type":550,"tag":592,"props":946,"children":947},{"style":834},[948],{"type":555,"value":921},{"type":550,"tag":592,"props":950,"children":951},{"style":785},[952],{"type":555,"value":953}," j",{"type":550,"tag":592,"props":955,"children":956},{"style":757},[957],{"type":555,"value":848},{"type":550,"tag":592,"props":959,"children":960},{"style":785},[961],{"type":555,"value":926},{"type":550,"tag":592,"props":963,"children":964},{"style":834},[965],{"type":555,"value":966}," +",{"type":550,"tag":592,"props":968,"children":969},{"style":933},[970],{"type":555,"value":971}," 1",{"type":550,"tag":592,"props":973,"children":974},{"style":757},[975],{"type":555,"value":912},{"type":550,"tag":592,"props":977,"children":979},{"class":594,"line":978},9,[980,984,989,993,999],{"type":550,"tag":592,"props":981,"children":982},{"style":834},[983],{"type":555,"value":921},{"type":550,"tag":592,"props":985,"children":986},{"style":785},[987],{"type":555,"value":988}," s",{"type":550,"tag":592,"props":990,"children":991},{"style":757},[992],{"type":555,"value":848},{"type":550,"tag":592,"props":994,"children":996},{"style":995},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[997],{"type":555,"value":998}," \"\"",{"type":550,"tag":592,"props":1000,"children":1001},{"style":757},[1002],{"type":555,"value":912},{"type":550,"tag":592,"props":1004,"children":1006},{"class":594,"line":1005},10,[1007],{"type":550,"tag":592,"props":1008,"children":1010},{"emptyLinePlaceholder":1009},true,[1011],{"type":555,"value":1012},"\n",{"type":550,"tag":592,"props":1014,"children":1016},{"class":594,"line":1015},11,[1017,1022,1026,1031,1036,1040,1044],{"type":550,"tag":592,"props":1018,"children":1019},{"style":763},[1020],{"type":555,"value":1021},"  while",{"type":550,"tag":592,"props":1023,"children":1024},{"style":757},[1025],{"type":555,"value":858},{"type":550,"tag":592,"props":1027,"children":1028},{"style":785},[1029],{"type":555,"value":1030},"j",{"type":550,"tag":592,"props":1032,"children":1033},{"style":757},[1034],{"type":555,"value":1035}," \u003C=",{"type":550,"tag":592,"props":1037,"children":1038},{"style":785},[1039],{"type":555,"value":887},{"type":550,"tag":592,"props":1041,"children":1042},{"style":757},[1043],{"type":555,"value":868},{"type":550,"tag":592,"props":1045,"children":1046},{"style":757},[1047],{"type":555,"value":873},{"type":550,"tag":592,"props":1049,"children":1051},{"class":594,"line":1050},12,[1052,1057,1061,1065,1070,1075,1080,1085,1089,1093,1097,1102],{"type":550,"tag":592,"props":1053,"children":1054},{"style":763},[1055],{"type":555,"value":1056},"    if",{"type":550,"tag":592,"props":1058,"children":1059},{"style":757},[1060],{"type":555,"value":858},{"type":550,"tag":592,"props":1062,"children":1063},{"style":785},[1064],{"type":555,"value":863},{"type":550,"tag":592,"props":1066,"children":1067},{"style":757},[1068],{"type":555,"value":1069},"[",{"type":550,"tag":592,"props":1071,"children":1072},{"style":785},[1073],{"type":555,"value":1074},"i",{"type":550,"tag":592,"props":1076,"children":1077},{"style":757},[1078],{"type":555,"value":1079},"]",{"type":550,"tag":592,"props":1081,"children":1082},{"style":834},[1083],{"type":555,"value":1084}," !==",{"type":550,"tag":592,"props":1086,"children":1087},{"style":785},[1088],{"type":555,"value":896},{"type":550,"tag":592,"props":1090,"children":1091},{"style":757},[1092],{"type":555,"value":1069},{"type":550,"tag":592,"props":1094,"children":1095},{"style":785},[1096],{"type":555,"value":1030},{"type":550,"tag":592,"props":1098,"children":1099},{"style":757},[1100],{"type":555,"value":1101},"])",{"type":550,"tag":592,"props":1103,"children":1104},{"style":757},[1105],{"type":555,"value":873},{"type":550,"tag":592,"props":1107,"children":1109},{"class":594,"line":1108},13,[1110,1115,1120,1124,1129,1133,1138,1142,1147,1152,1157,1162,1166,1170,1174,1179,1184,1189,1193,1197,1202,1207,1211,1215,1219],{"type":550,"tag":592,"props":1111,"children":1112},{"style":785},[1113],{"type":555,"value":1114},"      s",{"type":550,"tag":592,"props":1116,"children":1117},{"style":834},[1118],{"type":555,"value":1119}," +=",{"type":550,"tag":592,"props":1121,"children":1122},{"style":785},[1123],{"type":555,"value":953},{"type":550,"tag":592,"props":1125,"children":1126},{"style":834},[1127],{"type":555,"value":1128}," -",{"type":550,"tag":592,"props":1130,"children":1131},{"style":785},[1132],{"type":555,"value":926},{"type":550,"tag":592,"props":1134,"children":1135},{"style":757},[1136],{"type":555,"value":1137}," >",{"type":550,"tag":592,"props":1139,"children":1140},{"style":933},[1141],{"type":555,"value":971},{"type":550,"tag":592,"props":1143,"children":1144},{"style":834},[1145],{"type":555,"value":1146}," ?",{"type":550,"tag":592,"props":1148,"children":1149},{"style":995},[1150],{"type":555,"value":1151}," `",{"type":550,"tag":592,"props":1153,"children":1154},{"style":757},[1155],{"type":555,"value":1156},"${",{"type":550,"tag":592,"props":1158,"children":1160},{"style":1159},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1161],{"type":555,"value":863},{"type":550,"tag":592,"props":1163,"children":1164},{"style":757},[1165],{"type":555,"value":1069},{"type":550,"tag":592,"props":1167,"children":1168},{"style":1159},[1169],{"type":555,"value":1074},{"type":550,"tag":592,"props":1171,"children":1172},{"style":757},[1173],{"type":555,"value":1079},{"type":550,"tag":592,"props":1175,"children":1176},{"style":757},[1177],{"type":555,"value":1178},"}${",{"type":550,"tag":592,"props":1180,"children":1181},{"style":1159},[1182],{"type":555,"value":1183},"j ",{"type":550,"tag":592,"props":1185,"children":1186},{"style":834},[1187],{"type":555,"value":1188},"-",{"type":550,"tag":592,"props":1190,"children":1191},{"style":1159},[1192],{"type":555,"value":926},{"type":550,"tag":592,"props":1194,"children":1195},{"style":757},[1196],{"type":555,"value":782},{"type":550,"tag":592,"props":1198,"children":1199},{"style":995},[1200],{"type":555,"value":1201},"`",{"type":550,"tag":592,"props":1203,"children":1204},{"style":834},[1205],{"type":555,"value":1206}," :",{"type":550,"tag":592,"props":1208,"children":1209},{"style":785},[1210],{"type":555,"value":896},{"type":550,"tag":592,"props":1212,"children":1213},{"style":757},[1214],{"type":555,"value":1069},{"type":550,"tag":592,"props":1216,"children":1217},{"style":785},[1218],{"type":555,"value":1074},{"type":550,"tag":592,"props":1220,"children":1221},{"style":757},[1222],{"type":555,"value":1223},"];\n",{"type":550,"tag":592,"props":1225,"children":1227},{"class":594,"line":1226},14,[1228,1233,1237,1241],{"type":550,"tag":592,"props":1229,"children":1230},{"style":785},[1231],{"type":555,"value":1232},"      i",{"type":550,"tag":592,"props":1234,"children":1235},{"style":757},[1236],{"type":555,"value":848},{"type":550,"tag":592,"props":1238,"children":1239},{"style":785},[1240],{"type":555,"value":953},{"type":550,"tag":592,"props":1242,"children":1243},{"style":757},[1244],{"type":555,"value":912},{"type":550,"tag":592,"props":1246,"children":1248},{"class":594,"line":1247},15,[1249],{"type":550,"tag":592,"props":1250,"children":1251},{"style":757},[1252],{"type":555,"value":1253},"    }\n",{"type":550,"tag":592,"props":1255,"children":1257},{"class":594,"line":1256},16,[1258,1263,1268],{"type":550,"tag":592,"props":1259,"children":1260},{"style":785},[1261],{"type":555,"value":1262},"    j",{"type":550,"tag":592,"props":1264,"children":1265},{"style":834},[1266],{"type":555,"value":1267},"++",{"type":550,"tag":592,"props":1269,"children":1270},{"style":757},[1271],{"type":555,"value":912},{"type":550,"tag":592,"props":1273,"children":1275},{"class":594,"line":1274},17,[1276],{"type":550,"tag":592,"props":1277,"children":1278},{"style":757},[1279],{"type":555,"value":1280},"  }\n",{"type":550,"tag":592,"props":1282,"children":1284},{"class":594,"line":1283},18,[1285],{"type":550,"tag":592,"props":1286,"children":1287},{"emptyLinePlaceholder":1009},[1288],{"type":555,"value":1012},{"type":550,"tag":592,"props":1290,"children":1292},{"class":594,"line":1291},19,[1293,1298,1302,1307,1311,1315,1319,1324,1328,1333,1337,1341,1345,1349,1353,1357,1361],{"type":550,"tag":592,"props":1294,"children":1295},{"style":763},[1296],{"type":555,"value":1297},"  for",{"type":550,"tag":592,"props":1299,"children":1300},{"style":757},[1301],{"type":555,"value":858},{"type":550,"tag":592,"props":1303,"children":1304},{"style":834},[1305],{"type":555,"value":1306},"let",{"type":550,"tag":592,"props":1308,"children":1309},{"style":785},[1310],{"type":555,"value":926},{"type":550,"tag":592,"props":1312,"children":1313},{"style":757},[1314],{"type":555,"value":848},{"type":550,"tag":592,"props":1316,"children":1317},{"style":933},[1318],{"type":555,"value":936},{"type":550,"tag":592,"props":1320,"children":1321},{"style":757},[1322],{"type":555,"value":1323},";",{"type":550,"tag":592,"props":1325,"children":1326},{"style":785},[1327],{"type":555,"value":926},{"type":550,"tag":592,"props":1329,"children":1330},{"style":757},[1331],{"type":555,"value":1332}," \u003C",{"type":550,"tag":592,"props":1334,"children":1335},{"style":785},[1336],{"type":555,"value":988},{"type":550,"tag":592,"props":1338,"children":1339},{"style":757},[1340],{"type":555,"value":901},{"type":550,"tag":592,"props":1342,"children":1343},{"style":904},[1344],{"type":555,"value":907},{"type":550,"tag":592,"props":1346,"children":1347},{"style":757},[1348],{"type":555,"value":1323},{"type":550,"tag":592,"props":1350,"children":1351},{"style":785},[1352],{"type":555,"value":926},{"type":550,"tag":592,"props":1354,"children":1355},{"style":834},[1356],{"type":555,"value":1267},{"type":550,"tag":592,"props":1358,"children":1359},{"style":757},[1360],{"type":555,"value":868},{"type":550,"tag":592,"props":1362,"children":1363},{"style":757},[1364],{"type":555,"value":873},{"type":550,"tag":592,"props":1366,"children":1368},{"class":594,"line":1367},20,[1369,1374,1378,1382,1386,1390,1394,1398,1402],{"type":550,"tag":592,"props":1370,"children":1371},{"style":785},[1372],{"type":555,"value":1373},"    chars",{"type":550,"tag":592,"props":1375,"children":1376},{"style":757},[1377],{"type":555,"value":1069},{"type":550,"tag":592,"props":1379,"children":1380},{"style":785},[1381],{"type":555,"value":1074},{"type":550,"tag":592,"props":1383,"children":1384},{"style":757},[1385],{"type":555,"value":1079},{"type":550,"tag":592,"props":1387,"children":1388},{"style":757},[1389],{"type":555,"value":848},{"type":550,"tag":592,"props":1391,"children":1392},{"style":785},[1393],{"type":555,"value":988},{"type":550,"tag":592,"props":1395,"children":1396},{"style":757},[1397],{"type":555,"value":1069},{"type":550,"tag":592,"props":1399,"children":1400},{"style":785},[1401],{"type":555,"value":1074},{"type":550,"tag":592,"props":1403,"children":1404},{"style":757},[1405],{"type":555,"value":1223},{"type":550,"tag":592,"props":1407,"children":1409},{"class":594,"line":1408},21,[1410],{"type":550,"tag":592,"props":1411,"children":1412},{"style":757},[1413],{"type":555,"value":1280},{"type":550,"tag":592,"props":1415,"children":1417},{"class":594,"line":1416},22,[1418],{"type":550,"tag":592,"props":1419,"children":1420},{"emptyLinePlaceholder":1009},[1421],{"type":555,"value":1012},{"type":550,"tag":592,"props":1423,"children":1425},{"class":594,"line":1424},23,[1426,1431,1435,1439,1443],{"type":550,"tag":592,"props":1427,"children":1428},{"style":763},[1429],{"type":555,"value":1430},"  return",{"type":550,"tag":592,"props":1432,"children":1433},{"style":785},[1434],{"type":555,"value":988},{"type":550,"tag":592,"props":1436,"children":1437},{"style":757},[1438],{"type":555,"value":901},{"type":550,"tag":592,"props":1440,"children":1441},{"style":904},[1442],{"type":555,"value":907},{"type":550,"tag":592,"props":1444,"children":1445},{"style":757},[1446],{"type":555,"value":912},{"type":550,"tag":592,"props":1448,"children":1450},{"class":594,"line":1449},24,[1451],{"type":550,"tag":592,"props":1452,"children":1453},{"style":757},[1454],{"type":555,"value":1455},"};\n",{"type":550,"tag":1457,"props":1458,"children":1459},"style",{},[1460],{"type":555,"value":1461},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":543,"searchDepth":830,"depth":830,"links":1463},[1464,1465],{"id":715,"depth":604,"text":715},{"id":720,"depth":604,"text":720,"children":1466},[1467],{"id":726,"depth":613,"text":726},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1474,1476],{"_path":234,"title":233,"description":1475},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":240,"title":239,"description":1477},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1714099216592]