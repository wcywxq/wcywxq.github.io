[{"data":1,"prerenderedAt":1489},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":551,"/algorithm/leetcode/major/string-compression-surround":1484},[4,272,301,519,527,536],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":518},"代码考核","/code-assessment",[305,410,511],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,343,359,387,394,401,404,407],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337,340],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342},"Promise","/code-assessment/source/native-api/promise",{"title":344,"_path":345,"children":346},"函数 Function","/code-assessment/source/function",[347,350,353,356],{"title":348,"_path":349},"函数防抖","/code-assessment/source/function/debounce",{"title":351,"_path":352},"函数节流","/code-assessment/source/function/throttle",{"title":354,"_path":355},"函数柯理化","/code-assessment/source/function/curry",{"title":357,"_path":358},"函数睡眠","/code-assessment/source/function/sleep",{"title":360,"_path":361,"children":362},"数组 Array","/code-assessment/source/array",[363,366,369,372,375,378,381,384],{"title":364,"_path":365},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":367,"_path":368},"数组扁平化","/code-assessment/source/array/flat",{"title":370,"_path":371},"原型方法","/code-assessment/source/array/prototype-method",{"title":373,"_path":374},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":376,"_path":377},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":379,"_path":380},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":382,"_path":383},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":385,"_path":386},"二维数组","/code-assessment/source/array/2d-array",{"title":388,"_path":389,"children":390},"字符串 String","/code-assessment/source/string",[391],{"title":392,"_path":393},"repeat()","/code-assessment/source/string/repeat",{"title":395,"_path":396,"children":397},"集合 Set","/code-assessment/source/set",[398],{"title":399,"_path":400},"遍历集合","/code-assessment/source/set/traverse",{"title":402,"_path":403},"获取通用类型","/code-assessment/source/get-generic-type",{"title":405,"_path":406},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":408,"_path":409},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":411,"_path":412,"children":413},"业务场景","/code-assessment/scene",[414,444,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508],{"title":341,"_path":415,"children":416},"/code-assessment/scene/promise",[417,420,423,426,429,432,435,438,441],{"title":418,"_path":419},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":421,"_path":422},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":424,"_path":425},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":427,"_path":428},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":430,"_path":431},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":433,"_path":434},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":436,"_path":437},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":439,"_path":440},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":442,"_path":443},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":445,"_path":446,"children":447},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[448,451],{"title":449,"_path":450},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":452,"_path":453},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":455,"_path":456},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":458,"_path":459},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":461,"_path":462},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":464,"_path":465},"倒计时","/code-assessment/scene/countdown",{"title":467,"_path":468},"日期格式化","/code-assessment/scene/date-format",{"title":470,"_path":471},"实现前端路由","/code-assessment/scene/frontend-route",{"title":473,"_path":474},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":476,"_path":477},"lodash.get","/code-assessment/scene/lodash-get",{"title":479,"_path":480},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":482,"_path":483},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":485,"_path":486},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":488,"_path":489},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":491,"_path":492},"随机数","/code-assessment/scene/random-number",{"title":494,"_path":495},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":497,"_path":498},"sku 算法实现","/code-assessment/scene/sku",{"title":500,"_path":501},"整数分割","/code-assessment/scene/split-number",{"title":503,"_path":504},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":506,"_path":507},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":509,"_path":510},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":512,"_path":513,"children":514},"Ts 类型挑战","/code-assessment/type-challeges",[515],{"title":516,"_path":517},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":520,"_path":521,"children":522,"icon":526},"项目","/project",[523],{"title":524,"_path":525},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":528,"_path":529,"children":530,"icon":535},"设计模式","/design-mode",[531,532],{"title":528,"_path":529},{"title":533,"_path":534},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":537,"_path":538,"children":539,"icon":550},"后端语言","/backend-languages",[540],{"title":541,"_path":542,"children":543},"Python","/backend-languages/python",[544,547],{"title":545,"_path":546},"基础","/backend-languages/python/base",{"title":548,"_path":549},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":240,"_dir":552,"_draft":553,"_partial":553,"_locale":554,"title":239,"description":555,"url":556,"body":557,"_type":1479,"_id":1480,"_source":1481,"_file":1482,"_extension":1483},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":558,"children":559,"toc":1473},"root",[560,567,572,577,582,587,592,631,636,667,672,703,708,723,729,734,740,1467],{"type":561,"tag":562,"props":563,"children":564},"element","p",{},[565],{"type":566,"value":555},"text",{"type":561,"tag":562,"props":568,"children":569},{},[570],{"type":566,"value":571},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":561,"tag":562,"props":573,"children":574},{},[575],{"type":566,"value":576},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":561,"tag":562,"props":578,"children":579},{},[580],{"type":566,"value":581},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":561,"tag":562,"props":583,"children":584},{},[585],{"type":566,"value":586},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":561,"tag":562,"props":588,"children":589},{},[590],{"type":566,"value":591},"示例 1：",{"type":561,"tag":593,"props":594,"children":597},"pre",{"className":595,"code":596,"language":566,"meta":554,"style":554},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[598],{"type":561,"tag":599,"props":600,"children":601},"code",{"__ignoreMap":554},[602,613,622],{"type":561,"tag":603,"props":604,"children":607},"span",{"class":605,"line":606},"line",1,[608],{"type":561,"tag":603,"props":609,"children":610},{},[611],{"type":566,"value":612},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":561,"tag":603,"props":614,"children":616},{"class":605,"line":615},2,[617],{"type":561,"tag":603,"props":618,"children":619},{},[620],{"type":566,"value":621},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":561,"tag":603,"props":623,"children":625},{"class":605,"line":624},3,[626],{"type":561,"tag":603,"props":627,"children":628},{},[629],{"type":566,"value":630},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":561,"tag":562,"props":632,"children":633},{},[634],{"type":566,"value":635},"示例 2：",{"type":561,"tag":593,"props":637,"children":639},{"className":595,"code":638,"language":566,"meta":554,"style":554},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[640],{"type":561,"tag":599,"props":641,"children":642},{"__ignoreMap":554},[643,651,659],{"type":561,"tag":603,"props":644,"children":645},{"class":605,"line":606},[646],{"type":561,"tag":603,"props":647,"children":648},{},[649],{"type":566,"value":650},"输入：chars = [\"a\"]\n",{"type":561,"tag":603,"props":652,"children":653},{"class":605,"line":615},[654],{"type":561,"tag":603,"props":655,"children":656},{},[657],{"type":566,"value":658},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":561,"tag":603,"props":660,"children":661},{"class":605,"line":624},[662],{"type":561,"tag":603,"props":663,"children":664},{},[665],{"type":566,"value":666},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":561,"tag":562,"props":668,"children":669},{},[670],{"type":566,"value":671},"示例 3：",{"type":561,"tag":593,"props":673,"children":675},{"className":595,"code":674,"language":566,"meta":554,"style":554},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[676],{"type":561,"tag":599,"props":677,"children":678},{"__ignoreMap":554},[679,687,695],{"type":561,"tag":603,"props":680,"children":681},{"class":605,"line":606},[682],{"type":561,"tag":603,"props":683,"children":684},{},[685],{"type":566,"value":686},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":561,"tag":603,"props":688,"children":689},{"class":605,"line":615},[690],{"type":561,"tag":603,"props":691,"children":692},{},[693],{"type":566,"value":694},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":561,"tag":603,"props":696,"children":697},{"class":605,"line":624},[698],{"type":561,"tag":603,"props":699,"children":700},{},[701],{"type":566,"value":702},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":561,"tag":562,"props":704,"children":705},{},[706],{"type":566,"value":707},"提示：",{"type":561,"tag":709,"props":710,"children":711},"ul",{},[712,718],{"type":561,"tag":713,"props":714,"children":715},"li",{},[716],{"type":566,"value":717},"1 \u003C= chars.length \u003C= 2000",{"type":561,"tag":713,"props":719,"children":720},{},[721],{"type":566,"value":722},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":561,"tag":724,"props":725,"children":727},"h2",{"id":726},"解题思路",[728],{"type":566,"value":726},{"type":561,"tag":724,"props":730,"children":732},{"id":731},"实现",[733],{"type":566,"value":731},{"type":561,"tag":735,"props":736,"children":738},"h3",{"id":737},"双指针",[739],{"type":566,"value":737},{"type":561,"tag":593,"props":741,"children":745},{"className":742,"code":743,"language":744,"meta":554,"style":554},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[746],{"type":561,"tag":599,"props":747,"children":748},{"__ignoreMap":554},[749,758,800,830,839,885,924,952,987,1014,1024,1059,1117,1235,1256,1265,1283,1292,1300,1376,1417,1425,1433,1458],{"type":561,"tag":603,"props":750,"children":751},{"class":605,"line":606},[752],{"type":561,"tag":603,"props":753,"children":755},{"style":754},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[756],{"type":566,"value":757},"/**\n",{"type":561,"tag":603,"props":759,"children":760},{"class":605,"line":615},[761,766,772,778,783,789,794],{"type":561,"tag":603,"props":762,"children":763},{"style":754},[764],{"type":566,"value":765}," * ",{"type":561,"tag":603,"props":767,"children":769},{"style":768},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[770],{"type":566,"value":771},"@",{"type":561,"tag":603,"props":773,"children":775},{"style":774},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[776],{"type":566,"value":777},"param",{"type":561,"tag":603,"props":779,"children":780},{"style":768},[781],{"type":566,"value":782}," {",{"type":561,"tag":603,"props":784,"children":786},{"style":785},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[787],{"type":566,"value":788},"character[]",{"type":561,"tag":603,"props":790,"children":791},{"style":768},[792],{"type":566,"value":793},"}",{"type":561,"tag":603,"props":795,"children":797},{"style":796},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[798],{"type":566,"value":799}," chars\n",{"type":561,"tag":603,"props":801,"children":802},{"class":605,"line":624},[803,807,811,816,820,825],{"type":561,"tag":603,"props":804,"children":805},{"style":754},[806],{"type":566,"value":765},{"type":561,"tag":603,"props":808,"children":809},{"style":768},[810],{"type":566,"value":771},{"type":561,"tag":603,"props":812,"children":813},{"style":774},[814],{"type":566,"value":815},"return",{"type":561,"tag":603,"props":817,"children":818},{"style":768},[819],{"type":566,"value":782},{"type":561,"tag":603,"props":821,"children":822},{"style":785},[823],{"type":566,"value":824},"number",{"type":561,"tag":603,"props":826,"children":827},{"style":768},[828],{"type":566,"value":829},"}\n",{"type":561,"tag":603,"props":831,"children":833},{"class":605,"line":832},4,[834],{"type":561,"tag":603,"props":835,"children":836},{"style":754},[837],{"type":566,"value":838}," */\n",{"type":561,"tag":603,"props":840,"children":842},{"class":605,"line":841},5,[843,849,855,860,865,870,875,880],{"type":561,"tag":603,"props":844,"children":846},{"style":845},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[847],{"type":566,"value":848},"var",{"type":561,"tag":603,"props":850,"children":852},{"style":851},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[853],{"type":566,"value":854}," compress",{"type":561,"tag":603,"props":856,"children":857},{"style":768},[858],{"type":566,"value":859}," =",{"type":561,"tag":603,"props":861,"children":862},{"style":845},[863],{"type":566,"value":864}," function",{"type":561,"tag":603,"props":866,"children":867},{"style":768},[868],{"type":566,"value":869}," (",{"type":561,"tag":603,"props":871,"children":872},{"style":796},[873],{"type":566,"value":874},"chars",{"type":561,"tag":603,"props":876,"children":877},{"style":768},[878],{"type":566,"value":879},")",{"type":561,"tag":603,"props":881,"children":882},{"style":768},[883],{"type":566,"value":884}," {\n",{"type":561,"tag":603,"props":886,"children":888},{"class":605,"line":887},6,[889,894,899,903,908,913,919],{"type":561,"tag":603,"props":890,"children":891},{"style":845},[892],{"type":566,"value":893},"  const",{"type":561,"tag":603,"props":895,"children":896},{"style":796},[897],{"type":566,"value":898}," len",{"type":561,"tag":603,"props":900,"children":901},{"style":768},[902],{"type":566,"value":859},{"type":561,"tag":603,"props":904,"children":905},{"style":796},[906],{"type":566,"value":907}," chars",{"type":561,"tag":603,"props":909,"children":910},{"style":768},[911],{"type":566,"value":912},".",{"type":561,"tag":603,"props":914,"children":916},{"style":915},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[917],{"type":566,"value":918},"length",{"type":561,"tag":603,"props":920,"children":921},{"style":768},[922],{"type":566,"value":923},";\n",{"type":561,"tag":603,"props":925,"children":927},{"class":605,"line":926},7,[928,933,938,942,948],{"type":561,"tag":603,"props":929,"children":930},{"style":845},[931],{"type":566,"value":932},"  let",{"type":561,"tag":603,"props":934,"children":935},{"style":796},[936],{"type":566,"value":937}," i",{"type":561,"tag":603,"props":939,"children":940},{"style":768},[941],{"type":566,"value":859},{"type":561,"tag":603,"props":943,"children":945},{"style":944},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[946],{"type":566,"value":947}," 0",{"type":561,"tag":603,"props":949,"children":950},{"style":768},[951],{"type":566,"value":923},{"type":561,"tag":603,"props":953,"children":955},{"class":605,"line":954},8,[956,960,965,969,973,978,983],{"type":561,"tag":603,"props":957,"children":958},{"style":845},[959],{"type":566,"value":932},{"type":561,"tag":603,"props":961,"children":962},{"style":796},[963],{"type":566,"value":964}," j",{"type":561,"tag":603,"props":966,"children":967},{"style":768},[968],{"type":566,"value":859},{"type":561,"tag":603,"props":970,"children":971},{"style":796},[972],{"type":566,"value":937},{"type":561,"tag":603,"props":974,"children":975},{"style":845},[976],{"type":566,"value":977}," +",{"type":561,"tag":603,"props":979,"children":980},{"style":944},[981],{"type":566,"value":982}," 1",{"type":561,"tag":603,"props":984,"children":985},{"style":768},[986],{"type":566,"value":923},{"type":561,"tag":603,"props":988,"children":990},{"class":605,"line":989},9,[991,995,1000,1004,1010],{"type":561,"tag":603,"props":992,"children":993},{"style":845},[994],{"type":566,"value":932},{"type":561,"tag":603,"props":996,"children":997},{"style":796},[998],{"type":566,"value":999}," s",{"type":561,"tag":603,"props":1001,"children":1002},{"style":768},[1003],{"type":566,"value":859},{"type":561,"tag":603,"props":1005,"children":1007},{"style":1006},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1008],{"type":566,"value":1009}," \"\"",{"type":561,"tag":603,"props":1011,"children":1012},{"style":768},[1013],{"type":566,"value":923},{"type":561,"tag":603,"props":1015,"children":1017},{"class":605,"line":1016},10,[1018],{"type":561,"tag":603,"props":1019,"children":1021},{"emptyLinePlaceholder":1020},true,[1022],{"type":566,"value":1023},"\n",{"type":561,"tag":603,"props":1025,"children":1027},{"class":605,"line":1026},11,[1028,1033,1037,1042,1047,1051,1055],{"type":561,"tag":603,"props":1029,"children":1030},{"style":774},[1031],{"type":566,"value":1032},"  while",{"type":561,"tag":603,"props":1034,"children":1035},{"style":768},[1036],{"type":566,"value":869},{"type":561,"tag":603,"props":1038,"children":1039},{"style":796},[1040],{"type":566,"value":1041},"j",{"type":561,"tag":603,"props":1043,"children":1044},{"style":768},[1045],{"type":566,"value":1046}," \u003C=",{"type":561,"tag":603,"props":1048,"children":1049},{"style":796},[1050],{"type":566,"value":898},{"type":561,"tag":603,"props":1052,"children":1053},{"style":768},[1054],{"type":566,"value":879},{"type":561,"tag":603,"props":1056,"children":1057},{"style":768},[1058],{"type":566,"value":884},{"type":561,"tag":603,"props":1060,"children":1062},{"class":605,"line":1061},12,[1063,1068,1072,1076,1081,1086,1091,1096,1100,1104,1108,1113],{"type":561,"tag":603,"props":1064,"children":1065},{"style":774},[1066],{"type":566,"value":1067},"    if",{"type":561,"tag":603,"props":1069,"children":1070},{"style":768},[1071],{"type":566,"value":869},{"type":561,"tag":603,"props":1073,"children":1074},{"style":796},[1075],{"type":566,"value":874},{"type":561,"tag":603,"props":1077,"children":1078},{"style":768},[1079],{"type":566,"value":1080},"[",{"type":561,"tag":603,"props":1082,"children":1083},{"style":796},[1084],{"type":566,"value":1085},"i",{"type":561,"tag":603,"props":1087,"children":1088},{"style":768},[1089],{"type":566,"value":1090},"]",{"type":561,"tag":603,"props":1092,"children":1093},{"style":845},[1094],{"type":566,"value":1095}," !==",{"type":561,"tag":603,"props":1097,"children":1098},{"style":796},[1099],{"type":566,"value":907},{"type":561,"tag":603,"props":1101,"children":1102},{"style":768},[1103],{"type":566,"value":1080},{"type":561,"tag":603,"props":1105,"children":1106},{"style":796},[1107],{"type":566,"value":1041},{"type":561,"tag":603,"props":1109,"children":1110},{"style":768},[1111],{"type":566,"value":1112},"])",{"type":561,"tag":603,"props":1114,"children":1115},{"style":768},[1116],{"type":566,"value":884},{"type":561,"tag":603,"props":1118,"children":1120},{"class":605,"line":1119},13,[1121,1126,1131,1135,1140,1144,1149,1153,1158,1163,1168,1173,1177,1181,1185,1190,1195,1200,1204,1208,1213,1218,1222,1226,1230],{"type":561,"tag":603,"props":1122,"children":1123},{"style":796},[1124],{"type":566,"value":1125},"      s",{"type":561,"tag":603,"props":1127,"children":1128},{"style":845},[1129],{"type":566,"value":1130}," +=",{"type":561,"tag":603,"props":1132,"children":1133},{"style":796},[1134],{"type":566,"value":964},{"type":561,"tag":603,"props":1136,"children":1137},{"style":845},[1138],{"type":566,"value":1139}," -",{"type":561,"tag":603,"props":1141,"children":1142},{"style":796},[1143],{"type":566,"value":937},{"type":561,"tag":603,"props":1145,"children":1146},{"style":768},[1147],{"type":566,"value":1148}," >",{"type":561,"tag":603,"props":1150,"children":1151},{"style":944},[1152],{"type":566,"value":982},{"type":561,"tag":603,"props":1154,"children":1155},{"style":845},[1156],{"type":566,"value":1157}," ?",{"type":561,"tag":603,"props":1159,"children":1160},{"style":1006},[1161],{"type":566,"value":1162}," `",{"type":561,"tag":603,"props":1164,"children":1165},{"style":768},[1166],{"type":566,"value":1167},"${",{"type":561,"tag":603,"props":1169,"children":1171},{"style":1170},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1172],{"type":566,"value":874},{"type":561,"tag":603,"props":1174,"children":1175},{"style":768},[1176],{"type":566,"value":1080},{"type":561,"tag":603,"props":1178,"children":1179},{"style":1170},[1180],{"type":566,"value":1085},{"type":561,"tag":603,"props":1182,"children":1183},{"style":768},[1184],{"type":566,"value":1090},{"type":561,"tag":603,"props":1186,"children":1187},{"style":768},[1188],{"type":566,"value":1189},"}${",{"type":561,"tag":603,"props":1191,"children":1192},{"style":1170},[1193],{"type":566,"value":1194},"j ",{"type":561,"tag":603,"props":1196,"children":1197},{"style":845},[1198],{"type":566,"value":1199},"-",{"type":561,"tag":603,"props":1201,"children":1202},{"style":1170},[1203],{"type":566,"value":937},{"type":561,"tag":603,"props":1205,"children":1206},{"style":768},[1207],{"type":566,"value":793},{"type":561,"tag":603,"props":1209,"children":1210},{"style":1006},[1211],{"type":566,"value":1212},"`",{"type":561,"tag":603,"props":1214,"children":1215},{"style":845},[1216],{"type":566,"value":1217}," :",{"type":561,"tag":603,"props":1219,"children":1220},{"style":796},[1221],{"type":566,"value":907},{"type":561,"tag":603,"props":1223,"children":1224},{"style":768},[1225],{"type":566,"value":1080},{"type":561,"tag":603,"props":1227,"children":1228},{"style":796},[1229],{"type":566,"value":1085},{"type":561,"tag":603,"props":1231,"children":1232},{"style":768},[1233],{"type":566,"value":1234},"];\n",{"type":561,"tag":603,"props":1236,"children":1238},{"class":605,"line":1237},14,[1239,1244,1248,1252],{"type":561,"tag":603,"props":1240,"children":1241},{"style":796},[1242],{"type":566,"value":1243},"      i",{"type":561,"tag":603,"props":1245,"children":1246},{"style":768},[1247],{"type":566,"value":859},{"type":561,"tag":603,"props":1249,"children":1250},{"style":796},[1251],{"type":566,"value":964},{"type":561,"tag":603,"props":1253,"children":1254},{"style":768},[1255],{"type":566,"value":923},{"type":561,"tag":603,"props":1257,"children":1259},{"class":605,"line":1258},15,[1260],{"type":561,"tag":603,"props":1261,"children":1262},{"style":768},[1263],{"type":566,"value":1264},"    }\n",{"type":561,"tag":603,"props":1266,"children":1268},{"class":605,"line":1267},16,[1269,1274,1279],{"type":561,"tag":603,"props":1270,"children":1271},{"style":796},[1272],{"type":566,"value":1273},"    j",{"type":561,"tag":603,"props":1275,"children":1276},{"style":845},[1277],{"type":566,"value":1278},"++",{"type":561,"tag":603,"props":1280,"children":1281},{"style":768},[1282],{"type":566,"value":923},{"type":561,"tag":603,"props":1284,"children":1286},{"class":605,"line":1285},17,[1287],{"type":561,"tag":603,"props":1288,"children":1289},{"style":768},[1290],{"type":566,"value":1291},"  }\n",{"type":561,"tag":603,"props":1293,"children":1295},{"class":605,"line":1294},18,[1296],{"type":561,"tag":603,"props":1297,"children":1298},{"emptyLinePlaceholder":1020},[1299],{"type":566,"value":1023},{"type":561,"tag":603,"props":1301,"children":1303},{"class":605,"line":1302},19,[1304,1309,1313,1318,1322,1326,1330,1335,1339,1344,1348,1352,1356,1360,1364,1368,1372],{"type":561,"tag":603,"props":1305,"children":1306},{"style":774},[1307],{"type":566,"value":1308},"  for",{"type":561,"tag":603,"props":1310,"children":1311},{"style":768},[1312],{"type":566,"value":869},{"type":561,"tag":603,"props":1314,"children":1315},{"style":845},[1316],{"type":566,"value":1317},"let",{"type":561,"tag":603,"props":1319,"children":1320},{"style":796},[1321],{"type":566,"value":937},{"type":561,"tag":603,"props":1323,"children":1324},{"style":768},[1325],{"type":566,"value":859},{"type":561,"tag":603,"props":1327,"children":1328},{"style":944},[1329],{"type":566,"value":947},{"type":561,"tag":603,"props":1331,"children":1332},{"style":768},[1333],{"type":566,"value":1334},";",{"type":561,"tag":603,"props":1336,"children":1337},{"style":796},[1338],{"type":566,"value":937},{"type":561,"tag":603,"props":1340,"children":1341},{"style":768},[1342],{"type":566,"value":1343}," \u003C",{"type":561,"tag":603,"props":1345,"children":1346},{"style":796},[1347],{"type":566,"value":999},{"type":561,"tag":603,"props":1349,"children":1350},{"style":768},[1351],{"type":566,"value":912},{"type":561,"tag":603,"props":1353,"children":1354},{"style":915},[1355],{"type":566,"value":918},{"type":561,"tag":603,"props":1357,"children":1358},{"style":768},[1359],{"type":566,"value":1334},{"type":561,"tag":603,"props":1361,"children":1362},{"style":796},[1363],{"type":566,"value":937},{"type":561,"tag":603,"props":1365,"children":1366},{"style":845},[1367],{"type":566,"value":1278},{"type":561,"tag":603,"props":1369,"children":1370},{"style":768},[1371],{"type":566,"value":879},{"type":561,"tag":603,"props":1373,"children":1374},{"style":768},[1375],{"type":566,"value":884},{"type":561,"tag":603,"props":1377,"children":1379},{"class":605,"line":1378},20,[1380,1385,1389,1393,1397,1401,1405,1409,1413],{"type":561,"tag":603,"props":1381,"children":1382},{"style":796},[1383],{"type":566,"value":1384},"    chars",{"type":561,"tag":603,"props":1386,"children":1387},{"style":768},[1388],{"type":566,"value":1080},{"type":561,"tag":603,"props":1390,"children":1391},{"style":796},[1392],{"type":566,"value":1085},{"type":561,"tag":603,"props":1394,"children":1395},{"style":768},[1396],{"type":566,"value":1090},{"type":561,"tag":603,"props":1398,"children":1399},{"style":768},[1400],{"type":566,"value":859},{"type":561,"tag":603,"props":1402,"children":1403},{"style":796},[1404],{"type":566,"value":999},{"type":561,"tag":603,"props":1406,"children":1407},{"style":768},[1408],{"type":566,"value":1080},{"type":561,"tag":603,"props":1410,"children":1411},{"style":796},[1412],{"type":566,"value":1085},{"type":561,"tag":603,"props":1414,"children":1415},{"style":768},[1416],{"type":566,"value":1234},{"type":561,"tag":603,"props":1418,"children":1420},{"class":605,"line":1419},21,[1421],{"type":561,"tag":603,"props":1422,"children":1423},{"style":768},[1424],{"type":566,"value":1291},{"type":561,"tag":603,"props":1426,"children":1428},{"class":605,"line":1427},22,[1429],{"type":561,"tag":603,"props":1430,"children":1431},{"emptyLinePlaceholder":1020},[1432],{"type":566,"value":1023},{"type":561,"tag":603,"props":1434,"children":1436},{"class":605,"line":1435},23,[1437,1442,1446,1450,1454],{"type":561,"tag":603,"props":1438,"children":1439},{"style":774},[1440],{"type":566,"value":1441},"  return",{"type":561,"tag":603,"props":1443,"children":1444},{"style":796},[1445],{"type":566,"value":999},{"type":561,"tag":603,"props":1447,"children":1448},{"style":768},[1449],{"type":566,"value":912},{"type":561,"tag":603,"props":1451,"children":1452},{"style":915},[1453],{"type":566,"value":918},{"type":561,"tag":603,"props":1455,"children":1456},{"style":768},[1457],{"type":566,"value":923},{"type":561,"tag":603,"props":1459,"children":1461},{"class":605,"line":1460},24,[1462],{"type":561,"tag":603,"props":1463,"children":1464},{"style":768},[1465],{"type":566,"value":1466},"};\n",{"type":561,"tag":1468,"props":1469,"children":1470},"style",{},[1471],{"type":566,"value":1472},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":554,"searchDepth":841,"depth":841,"links":1474},[1475,1476],{"id":726,"depth":615,"text":726},{"id":731,"depth":615,"text":731,"children":1477},[1478],{"id":737,"depth":624,"text":737},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1485,1487],{"_path":237,"title":236,"description":1486},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":243,"title":242,"description":1488},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1715094972395]