[{"data":1,"prerenderedAt":1362},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":452,"/algorithm/leetcode/major/string-compression-surround":1357},[4,259,287,431,438],{"title":5,"_path":6,"children":7},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately",{"title":260,"_path":261,"children":262},"前端八股文","/frontend-endorsement",[263,274],{"title":264,"_path":265,"children":266},"构建工具","/frontend-endorsement/build-tools",[267],{"title":268,"_path":269,"children":270},"Webpack","/frontend-endorsement/build-tools/webpack",[271],{"title":272,"_path":273},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":275,"_path":276,"children":277},"Html","/frontend-endorsement/html",[278,281,284],{"title":279,"_path":280},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":282,"_path":283},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":285,"_path":286},"离线存储","/frontend-endorsement/html/offline-storage",{"title":288,"_path":289,"children":290},"前端代码考核","/frontend-code-assessment",[291,340,424],{"title":292,"_path":293,"children":294},"源码实现","/frontend-code-assessment/source",[295,320,333],{"title":296,"_path":297,"children":298},"原生 api","/frontend-code-assessment/source/native-api",[299,302,305,308,311,314,317],{"title":300,"_path":301},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":303,"_path":304},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":306,"_path":307},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":309,"_path":310},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":312,"_path":313},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":315,"_path":316},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":318,"_path":319},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":321,"_path":322,"children":323},"数组 Array","/frontend-code-assessment/source/array",[324,327,330],{"title":325,"_path":326},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":328,"_path":329},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":331,"_path":332},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":334,"_path":335,"children":336},"字符串 String","/frontend-code-assessment/source/string",[337],{"title":338,"_path":339},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":341,"_path":342,"children":343},"业务场景","/frontend-code-assessment/scene",[344,366,373,376,379,382,385,388,391,394,397,400,403,406,409,412,415,418,421],{"title":345,"_path":346,"children":347},"Promise","/frontend-code-assessment/scene/promise",[348,351,354,357,360,363],{"title":349,"_path":350},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":352,"_path":353},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":355,"_path":356},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":358,"_path":359},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":361,"_path":362},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":364,"_path":365},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":367,"_path":368,"children":369},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[370],{"title":371,"_path":372},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":374,"_path":375},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":377,"_path":378},"倒计时","/frontend-code-assessment/scene/countdown",{"title":380,"_path":381},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":383,"_path":384},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":386,"_path":387},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":389,"_path":390},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":392,"_path":393},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":395,"_path":396},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":398,"_path":399},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":401,"_path":402},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":404,"_path":405},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":407,"_path":408},"随机数","/frontend-code-assessment/scene/random-number",{"title":410,"_path":411},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":413,"_path":414},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":416,"_path":417},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":419,"_path":420},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":422,"_path":423},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":425,"_path":426,"children":427},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[428],{"title":429,"_path":430},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union",{"title":432,"_path":433,"children":434},"项目","/pro",[435],{"title":436,"_path":437},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store",{"title":439,"_path":440,"children":441},"后端语言","/backend-languages",[442],{"title":443,"_path":444,"children":445},"Python","/backend-languages/python",[446,449],{"title":447,"_path":448},"基础","/backend-languages/python/base",{"title":450,"_path":451},"函数","/backend-languages/python/function",{"_path":228,"_dir":453,"_draft":454,"_partial":454,"_locale":455,"title":227,"description":456,"url":457,"body":458,"_type":1352,"_id":1353,"_source":1354,"_file":1355,"_extension":1356},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":459,"children":460,"toc":1346},"root",[461,468,473,478,483,488,493,532,537,568,573,604,609,624,630,635,641,1340],{"type":462,"tag":463,"props":464,"children":465},"element","p",{},[466],{"type":467,"value":456},"text",{"type":462,"tag":463,"props":469,"children":470},{},[471],{"type":467,"value":472},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":462,"tag":463,"props":474,"children":475},{},[476],{"type":467,"value":477},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":462,"tag":463,"props":479,"children":480},{},[481],{"type":467,"value":482},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":462,"tag":463,"props":484,"children":485},{},[486],{"type":467,"value":487},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":462,"tag":463,"props":489,"children":490},{},[491],{"type":467,"value":492},"示例 1：",{"type":462,"tag":494,"props":495,"children":498},"pre",{"className":496,"code":497,"language":467,"meta":455,"style":455},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[499],{"type":462,"tag":500,"props":501,"children":502},"code",{"__ignoreMap":455},[503,514,523],{"type":462,"tag":504,"props":505,"children":508},"span",{"class":506,"line":507},"line",1,[509],{"type":462,"tag":504,"props":510,"children":511},{},[512],{"type":467,"value":513},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":462,"tag":504,"props":515,"children":517},{"class":506,"line":516},2,[518],{"type":462,"tag":504,"props":519,"children":520},{},[521],{"type":467,"value":522},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":462,"tag":504,"props":524,"children":526},{"class":506,"line":525},3,[527],{"type":462,"tag":504,"props":528,"children":529},{},[530],{"type":467,"value":531},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":462,"tag":463,"props":533,"children":534},{},[535],{"type":467,"value":536},"示例 2：",{"type":462,"tag":494,"props":538,"children":540},{"className":496,"code":539,"language":467,"meta":455,"style":455},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[541],{"type":462,"tag":500,"props":542,"children":543},{"__ignoreMap":455},[544,552,560],{"type":462,"tag":504,"props":545,"children":546},{"class":506,"line":507},[547],{"type":462,"tag":504,"props":548,"children":549},{},[550],{"type":467,"value":551},"输入：chars = [\"a\"]\n",{"type":462,"tag":504,"props":553,"children":554},{"class":506,"line":516},[555],{"type":462,"tag":504,"props":556,"children":557},{},[558],{"type":467,"value":559},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":462,"tag":504,"props":561,"children":562},{"class":506,"line":525},[563],{"type":462,"tag":504,"props":564,"children":565},{},[566],{"type":467,"value":567},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":462,"tag":463,"props":569,"children":570},{},[571],{"type":467,"value":572},"示例 3：",{"type":462,"tag":494,"props":574,"children":576},{"className":496,"code":575,"language":467,"meta":455,"style":455},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[577],{"type":462,"tag":500,"props":578,"children":579},{"__ignoreMap":455},[580,588,596],{"type":462,"tag":504,"props":581,"children":582},{"class":506,"line":507},[583],{"type":462,"tag":504,"props":584,"children":585},{},[586],{"type":467,"value":587},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":462,"tag":504,"props":589,"children":590},{"class":506,"line":516},[591],{"type":462,"tag":504,"props":592,"children":593},{},[594],{"type":467,"value":595},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":462,"tag":504,"props":597,"children":598},{"class":506,"line":525},[599],{"type":462,"tag":504,"props":600,"children":601},{},[602],{"type":467,"value":603},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":462,"tag":463,"props":605,"children":606},{},[607],{"type":467,"value":608},"提示：",{"type":462,"tag":610,"props":611,"children":612},"ul",{},[613,619],{"type":462,"tag":614,"props":615,"children":616},"li",{},[617],{"type":467,"value":618},"1 \u003C= chars.length \u003C= 2000",{"type":462,"tag":614,"props":620,"children":621},{},[622],{"type":467,"value":623},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":462,"tag":625,"props":626,"children":628},"h2",{"id":627},"解题思路",[629],{"type":467,"value":627},{"type":462,"tag":625,"props":631,"children":633},{"id":632},"实现",[634],{"type":467,"value":632},{"type":462,"tag":636,"props":637,"children":639},"h3",{"id":638},"双指针",[640],{"type":467,"value":638},{"type":462,"tag":494,"props":642,"children":646},{"className":643,"code":644,"language":645,"meta":455,"style":455},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[647],{"type":462,"tag":500,"props":648,"children":649},{"__ignoreMap":455},[650,659,685,702,711,755,796,824,859,886,896,928,982,1104,1125,1134,1152,1161,1169,1241,1287,1295,1303,1328],{"type":462,"tag":504,"props":651,"children":652},{"class":506,"line":507},[653],{"type":462,"tag":504,"props":654,"children":656},{"style":655},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[657],{"type":467,"value":658},"/**\n",{"type":462,"tag":504,"props":660,"children":661},{"class":506,"line":516},[662,667,673,679],{"type":462,"tag":504,"props":663,"children":664},{"style":655},[665],{"type":467,"value":666}," * ",{"type":462,"tag":504,"props":668,"children":670},{"style":669},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[671],{"type":467,"value":672},"@param",{"type":462,"tag":504,"props":674,"children":676},{"style":675},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[677],{"type":467,"value":678}," {character[]}",{"type":462,"tag":504,"props":680,"children":682},{"style":681},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[683],{"type":467,"value":684}," chars\n",{"type":462,"tag":504,"props":686,"children":687},{"class":506,"line":525},[688,692,697],{"type":462,"tag":504,"props":689,"children":690},{"style":655},[691],{"type":467,"value":666},{"type":462,"tag":504,"props":693,"children":694},{"style":669},[695],{"type":467,"value":696},"@return",{"type":462,"tag":504,"props":698,"children":699},{"style":675},[700],{"type":467,"value":701}," {number}\n",{"type":462,"tag":504,"props":703,"children":705},{"class":506,"line":704},4,[706],{"type":462,"tag":504,"props":707,"children":708},{"style":655},[709],{"type":467,"value":710}," */\n",{"type":462,"tag":504,"props":712,"children":714},{"class":506,"line":713},5,[715,721,727,733,738,744,750],{"type":462,"tag":504,"props":716,"children":718},{"style":717},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[719],{"type":467,"value":720},"var",{"type":462,"tag":504,"props":722,"children":724},{"style":723},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[725],{"type":467,"value":726}," compress",{"type":462,"tag":504,"props":728,"children":730},{"style":729},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[731],{"type":467,"value":732}," =",{"type":462,"tag":504,"props":734,"children":735},{"style":717},[736],{"type":467,"value":737}," function",{"type":462,"tag":504,"props":739,"children":741},{"style":740},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[742],{"type":467,"value":743}," (",{"type":462,"tag":504,"props":745,"children":747},{"style":746},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[748],{"type":467,"value":749},"chars",{"type":462,"tag":504,"props":751,"children":752},{"style":740},[753],{"type":467,"value":754},") {\n",{"type":462,"tag":504,"props":756,"children":758},{"class":506,"line":757},6,[759,764,770,774,779,785,790],{"type":462,"tag":504,"props":760,"children":761},{"style":717},[762],{"type":467,"value":763},"  const",{"type":462,"tag":504,"props":765,"children":767},{"style":766},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[768],{"type":467,"value":769}," len",{"type":462,"tag":504,"props":771,"children":772},{"style":729},[773],{"type":467,"value":732},{"type":462,"tag":504,"props":775,"children":776},{"style":766},[777],{"type":467,"value":778}," chars",{"type":462,"tag":504,"props":780,"children":782},{"style":781},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[783],{"type":467,"value":784},".",{"type":462,"tag":504,"props":786,"children":787},{"style":740},[788],{"type":467,"value":789},"length",{"type":462,"tag":504,"props":791,"children":793},{"style":792},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[794],{"type":467,"value":795},";\n",{"type":462,"tag":504,"props":797,"children":799},{"class":506,"line":798},7,[800,805,810,814,820],{"type":462,"tag":504,"props":801,"children":802},{"style":717},[803],{"type":467,"value":804},"  let",{"type":462,"tag":504,"props":806,"children":807},{"style":766},[808],{"type":467,"value":809}," i",{"type":462,"tag":504,"props":811,"children":812},{"style":729},[813],{"type":467,"value":732},{"type":462,"tag":504,"props":815,"children":817},{"style":816},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[818],{"type":467,"value":819}," 0",{"type":462,"tag":504,"props":821,"children":822},{"style":792},[823],{"type":467,"value":795},{"type":462,"tag":504,"props":825,"children":827},{"class":506,"line":826},8,[828,832,837,841,845,850,855],{"type":462,"tag":504,"props":829,"children":830},{"style":717},[831],{"type":467,"value":804},{"type":462,"tag":504,"props":833,"children":834},{"style":766},[835],{"type":467,"value":836}," j",{"type":462,"tag":504,"props":838,"children":839},{"style":729},[840],{"type":467,"value":732},{"type":462,"tag":504,"props":842,"children":843},{"style":766},[844],{"type":467,"value":809},{"type":462,"tag":504,"props":846,"children":847},{"style":729},[848],{"type":467,"value":849}," +",{"type":462,"tag":504,"props":851,"children":852},{"style":816},[853],{"type":467,"value":854}," 1",{"type":462,"tag":504,"props":856,"children":857},{"style":792},[858],{"type":467,"value":795},{"type":462,"tag":504,"props":860,"children":862},{"class":506,"line":861},9,[863,867,872,876,882],{"type":462,"tag":504,"props":864,"children":865},{"style":717},[866],{"type":467,"value":804},{"type":462,"tag":504,"props":868,"children":869},{"style":766},[870],{"type":467,"value":871}," s",{"type":462,"tag":504,"props":873,"children":874},{"style":729},[875],{"type":467,"value":732},{"type":462,"tag":504,"props":877,"children":879},{"style":878},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[880],{"type":467,"value":881}," \"\"",{"type":462,"tag":504,"props":883,"children":884},{"style":792},[885],{"type":467,"value":795},{"type":462,"tag":504,"props":887,"children":889},{"class":506,"line":888},10,[890],{"type":462,"tag":504,"props":891,"children":893},{"emptyLinePlaceholder":892},true,[894],{"type":467,"value":895},"\n",{"type":462,"tag":504,"props":897,"children":899},{"class":506,"line":898},11,[900,906,910,915,920,924],{"type":462,"tag":504,"props":901,"children":903},{"style":902},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[904],{"type":467,"value":905},"  while",{"type":462,"tag":504,"props":907,"children":908},{"style":740},[909],{"type":467,"value":743},{"type":462,"tag":504,"props":911,"children":912},{"style":766},[913],{"type":467,"value":914},"j",{"type":462,"tag":504,"props":916,"children":917},{"style":729},[918],{"type":467,"value":919}," \u003C=",{"type":462,"tag":504,"props":921,"children":922},{"style":766},[923],{"type":467,"value":769},{"type":462,"tag":504,"props":925,"children":926},{"style":740},[927],{"type":467,"value":754},{"type":462,"tag":504,"props":929,"children":931},{"class":506,"line":930},12,[932,937,941,945,950,955,960,965,969,973,977],{"type":462,"tag":504,"props":933,"children":934},{"style":902},[935],{"type":467,"value":936},"    if",{"type":462,"tag":504,"props":938,"children":939},{"style":740},[940],{"type":467,"value":743},{"type":462,"tag":504,"props":942,"children":943},{"style":766},[944],{"type":467,"value":749},{"type":462,"tag":504,"props":946,"children":947},{"style":740},[948],{"type":467,"value":949},"[",{"type":462,"tag":504,"props":951,"children":952},{"style":766},[953],{"type":467,"value":954},"i",{"type":462,"tag":504,"props":956,"children":957},{"style":740},[958],{"type":467,"value":959},"] ",{"type":462,"tag":504,"props":961,"children":962},{"style":729},[963],{"type":467,"value":964},"!==",{"type":462,"tag":504,"props":966,"children":967},{"style":766},[968],{"type":467,"value":778},{"type":462,"tag":504,"props":970,"children":971},{"style":740},[972],{"type":467,"value":949},{"type":462,"tag":504,"props":974,"children":975},{"style":766},[976],{"type":467,"value":914},{"type":462,"tag":504,"props":978,"children":979},{"style":740},[980],{"type":467,"value":981},"]) {\n",{"type":462,"tag":504,"props":983,"children":985},{"class":506,"line":984},13,[986,991,996,1000,1005,1009,1014,1018,1023,1028,1034,1038,1043,1047,1052,1057,1061,1065,1069,1074,1079,1084,1088,1092,1096,1100],{"type":462,"tag":504,"props":987,"children":988},{"style":766},[989],{"type":467,"value":990},"      s",{"type":462,"tag":504,"props":992,"children":993},{"style":729},[994],{"type":467,"value":995}," +=",{"type":462,"tag":504,"props":997,"children":998},{"style":766},[999],{"type":467,"value":836},{"type":462,"tag":504,"props":1001,"children":1002},{"style":729},[1003],{"type":467,"value":1004}," -",{"type":462,"tag":504,"props":1006,"children":1007},{"style":766},[1008],{"type":467,"value":809},{"type":462,"tag":504,"props":1010,"children":1011},{"style":729},[1012],{"type":467,"value":1013}," >",{"type":462,"tag":504,"props":1015,"children":1016},{"style":816},[1017],{"type":467,"value":854},{"type":462,"tag":504,"props":1019,"children":1020},{"style":729},[1021],{"type":467,"value":1022}," ?",{"type":462,"tag":504,"props":1024,"children":1025},{"style":878},[1026],{"type":467,"value":1027}," `",{"type":462,"tag":504,"props":1029,"children":1031},{"style":1030},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#FF8F40",[1032],{"type":467,"value":1033},"${",{"type":462,"tag":504,"props":1035,"children":1036},{"style":766},[1037],{"type":467,"value":749},{"type":462,"tag":504,"props":1039,"children":1041},{"style":1040},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#BFBDB6",[1042],{"type":467,"value":949},{"type":462,"tag":504,"props":1044,"children":1045},{"style":766},[1046],{"type":467,"value":954},{"type":462,"tag":504,"props":1048,"children":1049},{"style":1040},[1050],{"type":467,"value":1051},"]",{"type":462,"tag":504,"props":1053,"children":1054},{"style":1030},[1055],{"type":467,"value":1056},"}${",{"type":462,"tag":504,"props":1058,"children":1059},{"style":766},[1060],{"type":467,"value":914},{"type":462,"tag":504,"props":1062,"children":1063},{"style":729},[1064],{"type":467,"value":1004},{"type":462,"tag":504,"props":1066,"children":1067},{"style":766},[1068],{"type":467,"value":809},{"type":462,"tag":504,"props":1070,"children":1071},{"style":1030},[1072],{"type":467,"value":1073},"}",{"type":462,"tag":504,"props":1075,"children":1076},{"style":878},[1077],{"type":467,"value":1078},"`",{"type":462,"tag":504,"props":1080,"children":1081},{"style":729},[1082],{"type":467,"value":1083}," :",{"type":462,"tag":504,"props":1085,"children":1086},{"style":766},[1087],{"type":467,"value":778},{"type":462,"tag":504,"props":1089,"children":1090},{"style":740},[1091],{"type":467,"value":949},{"type":462,"tag":504,"props":1093,"children":1094},{"style":766},[1095],{"type":467,"value":954},{"type":462,"tag":504,"props":1097,"children":1098},{"style":740},[1099],{"type":467,"value":1051},{"type":462,"tag":504,"props":1101,"children":1102},{"style":792},[1103],{"type":467,"value":795},{"type":462,"tag":504,"props":1105,"children":1107},{"class":506,"line":1106},14,[1108,1113,1117,1121],{"type":462,"tag":504,"props":1109,"children":1110},{"style":766},[1111],{"type":467,"value":1112},"      i",{"type":462,"tag":504,"props":1114,"children":1115},{"style":729},[1116],{"type":467,"value":732},{"type":462,"tag":504,"props":1118,"children":1119},{"style":766},[1120],{"type":467,"value":836},{"type":462,"tag":504,"props":1122,"children":1123},{"style":792},[1124],{"type":467,"value":795},{"type":462,"tag":504,"props":1126,"children":1128},{"class":506,"line":1127},15,[1129],{"type":462,"tag":504,"props":1130,"children":1131},{"style":740},[1132],{"type":467,"value":1133},"    }\n",{"type":462,"tag":504,"props":1135,"children":1137},{"class":506,"line":1136},16,[1138,1143,1148],{"type":462,"tag":504,"props":1139,"children":1140},{"style":766},[1141],{"type":467,"value":1142},"    j",{"type":462,"tag":504,"props":1144,"children":1145},{"style":729},[1146],{"type":467,"value":1147},"++",{"type":462,"tag":504,"props":1149,"children":1150},{"style":792},[1151],{"type":467,"value":795},{"type":462,"tag":504,"props":1153,"children":1155},{"class":506,"line":1154},17,[1156],{"type":462,"tag":504,"props":1157,"children":1158},{"style":740},[1159],{"type":467,"value":1160},"  }\n",{"type":462,"tag":504,"props":1162,"children":1164},{"class":506,"line":1163},18,[1165],{"type":462,"tag":504,"props":1166,"children":1167},{"emptyLinePlaceholder":892},[1168],{"type":467,"value":895},{"type":462,"tag":504,"props":1170,"children":1172},{"class":506,"line":1171},19,[1173,1178,1182,1187,1191,1195,1199,1204,1208,1213,1217,1221,1225,1229,1233,1237],{"type":462,"tag":504,"props":1174,"children":1175},{"style":902},[1176],{"type":467,"value":1177},"  for",{"type":462,"tag":504,"props":1179,"children":1180},{"style":740},[1181],{"type":467,"value":743},{"type":462,"tag":504,"props":1183,"children":1184},{"style":717},[1185],{"type":467,"value":1186},"let",{"type":462,"tag":504,"props":1188,"children":1189},{"style":766},[1190],{"type":467,"value":809},{"type":462,"tag":504,"props":1192,"children":1193},{"style":729},[1194],{"type":467,"value":732},{"type":462,"tag":504,"props":1196,"children":1197},{"style":816},[1198],{"type":467,"value":819},{"type":462,"tag":504,"props":1200,"children":1201},{"style":792},[1202],{"type":467,"value":1203},";",{"type":462,"tag":504,"props":1205,"children":1206},{"style":766},[1207],{"type":467,"value":809},{"type":462,"tag":504,"props":1209,"children":1210},{"style":729},[1211],{"type":467,"value":1212}," \u003C",{"type":462,"tag":504,"props":1214,"children":1215},{"style":766},[1216],{"type":467,"value":871},{"type":462,"tag":504,"props":1218,"children":1219},{"style":781},[1220],{"type":467,"value":784},{"type":462,"tag":504,"props":1222,"children":1223},{"style":740},[1224],{"type":467,"value":789},{"type":462,"tag":504,"props":1226,"children":1227},{"style":792},[1228],{"type":467,"value":1203},{"type":462,"tag":504,"props":1230,"children":1231},{"style":766},[1232],{"type":467,"value":809},{"type":462,"tag":504,"props":1234,"children":1235},{"style":729},[1236],{"type":467,"value":1147},{"type":462,"tag":504,"props":1238,"children":1239},{"style":740},[1240],{"type":467,"value":754},{"type":462,"tag":504,"props":1242,"children":1244},{"class":506,"line":1243},20,[1245,1250,1254,1258,1262,1267,1271,1275,1279,1283],{"type":462,"tag":504,"props":1246,"children":1247},{"style":766},[1248],{"type":467,"value":1249},"    chars",{"type":462,"tag":504,"props":1251,"children":1252},{"style":740},[1253],{"type":467,"value":949},{"type":462,"tag":504,"props":1255,"children":1256},{"style":766},[1257],{"type":467,"value":954},{"type":462,"tag":504,"props":1259,"children":1260},{"style":740},[1261],{"type":467,"value":959},{"type":462,"tag":504,"props":1263,"children":1264},{"style":729},[1265],{"type":467,"value":1266},"=",{"type":462,"tag":504,"props":1268,"children":1269},{"style":766},[1270],{"type":467,"value":871},{"type":462,"tag":504,"props":1272,"children":1273},{"style":740},[1274],{"type":467,"value":949},{"type":462,"tag":504,"props":1276,"children":1277},{"style":766},[1278],{"type":467,"value":954},{"type":462,"tag":504,"props":1280,"children":1281},{"style":740},[1282],{"type":467,"value":1051},{"type":462,"tag":504,"props":1284,"children":1285},{"style":792},[1286],{"type":467,"value":795},{"type":462,"tag":504,"props":1288,"children":1290},{"class":506,"line":1289},21,[1291],{"type":462,"tag":504,"props":1292,"children":1293},{"style":740},[1294],{"type":467,"value":1160},{"type":462,"tag":504,"props":1296,"children":1298},{"class":506,"line":1297},22,[1299],{"type":462,"tag":504,"props":1300,"children":1301},{"emptyLinePlaceholder":892},[1302],{"type":467,"value":895},{"type":462,"tag":504,"props":1304,"children":1306},{"class":506,"line":1305},23,[1307,1312,1316,1320,1324],{"type":462,"tag":504,"props":1308,"children":1309},{"style":902},[1310],{"type":467,"value":1311},"  return",{"type":462,"tag":504,"props":1313,"children":1314},{"style":766},[1315],{"type":467,"value":871},{"type":462,"tag":504,"props":1317,"children":1318},{"style":781},[1319],{"type":467,"value":784},{"type":462,"tag":504,"props":1321,"children":1322},{"style":740},[1323],{"type":467,"value":789},{"type":462,"tag":504,"props":1325,"children":1326},{"style":792},[1327],{"type":467,"value":795},{"type":462,"tag":504,"props":1329,"children":1331},{"class":506,"line":1330},24,[1332,1336],{"type":462,"tag":504,"props":1333,"children":1334},{"style":740},[1335],{"type":467,"value":1073},{"type":462,"tag":504,"props":1337,"children":1338},{"style":792},[1339],{"type":467,"value":795},{"type":462,"tag":1341,"props":1342,"children":1343},"style",{},[1344],{"type":467,"value":1345},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":455,"searchDepth":713,"depth":713,"links":1347},[1348,1349],{"id":627,"depth":516,"text":627},{"id":632,"depth":516,"text":632,"children":1350},[1351],{"id":638,"depth":525,"text":638},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1358,1360],{"_path":225,"title":224,"description":1359},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":231,"title":230,"description":1361},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1713457425173]