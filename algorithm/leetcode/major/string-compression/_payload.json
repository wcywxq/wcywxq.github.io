[{"data":1,"prerenderedAt":1444},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":506,"/algorithm/leetcode/major/string-compression-surround":1439},[4,269,298,474,482,491],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":473},"代码考核","/code-assessment",[302,373,466],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367,370],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"获取通用类型","/code-assessment/source/get-generic-type",{"title":371,"_path":372},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":374,"_path":375,"children":376},"业务场景","/code-assessment/scene",[377,402,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463],{"title":378,"_path":379,"children":380},"Promise","/code-assessment/scene/promise",[381,384,387,390,393,396,399],{"title":382,"_path":383},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":385,"_path":386},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":388,"_path":389},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":391,"_path":392},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":394,"_path":395},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":397,"_path":398},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":400,"_path":401},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":403,"_path":404,"children":405},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[406,409],{"title":407,"_path":408},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":410,"_path":411},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":413,"_path":414},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":416,"_path":417},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":419,"_path":420},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":422,"_path":423},"倒计时","/code-assessment/scene/countdown",{"title":425,"_path":426},"日期格式化","/code-assessment/scene/date-format",{"title":428,"_path":429},"实现前端路由","/code-assessment/scene/frontend-route",{"title":431,"_path":432},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":434,"_path":435},"lodash.get","/code-assessment/scene/lodash-get",{"title":437,"_path":438},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":440,"_path":441},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":443,"_path":444},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":446,"_path":447},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":449,"_path":450},"随机数","/code-assessment/scene/random-number",{"title":452,"_path":453},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":455,"_path":456},"sku 算法实现","/code-assessment/scene/sku",{"title":458,"_path":459},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":461,"_path":462},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":464,"_path":465},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":467,"_path":468,"children":469},"Ts 类型挑战","/code-assessment/type-challeges",[470],{"title":471,"_path":472},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":475,"_path":476,"children":477,"icon":481},"项目","/project",[478],{"title":479,"_path":480},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":483,"_path":484,"children":485,"icon":490},"设计模式","/design-mode",[486,487],{"title":483,"_path":484},{"title":488,"_path":489},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":492,"_path":493,"children":494,"icon":505},"后端语言","/backend-languages",[495],{"title":496,"_path":497,"children":498},"Python","/backend-languages/python",[499,502],{"title":500,"_path":501},"基础","/backend-languages/python/base",{"title":503,"_path":504},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":237,"_dir":507,"_draft":508,"_partial":508,"_locale":509,"title":236,"description":510,"url":511,"body":512,"_type":1434,"_id":1435,"_source":1436,"_file":1437,"_extension":1438},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":513,"children":514,"toc":1428},"root",[515,522,527,532,537,542,547,586,591,622,627,658,663,678,684,689,695,1422],{"type":516,"tag":517,"props":518,"children":519},"element","p",{},[520],{"type":521,"value":510},"text",{"type":516,"tag":517,"props":523,"children":524},{},[525],{"type":521,"value":526},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":516,"tag":517,"props":528,"children":529},{},[530],{"type":521,"value":531},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":516,"tag":517,"props":533,"children":534},{},[535],{"type":521,"value":536},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":516,"tag":517,"props":538,"children":539},{},[540],{"type":521,"value":541},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":516,"tag":517,"props":543,"children":544},{},[545],{"type":521,"value":546},"示例 1：",{"type":516,"tag":548,"props":549,"children":552},"pre",{"className":550,"code":551,"language":521,"meta":509,"style":509},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[553],{"type":516,"tag":554,"props":555,"children":556},"code",{"__ignoreMap":509},[557,568,577],{"type":516,"tag":558,"props":559,"children":562},"span",{"class":560,"line":561},"line",1,[563],{"type":516,"tag":558,"props":564,"children":565},{},[566],{"type":521,"value":567},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":516,"tag":558,"props":569,"children":571},{"class":560,"line":570},2,[572],{"type":516,"tag":558,"props":573,"children":574},{},[575],{"type":521,"value":576},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":516,"tag":558,"props":578,"children":580},{"class":560,"line":579},3,[581],{"type":516,"tag":558,"props":582,"children":583},{},[584],{"type":521,"value":585},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":516,"tag":517,"props":587,"children":588},{},[589],{"type":521,"value":590},"示例 2：",{"type":516,"tag":548,"props":592,"children":594},{"className":550,"code":593,"language":521,"meta":509,"style":509},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[595],{"type":516,"tag":554,"props":596,"children":597},{"__ignoreMap":509},[598,606,614],{"type":516,"tag":558,"props":599,"children":600},{"class":560,"line":561},[601],{"type":516,"tag":558,"props":602,"children":603},{},[604],{"type":521,"value":605},"输入：chars = [\"a\"]\n",{"type":516,"tag":558,"props":607,"children":608},{"class":560,"line":570},[609],{"type":516,"tag":558,"props":610,"children":611},{},[612],{"type":521,"value":613},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":516,"tag":558,"props":615,"children":616},{"class":560,"line":579},[617],{"type":516,"tag":558,"props":618,"children":619},{},[620],{"type":521,"value":621},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":516,"tag":517,"props":623,"children":624},{},[625],{"type":521,"value":626},"示例 3：",{"type":516,"tag":548,"props":628,"children":630},{"className":550,"code":629,"language":521,"meta":509,"style":509},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[631],{"type":516,"tag":554,"props":632,"children":633},{"__ignoreMap":509},[634,642,650],{"type":516,"tag":558,"props":635,"children":636},{"class":560,"line":561},[637],{"type":516,"tag":558,"props":638,"children":639},{},[640],{"type":521,"value":641},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":516,"tag":558,"props":643,"children":644},{"class":560,"line":570},[645],{"type":516,"tag":558,"props":646,"children":647},{},[648],{"type":521,"value":649},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":516,"tag":558,"props":651,"children":652},{"class":560,"line":579},[653],{"type":516,"tag":558,"props":654,"children":655},{},[656],{"type":521,"value":657},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":516,"tag":517,"props":659,"children":660},{},[661],{"type":521,"value":662},"提示：",{"type":516,"tag":664,"props":665,"children":666},"ul",{},[667,673],{"type":516,"tag":668,"props":669,"children":670},"li",{},[671],{"type":521,"value":672},"1 \u003C= chars.length \u003C= 2000",{"type":516,"tag":668,"props":674,"children":675},{},[676],{"type":521,"value":677},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":516,"tag":679,"props":680,"children":682},"h2",{"id":681},"解题思路",[683],{"type":521,"value":681},{"type":516,"tag":679,"props":685,"children":687},{"id":686},"实现",[688],{"type":521,"value":686},{"type":516,"tag":690,"props":691,"children":693},"h3",{"id":692},"双指针",[694],{"type":521,"value":692},{"type":516,"tag":548,"props":696,"children":700},{"className":697,"code":698,"language":699,"meta":509,"style":509},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[701],{"type":516,"tag":554,"props":702,"children":703},{"__ignoreMap":509},[704,713,755,785,794,840,879,907,942,969,979,1014,1072,1190,1211,1220,1238,1247,1255,1331,1372,1380,1388,1413],{"type":516,"tag":558,"props":705,"children":706},{"class":560,"line":561},[707],{"type":516,"tag":558,"props":708,"children":710},{"style":709},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[711],{"type":521,"value":712},"/**\n",{"type":516,"tag":558,"props":714,"children":715},{"class":560,"line":570},[716,721,727,733,738,744,749],{"type":516,"tag":558,"props":717,"children":718},{"style":709},[719],{"type":521,"value":720}," * ",{"type":516,"tag":558,"props":722,"children":724},{"style":723},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[725],{"type":521,"value":726},"@",{"type":516,"tag":558,"props":728,"children":730},{"style":729},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[731],{"type":521,"value":732},"param",{"type":516,"tag":558,"props":734,"children":735},{"style":723},[736],{"type":521,"value":737}," {",{"type":516,"tag":558,"props":739,"children":741},{"style":740},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[742],{"type":521,"value":743},"character[]",{"type":516,"tag":558,"props":745,"children":746},{"style":723},[747],{"type":521,"value":748},"}",{"type":516,"tag":558,"props":750,"children":752},{"style":751},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[753],{"type":521,"value":754}," chars\n",{"type":516,"tag":558,"props":756,"children":757},{"class":560,"line":579},[758,762,766,771,775,780],{"type":516,"tag":558,"props":759,"children":760},{"style":709},[761],{"type":521,"value":720},{"type":516,"tag":558,"props":763,"children":764},{"style":723},[765],{"type":521,"value":726},{"type":516,"tag":558,"props":767,"children":768},{"style":729},[769],{"type":521,"value":770},"return",{"type":516,"tag":558,"props":772,"children":773},{"style":723},[774],{"type":521,"value":737},{"type":516,"tag":558,"props":776,"children":777},{"style":740},[778],{"type":521,"value":779},"number",{"type":516,"tag":558,"props":781,"children":782},{"style":723},[783],{"type":521,"value":784},"}\n",{"type":516,"tag":558,"props":786,"children":788},{"class":560,"line":787},4,[789],{"type":516,"tag":558,"props":790,"children":791},{"style":709},[792],{"type":521,"value":793}," */\n",{"type":516,"tag":558,"props":795,"children":797},{"class":560,"line":796},5,[798,804,810,815,820,825,830,835],{"type":516,"tag":558,"props":799,"children":801},{"style":800},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[802],{"type":521,"value":803},"var",{"type":516,"tag":558,"props":805,"children":807},{"style":806},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[808],{"type":521,"value":809}," compress",{"type":516,"tag":558,"props":811,"children":812},{"style":723},[813],{"type":521,"value":814}," =",{"type":516,"tag":558,"props":816,"children":817},{"style":800},[818],{"type":521,"value":819}," function",{"type":516,"tag":558,"props":821,"children":822},{"style":723},[823],{"type":521,"value":824}," (",{"type":516,"tag":558,"props":826,"children":827},{"style":751},[828],{"type":521,"value":829},"chars",{"type":516,"tag":558,"props":831,"children":832},{"style":723},[833],{"type":521,"value":834},")",{"type":516,"tag":558,"props":836,"children":837},{"style":723},[838],{"type":521,"value":839}," {\n",{"type":516,"tag":558,"props":841,"children":843},{"class":560,"line":842},6,[844,849,854,858,863,868,874],{"type":516,"tag":558,"props":845,"children":846},{"style":800},[847],{"type":521,"value":848},"  const",{"type":516,"tag":558,"props":850,"children":851},{"style":751},[852],{"type":521,"value":853}," len",{"type":516,"tag":558,"props":855,"children":856},{"style":723},[857],{"type":521,"value":814},{"type":516,"tag":558,"props":859,"children":860},{"style":751},[861],{"type":521,"value":862}," chars",{"type":516,"tag":558,"props":864,"children":865},{"style":723},[866],{"type":521,"value":867},".",{"type":516,"tag":558,"props":869,"children":871},{"style":870},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[872],{"type":521,"value":873},"length",{"type":516,"tag":558,"props":875,"children":876},{"style":723},[877],{"type":521,"value":878},";\n",{"type":516,"tag":558,"props":880,"children":882},{"class":560,"line":881},7,[883,888,893,897,903],{"type":516,"tag":558,"props":884,"children":885},{"style":800},[886],{"type":521,"value":887},"  let",{"type":516,"tag":558,"props":889,"children":890},{"style":751},[891],{"type":521,"value":892}," i",{"type":516,"tag":558,"props":894,"children":895},{"style":723},[896],{"type":521,"value":814},{"type":516,"tag":558,"props":898,"children":900},{"style":899},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[901],{"type":521,"value":902}," 0",{"type":516,"tag":558,"props":904,"children":905},{"style":723},[906],{"type":521,"value":878},{"type":516,"tag":558,"props":908,"children":910},{"class":560,"line":909},8,[911,915,920,924,928,933,938],{"type":516,"tag":558,"props":912,"children":913},{"style":800},[914],{"type":521,"value":887},{"type":516,"tag":558,"props":916,"children":917},{"style":751},[918],{"type":521,"value":919}," j",{"type":516,"tag":558,"props":921,"children":922},{"style":723},[923],{"type":521,"value":814},{"type":516,"tag":558,"props":925,"children":926},{"style":751},[927],{"type":521,"value":892},{"type":516,"tag":558,"props":929,"children":930},{"style":800},[931],{"type":521,"value":932}," +",{"type":516,"tag":558,"props":934,"children":935},{"style":899},[936],{"type":521,"value":937}," 1",{"type":516,"tag":558,"props":939,"children":940},{"style":723},[941],{"type":521,"value":878},{"type":516,"tag":558,"props":943,"children":945},{"class":560,"line":944},9,[946,950,955,959,965],{"type":516,"tag":558,"props":947,"children":948},{"style":800},[949],{"type":521,"value":887},{"type":516,"tag":558,"props":951,"children":952},{"style":751},[953],{"type":521,"value":954}," s",{"type":516,"tag":558,"props":956,"children":957},{"style":723},[958],{"type":521,"value":814},{"type":516,"tag":558,"props":960,"children":962},{"style":961},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[963],{"type":521,"value":964}," \"\"",{"type":516,"tag":558,"props":966,"children":967},{"style":723},[968],{"type":521,"value":878},{"type":516,"tag":558,"props":970,"children":972},{"class":560,"line":971},10,[973],{"type":516,"tag":558,"props":974,"children":976},{"emptyLinePlaceholder":975},true,[977],{"type":521,"value":978},"\n",{"type":516,"tag":558,"props":980,"children":982},{"class":560,"line":981},11,[983,988,992,997,1002,1006,1010],{"type":516,"tag":558,"props":984,"children":985},{"style":729},[986],{"type":521,"value":987},"  while",{"type":516,"tag":558,"props":989,"children":990},{"style":723},[991],{"type":521,"value":824},{"type":516,"tag":558,"props":993,"children":994},{"style":751},[995],{"type":521,"value":996},"j",{"type":516,"tag":558,"props":998,"children":999},{"style":723},[1000],{"type":521,"value":1001}," \u003C=",{"type":516,"tag":558,"props":1003,"children":1004},{"style":751},[1005],{"type":521,"value":853},{"type":516,"tag":558,"props":1007,"children":1008},{"style":723},[1009],{"type":521,"value":834},{"type":516,"tag":558,"props":1011,"children":1012},{"style":723},[1013],{"type":521,"value":839},{"type":516,"tag":558,"props":1015,"children":1017},{"class":560,"line":1016},12,[1018,1023,1027,1031,1036,1041,1046,1051,1055,1059,1063,1068],{"type":516,"tag":558,"props":1019,"children":1020},{"style":729},[1021],{"type":521,"value":1022},"    if",{"type":516,"tag":558,"props":1024,"children":1025},{"style":723},[1026],{"type":521,"value":824},{"type":516,"tag":558,"props":1028,"children":1029},{"style":751},[1030],{"type":521,"value":829},{"type":516,"tag":558,"props":1032,"children":1033},{"style":723},[1034],{"type":521,"value":1035},"[",{"type":516,"tag":558,"props":1037,"children":1038},{"style":751},[1039],{"type":521,"value":1040},"i",{"type":516,"tag":558,"props":1042,"children":1043},{"style":723},[1044],{"type":521,"value":1045},"]",{"type":516,"tag":558,"props":1047,"children":1048},{"style":800},[1049],{"type":521,"value":1050}," !==",{"type":516,"tag":558,"props":1052,"children":1053},{"style":751},[1054],{"type":521,"value":862},{"type":516,"tag":558,"props":1056,"children":1057},{"style":723},[1058],{"type":521,"value":1035},{"type":516,"tag":558,"props":1060,"children":1061},{"style":751},[1062],{"type":521,"value":996},{"type":516,"tag":558,"props":1064,"children":1065},{"style":723},[1066],{"type":521,"value":1067},"])",{"type":516,"tag":558,"props":1069,"children":1070},{"style":723},[1071],{"type":521,"value":839},{"type":516,"tag":558,"props":1073,"children":1075},{"class":560,"line":1074},13,[1076,1081,1086,1090,1095,1099,1104,1108,1113,1118,1123,1128,1132,1136,1140,1145,1150,1155,1159,1163,1168,1173,1177,1181,1185],{"type":516,"tag":558,"props":1077,"children":1078},{"style":751},[1079],{"type":521,"value":1080},"      s",{"type":516,"tag":558,"props":1082,"children":1083},{"style":800},[1084],{"type":521,"value":1085}," +=",{"type":516,"tag":558,"props":1087,"children":1088},{"style":751},[1089],{"type":521,"value":919},{"type":516,"tag":558,"props":1091,"children":1092},{"style":800},[1093],{"type":521,"value":1094}," -",{"type":516,"tag":558,"props":1096,"children":1097},{"style":751},[1098],{"type":521,"value":892},{"type":516,"tag":558,"props":1100,"children":1101},{"style":723},[1102],{"type":521,"value":1103}," >",{"type":516,"tag":558,"props":1105,"children":1106},{"style":899},[1107],{"type":521,"value":937},{"type":516,"tag":558,"props":1109,"children":1110},{"style":800},[1111],{"type":521,"value":1112}," ?",{"type":516,"tag":558,"props":1114,"children":1115},{"style":961},[1116],{"type":521,"value":1117}," `",{"type":516,"tag":558,"props":1119,"children":1120},{"style":723},[1121],{"type":521,"value":1122},"${",{"type":516,"tag":558,"props":1124,"children":1126},{"style":1125},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1127],{"type":521,"value":829},{"type":516,"tag":558,"props":1129,"children":1130},{"style":723},[1131],{"type":521,"value":1035},{"type":516,"tag":558,"props":1133,"children":1134},{"style":1125},[1135],{"type":521,"value":1040},{"type":516,"tag":558,"props":1137,"children":1138},{"style":723},[1139],{"type":521,"value":1045},{"type":516,"tag":558,"props":1141,"children":1142},{"style":723},[1143],{"type":521,"value":1144},"}${",{"type":516,"tag":558,"props":1146,"children":1147},{"style":1125},[1148],{"type":521,"value":1149},"j ",{"type":516,"tag":558,"props":1151,"children":1152},{"style":800},[1153],{"type":521,"value":1154},"-",{"type":516,"tag":558,"props":1156,"children":1157},{"style":1125},[1158],{"type":521,"value":892},{"type":516,"tag":558,"props":1160,"children":1161},{"style":723},[1162],{"type":521,"value":748},{"type":516,"tag":558,"props":1164,"children":1165},{"style":961},[1166],{"type":521,"value":1167},"`",{"type":516,"tag":558,"props":1169,"children":1170},{"style":800},[1171],{"type":521,"value":1172}," :",{"type":516,"tag":558,"props":1174,"children":1175},{"style":751},[1176],{"type":521,"value":862},{"type":516,"tag":558,"props":1178,"children":1179},{"style":723},[1180],{"type":521,"value":1035},{"type":516,"tag":558,"props":1182,"children":1183},{"style":751},[1184],{"type":521,"value":1040},{"type":516,"tag":558,"props":1186,"children":1187},{"style":723},[1188],{"type":521,"value":1189},"];\n",{"type":516,"tag":558,"props":1191,"children":1193},{"class":560,"line":1192},14,[1194,1199,1203,1207],{"type":516,"tag":558,"props":1195,"children":1196},{"style":751},[1197],{"type":521,"value":1198},"      i",{"type":516,"tag":558,"props":1200,"children":1201},{"style":723},[1202],{"type":521,"value":814},{"type":516,"tag":558,"props":1204,"children":1205},{"style":751},[1206],{"type":521,"value":919},{"type":516,"tag":558,"props":1208,"children":1209},{"style":723},[1210],{"type":521,"value":878},{"type":516,"tag":558,"props":1212,"children":1214},{"class":560,"line":1213},15,[1215],{"type":516,"tag":558,"props":1216,"children":1217},{"style":723},[1218],{"type":521,"value":1219},"    }\n",{"type":516,"tag":558,"props":1221,"children":1223},{"class":560,"line":1222},16,[1224,1229,1234],{"type":516,"tag":558,"props":1225,"children":1226},{"style":751},[1227],{"type":521,"value":1228},"    j",{"type":516,"tag":558,"props":1230,"children":1231},{"style":800},[1232],{"type":521,"value":1233},"++",{"type":516,"tag":558,"props":1235,"children":1236},{"style":723},[1237],{"type":521,"value":878},{"type":516,"tag":558,"props":1239,"children":1241},{"class":560,"line":1240},17,[1242],{"type":516,"tag":558,"props":1243,"children":1244},{"style":723},[1245],{"type":521,"value":1246},"  }\n",{"type":516,"tag":558,"props":1248,"children":1250},{"class":560,"line":1249},18,[1251],{"type":516,"tag":558,"props":1252,"children":1253},{"emptyLinePlaceholder":975},[1254],{"type":521,"value":978},{"type":516,"tag":558,"props":1256,"children":1258},{"class":560,"line":1257},19,[1259,1264,1268,1273,1277,1281,1285,1290,1294,1299,1303,1307,1311,1315,1319,1323,1327],{"type":516,"tag":558,"props":1260,"children":1261},{"style":729},[1262],{"type":521,"value":1263},"  for",{"type":516,"tag":558,"props":1265,"children":1266},{"style":723},[1267],{"type":521,"value":824},{"type":516,"tag":558,"props":1269,"children":1270},{"style":800},[1271],{"type":521,"value":1272},"let",{"type":516,"tag":558,"props":1274,"children":1275},{"style":751},[1276],{"type":521,"value":892},{"type":516,"tag":558,"props":1278,"children":1279},{"style":723},[1280],{"type":521,"value":814},{"type":516,"tag":558,"props":1282,"children":1283},{"style":899},[1284],{"type":521,"value":902},{"type":516,"tag":558,"props":1286,"children":1287},{"style":723},[1288],{"type":521,"value":1289},";",{"type":516,"tag":558,"props":1291,"children":1292},{"style":751},[1293],{"type":521,"value":892},{"type":516,"tag":558,"props":1295,"children":1296},{"style":723},[1297],{"type":521,"value":1298}," \u003C",{"type":516,"tag":558,"props":1300,"children":1301},{"style":751},[1302],{"type":521,"value":954},{"type":516,"tag":558,"props":1304,"children":1305},{"style":723},[1306],{"type":521,"value":867},{"type":516,"tag":558,"props":1308,"children":1309},{"style":870},[1310],{"type":521,"value":873},{"type":516,"tag":558,"props":1312,"children":1313},{"style":723},[1314],{"type":521,"value":1289},{"type":516,"tag":558,"props":1316,"children":1317},{"style":751},[1318],{"type":521,"value":892},{"type":516,"tag":558,"props":1320,"children":1321},{"style":800},[1322],{"type":521,"value":1233},{"type":516,"tag":558,"props":1324,"children":1325},{"style":723},[1326],{"type":521,"value":834},{"type":516,"tag":558,"props":1328,"children":1329},{"style":723},[1330],{"type":521,"value":839},{"type":516,"tag":558,"props":1332,"children":1334},{"class":560,"line":1333},20,[1335,1340,1344,1348,1352,1356,1360,1364,1368],{"type":516,"tag":558,"props":1336,"children":1337},{"style":751},[1338],{"type":521,"value":1339},"    chars",{"type":516,"tag":558,"props":1341,"children":1342},{"style":723},[1343],{"type":521,"value":1035},{"type":516,"tag":558,"props":1345,"children":1346},{"style":751},[1347],{"type":521,"value":1040},{"type":516,"tag":558,"props":1349,"children":1350},{"style":723},[1351],{"type":521,"value":1045},{"type":516,"tag":558,"props":1353,"children":1354},{"style":723},[1355],{"type":521,"value":814},{"type":516,"tag":558,"props":1357,"children":1358},{"style":751},[1359],{"type":521,"value":954},{"type":516,"tag":558,"props":1361,"children":1362},{"style":723},[1363],{"type":521,"value":1035},{"type":516,"tag":558,"props":1365,"children":1366},{"style":751},[1367],{"type":521,"value":1040},{"type":516,"tag":558,"props":1369,"children":1370},{"style":723},[1371],{"type":521,"value":1189},{"type":516,"tag":558,"props":1373,"children":1375},{"class":560,"line":1374},21,[1376],{"type":516,"tag":558,"props":1377,"children":1378},{"style":723},[1379],{"type":521,"value":1246},{"type":516,"tag":558,"props":1381,"children":1383},{"class":560,"line":1382},22,[1384],{"type":516,"tag":558,"props":1385,"children":1386},{"emptyLinePlaceholder":975},[1387],{"type":521,"value":978},{"type":516,"tag":558,"props":1389,"children":1391},{"class":560,"line":1390},23,[1392,1397,1401,1405,1409],{"type":516,"tag":558,"props":1393,"children":1394},{"style":729},[1395],{"type":521,"value":1396},"  return",{"type":516,"tag":558,"props":1398,"children":1399},{"style":751},[1400],{"type":521,"value":954},{"type":516,"tag":558,"props":1402,"children":1403},{"style":723},[1404],{"type":521,"value":867},{"type":516,"tag":558,"props":1406,"children":1407},{"style":870},[1408],{"type":521,"value":873},{"type":516,"tag":558,"props":1410,"children":1411},{"style":723},[1412],{"type":521,"value":878},{"type":516,"tag":558,"props":1414,"children":1416},{"class":560,"line":1415},24,[1417],{"type":516,"tag":558,"props":1418,"children":1419},{"style":723},[1420],{"type":521,"value":1421},"};\n",{"type":516,"tag":1423,"props":1424,"children":1425},"style",{},[1426],{"type":521,"value":1427},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":509,"searchDepth":796,"depth":796,"links":1429},[1430,1431],{"id":681,"depth":570,"text":681},{"id":686,"depth":570,"text":686,"children":1432},[1433],{"id":692,"depth":579,"text":692},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1440,1442],{"_path":234,"title":233,"description":1441},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":240,"title":239,"description":1443},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1714058128790]