[{"data":1,"prerenderedAt":1367},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":457,"/algorithm/leetcode/major/string-compression-surround":1362},[4,260,289,434,442],{"title":5,"_path":6,"children":7,"icon":259},"算法","/algorithm",[8,22],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24,"children":25},"Leetcode 力扣","/algorithm/leetcode",[26,32,45],{"title":27,"_path":28,"children":29},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[30],{"title":31,"_path":28},"刷题索引",{"title":33,"_path":34,"children":35},"剑指 offer","/algorithm/leetcode/sword-ofter",[36,39,42],{"title":37,"_path":38},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":40,"_path":41},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":43,"_path":44},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":46,"_path":47,"children":48},"主题单","/algorithm/leetcode/major",[49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256],{"title":50,"_path":51},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":53,"_path":54},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":56,"_path":57},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":59,"_path":60},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":62,"_path":63},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":65,"_path":66},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":68,"_path":69},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":71,"_path":72},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":74,"_path":75},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":77,"_path":78},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":80,"_path":81},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":83,"_path":84},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":86,"_path":87},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":89,"_path":90},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":92,"_path":93},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":95,"_path":96},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":98,"_path":99},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":101,"_path":102},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":104,"_path":105},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":107,"_path":108},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":110,"_path":111},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":113,"_path":114},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":116,"_path":117},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":119,"_path":120},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":122,"_path":123},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":125,"_path":126},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":128,"_path":129},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":131,"_path":132},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":134,"_path":135},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":137,"_path":138},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":140,"_path":141},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":143,"_path":144},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":146,"_path":147},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":149,"_path":150},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":152,"_path":153},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":155,"_path":156},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":158,"_path":159},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":161,"_path":162},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":164,"_path":165},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":167,"_path":168},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":170,"_path":171},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":173,"_path":174},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":176,"_path":177},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":179,"_path":180},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":182,"_path":183},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":185,"_path":186},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":188,"_path":189},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":191,"_path":192},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":194,"_path":195},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":197,"_path":198},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":200,"_path":201},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":203,"_path":204},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":206,"_path":207},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":209,"_path":210},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":212,"_path":213},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":215,"_path":216},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":218,"_path":219},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":221,"_path":222},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":224,"_path":225},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":227,"_path":228},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":230,"_path":231},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":233,"_path":234},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":236,"_path":237},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":239,"_path":240},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":242,"_path":243},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":245,"_path":246},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":248,"_path":249},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":251,"_path":252},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":254,"_path":255},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":257,"_path":258},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":261,"_path":262,"children":263,"icon":288},"前端八股文","/frontend-endorsement",[264,275],{"title":265,"_path":266,"children":267},"构建工具","/frontend-endorsement/build-tools",[268],{"title":269,"_path":270,"children":271},"Webpack","/frontend-endorsement/build-tools/webpack",[272],{"title":273,"_path":274},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":276,"_path":277,"children":278},"Html","/frontend-endorsement/html",[279,282,285],{"title":280,"_path":281},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":283,"_path":284},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":286,"_path":287},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":290,"_path":291,"children":292,"icon":433},"前端代码考核","/frontend-code-assessment",[293,342,426],{"title":294,"_path":295,"children":296},"源码实现","/frontend-code-assessment/source",[297,322,335],{"title":298,"_path":299,"children":300},"原生 api","/frontend-code-assessment/source/native-api",[301,304,307,310,313,316,319],{"title":302,"_path":303},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":305,"_path":306},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":308,"_path":309},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":311,"_path":312},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":314,"_path":315},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":317,"_path":318},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":320,"_path":321},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":323,"_path":324,"children":325},"数组 Array","/frontend-code-assessment/source/array",[326,329,332],{"title":327,"_path":328},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":330,"_path":331},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":333,"_path":334},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":336,"_path":337,"children":338},"字符串 String","/frontend-code-assessment/source/string",[339],{"title":340,"_path":341},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":343,"_path":344,"children":345},"业务场景","/frontend-code-assessment/scene",[346,368,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423],{"title":347,"_path":348,"children":349},"Promise","/frontend-code-assessment/scene/promise",[350,353,356,359,362,365],{"title":351,"_path":352},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":354,"_path":355},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":357,"_path":358},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":360,"_path":361},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":363,"_path":364},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":366,"_path":367},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":369,"_path":370,"children":371},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[372],{"title":373,"_path":374},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":376,"_path":377},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":379,"_path":380},"倒计时","/frontend-code-assessment/scene/countdown",{"title":382,"_path":383},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":385,"_path":386},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":388,"_path":389},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":391,"_path":392},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":394,"_path":395},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":397,"_path":398},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":400,"_path":401},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":403,"_path":404},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":406,"_path":407},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":409,"_path":410},"随机数","/frontend-code-assessment/scene/random-number",{"title":412,"_path":413},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":415,"_path":416},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":418,"_path":419},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":421,"_path":422},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":424,"_path":425},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":427,"_path":428,"children":429},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[430],{"title":431,"_path":432},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":435,"_path":436,"children":437,"icon":441},"项目","/pro",[438],{"title":439,"_path":440},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":443,"_path":444,"children":445,"icon":456},"后端语言","/backend-languages",[446],{"title":447,"_path":448,"children":449},"Python","/backend-languages/python",[450,453],{"title":451,"_path":452},"基础","/backend-languages/python/base",{"title":454,"_path":455},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":228,"_dir":458,"_draft":459,"_partial":459,"_locale":460,"title":227,"description":461,"url":462,"body":463,"_type":1357,"_id":1358,"_source":1359,"_file":1360,"_extension":1361},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":464,"children":465,"toc":1351},"root",[466,473,478,483,488,493,498,537,542,573,578,609,614,629,635,640,646,1345],{"type":467,"tag":468,"props":469,"children":470},"element","p",{},[471],{"type":472,"value":461},"text",{"type":467,"tag":468,"props":474,"children":475},{},[476],{"type":472,"value":477},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":467,"tag":468,"props":479,"children":480},{},[481],{"type":472,"value":482},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":467,"tag":468,"props":484,"children":485},{},[486],{"type":472,"value":487},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":467,"tag":468,"props":489,"children":490},{},[491],{"type":472,"value":492},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":467,"tag":468,"props":494,"children":495},{},[496],{"type":472,"value":497},"示例 1：",{"type":467,"tag":499,"props":500,"children":503},"pre",{"className":501,"code":502,"language":472,"meta":460,"style":460},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[504],{"type":467,"tag":505,"props":506,"children":507},"code",{"__ignoreMap":460},[508,519,528],{"type":467,"tag":509,"props":510,"children":513},"span",{"class":511,"line":512},"line",1,[514],{"type":467,"tag":509,"props":515,"children":516},{},[517],{"type":472,"value":518},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":467,"tag":509,"props":520,"children":522},{"class":511,"line":521},2,[523],{"type":467,"tag":509,"props":524,"children":525},{},[526],{"type":472,"value":527},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":467,"tag":509,"props":529,"children":531},{"class":511,"line":530},3,[532],{"type":467,"tag":509,"props":533,"children":534},{},[535],{"type":472,"value":536},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":467,"tag":468,"props":538,"children":539},{},[540],{"type":472,"value":541},"示例 2：",{"type":467,"tag":499,"props":543,"children":545},{"className":501,"code":544,"language":472,"meta":460,"style":460},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[546],{"type":467,"tag":505,"props":547,"children":548},{"__ignoreMap":460},[549,557,565],{"type":467,"tag":509,"props":550,"children":551},{"class":511,"line":512},[552],{"type":467,"tag":509,"props":553,"children":554},{},[555],{"type":472,"value":556},"输入：chars = [\"a\"]\n",{"type":467,"tag":509,"props":558,"children":559},{"class":511,"line":521},[560],{"type":467,"tag":509,"props":561,"children":562},{},[563],{"type":472,"value":564},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":467,"tag":509,"props":566,"children":567},{"class":511,"line":530},[568],{"type":467,"tag":509,"props":569,"children":570},{},[571],{"type":472,"value":572},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":467,"tag":468,"props":574,"children":575},{},[576],{"type":472,"value":577},"示例 3：",{"type":467,"tag":499,"props":579,"children":581},{"className":501,"code":580,"language":472,"meta":460,"style":460},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[582],{"type":467,"tag":505,"props":583,"children":584},{"__ignoreMap":460},[585,593,601],{"type":467,"tag":509,"props":586,"children":587},{"class":511,"line":512},[588],{"type":467,"tag":509,"props":589,"children":590},{},[591],{"type":472,"value":592},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":467,"tag":509,"props":594,"children":595},{"class":511,"line":521},[596],{"type":467,"tag":509,"props":597,"children":598},{},[599],{"type":472,"value":600},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":467,"tag":509,"props":602,"children":603},{"class":511,"line":530},[604],{"type":467,"tag":509,"props":605,"children":606},{},[607],{"type":472,"value":608},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":467,"tag":468,"props":610,"children":611},{},[612],{"type":472,"value":613},"提示：",{"type":467,"tag":615,"props":616,"children":617},"ul",{},[618,624],{"type":467,"tag":619,"props":620,"children":621},"li",{},[622],{"type":472,"value":623},"1 \u003C= chars.length \u003C= 2000",{"type":467,"tag":619,"props":625,"children":626},{},[627],{"type":472,"value":628},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":467,"tag":630,"props":631,"children":633},"h2",{"id":632},"解题思路",[634],{"type":472,"value":632},{"type":467,"tag":630,"props":636,"children":638},{"id":637},"实现",[639],{"type":472,"value":637},{"type":467,"tag":641,"props":642,"children":644},"h3",{"id":643},"双指针",[645],{"type":472,"value":643},{"type":467,"tag":499,"props":647,"children":651},{"className":648,"code":649,"language":650,"meta":460,"style":460},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[652],{"type":467,"tag":505,"props":653,"children":654},{"__ignoreMap":460},[655,664,690,707,716,760,801,829,864,891,901,933,987,1109,1130,1139,1157,1166,1174,1246,1292,1300,1308,1333],{"type":467,"tag":509,"props":656,"children":657},{"class":511,"line":512},[658],{"type":467,"tag":509,"props":659,"children":661},{"style":660},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[662],{"type":472,"value":663},"/**\n",{"type":467,"tag":509,"props":665,"children":666},{"class":511,"line":521},[667,672,678,684],{"type":467,"tag":509,"props":668,"children":669},{"style":660},[670],{"type":472,"value":671}," * ",{"type":467,"tag":509,"props":673,"children":675},{"style":674},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[676],{"type":472,"value":677},"@param",{"type":467,"tag":509,"props":679,"children":681},{"style":680},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[682],{"type":472,"value":683}," {character[]}",{"type":467,"tag":509,"props":685,"children":687},{"style":686},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[688],{"type":472,"value":689}," chars\n",{"type":467,"tag":509,"props":691,"children":692},{"class":511,"line":530},[693,697,702],{"type":467,"tag":509,"props":694,"children":695},{"style":660},[696],{"type":472,"value":671},{"type":467,"tag":509,"props":698,"children":699},{"style":674},[700],{"type":472,"value":701},"@return",{"type":467,"tag":509,"props":703,"children":704},{"style":680},[705],{"type":472,"value":706}," {number}\n",{"type":467,"tag":509,"props":708,"children":710},{"class":511,"line":709},4,[711],{"type":467,"tag":509,"props":712,"children":713},{"style":660},[714],{"type":472,"value":715}," */\n",{"type":467,"tag":509,"props":717,"children":719},{"class":511,"line":718},5,[720,726,732,738,743,749,755],{"type":467,"tag":509,"props":721,"children":723},{"style":722},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[724],{"type":472,"value":725},"var",{"type":467,"tag":509,"props":727,"children":729},{"style":728},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[730],{"type":472,"value":731}," compress",{"type":467,"tag":509,"props":733,"children":735},{"style":734},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[736],{"type":472,"value":737}," =",{"type":467,"tag":509,"props":739,"children":740},{"style":722},[741],{"type":472,"value":742}," function",{"type":467,"tag":509,"props":744,"children":746},{"style":745},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[747],{"type":472,"value":748}," (",{"type":467,"tag":509,"props":750,"children":752},{"style":751},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[753],{"type":472,"value":754},"chars",{"type":467,"tag":509,"props":756,"children":757},{"style":745},[758],{"type":472,"value":759},") {\n",{"type":467,"tag":509,"props":761,"children":763},{"class":511,"line":762},6,[764,769,775,779,784,790,795],{"type":467,"tag":509,"props":765,"children":766},{"style":722},[767],{"type":472,"value":768},"  const",{"type":467,"tag":509,"props":770,"children":772},{"style":771},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[773],{"type":472,"value":774}," len",{"type":467,"tag":509,"props":776,"children":777},{"style":734},[778],{"type":472,"value":737},{"type":467,"tag":509,"props":780,"children":781},{"style":771},[782],{"type":472,"value":783}," chars",{"type":467,"tag":509,"props":785,"children":787},{"style":786},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[788],{"type":472,"value":789},".",{"type":467,"tag":509,"props":791,"children":792},{"style":745},[793],{"type":472,"value":794},"length",{"type":467,"tag":509,"props":796,"children":798},{"style":797},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[799],{"type":472,"value":800},";\n",{"type":467,"tag":509,"props":802,"children":804},{"class":511,"line":803},7,[805,810,815,819,825],{"type":467,"tag":509,"props":806,"children":807},{"style":722},[808],{"type":472,"value":809},"  let",{"type":467,"tag":509,"props":811,"children":812},{"style":771},[813],{"type":472,"value":814}," i",{"type":467,"tag":509,"props":816,"children":817},{"style":734},[818],{"type":472,"value":737},{"type":467,"tag":509,"props":820,"children":822},{"style":821},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[823],{"type":472,"value":824}," 0",{"type":467,"tag":509,"props":826,"children":827},{"style":797},[828],{"type":472,"value":800},{"type":467,"tag":509,"props":830,"children":832},{"class":511,"line":831},8,[833,837,842,846,850,855,860],{"type":467,"tag":509,"props":834,"children":835},{"style":722},[836],{"type":472,"value":809},{"type":467,"tag":509,"props":838,"children":839},{"style":771},[840],{"type":472,"value":841}," j",{"type":467,"tag":509,"props":843,"children":844},{"style":734},[845],{"type":472,"value":737},{"type":467,"tag":509,"props":847,"children":848},{"style":771},[849],{"type":472,"value":814},{"type":467,"tag":509,"props":851,"children":852},{"style":734},[853],{"type":472,"value":854}," +",{"type":467,"tag":509,"props":856,"children":857},{"style":821},[858],{"type":472,"value":859}," 1",{"type":467,"tag":509,"props":861,"children":862},{"style":797},[863],{"type":472,"value":800},{"type":467,"tag":509,"props":865,"children":867},{"class":511,"line":866},9,[868,872,877,881,887],{"type":467,"tag":509,"props":869,"children":870},{"style":722},[871],{"type":472,"value":809},{"type":467,"tag":509,"props":873,"children":874},{"style":771},[875],{"type":472,"value":876}," s",{"type":467,"tag":509,"props":878,"children":879},{"style":734},[880],{"type":472,"value":737},{"type":467,"tag":509,"props":882,"children":884},{"style":883},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[885],{"type":472,"value":886}," \"\"",{"type":467,"tag":509,"props":888,"children":889},{"style":797},[890],{"type":472,"value":800},{"type":467,"tag":509,"props":892,"children":894},{"class":511,"line":893},10,[895],{"type":467,"tag":509,"props":896,"children":898},{"emptyLinePlaceholder":897},true,[899],{"type":472,"value":900},"\n",{"type":467,"tag":509,"props":902,"children":904},{"class":511,"line":903},11,[905,911,915,920,925,929],{"type":467,"tag":509,"props":906,"children":908},{"style":907},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[909],{"type":472,"value":910},"  while",{"type":467,"tag":509,"props":912,"children":913},{"style":745},[914],{"type":472,"value":748},{"type":467,"tag":509,"props":916,"children":917},{"style":771},[918],{"type":472,"value":919},"j",{"type":467,"tag":509,"props":921,"children":922},{"style":734},[923],{"type":472,"value":924}," \u003C=",{"type":467,"tag":509,"props":926,"children":927},{"style":771},[928],{"type":472,"value":774},{"type":467,"tag":509,"props":930,"children":931},{"style":745},[932],{"type":472,"value":759},{"type":467,"tag":509,"props":934,"children":936},{"class":511,"line":935},12,[937,942,946,950,955,960,965,970,974,978,982],{"type":467,"tag":509,"props":938,"children":939},{"style":907},[940],{"type":472,"value":941},"    if",{"type":467,"tag":509,"props":943,"children":944},{"style":745},[945],{"type":472,"value":748},{"type":467,"tag":509,"props":947,"children":948},{"style":771},[949],{"type":472,"value":754},{"type":467,"tag":509,"props":951,"children":952},{"style":745},[953],{"type":472,"value":954},"[",{"type":467,"tag":509,"props":956,"children":957},{"style":771},[958],{"type":472,"value":959},"i",{"type":467,"tag":509,"props":961,"children":962},{"style":745},[963],{"type":472,"value":964},"] ",{"type":467,"tag":509,"props":966,"children":967},{"style":734},[968],{"type":472,"value":969},"!==",{"type":467,"tag":509,"props":971,"children":972},{"style":771},[973],{"type":472,"value":783},{"type":467,"tag":509,"props":975,"children":976},{"style":745},[977],{"type":472,"value":954},{"type":467,"tag":509,"props":979,"children":980},{"style":771},[981],{"type":472,"value":919},{"type":467,"tag":509,"props":983,"children":984},{"style":745},[985],{"type":472,"value":986},"]) {\n",{"type":467,"tag":509,"props":988,"children":990},{"class":511,"line":989},13,[991,996,1001,1005,1010,1014,1019,1023,1028,1033,1039,1043,1048,1052,1057,1062,1066,1070,1074,1079,1084,1089,1093,1097,1101,1105],{"type":467,"tag":509,"props":992,"children":993},{"style":771},[994],{"type":472,"value":995},"      s",{"type":467,"tag":509,"props":997,"children":998},{"style":734},[999],{"type":472,"value":1000}," +=",{"type":467,"tag":509,"props":1002,"children":1003},{"style":771},[1004],{"type":472,"value":841},{"type":467,"tag":509,"props":1006,"children":1007},{"style":734},[1008],{"type":472,"value":1009}," -",{"type":467,"tag":509,"props":1011,"children":1012},{"style":771},[1013],{"type":472,"value":814},{"type":467,"tag":509,"props":1015,"children":1016},{"style":734},[1017],{"type":472,"value":1018}," >",{"type":467,"tag":509,"props":1020,"children":1021},{"style":821},[1022],{"type":472,"value":859},{"type":467,"tag":509,"props":1024,"children":1025},{"style":734},[1026],{"type":472,"value":1027}," ?",{"type":467,"tag":509,"props":1029,"children":1030},{"style":883},[1031],{"type":472,"value":1032}," `",{"type":467,"tag":509,"props":1034,"children":1036},{"style":1035},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#FF8F40",[1037],{"type":472,"value":1038},"${",{"type":467,"tag":509,"props":1040,"children":1041},{"style":771},[1042],{"type":472,"value":754},{"type":467,"tag":509,"props":1044,"children":1046},{"style":1045},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#BFBDB6",[1047],{"type":472,"value":954},{"type":467,"tag":509,"props":1049,"children":1050},{"style":771},[1051],{"type":472,"value":959},{"type":467,"tag":509,"props":1053,"children":1054},{"style":1045},[1055],{"type":472,"value":1056},"]",{"type":467,"tag":509,"props":1058,"children":1059},{"style":1035},[1060],{"type":472,"value":1061},"}${",{"type":467,"tag":509,"props":1063,"children":1064},{"style":771},[1065],{"type":472,"value":919},{"type":467,"tag":509,"props":1067,"children":1068},{"style":734},[1069],{"type":472,"value":1009},{"type":467,"tag":509,"props":1071,"children":1072},{"style":771},[1073],{"type":472,"value":814},{"type":467,"tag":509,"props":1075,"children":1076},{"style":1035},[1077],{"type":472,"value":1078},"}",{"type":467,"tag":509,"props":1080,"children":1081},{"style":883},[1082],{"type":472,"value":1083},"`",{"type":467,"tag":509,"props":1085,"children":1086},{"style":734},[1087],{"type":472,"value":1088}," :",{"type":467,"tag":509,"props":1090,"children":1091},{"style":771},[1092],{"type":472,"value":783},{"type":467,"tag":509,"props":1094,"children":1095},{"style":745},[1096],{"type":472,"value":954},{"type":467,"tag":509,"props":1098,"children":1099},{"style":771},[1100],{"type":472,"value":959},{"type":467,"tag":509,"props":1102,"children":1103},{"style":745},[1104],{"type":472,"value":1056},{"type":467,"tag":509,"props":1106,"children":1107},{"style":797},[1108],{"type":472,"value":800},{"type":467,"tag":509,"props":1110,"children":1112},{"class":511,"line":1111},14,[1113,1118,1122,1126],{"type":467,"tag":509,"props":1114,"children":1115},{"style":771},[1116],{"type":472,"value":1117},"      i",{"type":467,"tag":509,"props":1119,"children":1120},{"style":734},[1121],{"type":472,"value":737},{"type":467,"tag":509,"props":1123,"children":1124},{"style":771},[1125],{"type":472,"value":841},{"type":467,"tag":509,"props":1127,"children":1128},{"style":797},[1129],{"type":472,"value":800},{"type":467,"tag":509,"props":1131,"children":1133},{"class":511,"line":1132},15,[1134],{"type":467,"tag":509,"props":1135,"children":1136},{"style":745},[1137],{"type":472,"value":1138},"    }\n",{"type":467,"tag":509,"props":1140,"children":1142},{"class":511,"line":1141},16,[1143,1148,1153],{"type":467,"tag":509,"props":1144,"children":1145},{"style":771},[1146],{"type":472,"value":1147},"    j",{"type":467,"tag":509,"props":1149,"children":1150},{"style":734},[1151],{"type":472,"value":1152},"++",{"type":467,"tag":509,"props":1154,"children":1155},{"style":797},[1156],{"type":472,"value":800},{"type":467,"tag":509,"props":1158,"children":1160},{"class":511,"line":1159},17,[1161],{"type":467,"tag":509,"props":1162,"children":1163},{"style":745},[1164],{"type":472,"value":1165},"  }\n",{"type":467,"tag":509,"props":1167,"children":1169},{"class":511,"line":1168},18,[1170],{"type":467,"tag":509,"props":1171,"children":1172},{"emptyLinePlaceholder":897},[1173],{"type":472,"value":900},{"type":467,"tag":509,"props":1175,"children":1177},{"class":511,"line":1176},19,[1178,1183,1187,1192,1196,1200,1204,1209,1213,1218,1222,1226,1230,1234,1238,1242],{"type":467,"tag":509,"props":1179,"children":1180},{"style":907},[1181],{"type":472,"value":1182},"  for",{"type":467,"tag":509,"props":1184,"children":1185},{"style":745},[1186],{"type":472,"value":748},{"type":467,"tag":509,"props":1188,"children":1189},{"style":722},[1190],{"type":472,"value":1191},"let",{"type":467,"tag":509,"props":1193,"children":1194},{"style":771},[1195],{"type":472,"value":814},{"type":467,"tag":509,"props":1197,"children":1198},{"style":734},[1199],{"type":472,"value":737},{"type":467,"tag":509,"props":1201,"children":1202},{"style":821},[1203],{"type":472,"value":824},{"type":467,"tag":509,"props":1205,"children":1206},{"style":797},[1207],{"type":472,"value":1208},";",{"type":467,"tag":509,"props":1210,"children":1211},{"style":771},[1212],{"type":472,"value":814},{"type":467,"tag":509,"props":1214,"children":1215},{"style":734},[1216],{"type":472,"value":1217}," \u003C",{"type":467,"tag":509,"props":1219,"children":1220},{"style":771},[1221],{"type":472,"value":876},{"type":467,"tag":509,"props":1223,"children":1224},{"style":786},[1225],{"type":472,"value":789},{"type":467,"tag":509,"props":1227,"children":1228},{"style":745},[1229],{"type":472,"value":794},{"type":467,"tag":509,"props":1231,"children":1232},{"style":797},[1233],{"type":472,"value":1208},{"type":467,"tag":509,"props":1235,"children":1236},{"style":771},[1237],{"type":472,"value":814},{"type":467,"tag":509,"props":1239,"children":1240},{"style":734},[1241],{"type":472,"value":1152},{"type":467,"tag":509,"props":1243,"children":1244},{"style":745},[1245],{"type":472,"value":759},{"type":467,"tag":509,"props":1247,"children":1249},{"class":511,"line":1248},20,[1250,1255,1259,1263,1267,1272,1276,1280,1284,1288],{"type":467,"tag":509,"props":1251,"children":1252},{"style":771},[1253],{"type":472,"value":1254},"    chars",{"type":467,"tag":509,"props":1256,"children":1257},{"style":745},[1258],{"type":472,"value":954},{"type":467,"tag":509,"props":1260,"children":1261},{"style":771},[1262],{"type":472,"value":959},{"type":467,"tag":509,"props":1264,"children":1265},{"style":745},[1266],{"type":472,"value":964},{"type":467,"tag":509,"props":1268,"children":1269},{"style":734},[1270],{"type":472,"value":1271},"=",{"type":467,"tag":509,"props":1273,"children":1274},{"style":771},[1275],{"type":472,"value":876},{"type":467,"tag":509,"props":1277,"children":1278},{"style":745},[1279],{"type":472,"value":954},{"type":467,"tag":509,"props":1281,"children":1282},{"style":771},[1283],{"type":472,"value":959},{"type":467,"tag":509,"props":1285,"children":1286},{"style":745},[1287],{"type":472,"value":1056},{"type":467,"tag":509,"props":1289,"children":1290},{"style":797},[1291],{"type":472,"value":800},{"type":467,"tag":509,"props":1293,"children":1295},{"class":511,"line":1294},21,[1296],{"type":467,"tag":509,"props":1297,"children":1298},{"style":745},[1299],{"type":472,"value":1165},{"type":467,"tag":509,"props":1301,"children":1303},{"class":511,"line":1302},22,[1304],{"type":467,"tag":509,"props":1305,"children":1306},{"emptyLinePlaceholder":897},[1307],{"type":472,"value":900},{"type":467,"tag":509,"props":1309,"children":1311},{"class":511,"line":1310},23,[1312,1317,1321,1325,1329],{"type":467,"tag":509,"props":1313,"children":1314},{"style":907},[1315],{"type":472,"value":1316},"  return",{"type":467,"tag":509,"props":1318,"children":1319},{"style":771},[1320],{"type":472,"value":876},{"type":467,"tag":509,"props":1322,"children":1323},{"style":786},[1324],{"type":472,"value":789},{"type":467,"tag":509,"props":1326,"children":1327},{"style":745},[1328],{"type":472,"value":794},{"type":467,"tag":509,"props":1330,"children":1331},{"style":797},[1332],{"type":472,"value":800},{"type":467,"tag":509,"props":1334,"children":1336},{"class":511,"line":1335},24,[1337,1341],{"type":467,"tag":509,"props":1338,"children":1339},{"style":745},[1340],{"type":472,"value":1078},{"type":467,"tag":509,"props":1342,"children":1343},{"style":797},[1344],{"type":472,"value":800},{"type":467,"tag":1346,"props":1347,"children":1348},"style",{},[1349],{"type":472,"value":1350},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":460,"searchDepth":718,"depth":718,"links":1352},[1353,1354],{"id":632,"depth":521,"text":632},{"id":637,"depth":521,"text":637,"children":1355},[1356],{"id":643,"depth":530,"text":643},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1363,1365],{"_path":225,"title":224,"description":1364},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":231,"title":230,"description":1366},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1713599624017]