[{"data":1,"prerenderedAt":1481},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":543,"/algorithm/leetcode/major/string-compression-surround":1476},[4,269,298,511,519,528],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":510},"代码考核","/code-assessment",[302,404,503],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":498,"_path":499},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":501,"_path":502},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":504,"_path":505,"children":506},"Ts 类型挑战","/code-assessment/type-challeges",[507],{"title":508,"_path":509},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":512,"_path":513,"children":514,"icon":518},"项目","/project",[515],{"title":516,"_path":517},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":520,"_path":521,"children":522,"icon":527},"设计模式","/design-mode",[523,524],{"title":520,"_path":521},{"title":525,"_path":526},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":529,"_path":530,"children":531,"icon":542},"后端语言","/backend-languages",[532],{"title":533,"_path":534,"children":535},"Python","/backend-languages/python",[536,539],{"title":537,"_path":538},"基础","/backend-languages/python/base",{"title":540,"_path":541},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":237,"_dir":544,"_draft":545,"_partial":545,"_locale":546,"title":236,"description":547,"url":548,"body":549,"_type":1471,"_id":1472,"_source":1473,"_file":1474,"_extension":1475},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":550,"children":551,"toc":1465},"root",[552,559,564,569,574,579,584,623,628,659,664,695,700,715,721,726,732,1459],{"type":553,"tag":554,"props":555,"children":556},"element","p",{},[557],{"type":558,"value":547},"text",{"type":553,"tag":554,"props":560,"children":561},{},[562],{"type":558,"value":563},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":553,"tag":554,"props":565,"children":566},{},[567],{"type":558,"value":568},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":553,"tag":554,"props":570,"children":571},{},[572],{"type":558,"value":573},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":553,"tag":554,"props":575,"children":576},{},[577],{"type":558,"value":578},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":553,"tag":554,"props":580,"children":581},{},[582],{"type":558,"value":583},"示例 1：",{"type":553,"tag":585,"props":586,"children":589},"pre",{"className":587,"code":588,"language":558,"meta":546,"style":546},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[590],{"type":553,"tag":591,"props":592,"children":593},"code",{"__ignoreMap":546},[594,605,614],{"type":553,"tag":595,"props":596,"children":599},"span",{"class":597,"line":598},"line",1,[600],{"type":553,"tag":595,"props":601,"children":602},{},[603],{"type":558,"value":604},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":553,"tag":595,"props":606,"children":608},{"class":597,"line":607},2,[609],{"type":553,"tag":595,"props":610,"children":611},{},[612],{"type":558,"value":613},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":553,"tag":595,"props":615,"children":617},{"class":597,"line":616},3,[618],{"type":553,"tag":595,"props":619,"children":620},{},[621],{"type":558,"value":622},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":553,"tag":554,"props":624,"children":625},{},[626],{"type":558,"value":627},"示例 2：",{"type":553,"tag":585,"props":629,"children":631},{"className":587,"code":630,"language":558,"meta":546,"style":546},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[632],{"type":553,"tag":591,"props":633,"children":634},{"__ignoreMap":546},[635,643,651],{"type":553,"tag":595,"props":636,"children":637},{"class":597,"line":598},[638],{"type":553,"tag":595,"props":639,"children":640},{},[641],{"type":558,"value":642},"输入：chars = [\"a\"]\n",{"type":553,"tag":595,"props":644,"children":645},{"class":597,"line":607},[646],{"type":553,"tag":595,"props":647,"children":648},{},[649],{"type":558,"value":650},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":553,"tag":595,"props":652,"children":653},{"class":597,"line":616},[654],{"type":553,"tag":595,"props":655,"children":656},{},[657],{"type":558,"value":658},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":553,"tag":554,"props":660,"children":661},{},[662],{"type":558,"value":663},"示例 3：",{"type":553,"tag":585,"props":665,"children":667},{"className":587,"code":666,"language":558,"meta":546,"style":546},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[668],{"type":553,"tag":591,"props":669,"children":670},{"__ignoreMap":546},[671,679,687],{"type":553,"tag":595,"props":672,"children":673},{"class":597,"line":598},[674],{"type":553,"tag":595,"props":675,"children":676},{},[677],{"type":558,"value":678},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":553,"tag":595,"props":680,"children":681},{"class":597,"line":607},[682],{"type":553,"tag":595,"props":683,"children":684},{},[685],{"type":558,"value":686},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":553,"tag":595,"props":688,"children":689},{"class":597,"line":616},[690],{"type":553,"tag":595,"props":691,"children":692},{},[693],{"type":558,"value":694},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":553,"tag":554,"props":696,"children":697},{},[698],{"type":558,"value":699},"提示：",{"type":553,"tag":701,"props":702,"children":703},"ul",{},[704,710],{"type":553,"tag":705,"props":706,"children":707},"li",{},[708],{"type":558,"value":709},"1 \u003C= chars.length \u003C= 2000",{"type":553,"tag":705,"props":711,"children":712},{},[713],{"type":558,"value":714},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":553,"tag":716,"props":717,"children":719},"h2",{"id":718},"解题思路",[720],{"type":558,"value":718},{"type":553,"tag":716,"props":722,"children":724},{"id":723},"实现",[725],{"type":558,"value":723},{"type":553,"tag":727,"props":728,"children":730},"h3",{"id":729},"双指针",[731],{"type":558,"value":729},{"type":553,"tag":585,"props":733,"children":737},{"className":734,"code":735,"language":736,"meta":546,"style":546},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[738],{"type":553,"tag":591,"props":739,"children":740},{"__ignoreMap":546},[741,750,792,822,831,877,916,944,979,1006,1016,1051,1109,1227,1248,1257,1275,1284,1292,1368,1409,1417,1425,1450],{"type":553,"tag":595,"props":742,"children":743},{"class":597,"line":598},[744],{"type":553,"tag":595,"props":745,"children":747},{"style":746},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[748],{"type":558,"value":749},"/**\n",{"type":553,"tag":595,"props":751,"children":752},{"class":597,"line":607},[753,758,764,770,775,781,786],{"type":553,"tag":595,"props":754,"children":755},{"style":746},[756],{"type":558,"value":757}," * ",{"type":553,"tag":595,"props":759,"children":761},{"style":760},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[762],{"type":558,"value":763},"@",{"type":553,"tag":595,"props":765,"children":767},{"style":766},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[768],{"type":558,"value":769},"param",{"type":553,"tag":595,"props":771,"children":772},{"style":760},[773],{"type":558,"value":774}," {",{"type":553,"tag":595,"props":776,"children":778},{"style":777},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[779],{"type":558,"value":780},"character[]",{"type":553,"tag":595,"props":782,"children":783},{"style":760},[784],{"type":558,"value":785},"}",{"type":553,"tag":595,"props":787,"children":789},{"style":788},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[790],{"type":558,"value":791}," chars\n",{"type":553,"tag":595,"props":793,"children":794},{"class":597,"line":616},[795,799,803,808,812,817],{"type":553,"tag":595,"props":796,"children":797},{"style":746},[798],{"type":558,"value":757},{"type":553,"tag":595,"props":800,"children":801},{"style":760},[802],{"type":558,"value":763},{"type":553,"tag":595,"props":804,"children":805},{"style":766},[806],{"type":558,"value":807},"return",{"type":553,"tag":595,"props":809,"children":810},{"style":760},[811],{"type":558,"value":774},{"type":553,"tag":595,"props":813,"children":814},{"style":777},[815],{"type":558,"value":816},"number",{"type":553,"tag":595,"props":818,"children":819},{"style":760},[820],{"type":558,"value":821},"}\n",{"type":553,"tag":595,"props":823,"children":825},{"class":597,"line":824},4,[826],{"type":553,"tag":595,"props":827,"children":828},{"style":746},[829],{"type":558,"value":830}," */\n",{"type":553,"tag":595,"props":832,"children":834},{"class":597,"line":833},5,[835,841,847,852,857,862,867,872],{"type":553,"tag":595,"props":836,"children":838},{"style":837},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[839],{"type":558,"value":840},"var",{"type":553,"tag":595,"props":842,"children":844},{"style":843},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[845],{"type":558,"value":846}," compress",{"type":553,"tag":595,"props":848,"children":849},{"style":760},[850],{"type":558,"value":851}," =",{"type":553,"tag":595,"props":853,"children":854},{"style":837},[855],{"type":558,"value":856}," function",{"type":553,"tag":595,"props":858,"children":859},{"style":760},[860],{"type":558,"value":861}," (",{"type":553,"tag":595,"props":863,"children":864},{"style":788},[865],{"type":558,"value":866},"chars",{"type":553,"tag":595,"props":868,"children":869},{"style":760},[870],{"type":558,"value":871},")",{"type":553,"tag":595,"props":873,"children":874},{"style":760},[875],{"type":558,"value":876}," {\n",{"type":553,"tag":595,"props":878,"children":880},{"class":597,"line":879},6,[881,886,891,895,900,905,911],{"type":553,"tag":595,"props":882,"children":883},{"style":837},[884],{"type":558,"value":885},"  const",{"type":553,"tag":595,"props":887,"children":888},{"style":788},[889],{"type":558,"value":890}," len",{"type":553,"tag":595,"props":892,"children":893},{"style":760},[894],{"type":558,"value":851},{"type":553,"tag":595,"props":896,"children":897},{"style":788},[898],{"type":558,"value":899}," chars",{"type":553,"tag":595,"props":901,"children":902},{"style":760},[903],{"type":558,"value":904},".",{"type":553,"tag":595,"props":906,"children":908},{"style":907},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[909],{"type":558,"value":910},"length",{"type":553,"tag":595,"props":912,"children":913},{"style":760},[914],{"type":558,"value":915},";\n",{"type":553,"tag":595,"props":917,"children":919},{"class":597,"line":918},7,[920,925,930,934,940],{"type":553,"tag":595,"props":921,"children":922},{"style":837},[923],{"type":558,"value":924},"  let",{"type":553,"tag":595,"props":926,"children":927},{"style":788},[928],{"type":558,"value":929}," i",{"type":553,"tag":595,"props":931,"children":932},{"style":760},[933],{"type":558,"value":851},{"type":553,"tag":595,"props":935,"children":937},{"style":936},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[938],{"type":558,"value":939}," 0",{"type":553,"tag":595,"props":941,"children":942},{"style":760},[943],{"type":558,"value":915},{"type":553,"tag":595,"props":945,"children":947},{"class":597,"line":946},8,[948,952,957,961,965,970,975],{"type":553,"tag":595,"props":949,"children":950},{"style":837},[951],{"type":558,"value":924},{"type":553,"tag":595,"props":953,"children":954},{"style":788},[955],{"type":558,"value":956}," j",{"type":553,"tag":595,"props":958,"children":959},{"style":760},[960],{"type":558,"value":851},{"type":553,"tag":595,"props":962,"children":963},{"style":788},[964],{"type":558,"value":929},{"type":553,"tag":595,"props":966,"children":967},{"style":837},[968],{"type":558,"value":969}," +",{"type":553,"tag":595,"props":971,"children":972},{"style":936},[973],{"type":558,"value":974}," 1",{"type":553,"tag":595,"props":976,"children":977},{"style":760},[978],{"type":558,"value":915},{"type":553,"tag":595,"props":980,"children":982},{"class":597,"line":981},9,[983,987,992,996,1002],{"type":553,"tag":595,"props":984,"children":985},{"style":837},[986],{"type":558,"value":924},{"type":553,"tag":595,"props":988,"children":989},{"style":788},[990],{"type":558,"value":991}," s",{"type":553,"tag":595,"props":993,"children":994},{"style":760},[995],{"type":558,"value":851},{"type":553,"tag":595,"props":997,"children":999},{"style":998},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1000],{"type":558,"value":1001}," \"\"",{"type":553,"tag":595,"props":1003,"children":1004},{"style":760},[1005],{"type":558,"value":915},{"type":553,"tag":595,"props":1007,"children":1009},{"class":597,"line":1008},10,[1010],{"type":553,"tag":595,"props":1011,"children":1013},{"emptyLinePlaceholder":1012},true,[1014],{"type":558,"value":1015},"\n",{"type":553,"tag":595,"props":1017,"children":1019},{"class":597,"line":1018},11,[1020,1025,1029,1034,1039,1043,1047],{"type":553,"tag":595,"props":1021,"children":1022},{"style":766},[1023],{"type":558,"value":1024},"  while",{"type":553,"tag":595,"props":1026,"children":1027},{"style":760},[1028],{"type":558,"value":861},{"type":553,"tag":595,"props":1030,"children":1031},{"style":788},[1032],{"type":558,"value":1033},"j",{"type":553,"tag":595,"props":1035,"children":1036},{"style":760},[1037],{"type":558,"value":1038}," \u003C=",{"type":553,"tag":595,"props":1040,"children":1041},{"style":788},[1042],{"type":558,"value":890},{"type":553,"tag":595,"props":1044,"children":1045},{"style":760},[1046],{"type":558,"value":871},{"type":553,"tag":595,"props":1048,"children":1049},{"style":760},[1050],{"type":558,"value":876},{"type":553,"tag":595,"props":1052,"children":1054},{"class":597,"line":1053},12,[1055,1060,1064,1068,1073,1078,1083,1088,1092,1096,1100,1105],{"type":553,"tag":595,"props":1056,"children":1057},{"style":766},[1058],{"type":558,"value":1059},"    if",{"type":553,"tag":595,"props":1061,"children":1062},{"style":760},[1063],{"type":558,"value":861},{"type":553,"tag":595,"props":1065,"children":1066},{"style":788},[1067],{"type":558,"value":866},{"type":553,"tag":595,"props":1069,"children":1070},{"style":760},[1071],{"type":558,"value":1072},"[",{"type":553,"tag":595,"props":1074,"children":1075},{"style":788},[1076],{"type":558,"value":1077},"i",{"type":553,"tag":595,"props":1079,"children":1080},{"style":760},[1081],{"type":558,"value":1082},"]",{"type":553,"tag":595,"props":1084,"children":1085},{"style":837},[1086],{"type":558,"value":1087}," !==",{"type":553,"tag":595,"props":1089,"children":1090},{"style":788},[1091],{"type":558,"value":899},{"type":553,"tag":595,"props":1093,"children":1094},{"style":760},[1095],{"type":558,"value":1072},{"type":553,"tag":595,"props":1097,"children":1098},{"style":788},[1099],{"type":558,"value":1033},{"type":553,"tag":595,"props":1101,"children":1102},{"style":760},[1103],{"type":558,"value":1104},"])",{"type":553,"tag":595,"props":1106,"children":1107},{"style":760},[1108],{"type":558,"value":876},{"type":553,"tag":595,"props":1110,"children":1112},{"class":597,"line":1111},13,[1113,1118,1123,1127,1132,1136,1141,1145,1150,1155,1160,1165,1169,1173,1177,1182,1187,1192,1196,1200,1205,1210,1214,1218,1222],{"type":553,"tag":595,"props":1114,"children":1115},{"style":788},[1116],{"type":558,"value":1117},"      s",{"type":553,"tag":595,"props":1119,"children":1120},{"style":837},[1121],{"type":558,"value":1122}," +=",{"type":553,"tag":595,"props":1124,"children":1125},{"style":788},[1126],{"type":558,"value":956},{"type":553,"tag":595,"props":1128,"children":1129},{"style":837},[1130],{"type":558,"value":1131}," -",{"type":553,"tag":595,"props":1133,"children":1134},{"style":788},[1135],{"type":558,"value":929},{"type":553,"tag":595,"props":1137,"children":1138},{"style":760},[1139],{"type":558,"value":1140}," >",{"type":553,"tag":595,"props":1142,"children":1143},{"style":936},[1144],{"type":558,"value":974},{"type":553,"tag":595,"props":1146,"children":1147},{"style":837},[1148],{"type":558,"value":1149}," ?",{"type":553,"tag":595,"props":1151,"children":1152},{"style":998},[1153],{"type":558,"value":1154}," `",{"type":553,"tag":595,"props":1156,"children":1157},{"style":760},[1158],{"type":558,"value":1159},"${",{"type":553,"tag":595,"props":1161,"children":1163},{"style":1162},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1164],{"type":558,"value":866},{"type":553,"tag":595,"props":1166,"children":1167},{"style":760},[1168],{"type":558,"value":1072},{"type":553,"tag":595,"props":1170,"children":1171},{"style":1162},[1172],{"type":558,"value":1077},{"type":553,"tag":595,"props":1174,"children":1175},{"style":760},[1176],{"type":558,"value":1082},{"type":553,"tag":595,"props":1178,"children":1179},{"style":760},[1180],{"type":558,"value":1181},"}${",{"type":553,"tag":595,"props":1183,"children":1184},{"style":1162},[1185],{"type":558,"value":1186},"j ",{"type":553,"tag":595,"props":1188,"children":1189},{"style":837},[1190],{"type":558,"value":1191},"-",{"type":553,"tag":595,"props":1193,"children":1194},{"style":1162},[1195],{"type":558,"value":929},{"type":553,"tag":595,"props":1197,"children":1198},{"style":760},[1199],{"type":558,"value":785},{"type":553,"tag":595,"props":1201,"children":1202},{"style":998},[1203],{"type":558,"value":1204},"`",{"type":553,"tag":595,"props":1206,"children":1207},{"style":837},[1208],{"type":558,"value":1209}," :",{"type":553,"tag":595,"props":1211,"children":1212},{"style":788},[1213],{"type":558,"value":899},{"type":553,"tag":595,"props":1215,"children":1216},{"style":760},[1217],{"type":558,"value":1072},{"type":553,"tag":595,"props":1219,"children":1220},{"style":788},[1221],{"type":558,"value":1077},{"type":553,"tag":595,"props":1223,"children":1224},{"style":760},[1225],{"type":558,"value":1226},"];\n",{"type":553,"tag":595,"props":1228,"children":1230},{"class":597,"line":1229},14,[1231,1236,1240,1244],{"type":553,"tag":595,"props":1232,"children":1233},{"style":788},[1234],{"type":558,"value":1235},"      i",{"type":553,"tag":595,"props":1237,"children":1238},{"style":760},[1239],{"type":558,"value":851},{"type":553,"tag":595,"props":1241,"children":1242},{"style":788},[1243],{"type":558,"value":956},{"type":553,"tag":595,"props":1245,"children":1246},{"style":760},[1247],{"type":558,"value":915},{"type":553,"tag":595,"props":1249,"children":1251},{"class":597,"line":1250},15,[1252],{"type":553,"tag":595,"props":1253,"children":1254},{"style":760},[1255],{"type":558,"value":1256},"    }\n",{"type":553,"tag":595,"props":1258,"children":1260},{"class":597,"line":1259},16,[1261,1266,1271],{"type":553,"tag":595,"props":1262,"children":1263},{"style":788},[1264],{"type":558,"value":1265},"    j",{"type":553,"tag":595,"props":1267,"children":1268},{"style":837},[1269],{"type":558,"value":1270},"++",{"type":553,"tag":595,"props":1272,"children":1273},{"style":760},[1274],{"type":558,"value":915},{"type":553,"tag":595,"props":1276,"children":1278},{"class":597,"line":1277},17,[1279],{"type":553,"tag":595,"props":1280,"children":1281},{"style":760},[1282],{"type":558,"value":1283},"  }\n",{"type":553,"tag":595,"props":1285,"children":1287},{"class":597,"line":1286},18,[1288],{"type":553,"tag":595,"props":1289,"children":1290},{"emptyLinePlaceholder":1012},[1291],{"type":558,"value":1015},{"type":553,"tag":595,"props":1293,"children":1295},{"class":597,"line":1294},19,[1296,1301,1305,1310,1314,1318,1322,1327,1331,1336,1340,1344,1348,1352,1356,1360,1364],{"type":553,"tag":595,"props":1297,"children":1298},{"style":766},[1299],{"type":558,"value":1300},"  for",{"type":553,"tag":595,"props":1302,"children":1303},{"style":760},[1304],{"type":558,"value":861},{"type":553,"tag":595,"props":1306,"children":1307},{"style":837},[1308],{"type":558,"value":1309},"let",{"type":553,"tag":595,"props":1311,"children":1312},{"style":788},[1313],{"type":558,"value":929},{"type":553,"tag":595,"props":1315,"children":1316},{"style":760},[1317],{"type":558,"value":851},{"type":553,"tag":595,"props":1319,"children":1320},{"style":936},[1321],{"type":558,"value":939},{"type":553,"tag":595,"props":1323,"children":1324},{"style":760},[1325],{"type":558,"value":1326},";",{"type":553,"tag":595,"props":1328,"children":1329},{"style":788},[1330],{"type":558,"value":929},{"type":553,"tag":595,"props":1332,"children":1333},{"style":760},[1334],{"type":558,"value":1335}," \u003C",{"type":553,"tag":595,"props":1337,"children":1338},{"style":788},[1339],{"type":558,"value":991},{"type":553,"tag":595,"props":1341,"children":1342},{"style":760},[1343],{"type":558,"value":904},{"type":553,"tag":595,"props":1345,"children":1346},{"style":907},[1347],{"type":558,"value":910},{"type":553,"tag":595,"props":1349,"children":1350},{"style":760},[1351],{"type":558,"value":1326},{"type":553,"tag":595,"props":1353,"children":1354},{"style":788},[1355],{"type":558,"value":929},{"type":553,"tag":595,"props":1357,"children":1358},{"style":837},[1359],{"type":558,"value":1270},{"type":553,"tag":595,"props":1361,"children":1362},{"style":760},[1363],{"type":558,"value":871},{"type":553,"tag":595,"props":1365,"children":1366},{"style":760},[1367],{"type":558,"value":876},{"type":553,"tag":595,"props":1369,"children":1371},{"class":597,"line":1370},20,[1372,1377,1381,1385,1389,1393,1397,1401,1405],{"type":553,"tag":595,"props":1373,"children":1374},{"style":788},[1375],{"type":558,"value":1376},"    chars",{"type":553,"tag":595,"props":1378,"children":1379},{"style":760},[1380],{"type":558,"value":1072},{"type":553,"tag":595,"props":1382,"children":1383},{"style":788},[1384],{"type":558,"value":1077},{"type":553,"tag":595,"props":1386,"children":1387},{"style":760},[1388],{"type":558,"value":1082},{"type":553,"tag":595,"props":1390,"children":1391},{"style":760},[1392],{"type":558,"value":851},{"type":553,"tag":595,"props":1394,"children":1395},{"style":788},[1396],{"type":558,"value":991},{"type":553,"tag":595,"props":1398,"children":1399},{"style":760},[1400],{"type":558,"value":1072},{"type":553,"tag":595,"props":1402,"children":1403},{"style":788},[1404],{"type":558,"value":1077},{"type":553,"tag":595,"props":1406,"children":1407},{"style":760},[1408],{"type":558,"value":1226},{"type":553,"tag":595,"props":1410,"children":1412},{"class":597,"line":1411},21,[1413],{"type":553,"tag":595,"props":1414,"children":1415},{"style":760},[1416],{"type":558,"value":1283},{"type":553,"tag":595,"props":1418,"children":1420},{"class":597,"line":1419},22,[1421],{"type":553,"tag":595,"props":1422,"children":1423},{"emptyLinePlaceholder":1012},[1424],{"type":558,"value":1015},{"type":553,"tag":595,"props":1426,"children":1428},{"class":597,"line":1427},23,[1429,1434,1438,1442,1446],{"type":553,"tag":595,"props":1430,"children":1431},{"style":766},[1432],{"type":558,"value":1433},"  return",{"type":553,"tag":595,"props":1435,"children":1436},{"style":788},[1437],{"type":558,"value":991},{"type":553,"tag":595,"props":1439,"children":1440},{"style":760},[1441],{"type":558,"value":904},{"type":553,"tag":595,"props":1443,"children":1444},{"style":907},[1445],{"type":558,"value":910},{"type":553,"tag":595,"props":1447,"children":1448},{"style":760},[1449],{"type":558,"value":915},{"type":553,"tag":595,"props":1451,"children":1453},{"class":597,"line":1452},24,[1454],{"type":553,"tag":595,"props":1455,"children":1456},{"style":760},[1457],{"type":558,"value":1458},"};\n",{"type":553,"tag":1460,"props":1461,"children":1462},"style",{},[1463],{"type":558,"value":1464},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":546,"searchDepth":833,"depth":833,"links":1466},[1467,1468],{"id":718,"depth":607,"text":718},{"id":723,"depth":607,"text":723,"children":1469},[1470],{"id":729,"depth":616,"text":729},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1477,1479],{"_path":234,"title":233,"description":1478},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":240,"title":239,"description":1480},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1714099680327]