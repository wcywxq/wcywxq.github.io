[{"data":1,"prerenderedAt":1373},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":463,"/algorithm/leetcode/major/string-compression-surround":1368},[4,266,295,440,448],{"title":5,"_path":6,"children":7,"icon":265},"算法","/algorithm",[8,28],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30,"children":31},"Leetcode 力扣","/algorithm/leetcode",[32,38,51],{"title":33,"_path":34,"children":35},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[36],{"title":37,"_path":34},"刷题索引",{"title":39,"_path":40,"children":41},"剑指 offer","/algorithm/leetcode/sword-ofter",[42,45,48],{"title":43,"_path":44},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":46,"_path":47},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":49,"_path":50},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":52,"_path":53,"children":54},"主题单","/algorithm/leetcode/major",[55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262],{"title":56,"_path":57},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":59,"_path":60},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":62,"_path":63},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":65,"_path":66},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":68,"_path":69},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":71,"_path":72},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":74,"_path":75},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":77,"_path":78},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":80,"_path":81},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":83,"_path":84},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":86,"_path":87},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":89,"_path":90},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":92,"_path":93},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":95,"_path":96},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":98,"_path":99},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":101,"_path":102},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":104,"_path":105},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":107,"_path":108},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":110,"_path":111},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":113,"_path":114},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":116,"_path":117},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":119,"_path":120},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":122,"_path":123},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":125,"_path":126},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":128,"_path":129},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":131,"_path":132},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":134,"_path":135},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":137,"_path":138},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":140,"_path":141},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":143,"_path":144},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":146,"_path":147},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":149,"_path":150},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":152,"_path":153},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":155,"_path":156},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":158,"_path":159},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":161,"_path":162},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":164,"_path":165},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":167,"_path":168},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":170,"_path":171},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":173,"_path":174},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":176,"_path":177},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":179,"_path":180},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":182,"_path":183},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":185,"_path":186},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":188,"_path":189},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":191,"_path":192},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":194,"_path":195},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":197,"_path":198},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":200,"_path":201},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":203,"_path":204},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":206,"_path":207},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":209,"_path":210},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":212,"_path":213},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":215,"_path":216},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":218,"_path":219},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":221,"_path":222},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":224,"_path":225},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":227,"_path":228},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":230,"_path":231},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":233,"_path":234},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":236,"_path":237},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":239,"_path":240},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":242,"_path":243},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":245,"_path":246},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":248,"_path":249},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":251,"_path":252},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":254,"_path":255},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":257,"_path":258},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":260,"_path":261},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":263,"_path":264},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":267,"_path":268,"children":269,"icon":294},"前端八股文","/frontend-endorsement",[270,281],{"title":271,"_path":272,"children":273},"构建工具","/frontend-endorsement/build-tools",[274],{"title":275,"_path":276,"children":277},"Webpack","/frontend-endorsement/build-tools/webpack",[278],{"title":279,"_path":280},"构建流程","/frontend-endorsement/build-tools/webpack/build-process",{"title":282,"_path":283,"children":284},"Html","/frontend-endorsement/html",[285,288,291],{"title":286,"_path":287},"Canvas 和 Svg","/frontend-endorsement/html/canvas-svg",{"title":289,"_path":290},"DOCTYPE 文档类型","/frontend-endorsement/html/doc-type",{"title":292,"_path":293},"离线存储","/frontend-endorsement/html/offline-storage","i-heroicons-newspaper",{"title":296,"_path":297,"children":298,"icon":439},"前端代码考核","/frontend-code-assessment",[299,348,432],{"title":300,"_path":301,"children":302},"源码实现","/frontend-code-assessment/source",[303,328,341],{"title":304,"_path":305,"children":306},"原生 api","/frontend-code-assessment/source/native-api",[307,310,313,316,319,322,325],{"title":308,"_path":309},"ajax","/frontend-code-assessment/source/native-api/ajax",{"title":311,"_path":312},"call & apply & bind","/frontend-code-assessment/source/native-api/call-apply-bind",{"title":314,"_path":315},"new 操作符","/frontend-code-assessment/source/native-api/new",{"title":317,"_path":318},"instanceof 关键字","/frontend-code-assessment/source/native-api/instanceof",{"title":320,"_path":321},"定时器","/frontend-code-assessment/source/native-api/timer",{"title":323,"_path":324},"JSON.stringify","/frontend-code-assessment/source/native-api/json-stringify",{"title":326,"_path":327},"Iterator 迭代器","/frontend-code-assessment/source/native-api/iterator",{"title":329,"_path":330,"children":331},"数组 Array","/frontend-code-assessment/source/array",[332,335,338],{"title":333,"_path":334},"数组去重","/frontend-code-assessment/source/array/remove-duplicate",{"title":336,"_path":337},"数组扁平化","/frontend-code-assessment/source/array/flat",{"title":339,"_path":340},"交集、差集、并集、补集","/frontend-code-assessment/source/array/intersect-minus-union-complement",{"title":342,"_path":343,"children":344},"字符串 String","/frontend-code-assessment/source/string",[345],{"title":346,"_path":347},"repeat()","/frontend-code-assessment/source/string/repeat",{"title":349,"_path":350,"children":351},"业务场景","/frontend-code-assessment/scene",[352,374,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429],{"title":353,"_path":354,"children":355},"Promise","/frontend-code-assessment/scene/promise",[356,359,362,365,368,371],{"title":357,"_path":358},"保证 url 打印顺序并支持 retry","/frontend-code-assessment/scene/promise/order-print-url-and-support-retry",{"title":360,"_path":361},"并发限制图片加载数量","/frontend-code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":363,"_path":364},"使用 addRemote 实现 add","/frontend-code-assessment/scene/promise/use-addremote-to-implement-add",{"title":366,"_path":367},"实现 mergePromise 函数","/frontend-code-assessment/scene/promise/implement-merge-promise-function",{"title":369,"_path":370},"循环打印红-黄-绿","/frontend-code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":372,"_path":373},"promise 每隔 1s 输出","/frontend-code-assessment/scene/promise/promise-output-every-1s",{"title":375,"_path":376,"children":377},"框架和设计模式","/frontend-code-assessment/scene/framework-and-design-mode",[378],{"title":379,"_path":380},"event bus","/frontend-code-assessment/scene/framework-and-design-mode/event-bus",{"title":382,"_path":383},"计算对象占用字节数","/frontend-code-assessment/scene/calcuate-object-bytes",{"title":385,"_path":386},"倒计时","/frontend-code-assessment/scene/countdown",{"title":388,"_path":389},"日期格式化","/frontend-code-assessment/scene/date-format",{"title":391,"_path":392},"实现前端路由","/frontend-code-assessment/scene/frontend-route",{"title":394,"_path":395},"图片格式转换","/frontend-code-assessment/scene/image-format-conversion",{"title":397,"_path":398},"lodash.get","/frontend-code-assessment/scene/lodash-get",{"title":400,"_path":401},"记忆化请求函数 - 可缓存请求函数","/frontend-code-assessment/scene/memorize-request",{"title":403,"_path":404},"内容中出现频率最高的字符","/frontend-code-assessment/scene/most-frequent-characters-in-content",{"title":406,"_path":407},"对象是否循环引用","/frontend-code-assessment/scene/object-is-or-not-circular-reference",{"title":409,"_path":410},"解析 url 参数","/frontend-code-assessment/scene/parse-url-query",{"title":412,"_path":413},"原型链输出","/frontend-code-assessment/scene/prototype-chain-output",{"title":415,"_path":416},"随机数","/frontend-code-assessment/scene/random-number",{"title":418,"_path":419},"富文本内容转换","/frontend-code-assessment/scene/rich-text-content-conversion",{"title":421,"_path":422},"sku 算法实现","/frontend-code-assessment/scene/sku",{"title":424,"_path":425},"千分位分隔数字字符串","/frontend-code-assessment/scene/thousandth-separated-number-string",{"title":427,"_path":428},"长列表虚拟滚动","/frontend-code-assessment/scene/vitrual-scroll-list",{"title":430,"_path":431},"xhr hook 实现打印日志","/frontend-code-assessment/scene/xhr-hook-to-log",{"title":433,"_path":434,"children":435},"Ts 类型挑战","/frontend-code-assessment/type-challeges",[436],{"title":437,"_path":438},"No.10 元组转合集(联合类型)","/frontend-code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":441,"_path":442,"children":443,"icon":447},"项目","/pro",[444],{"title":445,"_path":446},"Vue 如何对 Store 进行单元测试","/pro/unit-test-vue-store","i-heroicons-squares-plus",{"title":449,"_path":450,"children":451,"icon":462},"后端语言","/backend-languages",[452],{"title":453,"_path":454,"children":455},"Python","/backend-languages/python",[456,459],{"title":457,"_path":458},"基础","/backend-languages/python/base",{"title":460,"_path":461},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":234,"_dir":464,"_draft":465,"_partial":465,"_locale":466,"title":233,"description":467,"url":468,"body":469,"_type":1363,"_id":1364,"_source":1365,"_file":1366,"_extension":1367},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":470,"children":471,"toc":1357},"root",[472,479,484,489,494,499,504,543,548,579,584,615,620,635,641,646,652,1351],{"type":473,"tag":474,"props":475,"children":476},"element","p",{},[477],{"type":478,"value":467},"text",{"type":473,"tag":474,"props":480,"children":481},{},[482],{"type":478,"value":483},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":473,"tag":474,"props":485,"children":486},{},[487],{"type":478,"value":488},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":473,"tag":474,"props":490,"children":491},{},[492],{"type":478,"value":493},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":473,"tag":474,"props":495,"children":496},{},[497],{"type":478,"value":498},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":473,"tag":474,"props":500,"children":501},{},[502],{"type":478,"value":503},"示例 1：",{"type":473,"tag":505,"props":506,"children":509},"pre",{"className":507,"code":508,"language":478,"meta":466,"style":466},"language-text shiki shiki-themes slack-ochin slack-ochin ayu-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[510],{"type":473,"tag":511,"props":512,"children":513},"code",{"__ignoreMap":466},[514,525,534],{"type":473,"tag":515,"props":516,"children":519},"span",{"class":517,"line":518},"line",1,[520],{"type":473,"tag":515,"props":521,"children":522},{},[523],{"type":478,"value":524},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":473,"tag":515,"props":526,"children":528},{"class":517,"line":527},2,[529],{"type":473,"tag":515,"props":530,"children":531},{},[532],{"type":478,"value":533},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":473,"tag":515,"props":535,"children":537},{"class":517,"line":536},3,[538],{"type":473,"tag":515,"props":539,"children":540},{},[541],{"type":478,"value":542},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":473,"tag":474,"props":544,"children":545},{},[546],{"type":478,"value":547},"示例 2：",{"type":473,"tag":505,"props":549,"children":551},{"className":507,"code":550,"language":478,"meta":466,"style":466},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[552],{"type":473,"tag":511,"props":553,"children":554},{"__ignoreMap":466},[555,563,571],{"type":473,"tag":515,"props":556,"children":557},{"class":517,"line":518},[558],{"type":473,"tag":515,"props":559,"children":560},{},[561],{"type":478,"value":562},"输入：chars = [\"a\"]\n",{"type":473,"tag":515,"props":564,"children":565},{"class":517,"line":527},[566],{"type":473,"tag":515,"props":567,"children":568},{},[569],{"type":478,"value":570},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":473,"tag":515,"props":572,"children":573},{"class":517,"line":536},[574],{"type":473,"tag":515,"props":575,"children":576},{},[577],{"type":478,"value":578},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":473,"tag":474,"props":580,"children":581},{},[582],{"type":478,"value":583},"示例 3：",{"type":473,"tag":505,"props":585,"children":587},{"className":507,"code":586,"language":478,"meta":466,"style":466},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[588],{"type":473,"tag":511,"props":589,"children":590},{"__ignoreMap":466},[591,599,607],{"type":473,"tag":515,"props":592,"children":593},{"class":517,"line":518},[594],{"type":473,"tag":515,"props":595,"children":596},{},[597],{"type":478,"value":598},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":473,"tag":515,"props":600,"children":601},{"class":517,"line":527},[602],{"type":473,"tag":515,"props":603,"children":604},{},[605],{"type":478,"value":606},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":473,"tag":515,"props":608,"children":609},{"class":517,"line":536},[610],{"type":473,"tag":515,"props":611,"children":612},{},[613],{"type":478,"value":614},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":473,"tag":474,"props":616,"children":617},{},[618],{"type":478,"value":619},"提示：",{"type":473,"tag":621,"props":622,"children":623},"ul",{},[624,630],{"type":473,"tag":625,"props":626,"children":627},"li",{},[628],{"type":478,"value":629},"1 \u003C= chars.length \u003C= 2000",{"type":473,"tag":625,"props":631,"children":632},{},[633],{"type":478,"value":634},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":473,"tag":636,"props":637,"children":639},"h2",{"id":638},"解题思路",[640],{"type":478,"value":638},{"type":473,"tag":636,"props":642,"children":644},{"id":643},"实现",[645],{"type":478,"value":643},{"type":473,"tag":647,"props":648,"children":650},"h3",{"id":649},"双指针",[651],{"type":478,"value":649},{"type":473,"tag":505,"props":653,"children":657},{"className":654,"code":655,"language":656,"meta":466,"style":466},"language-js shiki shiki-themes slack-ochin slack-ochin ayu-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[658],{"type":473,"tag":511,"props":659,"children":660},{"__ignoreMap":466},[661,670,696,713,722,766,807,835,870,897,907,939,993,1115,1136,1145,1163,1172,1180,1252,1298,1306,1314,1339],{"type":473,"tag":515,"props":662,"children":663},{"class":517,"line":518},[664],{"type":473,"tag":515,"props":665,"children":667},{"style":666},"--shiki-light:#357B42;--shiki-default:#357B42;--shiki-dark:#ACB6BF8C;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[668],{"type":478,"value":669},"/**\n",{"type":473,"tag":515,"props":671,"children":672},{"class":517,"line":527},[673,678,684,690],{"type":473,"tag":515,"props":674,"children":675},{"style":666},[676],{"type":478,"value":677}," * ",{"type":473,"tag":515,"props":679,"children":681},{"style":680},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[682],{"type":478,"value":683},"@param",{"type":473,"tag":515,"props":685,"children":687},{"style":686},"--shiki-light:#0444AC;--shiki-default:#0444AC;--shiki-dark:#59C2FF;--shiki-light-font-style:italic;--shiki-default-font-style:italic;--shiki-dark-font-style:italic",[688],{"type":478,"value":689}," {character[]}",{"type":473,"tag":515,"props":691,"children":693},{"style":692},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6;--shiki-light-font-style:inherit;--shiki-default-font-style:inherit;--shiki-dark-font-style:italic",[694],{"type":478,"value":695}," chars\n",{"type":473,"tag":515,"props":697,"children":698},{"class":517,"line":536},[699,703,708],{"type":473,"tag":515,"props":700,"children":701},{"style":666},[702],{"type":478,"value":677},{"type":473,"tag":515,"props":704,"children":705},{"style":680},[706],{"type":478,"value":707},"@return",{"type":473,"tag":515,"props":709,"children":710},{"style":686},[711],{"type":478,"value":712}," {number}\n",{"type":473,"tag":515,"props":714,"children":716},{"class":517,"line":715},4,[717],{"type":473,"tag":515,"props":718,"children":719},{"style":666},[720],{"type":478,"value":721}," */\n",{"type":473,"tag":515,"props":723,"children":725},{"class":517,"line":724},5,[726,732,738,744,749,755,761],{"type":473,"tag":515,"props":727,"children":729},{"style":728},"--shiki-light:#0991B6;--shiki-default:#0991B6;--shiki-dark:#FF8F40",[730],{"type":478,"value":731},"var",{"type":473,"tag":515,"props":733,"children":735},{"style":734},"--shiki-light:#7EB233;--shiki-default:#7EB233;--shiki-dark:#FFB454",[736],{"type":478,"value":737}," compress",{"type":473,"tag":515,"props":739,"children":741},{"style":740},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#F29668",[742],{"type":478,"value":743}," =",{"type":473,"tag":515,"props":745,"children":746},{"style":728},[747],{"type":478,"value":748}," function",{"type":473,"tag":515,"props":750,"children":752},{"style":751},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6",[753],{"type":478,"value":754}," (",{"type":473,"tag":515,"props":756,"children":758},{"style":757},"--shiki-light:#B1108E;--shiki-default:#B1108E;--shiki-dark:#D2A6FF",[759],{"type":478,"value":760},"chars",{"type":473,"tag":515,"props":762,"children":763},{"style":751},[764],{"type":478,"value":765},") {\n",{"type":473,"tag":515,"props":767,"children":769},{"class":517,"line":768},6,[770,775,781,785,790,796,801],{"type":473,"tag":515,"props":771,"children":772},{"style":728},[773],{"type":478,"value":774},"  const",{"type":473,"tag":515,"props":776,"children":778},{"style":777},"--shiki-light:#2F86D2;--shiki-default:#2F86D2;--shiki-dark:#BFBDB6",[779],{"type":478,"value":780}," len",{"type":473,"tag":515,"props":782,"children":783},{"style":740},[784],{"type":478,"value":743},{"type":473,"tag":515,"props":786,"children":787},{"style":777},[788],{"type":478,"value":789}," chars",{"type":473,"tag":515,"props":791,"children":793},{"style":792},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#F29668",[794],{"type":478,"value":795},".",{"type":473,"tag":515,"props":797,"children":798},{"style":751},[799],{"type":478,"value":800},"length",{"type":473,"tag":515,"props":802,"children":804},{"style":803},"--shiki-light:#002339;--shiki-default:#002339;--shiki-dark:#BFBDB6B3",[805],{"type":478,"value":806},";\n",{"type":473,"tag":515,"props":808,"children":810},{"class":517,"line":809},7,[811,816,821,825,831],{"type":473,"tag":515,"props":812,"children":813},{"style":728},[814],{"type":478,"value":815},"  let",{"type":473,"tag":515,"props":817,"children":818},{"style":777},[819],{"type":478,"value":820}," i",{"type":473,"tag":515,"props":822,"children":823},{"style":740},[824],{"type":478,"value":743},{"type":473,"tag":515,"props":826,"children":828},{"style":827},"--shiki-light:#174781;--shiki-default:#174781;--shiki-dark:#D2A6FF",[829],{"type":478,"value":830}," 0",{"type":473,"tag":515,"props":832,"children":833},{"style":803},[834],{"type":478,"value":806},{"type":473,"tag":515,"props":836,"children":838},{"class":517,"line":837},8,[839,843,848,852,856,861,866],{"type":473,"tag":515,"props":840,"children":841},{"style":728},[842],{"type":478,"value":815},{"type":473,"tag":515,"props":844,"children":845},{"style":777},[846],{"type":478,"value":847}," j",{"type":473,"tag":515,"props":849,"children":850},{"style":740},[851],{"type":478,"value":743},{"type":473,"tag":515,"props":853,"children":854},{"style":777},[855],{"type":478,"value":820},{"type":473,"tag":515,"props":857,"children":858},{"style":740},[859],{"type":478,"value":860}," +",{"type":473,"tag":515,"props":862,"children":863},{"style":827},[864],{"type":478,"value":865}," 1",{"type":473,"tag":515,"props":867,"children":868},{"style":803},[869],{"type":478,"value":806},{"type":473,"tag":515,"props":871,"children":873},{"class":517,"line":872},9,[874,878,883,887,893],{"type":473,"tag":515,"props":875,"children":876},{"style":728},[877],{"type":478,"value":815},{"type":473,"tag":515,"props":879,"children":880},{"style":777},[881],{"type":478,"value":882}," s",{"type":473,"tag":515,"props":884,"children":885},{"style":740},[886],{"type":478,"value":743},{"type":473,"tag":515,"props":888,"children":890},{"style":889},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#AAD94C",[891],{"type":478,"value":892}," \"\"",{"type":473,"tag":515,"props":894,"children":895},{"style":803},[896],{"type":478,"value":806},{"type":473,"tag":515,"props":898,"children":900},{"class":517,"line":899},10,[901],{"type":473,"tag":515,"props":902,"children":904},{"emptyLinePlaceholder":903},true,[905],{"type":478,"value":906},"\n",{"type":473,"tag":515,"props":908,"children":910},{"class":517,"line":909},11,[911,917,921,926,931,935],{"type":473,"tag":515,"props":912,"children":914},{"style":913},"--shiki-light:#7B30D0;--shiki-default:#7B30D0;--shiki-dark:#FF8F40",[915],{"type":478,"value":916},"  while",{"type":473,"tag":515,"props":918,"children":919},{"style":751},[920],{"type":478,"value":754},{"type":473,"tag":515,"props":922,"children":923},{"style":777},[924],{"type":478,"value":925},"j",{"type":473,"tag":515,"props":927,"children":928},{"style":740},[929],{"type":478,"value":930}," \u003C=",{"type":473,"tag":515,"props":932,"children":933},{"style":777},[934],{"type":478,"value":780},{"type":473,"tag":515,"props":936,"children":937},{"style":751},[938],{"type":478,"value":765},{"type":473,"tag":515,"props":940,"children":942},{"class":517,"line":941},12,[943,948,952,956,961,966,971,976,980,984,988],{"type":473,"tag":515,"props":944,"children":945},{"style":913},[946],{"type":478,"value":947},"    if",{"type":473,"tag":515,"props":949,"children":950},{"style":751},[951],{"type":478,"value":754},{"type":473,"tag":515,"props":953,"children":954},{"style":777},[955],{"type":478,"value":760},{"type":473,"tag":515,"props":957,"children":958},{"style":751},[959],{"type":478,"value":960},"[",{"type":473,"tag":515,"props":962,"children":963},{"style":777},[964],{"type":478,"value":965},"i",{"type":473,"tag":515,"props":967,"children":968},{"style":751},[969],{"type":478,"value":970},"] ",{"type":473,"tag":515,"props":972,"children":973},{"style":740},[974],{"type":478,"value":975},"!==",{"type":473,"tag":515,"props":977,"children":978},{"style":777},[979],{"type":478,"value":789},{"type":473,"tag":515,"props":981,"children":982},{"style":751},[983],{"type":478,"value":960},{"type":473,"tag":515,"props":985,"children":986},{"style":777},[987],{"type":478,"value":925},{"type":473,"tag":515,"props":989,"children":990},{"style":751},[991],{"type":478,"value":992},"]) {\n",{"type":473,"tag":515,"props":994,"children":996},{"class":517,"line":995},13,[997,1002,1007,1011,1016,1020,1025,1029,1034,1039,1045,1049,1054,1058,1063,1068,1072,1076,1080,1085,1090,1095,1099,1103,1107,1111],{"type":473,"tag":515,"props":998,"children":999},{"style":777},[1000],{"type":478,"value":1001},"      s",{"type":473,"tag":515,"props":1003,"children":1004},{"style":740},[1005],{"type":478,"value":1006}," +=",{"type":473,"tag":515,"props":1008,"children":1009},{"style":777},[1010],{"type":478,"value":847},{"type":473,"tag":515,"props":1012,"children":1013},{"style":740},[1014],{"type":478,"value":1015}," -",{"type":473,"tag":515,"props":1017,"children":1018},{"style":777},[1019],{"type":478,"value":820},{"type":473,"tag":515,"props":1021,"children":1022},{"style":740},[1023],{"type":478,"value":1024}," >",{"type":473,"tag":515,"props":1026,"children":1027},{"style":827},[1028],{"type":478,"value":865},{"type":473,"tag":515,"props":1030,"children":1031},{"style":740},[1032],{"type":478,"value":1033}," ?",{"type":473,"tag":515,"props":1035,"children":1036},{"style":889},[1037],{"type":478,"value":1038}," `",{"type":473,"tag":515,"props":1040,"children":1042},{"style":1041},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#FF8F40",[1043],{"type":478,"value":1044},"${",{"type":473,"tag":515,"props":1046,"children":1047},{"style":777},[1048],{"type":478,"value":760},{"type":473,"tag":515,"props":1050,"children":1052},{"style":1051},"--shiki-light:#A44185;--shiki-default:#A44185;--shiki-dark:#BFBDB6",[1053],{"type":478,"value":960},{"type":473,"tag":515,"props":1055,"children":1056},{"style":777},[1057],{"type":478,"value":965},{"type":473,"tag":515,"props":1059,"children":1060},{"style":1051},[1061],{"type":478,"value":1062},"]",{"type":473,"tag":515,"props":1064,"children":1065},{"style":1041},[1066],{"type":478,"value":1067},"}${",{"type":473,"tag":515,"props":1069,"children":1070},{"style":777},[1071],{"type":478,"value":925},{"type":473,"tag":515,"props":1073,"children":1074},{"style":740},[1075],{"type":478,"value":1015},{"type":473,"tag":515,"props":1077,"children":1078},{"style":777},[1079],{"type":478,"value":820},{"type":473,"tag":515,"props":1081,"children":1082},{"style":1041},[1083],{"type":478,"value":1084},"}",{"type":473,"tag":515,"props":1086,"children":1087},{"style":889},[1088],{"type":478,"value":1089},"`",{"type":473,"tag":515,"props":1091,"children":1092},{"style":740},[1093],{"type":478,"value":1094}," :",{"type":473,"tag":515,"props":1096,"children":1097},{"style":777},[1098],{"type":478,"value":789},{"type":473,"tag":515,"props":1100,"children":1101},{"style":751},[1102],{"type":478,"value":960},{"type":473,"tag":515,"props":1104,"children":1105},{"style":777},[1106],{"type":478,"value":965},{"type":473,"tag":515,"props":1108,"children":1109},{"style":751},[1110],{"type":478,"value":1062},{"type":473,"tag":515,"props":1112,"children":1113},{"style":803},[1114],{"type":478,"value":806},{"type":473,"tag":515,"props":1116,"children":1118},{"class":517,"line":1117},14,[1119,1124,1128,1132],{"type":473,"tag":515,"props":1120,"children":1121},{"style":777},[1122],{"type":478,"value":1123},"      i",{"type":473,"tag":515,"props":1125,"children":1126},{"style":740},[1127],{"type":478,"value":743},{"type":473,"tag":515,"props":1129,"children":1130},{"style":777},[1131],{"type":478,"value":847},{"type":473,"tag":515,"props":1133,"children":1134},{"style":803},[1135],{"type":478,"value":806},{"type":473,"tag":515,"props":1137,"children":1139},{"class":517,"line":1138},15,[1140],{"type":473,"tag":515,"props":1141,"children":1142},{"style":751},[1143],{"type":478,"value":1144},"    }\n",{"type":473,"tag":515,"props":1146,"children":1148},{"class":517,"line":1147},16,[1149,1154,1159],{"type":473,"tag":515,"props":1150,"children":1151},{"style":777},[1152],{"type":478,"value":1153},"    j",{"type":473,"tag":515,"props":1155,"children":1156},{"style":740},[1157],{"type":478,"value":1158},"++",{"type":473,"tag":515,"props":1160,"children":1161},{"style":803},[1162],{"type":478,"value":806},{"type":473,"tag":515,"props":1164,"children":1166},{"class":517,"line":1165},17,[1167],{"type":473,"tag":515,"props":1168,"children":1169},{"style":751},[1170],{"type":478,"value":1171},"  }\n",{"type":473,"tag":515,"props":1173,"children":1175},{"class":517,"line":1174},18,[1176],{"type":473,"tag":515,"props":1177,"children":1178},{"emptyLinePlaceholder":903},[1179],{"type":478,"value":906},{"type":473,"tag":515,"props":1181,"children":1183},{"class":517,"line":1182},19,[1184,1189,1193,1198,1202,1206,1210,1215,1219,1224,1228,1232,1236,1240,1244,1248],{"type":473,"tag":515,"props":1185,"children":1186},{"style":913},[1187],{"type":478,"value":1188},"  for",{"type":473,"tag":515,"props":1190,"children":1191},{"style":751},[1192],{"type":478,"value":754},{"type":473,"tag":515,"props":1194,"children":1195},{"style":728},[1196],{"type":478,"value":1197},"let",{"type":473,"tag":515,"props":1199,"children":1200},{"style":777},[1201],{"type":478,"value":820},{"type":473,"tag":515,"props":1203,"children":1204},{"style":740},[1205],{"type":478,"value":743},{"type":473,"tag":515,"props":1207,"children":1208},{"style":827},[1209],{"type":478,"value":830},{"type":473,"tag":515,"props":1211,"children":1212},{"style":803},[1213],{"type":478,"value":1214},";",{"type":473,"tag":515,"props":1216,"children":1217},{"style":777},[1218],{"type":478,"value":820},{"type":473,"tag":515,"props":1220,"children":1221},{"style":740},[1222],{"type":478,"value":1223}," \u003C",{"type":473,"tag":515,"props":1225,"children":1226},{"style":777},[1227],{"type":478,"value":882},{"type":473,"tag":515,"props":1229,"children":1230},{"style":792},[1231],{"type":478,"value":795},{"type":473,"tag":515,"props":1233,"children":1234},{"style":751},[1235],{"type":478,"value":800},{"type":473,"tag":515,"props":1237,"children":1238},{"style":803},[1239],{"type":478,"value":1214},{"type":473,"tag":515,"props":1241,"children":1242},{"style":777},[1243],{"type":478,"value":820},{"type":473,"tag":515,"props":1245,"children":1246},{"style":740},[1247],{"type":478,"value":1158},{"type":473,"tag":515,"props":1249,"children":1250},{"style":751},[1251],{"type":478,"value":765},{"type":473,"tag":515,"props":1253,"children":1255},{"class":517,"line":1254},20,[1256,1261,1265,1269,1273,1278,1282,1286,1290,1294],{"type":473,"tag":515,"props":1257,"children":1258},{"style":777},[1259],{"type":478,"value":1260},"    chars",{"type":473,"tag":515,"props":1262,"children":1263},{"style":751},[1264],{"type":478,"value":960},{"type":473,"tag":515,"props":1266,"children":1267},{"style":777},[1268],{"type":478,"value":965},{"type":473,"tag":515,"props":1270,"children":1271},{"style":751},[1272],{"type":478,"value":970},{"type":473,"tag":515,"props":1274,"children":1275},{"style":740},[1276],{"type":478,"value":1277},"=",{"type":473,"tag":515,"props":1279,"children":1280},{"style":777},[1281],{"type":478,"value":882},{"type":473,"tag":515,"props":1283,"children":1284},{"style":751},[1285],{"type":478,"value":960},{"type":473,"tag":515,"props":1287,"children":1288},{"style":777},[1289],{"type":478,"value":965},{"type":473,"tag":515,"props":1291,"children":1292},{"style":751},[1293],{"type":478,"value":1062},{"type":473,"tag":515,"props":1295,"children":1296},{"style":803},[1297],{"type":478,"value":806},{"type":473,"tag":515,"props":1299,"children":1301},{"class":517,"line":1300},21,[1302],{"type":473,"tag":515,"props":1303,"children":1304},{"style":751},[1305],{"type":478,"value":1171},{"type":473,"tag":515,"props":1307,"children":1309},{"class":517,"line":1308},22,[1310],{"type":473,"tag":515,"props":1311,"children":1312},{"emptyLinePlaceholder":903},[1313],{"type":478,"value":906},{"type":473,"tag":515,"props":1315,"children":1317},{"class":517,"line":1316},23,[1318,1323,1327,1331,1335],{"type":473,"tag":515,"props":1319,"children":1320},{"style":913},[1321],{"type":478,"value":1322},"  return",{"type":473,"tag":515,"props":1324,"children":1325},{"style":777},[1326],{"type":478,"value":882},{"type":473,"tag":515,"props":1328,"children":1329},{"style":792},[1330],{"type":478,"value":795},{"type":473,"tag":515,"props":1332,"children":1333},{"style":751},[1334],{"type":478,"value":800},{"type":473,"tag":515,"props":1336,"children":1337},{"style":803},[1338],{"type":478,"value":806},{"type":473,"tag":515,"props":1340,"children":1342},{"class":517,"line":1341},24,[1343,1347],{"type":473,"tag":515,"props":1344,"children":1345},{"style":751},[1346],{"type":478,"value":1084},{"type":473,"tag":515,"props":1348,"children":1349},{"style":803},[1350],{"type":478,"value":806},{"type":473,"tag":1352,"props":1353,"children":1354},"style",{},[1355],{"type":478,"value":1356},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":466,"searchDepth":724,"depth":724,"links":1358},[1359,1360],{"id":638,"depth":527,"text":638},{"id":643,"depth":527,"text":643,"children":1361},[1362],{"id":649,"depth":536,"text":649},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1369,1371],{"_path":231,"title":230,"description":1370},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":237,"title":236,"description":1372},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1713695849005]