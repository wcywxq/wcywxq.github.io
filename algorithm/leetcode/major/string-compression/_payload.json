[{"data":1,"prerenderedAt":1462},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":524,"/algorithm/leetcode/major/string-compression-surround":1457},[4,269,298,492,500,509],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":491},"代码考核","/code-assessment",[302,391,484],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,375,382,385,388],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357,360,363,366,369,372],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"原型方法","/code-assessment/source/array/prototype-method",{"title":361,"_path":362},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":364,"_path":365},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":367,"_path":368},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":370,"_path":371},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":373,"_path":374},"二维数组","/code-assessment/source/array/2d-array",{"title":376,"_path":377,"children":378},"字符串 String","/code-assessment/source/string",[379],{"title":380,"_path":381},"repeat()","/code-assessment/source/string/repeat",{"title":383,"_path":384},"获取通用类型","/code-assessment/source/get-generic-type",{"title":386,"_path":387},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":389,"_path":390},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":392,"_path":393,"children":394},"业务场景","/code-assessment/scene",[395,420,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481],{"title":396,"_path":397,"children":398},"Promise","/code-assessment/scene/promise",[399,402,405,408,411,414,417],{"title":400,"_path":401},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":403,"_path":404},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":406,"_path":407},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":409,"_path":410},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":412,"_path":413},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":415,"_path":416},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":418,"_path":419},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":421,"_path":422,"children":423},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[424,427],{"title":425,"_path":426},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":428,"_path":429},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":431,"_path":432},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":434,"_path":435},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":437,"_path":438},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":440,"_path":441},"倒计时","/code-assessment/scene/countdown",{"title":443,"_path":444},"日期格式化","/code-assessment/scene/date-format",{"title":446,"_path":447},"实现前端路由","/code-assessment/scene/frontend-route",{"title":449,"_path":450},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":452,"_path":453},"lodash.get","/code-assessment/scene/lodash-get",{"title":455,"_path":456},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":458,"_path":459},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":461,"_path":462},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":464,"_path":465},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":467,"_path":468},"随机数","/code-assessment/scene/random-number",{"title":470,"_path":471},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":473,"_path":474},"sku 算法实现","/code-assessment/scene/sku",{"title":476,"_path":477},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":479,"_path":480},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":482,"_path":483},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":485,"_path":486,"children":487},"Ts 类型挑战","/code-assessment/type-challeges",[488],{"title":489,"_path":490},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":493,"_path":494,"children":495,"icon":499},"项目","/project",[496],{"title":497,"_path":498},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":501,"_path":502,"children":503,"icon":508},"设计模式","/design-mode",[504,505],{"title":501,"_path":502},{"title":506,"_path":507},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":510,"_path":511,"children":512,"icon":523},"后端语言","/backend-languages",[513],{"title":514,"_path":515,"children":516},"Python","/backend-languages/python",[517,520],{"title":518,"_path":519},"基础","/backend-languages/python/base",{"title":521,"_path":522},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":237,"_dir":525,"_draft":526,"_partial":526,"_locale":527,"title":236,"description":528,"url":529,"body":530,"_type":1452,"_id":1453,"_source":1454,"_file":1455,"_extension":1456},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":531,"children":532,"toc":1446},"root",[533,540,545,550,555,560,565,604,609,640,645,676,681,696,702,707,713,1440],{"type":534,"tag":535,"props":536,"children":537},"element","p",{},[538],{"type":539,"value":528},"text",{"type":534,"tag":535,"props":541,"children":542},{},[543],{"type":539,"value":544},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":534,"tag":535,"props":546,"children":547},{},[548],{"type":539,"value":549},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":534,"tag":535,"props":551,"children":552},{},[553],{"type":539,"value":554},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":534,"tag":535,"props":556,"children":557},{},[558],{"type":539,"value":559},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":534,"tag":535,"props":561,"children":562},{},[563],{"type":539,"value":564},"示例 1：",{"type":534,"tag":566,"props":567,"children":570},"pre",{"className":568,"code":569,"language":539,"meta":527,"style":527},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[571],{"type":534,"tag":572,"props":573,"children":574},"code",{"__ignoreMap":527},[575,586,595],{"type":534,"tag":576,"props":577,"children":580},"span",{"class":578,"line":579},"line",1,[581],{"type":534,"tag":576,"props":582,"children":583},{},[584],{"type":539,"value":585},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":534,"tag":576,"props":587,"children":589},{"class":578,"line":588},2,[590],{"type":534,"tag":576,"props":591,"children":592},{},[593],{"type":539,"value":594},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":534,"tag":576,"props":596,"children":598},{"class":578,"line":597},3,[599],{"type":534,"tag":576,"props":600,"children":601},{},[602],{"type":539,"value":603},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":534,"tag":535,"props":605,"children":606},{},[607],{"type":539,"value":608},"示例 2：",{"type":534,"tag":566,"props":610,"children":612},{"className":568,"code":611,"language":539,"meta":527,"style":527},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[613],{"type":534,"tag":572,"props":614,"children":615},{"__ignoreMap":527},[616,624,632],{"type":534,"tag":576,"props":617,"children":618},{"class":578,"line":579},[619],{"type":534,"tag":576,"props":620,"children":621},{},[622],{"type":539,"value":623},"输入：chars = [\"a\"]\n",{"type":534,"tag":576,"props":625,"children":626},{"class":578,"line":588},[627],{"type":534,"tag":576,"props":628,"children":629},{},[630],{"type":539,"value":631},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":534,"tag":576,"props":633,"children":634},{"class":578,"line":597},[635],{"type":534,"tag":576,"props":636,"children":637},{},[638],{"type":539,"value":639},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":534,"tag":535,"props":641,"children":642},{},[643],{"type":539,"value":644},"示例 3：",{"type":534,"tag":566,"props":646,"children":648},{"className":568,"code":647,"language":539,"meta":527,"style":527},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[649],{"type":534,"tag":572,"props":650,"children":651},{"__ignoreMap":527},[652,660,668],{"type":534,"tag":576,"props":653,"children":654},{"class":578,"line":579},[655],{"type":534,"tag":576,"props":656,"children":657},{},[658],{"type":539,"value":659},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":534,"tag":576,"props":661,"children":662},{"class":578,"line":588},[663],{"type":534,"tag":576,"props":664,"children":665},{},[666],{"type":539,"value":667},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":534,"tag":576,"props":669,"children":670},{"class":578,"line":597},[671],{"type":534,"tag":576,"props":672,"children":673},{},[674],{"type":539,"value":675},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":534,"tag":535,"props":677,"children":678},{},[679],{"type":539,"value":680},"提示：",{"type":534,"tag":682,"props":683,"children":684},"ul",{},[685,691],{"type":534,"tag":686,"props":687,"children":688},"li",{},[689],{"type":539,"value":690},"1 \u003C= chars.length \u003C= 2000",{"type":534,"tag":686,"props":692,"children":693},{},[694],{"type":539,"value":695},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":534,"tag":697,"props":698,"children":700},"h2",{"id":699},"解题思路",[701],{"type":539,"value":699},{"type":534,"tag":697,"props":703,"children":705},{"id":704},"实现",[706],{"type":539,"value":704},{"type":534,"tag":708,"props":709,"children":711},"h3",{"id":710},"双指针",[712],{"type":539,"value":710},{"type":534,"tag":566,"props":714,"children":718},{"className":715,"code":716,"language":717,"meta":527,"style":527},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[719],{"type":534,"tag":572,"props":720,"children":721},{"__ignoreMap":527},[722,731,773,803,812,858,897,925,960,987,997,1032,1090,1208,1229,1238,1256,1265,1273,1349,1390,1398,1406,1431],{"type":534,"tag":576,"props":723,"children":724},{"class":578,"line":579},[725],{"type":534,"tag":576,"props":726,"children":728},{"style":727},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[729],{"type":539,"value":730},"/**\n",{"type":534,"tag":576,"props":732,"children":733},{"class":578,"line":588},[734,739,745,751,756,762,767],{"type":534,"tag":576,"props":735,"children":736},{"style":727},[737],{"type":539,"value":738}," * ",{"type":534,"tag":576,"props":740,"children":742},{"style":741},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[743],{"type":539,"value":744},"@",{"type":534,"tag":576,"props":746,"children":748},{"style":747},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[749],{"type":539,"value":750},"param",{"type":534,"tag":576,"props":752,"children":753},{"style":741},[754],{"type":539,"value":755}," {",{"type":534,"tag":576,"props":757,"children":759},{"style":758},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[760],{"type":539,"value":761},"character[]",{"type":534,"tag":576,"props":763,"children":764},{"style":741},[765],{"type":539,"value":766},"}",{"type":534,"tag":576,"props":768,"children":770},{"style":769},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[771],{"type":539,"value":772}," chars\n",{"type":534,"tag":576,"props":774,"children":775},{"class":578,"line":597},[776,780,784,789,793,798],{"type":534,"tag":576,"props":777,"children":778},{"style":727},[779],{"type":539,"value":738},{"type":534,"tag":576,"props":781,"children":782},{"style":741},[783],{"type":539,"value":744},{"type":534,"tag":576,"props":785,"children":786},{"style":747},[787],{"type":539,"value":788},"return",{"type":534,"tag":576,"props":790,"children":791},{"style":741},[792],{"type":539,"value":755},{"type":534,"tag":576,"props":794,"children":795},{"style":758},[796],{"type":539,"value":797},"number",{"type":534,"tag":576,"props":799,"children":800},{"style":741},[801],{"type":539,"value":802},"}\n",{"type":534,"tag":576,"props":804,"children":806},{"class":578,"line":805},4,[807],{"type":534,"tag":576,"props":808,"children":809},{"style":727},[810],{"type":539,"value":811}," */\n",{"type":534,"tag":576,"props":813,"children":815},{"class":578,"line":814},5,[816,822,828,833,838,843,848,853],{"type":534,"tag":576,"props":817,"children":819},{"style":818},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[820],{"type":539,"value":821},"var",{"type":534,"tag":576,"props":823,"children":825},{"style":824},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[826],{"type":539,"value":827}," compress",{"type":534,"tag":576,"props":829,"children":830},{"style":741},[831],{"type":539,"value":832}," =",{"type":534,"tag":576,"props":834,"children":835},{"style":818},[836],{"type":539,"value":837}," function",{"type":534,"tag":576,"props":839,"children":840},{"style":741},[841],{"type":539,"value":842}," (",{"type":534,"tag":576,"props":844,"children":845},{"style":769},[846],{"type":539,"value":847},"chars",{"type":534,"tag":576,"props":849,"children":850},{"style":741},[851],{"type":539,"value":852},")",{"type":534,"tag":576,"props":854,"children":855},{"style":741},[856],{"type":539,"value":857}," {\n",{"type":534,"tag":576,"props":859,"children":861},{"class":578,"line":860},6,[862,867,872,876,881,886,892],{"type":534,"tag":576,"props":863,"children":864},{"style":818},[865],{"type":539,"value":866},"  const",{"type":534,"tag":576,"props":868,"children":869},{"style":769},[870],{"type":539,"value":871}," len",{"type":534,"tag":576,"props":873,"children":874},{"style":741},[875],{"type":539,"value":832},{"type":534,"tag":576,"props":877,"children":878},{"style":769},[879],{"type":539,"value":880}," chars",{"type":534,"tag":576,"props":882,"children":883},{"style":741},[884],{"type":539,"value":885},".",{"type":534,"tag":576,"props":887,"children":889},{"style":888},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[890],{"type":539,"value":891},"length",{"type":534,"tag":576,"props":893,"children":894},{"style":741},[895],{"type":539,"value":896},";\n",{"type":534,"tag":576,"props":898,"children":900},{"class":578,"line":899},7,[901,906,911,915,921],{"type":534,"tag":576,"props":902,"children":903},{"style":818},[904],{"type":539,"value":905},"  let",{"type":534,"tag":576,"props":907,"children":908},{"style":769},[909],{"type":539,"value":910}," i",{"type":534,"tag":576,"props":912,"children":913},{"style":741},[914],{"type":539,"value":832},{"type":534,"tag":576,"props":916,"children":918},{"style":917},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[919],{"type":539,"value":920}," 0",{"type":534,"tag":576,"props":922,"children":923},{"style":741},[924],{"type":539,"value":896},{"type":534,"tag":576,"props":926,"children":928},{"class":578,"line":927},8,[929,933,938,942,946,951,956],{"type":534,"tag":576,"props":930,"children":931},{"style":818},[932],{"type":539,"value":905},{"type":534,"tag":576,"props":934,"children":935},{"style":769},[936],{"type":539,"value":937}," j",{"type":534,"tag":576,"props":939,"children":940},{"style":741},[941],{"type":539,"value":832},{"type":534,"tag":576,"props":943,"children":944},{"style":769},[945],{"type":539,"value":910},{"type":534,"tag":576,"props":947,"children":948},{"style":818},[949],{"type":539,"value":950}," +",{"type":534,"tag":576,"props":952,"children":953},{"style":917},[954],{"type":539,"value":955}," 1",{"type":534,"tag":576,"props":957,"children":958},{"style":741},[959],{"type":539,"value":896},{"type":534,"tag":576,"props":961,"children":963},{"class":578,"line":962},9,[964,968,973,977,983],{"type":534,"tag":576,"props":965,"children":966},{"style":818},[967],{"type":539,"value":905},{"type":534,"tag":576,"props":969,"children":970},{"style":769},[971],{"type":539,"value":972}," s",{"type":534,"tag":576,"props":974,"children":975},{"style":741},[976],{"type":539,"value":832},{"type":534,"tag":576,"props":978,"children":980},{"style":979},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[981],{"type":539,"value":982}," \"\"",{"type":534,"tag":576,"props":984,"children":985},{"style":741},[986],{"type":539,"value":896},{"type":534,"tag":576,"props":988,"children":990},{"class":578,"line":989},10,[991],{"type":534,"tag":576,"props":992,"children":994},{"emptyLinePlaceholder":993},true,[995],{"type":539,"value":996},"\n",{"type":534,"tag":576,"props":998,"children":1000},{"class":578,"line":999},11,[1001,1006,1010,1015,1020,1024,1028],{"type":534,"tag":576,"props":1002,"children":1003},{"style":747},[1004],{"type":539,"value":1005},"  while",{"type":534,"tag":576,"props":1007,"children":1008},{"style":741},[1009],{"type":539,"value":842},{"type":534,"tag":576,"props":1011,"children":1012},{"style":769},[1013],{"type":539,"value":1014},"j",{"type":534,"tag":576,"props":1016,"children":1017},{"style":741},[1018],{"type":539,"value":1019}," \u003C=",{"type":534,"tag":576,"props":1021,"children":1022},{"style":769},[1023],{"type":539,"value":871},{"type":534,"tag":576,"props":1025,"children":1026},{"style":741},[1027],{"type":539,"value":852},{"type":534,"tag":576,"props":1029,"children":1030},{"style":741},[1031],{"type":539,"value":857},{"type":534,"tag":576,"props":1033,"children":1035},{"class":578,"line":1034},12,[1036,1041,1045,1049,1054,1059,1064,1069,1073,1077,1081,1086],{"type":534,"tag":576,"props":1037,"children":1038},{"style":747},[1039],{"type":539,"value":1040},"    if",{"type":534,"tag":576,"props":1042,"children":1043},{"style":741},[1044],{"type":539,"value":842},{"type":534,"tag":576,"props":1046,"children":1047},{"style":769},[1048],{"type":539,"value":847},{"type":534,"tag":576,"props":1050,"children":1051},{"style":741},[1052],{"type":539,"value":1053},"[",{"type":534,"tag":576,"props":1055,"children":1056},{"style":769},[1057],{"type":539,"value":1058},"i",{"type":534,"tag":576,"props":1060,"children":1061},{"style":741},[1062],{"type":539,"value":1063},"]",{"type":534,"tag":576,"props":1065,"children":1066},{"style":818},[1067],{"type":539,"value":1068}," !==",{"type":534,"tag":576,"props":1070,"children":1071},{"style":769},[1072],{"type":539,"value":880},{"type":534,"tag":576,"props":1074,"children":1075},{"style":741},[1076],{"type":539,"value":1053},{"type":534,"tag":576,"props":1078,"children":1079},{"style":769},[1080],{"type":539,"value":1014},{"type":534,"tag":576,"props":1082,"children":1083},{"style":741},[1084],{"type":539,"value":1085},"])",{"type":534,"tag":576,"props":1087,"children":1088},{"style":741},[1089],{"type":539,"value":857},{"type":534,"tag":576,"props":1091,"children":1093},{"class":578,"line":1092},13,[1094,1099,1104,1108,1113,1117,1122,1126,1131,1136,1141,1146,1150,1154,1158,1163,1168,1173,1177,1181,1186,1191,1195,1199,1203],{"type":534,"tag":576,"props":1095,"children":1096},{"style":769},[1097],{"type":539,"value":1098},"      s",{"type":534,"tag":576,"props":1100,"children":1101},{"style":818},[1102],{"type":539,"value":1103}," +=",{"type":534,"tag":576,"props":1105,"children":1106},{"style":769},[1107],{"type":539,"value":937},{"type":534,"tag":576,"props":1109,"children":1110},{"style":818},[1111],{"type":539,"value":1112}," -",{"type":534,"tag":576,"props":1114,"children":1115},{"style":769},[1116],{"type":539,"value":910},{"type":534,"tag":576,"props":1118,"children":1119},{"style":741},[1120],{"type":539,"value":1121}," >",{"type":534,"tag":576,"props":1123,"children":1124},{"style":917},[1125],{"type":539,"value":955},{"type":534,"tag":576,"props":1127,"children":1128},{"style":818},[1129],{"type":539,"value":1130}," ?",{"type":534,"tag":576,"props":1132,"children":1133},{"style":979},[1134],{"type":539,"value":1135}," `",{"type":534,"tag":576,"props":1137,"children":1138},{"style":741},[1139],{"type":539,"value":1140},"${",{"type":534,"tag":576,"props":1142,"children":1144},{"style":1143},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1145],{"type":539,"value":847},{"type":534,"tag":576,"props":1147,"children":1148},{"style":741},[1149],{"type":539,"value":1053},{"type":534,"tag":576,"props":1151,"children":1152},{"style":1143},[1153],{"type":539,"value":1058},{"type":534,"tag":576,"props":1155,"children":1156},{"style":741},[1157],{"type":539,"value":1063},{"type":534,"tag":576,"props":1159,"children":1160},{"style":741},[1161],{"type":539,"value":1162},"}${",{"type":534,"tag":576,"props":1164,"children":1165},{"style":1143},[1166],{"type":539,"value":1167},"j ",{"type":534,"tag":576,"props":1169,"children":1170},{"style":818},[1171],{"type":539,"value":1172},"-",{"type":534,"tag":576,"props":1174,"children":1175},{"style":1143},[1176],{"type":539,"value":910},{"type":534,"tag":576,"props":1178,"children":1179},{"style":741},[1180],{"type":539,"value":766},{"type":534,"tag":576,"props":1182,"children":1183},{"style":979},[1184],{"type":539,"value":1185},"`",{"type":534,"tag":576,"props":1187,"children":1188},{"style":818},[1189],{"type":539,"value":1190}," :",{"type":534,"tag":576,"props":1192,"children":1193},{"style":769},[1194],{"type":539,"value":880},{"type":534,"tag":576,"props":1196,"children":1197},{"style":741},[1198],{"type":539,"value":1053},{"type":534,"tag":576,"props":1200,"children":1201},{"style":769},[1202],{"type":539,"value":1058},{"type":534,"tag":576,"props":1204,"children":1205},{"style":741},[1206],{"type":539,"value":1207},"];\n",{"type":534,"tag":576,"props":1209,"children":1211},{"class":578,"line":1210},14,[1212,1217,1221,1225],{"type":534,"tag":576,"props":1213,"children":1214},{"style":769},[1215],{"type":539,"value":1216},"      i",{"type":534,"tag":576,"props":1218,"children":1219},{"style":741},[1220],{"type":539,"value":832},{"type":534,"tag":576,"props":1222,"children":1223},{"style":769},[1224],{"type":539,"value":937},{"type":534,"tag":576,"props":1226,"children":1227},{"style":741},[1228],{"type":539,"value":896},{"type":534,"tag":576,"props":1230,"children":1232},{"class":578,"line":1231},15,[1233],{"type":534,"tag":576,"props":1234,"children":1235},{"style":741},[1236],{"type":539,"value":1237},"    }\n",{"type":534,"tag":576,"props":1239,"children":1241},{"class":578,"line":1240},16,[1242,1247,1252],{"type":534,"tag":576,"props":1243,"children":1244},{"style":769},[1245],{"type":539,"value":1246},"    j",{"type":534,"tag":576,"props":1248,"children":1249},{"style":818},[1250],{"type":539,"value":1251},"++",{"type":534,"tag":576,"props":1253,"children":1254},{"style":741},[1255],{"type":539,"value":896},{"type":534,"tag":576,"props":1257,"children":1259},{"class":578,"line":1258},17,[1260],{"type":534,"tag":576,"props":1261,"children":1262},{"style":741},[1263],{"type":539,"value":1264},"  }\n",{"type":534,"tag":576,"props":1266,"children":1268},{"class":578,"line":1267},18,[1269],{"type":534,"tag":576,"props":1270,"children":1271},{"emptyLinePlaceholder":993},[1272],{"type":539,"value":996},{"type":534,"tag":576,"props":1274,"children":1276},{"class":578,"line":1275},19,[1277,1282,1286,1291,1295,1299,1303,1308,1312,1317,1321,1325,1329,1333,1337,1341,1345],{"type":534,"tag":576,"props":1278,"children":1279},{"style":747},[1280],{"type":539,"value":1281},"  for",{"type":534,"tag":576,"props":1283,"children":1284},{"style":741},[1285],{"type":539,"value":842},{"type":534,"tag":576,"props":1287,"children":1288},{"style":818},[1289],{"type":539,"value":1290},"let",{"type":534,"tag":576,"props":1292,"children":1293},{"style":769},[1294],{"type":539,"value":910},{"type":534,"tag":576,"props":1296,"children":1297},{"style":741},[1298],{"type":539,"value":832},{"type":534,"tag":576,"props":1300,"children":1301},{"style":917},[1302],{"type":539,"value":920},{"type":534,"tag":576,"props":1304,"children":1305},{"style":741},[1306],{"type":539,"value":1307},";",{"type":534,"tag":576,"props":1309,"children":1310},{"style":769},[1311],{"type":539,"value":910},{"type":534,"tag":576,"props":1313,"children":1314},{"style":741},[1315],{"type":539,"value":1316}," \u003C",{"type":534,"tag":576,"props":1318,"children":1319},{"style":769},[1320],{"type":539,"value":972},{"type":534,"tag":576,"props":1322,"children":1323},{"style":741},[1324],{"type":539,"value":885},{"type":534,"tag":576,"props":1326,"children":1327},{"style":888},[1328],{"type":539,"value":891},{"type":534,"tag":576,"props":1330,"children":1331},{"style":741},[1332],{"type":539,"value":1307},{"type":534,"tag":576,"props":1334,"children":1335},{"style":769},[1336],{"type":539,"value":910},{"type":534,"tag":576,"props":1338,"children":1339},{"style":818},[1340],{"type":539,"value":1251},{"type":534,"tag":576,"props":1342,"children":1343},{"style":741},[1344],{"type":539,"value":852},{"type":534,"tag":576,"props":1346,"children":1347},{"style":741},[1348],{"type":539,"value":857},{"type":534,"tag":576,"props":1350,"children":1352},{"class":578,"line":1351},20,[1353,1358,1362,1366,1370,1374,1378,1382,1386],{"type":534,"tag":576,"props":1354,"children":1355},{"style":769},[1356],{"type":539,"value":1357},"    chars",{"type":534,"tag":576,"props":1359,"children":1360},{"style":741},[1361],{"type":539,"value":1053},{"type":534,"tag":576,"props":1363,"children":1364},{"style":769},[1365],{"type":539,"value":1058},{"type":534,"tag":576,"props":1367,"children":1368},{"style":741},[1369],{"type":539,"value":1063},{"type":534,"tag":576,"props":1371,"children":1372},{"style":741},[1373],{"type":539,"value":832},{"type":534,"tag":576,"props":1375,"children":1376},{"style":769},[1377],{"type":539,"value":972},{"type":534,"tag":576,"props":1379,"children":1380},{"style":741},[1381],{"type":539,"value":1053},{"type":534,"tag":576,"props":1383,"children":1384},{"style":769},[1385],{"type":539,"value":1058},{"type":534,"tag":576,"props":1387,"children":1388},{"style":741},[1389],{"type":539,"value":1207},{"type":534,"tag":576,"props":1391,"children":1393},{"class":578,"line":1392},21,[1394],{"type":534,"tag":576,"props":1395,"children":1396},{"style":741},[1397],{"type":539,"value":1264},{"type":534,"tag":576,"props":1399,"children":1401},{"class":578,"line":1400},22,[1402],{"type":534,"tag":576,"props":1403,"children":1404},{"emptyLinePlaceholder":993},[1405],{"type":539,"value":996},{"type":534,"tag":576,"props":1407,"children":1409},{"class":578,"line":1408},23,[1410,1415,1419,1423,1427],{"type":534,"tag":576,"props":1411,"children":1412},{"style":747},[1413],{"type":539,"value":1414},"  return",{"type":534,"tag":576,"props":1416,"children":1417},{"style":769},[1418],{"type":539,"value":972},{"type":534,"tag":576,"props":1420,"children":1421},{"style":741},[1422],{"type":539,"value":885},{"type":534,"tag":576,"props":1424,"children":1425},{"style":888},[1426],{"type":539,"value":891},{"type":534,"tag":576,"props":1428,"children":1429},{"style":741},[1430],{"type":539,"value":896},{"type":534,"tag":576,"props":1432,"children":1434},{"class":578,"line":1433},24,[1435],{"type":534,"tag":576,"props":1436,"children":1437},{"style":741},[1438],{"type":539,"value":1439},"};\n",{"type":534,"tag":1441,"props":1442,"children":1443},"style",{},[1444],{"type":539,"value":1445},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":527,"searchDepth":814,"depth":814,"links":1447},[1448,1449],{"id":699,"depth":588,"text":699},{"id":704,"depth":588,"text":704,"children":1450},[1451],{"id":710,"depth":597,"text":710},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1458,1460],{"_path":234,"title":233,"description":1459},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":240,"title":239,"description":1461},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1714096145544]