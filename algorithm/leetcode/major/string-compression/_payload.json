[{"data":1,"prerenderedAt":1484},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":546,"/algorithm/leetcode/major/string-compression-surround":1479},[4,269,298,514,522,531],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":513},"代码考核","/code-assessment",[302,404,506],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,337,353,381,388,395,398,401],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328,331,334],{"title":311,"_path":312},"polyfill","/code-assessment/source/native-api/polyfill",{"title":314,"_path":315},"ajax","/code-assessment/source/native-api/ajax",{"title":317,"_path":318},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":320,"_path":321},"new 操作符","/code-assessment/source/native-api/new",{"title":323,"_path":324},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":326,"_path":327},"定时器","/code-assessment/source/native-api/timer",{"title":329,"_path":330},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":332,"_path":333},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":335,"_path":336},"extends","/code-assessment/source/native-api/extends",{"title":338,"_path":339,"children":340},"函数 Function","/code-assessment/source/function",[341,344,347,350],{"title":342,"_path":343},"函数防抖","/code-assessment/source/function/debounce",{"title":345,"_path":346},"函数节流","/code-assessment/source/function/throttle",{"title":348,"_path":349},"函数柯理化","/code-assessment/source/function/curry",{"title":351,"_path":352},"函数睡眠","/code-assessment/source/function/sleep",{"title":354,"_path":355,"children":356},"数组 Array","/code-assessment/source/array",[357,360,363,366,369,372,375,378],{"title":358,"_path":359},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":361,"_path":362},"数组扁平化","/code-assessment/source/array/flat",{"title":364,"_path":365},"原型方法","/code-assessment/source/array/prototype-method",{"title":367,"_path":368},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":370,"_path":371},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":373,"_path":374},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":376,"_path":377},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":379,"_path":380},"二维数组","/code-assessment/source/array/2d-array",{"title":382,"_path":383,"children":384},"字符串 String","/code-assessment/source/string",[385],{"title":386,"_path":387},"repeat()","/code-assessment/source/string/repeat",{"title":389,"_path":390,"children":391},"集合 Set","/code-assessment/source/set",[392],{"title":393,"_path":394},"遍历集合","/code-assessment/source/set/traverse",{"title":396,"_path":397},"获取通用类型","/code-assessment/source/get-generic-type",{"title":399,"_path":400},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":402,"_path":403},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":405,"_path":406,"children":407},"业务场景","/code-assessment/scene",[408,439,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503],{"title":409,"_path":410,"children":411},"Promise","/code-assessment/scene/promise",[412,415,418,421,424,427,430,433,436],{"title":413,"_path":414},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":416,"_path":417},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":419,"_path":420},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":422,"_path":423},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":425,"_path":426},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":428,"_path":429},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":431,"_path":432},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":434,"_path":435},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":437,"_path":438},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":440,"_path":441,"children":442},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[443,446],{"title":444,"_path":445},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":447,"_path":448},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":450,"_path":451},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":453,"_path":454},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":456,"_path":457},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":459,"_path":460},"倒计时","/code-assessment/scene/countdown",{"title":462,"_path":463},"日期格式化","/code-assessment/scene/date-format",{"title":465,"_path":466},"实现前端路由","/code-assessment/scene/frontend-route",{"title":468,"_path":469},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":471,"_path":472},"lodash.get","/code-assessment/scene/lodash-get",{"title":474,"_path":475},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":477,"_path":478},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":480,"_path":481},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":483,"_path":484},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":486,"_path":487},"随机数","/code-assessment/scene/random-number",{"title":489,"_path":490},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":492,"_path":493},"sku 算法实现","/code-assessment/scene/sku",{"title":495,"_path":496},"整数分割","/code-assessment/scene/split-number",{"title":498,"_path":499},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":501,"_path":502},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":504,"_path":505},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":507,"_path":508,"children":509},"Ts 类型挑战","/code-assessment/type-challeges",[510],{"title":511,"_path":512},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":515,"_path":516,"children":517,"icon":521},"项目","/project",[518],{"title":519,"_path":520},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":523,"_path":524,"children":525,"icon":530},"设计模式","/design-mode",[526,527],{"title":523,"_path":524},{"title":528,"_path":529},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":532,"_path":533,"children":534,"icon":545},"后端语言","/backend-languages",[535],{"title":536,"_path":537,"children":538},"Python","/backend-languages/python",[539,542],{"title":540,"_path":541},"基础","/backend-languages/python/base",{"title":543,"_path":544},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":237,"_dir":547,"_draft":548,"_partial":548,"_locale":549,"title":236,"description":550,"url":551,"body":552,"_type":1474,"_id":1475,"_source":1476,"_file":1477,"_extension":1478},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":553,"children":554,"toc":1468},"root",[555,562,567,572,577,582,587,626,631,662,667,698,703,718,724,729,735,1462],{"type":556,"tag":557,"props":558,"children":559},"element","p",{},[560],{"type":561,"value":550},"text",{"type":556,"tag":557,"props":563,"children":564},{},[565],{"type":561,"value":566},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":556,"tag":557,"props":568,"children":569},{},[570],{"type":561,"value":571},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":556,"tag":557,"props":573,"children":574},{},[575],{"type":561,"value":576},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":556,"tag":557,"props":578,"children":579},{},[580],{"type":561,"value":581},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":556,"tag":557,"props":583,"children":584},{},[585],{"type":561,"value":586},"示例 1：",{"type":556,"tag":588,"props":589,"children":592},"pre",{"className":590,"code":591,"language":561,"meta":549,"style":549},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[593],{"type":556,"tag":594,"props":595,"children":596},"code",{"__ignoreMap":549},[597,608,617],{"type":556,"tag":598,"props":599,"children":602},"span",{"class":600,"line":601},"line",1,[603],{"type":556,"tag":598,"props":604,"children":605},{},[606],{"type":561,"value":607},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":556,"tag":598,"props":609,"children":611},{"class":600,"line":610},2,[612],{"type":556,"tag":598,"props":613,"children":614},{},[615],{"type":561,"value":616},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":556,"tag":598,"props":618,"children":620},{"class":600,"line":619},3,[621],{"type":556,"tag":598,"props":622,"children":623},{},[624],{"type":561,"value":625},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":556,"tag":557,"props":627,"children":628},{},[629],{"type":561,"value":630},"示例 2：",{"type":556,"tag":588,"props":632,"children":634},{"className":590,"code":633,"language":561,"meta":549,"style":549},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[635],{"type":556,"tag":594,"props":636,"children":637},{"__ignoreMap":549},[638,646,654],{"type":556,"tag":598,"props":639,"children":640},{"class":600,"line":601},[641],{"type":556,"tag":598,"props":642,"children":643},{},[644],{"type":561,"value":645},"输入：chars = [\"a\"]\n",{"type":556,"tag":598,"props":647,"children":648},{"class":600,"line":610},[649],{"type":556,"tag":598,"props":650,"children":651},{},[652],{"type":561,"value":653},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":556,"tag":598,"props":655,"children":656},{"class":600,"line":619},[657],{"type":556,"tag":598,"props":658,"children":659},{},[660],{"type":561,"value":661},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":556,"tag":557,"props":663,"children":664},{},[665],{"type":561,"value":666},"示例 3：",{"type":556,"tag":588,"props":668,"children":670},{"className":590,"code":669,"language":561,"meta":549,"style":549},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[671],{"type":556,"tag":594,"props":672,"children":673},{"__ignoreMap":549},[674,682,690],{"type":556,"tag":598,"props":675,"children":676},{"class":600,"line":601},[677],{"type":556,"tag":598,"props":678,"children":679},{},[680],{"type":561,"value":681},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":556,"tag":598,"props":683,"children":684},{"class":600,"line":610},[685],{"type":556,"tag":598,"props":686,"children":687},{},[688],{"type":561,"value":689},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":556,"tag":598,"props":691,"children":692},{"class":600,"line":619},[693],{"type":556,"tag":598,"props":694,"children":695},{},[696],{"type":561,"value":697},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":556,"tag":557,"props":699,"children":700},{},[701],{"type":561,"value":702},"提示：",{"type":556,"tag":704,"props":705,"children":706},"ul",{},[707,713],{"type":556,"tag":708,"props":709,"children":710},"li",{},[711],{"type":561,"value":712},"1 \u003C= chars.length \u003C= 2000",{"type":556,"tag":708,"props":714,"children":715},{},[716],{"type":561,"value":717},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":556,"tag":719,"props":720,"children":722},"h2",{"id":721},"解题思路",[723],{"type":561,"value":721},{"type":556,"tag":719,"props":725,"children":727},{"id":726},"实现",[728],{"type":561,"value":726},{"type":556,"tag":730,"props":731,"children":733},"h3",{"id":732},"双指针",[734],{"type":561,"value":732},{"type":556,"tag":588,"props":736,"children":740},{"className":737,"code":738,"language":739,"meta":549,"style":549},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[741],{"type":556,"tag":594,"props":742,"children":743},{"__ignoreMap":549},[744,753,795,825,834,880,919,947,982,1009,1019,1054,1112,1230,1251,1260,1278,1287,1295,1371,1412,1420,1428,1453],{"type":556,"tag":598,"props":745,"children":746},{"class":600,"line":601},[747],{"type":556,"tag":598,"props":748,"children":750},{"style":749},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[751],{"type":561,"value":752},"/**\n",{"type":556,"tag":598,"props":754,"children":755},{"class":600,"line":610},[756,761,767,773,778,784,789],{"type":556,"tag":598,"props":757,"children":758},{"style":749},[759],{"type":561,"value":760}," * ",{"type":556,"tag":598,"props":762,"children":764},{"style":763},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[765],{"type":561,"value":766},"@",{"type":556,"tag":598,"props":768,"children":770},{"style":769},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[771],{"type":561,"value":772},"param",{"type":556,"tag":598,"props":774,"children":775},{"style":763},[776],{"type":561,"value":777}," {",{"type":556,"tag":598,"props":779,"children":781},{"style":780},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[782],{"type":561,"value":783},"character[]",{"type":556,"tag":598,"props":785,"children":786},{"style":763},[787],{"type":561,"value":788},"}",{"type":556,"tag":598,"props":790,"children":792},{"style":791},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[793],{"type":561,"value":794}," chars\n",{"type":556,"tag":598,"props":796,"children":797},{"class":600,"line":619},[798,802,806,811,815,820],{"type":556,"tag":598,"props":799,"children":800},{"style":749},[801],{"type":561,"value":760},{"type":556,"tag":598,"props":803,"children":804},{"style":763},[805],{"type":561,"value":766},{"type":556,"tag":598,"props":807,"children":808},{"style":769},[809],{"type":561,"value":810},"return",{"type":556,"tag":598,"props":812,"children":813},{"style":763},[814],{"type":561,"value":777},{"type":556,"tag":598,"props":816,"children":817},{"style":780},[818],{"type":561,"value":819},"number",{"type":556,"tag":598,"props":821,"children":822},{"style":763},[823],{"type":561,"value":824},"}\n",{"type":556,"tag":598,"props":826,"children":828},{"class":600,"line":827},4,[829],{"type":556,"tag":598,"props":830,"children":831},{"style":749},[832],{"type":561,"value":833}," */\n",{"type":556,"tag":598,"props":835,"children":837},{"class":600,"line":836},5,[838,844,850,855,860,865,870,875],{"type":556,"tag":598,"props":839,"children":841},{"style":840},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[842],{"type":561,"value":843},"var",{"type":556,"tag":598,"props":845,"children":847},{"style":846},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[848],{"type":561,"value":849}," compress",{"type":556,"tag":598,"props":851,"children":852},{"style":763},[853],{"type":561,"value":854}," =",{"type":556,"tag":598,"props":856,"children":857},{"style":840},[858],{"type":561,"value":859}," function",{"type":556,"tag":598,"props":861,"children":862},{"style":763},[863],{"type":561,"value":864}," (",{"type":556,"tag":598,"props":866,"children":867},{"style":791},[868],{"type":561,"value":869},"chars",{"type":556,"tag":598,"props":871,"children":872},{"style":763},[873],{"type":561,"value":874},")",{"type":556,"tag":598,"props":876,"children":877},{"style":763},[878],{"type":561,"value":879}," {\n",{"type":556,"tag":598,"props":881,"children":883},{"class":600,"line":882},6,[884,889,894,898,903,908,914],{"type":556,"tag":598,"props":885,"children":886},{"style":840},[887],{"type":561,"value":888},"  const",{"type":556,"tag":598,"props":890,"children":891},{"style":791},[892],{"type":561,"value":893}," len",{"type":556,"tag":598,"props":895,"children":896},{"style":763},[897],{"type":561,"value":854},{"type":556,"tag":598,"props":899,"children":900},{"style":791},[901],{"type":561,"value":902}," chars",{"type":556,"tag":598,"props":904,"children":905},{"style":763},[906],{"type":561,"value":907},".",{"type":556,"tag":598,"props":909,"children":911},{"style":910},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[912],{"type":561,"value":913},"length",{"type":556,"tag":598,"props":915,"children":916},{"style":763},[917],{"type":561,"value":918},";\n",{"type":556,"tag":598,"props":920,"children":922},{"class":600,"line":921},7,[923,928,933,937,943],{"type":556,"tag":598,"props":924,"children":925},{"style":840},[926],{"type":561,"value":927},"  let",{"type":556,"tag":598,"props":929,"children":930},{"style":791},[931],{"type":561,"value":932}," i",{"type":556,"tag":598,"props":934,"children":935},{"style":763},[936],{"type":561,"value":854},{"type":556,"tag":598,"props":938,"children":940},{"style":939},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[941],{"type":561,"value":942}," 0",{"type":556,"tag":598,"props":944,"children":945},{"style":763},[946],{"type":561,"value":918},{"type":556,"tag":598,"props":948,"children":950},{"class":600,"line":949},8,[951,955,960,964,968,973,978],{"type":556,"tag":598,"props":952,"children":953},{"style":840},[954],{"type":561,"value":927},{"type":556,"tag":598,"props":956,"children":957},{"style":791},[958],{"type":561,"value":959}," j",{"type":556,"tag":598,"props":961,"children":962},{"style":763},[963],{"type":561,"value":854},{"type":556,"tag":598,"props":965,"children":966},{"style":791},[967],{"type":561,"value":932},{"type":556,"tag":598,"props":969,"children":970},{"style":840},[971],{"type":561,"value":972}," +",{"type":556,"tag":598,"props":974,"children":975},{"style":939},[976],{"type":561,"value":977}," 1",{"type":556,"tag":598,"props":979,"children":980},{"style":763},[981],{"type":561,"value":918},{"type":556,"tag":598,"props":983,"children":985},{"class":600,"line":984},9,[986,990,995,999,1005],{"type":556,"tag":598,"props":987,"children":988},{"style":840},[989],{"type":561,"value":927},{"type":556,"tag":598,"props":991,"children":992},{"style":791},[993],{"type":561,"value":994}," s",{"type":556,"tag":598,"props":996,"children":997},{"style":763},[998],{"type":561,"value":854},{"type":556,"tag":598,"props":1000,"children":1002},{"style":1001},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1003],{"type":561,"value":1004}," \"\"",{"type":556,"tag":598,"props":1006,"children":1007},{"style":763},[1008],{"type":561,"value":918},{"type":556,"tag":598,"props":1010,"children":1012},{"class":600,"line":1011},10,[1013],{"type":556,"tag":598,"props":1014,"children":1016},{"emptyLinePlaceholder":1015},true,[1017],{"type":561,"value":1018},"\n",{"type":556,"tag":598,"props":1020,"children":1022},{"class":600,"line":1021},11,[1023,1028,1032,1037,1042,1046,1050],{"type":556,"tag":598,"props":1024,"children":1025},{"style":769},[1026],{"type":561,"value":1027},"  while",{"type":556,"tag":598,"props":1029,"children":1030},{"style":763},[1031],{"type":561,"value":864},{"type":556,"tag":598,"props":1033,"children":1034},{"style":791},[1035],{"type":561,"value":1036},"j",{"type":556,"tag":598,"props":1038,"children":1039},{"style":763},[1040],{"type":561,"value":1041}," \u003C=",{"type":556,"tag":598,"props":1043,"children":1044},{"style":791},[1045],{"type":561,"value":893},{"type":556,"tag":598,"props":1047,"children":1048},{"style":763},[1049],{"type":561,"value":874},{"type":556,"tag":598,"props":1051,"children":1052},{"style":763},[1053],{"type":561,"value":879},{"type":556,"tag":598,"props":1055,"children":1057},{"class":600,"line":1056},12,[1058,1063,1067,1071,1076,1081,1086,1091,1095,1099,1103,1108],{"type":556,"tag":598,"props":1059,"children":1060},{"style":769},[1061],{"type":561,"value":1062},"    if",{"type":556,"tag":598,"props":1064,"children":1065},{"style":763},[1066],{"type":561,"value":864},{"type":556,"tag":598,"props":1068,"children":1069},{"style":791},[1070],{"type":561,"value":869},{"type":556,"tag":598,"props":1072,"children":1073},{"style":763},[1074],{"type":561,"value":1075},"[",{"type":556,"tag":598,"props":1077,"children":1078},{"style":791},[1079],{"type":561,"value":1080},"i",{"type":556,"tag":598,"props":1082,"children":1083},{"style":763},[1084],{"type":561,"value":1085},"]",{"type":556,"tag":598,"props":1087,"children":1088},{"style":840},[1089],{"type":561,"value":1090}," !==",{"type":556,"tag":598,"props":1092,"children":1093},{"style":791},[1094],{"type":561,"value":902},{"type":556,"tag":598,"props":1096,"children":1097},{"style":763},[1098],{"type":561,"value":1075},{"type":556,"tag":598,"props":1100,"children":1101},{"style":791},[1102],{"type":561,"value":1036},{"type":556,"tag":598,"props":1104,"children":1105},{"style":763},[1106],{"type":561,"value":1107},"])",{"type":556,"tag":598,"props":1109,"children":1110},{"style":763},[1111],{"type":561,"value":879},{"type":556,"tag":598,"props":1113,"children":1115},{"class":600,"line":1114},13,[1116,1121,1126,1130,1135,1139,1144,1148,1153,1158,1163,1168,1172,1176,1180,1185,1190,1195,1199,1203,1208,1213,1217,1221,1225],{"type":556,"tag":598,"props":1117,"children":1118},{"style":791},[1119],{"type":561,"value":1120},"      s",{"type":556,"tag":598,"props":1122,"children":1123},{"style":840},[1124],{"type":561,"value":1125}," +=",{"type":556,"tag":598,"props":1127,"children":1128},{"style":791},[1129],{"type":561,"value":959},{"type":556,"tag":598,"props":1131,"children":1132},{"style":840},[1133],{"type":561,"value":1134}," -",{"type":556,"tag":598,"props":1136,"children":1137},{"style":791},[1138],{"type":561,"value":932},{"type":556,"tag":598,"props":1140,"children":1141},{"style":763},[1142],{"type":561,"value":1143}," >",{"type":556,"tag":598,"props":1145,"children":1146},{"style":939},[1147],{"type":561,"value":977},{"type":556,"tag":598,"props":1149,"children":1150},{"style":840},[1151],{"type":561,"value":1152}," ?",{"type":556,"tag":598,"props":1154,"children":1155},{"style":1001},[1156],{"type":561,"value":1157}," `",{"type":556,"tag":598,"props":1159,"children":1160},{"style":763},[1161],{"type":561,"value":1162},"${",{"type":556,"tag":598,"props":1164,"children":1166},{"style":1165},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1167],{"type":561,"value":869},{"type":556,"tag":598,"props":1169,"children":1170},{"style":763},[1171],{"type":561,"value":1075},{"type":556,"tag":598,"props":1173,"children":1174},{"style":1165},[1175],{"type":561,"value":1080},{"type":556,"tag":598,"props":1177,"children":1178},{"style":763},[1179],{"type":561,"value":1085},{"type":556,"tag":598,"props":1181,"children":1182},{"style":763},[1183],{"type":561,"value":1184},"}${",{"type":556,"tag":598,"props":1186,"children":1187},{"style":1165},[1188],{"type":561,"value":1189},"j ",{"type":556,"tag":598,"props":1191,"children":1192},{"style":840},[1193],{"type":561,"value":1194},"-",{"type":556,"tag":598,"props":1196,"children":1197},{"style":1165},[1198],{"type":561,"value":932},{"type":556,"tag":598,"props":1200,"children":1201},{"style":763},[1202],{"type":561,"value":788},{"type":556,"tag":598,"props":1204,"children":1205},{"style":1001},[1206],{"type":561,"value":1207},"`",{"type":556,"tag":598,"props":1209,"children":1210},{"style":840},[1211],{"type":561,"value":1212}," :",{"type":556,"tag":598,"props":1214,"children":1215},{"style":791},[1216],{"type":561,"value":902},{"type":556,"tag":598,"props":1218,"children":1219},{"style":763},[1220],{"type":561,"value":1075},{"type":556,"tag":598,"props":1222,"children":1223},{"style":791},[1224],{"type":561,"value":1080},{"type":556,"tag":598,"props":1226,"children":1227},{"style":763},[1228],{"type":561,"value":1229},"];\n",{"type":556,"tag":598,"props":1231,"children":1233},{"class":600,"line":1232},14,[1234,1239,1243,1247],{"type":556,"tag":598,"props":1235,"children":1236},{"style":791},[1237],{"type":561,"value":1238},"      i",{"type":556,"tag":598,"props":1240,"children":1241},{"style":763},[1242],{"type":561,"value":854},{"type":556,"tag":598,"props":1244,"children":1245},{"style":791},[1246],{"type":561,"value":959},{"type":556,"tag":598,"props":1248,"children":1249},{"style":763},[1250],{"type":561,"value":918},{"type":556,"tag":598,"props":1252,"children":1254},{"class":600,"line":1253},15,[1255],{"type":556,"tag":598,"props":1256,"children":1257},{"style":763},[1258],{"type":561,"value":1259},"    }\n",{"type":556,"tag":598,"props":1261,"children":1263},{"class":600,"line":1262},16,[1264,1269,1274],{"type":556,"tag":598,"props":1265,"children":1266},{"style":791},[1267],{"type":561,"value":1268},"    j",{"type":556,"tag":598,"props":1270,"children":1271},{"style":840},[1272],{"type":561,"value":1273},"++",{"type":556,"tag":598,"props":1275,"children":1276},{"style":763},[1277],{"type":561,"value":918},{"type":556,"tag":598,"props":1279,"children":1281},{"class":600,"line":1280},17,[1282],{"type":556,"tag":598,"props":1283,"children":1284},{"style":763},[1285],{"type":561,"value":1286},"  }\n",{"type":556,"tag":598,"props":1288,"children":1290},{"class":600,"line":1289},18,[1291],{"type":556,"tag":598,"props":1292,"children":1293},{"emptyLinePlaceholder":1015},[1294],{"type":561,"value":1018},{"type":556,"tag":598,"props":1296,"children":1298},{"class":600,"line":1297},19,[1299,1304,1308,1313,1317,1321,1325,1330,1334,1339,1343,1347,1351,1355,1359,1363,1367],{"type":556,"tag":598,"props":1300,"children":1301},{"style":769},[1302],{"type":561,"value":1303},"  for",{"type":556,"tag":598,"props":1305,"children":1306},{"style":763},[1307],{"type":561,"value":864},{"type":556,"tag":598,"props":1309,"children":1310},{"style":840},[1311],{"type":561,"value":1312},"let",{"type":556,"tag":598,"props":1314,"children":1315},{"style":791},[1316],{"type":561,"value":932},{"type":556,"tag":598,"props":1318,"children":1319},{"style":763},[1320],{"type":561,"value":854},{"type":556,"tag":598,"props":1322,"children":1323},{"style":939},[1324],{"type":561,"value":942},{"type":556,"tag":598,"props":1326,"children":1327},{"style":763},[1328],{"type":561,"value":1329},";",{"type":556,"tag":598,"props":1331,"children":1332},{"style":791},[1333],{"type":561,"value":932},{"type":556,"tag":598,"props":1335,"children":1336},{"style":763},[1337],{"type":561,"value":1338}," \u003C",{"type":556,"tag":598,"props":1340,"children":1341},{"style":791},[1342],{"type":561,"value":994},{"type":556,"tag":598,"props":1344,"children":1345},{"style":763},[1346],{"type":561,"value":907},{"type":556,"tag":598,"props":1348,"children":1349},{"style":910},[1350],{"type":561,"value":913},{"type":556,"tag":598,"props":1352,"children":1353},{"style":763},[1354],{"type":561,"value":1329},{"type":556,"tag":598,"props":1356,"children":1357},{"style":791},[1358],{"type":561,"value":932},{"type":556,"tag":598,"props":1360,"children":1361},{"style":840},[1362],{"type":561,"value":1273},{"type":556,"tag":598,"props":1364,"children":1365},{"style":763},[1366],{"type":561,"value":874},{"type":556,"tag":598,"props":1368,"children":1369},{"style":763},[1370],{"type":561,"value":879},{"type":556,"tag":598,"props":1372,"children":1374},{"class":600,"line":1373},20,[1375,1380,1384,1388,1392,1396,1400,1404,1408],{"type":556,"tag":598,"props":1376,"children":1377},{"style":791},[1378],{"type":561,"value":1379},"    chars",{"type":556,"tag":598,"props":1381,"children":1382},{"style":763},[1383],{"type":561,"value":1075},{"type":556,"tag":598,"props":1385,"children":1386},{"style":791},[1387],{"type":561,"value":1080},{"type":556,"tag":598,"props":1389,"children":1390},{"style":763},[1391],{"type":561,"value":1085},{"type":556,"tag":598,"props":1393,"children":1394},{"style":763},[1395],{"type":561,"value":854},{"type":556,"tag":598,"props":1397,"children":1398},{"style":791},[1399],{"type":561,"value":994},{"type":556,"tag":598,"props":1401,"children":1402},{"style":763},[1403],{"type":561,"value":1075},{"type":556,"tag":598,"props":1405,"children":1406},{"style":791},[1407],{"type":561,"value":1080},{"type":556,"tag":598,"props":1409,"children":1410},{"style":763},[1411],{"type":561,"value":1229},{"type":556,"tag":598,"props":1413,"children":1415},{"class":600,"line":1414},21,[1416],{"type":556,"tag":598,"props":1417,"children":1418},{"style":763},[1419],{"type":561,"value":1286},{"type":556,"tag":598,"props":1421,"children":1423},{"class":600,"line":1422},22,[1424],{"type":556,"tag":598,"props":1425,"children":1426},{"emptyLinePlaceholder":1015},[1427],{"type":561,"value":1018},{"type":556,"tag":598,"props":1429,"children":1431},{"class":600,"line":1430},23,[1432,1437,1441,1445,1449],{"type":556,"tag":598,"props":1433,"children":1434},{"style":769},[1435],{"type":561,"value":1436},"  return",{"type":556,"tag":598,"props":1438,"children":1439},{"style":791},[1440],{"type":561,"value":994},{"type":556,"tag":598,"props":1442,"children":1443},{"style":763},[1444],{"type":561,"value":907},{"type":556,"tag":598,"props":1446,"children":1447},{"style":910},[1448],{"type":561,"value":913},{"type":556,"tag":598,"props":1450,"children":1451},{"style":763},[1452],{"type":561,"value":918},{"type":556,"tag":598,"props":1454,"children":1456},{"class":600,"line":1455},24,[1457],{"type":556,"tag":598,"props":1458,"children":1459},{"style":763},[1460],{"type":561,"value":1461},"};\n",{"type":556,"tag":1463,"props":1464,"children":1465},"style",{},[1466],{"type":561,"value":1467},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":549,"searchDepth":836,"depth":836,"links":1469},[1470,1471],{"id":721,"depth":610,"text":721},{"id":726,"depth":610,"text":726,"children":1472},[1473],{"id":732,"depth":619,"text":732},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1480,1482],{"_path":234,"title":233,"description":1481},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":240,"title":239,"description":1483},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1714279835953]