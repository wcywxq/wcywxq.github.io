[{"data":1,"prerenderedAt":1441},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":503,"/algorithm/leetcode/major/string-compression-surround":1436},[4,269,298,471,479,488],{"title":5,"_path":6,"children":7,"icon":268},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":221,"_path":222},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":224,"_path":225},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":227,"_path":228},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":230,"_path":231},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":233,"_path":234},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":236,"_path":237},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":239,"_path":240},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":242,"_path":243},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":245,"_path":246},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":248,"_path":249},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":251,"_path":252},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":254,"_path":255},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":257,"_path":258},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":260,"_path":261},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":263,"_path":264},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":266,"_path":267},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":270,"_path":271,"children":272,"icon":297},"八股文","/endorsement",[273,284],{"title":274,"_path":275,"children":276},"构建工具","/endorsement/build-tools",[277],{"title":278,"_path":279,"children":280},"Webpack","/endorsement/build-tools/webpack",[281],{"title":282,"_path":283},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":285,"_path":286,"children":287},"Html","/endorsement/html",[288,291,294],{"title":289,"_path":290},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":292,"_path":293},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":295,"_path":296},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":299,"_path":300,"children":301,"icon":470},"代码考核","/code-assessment",[302,370,463],{"title":303,"_path":304,"children":305},"源码实现","/code-assessment/source",[306,331,347,360,367],{"title":307,"_path":308,"children":309},"原生 api","/code-assessment/source/native-api",[310,313,316,319,322,325,328],{"title":311,"_path":312},"ajax","/code-assessment/source/native-api/ajax",{"title":314,"_path":315},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":317,"_path":318},"new 操作符","/code-assessment/source/native-api/new",{"title":320,"_path":321},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":323,"_path":324},"定时器","/code-assessment/source/native-api/timer",{"title":326,"_path":327},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":329,"_path":330},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":332,"_path":333,"children":334},"函数 Function","/code-assessment/source/function",[335,338,341,344],{"title":336,"_path":337},"函数防抖","/code-assessment/source/function/debounce",{"title":339,"_path":340},"函数节流","/code-assessment/source/function/throttle",{"title":342,"_path":343},"函数柯理化","/code-assessment/source/function/curry",{"title":345,"_path":346},"函数睡眠","/code-assessment/source/function/sleep",{"title":348,"_path":349,"children":350},"数组 Array","/code-assessment/source/array",[351,354,357],{"title":352,"_path":353},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":355,"_path":356},"数组扁平化","/code-assessment/source/array/flat",{"title":358,"_path":359},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":361,"_path":362,"children":363},"字符串 String","/code-assessment/source/string",[364],{"title":365,"_path":366},"repeat()","/code-assessment/source/string/repeat",{"title":368,"_path":369},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":371,"_path":372,"children":373},"业务场景","/code-assessment/scene",[374,399,409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460],{"title":375,"_path":376,"children":377},"Promise","/code-assessment/scene/promise",[378,381,384,387,390,393,396],{"title":379,"_path":380},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":382,"_path":383},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":385,"_path":386},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":388,"_path":389},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":391,"_path":392},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":394,"_path":395},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":397,"_path":398},"promise 每隔 1s 输出","/code-assessment/scene/promise/promise-output-every-1s",{"title":400,"_path":401,"children":402},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[403,406],{"title":404,"_path":405},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":407,"_path":408},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":410,"_path":411},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":413,"_path":414},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":416,"_path":417},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":419,"_path":420},"倒计时","/code-assessment/scene/countdown",{"title":422,"_path":423},"日期格式化","/code-assessment/scene/date-format",{"title":425,"_path":426},"实现前端路由","/code-assessment/scene/frontend-route",{"title":428,"_path":429},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":431,"_path":432},"lodash.get","/code-assessment/scene/lodash-get",{"title":434,"_path":435},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":437,"_path":438},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":440,"_path":441},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":443,"_path":444},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":446,"_path":447},"随机数","/code-assessment/scene/random-number",{"title":449,"_path":450},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":452,"_path":453},"sku 算法实现","/code-assessment/scene/sku",{"title":455,"_path":456},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":458,"_path":459},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":461,"_path":462},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":464,"_path":465,"children":466},"Ts 类型挑战","/code-assessment/type-challeges",[467],{"title":468,"_path":469},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":472,"_path":473,"children":474,"icon":478},"项目","/project",[475],{"title":476,"_path":477},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":480,"_path":481,"children":482,"icon":487},"设计模式","/design-mode",[483,484],{"title":480,"_path":481},{"title":485,"_path":486},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":489,"_path":490,"children":491,"icon":502},"后端语言","/backend-languages",[492],{"title":493,"_path":494,"children":495},"Python","/backend-languages/python",[496,499],{"title":497,"_path":498},"基础","/backend-languages/python/base",{"title":500,"_path":501},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":237,"_dir":504,"_draft":505,"_partial":505,"_locale":506,"title":236,"description":507,"url":508,"body":509,"_type":1431,"_id":1432,"_source":1433,"_file":1434,"_extension":1435},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":510,"children":511,"toc":1425},"root",[512,519,524,529,534,539,544,583,588,619,624,655,660,675,681,686,692,1419],{"type":513,"tag":514,"props":515,"children":516},"element","p",{},[517],{"type":518,"value":507},"text",{"type":513,"tag":514,"props":520,"children":521},{},[522],{"type":518,"value":523},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":513,"tag":514,"props":525,"children":526},{},[527],{"type":518,"value":528},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":513,"tag":514,"props":530,"children":531},{},[532],{"type":518,"value":533},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":513,"tag":514,"props":535,"children":536},{},[537],{"type":518,"value":538},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":513,"tag":514,"props":540,"children":541},{},[542],{"type":518,"value":543},"示例 1：",{"type":513,"tag":545,"props":546,"children":549},"pre",{"className":547,"code":548,"language":518,"meta":506,"style":506},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[550],{"type":513,"tag":551,"props":552,"children":553},"code",{"__ignoreMap":506},[554,565,574],{"type":513,"tag":555,"props":556,"children":559},"span",{"class":557,"line":558},"line",1,[560],{"type":513,"tag":555,"props":561,"children":562},{},[563],{"type":518,"value":564},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":513,"tag":555,"props":566,"children":568},{"class":557,"line":567},2,[569],{"type":513,"tag":555,"props":570,"children":571},{},[572],{"type":518,"value":573},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":513,"tag":555,"props":575,"children":577},{"class":557,"line":576},3,[578],{"type":513,"tag":555,"props":579,"children":580},{},[581],{"type":518,"value":582},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":513,"tag":514,"props":584,"children":585},{},[586],{"type":518,"value":587},"示例 2：",{"type":513,"tag":545,"props":589,"children":591},{"className":547,"code":590,"language":518,"meta":506,"style":506},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[592],{"type":513,"tag":551,"props":593,"children":594},{"__ignoreMap":506},[595,603,611],{"type":513,"tag":555,"props":596,"children":597},{"class":557,"line":558},[598],{"type":513,"tag":555,"props":599,"children":600},{},[601],{"type":518,"value":602},"输入：chars = [\"a\"]\n",{"type":513,"tag":555,"props":604,"children":605},{"class":557,"line":567},[606],{"type":513,"tag":555,"props":607,"children":608},{},[609],{"type":518,"value":610},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":513,"tag":555,"props":612,"children":613},{"class":557,"line":576},[614],{"type":513,"tag":555,"props":615,"children":616},{},[617],{"type":518,"value":618},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":513,"tag":514,"props":620,"children":621},{},[622],{"type":518,"value":623},"示例 3：",{"type":513,"tag":545,"props":625,"children":627},{"className":547,"code":626,"language":518,"meta":506,"style":506},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[628],{"type":513,"tag":551,"props":629,"children":630},{"__ignoreMap":506},[631,639,647],{"type":513,"tag":555,"props":632,"children":633},{"class":557,"line":558},[634],{"type":513,"tag":555,"props":635,"children":636},{},[637],{"type":518,"value":638},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":513,"tag":555,"props":640,"children":641},{"class":557,"line":567},[642],{"type":513,"tag":555,"props":643,"children":644},{},[645],{"type":518,"value":646},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":513,"tag":555,"props":648,"children":649},{"class":557,"line":576},[650],{"type":513,"tag":555,"props":651,"children":652},{},[653],{"type":518,"value":654},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":513,"tag":514,"props":656,"children":657},{},[658],{"type":518,"value":659},"提示：",{"type":513,"tag":661,"props":662,"children":663},"ul",{},[664,670],{"type":513,"tag":665,"props":666,"children":667},"li",{},[668],{"type":518,"value":669},"1 \u003C= chars.length \u003C= 2000",{"type":513,"tag":665,"props":671,"children":672},{},[673],{"type":518,"value":674},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":513,"tag":676,"props":677,"children":679},"h2",{"id":678},"解题思路",[680],{"type":518,"value":678},{"type":513,"tag":676,"props":682,"children":684},{"id":683},"实现",[685],{"type":518,"value":683},{"type":513,"tag":687,"props":688,"children":690},"h3",{"id":689},"双指针",[691],{"type":518,"value":689},{"type":513,"tag":545,"props":693,"children":697},{"className":694,"code":695,"language":696,"meta":506,"style":506},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[698],{"type":513,"tag":551,"props":699,"children":700},{"__ignoreMap":506},[701,710,752,782,791,837,876,904,939,966,976,1011,1069,1187,1208,1217,1235,1244,1252,1328,1369,1377,1385,1410],{"type":513,"tag":555,"props":702,"children":703},{"class":557,"line":558},[704],{"type":513,"tag":555,"props":705,"children":707},{"style":706},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[708],{"type":518,"value":709},"/**\n",{"type":513,"tag":555,"props":711,"children":712},{"class":557,"line":567},[713,718,724,730,735,741,746],{"type":513,"tag":555,"props":714,"children":715},{"style":706},[716],{"type":518,"value":717}," * ",{"type":513,"tag":555,"props":719,"children":721},{"style":720},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[722],{"type":518,"value":723},"@",{"type":513,"tag":555,"props":725,"children":727},{"style":726},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[728],{"type":518,"value":729},"param",{"type":513,"tag":555,"props":731,"children":732},{"style":720},[733],{"type":518,"value":734}," {",{"type":513,"tag":555,"props":736,"children":738},{"style":737},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[739],{"type":518,"value":740},"character[]",{"type":513,"tag":555,"props":742,"children":743},{"style":720},[744],{"type":518,"value":745},"}",{"type":513,"tag":555,"props":747,"children":749},{"style":748},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[750],{"type":518,"value":751}," chars\n",{"type":513,"tag":555,"props":753,"children":754},{"class":557,"line":576},[755,759,763,768,772,777],{"type":513,"tag":555,"props":756,"children":757},{"style":706},[758],{"type":518,"value":717},{"type":513,"tag":555,"props":760,"children":761},{"style":720},[762],{"type":518,"value":723},{"type":513,"tag":555,"props":764,"children":765},{"style":726},[766],{"type":518,"value":767},"return",{"type":513,"tag":555,"props":769,"children":770},{"style":720},[771],{"type":518,"value":734},{"type":513,"tag":555,"props":773,"children":774},{"style":737},[775],{"type":518,"value":776},"number",{"type":513,"tag":555,"props":778,"children":779},{"style":720},[780],{"type":518,"value":781},"}\n",{"type":513,"tag":555,"props":783,"children":785},{"class":557,"line":784},4,[786],{"type":513,"tag":555,"props":787,"children":788},{"style":706},[789],{"type":518,"value":790}," */\n",{"type":513,"tag":555,"props":792,"children":794},{"class":557,"line":793},5,[795,801,807,812,817,822,827,832],{"type":513,"tag":555,"props":796,"children":798},{"style":797},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[799],{"type":518,"value":800},"var",{"type":513,"tag":555,"props":802,"children":804},{"style":803},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[805],{"type":518,"value":806}," compress",{"type":513,"tag":555,"props":808,"children":809},{"style":720},[810],{"type":518,"value":811}," =",{"type":513,"tag":555,"props":813,"children":814},{"style":797},[815],{"type":518,"value":816}," function",{"type":513,"tag":555,"props":818,"children":819},{"style":720},[820],{"type":518,"value":821}," (",{"type":513,"tag":555,"props":823,"children":824},{"style":748},[825],{"type":518,"value":826},"chars",{"type":513,"tag":555,"props":828,"children":829},{"style":720},[830],{"type":518,"value":831},")",{"type":513,"tag":555,"props":833,"children":834},{"style":720},[835],{"type":518,"value":836}," {\n",{"type":513,"tag":555,"props":838,"children":840},{"class":557,"line":839},6,[841,846,851,855,860,865,871],{"type":513,"tag":555,"props":842,"children":843},{"style":797},[844],{"type":518,"value":845},"  const",{"type":513,"tag":555,"props":847,"children":848},{"style":748},[849],{"type":518,"value":850}," len",{"type":513,"tag":555,"props":852,"children":853},{"style":720},[854],{"type":518,"value":811},{"type":513,"tag":555,"props":856,"children":857},{"style":748},[858],{"type":518,"value":859}," chars",{"type":513,"tag":555,"props":861,"children":862},{"style":720},[863],{"type":518,"value":864},".",{"type":513,"tag":555,"props":866,"children":868},{"style":867},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[869],{"type":518,"value":870},"length",{"type":513,"tag":555,"props":872,"children":873},{"style":720},[874],{"type":518,"value":875},";\n",{"type":513,"tag":555,"props":877,"children":879},{"class":557,"line":878},7,[880,885,890,894,900],{"type":513,"tag":555,"props":881,"children":882},{"style":797},[883],{"type":518,"value":884},"  let",{"type":513,"tag":555,"props":886,"children":887},{"style":748},[888],{"type":518,"value":889}," i",{"type":513,"tag":555,"props":891,"children":892},{"style":720},[893],{"type":518,"value":811},{"type":513,"tag":555,"props":895,"children":897},{"style":896},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[898],{"type":518,"value":899}," 0",{"type":513,"tag":555,"props":901,"children":902},{"style":720},[903],{"type":518,"value":875},{"type":513,"tag":555,"props":905,"children":907},{"class":557,"line":906},8,[908,912,917,921,925,930,935],{"type":513,"tag":555,"props":909,"children":910},{"style":797},[911],{"type":518,"value":884},{"type":513,"tag":555,"props":913,"children":914},{"style":748},[915],{"type":518,"value":916}," j",{"type":513,"tag":555,"props":918,"children":919},{"style":720},[920],{"type":518,"value":811},{"type":513,"tag":555,"props":922,"children":923},{"style":748},[924],{"type":518,"value":889},{"type":513,"tag":555,"props":926,"children":927},{"style":797},[928],{"type":518,"value":929}," +",{"type":513,"tag":555,"props":931,"children":932},{"style":896},[933],{"type":518,"value":934}," 1",{"type":513,"tag":555,"props":936,"children":937},{"style":720},[938],{"type":518,"value":875},{"type":513,"tag":555,"props":940,"children":942},{"class":557,"line":941},9,[943,947,952,956,962],{"type":513,"tag":555,"props":944,"children":945},{"style":797},[946],{"type":518,"value":884},{"type":513,"tag":555,"props":948,"children":949},{"style":748},[950],{"type":518,"value":951}," s",{"type":513,"tag":555,"props":953,"children":954},{"style":720},[955],{"type":518,"value":811},{"type":513,"tag":555,"props":957,"children":959},{"style":958},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[960],{"type":518,"value":961}," \"\"",{"type":513,"tag":555,"props":963,"children":964},{"style":720},[965],{"type":518,"value":875},{"type":513,"tag":555,"props":967,"children":969},{"class":557,"line":968},10,[970],{"type":513,"tag":555,"props":971,"children":973},{"emptyLinePlaceholder":972},true,[974],{"type":518,"value":975},"\n",{"type":513,"tag":555,"props":977,"children":979},{"class":557,"line":978},11,[980,985,989,994,999,1003,1007],{"type":513,"tag":555,"props":981,"children":982},{"style":726},[983],{"type":518,"value":984},"  while",{"type":513,"tag":555,"props":986,"children":987},{"style":720},[988],{"type":518,"value":821},{"type":513,"tag":555,"props":990,"children":991},{"style":748},[992],{"type":518,"value":993},"j",{"type":513,"tag":555,"props":995,"children":996},{"style":720},[997],{"type":518,"value":998}," \u003C=",{"type":513,"tag":555,"props":1000,"children":1001},{"style":748},[1002],{"type":518,"value":850},{"type":513,"tag":555,"props":1004,"children":1005},{"style":720},[1006],{"type":518,"value":831},{"type":513,"tag":555,"props":1008,"children":1009},{"style":720},[1010],{"type":518,"value":836},{"type":513,"tag":555,"props":1012,"children":1014},{"class":557,"line":1013},12,[1015,1020,1024,1028,1033,1038,1043,1048,1052,1056,1060,1065],{"type":513,"tag":555,"props":1016,"children":1017},{"style":726},[1018],{"type":518,"value":1019},"    if",{"type":513,"tag":555,"props":1021,"children":1022},{"style":720},[1023],{"type":518,"value":821},{"type":513,"tag":555,"props":1025,"children":1026},{"style":748},[1027],{"type":518,"value":826},{"type":513,"tag":555,"props":1029,"children":1030},{"style":720},[1031],{"type":518,"value":1032},"[",{"type":513,"tag":555,"props":1034,"children":1035},{"style":748},[1036],{"type":518,"value":1037},"i",{"type":513,"tag":555,"props":1039,"children":1040},{"style":720},[1041],{"type":518,"value":1042},"]",{"type":513,"tag":555,"props":1044,"children":1045},{"style":797},[1046],{"type":518,"value":1047}," !==",{"type":513,"tag":555,"props":1049,"children":1050},{"style":748},[1051],{"type":518,"value":859},{"type":513,"tag":555,"props":1053,"children":1054},{"style":720},[1055],{"type":518,"value":1032},{"type":513,"tag":555,"props":1057,"children":1058},{"style":748},[1059],{"type":518,"value":993},{"type":513,"tag":555,"props":1061,"children":1062},{"style":720},[1063],{"type":518,"value":1064},"])",{"type":513,"tag":555,"props":1066,"children":1067},{"style":720},[1068],{"type":518,"value":836},{"type":513,"tag":555,"props":1070,"children":1072},{"class":557,"line":1071},13,[1073,1078,1083,1087,1092,1096,1101,1105,1110,1115,1120,1125,1129,1133,1137,1142,1147,1152,1156,1160,1165,1170,1174,1178,1182],{"type":513,"tag":555,"props":1074,"children":1075},{"style":748},[1076],{"type":518,"value":1077},"      s",{"type":513,"tag":555,"props":1079,"children":1080},{"style":797},[1081],{"type":518,"value":1082}," +=",{"type":513,"tag":555,"props":1084,"children":1085},{"style":748},[1086],{"type":518,"value":916},{"type":513,"tag":555,"props":1088,"children":1089},{"style":797},[1090],{"type":518,"value":1091}," -",{"type":513,"tag":555,"props":1093,"children":1094},{"style":748},[1095],{"type":518,"value":889},{"type":513,"tag":555,"props":1097,"children":1098},{"style":720},[1099],{"type":518,"value":1100}," >",{"type":513,"tag":555,"props":1102,"children":1103},{"style":896},[1104],{"type":518,"value":934},{"type":513,"tag":555,"props":1106,"children":1107},{"style":797},[1108],{"type":518,"value":1109}," ?",{"type":513,"tag":555,"props":1111,"children":1112},{"style":958},[1113],{"type":518,"value":1114}," `",{"type":513,"tag":555,"props":1116,"children":1117},{"style":720},[1118],{"type":518,"value":1119},"${",{"type":513,"tag":555,"props":1121,"children":1123},{"style":1122},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1124],{"type":518,"value":826},{"type":513,"tag":555,"props":1126,"children":1127},{"style":720},[1128],{"type":518,"value":1032},{"type":513,"tag":555,"props":1130,"children":1131},{"style":1122},[1132],{"type":518,"value":1037},{"type":513,"tag":555,"props":1134,"children":1135},{"style":720},[1136],{"type":518,"value":1042},{"type":513,"tag":555,"props":1138,"children":1139},{"style":720},[1140],{"type":518,"value":1141},"}${",{"type":513,"tag":555,"props":1143,"children":1144},{"style":1122},[1145],{"type":518,"value":1146},"j ",{"type":513,"tag":555,"props":1148,"children":1149},{"style":797},[1150],{"type":518,"value":1151},"-",{"type":513,"tag":555,"props":1153,"children":1154},{"style":1122},[1155],{"type":518,"value":889},{"type":513,"tag":555,"props":1157,"children":1158},{"style":720},[1159],{"type":518,"value":745},{"type":513,"tag":555,"props":1161,"children":1162},{"style":958},[1163],{"type":518,"value":1164},"`",{"type":513,"tag":555,"props":1166,"children":1167},{"style":797},[1168],{"type":518,"value":1169}," :",{"type":513,"tag":555,"props":1171,"children":1172},{"style":748},[1173],{"type":518,"value":859},{"type":513,"tag":555,"props":1175,"children":1176},{"style":720},[1177],{"type":518,"value":1032},{"type":513,"tag":555,"props":1179,"children":1180},{"style":748},[1181],{"type":518,"value":1037},{"type":513,"tag":555,"props":1183,"children":1184},{"style":720},[1185],{"type":518,"value":1186},"];\n",{"type":513,"tag":555,"props":1188,"children":1190},{"class":557,"line":1189},14,[1191,1196,1200,1204],{"type":513,"tag":555,"props":1192,"children":1193},{"style":748},[1194],{"type":518,"value":1195},"      i",{"type":513,"tag":555,"props":1197,"children":1198},{"style":720},[1199],{"type":518,"value":811},{"type":513,"tag":555,"props":1201,"children":1202},{"style":748},[1203],{"type":518,"value":916},{"type":513,"tag":555,"props":1205,"children":1206},{"style":720},[1207],{"type":518,"value":875},{"type":513,"tag":555,"props":1209,"children":1211},{"class":557,"line":1210},15,[1212],{"type":513,"tag":555,"props":1213,"children":1214},{"style":720},[1215],{"type":518,"value":1216},"    }\n",{"type":513,"tag":555,"props":1218,"children":1220},{"class":557,"line":1219},16,[1221,1226,1231],{"type":513,"tag":555,"props":1222,"children":1223},{"style":748},[1224],{"type":518,"value":1225},"    j",{"type":513,"tag":555,"props":1227,"children":1228},{"style":797},[1229],{"type":518,"value":1230},"++",{"type":513,"tag":555,"props":1232,"children":1233},{"style":720},[1234],{"type":518,"value":875},{"type":513,"tag":555,"props":1236,"children":1238},{"class":557,"line":1237},17,[1239],{"type":513,"tag":555,"props":1240,"children":1241},{"style":720},[1242],{"type":518,"value":1243},"  }\n",{"type":513,"tag":555,"props":1245,"children":1247},{"class":557,"line":1246},18,[1248],{"type":513,"tag":555,"props":1249,"children":1250},{"emptyLinePlaceholder":972},[1251],{"type":518,"value":975},{"type":513,"tag":555,"props":1253,"children":1255},{"class":557,"line":1254},19,[1256,1261,1265,1270,1274,1278,1282,1287,1291,1296,1300,1304,1308,1312,1316,1320,1324],{"type":513,"tag":555,"props":1257,"children":1258},{"style":726},[1259],{"type":518,"value":1260},"  for",{"type":513,"tag":555,"props":1262,"children":1263},{"style":720},[1264],{"type":518,"value":821},{"type":513,"tag":555,"props":1266,"children":1267},{"style":797},[1268],{"type":518,"value":1269},"let",{"type":513,"tag":555,"props":1271,"children":1272},{"style":748},[1273],{"type":518,"value":889},{"type":513,"tag":555,"props":1275,"children":1276},{"style":720},[1277],{"type":518,"value":811},{"type":513,"tag":555,"props":1279,"children":1280},{"style":896},[1281],{"type":518,"value":899},{"type":513,"tag":555,"props":1283,"children":1284},{"style":720},[1285],{"type":518,"value":1286},";",{"type":513,"tag":555,"props":1288,"children":1289},{"style":748},[1290],{"type":518,"value":889},{"type":513,"tag":555,"props":1292,"children":1293},{"style":720},[1294],{"type":518,"value":1295}," \u003C",{"type":513,"tag":555,"props":1297,"children":1298},{"style":748},[1299],{"type":518,"value":951},{"type":513,"tag":555,"props":1301,"children":1302},{"style":720},[1303],{"type":518,"value":864},{"type":513,"tag":555,"props":1305,"children":1306},{"style":867},[1307],{"type":518,"value":870},{"type":513,"tag":555,"props":1309,"children":1310},{"style":720},[1311],{"type":518,"value":1286},{"type":513,"tag":555,"props":1313,"children":1314},{"style":748},[1315],{"type":518,"value":889},{"type":513,"tag":555,"props":1317,"children":1318},{"style":797},[1319],{"type":518,"value":1230},{"type":513,"tag":555,"props":1321,"children":1322},{"style":720},[1323],{"type":518,"value":831},{"type":513,"tag":555,"props":1325,"children":1326},{"style":720},[1327],{"type":518,"value":836},{"type":513,"tag":555,"props":1329,"children":1331},{"class":557,"line":1330},20,[1332,1337,1341,1345,1349,1353,1357,1361,1365],{"type":513,"tag":555,"props":1333,"children":1334},{"style":748},[1335],{"type":518,"value":1336},"    chars",{"type":513,"tag":555,"props":1338,"children":1339},{"style":720},[1340],{"type":518,"value":1032},{"type":513,"tag":555,"props":1342,"children":1343},{"style":748},[1344],{"type":518,"value":1037},{"type":513,"tag":555,"props":1346,"children":1347},{"style":720},[1348],{"type":518,"value":1042},{"type":513,"tag":555,"props":1350,"children":1351},{"style":720},[1352],{"type":518,"value":811},{"type":513,"tag":555,"props":1354,"children":1355},{"style":748},[1356],{"type":518,"value":951},{"type":513,"tag":555,"props":1358,"children":1359},{"style":720},[1360],{"type":518,"value":1032},{"type":513,"tag":555,"props":1362,"children":1363},{"style":748},[1364],{"type":518,"value":1037},{"type":513,"tag":555,"props":1366,"children":1367},{"style":720},[1368],{"type":518,"value":1186},{"type":513,"tag":555,"props":1370,"children":1372},{"class":557,"line":1371},21,[1373],{"type":513,"tag":555,"props":1374,"children":1375},{"style":720},[1376],{"type":518,"value":1243},{"type":513,"tag":555,"props":1378,"children":1380},{"class":557,"line":1379},22,[1381],{"type":513,"tag":555,"props":1382,"children":1383},{"emptyLinePlaceholder":972},[1384],{"type":518,"value":975},{"type":513,"tag":555,"props":1386,"children":1388},{"class":557,"line":1387},23,[1389,1394,1398,1402,1406],{"type":513,"tag":555,"props":1390,"children":1391},{"style":726},[1392],{"type":518,"value":1393},"  return",{"type":513,"tag":555,"props":1395,"children":1396},{"style":748},[1397],{"type":518,"value":951},{"type":513,"tag":555,"props":1399,"children":1400},{"style":720},[1401],{"type":518,"value":864},{"type":513,"tag":555,"props":1403,"children":1404},{"style":867},[1405],{"type":518,"value":870},{"type":513,"tag":555,"props":1407,"children":1408},{"style":720},[1409],{"type":518,"value":875},{"type":513,"tag":555,"props":1411,"children":1413},{"class":557,"line":1412},24,[1414],{"type":513,"tag":555,"props":1415,"children":1416},{"style":720},[1417],{"type":518,"value":1418},"};\n",{"type":513,"tag":1420,"props":1421,"children":1422},"style",{},[1423],{"type":518,"value":1424},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":506,"searchDepth":793,"depth":793,"links":1426},[1427,1428],{"id":678,"depth":567,"text":678},{"id":683,"depth":567,"text":683,"children":1429},[1430],{"id":689,"depth":576,"text":689},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1437,1439],{"_path":234,"title":233,"description":1438},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":240,"title":239,"description":1440},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1714056096378]