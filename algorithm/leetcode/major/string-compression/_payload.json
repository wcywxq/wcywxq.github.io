[{"data":1,"prerenderedAt":1497},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":559,"/algorithm/leetcode/major/string-compression-surround":1492},[4,272,318,536,544],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":317},"八股文","/endorsement",[276,286,293,304],{"title":277,"_path":278,"children":279},"面向对象","/endorsement/oop",[280,283],{"title":281,"_path":282},"面向对象基本概念","/endorsement/oop/oop-basic-concept",{"title":284,"_path":285},"设计模式","/endorsement/oop/design-mode",{"title":287,"_path":288,"children":289},"JavaScript","/endorsement/javascript",[290],{"title":291,"_path":292},"语法和数据类型","/endorsement/javascript/grammar-data-types",{"title":294,"_path":295,"children":296},"构建工具","/endorsement/build-tools",[297],{"title":298,"_path":299,"children":300},"Webpack","/endorsement/build-tools/webpack",[301],{"title":302,"_path":303},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":305,"_path":306,"children":307},"Html","/endorsement/html",[308,311,314],{"title":309,"_path":310},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":312,"_path":313},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":315,"_path":316},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":319,"_path":320,"children":321,"icon":535},"代码考核","/code-assessment",[322,427,528],{"title":323,"_path":324,"children":325},"源码实现","/code-assessment/source",[326,360,376,404,411,418,421,424],{"title":327,"_path":328,"children":329},"原生 api","/code-assessment/source/native-api",[330,333,336,339,342,345,348,351,354,357],{"title":331,"_path":332},"polyfill","/code-assessment/source/native-api/polyfill",{"title":334,"_path":335},"ajax","/code-assessment/source/native-api/ajax",{"title":337,"_path":338},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":340,"_path":341},"new 操作符","/code-assessment/source/native-api/new",{"title":343,"_path":344},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":346,"_path":347},"定时器","/code-assessment/source/native-api/timer",{"title":349,"_path":350},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":352,"_path":353},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":355,"_path":356},"extends","/code-assessment/source/native-api/extends",{"title":358,"_path":359},"Promise","/code-assessment/source/native-api/promise",{"title":361,"_path":362,"children":363},"函数 Function","/code-assessment/source/function",[364,367,370,373],{"title":365,"_path":366},"函数防抖","/code-assessment/source/function/debounce",{"title":368,"_path":369},"函数节流","/code-assessment/source/function/throttle",{"title":371,"_path":372},"函数柯理化","/code-assessment/source/function/curry",{"title":374,"_path":375},"函数睡眠","/code-assessment/source/function/sleep",{"title":377,"_path":378,"children":379},"数组 Array","/code-assessment/source/array",[380,383,386,389,392,395,398,401],{"title":381,"_path":382},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":384,"_path":385},"数组扁平化","/code-assessment/source/array/flat",{"title":387,"_path":388},"原型方法","/code-assessment/source/array/prototype-method",{"title":390,"_path":391},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":393,"_path":394},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":396,"_path":397},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":399,"_path":400},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":402,"_path":403},"二维数组","/code-assessment/source/array/2d-array",{"title":405,"_path":406,"children":407},"字符串 String","/code-assessment/source/string",[408],{"title":409,"_path":410},"repeat()","/code-assessment/source/string/repeat",{"title":412,"_path":413,"children":414},"集合 Set","/code-assessment/source/set",[415],{"title":416,"_path":417},"遍历集合","/code-assessment/source/set/traverse",{"title":419,"_path":420},"获取通用类型","/code-assessment/source/get-generic-type",{"title":422,"_path":423},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":425,"_path":426},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":428,"_path":429,"children":430},"业务场景","/code-assessment/scene",[431,461,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525],{"title":358,"_path":432,"children":433},"/code-assessment/scene/promise",[434,437,440,443,446,449,452,455,458],{"title":435,"_path":436},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":438,"_path":439},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":441,"_path":442},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":444,"_path":445},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":447,"_path":448},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":450,"_path":451},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":453,"_path":454},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":456,"_path":457},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":459,"_path":460},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":462,"_path":463,"children":464},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[465,468],{"title":466,"_path":467},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":469,"_path":470},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":472,"_path":473},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":475,"_path":476},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":478,"_path":479},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":481,"_path":482},"倒计时","/code-assessment/scene/countdown",{"title":484,"_path":485},"日期格式化","/code-assessment/scene/date-format",{"title":487,"_path":488},"实现前端路由","/code-assessment/scene/frontend-route",{"title":490,"_path":491},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":493,"_path":494},"lodash.get","/code-assessment/scene/lodash-get",{"title":496,"_path":497},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":499,"_path":500},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":502,"_path":503},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":505,"_path":506},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":508,"_path":509},"随机数","/code-assessment/scene/random-number",{"title":511,"_path":512},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":514,"_path":515},"sku 算法实现","/code-assessment/scene/sku",{"title":517,"_path":518},"整数分割","/code-assessment/scene/split-number",{"title":520,"_path":521},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":523,"_path":524},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":526,"_path":527},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":529,"_path":530,"children":531},"Ts 类型挑战","/code-assessment/type-challeges",[532],{"title":533,"_path":534},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":537,"_path":538,"children":539,"icon":543},"项目","/project",[540],{"title":541,"_path":542},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":545,"_path":546,"children":547,"icon":558},"后端语言","/backend-languages",[548],{"title":549,"_path":550,"children":551},"Python","/backend-languages/python",[552,555],{"title":553,"_path":554},"基础","/backend-languages/python/base",{"title":556,"_path":557},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":240,"_dir":560,"_draft":561,"_partial":561,"_locale":562,"title":239,"description":563,"url":564,"body":565,"_type":1487,"_id":1488,"_source":1489,"_file":1490,"_extension":1491},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":566,"children":567,"toc":1481},"root",[568,575,580,585,590,595,600,639,644,675,680,711,716,731,737,742,748,1475],{"type":569,"tag":570,"props":571,"children":572},"element","p",{},[573],{"type":574,"value":563},"text",{"type":569,"tag":570,"props":576,"children":577},{},[578],{"type":574,"value":579},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":569,"tag":570,"props":581,"children":582},{},[583],{"type":574,"value":584},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":569,"tag":570,"props":586,"children":587},{},[588],{"type":574,"value":589},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":569,"tag":570,"props":591,"children":592},{},[593],{"type":574,"value":594},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":569,"tag":570,"props":596,"children":597},{},[598],{"type":574,"value":599},"示例 1：",{"type":569,"tag":601,"props":602,"children":605},"pre",{"className":603,"code":604,"language":574,"meta":562,"style":562},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[606],{"type":569,"tag":607,"props":608,"children":609},"code",{"__ignoreMap":562},[610,621,630],{"type":569,"tag":611,"props":612,"children":615},"span",{"class":613,"line":614},"line",1,[616],{"type":569,"tag":611,"props":617,"children":618},{},[619],{"type":574,"value":620},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":569,"tag":611,"props":622,"children":624},{"class":613,"line":623},2,[625],{"type":569,"tag":611,"props":626,"children":627},{},[628],{"type":574,"value":629},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":569,"tag":611,"props":631,"children":633},{"class":613,"line":632},3,[634],{"type":569,"tag":611,"props":635,"children":636},{},[637],{"type":574,"value":638},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":569,"tag":570,"props":640,"children":641},{},[642],{"type":574,"value":643},"示例 2：",{"type":569,"tag":601,"props":645,"children":647},{"className":603,"code":646,"language":574,"meta":562,"style":562},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[648],{"type":569,"tag":607,"props":649,"children":650},{"__ignoreMap":562},[651,659,667],{"type":569,"tag":611,"props":652,"children":653},{"class":613,"line":614},[654],{"type":569,"tag":611,"props":655,"children":656},{},[657],{"type":574,"value":658},"输入：chars = [\"a\"]\n",{"type":569,"tag":611,"props":660,"children":661},{"class":613,"line":623},[662],{"type":569,"tag":611,"props":663,"children":664},{},[665],{"type":574,"value":666},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":569,"tag":611,"props":668,"children":669},{"class":613,"line":632},[670],{"type":569,"tag":611,"props":671,"children":672},{},[673],{"type":574,"value":674},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":569,"tag":570,"props":676,"children":677},{},[678],{"type":574,"value":679},"示例 3：",{"type":569,"tag":601,"props":681,"children":683},{"className":603,"code":682,"language":574,"meta":562,"style":562},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[684],{"type":569,"tag":607,"props":685,"children":686},{"__ignoreMap":562},[687,695,703],{"type":569,"tag":611,"props":688,"children":689},{"class":613,"line":614},[690],{"type":569,"tag":611,"props":691,"children":692},{},[693],{"type":574,"value":694},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":569,"tag":611,"props":696,"children":697},{"class":613,"line":623},[698],{"type":569,"tag":611,"props":699,"children":700},{},[701],{"type":574,"value":702},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":569,"tag":611,"props":704,"children":705},{"class":613,"line":632},[706],{"type":569,"tag":611,"props":707,"children":708},{},[709],{"type":574,"value":710},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":569,"tag":570,"props":712,"children":713},{},[714],{"type":574,"value":715},"提示：",{"type":569,"tag":717,"props":718,"children":719},"ul",{},[720,726],{"type":569,"tag":721,"props":722,"children":723},"li",{},[724],{"type":574,"value":725},"1 \u003C= chars.length \u003C= 2000",{"type":569,"tag":721,"props":727,"children":728},{},[729],{"type":574,"value":730},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":569,"tag":732,"props":733,"children":735},"h2",{"id":734},"解题思路",[736],{"type":574,"value":734},{"type":569,"tag":732,"props":738,"children":740},{"id":739},"实现",[741],{"type":574,"value":739},{"type":569,"tag":743,"props":744,"children":746},"h3",{"id":745},"双指针",[747],{"type":574,"value":745},{"type":569,"tag":601,"props":749,"children":753},{"className":750,"code":751,"language":752,"meta":562,"style":562},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[754],{"type":569,"tag":607,"props":755,"children":756},{"__ignoreMap":562},[757,766,808,838,847,893,932,960,995,1022,1032,1067,1125,1243,1264,1273,1291,1300,1308,1384,1425,1433,1441,1466],{"type":569,"tag":611,"props":758,"children":759},{"class":613,"line":614},[760],{"type":569,"tag":611,"props":761,"children":763},{"style":762},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[764],{"type":574,"value":765},"/**\n",{"type":569,"tag":611,"props":767,"children":768},{"class":613,"line":623},[769,774,780,786,791,797,802],{"type":569,"tag":611,"props":770,"children":771},{"style":762},[772],{"type":574,"value":773}," * ",{"type":569,"tag":611,"props":775,"children":777},{"style":776},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[778],{"type":574,"value":779},"@",{"type":569,"tag":611,"props":781,"children":783},{"style":782},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[784],{"type":574,"value":785},"param",{"type":569,"tag":611,"props":787,"children":788},{"style":776},[789],{"type":574,"value":790}," {",{"type":569,"tag":611,"props":792,"children":794},{"style":793},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[795],{"type":574,"value":796},"character[]",{"type":569,"tag":611,"props":798,"children":799},{"style":776},[800],{"type":574,"value":801},"}",{"type":569,"tag":611,"props":803,"children":805},{"style":804},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[806],{"type":574,"value":807}," chars\n",{"type":569,"tag":611,"props":809,"children":810},{"class":613,"line":632},[811,815,819,824,828,833],{"type":569,"tag":611,"props":812,"children":813},{"style":762},[814],{"type":574,"value":773},{"type":569,"tag":611,"props":816,"children":817},{"style":776},[818],{"type":574,"value":779},{"type":569,"tag":611,"props":820,"children":821},{"style":782},[822],{"type":574,"value":823},"return",{"type":569,"tag":611,"props":825,"children":826},{"style":776},[827],{"type":574,"value":790},{"type":569,"tag":611,"props":829,"children":830},{"style":793},[831],{"type":574,"value":832},"number",{"type":569,"tag":611,"props":834,"children":835},{"style":776},[836],{"type":574,"value":837},"}\n",{"type":569,"tag":611,"props":839,"children":841},{"class":613,"line":840},4,[842],{"type":569,"tag":611,"props":843,"children":844},{"style":762},[845],{"type":574,"value":846}," */\n",{"type":569,"tag":611,"props":848,"children":850},{"class":613,"line":849},5,[851,857,863,868,873,878,883,888],{"type":569,"tag":611,"props":852,"children":854},{"style":853},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[855],{"type":574,"value":856},"var",{"type":569,"tag":611,"props":858,"children":860},{"style":859},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[861],{"type":574,"value":862}," compress",{"type":569,"tag":611,"props":864,"children":865},{"style":776},[866],{"type":574,"value":867}," =",{"type":569,"tag":611,"props":869,"children":870},{"style":853},[871],{"type":574,"value":872}," function",{"type":569,"tag":611,"props":874,"children":875},{"style":776},[876],{"type":574,"value":877}," (",{"type":569,"tag":611,"props":879,"children":880},{"style":804},[881],{"type":574,"value":882},"chars",{"type":569,"tag":611,"props":884,"children":885},{"style":776},[886],{"type":574,"value":887},")",{"type":569,"tag":611,"props":889,"children":890},{"style":776},[891],{"type":574,"value":892}," {\n",{"type":569,"tag":611,"props":894,"children":896},{"class":613,"line":895},6,[897,902,907,911,916,921,927],{"type":569,"tag":611,"props":898,"children":899},{"style":853},[900],{"type":574,"value":901},"  const",{"type":569,"tag":611,"props":903,"children":904},{"style":804},[905],{"type":574,"value":906}," len",{"type":569,"tag":611,"props":908,"children":909},{"style":776},[910],{"type":574,"value":867},{"type":569,"tag":611,"props":912,"children":913},{"style":804},[914],{"type":574,"value":915}," chars",{"type":569,"tag":611,"props":917,"children":918},{"style":776},[919],{"type":574,"value":920},".",{"type":569,"tag":611,"props":922,"children":924},{"style":923},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[925],{"type":574,"value":926},"length",{"type":569,"tag":611,"props":928,"children":929},{"style":776},[930],{"type":574,"value":931},";\n",{"type":569,"tag":611,"props":933,"children":935},{"class":613,"line":934},7,[936,941,946,950,956],{"type":569,"tag":611,"props":937,"children":938},{"style":853},[939],{"type":574,"value":940},"  let",{"type":569,"tag":611,"props":942,"children":943},{"style":804},[944],{"type":574,"value":945}," i",{"type":569,"tag":611,"props":947,"children":948},{"style":776},[949],{"type":574,"value":867},{"type":569,"tag":611,"props":951,"children":953},{"style":952},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[954],{"type":574,"value":955}," 0",{"type":569,"tag":611,"props":957,"children":958},{"style":776},[959],{"type":574,"value":931},{"type":569,"tag":611,"props":961,"children":963},{"class":613,"line":962},8,[964,968,973,977,981,986,991],{"type":569,"tag":611,"props":965,"children":966},{"style":853},[967],{"type":574,"value":940},{"type":569,"tag":611,"props":969,"children":970},{"style":804},[971],{"type":574,"value":972}," j",{"type":569,"tag":611,"props":974,"children":975},{"style":776},[976],{"type":574,"value":867},{"type":569,"tag":611,"props":978,"children":979},{"style":804},[980],{"type":574,"value":945},{"type":569,"tag":611,"props":982,"children":983},{"style":853},[984],{"type":574,"value":985}," +",{"type":569,"tag":611,"props":987,"children":988},{"style":952},[989],{"type":574,"value":990}," 1",{"type":569,"tag":611,"props":992,"children":993},{"style":776},[994],{"type":574,"value":931},{"type":569,"tag":611,"props":996,"children":998},{"class":613,"line":997},9,[999,1003,1008,1012,1018],{"type":569,"tag":611,"props":1000,"children":1001},{"style":853},[1002],{"type":574,"value":940},{"type":569,"tag":611,"props":1004,"children":1005},{"style":804},[1006],{"type":574,"value":1007}," s",{"type":569,"tag":611,"props":1009,"children":1010},{"style":776},[1011],{"type":574,"value":867},{"type":569,"tag":611,"props":1013,"children":1015},{"style":1014},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1016],{"type":574,"value":1017}," \"\"",{"type":569,"tag":611,"props":1019,"children":1020},{"style":776},[1021],{"type":574,"value":931},{"type":569,"tag":611,"props":1023,"children":1025},{"class":613,"line":1024},10,[1026],{"type":569,"tag":611,"props":1027,"children":1029},{"emptyLinePlaceholder":1028},true,[1030],{"type":574,"value":1031},"\n",{"type":569,"tag":611,"props":1033,"children":1035},{"class":613,"line":1034},11,[1036,1041,1045,1050,1055,1059,1063],{"type":569,"tag":611,"props":1037,"children":1038},{"style":782},[1039],{"type":574,"value":1040},"  while",{"type":569,"tag":611,"props":1042,"children":1043},{"style":776},[1044],{"type":574,"value":877},{"type":569,"tag":611,"props":1046,"children":1047},{"style":804},[1048],{"type":574,"value":1049},"j",{"type":569,"tag":611,"props":1051,"children":1052},{"style":776},[1053],{"type":574,"value":1054}," \u003C=",{"type":569,"tag":611,"props":1056,"children":1057},{"style":804},[1058],{"type":574,"value":906},{"type":569,"tag":611,"props":1060,"children":1061},{"style":776},[1062],{"type":574,"value":887},{"type":569,"tag":611,"props":1064,"children":1065},{"style":776},[1066],{"type":574,"value":892},{"type":569,"tag":611,"props":1068,"children":1070},{"class":613,"line":1069},12,[1071,1076,1080,1084,1089,1094,1099,1104,1108,1112,1116,1121],{"type":569,"tag":611,"props":1072,"children":1073},{"style":782},[1074],{"type":574,"value":1075},"    if",{"type":569,"tag":611,"props":1077,"children":1078},{"style":776},[1079],{"type":574,"value":877},{"type":569,"tag":611,"props":1081,"children":1082},{"style":804},[1083],{"type":574,"value":882},{"type":569,"tag":611,"props":1085,"children":1086},{"style":776},[1087],{"type":574,"value":1088},"[",{"type":569,"tag":611,"props":1090,"children":1091},{"style":804},[1092],{"type":574,"value":1093},"i",{"type":569,"tag":611,"props":1095,"children":1096},{"style":776},[1097],{"type":574,"value":1098},"]",{"type":569,"tag":611,"props":1100,"children":1101},{"style":853},[1102],{"type":574,"value":1103}," !==",{"type":569,"tag":611,"props":1105,"children":1106},{"style":804},[1107],{"type":574,"value":915},{"type":569,"tag":611,"props":1109,"children":1110},{"style":776},[1111],{"type":574,"value":1088},{"type":569,"tag":611,"props":1113,"children":1114},{"style":804},[1115],{"type":574,"value":1049},{"type":569,"tag":611,"props":1117,"children":1118},{"style":776},[1119],{"type":574,"value":1120},"])",{"type":569,"tag":611,"props":1122,"children":1123},{"style":776},[1124],{"type":574,"value":892},{"type":569,"tag":611,"props":1126,"children":1128},{"class":613,"line":1127},13,[1129,1134,1139,1143,1148,1152,1157,1161,1166,1171,1176,1181,1185,1189,1193,1198,1203,1208,1212,1216,1221,1226,1230,1234,1238],{"type":569,"tag":611,"props":1130,"children":1131},{"style":804},[1132],{"type":574,"value":1133},"      s",{"type":569,"tag":611,"props":1135,"children":1136},{"style":853},[1137],{"type":574,"value":1138}," +=",{"type":569,"tag":611,"props":1140,"children":1141},{"style":804},[1142],{"type":574,"value":972},{"type":569,"tag":611,"props":1144,"children":1145},{"style":853},[1146],{"type":574,"value":1147}," -",{"type":569,"tag":611,"props":1149,"children":1150},{"style":804},[1151],{"type":574,"value":945},{"type":569,"tag":611,"props":1153,"children":1154},{"style":776},[1155],{"type":574,"value":1156}," >",{"type":569,"tag":611,"props":1158,"children":1159},{"style":952},[1160],{"type":574,"value":990},{"type":569,"tag":611,"props":1162,"children":1163},{"style":853},[1164],{"type":574,"value":1165}," ?",{"type":569,"tag":611,"props":1167,"children":1168},{"style":1014},[1169],{"type":574,"value":1170}," `",{"type":569,"tag":611,"props":1172,"children":1173},{"style":776},[1174],{"type":574,"value":1175},"${",{"type":569,"tag":611,"props":1177,"children":1179},{"style":1178},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1180],{"type":574,"value":882},{"type":569,"tag":611,"props":1182,"children":1183},{"style":776},[1184],{"type":574,"value":1088},{"type":569,"tag":611,"props":1186,"children":1187},{"style":1178},[1188],{"type":574,"value":1093},{"type":569,"tag":611,"props":1190,"children":1191},{"style":776},[1192],{"type":574,"value":1098},{"type":569,"tag":611,"props":1194,"children":1195},{"style":776},[1196],{"type":574,"value":1197},"}${",{"type":569,"tag":611,"props":1199,"children":1200},{"style":1178},[1201],{"type":574,"value":1202},"j ",{"type":569,"tag":611,"props":1204,"children":1205},{"style":853},[1206],{"type":574,"value":1207},"-",{"type":569,"tag":611,"props":1209,"children":1210},{"style":1178},[1211],{"type":574,"value":945},{"type":569,"tag":611,"props":1213,"children":1214},{"style":776},[1215],{"type":574,"value":801},{"type":569,"tag":611,"props":1217,"children":1218},{"style":1014},[1219],{"type":574,"value":1220},"`",{"type":569,"tag":611,"props":1222,"children":1223},{"style":853},[1224],{"type":574,"value":1225}," :",{"type":569,"tag":611,"props":1227,"children":1228},{"style":804},[1229],{"type":574,"value":915},{"type":569,"tag":611,"props":1231,"children":1232},{"style":776},[1233],{"type":574,"value":1088},{"type":569,"tag":611,"props":1235,"children":1236},{"style":804},[1237],{"type":574,"value":1093},{"type":569,"tag":611,"props":1239,"children":1240},{"style":776},[1241],{"type":574,"value":1242},"];\n",{"type":569,"tag":611,"props":1244,"children":1246},{"class":613,"line":1245},14,[1247,1252,1256,1260],{"type":569,"tag":611,"props":1248,"children":1249},{"style":804},[1250],{"type":574,"value":1251},"      i",{"type":569,"tag":611,"props":1253,"children":1254},{"style":776},[1255],{"type":574,"value":867},{"type":569,"tag":611,"props":1257,"children":1258},{"style":804},[1259],{"type":574,"value":972},{"type":569,"tag":611,"props":1261,"children":1262},{"style":776},[1263],{"type":574,"value":931},{"type":569,"tag":611,"props":1265,"children":1267},{"class":613,"line":1266},15,[1268],{"type":569,"tag":611,"props":1269,"children":1270},{"style":776},[1271],{"type":574,"value":1272},"    }\n",{"type":569,"tag":611,"props":1274,"children":1276},{"class":613,"line":1275},16,[1277,1282,1287],{"type":569,"tag":611,"props":1278,"children":1279},{"style":804},[1280],{"type":574,"value":1281},"    j",{"type":569,"tag":611,"props":1283,"children":1284},{"style":853},[1285],{"type":574,"value":1286},"++",{"type":569,"tag":611,"props":1288,"children":1289},{"style":776},[1290],{"type":574,"value":931},{"type":569,"tag":611,"props":1292,"children":1294},{"class":613,"line":1293},17,[1295],{"type":569,"tag":611,"props":1296,"children":1297},{"style":776},[1298],{"type":574,"value":1299},"  }\n",{"type":569,"tag":611,"props":1301,"children":1303},{"class":613,"line":1302},18,[1304],{"type":569,"tag":611,"props":1305,"children":1306},{"emptyLinePlaceholder":1028},[1307],{"type":574,"value":1031},{"type":569,"tag":611,"props":1309,"children":1311},{"class":613,"line":1310},19,[1312,1317,1321,1326,1330,1334,1338,1343,1347,1352,1356,1360,1364,1368,1372,1376,1380],{"type":569,"tag":611,"props":1313,"children":1314},{"style":782},[1315],{"type":574,"value":1316},"  for",{"type":569,"tag":611,"props":1318,"children":1319},{"style":776},[1320],{"type":574,"value":877},{"type":569,"tag":611,"props":1322,"children":1323},{"style":853},[1324],{"type":574,"value":1325},"let",{"type":569,"tag":611,"props":1327,"children":1328},{"style":804},[1329],{"type":574,"value":945},{"type":569,"tag":611,"props":1331,"children":1332},{"style":776},[1333],{"type":574,"value":867},{"type":569,"tag":611,"props":1335,"children":1336},{"style":952},[1337],{"type":574,"value":955},{"type":569,"tag":611,"props":1339,"children":1340},{"style":776},[1341],{"type":574,"value":1342},";",{"type":569,"tag":611,"props":1344,"children":1345},{"style":804},[1346],{"type":574,"value":945},{"type":569,"tag":611,"props":1348,"children":1349},{"style":776},[1350],{"type":574,"value":1351}," \u003C",{"type":569,"tag":611,"props":1353,"children":1354},{"style":804},[1355],{"type":574,"value":1007},{"type":569,"tag":611,"props":1357,"children":1358},{"style":776},[1359],{"type":574,"value":920},{"type":569,"tag":611,"props":1361,"children":1362},{"style":923},[1363],{"type":574,"value":926},{"type":569,"tag":611,"props":1365,"children":1366},{"style":776},[1367],{"type":574,"value":1342},{"type":569,"tag":611,"props":1369,"children":1370},{"style":804},[1371],{"type":574,"value":945},{"type":569,"tag":611,"props":1373,"children":1374},{"style":853},[1375],{"type":574,"value":1286},{"type":569,"tag":611,"props":1377,"children":1378},{"style":776},[1379],{"type":574,"value":887},{"type":569,"tag":611,"props":1381,"children":1382},{"style":776},[1383],{"type":574,"value":892},{"type":569,"tag":611,"props":1385,"children":1387},{"class":613,"line":1386},20,[1388,1393,1397,1401,1405,1409,1413,1417,1421],{"type":569,"tag":611,"props":1389,"children":1390},{"style":804},[1391],{"type":574,"value":1392},"    chars",{"type":569,"tag":611,"props":1394,"children":1395},{"style":776},[1396],{"type":574,"value":1088},{"type":569,"tag":611,"props":1398,"children":1399},{"style":804},[1400],{"type":574,"value":1093},{"type":569,"tag":611,"props":1402,"children":1403},{"style":776},[1404],{"type":574,"value":1098},{"type":569,"tag":611,"props":1406,"children":1407},{"style":776},[1408],{"type":574,"value":867},{"type":569,"tag":611,"props":1410,"children":1411},{"style":804},[1412],{"type":574,"value":1007},{"type":569,"tag":611,"props":1414,"children":1415},{"style":776},[1416],{"type":574,"value":1088},{"type":569,"tag":611,"props":1418,"children":1419},{"style":804},[1420],{"type":574,"value":1093},{"type":569,"tag":611,"props":1422,"children":1423},{"style":776},[1424],{"type":574,"value":1242},{"type":569,"tag":611,"props":1426,"children":1428},{"class":613,"line":1427},21,[1429],{"type":569,"tag":611,"props":1430,"children":1431},{"style":776},[1432],{"type":574,"value":1299},{"type":569,"tag":611,"props":1434,"children":1436},{"class":613,"line":1435},22,[1437],{"type":569,"tag":611,"props":1438,"children":1439},{"emptyLinePlaceholder":1028},[1440],{"type":574,"value":1031},{"type":569,"tag":611,"props":1442,"children":1444},{"class":613,"line":1443},23,[1445,1450,1454,1458,1462],{"type":569,"tag":611,"props":1446,"children":1447},{"style":782},[1448],{"type":574,"value":1449},"  return",{"type":569,"tag":611,"props":1451,"children":1452},{"style":804},[1453],{"type":574,"value":1007},{"type":569,"tag":611,"props":1455,"children":1456},{"style":776},[1457],{"type":574,"value":920},{"type":569,"tag":611,"props":1459,"children":1460},{"style":923},[1461],{"type":574,"value":926},{"type":569,"tag":611,"props":1463,"children":1464},{"style":776},[1465],{"type":574,"value":931},{"type":569,"tag":611,"props":1467,"children":1469},{"class":613,"line":1468},24,[1470],{"type":569,"tag":611,"props":1471,"children":1472},{"style":776},[1473],{"type":574,"value":1474},"};\n",{"type":569,"tag":1476,"props":1477,"children":1478},"style",{},[1479],{"type":574,"value":1480},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":562,"searchDepth":849,"depth":849,"links":1482},[1483,1484],{"id":734,"depth":623,"text":734},{"id":739,"depth":623,"text":739,"children":1485},[1486],{"id":745,"depth":632,"text":745},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1493,1495],{"_path":237,"title":236,"description":1494},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":243,"title":242,"description":1496},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1717735572216]