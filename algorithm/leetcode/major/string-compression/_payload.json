[{"data":1,"prerenderedAt":1487},["Reactive",2],{"navigation":3,"/algorithm/leetcode/major/string-compression":549,"/algorithm/leetcode/major/string-compression-surround":1482},[4,272,301,517,525,534],{"title":5,"_path":6,"children":7,"icon":271},"算法","/algorithm",[8,31],{"title":9,"_path":10,"children":11},"解题方法","/algorithm/solution-methods",[12],{"title":13,"_path":14,"children":15},"排序","/algorithm/solution-methods/sort",[16,19,22,25,28],{"title":17,"_path":18},"选择排序","/algorithm/solution-methods/sort/selection-sort",{"title":20,"_path":21},"冒泡排序","/algorithm/solution-methods/sort/bubble-sort",{"title":23,"_path":24},"插入排序","/algorithm/solution-methods/sort/insertion-sort",{"title":26,"_path":27},"归并排序","/algorithm/solution-methods/sort/merge-sort",{"title":29,"_path":30},"桶排序","/algorithm/solution-methods/sort/bucket-sort",{"title":32,"_path":33,"children":34},"Leetcode 力扣","/algorithm/leetcode",[35,41,54],{"title":36,"_path":37,"children":38},"题单和标签","/algorithm/leetcode/question-lists-and-labels",[39],{"title":40,"_path":37},"刷题索引",{"title":42,"_path":43,"children":44},"剑指 offer","/algorithm/leetcode/sword-ofter",[45,48,51],{"title":46,"_path":47},"LCR.140 训练计划 II","/algorithm/leetcode/sword-ofter/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof",{"title":49,"_path":50},"LCR.169 招式拆解 II","/algorithm/leetcode/sword-ofter/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",{"title":52,"_path":53},"LCR.187 破冰游戏","/algorithm/leetcode/sword-ofter/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof",{"title":55,"_path":56,"children":57},"主题单","/algorithm/leetcode/major",[58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127,130,133,136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268],{"title":59,"_path":60},"No.1 两数之和","/algorithm/leetcode/major/two-sum",{"title":62,"_path":63},"No.2 两数相加","/algorithm/leetcode/major/add-two-numbers",{"title":65,"_path":66},"No.3 无重复字符的最长子串","/algorithm/leetcode/major/longest-substring-without-repeating-characters",{"title":68,"_path":69},"No.4 寻找两个正序数组的中位数","/algorithm/leetcode/major/median-of-two-sorted-arrays",{"title":71,"_path":72},"No.5 最长回文子串","/algorithm/leetcode/major/longest-palindromic-substring",{"title":74,"_path":75},"No.7 整数反转","/algorithm/leetcode/major/reverse-integer",{"title":77,"_path":78},"No.9 回文数","/algorithm/leetcode/major/palindrome-number",{"title":80,"_path":81},"No.14 最长公共前缀","/algorithm/leetcode/major/longest-common-prefix",{"title":83,"_path":84},"No.15 三数之和","/algorithm/leetcode/major/3sum",{"title":86,"_path":87},"No.20 有效的括号","/algorithm/leetcode/major/valid-parentheses",{"title":89,"_path":90},"No.21 合并两个有序链表","/algorithm/leetcode/major/merge-two-sorted-lists",{"title":92,"_path":93},"No.22 括号生成","/algorithm/leetcode/major/generate-parentheses",{"title":95,"_path":96},"No.23 合并 K 个升序链表","/algorithm/leetcode/major/merge-k-sorted-lists",{"title":98,"_path":99},"No.24 两两交换链表中的节点","/algorithm/leetcode/major/swap-nodes-in-pairs",{"title":101,"_path":102},"No.25 K 个一组翻转链表","/algorithm/leetcode/major/reverse-nodes-in-k-group",{"title":104,"_path":105},"No.31 下一个排列","/algorithm/leetcode/major/next-permutation",{"title":107,"_path":108},"No.32 最长有效括号","/algorithm/leetcode/major/longest-valid-parentheses",{"title":110,"_path":111},"No.33 搜索旋转排序数组","/algorithm/leetcode/major/search-in-rotated-sorted-array",{"title":113,"_path":114},"No.34 在排序数组中查找元素的第一个和最后一个位置","/algorithm/leetcode/major/find-first-and-last-position-of-element-in-sorted-array",{"title":116,"_path":117},"No.39 组合求和","/algorithm/leetcode/major/combination-sum",{"title":119,"_path":120},"No.42 接雨水","/algorithm/leetcode/major/trapping-rain-water",{"title":122,"_path":123},"No.46 全排列","/algorithm/leetcode/major/permutations",{"title":125,"_path":126},"No.53 最大子序和","/algorithm/leetcode/major/maximum-subarray",{"title":128,"_path":129},"No.56 合并区间","/algorithm/leetcode/major/merge-intervals",{"title":131,"_path":132},"No.67 二进制求和","/algorithm/leetcode/major/add-binary",{"title":134,"_path":135},"No.69 x 的平方根","/algorithm/leetcode/major/sqrtx",{"title":137,"_path":138},"No.70 爬楼梯","/algorithm/leetcode/major/climbing-stairs",{"title":140,"_path":141},"No.88 合并两个有序数组","/algorithm/leetcode/major/merge-sorted-array",{"title":143,"_path":144},"No.92 反转链表 II","/algorithm/leetcode/major/reverse-linked-list-ii",{"title":146,"_path":147},"No.94 二叉树的中序遍历","/algorithm/leetcode/major/binary-tree-inorder-traversal",{"title":149,"_path":150},"No.101 对称二叉树","/algorithm/leetcode/major/symmetric-tree",{"title":152,"_path":153},"No.102 二叉树的层序遍历","/algorithm/leetcode/major/binary-tree-level-order-traversal",{"title":155,"_path":156},"No.104 二叉树的最大深度","/algorithm/leetcode/major/maximum-depth-of-binary-tree",{"title":158,"_path":159},"No.111 二叉树的最小深度","/algorithm/leetcode/major/minimum-depth-of-binary-tree",{"title":161,"_path":162},"No.112 路径总和","/algorithm/leetcode/major/path-sum",{"title":164,"_path":165},"No.121 买股票的最佳时机","/algorithm/leetcode/major/best-time-to-buy-and-sell-stock",{"title":167,"_path":168},"No.129 求根到叶子节点数字之和","/algorithm/leetcode/major/sum-root-to-leaf-numbers",{"title":170,"_path":171},"No.136 只出现一次的数字","/algorithm/leetcode/major/single-number",{"title":173,"_path":174},"No.141 环型链表","/algorithm/leetcode/major/linked-list-cycle",{"title":176,"_path":177},"No.146 LRU 缓存","/algorithm/leetcode/major/lru-cache",{"title":179,"_path":180},"No.151 反转字符串中的单词","/algorithm/leetcode/major/reverse-words-in-a-string",{"title":182,"_path":183},"No.153 寻找旋转排序数组中的最小值","/algorithm/leetcode/major/find-minimum-in-rotated-sorted-array",{"title":185,"_path":186},"No.155 最小栈","/algorithm/leetcode/major/min-stack",{"title":188,"_path":189},"No.160 相交链表","/algorithm/leetcode/major/intersection-of-two-linked-lists",{"title":191,"_path":192},"No.162 寻找峰值","/algorithm/leetcode/major/find-peak-element",{"title":194,"_path":195},"No.165 比较版本号","/algorithm/leetcode/major/compare-version-numbers",{"title":197,"_path":198},"No.169 多数元素","/algorithm/leetcode/major/majority-element",{"title":200,"_path":201},"No.200 岛屿数量","/algorithm/leetcode/major/number-of-islands",{"title":203,"_path":204},"No.206 反转链表","/algorithm/leetcode/major/reverse-linked-list",{"title":206,"_path":207},"No.209 长度最小的子数组","/algorithm/leetcode/major/minimum-size-subarray-sum",{"title":209,"_path":210},"No.215 数组中的第K个最大元素","/algorithm/leetcode/major/kth-largest-element-in-an-array",{"title":212,"_path":213},"No.226 翻转二叉树","/algorithm/leetcode/major/invert-binary-tree",{"title":215,"_path":216},"No.238 除自身以外数组的乘积","/algorithm/leetcode/major/product-of-array-except-self",{"title":218,"_path":219},"No.300 最长递增子序列","/algorithm/leetcode/major/longest-increasing-subsequence",{"title":221,"_path":222},"No.322 零钱兑换","/algorithm/leetcode/major/coin-change",{"title":224,"_path":225},"No.334 递增的三元子序列","/algorithm/leetcode/major/increasing-triplet-subsequence",{"title":227,"_path":228},"No.344 反转字符串","/algorithm/leetcode/major/reverse-string",{"title":230,"_path":231},"No.345 反转字符串中的元音字母","/algorithm/leetcode/major/reverse-vowels-of-a-string",{"title":233,"_path":234},"No.384 打乱数组","/algorithm/leetcode/major/shuffle-an-array",{"title":236,"_path":237},"No.415 字符串相加","/algorithm/leetcode/major/add-strings",{"title":239,"_path":240},"No.443 压缩字符串","/algorithm/leetcode/major/string-compression",{"title":242,"_path":243},"No.509 斐波那契数","/algorithm/leetcode/major/fibonacci-number",{"title":245,"_path":246},"No.605 种花问题","/algorithm/leetcode/major/can-place-flowers",{"title":248,"_path":249},"No.617 合并二叉树","/algorithm/leetcode/major/merge-two-binary-trees",{"title":251,"_path":252},"No.678 有效的括号字符串","/algorithm/leetcode/major/valid-parenthesis-string",{"title":254,"_path":255},"No.704 二分查找","/algorithm/leetcode/major/binary-search",{"title":257,"_path":258},"No.912 排序数组","/algorithm/leetcode/major/sort-an-array",{"title":260,"_path":261},"No.1071 字符串的最大公因子","/algorithm/leetcode/major/greatest-common-divisor-of-strings",{"title":263,"_path":264},"No.1143 最长公共子序列","/algorithm/leetcode/major/longest-common-subsequence",{"title":266,"_path":267},"No.1431 拥有最多糖果的孩子","/algorithm/leetcode/major/kids-with-the-greatest-number-of-candies",{"title":269,"_path":270},"No.1768 交替合并字符串","/algorithm/leetcode/major/merge-strings-alternately","i-carbon-calculation",{"title":273,"_path":274,"children":275,"icon":300},"八股文","/endorsement",[276,287],{"title":277,"_path":278,"children":279},"构建工具","/endorsement/build-tools",[280],{"title":281,"_path":282,"children":283},"Webpack","/endorsement/build-tools/webpack",[284],{"title":285,"_path":286},"构建流程","/endorsement/build-tools/webpack/build-process",{"title":288,"_path":289,"children":290},"Html","/endorsement/html",[291,294,297],{"title":292,"_path":293},"Canvas 和 Svg","/endorsement/html/canvas-svg",{"title":295,"_path":296},"DOCTYPE 文档类型","/endorsement/html/doc-type",{"title":298,"_path":299},"离线存储","/endorsement/html/offline-storage","i-heroicons-newspaper",{"title":302,"_path":303,"children":304,"icon":516},"代码考核","/code-assessment",[305,407,509],{"title":306,"_path":307,"children":308},"源码实现","/code-assessment/source",[309,340,356,384,391,398,401,404],{"title":310,"_path":311,"children":312},"原生 api","/code-assessment/source/native-api",[313,316,319,322,325,328,331,334,337],{"title":314,"_path":315},"polyfill","/code-assessment/source/native-api/polyfill",{"title":317,"_path":318},"ajax","/code-assessment/source/native-api/ajax",{"title":320,"_path":321},"call & apply & bind","/code-assessment/source/native-api/call-apply-bind",{"title":323,"_path":324},"new 操作符","/code-assessment/source/native-api/new",{"title":326,"_path":327},"instanceof 关键字","/code-assessment/source/native-api/instanceof",{"title":329,"_path":330},"定时器","/code-assessment/source/native-api/timer",{"title":332,"_path":333},"JSON.stringify","/code-assessment/source/native-api/json-stringify",{"title":335,"_path":336},"Iterator 迭代器","/code-assessment/source/native-api/iterator",{"title":338,"_path":339},"extends","/code-assessment/source/native-api/extends",{"title":341,"_path":342,"children":343},"函数 Function","/code-assessment/source/function",[344,347,350,353],{"title":345,"_path":346},"函数防抖","/code-assessment/source/function/debounce",{"title":348,"_path":349},"函数节流","/code-assessment/source/function/throttle",{"title":351,"_path":352},"函数柯理化","/code-assessment/source/function/curry",{"title":354,"_path":355},"函数睡眠","/code-assessment/source/function/sleep",{"title":357,"_path":358,"children":359},"数组 Array","/code-assessment/source/array",[360,363,366,369,372,375,378,381],{"title":361,"_path":362},"数组去重","/code-assessment/source/array/remove-duplicate",{"title":364,"_path":365},"数组扁平化","/code-assessment/source/array/flat",{"title":367,"_path":368},"原型方法","/code-assessment/source/array/prototype-method",{"title":370,"_path":371},"交集、差集、并集、补集","/code-assessment/source/array/intersect-minus-union-complement",{"title":373,"_path":374},"数组和树互转","/code-assessment/source/array/arrays-and-trees-swap-each-other",{"title":376,"_path":377},"类数组转换","/code-assessment/source/array/array-like-convert",{"title":379,"_path":380},"数组乱序","/code-assessment/source/array/array-out-of-order",{"title":382,"_path":383},"二维数组","/code-assessment/source/array/2d-array",{"title":385,"_path":386,"children":387},"字符串 String","/code-assessment/source/string",[388],{"title":389,"_path":390},"repeat()","/code-assessment/source/string/repeat",{"title":392,"_path":393,"children":394},"集合 Set","/code-assessment/source/set",[395],{"title":396,"_path":397},"遍历集合","/code-assessment/source/set/traverse",{"title":399,"_path":400},"获取通用类型","/code-assessment/source/get-generic-type",{"title":402,"_path":403},"判断朴素对象","/code-assessment/source/is-plain-object",{"title":405,"_path":406},"深浅拷贝","/code-assessment/source/shallow-and-deep-copy",{"title":408,"_path":409,"children":410},"业务场景","/code-assessment/scene",[411,442,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":412,"_path":413,"children":414},"Promise","/code-assessment/scene/promise",[415,418,421,424,427,430,433,436,439],{"title":416,"_path":417},"保证 url 打印顺序并支持 retry","/code-assessment/scene/promise/order-print-url-and-support-retry",{"title":419,"_path":420},"异步串行","/code-assessment/scene/promise/async-serial-port",{"title":422,"_path":423},"实现 Promise 并发","/code-assessment/scene/promise/promise-concurrent",{"title":425,"_path":426},"并发限制图片加载数量","/code-assessment/scene/promise/concurrent-limit-image-load-count",{"title":428,"_path":429},"实现并发调度器","/code-assessment/scene/promise/concurrent-scheduler",{"title":431,"_path":432},"实现 mergePromise 函数","/code-assessment/scene/promise/implement-merge-promise-function",{"title":434,"_path":435},"使用 addRemote 实现 add","/code-assessment/scene/promise/use-addremote-to-implement-add",{"title":437,"_path":438},"Promise 缓存","/code-assessment/scene/promise/promise-cache",{"title":440,"_path":441},"循环打印红-黄-绿","/code-assessment/scene/promise/cycle-printing-red-yellow-green",{"title":443,"_path":444,"children":445},"框架核心功能实现","/code-assessment/scene/framework-core-implement",[446,449],{"title":447,"_path":448},"event bus","/code-assessment/scene/framework-core-implement/event-bus",{"title":450,"_path":451},"极简 vue 实现","/code-assessment/scene/framework-core-implement/simple-vue",{"title":453,"_path":454},"原型链输出","/code-assessment/scene/prototype-chain-output",{"title":456,"_path":457},"阿拉伯数字和中文互转","/code-assessment/scene/arabic-numerals-and-chinese-converted",{"title":459,"_path":460},"计算对象占用字节数","/code-assessment/scene/calcuate-object-bytes",{"title":462,"_path":463},"倒计时","/code-assessment/scene/countdown",{"title":465,"_path":466},"日期格式化","/code-assessment/scene/date-format",{"title":468,"_path":469},"实现前端路由","/code-assessment/scene/frontend-route",{"title":471,"_path":472},"图片格式转换","/code-assessment/scene/image-format-conversion",{"title":474,"_path":475},"lodash.get","/code-assessment/scene/lodash-get",{"title":477,"_path":478},"记忆化请求函数 - 可缓存请求函数","/code-assessment/scene/memorize-request",{"title":480,"_path":481},"内容中出现频率最高的字符","/code-assessment/scene/most-frequent-characters-in-content",{"title":483,"_path":484},"对象是否循环引用","/code-assessment/scene/object-is-or-not-circular-reference",{"title":486,"_path":487},"解析 url 参数","/code-assessment/scene/parse-url-query",{"title":489,"_path":490},"随机数","/code-assessment/scene/random-number",{"title":492,"_path":493},"富文本内容转换","/code-assessment/scene/rich-text-content-conversion",{"title":495,"_path":496},"sku 算法实现","/code-assessment/scene/sku",{"title":498,"_path":499},"整数分割","/code-assessment/scene/split-number",{"title":501,"_path":502},"千分位分隔数字字符串","/code-assessment/scene/thousandth-separated-number-string",{"title":504,"_path":505},"长列表虚拟滚动","/code-assessment/scene/vitrual-scroll-list",{"title":507,"_path":508},"xhr hook 实现打印日志","/code-assessment/scene/xhr-hook-to-log",{"title":510,"_path":511,"children":512},"Ts 类型挑战","/code-assessment/type-challeges",[513],{"title":514,"_path":515},"No.10 元组转合集(联合类型)","/code-assessment/type-challeges/medium-tuple-to-union","i-heroicons-command-line",{"title":518,"_path":519,"children":520,"icon":524},"项目","/project",[521],{"title":522,"_path":523},"Vue 如何对 Store 进行单元测试","/project/unit-test-vue-store","i-heroicons-squares-plus",{"title":526,"_path":527,"children":528,"icon":533},"设计模式","/design-mode",[529,530],{"title":526,"_path":527},{"title":531,"_path":532},"设计思想与原则","/design-mode/thoughts-principles","i-carbon-paint-brush",{"title":535,"_path":536,"children":537,"icon":548},"后端语言","/backend-languages",[538],{"title":539,"_path":540,"children":541},"Python","/backend-languages/python",[542,545],{"title":543,"_path":544},"基础","/backend-languages/python/base",{"title":546,"_path":547},"函数","/backend-languages/python/function","i-heroicons-globe-alt",{"_path":240,"_dir":550,"_draft":551,"_partial":551,"_locale":552,"title":239,"description":553,"url":554,"body":555,"_type":1477,"_id":1478,"_source":1479,"_file":1480,"_extension":1481},"major",false,"","给你一个字符数组 chars ，请使用下述算法压缩：","https://leetcode.cn/problems/string-compression",{"type":556,"children":557,"toc":1471},"root",[558,565,570,575,580,585,590,629,634,665,670,701,706,721,727,732,738,1465],{"type":559,"tag":560,"props":561,"children":562},"element","p",{},[563],{"type":564,"value":553},"text",{"type":559,"tag":560,"props":566,"children":567},{},[568],{"type":564,"value":569},"从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：",{"type":559,"tag":560,"props":571,"children":572},{},[573],{"type":564,"value":574},"如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。",{"type":559,"tag":560,"props":576,"children":577},{},[578],{"type":564,"value":579},"请在 修改完输入数组后 ，返回该数组的新长度。",{"type":559,"tag":560,"props":581,"children":582},{},[583],{"type":564,"value":584},"你必须设计并实现一个只使用常量额外空间的算法来解决此问题。",{"type":559,"tag":560,"props":586,"children":587},{},[588],{"type":564,"value":589},"示例 1：",{"type":559,"tag":591,"props":592,"children":595},"pre",{"className":593,"code":594,"language":564,"meta":552,"style":552},"language-text shiki shiki-themes vitesse-light vitesse-light vitesse-dark","输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",[596],{"type":559,"tag":597,"props":598,"children":599},"code",{"__ignoreMap":552},[600,611,620],{"type":559,"tag":601,"props":602,"children":605},"span",{"class":603,"line":604},"line",1,[606],{"type":559,"tag":601,"props":607,"children":608},{},[609],{"type":564,"value":610},"输入：chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n",{"type":559,"tag":601,"props":612,"children":614},{"class":603,"line":613},2,[615],{"type":559,"tag":601,"props":616,"children":617},{},[618],{"type":564,"value":619},"输出：返回 6 ，输入数组的前 6 个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n",{"type":559,"tag":601,"props":621,"children":623},{"class":603,"line":622},3,[624],{"type":559,"tag":601,"props":625,"children":626},{},[627],{"type":564,"value":628},"解释：\"aa\" 被 \"a2\" 替代。\"bb\" 被 \"b2\" 替代。\"ccc\" 被 \"c3\" 替代。\n",{"type":559,"tag":560,"props":630,"children":631},{},[632],{"type":564,"value":633},"示例 2：",{"type":559,"tag":591,"props":635,"children":637},{"className":593,"code":636,"language":564,"meta":552,"style":552},"输入：chars = [\"a\"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",[638],{"type":559,"tag":597,"props":639,"children":640},{"__ignoreMap":552},[641,649,657],{"type":559,"tag":601,"props":642,"children":643},{"class":603,"line":604},[644],{"type":559,"tag":601,"props":645,"children":646},{},[647],{"type":564,"value":648},"输入：chars = [\"a\"]\n",{"type":559,"tag":601,"props":650,"children":651},{"class":603,"line":613},[652],{"type":559,"tag":601,"props":653,"children":654},{},[655],{"type":564,"value":656},"输出：返回 1 ，输入数组的前 1 个字符应该是：[\"a\"]\n",{"type":559,"tag":601,"props":658,"children":659},{"class":603,"line":622},[660],{"type":559,"tag":601,"props":661,"children":662},{},[663],{"type":564,"value":664},"解释：唯一的组是“a”，它保持未压缩，因为它是一个字符。\n",{"type":559,"tag":560,"props":666,"children":667},{},[668],{"type":564,"value":669},"示例 3：",{"type":559,"tag":591,"props":671,"children":673},{"className":593,"code":672,"language":564,"meta":552,"style":552},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",[674],{"type":559,"tag":597,"props":675,"children":676},{"__ignoreMap":552},[677,685,693],{"type":559,"tag":601,"props":678,"children":679},{"class":603,"line":604},[680],{"type":559,"tag":601,"props":681,"children":682},{},[683],{"type":564,"value":684},"输入：chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n",{"type":559,"tag":601,"props":686,"children":687},{"class":603,"line":613},[688],{"type":559,"tag":601,"props":689,"children":690},{},[691],{"type":564,"value":692},"输出：返回 4 ，输入数组的前 4 个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n",{"type":559,"tag":601,"props":694,"children":695},{"class":603,"line":622},[696],{"type":559,"tag":601,"props":697,"children":698},{},[699],{"type":564,"value":700},"解释：由于字符 \"a\" 不重复，所以不会被压缩。\"bbbbbbbbbbbb\" 被 “b12” 替代。\n",{"type":559,"tag":560,"props":702,"children":703},{},[704],{"type":564,"value":705},"提示：",{"type":559,"tag":707,"props":708,"children":709},"ul",{},[710,716],{"type":559,"tag":711,"props":712,"children":713},"li",{},[714],{"type":564,"value":715},"1 \u003C= chars.length \u003C= 2000",{"type":559,"tag":711,"props":717,"children":718},{},[719],{"type":564,"value":720},"chars[i] 可以是小写英文字母、大写英文字母、数字或符号",{"type":559,"tag":722,"props":723,"children":725},"h2",{"id":724},"解题思路",[726],{"type":564,"value":724},{"type":559,"tag":722,"props":728,"children":730},{"id":729},"实现",[731],{"type":564,"value":729},{"type":559,"tag":733,"props":734,"children":736},"h3",{"id":735},"双指针",[737],{"type":564,"value":735},{"type":559,"tag":591,"props":739,"children":743},{"className":740,"code":741,"language":742,"meta":552,"style":552},"language-js shiki shiki-themes vitesse-light vitesse-light vitesse-dark","/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function (chars) {\n  const len = chars.length;\n  let i = 0;\n  let j = i + 1;\n  let s = \"\";\n\n  while (j \u003C= len) {\n    if (chars[i] !== chars[j]) {\n      s += j - i > 1 ? `${chars[i]}${j - i}` : chars[i];\n      i = j;\n    }\n    j++;\n  }\n\n  for (let i = 0; i \u003C s.length; i++) {\n    chars[i] = s[i];\n  }\n\n  return s.length;\n};\n","js",[744],{"type":559,"tag":597,"props":745,"children":746},{"__ignoreMap":552},[747,756,798,828,837,883,922,950,985,1012,1022,1057,1115,1233,1254,1263,1281,1290,1298,1374,1415,1423,1431,1456],{"type":559,"tag":601,"props":748,"children":749},{"class":603,"line":604},[750],{"type":559,"tag":601,"props":751,"children":753},{"style":752},"--shiki-light:#A0ADA0;--shiki-default:#A0ADA0;--shiki-dark:#758575DD",[754],{"type":564,"value":755},"/**\n",{"type":559,"tag":601,"props":757,"children":758},{"class":603,"line":613},[759,764,770,776,781,787,792],{"type":559,"tag":601,"props":760,"children":761},{"style":752},[762],{"type":564,"value":763}," * ",{"type":559,"tag":601,"props":765,"children":767},{"style":766},"--shiki-light:#999999;--shiki-default:#999999;--shiki-dark:#666666",[768],{"type":564,"value":769},"@",{"type":559,"tag":601,"props":771,"children":773},{"style":772},"--shiki-light:#1E754F;--shiki-default:#1E754F;--shiki-dark:#4D9375",[774],{"type":564,"value":775},"param",{"type":559,"tag":601,"props":777,"children":778},{"style":766},[779],{"type":564,"value":780}," {",{"type":559,"tag":601,"props":782,"children":784},{"style":783},"--shiki-light:#2E8F82;--shiki-default:#2E8F82;--shiki-dark:#5DA994",[785],{"type":564,"value":786},"character[]",{"type":559,"tag":601,"props":788,"children":789},{"style":766},[790],{"type":564,"value":791},"}",{"type":559,"tag":601,"props":793,"children":795},{"style":794},"--shiki-light:#B07D48;--shiki-default:#B07D48;--shiki-dark:#BD976A",[796],{"type":564,"value":797}," chars\n",{"type":559,"tag":601,"props":799,"children":800},{"class":603,"line":622},[801,805,809,814,818,823],{"type":559,"tag":601,"props":802,"children":803},{"style":752},[804],{"type":564,"value":763},{"type":559,"tag":601,"props":806,"children":807},{"style":766},[808],{"type":564,"value":769},{"type":559,"tag":601,"props":810,"children":811},{"style":772},[812],{"type":564,"value":813},"return",{"type":559,"tag":601,"props":815,"children":816},{"style":766},[817],{"type":564,"value":780},{"type":559,"tag":601,"props":819,"children":820},{"style":783},[821],{"type":564,"value":822},"number",{"type":559,"tag":601,"props":824,"children":825},{"style":766},[826],{"type":564,"value":827},"}\n",{"type":559,"tag":601,"props":829,"children":831},{"class":603,"line":830},4,[832],{"type":559,"tag":601,"props":833,"children":834},{"style":752},[835],{"type":564,"value":836}," */\n",{"type":559,"tag":601,"props":838,"children":840},{"class":603,"line":839},5,[841,847,853,858,863,868,873,878],{"type":559,"tag":601,"props":842,"children":844},{"style":843},"--shiki-light:#AB5959;--shiki-default:#AB5959;--shiki-dark:#CB7676",[845],{"type":564,"value":846},"var",{"type":559,"tag":601,"props":848,"children":850},{"style":849},"--shiki-light:#59873A;--shiki-default:#59873A;--shiki-dark:#80A665",[851],{"type":564,"value":852}," compress",{"type":559,"tag":601,"props":854,"children":855},{"style":766},[856],{"type":564,"value":857}," =",{"type":559,"tag":601,"props":859,"children":860},{"style":843},[861],{"type":564,"value":862}," function",{"type":559,"tag":601,"props":864,"children":865},{"style":766},[866],{"type":564,"value":867}," (",{"type":559,"tag":601,"props":869,"children":870},{"style":794},[871],{"type":564,"value":872},"chars",{"type":559,"tag":601,"props":874,"children":875},{"style":766},[876],{"type":564,"value":877},")",{"type":559,"tag":601,"props":879,"children":880},{"style":766},[881],{"type":564,"value":882}," {\n",{"type":559,"tag":601,"props":884,"children":886},{"class":603,"line":885},6,[887,892,897,901,906,911,917],{"type":559,"tag":601,"props":888,"children":889},{"style":843},[890],{"type":564,"value":891},"  const",{"type":559,"tag":601,"props":893,"children":894},{"style":794},[895],{"type":564,"value":896}," len",{"type":559,"tag":601,"props":898,"children":899},{"style":766},[900],{"type":564,"value":857},{"type":559,"tag":601,"props":902,"children":903},{"style":794},[904],{"type":564,"value":905}," chars",{"type":559,"tag":601,"props":907,"children":908},{"style":766},[909],{"type":564,"value":910},".",{"type":559,"tag":601,"props":912,"children":914},{"style":913},"--shiki-light:#998418;--shiki-default:#998418;--shiki-dark:#B8A965",[915],{"type":564,"value":916},"length",{"type":559,"tag":601,"props":918,"children":919},{"style":766},[920],{"type":564,"value":921},";\n",{"type":559,"tag":601,"props":923,"children":925},{"class":603,"line":924},7,[926,931,936,940,946],{"type":559,"tag":601,"props":927,"children":928},{"style":843},[929],{"type":564,"value":930},"  let",{"type":559,"tag":601,"props":932,"children":933},{"style":794},[934],{"type":564,"value":935}," i",{"type":559,"tag":601,"props":937,"children":938},{"style":766},[939],{"type":564,"value":857},{"type":559,"tag":601,"props":941,"children":943},{"style":942},"--shiki-light:#2F798A;--shiki-default:#2F798A;--shiki-dark:#4C9A91",[944],{"type":564,"value":945}," 0",{"type":559,"tag":601,"props":947,"children":948},{"style":766},[949],{"type":564,"value":921},{"type":559,"tag":601,"props":951,"children":953},{"class":603,"line":952},8,[954,958,963,967,971,976,981],{"type":559,"tag":601,"props":955,"children":956},{"style":843},[957],{"type":564,"value":930},{"type":559,"tag":601,"props":959,"children":960},{"style":794},[961],{"type":564,"value":962}," j",{"type":559,"tag":601,"props":964,"children":965},{"style":766},[966],{"type":564,"value":857},{"type":559,"tag":601,"props":968,"children":969},{"style":794},[970],{"type":564,"value":935},{"type":559,"tag":601,"props":972,"children":973},{"style":843},[974],{"type":564,"value":975}," +",{"type":559,"tag":601,"props":977,"children":978},{"style":942},[979],{"type":564,"value":980}," 1",{"type":559,"tag":601,"props":982,"children":983},{"style":766},[984],{"type":564,"value":921},{"type":559,"tag":601,"props":986,"children":988},{"class":603,"line":987},9,[989,993,998,1002,1008],{"type":559,"tag":601,"props":990,"children":991},{"style":843},[992],{"type":564,"value":930},{"type":559,"tag":601,"props":994,"children":995},{"style":794},[996],{"type":564,"value":997}," s",{"type":559,"tag":601,"props":999,"children":1000},{"style":766},[1001],{"type":564,"value":857},{"type":559,"tag":601,"props":1003,"children":1005},{"style":1004},"--shiki-light:#B5695999;--shiki-default:#B5695999;--shiki-dark:#C98A7D99",[1006],{"type":564,"value":1007}," \"\"",{"type":559,"tag":601,"props":1009,"children":1010},{"style":766},[1011],{"type":564,"value":921},{"type":559,"tag":601,"props":1013,"children":1015},{"class":603,"line":1014},10,[1016],{"type":559,"tag":601,"props":1017,"children":1019},{"emptyLinePlaceholder":1018},true,[1020],{"type":564,"value":1021},"\n",{"type":559,"tag":601,"props":1023,"children":1025},{"class":603,"line":1024},11,[1026,1031,1035,1040,1045,1049,1053],{"type":559,"tag":601,"props":1027,"children":1028},{"style":772},[1029],{"type":564,"value":1030},"  while",{"type":559,"tag":601,"props":1032,"children":1033},{"style":766},[1034],{"type":564,"value":867},{"type":559,"tag":601,"props":1036,"children":1037},{"style":794},[1038],{"type":564,"value":1039},"j",{"type":559,"tag":601,"props":1041,"children":1042},{"style":766},[1043],{"type":564,"value":1044}," \u003C=",{"type":559,"tag":601,"props":1046,"children":1047},{"style":794},[1048],{"type":564,"value":896},{"type":559,"tag":601,"props":1050,"children":1051},{"style":766},[1052],{"type":564,"value":877},{"type":559,"tag":601,"props":1054,"children":1055},{"style":766},[1056],{"type":564,"value":882},{"type":559,"tag":601,"props":1058,"children":1060},{"class":603,"line":1059},12,[1061,1066,1070,1074,1079,1084,1089,1094,1098,1102,1106,1111],{"type":559,"tag":601,"props":1062,"children":1063},{"style":772},[1064],{"type":564,"value":1065},"    if",{"type":559,"tag":601,"props":1067,"children":1068},{"style":766},[1069],{"type":564,"value":867},{"type":559,"tag":601,"props":1071,"children":1072},{"style":794},[1073],{"type":564,"value":872},{"type":559,"tag":601,"props":1075,"children":1076},{"style":766},[1077],{"type":564,"value":1078},"[",{"type":559,"tag":601,"props":1080,"children":1081},{"style":794},[1082],{"type":564,"value":1083},"i",{"type":559,"tag":601,"props":1085,"children":1086},{"style":766},[1087],{"type":564,"value":1088},"]",{"type":559,"tag":601,"props":1090,"children":1091},{"style":843},[1092],{"type":564,"value":1093}," !==",{"type":559,"tag":601,"props":1095,"children":1096},{"style":794},[1097],{"type":564,"value":905},{"type":559,"tag":601,"props":1099,"children":1100},{"style":766},[1101],{"type":564,"value":1078},{"type":559,"tag":601,"props":1103,"children":1104},{"style":794},[1105],{"type":564,"value":1039},{"type":559,"tag":601,"props":1107,"children":1108},{"style":766},[1109],{"type":564,"value":1110},"])",{"type":559,"tag":601,"props":1112,"children":1113},{"style":766},[1114],{"type":564,"value":882},{"type":559,"tag":601,"props":1116,"children":1118},{"class":603,"line":1117},13,[1119,1124,1129,1133,1138,1142,1147,1151,1156,1161,1166,1171,1175,1179,1183,1188,1193,1198,1202,1206,1211,1216,1220,1224,1228],{"type":559,"tag":601,"props":1120,"children":1121},{"style":794},[1122],{"type":564,"value":1123},"      s",{"type":559,"tag":601,"props":1125,"children":1126},{"style":843},[1127],{"type":564,"value":1128}," +=",{"type":559,"tag":601,"props":1130,"children":1131},{"style":794},[1132],{"type":564,"value":962},{"type":559,"tag":601,"props":1134,"children":1135},{"style":843},[1136],{"type":564,"value":1137}," -",{"type":559,"tag":601,"props":1139,"children":1140},{"style":794},[1141],{"type":564,"value":935},{"type":559,"tag":601,"props":1143,"children":1144},{"style":766},[1145],{"type":564,"value":1146}," >",{"type":559,"tag":601,"props":1148,"children":1149},{"style":942},[1150],{"type":564,"value":980},{"type":559,"tag":601,"props":1152,"children":1153},{"style":843},[1154],{"type":564,"value":1155}," ?",{"type":559,"tag":601,"props":1157,"children":1158},{"style":1004},[1159],{"type":564,"value":1160}," `",{"type":559,"tag":601,"props":1162,"children":1163},{"style":766},[1164],{"type":564,"value":1165},"${",{"type":559,"tag":601,"props":1167,"children":1169},{"style":1168},"--shiki-light:#B56959;--shiki-default:#B56959;--shiki-dark:#C98A7D",[1170],{"type":564,"value":872},{"type":559,"tag":601,"props":1172,"children":1173},{"style":766},[1174],{"type":564,"value":1078},{"type":559,"tag":601,"props":1176,"children":1177},{"style":1168},[1178],{"type":564,"value":1083},{"type":559,"tag":601,"props":1180,"children":1181},{"style":766},[1182],{"type":564,"value":1088},{"type":559,"tag":601,"props":1184,"children":1185},{"style":766},[1186],{"type":564,"value":1187},"}${",{"type":559,"tag":601,"props":1189,"children":1190},{"style":1168},[1191],{"type":564,"value":1192},"j ",{"type":559,"tag":601,"props":1194,"children":1195},{"style":843},[1196],{"type":564,"value":1197},"-",{"type":559,"tag":601,"props":1199,"children":1200},{"style":1168},[1201],{"type":564,"value":935},{"type":559,"tag":601,"props":1203,"children":1204},{"style":766},[1205],{"type":564,"value":791},{"type":559,"tag":601,"props":1207,"children":1208},{"style":1004},[1209],{"type":564,"value":1210},"`",{"type":559,"tag":601,"props":1212,"children":1213},{"style":843},[1214],{"type":564,"value":1215}," :",{"type":559,"tag":601,"props":1217,"children":1218},{"style":794},[1219],{"type":564,"value":905},{"type":559,"tag":601,"props":1221,"children":1222},{"style":766},[1223],{"type":564,"value":1078},{"type":559,"tag":601,"props":1225,"children":1226},{"style":794},[1227],{"type":564,"value":1083},{"type":559,"tag":601,"props":1229,"children":1230},{"style":766},[1231],{"type":564,"value":1232},"];\n",{"type":559,"tag":601,"props":1234,"children":1236},{"class":603,"line":1235},14,[1237,1242,1246,1250],{"type":559,"tag":601,"props":1238,"children":1239},{"style":794},[1240],{"type":564,"value":1241},"      i",{"type":559,"tag":601,"props":1243,"children":1244},{"style":766},[1245],{"type":564,"value":857},{"type":559,"tag":601,"props":1247,"children":1248},{"style":794},[1249],{"type":564,"value":962},{"type":559,"tag":601,"props":1251,"children":1252},{"style":766},[1253],{"type":564,"value":921},{"type":559,"tag":601,"props":1255,"children":1257},{"class":603,"line":1256},15,[1258],{"type":559,"tag":601,"props":1259,"children":1260},{"style":766},[1261],{"type":564,"value":1262},"    }\n",{"type":559,"tag":601,"props":1264,"children":1266},{"class":603,"line":1265},16,[1267,1272,1277],{"type":559,"tag":601,"props":1268,"children":1269},{"style":794},[1270],{"type":564,"value":1271},"    j",{"type":559,"tag":601,"props":1273,"children":1274},{"style":843},[1275],{"type":564,"value":1276},"++",{"type":559,"tag":601,"props":1278,"children":1279},{"style":766},[1280],{"type":564,"value":921},{"type":559,"tag":601,"props":1282,"children":1284},{"class":603,"line":1283},17,[1285],{"type":559,"tag":601,"props":1286,"children":1287},{"style":766},[1288],{"type":564,"value":1289},"  }\n",{"type":559,"tag":601,"props":1291,"children":1293},{"class":603,"line":1292},18,[1294],{"type":559,"tag":601,"props":1295,"children":1296},{"emptyLinePlaceholder":1018},[1297],{"type":564,"value":1021},{"type":559,"tag":601,"props":1299,"children":1301},{"class":603,"line":1300},19,[1302,1307,1311,1316,1320,1324,1328,1333,1337,1342,1346,1350,1354,1358,1362,1366,1370],{"type":559,"tag":601,"props":1303,"children":1304},{"style":772},[1305],{"type":564,"value":1306},"  for",{"type":559,"tag":601,"props":1308,"children":1309},{"style":766},[1310],{"type":564,"value":867},{"type":559,"tag":601,"props":1312,"children":1313},{"style":843},[1314],{"type":564,"value":1315},"let",{"type":559,"tag":601,"props":1317,"children":1318},{"style":794},[1319],{"type":564,"value":935},{"type":559,"tag":601,"props":1321,"children":1322},{"style":766},[1323],{"type":564,"value":857},{"type":559,"tag":601,"props":1325,"children":1326},{"style":942},[1327],{"type":564,"value":945},{"type":559,"tag":601,"props":1329,"children":1330},{"style":766},[1331],{"type":564,"value":1332},";",{"type":559,"tag":601,"props":1334,"children":1335},{"style":794},[1336],{"type":564,"value":935},{"type":559,"tag":601,"props":1338,"children":1339},{"style":766},[1340],{"type":564,"value":1341}," \u003C",{"type":559,"tag":601,"props":1343,"children":1344},{"style":794},[1345],{"type":564,"value":997},{"type":559,"tag":601,"props":1347,"children":1348},{"style":766},[1349],{"type":564,"value":910},{"type":559,"tag":601,"props":1351,"children":1352},{"style":913},[1353],{"type":564,"value":916},{"type":559,"tag":601,"props":1355,"children":1356},{"style":766},[1357],{"type":564,"value":1332},{"type":559,"tag":601,"props":1359,"children":1360},{"style":794},[1361],{"type":564,"value":935},{"type":559,"tag":601,"props":1363,"children":1364},{"style":843},[1365],{"type":564,"value":1276},{"type":559,"tag":601,"props":1367,"children":1368},{"style":766},[1369],{"type":564,"value":877},{"type":559,"tag":601,"props":1371,"children":1372},{"style":766},[1373],{"type":564,"value":882},{"type":559,"tag":601,"props":1375,"children":1377},{"class":603,"line":1376},20,[1378,1383,1387,1391,1395,1399,1403,1407,1411],{"type":559,"tag":601,"props":1379,"children":1380},{"style":794},[1381],{"type":564,"value":1382},"    chars",{"type":559,"tag":601,"props":1384,"children":1385},{"style":766},[1386],{"type":564,"value":1078},{"type":559,"tag":601,"props":1388,"children":1389},{"style":794},[1390],{"type":564,"value":1083},{"type":559,"tag":601,"props":1392,"children":1393},{"style":766},[1394],{"type":564,"value":1088},{"type":559,"tag":601,"props":1396,"children":1397},{"style":766},[1398],{"type":564,"value":857},{"type":559,"tag":601,"props":1400,"children":1401},{"style":794},[1402],{"type":564,"value":997},{"type":559,"tag":601,"props":1404,"children":1405},{"style":766},[1406],{"type":564,"value":1078},{"type":559,"tag":601,"props":1408,"children":1409},{"style":794},[1410],{"type":564,"value":1083},{"type":559,"tag":601,"props":1412,"children":1413},{"style":766},[1414],{"type":564,"value":1232},{"type":559,"tag":601,"props":1416,"children":1418},{"class":603,"line":1417},21,[1419],{"type":559,"tag":601,"props":1420,"children":1421},{"style":766},[1422],{"type":564,"value":1289},{"type":559,"tag":601,"props":1424,"children":1426},{"class":603,"line":1425},22,[1427],{"type":559,"tag":601,"props":1428,"children":1429},{"emptyLinePlaceholder":1018},[1430],{"type":564,"value":1021},{"type":559,"tag":601,"props":1432,"children":1434},{"class":603,"line":1433},23,[1435,1440,1444,1448,1452],{"type":559,"tag":601,"props":1436,"children":1437},{"style":772},[1438],{"type":564,"value":1439},"  return",{"type":559,"tag":601,"props":1441,"children":1442},{"style":794},[1443],{"type":564,"value":997},{"type":559,"tag":601,"props":1445,"children":1446},{"style":766},[1447],{"type":564,"value":910},{"type":559,"tag":601,"props":1449,"children":1450},{"style":913},[1451],{"type":564,"value":916},{"type":559,"tag":601,"props":1453,"children":1454},{"style":766},[1455],{"type":564,"value":921},{"type":559,"tag":601,"props":1457,"children":1459},{"class":603,"line":1458},24,[1460],{"type":559,"tag":601,"props":1461,"children":1462},{"style":766},[1463],{"type":564,"value":1464},"};\n",{"type":559,"tag":1466,"props":1467,"children":1468},"style",{},[1469],{"type":564,"value":1470},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":552,"searchDepth":839,"depth":839,"links":1472},[1473,1474],{"id":724,"depth":613,"text":724},{"id":729,"depth":613,"text":729,"children":1475},[1476],{"id":735,"depth":622,"text":735},"markdown","content:1.algorithm:3.leetcode:3.major:443.string-compression.md","content","1.algorithm/3.leetcode/3.major/443.string-compression.md","md",[1483,1485],{"_path":237,"title":236,"description":1484},"给定两个字符串形式的非负整数 num1 和 num2 ，计算它们的和并同样以字符串形式返回。",{"_path":243,"title":242,"description":1486},"斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：",1715007497690]